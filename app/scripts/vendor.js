require=(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
/**
 * @license AngularJS v1.5.11
 * (c) 2010-2017 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function(window, angular) {'use strict';

/**
 * @ngdoc module
 * @name ngCookies
 * @description
 *
 * # ngCookies
 *
 * The `ngCookies` module provides a convenient wrapper for reading and writing browser cookies.
 *
 *
 * <div doc-module-components="ngCookies"></div>
 *
 * See {@link ngCookies.$cookies `$cookies`} for usage.
 */


angular.module('ngCookies', ['ng']).
  /**
   * @ngdoc provider
   * @name $cookiesProvider
   * @description
   * Use `$cookiesProvider` to change the default behavior of the {@link ngCookies.$cookies $cookies} service.
   * */
   provider('$cookies', [/** @this */function $CookiesProvider() {
    /**
     * @ngdoc property
     * @name $cookiesProvider#defaults
     * @description
     *
     * Object containing default options to pass when setting cookies.
     *
     * The object may have following properties:
     *
     * - **path** - `{string}` - The cookie will be available only for this path and its
     *   sub-paths. By default, this is the URL that appears in your `<base>` tag.
     * - **domain** - `{string}` - The cookie will be available only for this domain and
     *   its sub-domains. For security reasons the user agent will not accept the cookie
     *   if the current domain is not a sub-domain of this domain or equal to it.
     * - **expires** - `{string|Date}` - String of the form "Wdy, DD Mon YYYY HH:MM:SS GMT"
     *   or a Date object indicating the exact date/time this cookie will expire.
     * - **secure** - `{boolean}` - If `true`, then the cookie will only be available through a
     *   secured connection.
     *
     * Note: By default, the address that appears in your `<base>` tag will be used as the path.
     * This is important so that cookies will be visible for all routes when html5mode is enabled.
     *
     * @example
     *
     * ```js
     * angular.module('cookiesProviderExample', ['ngCookies'])
     *   .config(['$cookiesProvider', function($cookiesProvider) {
     *     // Setting default options
     *     $cookiesProvider.defaults.domain = 'foo.com';
     *     $cookiesProvider.defaults.secure = true;
     *   }]);
     * ```
     **/
    var defaults = this.defaults = {};

    function calcOptions(options) {
      return options ? angular.extend({}, defaults, options) : defaults;
    }

    /**
     * @ngdoc service
     * @name $cookies
     *
     * @description
     * Provides read/write access to browser's cookies.
     *
     * <div class="alert alert-info">
     * Up until Angular 1.3, `$cookies` exposed properties that represented the
     * current browser cookie values. In version 1.4, this behavior has changed, and
     * `$cookies` now provides a standard api of getters, setters etc.
     * </div>
     *
     * Requires the {@link ngCookies `ngCookies`} module to be installed.
     *
     * @example
     *
     * ```js
     * angular.module('cookiesExample', ['ngCookies'])
     *   .controller('ExampleController', ['$cookies', function($cookies) {
     *     // Retrieving a cookie
     *     var favoriteCookie = $cookies.get('myFavorite');
     *     // Setting a cookie
     *     $cookies.put('myFavorite', 'oatmeal');
     *   }]);
     * ```
     */
    this.$get = ['$$cookieReader', '$$cookieWriter', function($$cookieReader, $$cookieWriter) {
      return {
        /**
         * @ngdoc method
         * @name $cookies#get
         *
         * @description
         * Returns the value of given cookie key
         *
         * @param {string} key Id to use for lookup.
         * @returns {string} Raw cookie value.
         */
        get: function(key) {
          return $$cookieReader()[key];
        },

        /**
         * @ngdoc method
         * @name $cookies#getObject
         *
         * @description
         * Returns the deserialized value of given cookie key
         *
         * @param {string} key Id to use for lookup.
         * @returns {Object} Deserialized cookie value.
         */
        getObject: function(key) {
          var value = this.get(key);
          return value ? angular.fromJson(value) : value;
        },

        /**
         * @ngdoc method
         * @name $cookies#getAll
         *
         * @description
         * Returns a key value object with all the cookies
         *
         * @returns {Object} All cookies
         */
        getAll: function() {
          return $$cookieReader();
        },

        /**
         * @ngdoc method
         * @name $cookies#put
         *
         * @description
         * Sets a value for given cookie key
         *
         * @param {string} key Id for the `value`.
         * @param {string} value Raw value to be stored.
         * @param {Object=} options Options object.
         *    See {@link ngCookies.$cookiesProvider#defaults $cookiesProvider.defaults}
         */
        put: function(key, value, options) {
          $$cookieWriter(key, value, calcOptions(options));
        },

        /**
         * @ngdoc method
         * @name $cookies#putObject
         *
         * @description
         * Serializes and sets a value for given cookie key
         *
         * @param {string} key Id for the `value`.
         * @param {Object} value Value to be stored.
         * @param {Object=} options Options object.
         *    See {@link ngCookies.$cookiesProvider#defaults $cookiesProvider.defaults}
         */
        putObject: function(key, value, options) {
          this.put(key, angular.toJson(value), options);
        },

        /**
         * @ngdoc method
         * @name $cookies#remove
         *
         * @description
         * Remove given cookie
         *
         * @param {string} key Id of the key-value pair to delete.
         * @param {Object=} options Options object.
         *    See {@link ngCookies.$cookiesProvider#defaults $cookiesProvider.defaults}
         */
        remove: function(key, options) {
          $$cookieWriter(key, undefined, calcOptions(options));
        }
      };
    }];
  }]);

angular.module('ngCookies').
/**
 * @ngdoc service
 * @name $cookieStore
 * @deprecated
 * sinceVersion="v1.4.0"
 * Please use the {@link ngCookies.$cookies `$cookies`} service instead.
 *
 * @requires $cookies
 *
 * @description
 * Provides a key-value (string-object) storage, that is backed by session cookies.
 * Objects put or retrieved from this storage are automatically serialized or
 * deserialized by angular's toJson/fromJson.
 *
 * Requires the {@link ngCookies `ngCookies`} module to be installed.
 *
 * @example
 *
 * ```js
 * angular.module('cookieStoreExample', ['ngCookies'])
 *   .controller('ExampleController', ['$cookieStore', function($cookieStore) {
 *     // Put cookie
 *     $cookieStore.put('myFavorite','oatmeal');
 *     // Get cookie
 *     var favoriteCookie = $cookieStore.get('myFavorite');
 *     // Removing a cookie
 *     $cookieStore.remove('myFavorite');
 *   }]);
 * ```
 */
 factory('$cookieStore', ['$cookies', function($cookies) {

    return {
      /**
       * @ngdoc method
       * @name $cookieStore#get
       *
       * @description
       * Returns the value of given cookie key
       *
       * @param {string} key Id to use for lookup.
       * @returns {Object} Deserialized cookie value, undefined if the cookie does not exist.
       */
      get: function(key) {
        return $cookies.getObject(key);
      },

      /**
       * @ngdoc method
       * @name $cookieStore#put
       *
       * @description
       * Sets a value for given cookie key
       *
       * @param {string} key Id for the `value`.
       * @param {Object} value Value to be stored.
       */
      put: function(key, value) {
        $cookies.putObject(key, value);
      },

      /**
       * @ngdoc method
       * @name $cookieStore#remove
       *
       * @description
       * Remove given cookie
       *
       * @param {string} key Id of the key-value pair to delete.
       */
      remove: function(key) {
        $cookies.remove(key);
      }
    };

  }]);

/**
 * @name $$cookieWriter
 * @requires $document
 *
 * @description
 * This is a private service for writing cookies
 *
 * @param {string} name Cookie name
 * @param {string=} value Cookie value (if undefined, cookie will be deleted)
 * @param {Object=} options Object with options that need to be stored for the cookie.
 */
function $$CookieWriter($document, $log, $browser) {
  var cookiePath = $browser.baseHref();
  var rawDocument = $document[0];

  function buildCookieString(name, value, options) {
    var path, expires;
    options = options || {};
    expires = options.expires;
    path = angular.isDefined(options.path) ? options.path : cookiePath;
    if (angular.isUndefined(value)) {
      expires = 'Thu, 01 Jan 1970 00:00:00 GMT';
      value = '';
    }
    if (angular.isString(expires)) {
      expires = new Date(expires);
    }

    var str = encodeURIComponent(name) + '=' + encodeURIComponent(value);
    str += path ? ';path=' + path : '';
    str += options.domain ? ';domain=' + options.domain : '';
    str += expires ? ';expires=' + expires.toUTCString() : '';
    str += options.secure ? ';secure' : '';

    // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:
    // - 300 cookies
    // - 20 cookies per unique domain
    // - 4096 bytes per cookie
    var cookieLength = str.length + 1;
    if (cookieLength > 4096) {
      $log.warn('Cookie \'' + name +
        '\' possibly not set or overflowed because it was too large (' +
        cookieLength + ' > 4096 bytes)!');
    }

    return str;
  }

  return function(name, value, options) {
    rawDocument.cookie = buildCookieString(name, value, options);
  };
}

$$CookieWriter.$inject = ['$document', '$log', '$browser'];

angular.module('ngCookies').provider('$$cookieWriter', /** @this */ function $$CookieWriterProvider() {
  this.$get = $$CookieWriter;
});


})(window, window.angular);

},{}],2:[function(require,module,exports){
/**
 * @license AngularJS v1.5.11
 * (c) 2010-2017 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function(window, angular) {'use strict';

var $resourceMinErr = angular.$$minErr('$resource');

// Helper functions and regex to lookup a dotted path on an object
// stopping at undefined/null.  The path must be composed of ASCII
// identifiers (just like $parse)
var MEMBER_NAME_REGEX = /^(\.[a-zA-Z_$@][0-9a-zA-Z_$@]*)+$/;

function isValidDottedPath(path) {
  return (path != null && path !== '' && path !== 'hasOwnProperty' &&
      MEMBER_NAME_REGEX.test('.' + path));
}

function lookupDottedPath(obj, path) {
  if (!isValidDottedPath(path)) {
    throw $resourceMinErr('badmember', 'Dotted member path "@{0}" is invalid.', path);
  }
  var keys = path.split('.');
  for (var i = 0, ii = keys.length; i < ii && angular.isDefined(obj); i++) {
    var key = keys[i];
    obj = (obj !== null) ? obj[key] : undefined;
  }
  return obj;
}

/**
 * Create a shallow copy of an object and clear other fields from the destination
 */
function shallowClearAndCopy(src, dst) {
  dst = dst || {};

  angular.forEach(dst, function(value, key) {
    delete dst[key];
  });

  for (var key in src) {
    if (src.hasOwnProperty(key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {
      dst[key] = src[key];
    }
  }

  return dst;
}

/**
 * @ngdoc module
 * @name ngResource
 * @description
 *
 * # ngResource
 *
 * The `ngResource` module provides interaction support with RESTful services
 * via the $resource service.
 *
 *
 * <div doc-module-components="ngResource"></div>
 *
 * See {@link ngResource.$resourceProvider} and {@link ngResource.$resource} for usage.
 */

/**
 * @ngdoc provider
 * @name $resourceProvider
 *
 * @description
 *
 * Use `$resourceProvider` to change the default behavior of the {@link ngResource.$resource}
 * service.
 *
 * ## Dependencies
 * Requires the {@link ngResource } module to be installed.
 *
 */

/**
 * @ngdoc service
 * @name $resource
 * @requires $http
 * @requires ng.$log
 * @requires $q
 * @requires ng.$timeout
 *
 * @description
 * A factory which creates a resource object that lets you interact with
 * [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) server-side data sources.
 *
 * The returned resource object has action methods which provide high-level behaviors without
 * the need to interact with the low level {@link ng.$http $http} service.
 *
 * Requires the {@link ngResource `ngResource`} module to be installed.
 *
 * By default, trailing slashes will be stripped from the calculated URLs,
 * which can pose problems with server backends that do not expect that
 * behavior.  This can be disabled by configuring the `$resourceProvider` like
 * this:
 *
 * ```js
     app.config(['$resourceProvider', function($resourceProvider) {
       // Don't strip trailing slashes from calculated URLs
       $resourceProvider.defaults.stripTrailingSlashes = false;
     }]);
 * ```
 *
 * @param {string} url A parameterized URL template with parameters prefixed by `:` as in
 *   `/user/:username`. If you are using a URL with a port number (e.g.
 *   `http://example.com:8080/api`), it will be respected.
 *
 *   If you are using a url with a suffix, just add the suffix, like this:
 *   `$resource('http://example.com/resource.json')` or `$resource('http://example.com/:id.json')`
 *   or even `$resource('http://example.com/resource/:resource_id.:format')`
 *   If the parameter before the suffix is empty, :resource_id in this case, then the `/.` will be
 *   collapsed down to a single `.`.  If you need this sequence to appear and not collapse then you
 *   can escape it with `/\.`.
 *
 * @param {Object=} paramDefaults Default values for `url` parameters. These can be overridden in
 *   `actions` methods. If a parameter value is a function, it will be called every time
 *   a param value needs to be obtained for a request (unless the param was overridden). The function
 *   will be passed the current data value as an argument.
 *
 *   Each key value in the parameter object is first bound to url template if present and then any
 *   excess keys are appended to the url search query after the `?`.
 *
 *   Given a template `/path/:verb` and parameter `{verb:'greet', salutation:'Hello'}` results in
 *   URL `/path/greet?salutation=Hello`.
 *
 *   If the parameter value is prefixed with `@`, then the value for that parameter will be
 *   extracted from the corresponding property on the `data` object (provided when calling a
 *   "non-GET" action method).
 *   For example, if the `defaultParam` object is `{someParam: '@someProp'}` then the value of
 *   `someParam` will be `data.someProp`.
 *   Note that the parameter will be ignored, when calling a "GET" action method (i.e. an action
 *   method that does not accept a request body)
 *
 * @param {Object.<Object>=} actions Hash with declaration of custom actions that should extend
 *   the default set of resource actions. The declaration should be created in the format of {@link
 *   ng.$http#usage $http.config}:
 *
 *       {action1: {method:?, params:?, isArray:?, headers:?, ...},
 *        action2: {method:?, params:?, isArray:?, headers:?, ...},
 *        ...}
 *
 *   Where:
 *
 *   - **`action`** – {string} – The name of action. This name becomes the name of the method on
 *     your resource object.
 *   - **`method`** – {string} – Case insensitive HTTP method (e.g. `GET`, `POST`, `PUT`,
 *     `DELETE`, `JSONP`, etc).
 *   - **`params`** – {Object=} – Optional set of pre-bound parameters for this action. If any of
 *     the parameter value is a function, it will be called every time when a param value needs to
 *     be obtained for a request (unless the param was overridden). The function will be passed the
 *     current data value as an argument.
 *   - **`url`** – {string} – action specific `url` override. The url templating is supported just
 *     like for the resource-level urls.
 *   - **`isArray`** – {boolean=} – If true then the returned object for this action is an array,
 *     see `returns` section.
 *   - **`transformRequest`** –
 *     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
 *     transform function or an array of such functions. The transform function takes the http
 *     request body and headers and returns its transformed (typically serialized) version.
 *     By default, transformRequest will contain one function that checks if the request data is
 *     an object and serializes it using `angular.toJson`. To prevent this behavior, set
 *     `transformRequest` to an empty array: `transformRequest: []`
 *   - **`transformResponse`** –
 *     `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –
 *     transform function or an array of such functions. The transform function takes the http
 *     response body, headers and status and returns its transformed (typically deserialized)
 *     version.
 *     By default, transformResponse will contain one function that checks if the response looks
 *     like a JSON string and deserializes it using `angular.fromJson`. To prevent this behavior,
 *     set `transformResponse` to an empty array: `transformResponse: []`
 *   - **`cache`** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the
 *     GET request, otherwise if a cache instance built with
 *     {@link ng.$cacheFactory $cacheFactory}, this cache will be used for
 *     caching.
 *   - **`timeout`** – `{number}` – timeout in milliseconds.<br />
 *     **Note:** In contrast to {@link ng.$http#usage $http.config}, {@link ng.$q promises} are
 *     **not** supported in $resource, because the same value would be used for multiple requests.
 *     If you are looking for a way to cancel requests, you should use the `cancellable` option.
 *   - **`cancellable`** – `{boolean}` – if set to true, the request made by a "non-instance" call
 *     will be cancelled (if not already completed) by calling `$cancelRequest()` on the call's
 *     return value. Calling `$cancelRequest()` for a non-cancellable or an already
 *     completed/cancelled request will have no effect.<br />
 *   - **`withCredentials`** - `{boolean}` - whether to set the `withCredentials` flag on the
 *     XHR object. See
 *     [requests with credentials](https://developer.mozilla.org/en/http_access_control#section_5)
 *     for more information.
 *   - **`responseType`** - `{string}` - see
 *     [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).
 *   - **`interceptor`** - `{Object=}` - The interceptor object has two optional methods -
 *     `response` and `responseError`. Both `response` and `responseError` interceptors get called
 *     with `http response` object. See {@link ng.$http $http interceptors}.
 *
 * @param {Object} options Hash with custom settings that should extend the
 *   default `$resourceProvider` behavior.  The supported options are:
 *
 *   - **`stripTrailingSlashes`** – {boolean} – If true then the trailing
 *   slashes from any calculated URL will be stripped. (Defaults to true.)
 *   - **`cancellable`** – {boolean} – If true, the request made by a "non-instance" call will be
 *   cancelled (if not already completed) by calling `$cancelRequest()` on the call's return value.
 *   This can be overwritten per action. (Defaults to false.)
 *
 * @returns {Object} A resource "class" object with methods for the default set of resource actions
 *   optionally extended with custom `actions`. The default set contains these actions:
 *   ```js
 *   { 'get':    {method:'GET'},
 *     'save':   {method:'POST'},
 *     'query':  {method:'GET', isArray:true},
 *     'remove': {method:'DELETE'},
 *     'delete': {method:'DELETE'} };
 *   ```
 *
 *   Calling these methods invoke an {@link ng.$http} with the specified http method,
 *   destination and parameters. When the data is returned from the server then the object is an
 *   instance of the resource class. The actions `save`, `remove` and `delete` are available on it
 *   as  methods with the `$` prefix. This allows you to easily perform CRUD operations (create,
 *   read, update, delete) on server-side data like this:
 *   ```js
 *   var User = $resource('/user/:userId', {userId:'@id'});
 *   var user = User.get({userId:123}, function() {
 *     user.abc = true;
 *     user.$save();
 *   });
 *   ```
 *
 *   It is important to realize that invoking a $resource object method immediately returns an
 *   empty reference (object or array depending on `isArray`). Once the data is returned from the
 *   server the existing reference is populated with the actual data. This is a useful trick since
 *   usually the resource is assigned to a model which is then rendered by the view. Having an empty
 *   object results in no rendering, once the data arrives from the server then the object is
 *   populated with the data and the view automatically re-renders itself showing the new data. This
 *   means that in most cases one never has to write a callback function for the action methods.
 *
 *   The action methods on the class object or instance object can be invoked with the following
 *   parameters:
 *
 *   - HTTP GET "class" actions: `Resource.action([parameters], [success], [error])`
 *   - non-GET "class" actions: `Resource.action([parameters], postData, [success], [error])`
 *   - non-GET instance actions:  `instance.$action([parameters], [success], [error])`
 *
 *
 *   Success callback is called with (value (Object|Array), responseHeaders (Function),
 *   status (number), statusText (string)) arguments, where the value is the populated resource
 *   instance or collection object. The error callback is called with (httpResponse) argument.
 *
 *   Class actions return empty instance (with additional properties below).
 *   Instance actions return promise of the action.
 *
 *   The Resource instances and collections have these additional properties:
 *
 *   - `$promise`: the {@link ng.$q promise} of the original server interaction that created this
 *     instance or collection.
 *
 *     On success, the promise is resolved with the same resource instance or collection object,
 *     updated with data from server. This makes it easy to use in
 *     {@link ngRoute.$routeProvider resolve section of $routeProvider.when()} to defer view
 *     rendering until the resource(s) are loaded.
 *
 *     On failure, the promise is rejected with the {@link ng.$http http response} object, without
 *     the `resource` property.
 *
 *     If an interceptor object was provided, the promise will instead be resolved with the value
 *     returned by the interceptor.
 *
 *   - `$resolved`: `true` after first server interaction is completed (either with success or
 *      rejection), `false` before that. Knowing if the Resource has been resolved is useful in
 *      data-binding.
 *
 *   The Resource instances and collections have these additional methods:
 *
 *   - `$cancelRequest`: If there is a cancellable, pending request related to the instance or
 *      collection, calling this method will abort the request.
 *
 *   The Resource instances have these additional methods:
 *
 *   - `toJSON`: It returns a simple object without any of the extra properties added as part of
 *     the Resource API. This object can be serialized through {@link angular.toJson} safely
 *     without attaching Angular-specific fields. Notice that `JSON.stringify` (and
 *     `angular.toJson`) automatically use this method when serializing a Resource instance
 *     (see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON()_behavior)).
 *
 * @example
 *
 * # Credit card resource
 *
 * ```js
     // Define CreditCard class
     var CreditCard = $resource('/user/:userId/card/:cardId',
      {userId:123, cardId:'@id'}, {
       charge: {method:'POST', params:{charge:true}}
      });

     // We can retrieve a collection from the server
     var cards = CreditCard.query(function() {
       // GET: /user/123/card
       // server returns: [ {id:456, number:'1234', name:'Smith'} ];

       var card = cards[0];
       // each item is an instance of CreditCard
       expect(card instanceof CreditCard).toEqual(true);
       card.name = "J. Smith";
       // non GET methods are mapped onto the instances
       card.$save();
       // POST: /user/123/card/456 {id:456, number:'1234', name:'J. Smith'}
       // server returns: {id:456, number:'1234', name: 'J. Smith'};

       // our custom method is mapped as well.
       card.$charge({amount:9.99});
       // POST: /user/123/card/456?amount=9.99&charge=true {id:456, number:'1234', name:'J. Smith'}
     });

     // we can create an instance as well
     var newCard = new CreditCard({number:'0123'});
     newCard.name = "Mike Smith";
     newCard.$save();
     // POST: /user/123/card {number:'0123', name:'Mike Smith'}
     // server returns: {id:789, number:'0123', name: 'Mike Smith'};
     expect(newCard.id).toEqual(789);
 * ```
 *
 * The object returned from this function execution is a resource "class" which has "static" method
 * for each action in the definition.
 *
 * Calling these methods invoke `$http` on the `url` template with the given `method`, `params` and
 * `headers`.
 *
 * @example
 *
 * # User resource
 *
 * When the data is returned from the server then the object is an instance of the resource type and
 * all of the non-GET methods are available with `$` prefix. This allows you to easily support CRUD
 * operations (create, read, update, delete) on server-side data.

   ```js
     var User = $resource('/user/:userId', {userId:'@id'});
     User.get({userId:123}, function(user) {
       user.abc = true;
       user.$save();
     });
   ```
 *
 * It's worth noting that the success callback for `get`, `query` and other methods gets passed
 * in the response that came from the server as well as $http header getter function, so one
 * could rewrite the above example and get access to http headers as:
 *
   ```js
     var User = $resource('/user/:userId', {userId:'@id'});
     User.get({userId:123}, function(user, getResponseHeaders){
       user.abc = true;
       user.$save(function(user, putResponseHeaders) {
         //user => saved user object
         //putResponseHeaders => $http header getter
       });
     });
   ```
 *
 * You can also access the raw `$http` promise via the `$promise` property on the object returned
 *
   ```
     var User = $resource('/user/:userId', {userId:'@id'});
     User.get({userId:123})
         .$promise.then(function(user) {
           $scope.user = user;
         });
   ```
 *
 * @example
 *
 * # Creating a custom 'PUT' request
 *
 * In this example we create a custom method on our resource to make a PUT request
 * ```js
 *    var app = angular.module('app', ['ngResource', 'ngRoute']);
 *
 *    // Some APIs expect a PUT request in the format URL/object/ID
 *    // Here we are creating an 'update' method
 *    app.factory('Notes', ['$resource', function($resource) {
 *    return $resource('/notes/:id', null,
 *        {
 *            'update': { method:'PUT' }
 *        });
 *    }]);
 *
 *    // In our controller we get the ID from the URL using ngRoute and $routeParams
 *    // We pass in $routeParams and our Notes factory along with $scope
 *    app.controller('NotesCtrl', ['$scope', '$routeParams', 'Notes',
                                      function($scope, $routeParams, Notes) {
 *    // First get a note object from the factory
 *    var note = Notes.get({ id:$routeParams.id });
 *    $id = note.id;
 *
 *    // Now call update passing in the ID first then the object you are updating
 *    Notes.update({ id:$id }, note);
 *
 *    // This will PUT /notes/ID with the note object in the request payload
 *    }]);
 * ```
 *
 * @example
 *
 * # Cancelling requests
 *
 * If an action's configuration specifies that it is cancellable, you can cancel the request related
 * to an instance or collection (as long as it is a result of a "non-instance" call):
 *
   ```js
     // ...defining the `Hotel` resource...
     var Hotel = $resource('/api/hotel/:id', {id: '@id'}, {
       // Let's make the `query()` method cancellable
       query: {method: 'get', isArray: true, cancellable: true}
     });

     // ...somewhere in the PlanVacationController...
     ...
     this.onDestinationChanged = function onDestinationChanged(destination) {
       // We don't care about any pending request for hotels
       // in a different destination any more
       this.availableHotels.$cancelRequest();

       // Let's query for hotels in '<destination>'
       // (calls: /api/hotel?location=<destination>)
       this.availableHotels = Hotel.query({location: destination});
     };
   ```
 *
 */
angular.module('ngResource', ['ng']).
  provider('$resource', function ResourceProvider() {
    var PROTOCOL_AND_DOMAIN_REGEX = /^https?:\/\/[^/]*/;

    var provider = this;

    /**
     * @ngdoc property
     * @name $resourceProvider#defaults
     * @description
     * Object containing default options used when creating `$resource` instances.
     *
     * The default values satisfy a wide range of usecases, but you may choose to overwrite any of
     * them to further customize your instances. The available properties are:
     *
     * - **stripTrailingSlashes** – `{boolean}` – If true, then the trailing slashes from any
     *   calculated URL will be stripped.<br />
     *   (Defaults to true.)
     * - **cancellable** – `{boolean}` – If true, the request made by a "non-instance" call will be
     *   cancelled (if not already completed) by calling `$cancelRequest()` on the call's return
     *   value. For more details, see {@link ngResource.$resource}. This can be overwritten per
     *   resource class or action.<br />
     *   (Defaults to false.)
     * - **actions** - `{Object.<Object>}` - A hash with default actions declarations. Actions are
     *   high-level methods corresponding to RESTful actions/methods on resources. An action may
     *   specify what HTTP method to use, what URL to hit, if the return value will be a single
     *   object or a collection (array) of objects etc. For more details, see
     *   {@link ngResource.$resource}. The actions can also be enhanced or overwritten per resource
     *   class.<br />
     *   The default actions are:
     *   ```js
     *   {
     *     get: {method: 'GET'},
     *     save: {method: 'POST'},
     *     query: {method: 'GET', isArray: true},
     *     remove: {method: 'DELETE'},
     *     delete: {method: 'DELETE'}
     *   }
     *   ```
     *
     * #### Example
     *
     * For example, you can specify a new `update` action that uses the `PUT` HTTP verb:
     *
     * ```js
     *   angular.
     *     module('myApp').
     *     config(['$resourceProvider', function ($resourceProvider) {
     *       $resourceProvider.defaults.actions.update = {
     *         method: 'PUT'
     *       };
     *     });
     * ```
     *
     * Or you can even overwrite the whole `actions` list and specify your own:
     *
     * ```js
     *   angular.
     *     module('myApp').
     *     config(['$resourceProvider', function ($resourceProvider) {
     *       $resourceProvider.defaults.actions = {
     *         create: {method: 'POST'},
     *         get:    {method: 'GET'},
     *         getAll: {method: 'GET', isArray:true},
     *         update: {method: 'PUT'},
     *         delete: {method: 'DELETE'}
     *       };
     *     });
     * ```
     *
     */
    this.defaults = {
      // Strip slashes by default
      stripTrailingSlashes: true,

      // Make non-instance requests cancellable (via `$cancelRequest()`)
      cancellable: false,

      // Default actions configuration
      actions: {
        'get': {method: 'GET'},
        'save': {method: 'POST'},
        'query': {method: 'GET', isArray: true},
        'remove': {method: 'DELETE'},
        'delete': {method: 'DELETE'}
      }
    };

    this.$get = ['$http', '$log', '$q', '$timeout', function($http, $log, $q, $timeout) {

      var noop = angular.noop,
        forEach = angular.forEach,
        extend = angular.extend,
        copy = angular.copy,
        isArray = angular.isArray,
        isDefined = angular.isDefined,
        isFunction = angular.isFunction,
        isNumber = angular.isNumber;

      /**
       * We need our custom method because encodeURIComponent is too aggressive and doesn't follow
       * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set
       * (pchar) allowed in path segments:
       *    segment       = *pchar
       *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
       *    pct-encoded   = "%" HEXDIG HEXDIG
       *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
       *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
       *                     / "*" / "+" / "," / ";" / "="
       */
      function encodeUriSegment(val) {
        return encodeUriQuery(val, true).
          replace(/%26/gi, '&').
          replace(/%3D/gi, '=').
          replace(/%2B/gi, '+');
      }


      /**
       * This method is intended for encoding *key* or *value* parts of query component. We need a
       * custom method because encodeURIComponent is too aggressive and encodes stuff that doesn't
       * have to be encoded per http://tools.ietf.org/html/rfc3986:
       *    query       = *( pchar / "/" / "?" )
       *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
       *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
       *    pct-encoded   = "%" HEXDIG HEXDIG
       *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
       *                     / "*" / "+" / "," / ";" / "="
       */
      function encodeUriQuery(val, pctEncodeSpaces) {
        return encodeURIComponent(val).
          replace(/%40/gi, '@').
          replace(/%3A/gi, ':').
          replace(/%24/g, '$').
          replace(/%2C/gi, ',').
          replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));
      }

      function Route(template, defaults) {
        this.template = template;
        this.defaults = extend({}, provider.defaults, defaults);
        this.urlParams = {};
      }

      Route.prototype = {
        setUrlParams: function(config, params, actionUrl) {
          var self = this,
            url = actionUrl || self.template,
            val,
            encodedVal,
            protocolAndDomain = '';

          var urlParams = self.urlParams = {};
          forEach(url.split(/\W/), function(param) {
            if (param === 'hasOwnProperty') {
              throw $resourceMinErr('badname', 'hasOwnProperty is not a valid parameter name.');
            }
            if (!(new RegExp('^\\d+$').test(param)) && param &&
              (new RegExp('(^|[^\\\\]):' + param + '(\\W|$)').test(url))) {
              urlParams[param] = {
                isQueryParamValue: (new RegExp('\\?.*=:' + param + '(?:\\W|$)')).test(url)
              };
            }
          });
          url = url.replace(/\\:/g, ':');
          url = url.replace(PROTOCOL_AND_DOMAIN_REGEX, function(match) {
            protocolAndDomain = match;
            return '';
          });

          params = params || {};
          forEach(self.urlParams, function(paramInfo, urlParam) {
            val = params.hasOwnProperty(urlParam) ? params[urlParam] : self.defaults[urlParam];
            if (isDefined(val) && val !== null) {
              if (paramInfo.isQueryParamValue) {
                encodedVal = encodeUriQuery(val, true);
              } else {
                encodedVal = encodeUriSegment(val);
              }
              url = url.replace(new RegExp(':' + urlParam + '(\\W|$)', 'g'), function(match, p1) {
                return encodedVal + p1;
              });
            } else {
              url = url.replace(new RegExp('(/?):' + urlParam + '(\\W|$)', 'g'), function(match,
                  leadingSlashes, tail) {
                if (tail.charAt(0) === '/') {
                  return tail;
                } else {
                  return leadingSlashes + tail;
                }
              });
            }
          });

          // strip trailing slashes and set the url (unless this behavior is specifically disabled)
          if (self.defaults.stripTrailingSlashes) {
            url = url.replace(/\/+$/, '') || '/';
          }

          // then replace collapse `/.` if found in the last URL path segment before the query
          // E.g. `http://url.com/id./format?q=x` becomes `http://url.com/id.format?q=x`
          url = url.replace(/\/\.(?=\w+($|\?))/, '.');
          // replace escaped `/\.` with `/.`
          config.url = protocolAndDomain + url.replace(/\/\\\./, '/.');


          // set params - delegate param encoding to $http
          forEach(params, function(value, key) {
            if (!self.urlParams[key]) {
              config.params = config.params || {};
              config.params[key] = value;
            }
          });
        }
      };


      function resourceFactory(url, paramDefaults, actions, options) {
        var route = new Route(url, options);

        actions = extend({}, provider.defaults.actions, actions);

        function extractParams(data, actionParams) {
          var ids = {};
          actionParams = extend({}, paramDefaults, actionParams);
          forEach(actionParams, function(value, key) {
            if (isFunction(value)) { value = value(data); }
            ids[key] = value && value.charAt && value.charAt(0) === '@' ?
              lookupDottedPath(data, value.substr(1)) : value;
          });
          return ids;
        }

        function defaultResponseInterceptor(response) {
          return response.resource;
        }

        function Resource(value) {
          shallowClearAndCopy(value || {}, this);
        }

        Resource.prototype.toJSON = function() {
          var data = extend({}, this);
          delete data.$promise;
          delete data.$resolved;
          delete data.$cancelRequest;
          return data;
        };

        forEach(actions, function(action, name) {
          var hasBody = /^(POST|PUT|PATCH)$/i.test(action.method);
          var numericTimeout = action.timeout;
          var cancellable = isDefined(action.cancellable) ?
              action.cancellable : route.defaults.cancellable;

          if (numericTimeout && !isNumber(numericTimeout)) {
            $log.debug('ngResource:\n' +
                       '  Only numeric values are allowed as `timeout`.\n' +
                       '  Promises are not supported in $resource, because the same value would ' +
                       'be used for multiple requests. If you are looking for a way to cancel ' +
                       'requests, you should use the `cancellable` option.');
            delete action.timeout;
            numericTimeout = null;
          }

          Resource[name] = function(a1, a2, a3, a4) {
            var params = {}, data, success, error;

            switch (arguments.length) {
              case 4:
                error = a4;
                success = a3;
                // falls through
              case 3:
              case 2:
                if (isFunction(a2)) {
                  if (isFunction(a1)) {
                    success = a1;
                    error = a2;
                    break;
                  }

                  success = a2;
                  error = a3;
                  // falls through
                } else {
                  params = a1;
                  data = a2;
                  success = a3;
                  break;
                }
                // falls through
              case 1:
                if (isFunction(a1)) success = a1;
                else if (hasBody) data = a1;
                else params = a1;
                break;
              case 0: break;
              default:
                throw $resourceMinErr('badargs',
                  'Expected up to 4 arguments [params, data, success, error], got {0} arguments',
                  arguments.length);
            }

            var isInstanceCall = this instanceof Resource;
            var value = isInstanceCall ? data : (action.isArray ? [] : new Resource(data));
            var httpConfig = {};
            var responseInterceptor = action.interceptor && action.interceptor.response ||
              defaultResponseInterceptor;
            var responseErrorInterceptor = action.interceptor && action.interceptor.responseError ||
              undefined;
            var timeoutDeferred;
            var numericTimeoutPromise;

            forEach(action, function(value, key) {
              switch (key) {
                default:
                  httpConfig[key] = copy(value);
                  break;
                case 'params':
                case 'isArray':
                case 'interceptor':
                case 'cancellable':
                  break;
              }
            });

            if (!isInstanceCall && cancellable) {
              timeoutDeferred = $q.defer();
              httpConfig.timeout = timeoutDeferred.promise;

              if (numericTimeout) {
                numericTimeoutPromise = $timeout(timeoutDeferred.resolve, numericTimeout);
              }
            }

            if (hasBody) httpConfig.data = data;
            route.setUrlParams(httpConfig,
              extend({}, extractParams(data, action.params || {}), params),
              action.url);

            var promise = $http(httpConfig).then(function(response) {
              var data = response.data;

              if (data) {
                // Need to convert action.isArray to boolean in case it is undefined
                if (isArray(data) !== (!!action.isArray)) {
                  throw $resourceMinErr('badcfg',
                      'Error in resource configuration for action `{0}`. Expected response to ' +
                      'contain an {1} but got an {2} (Request: {3} {4})', name, action.isArray ? 'array' : 'object',
                    isArray(data) ? 'array' : 'object', httpConfig.method, httpConfig.url);
                }
                if (action.isArray) {
                  value.length = 0;
                  forEach(data, function(item) {
                    if (typeof item === 'object') {
                      value.push(new Resource(item));
                    } else {
                      // Valid JSON values may be string literals, and these should not be converted
                      // into objects. These items will not have access to the Resource prototype
                      // methods, but unfortunately there
                      value.push(item);
                    }
                  });
                } else {
                  var promise = value.$promise;     // Save the promise
                  shallowClearAndCopy(data, value);
                  value.$promise = promise;         // Restore the promise
                }
              }
              response.resource = value;

              return response;
            }, function(response) {
              (error || noop)(response);
              return $q.reject(response);
            });

            promise['finally'](function() {
              value.$resolved = true;
              if (!isInstanceCall && cancellable) {
                value.$cancelRequest = noop;
                $timeout.cancel(numericTimeoutPromise);
                timeoutDeferred = numericTimeoutPromise = httpConfig.timeout = null;
              }
            });

            promise = promise.then(
              function(response) {
                var value = responseInterceptor(response);
                (success || noop)(value, response.headers, response.status, response.statusText);
                return value;
              },
              responseErrorInterceptor);

            if (!isInstanceCall) {
              // we are creating instance / collection
              // - set the initial promise
              // - return the instance / collection
              value.$promise = promise;
              value.$resolved = false;
              if (cancellable) value.$cancelRequest = timeoutDeferred.resolve;

              return value;
            }

            // instance call
            return promise;
          };


          Resource.prototype['$' + name] = function(params, success, error) {
            if (isFunction(params)) {
              error = success; success = params; params = {};
            }
            var result = Resource[name].call(this, params, this, success, error);
            return result.$promise || result;
          };
        });

        Resource.bind = function(additionalParamDefaults) {
          var extendedParamDefaults = extend({}, paramDefaults, additionalParamDefaults);
          return resourceFactory(url, extendedParamDefaults, actions, options);
        };

        return Resource;
      }

      return resourceFactory;
    }];
  });


})(window, window.angular);

},{}],3:[function(require,module,exports){
/**
 * @license AngularJS v1.5.11
 * (c) 2010-2017 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function(window, angular) {'use strict';

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *     Any commits to this file should be reviewed with security in mind.  *
 *   Changes to this file can potentially create security vulnerabilities. *
 *          An approval from 2 Core members with history of modifying      *
 *                         this file is required.                          *
 *                                                                         *
 *  Does the change somehow allow for arbitrary javascript to be executed? *
 *    Or allows for someone to change the prototype of built-in objects?   *
 *     Or gives undesired access to variables likes document or window?    *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

var $sanitizeMinErr = angular.$$minErr('$sanitize');
var bind;
var extend;
var forEach;
var isDefined;
var lowercase;
var noop;
var htmlParser;
var htmlSanitizeWriter;

/**
 * @ngdoc module
 * @name ngSanitize
 * @description
 *
 * # ngSanitize
 *
 * The `ngSanitize` module provides functionality to sanitize HTML.
 *
 *
 * <div doc-module-components="ngSanitize"></div>
 *
 * See {@link ngSanitize.$sanitize `$sanitize`} for usage.
 */

/**
 * @ngdoc service
 * @name $sanitize
 * @kind function
 *
 * @description
 *   Sanitizes an html string by stripping all potentially dangerous tokens.
 *
 *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are
 *   then serialized back to properly escaped html string. This means that no unsafe input can make
 *   it into the returned string.
 *
 *   The whitelist for URL sanitization of attribute values is configured using the functions
 *   `aHrefSanitizationWhitelist` and `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider
 *   `$compileProvider`}.
 *
 *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.
 *
 * @param {string} html HTML input.
 * @returns {string} Sanitized HTML.
 *
 * @example
   <example module="sanitizeExample" deps="angular-sanitize.js" name="sanitize-service">
   <file name="index.html">
     <script>
         angular.module('sanitizeExample', ['ngSanitize'])
           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {
             $scope.snippet =
               '<p style="color:blue">an html\n' +
               '<em onmouseover="this.textContent=\'PWN3D!\'">click here</em>\n' +
               'snippet</p>';
             $scope.deliberatelyTrustDangerousSnippet = function() {
               return $sce.trustAsHtml($scope.snippet);
             };
           }]);
     </script>
     <div ng-controller="ExampleController">
        Snippet: <textarea ng-model="snippet" cols="60" rows="3"></textarea>
       <table>
         <tr>
           <td>Directive</td>
           <td>How</td>
           <td>Source</td>
           <td>Rendered</td>
         </tr>
         <tr id="bind-html-with-sanitize">
           <td>ng-bind-html</td>
           <td>Automatically uses $sanitize</td>
           <td><pre>&lt;div ng-bind-html="snippet"&gt;<br/>&lt;/div&gt;</pre></td>
           <td><div ng-bind-html="snippet"></div></td>
         </tr>
         <tr id="bind-html-with-trust">
           <td>ng-bind-html</td>
           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>
           <td>
           <pre>&lt;div ng-bind-html="deliberatelyTrustDangerousSnippet()"&gt;
&lt;/div&gt;</pre>
           </td>
           <td><div ng-bind-html="deliberatelyTrustDangerousSnippet()"></div></td>
         </tr>
         <tr id="bind-default">
           <td>ng-bind</td>
           <td>Automatically escapes</td>
           <td><pre>&lt;div ng-bind="snippet"&gt;<br/>&lt;/div&gt;</pre></td>
           <td><div ng-bind="snippet"></div></td>
         </tr>
       </table>
       </div>
   </file>
   <file name="protractor.js" type="protractor">
     it('should sanitize the html snippet by default', function() {
       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).
         toBe('<p>an html\n<em>click here</em>\nsnippet</p>');
     });

     it('should inline raw snippet if bound to a trusted value', function() {
       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).
         toBe("<p style=\"color:blue\">an html\n" +
              "<em onmouseover=\"this.textContent='PWN3D!'\">click here</em>\n" +
              "snippet</p>");
     });

     it('should escape snippet without any filter', function() {
       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).
         toBe("&lt;p style=\"color:blue\"&gt;an html\n" +
              "&lt;em onmouseover=\"this.textContent='PWN3D!'\"&gt;click here&lt;/em&gt;\n" +
              "snippet&lt;/p&gt;");
     });

     it('should update', function() {
       element(by.model('snippet')).clear();
       element(by.model('snippet')).sendKeys('new <b onclick="alert(1)">text</b>');
       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).
         toBe('new <b>text</b>');
       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(
         'new <b onclick="alert(1)">text</b>');
       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(
         "new &lt;b onclick=\"alert(1)\"&gt;text&lt;/b&gt;");
     });
   </file>
   </example>
 */


/**
 * @ngdoc provider
 * @name $sanitizeProvider
 * @this
 *
 * @description
 * Creates and configures {@link $sanitize} instance.
 */
function $SanitizeProvider() {
  var svgEnabled = false;

  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {
    if (svgEnabled) {
      extend(validElements, svgElements);
    }
    return function(html) {
      var buf = [];
      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {
        return !/^unsafe:/.test($$sanitizeUri(uri, isImage));
      }));
      return buf.join('');
    };
  }];


  /**
   * @ngdoc method
   * @name $sanitizeProvider#enableSvg
   * @kind function
   *
   * @description
   * Enables a subset of svg to be supported by the sanitizer.
   *
   * <div class="alert alert-warning">
   *   <p>By enabling this setting without taking other precautions, you might expose your
   *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned
   *   outside of the containing element and be rendered over other elements on the page (e.g. a login
   *   link). Such behavior can then result in phishing incidents.</p>
   *
   *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg
   *   tags within the sanitized content:</p>
   *
   *   <br>
   *
   *   <pre><code>
   *   .rootOfTheIncludedContent svg {
   *     overflow: hidden !important;
   *   }
   *   </code></pre>
   * </div>
   *
   * @param {boolean=} flag Enable or disable SVG support in the sanitizer.
   * @returns {boolean|ng.$sanitizeProvider} Returns the currently configured value if called
   *    without an argument or self for chaining otherwise.
   */
  this.enableSvg = function(enableSvg) {
    if (isDefined(enableSvg)) {
      svgEnabled = enableSvg;
      return this;
    } else {
      return svgEnabled;
    }
  };

  //////////////////////////////////////////////////////////////////////////////////////////////////
  // Private stuff
  //////////////////////////////////////////////////////////////////////////////////////////////////

  bind = angular.bind;
  extend = angular.extend;
  forEach = angular.forEach;
  isDefined = angular.isDefined;
  lowercase = angular.lowercase;
  noop = angular.noop;

  htmlParser = htmlParserImpl;
  htmlSanitizeWriter = htmlSanitizeWriterImpl;

  // Regular Expressions for parsing tags and attributes
  var SURROGATE_PAIR_REGEXP = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
    // Match everything outside of normal chars and " (quote character)
    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;


  // Good source of info about elements and attributes
  // http://dev.w3.org/html5/spec/Overview.html#semantics
  // http://simon.html5.org/html-elements

  // Safe Void Elements - HTML5
  // http://dev.w3.org/html5/spec/Overview.html#void-elements
  var voidElements = toMap('area,br,col,hr,img,wbr');

  // Elements that you can, intentionally, leave open (and which close themselves)
  // http://dev.w3.org/html5/spec/Overview.html#optional-tags
  var optionalEndTagBlockElements = toMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
      optionalEndTagInlineElements = toMap('rp,rt'),
      optionalEndTagElements = extend({},
                                              optionalEndTagInlineElements,
                                              optionalEndTagBlockElements);

  // Safe Block Elements - HTML5
  var blockElements = extend({}, optionalEndTagBlockElements, toMap('address,article,' +
          'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +
          'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));

  // Inline Elements - HTML5
  var inlineElements = extend({}, optionalEndTagInlineElements, toMap('a,abbr,acronym,b,' +
          'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' +
          'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));

  // SVG Elements
  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements
  // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.
  // They can potentially allow for arbitrary javascript to be executed. See #11290
  var svgElements = toMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' +
          'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' +
          'radialGradient,rect,stop,svg,switch,text,title,tspan');

  // Blocked Elements (will be stripped)
  var blockedElements = toMap('script,style');

  var validElements = extend({},
                                     voidElements,
                                     blockElements,
                                     inlineElements,
                                     optionalEndTagElements);

  //Attributes that have href and hence need to be sanitized
  var uriAttrs = toMap('background,cite,href,longdesc,src,xlink:href');

  var htmlAttrs = toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +
      'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +
      'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +
      'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +
      'valign,value,vspace,width');

  // SVG attributes (without "id" and "name" attributes)
  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes
  var svgAttrs = toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +
      'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +
      'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +
      'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +
      'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +
      'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +
      'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +
      'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +
      'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +
      'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +
      'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +
      'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +
      'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +
      'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +
      'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);

  var validAttrs = extend({},
                                  uriAttrs,
                                  svgAttrs,
                                  htmlAttrs);

  function toMap(str, lowercaseKeys) {
    var obj = {}, items = str.split(','), i;
    for (i = 0; i < items.length; i++) {
      obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;
    }
    return obj;
  }

  var inertBodyElement;
  (function(window) {
    var doc;
    if (window.document && window.document.implementation) {
      doc = window.document.implementation.createHTMLDocument('inert');
    } else {
      throw $sanitizeMinErr('noinert', 'Can\'t create an inert html document');
    }
    var docElement = doc.documentElement || doc.getDocumentElement();
    var bodyElements = docElement.getElementsByTagName('body');

    // usually there should be only one body element in the document, but IE doesn't have any, so we need to create one
    if (bodyElements.length === 1) {
      inertBodyElement = bodyElements[0];
    } else {
      var html = doc.createElement('html');
      inertBodyElement = doc.createElement('body');
      html.appendChild(inertBodyElement);
      doc.appendChild(html);
    }
  })(window);

  /**
   * @example
   * htmlParser(htmlString, {
   *     start: function(tag, attrs) {},
   *     end: function(tag) {},
   *     chars: function(text) {},
   *     comment: function(text) {}
   * });
   *
   * @param {string} html string
   * @param {object} handler
   */
  function htmlParserImpl(html, handler) {
    if (html === null || html === undefined) {
      html = '';
    } else if (typeof html !== 'string') {
      html = '' + html;
    }
    inertBodyElement.innerHTML = html;

    //mXSS protection
    var mXSSAttempts = 5;
    do {
      if (mXSSAttempts === 0) {
        throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');
      }
      mXSSAttempts--;

      // strip custom-namespaced attributes on IE<=11
      if (window.document.documentMode) {
        stripCustomNsAttrs(inertBodyElement);
      }
      html = inertBodyElement.innerHTML; //trigger mXSS
      inertBodyElement.innerHTML = html;
    } while (html !== inertBodyElement.innerHTML);

    var node = inertBodyElement.firstChild;
    while (node) {
      switch (node.nodeType) {
        case 1: // ELEMENT_NODE
          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));
          break;
        case 3: // TEXT NODE
          handler.chars(node.textContent);
          break;
      }

      var nextNode;
      if (!(nextNode = node.firstChild)) {
      if (node.nodeType === 1) {
          handler.end(node.nodeName.toLowerCase());
        }
        nextNode = node.nextSibling;
        if (!nextNode) {
          while (nextNode == null) {
            node = node.parentNode;
            if (node === inertBodyElement) break;
            nextNode = node.nextSibling;
          if (node.nodeType === 1) {
              handler.end(node.nodeName.toLowerCase());
            }
          }
        }
      }
      node = nextNode;
    }

    while ((node = inertBodyElement.firstChild)) {
      inertBodyElement.removeChild(node);
    }
  }

  function attrToMap(attrs) {
    var map = {};
    for (var i = 0, ii = attrs.length; i < ii; i++) {
      var attr = attrs[i];
      map[attr.name] = attr.value;
    }
    return map;
  }


  /**
   * Escapes all potentially dangerous characters, so that the
   * resulting string can be safely inserted into attribute or
   * element text.
   * @param value
   * @returns {string} escaped text
   */
  function encodeEntities(value) {
    return value.
      replace(/&/g, '&amp;').
      replace(SURROGATE_PAIR_REGEXP, function(value) {
        var hi = value.charCodeAt(0);
        var low = value.charCodeAt(1);
        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';
      }).
      replace(NON_ALPHANUMERIC_REGEXP, function(value) {
        return '&#' + value.charCodeAt(0) + ';';
      }).
      replace(/</g, '&lt;').
      replace(/>/g, '&gt;');
  }

  /**
   * create an HTML/XML writer which writes to buffer
   * @param {Array} buf use buf.join('') to get out sanitized html string
   * @returns {object} in the form of {
   *     start: function(tag, attrs) {},
   *     end: function(tag) {},
   *     chars: function(text) {},
   *     comment: function(text) {}
   * }
   */
  function htmlSanitizeWriterImpl(buf, uriValidator) {
    var ignoreCurrentElement = false;
    var out = bind(buf, buf.push);
    return {
      start: function(tag, attrs) {
        tag = lowercase(tag);
        if (!ignoreCurrentElement && blockedElements[tag]) {
          ignoreCurrentElement = tag;
        }
        if (!ignoreCurrentElement && validElements[tag] === true) {
          out('<');
          out(tag);
          forEach(attrs, function(value, key) {
            var lkey = lowercase(key);
            var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');
            if (validAttrs[lkey] === true &&
              (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {
              out(' ');
              out(key);
              out('="');
              out(encodeEntities(value));
              out('"');
            }
          });
          out('>');
        }
      },
      end: function(tag) {
        tag = lowercase(tag);
        if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {
          out('</');
          out(tag);
          out('>');
        }
        // eslint-disable-next-line eqeqeq
        if (tag == ignoreCurrentElement) {
          ignoreCurrentElement = false;
        }
      },
      chars: function(chars) {
        if (!ignoreCurrentElement) {
          out(encodeEntities(chars));
        }
      }
    };
  }


  /**
   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare
   * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want
   * to allow any of these custom attributes. This method strips them all.
   *
   * @param node Root element to process
   */
  function stripCustomNsAttrs(node) {
    while (node) {
      if (node.nodeType === window.Node.ELEMENT_NODE) {
        var attrs = node.attributes;
        for (var i = 0, l = attrs.length; i < l; i++) {
          var attrNode = attrs[i];
          var attrName = attrNode.name.toLowerCase();
          if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {
            node.removeAttributeNode(attrNode);
            i--;
            l--;
          }
        }
      }

      var nextNode = node.firstChild;
      if (nextNode) {
        stripCustomNsAttrs(nextNode);
      }

      node = node.nextSibling;
    }
  }
}

function sanitizeText(chars) {
  var buf = [];
  var writer = htmlSanitizeWriter(buf, noop);
  writer.chars(chars);
  return buf.join('');
}


// define ngSanitize module and register $sanitize service
angular.module('ngSanitize', []).provider('$sanitize', $SanitizeProvider);

/**
 * @ngdoc filter
 * @name linky
 * @kind function
 *
 * @description
 * Finds links in text input and turns them into html links. Supports `http/https/ftp/mailto` and
 * plain email address links.
 *
 * Requires the {@link ngSanitize `ngSanitize`} module to be installed.
 *
 * @param {string} text Input text.
 * @param {string} target Window (`_blank|_self|_parent|_top`) or named frame to open links in.
 * @param {object|function(url)} [attributes] Add custom attributes to the link element.
 *
 *    Can be one of:
 *
 *    - `object`: A map of attributes
 *    - `function`: Takes the url as a parameter and returns a map of attributes
 *
 *    If the map of attributes contains a value for `target`, it overrides the value of
 *    the target parameter.
 *
 *
 * @returns {string} Html-linkified and {@link $sanitize sanitized} text.
 *
 * @usage
   <span ng-bind-html="linky_expression | linky"></span>
 *
 * @example
   <example module="linkyExample" deps="angular-sanitize.js" name="linky-filter">
     <file name="index.html">
       <div ng-controller="ExampleController">
       Snippet: <textarea ng-model="snippet" cols="60" rows="3"></textarea>
       <table>
         <tr>
           <th>Filter</th>
           <th>Source</th>
           <th>Rendered</th>
         </tr>
         <tr id="linky-filter">
           <td>linky filter</td>
           <td>
             <pre>&lt;div ng-bind-html="snippet | linky"&gt;<br>&lt;/div&gt;</pre>
           </td>
           <td>
             <div ng-bind-html="snippet | linky"></div>
           </td>
         </tr>
         <tr id="linky-target">
          <td>linky target</td>
          <td>
            <pre>&lt;div ng-bind-html="snippetWithSingleURL | linky:'_blank'"&gt;<br>&lt;/div&gt;</pre>
          </td>
          <td>
            <div ng-bind-html="snippetWithSingleURL | linky:'_blank'"></div>
          </td>
         </tr>
         <tr id="linky-custom-attributes">
          <td>linky custom attributes</td>
          <td>
            <pre>&lt;div ng-bind-html="snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}"&gt;<br>&lt;/div&gt;</pre>
          </td>
          <td>
            <div ng-bind-html="snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}"></div>
          </td>
         </tr>
         <tr id="escaped-html">
           <td>no filter</td>
           <td><pre>&lt;div ng-bind="snippet"&gt;<br>&lt;/div&gt;</pre></td>
           <td><div ng-bind="snippet"></div></td>
         </tr>
       </table>
     </file>
     <file name="script.js">
       angular.module('linkyExample', ['ngSanitize'])
         .controller('ExampleController', ['$scope', function($scope) {
           $scope.snippet =
             'Pretty text with some links:\n' +
             'http://angularjs.org/,\n' +
             'mailto:us@somewhere.org,\n' +
             'another@somewhere.org,\n' +
             'and one more: ftp://127.0.0.1/.';
           $scope.snippetWithSingleURL = 'http://angularjs.org/';
         }]);
     </file>
     <file name="protractor.js" type="protractor">
       it('should linkify the snippet with urls', function() {
         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).
             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +
                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');
         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);
       });

       it('should not linkify snippet without the linky filter', function() {
         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).
             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +
                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');
         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);
       });

       it('should update', function() {
         element(by.model('snippet')).clear();
         element(by.model('snippet')).sendKeys('new http://link.');
         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).
             toBe('new http://link.');
         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);
         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())
             .toBe('new http://link.');
       });

       it('should work with the target property', function() {
        expect(element(by.id('linky-target')).
            element(by.binding("snippetWithSingleURL | linky:'_blank'")).getText()).
            toBe('http://angularjs.org/');
        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');
       });

       it('should optionally add custom attributes', function() {
        expect(element(by.id('linky-custom-attributes')).
            element(by.binding("snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}")).getText()).
            toBe('http://angularjs.org/');
        expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');
       });
     </file>
   </example>
 */
angular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {
  var LINKY_URL_REGEXP =
        /((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,
      MAILTO_REGEXP = /^mailto:/i;

  var linkyMinErr = angular.$$minErr('linky');
  var isDefined = angular.isDefined;
  var isFunction = angular.isFunction;
  var isObject = angular.isObject;
  var isString = angular.isString;

  return function(text, target, attributes) {
    if (text == null || text === '') return text;
    if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);

    var attributesFn =
      isFunction(attributes) ? attributes :
      isObject(attributes) ? function getAttributesObject() {return attributes;} :
      function getEmptyAttributesObject() {return {};};

    var match;
    var raw = text;
    var html = [];
    var url;
    var i;
    while ((match = raw.match(LINKY_URL_REGEXP))) {
      // We can not end in these as they are sometimes found at the end of the sentence
      url = match[0];
      // if we did not match ftp/http/www/mailto then assume mailto
      if (!match[2] && !match[4]) {
        url = (match[3] ? 'http://' : 'mailto:') + url;
      }
      i = match.index;
      addText(raw.substr(0, i));
      addLink(url, match[0].replace(MAILTO_REGEXP, ''));
      raw = raw.substring(i + match[0].length);
    }
    addText(raw);
    return $sanitize(html.join(''));

    function addText(text) {
      if (!text) {
        return;
      }
      html.push(sanitizeText(text));
    }

    function addLink(url, text) {
      var key, linkAttributes = attributesFn(url);
      html.push('<a ');

      for (key in linkAttributes) {
        html.push(key + '="' + linkAttributes[key] + '" ');
      }

      if (isDefined(target) && !('target' in linkAttributes)) {
        html.push('target="',
                  target,
                  '" ');
      }
      html.push('href="',
                url.replace(/"/g, '&quot;'),
                '">');
      addText(text);
      html.push('</a>');
    }
  };
}]);


})(window, window.angular);

},{}],4:[function(require,module,exports){
/**
 * @license AngularJS v1.5.11
 * (c) 2010-2017 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function(window, angular) {'use strict';

/* global ngTouchClickDirectiveFactory: false */

/**
 * @ngdoc module
 * @name ngTouch
 * @description
 *
 * # ngTouch
 *
 * The `ngTouch` module provides touch events and other helpers for touch-enabled devices.
 * The implementation is based on jQuery Mobile touch event handling
 * ([jquerymobile.com](http://jquerymobile.com/)).
 *
 *
 * See {@link ngTouch.$swipe `$swipe`} for usage.
 *
 * <div doc-module-components="ngTouch"></div>
 *
 */

// define ngTouch module
/* global -ngTouch */
var ngTouch = angular.module('ngTouch', []);

ngTouch.provider('$touch', $TouchProvider);

function nodeName_(element) {
  return angular.lowercase(element.nodeName || (element[0] && element[0].nodeName));
}

/**
 * @ngdoc provider
 * @name $touchProvider
 *
 * @description
 * The `$touchProvider` allows enabling / disabling {@link ngTouch.ngClick ngTouch's ngClick directive}.
 */
$TouchProvider.$inject = ['$provide', '$compileProvider'];
function $TouchProvider($provide, $compileProvider) {

  /**
   * @ngdoc method
   * @name  $touchProvider#ngClickOverrideEnabled
   *
   * @param {boolean=} enabled update the ngClickOverrideEnabled state if provided, otherwise just return the
   * current ngClickOverrideEnabled state
   * @returns {*} current value if used as getter or itself (chaining) if used as setter
   *
   * @kind function
   *
   * @description
   * Call this method to enable/disable {@link ngTouch.ngClick ngTouch's ngClick directive}. If enabled,
   * the default ngClick directive will be replaced by a version that eliminates the 300ms delay for
   * click events on browser for touch-devices.
   *
   * The default is `false`.
   *
   */
  var ngClickOverrideEnabled = false;
  var ngClickDirectiveAdded = false;
  // eslint-disable-next-line no-invalid-this
  this.ngClickOverrideEnabled = function(enabled) {
    if (angular.isDefined(enabled)) {

      if (enabled && !ngClickDirectiveAdded) {
        ngClickDirectiveAdded = true;

        // Use this to identify the correct directive in the delegate
        ngTouchClickDirectiveFactory.$$moduleName = 'ngTouch';
        $compileProvider.directive('ngClick', ngTouchClickDirectiveFactory);

        $provide.decorator('ngClickDirective', ['$delegate', function($delegate) {
          if (ngClickOverrideEnabled) {
            // drop the default ngClick directive
            $delegate.shift();
          } else {
            // drop the ngTouch ngClick directive if the override has been re-disabled (because
            // we cannot de-register added directives)
            var i = $delegate.length - 1;
            while (i >= 0) {
              if ($delegate[i].$$moduleName === 'ngTouch') {
                $delegate.splice(i, 1);
                break;
              }
              i--;
            }
          }

          return $delegate;
        }]);
      }

      ngClickOverrideEnabled = enabled;
      return this;
    }

    return ngClickOverrideEnabled;
  };

  /**
  * @ngdoc service
  * @name $touch
  * @kind object
  *
  * @description
  * Provides the {@link ngTouch.$touch#ngClickOverrideEnabled `ngClickOverrideEnabled`} method.
  *
  */
  // eslint-disable-next-line no-invalid-this
  this.$get = function() {
    return {
      /**
       * @ngdoc method
       * @name  $touch#ngClickOverrideEnabled
       *
       * @returns {*} current value of `ngClickOverrideEnabled` set in the {@link ngTouch.$touchProvider $touchProvider},
       * i.e. if {@link ngTouch.ngClick ngTouch's ngClick} directive is enabled.
       *
       * @kind function
       */
      ngClickOverrideEnabled: function() {
        return ngClickOverrideEnabled;
      }
    };
  };

}

/* global ngTouch: false */

    /**
     * @ngdoc service
     * @name $swipe
     *
     * @description
     * The `$swipe` service is a service that abstracts the messier details of hold-and-drag swipe
     * behavior, to make implementing swipe-related directives more convenient.
     *
     * Requires the {@link ngTouch `ngTouch`} module to be installed.
     *
     * `$swipe` is used by the `ngSwipeLeft` and `ngSwipeRight` directives in `ngTouch`.
     *
     * # Usage
     * The `$swipe` service is an object with a single method: `bind`. `bind` takes an element
     * which is to be watched for swipes, and an object with four handler functions. See the
     * documentation for `bind` below.
     */

ngTouch.factory('$swipe', [function() {
  // The total distance in any direction before we make the call on swipe vs. scroll.
  var MOVE_BUFFER_RADIUS = 10;

  var POINTER_EVENTS = {
    'mouse': {
      start: 'mousedown',
      move: 'mousemove',
      end: 'mouseup'
    },
    'touch': {
      start: 'touchstart',
      move: 'touchmove',
      end: 'touchend',
      cancel: 'touchcancel'
    },
    'pointer': {
      start: 'pointerdown',
      move: 'pointermove',
      end: 'pointerup',
      cancel: 'pointercancel'
    }
  };

  function getCoordinates(event) {
    var originalEvent = event.originalEvent || event;
    var touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];
    var e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];

    return {
      x: e.clientX,
      y: e.clientY
    };
  }

  function getEvents(pointerTypes, eventType) {
    var res = [];
    angular.forEach(pointerTypes, function(pointerType) {
      var eventName = POINTER_EVENTS[pointerType][eventType];
      if (eventName) {
        res.push(eventName);
      }
    });
    return res.join(' ');
  }

  return {
    /**
     * @ngdoc method
     * @name $swipe#bind
     *
     * @description
     * The main method of `$swipe`. It takes an element to be watched for swipe motions, and an
     * object containing event handlers.
     * The pointer types that should be used can be specified via the optional
     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,
     * `$swipe` will listen for `mouse`, `touch` and `pointer` events.
     *
     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`
     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw
     * `event`. `cancel` receives the raw `event` as its single parameter.
     *
     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$swipe` is
     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total
     * distance moved in either dimension exceeds a small threshold.
     *
     * Once this threshold is exceeded, either the horizontal or vertical delta is greater.
     * - If the horizontal distance is greater, this is a swipe and `move` and `end` events follow.
     * - If the vertical distance is greater, this is a scroll, and we let the browser take over.
     *   A `cancel` event is sent.
     *
     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that
     * a swipe is in progress.
     *
     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.
     *
     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling
     * as described above.
     *
     */
    bind: function(element, eventHandlers, pointerTypes) {
      // Absolute total movement, used to control swipe vs. scroll.
      var totalX, totalY;
      // Coordinates of the start position.
      var startCoords;
      // Last event's position.
      var lastPos;
      // Whether a swipe is active.
      var active = false;

      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];
      element.on(getEvents(pointerTypes, 'start'), function(event) {
        startCoords = getCoordinates(event);
        active = true;
        totalX = 0;
        totalY = 0;
        lastPos = startCoords;
        if (eventHandlers['start']) {
          eventHandlers['start'](startCoords, event);
        }
      });
      var events = getEvents(pointerTypes, 'cancel');
      if (events) {
        element.on(events, function(event) {
          active = false;
          if (eventHandlers['cancel']) {
            eventHandlers['cancel'](event);
          }
        });
      }

      element.on(getEvents(pointerTypes, 'move'), function(event) {
        if (!active) return;

        // Android will send a touchcancel if it thinks we're starting to scroll.
        // So when the total distance (+ or - or both) exceeds 10px in either direction,
        // we either:
        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.
        // - On totalY > totalX, we let the browser handle it as a scroll.

        if (!startCoords) return;
        var coords = getCoordinates(event);

        totalX += Math.abs(coords.x - lastPos.x);
        totalY += Math.abs(coords.y - lastPos.y);

        lastPos = coords;

        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {
          return;
        }

        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.
        if (totalY > totalX) {
          // Allow native scrolling to take over.
          active = false;
          if (eventHandlers['cancel']) {
            eventHandlers['cancel'](event);
          }
          return;
        } else {
          // Prevent the browser from scrolling.
          event.preventDefault();
          if (eventHandlers['move']) {
            eventHandlers['move'](coords, event);
          }
        }
      });

      element.on(getEvents(pointerTypes, 'end'), function(event) {
        if (!active) return;
        active = false;
        if (eventHandlers['end']) {
          eventHandlers['end'](getCoordinates(event), event);
        }
      });
    }
  };
}]);

/* global ngTouch: false,
  nodeName_: false
*/

/**
 * @ngdoc directive
 * @name ngClick
 * @deprecated
 * sinceVersion="v1.5.0"
 * This directive is deprecated and **disabled** by default.
 * The directive will receive no further support and might be removed from future releases.
 * If you need the directive, you can enable it with the {@link ngTouch.$touchProvider $touchProvider#ngClickOverrideEnabled}
 * function. We also recommend that you migrate to [FastClick](https://github.com/ftlabs/fastclick).
 * To learn more about the 300ms delay, this [Telerik article](http://developer.telerik.com/featured/300-ms-click-delay-ios-8/)
 * gives a good overview.
 *
 * @description
 * A more powerful replacement for the default ngClick designed to be used on touchscreen
 * devices. Most mobile browsers wait about 300ms after a tap-and-release before sending
 * the click event. This version handles them immediately, and then prevents the
 * following click event from propagating.
 *
 * Requires the {@link ngTouch `ngTouch`} module to be installed.
 *
 * This directive can fall back to using an ordinary click event, and so works on desktop
 * browsers as well as mobile.
 *
 * This directive also sets the CSS class `ng-click-active` while the element is being held
 * down (by a mouse click or touch) so you can restyle the depressed element if you wish.
 *
 * @element ANY
 * @param {expression} ngClick {@link guide/expression Expression} to evaluate
 * upon tap. (Event object is available as `$event`)
 *
 * @example
    <example module="ngClickExample" deps="angular-touch.js" name="ng-touch-ng-click">
      <file name="index.html">
        <button ng-click="count = count + 1" ng-init="count=0">
          Increment
        </button>
        count: {{ count }}
      </file>
      <file name="script.js">
        angular.module('ngClickExample', ['ngTouch']);
      </file>
    </example>
 */

var ngTouchClickDirectiveFactory = ['$parse', '$timeout', '$rootElement',
    function($parse, $timeout, $rootElement) {
  var TAP_DURATION = 750; // Shorter than 750ms is a tap, longer is a taphold or drag.
  var MOVE_TOLERANCE = 12; // 12px seems to work in most mobile browsers.
  var PREVENT_DURATION = 2500; // 2.5 seconds maximum from preventGhostClick call to click
  var CLICKBUSTER_THRESHOLD = 25; // 25 pixels in any dimension is the limit for busting clicks.

  var ACTIVE_CLASS_NAME = 'ng-click-active';
  var lastPreventedTime;
  var touchCoordinates;
  var lastLabelClickCoordinates;


  // TAP EVENTS AND GHOST CLICKS
  //
  // Why tap events?
  // Mobile browsers detect a tap, then wait a moment (usually ~300ms) to see if you're
  // double-tapping, and then fire a click event.
  //
  // This delay sucks and makes mobile apps feel unresponsive.
  // So we detect touchstart, touchcancel and touchend ourselves and determine when
  // the user has tapped on something.
  //
  // What happens when the browser then generates a click event?
  // The browser, of course, also detects the tap and fires a click after a delay. This results in
  // tapping/clicking twice. We do "clickbusting" to prevent it.
  //
  // How does it work?
  // We attach global touchstart and click handlers, that run during the capture (early) phase.
  // So the sequence for a tap is:
  // - global touchstart: Sets an "allowable region" at the point touched.
  // - element's touchstart: Starts a touch
  // (- touchcancel ends the touch, no click follows)
  // - element's touchend: Determines if the tap is valid (didn't move too far away, didn't hold
  //   too long) and fires the user's tap handler. The touchend also calls preventGhostClick().
  // - preventGhostClick() removes the allowable region the global touchstart created.
  // - The browser generates a click event.
  // - The global click handler catches the click, and checks whether it was in an allowable region.
  //     - If preventGhostClick was called, the region will have been removed, the click is busted.
  //     - If the region is still there, the click proceeds normally. Therefore clicks on links and
  //       other elements without ngTap on them work normally.
  //
  // This is an ugly, terrible hack!
  // Yeah, tell me about it. The alternatives are using the slow click events, or making our users
  // deal with the ghost clicks, so I consider this the least of evils. Fortunately Angular
  // encapsulates this ugly logic away from the user.
  //
  // Why not just put click handlers on the element?
  // We do that too, just to be sure. If the tap event caused the DOM to change,
  // it is possible another element is now in that position. To take account for these possibly
  // distinct elements, the handlers are global and care only about coordinates.

  // Checks if the coordinates are close enough to be within the region.
  function hit(x1, y1, x2, y2) {
    return Math.abs(x1 - x2) < CLICKBUSTER_THRESHOLD && Math.abs(y1 - y2) < CLICKBUSTER_THRESHOLD;
  }

  // Checks a list of allowable regions against a click location.
  // Returns true if the click should be allowed.
  // Splices out the allowable region from the list after it has been used.
  function checkAllowableRegions(touchCoordinates, x, y) {
    for (var i = 0; i < touchCoordinates.length; i += 2) {
      if (hit(touchCoordinates[i], touchCoordinates[i + 1], x, y)) {
        touchCoordinates.splice(i, i + 2);
        return true; // allowable region
      }
    }
    return false; // No allowable region; bust it.
  }

  // Global click handler that prevents the click if it's in a bustable zone and preventGhostClick
  // was called recently.
  function onClick(event) {
    if (Date.now() - lastPreventedTime > PREVENT_DURATION) {
      return; // Too old.
    }

    var touches = event.touches && event.touches.length ? event.touches : [event];
    var x = touches[0].clientX;
    var y = touches[0].clientY;
    // Work around desktop Webkit quirk where clicking a label will fire two clicks (on the label
    // and on the input element). Depending on the exact browser, this second click we don't want
    // to bust has either (0,0), negative coordinates, or coordinates equal to triggering label
    // click event
    if (x < 1 && y < 1) {
      return; // offscreen
    }
    if (lastLabelClickCoordinates &&
        lastLabelClickCoordinates[0] === x && lastLabelClickCoordinates[1] === y) {
      return; // input click triggered by label click
    }
    // reset label click coordinates on first subsequent click
    if (lastLabelClickCoordinates) {
      lastLabelClickCoordinates = null;
    }
    // remember label click coordinates to prevent click busting of trigger click event on input
    if (nodeName_(event.target) === 'label') {
      lastLabelClickCoordinates = [x, y];
    }

    // Look for an allowable region containing this click.
    // If we find one, that means it was created by touchstart and not removed by
    // preventGhostClick, so we don't bust it.
    if (checkAllowableRegions(touchCoordinates, x, y)) {
      return;
    }

    // If we didn't find an allowable region, bust the click.
    event.stopPropagation();
    event.preventDefault();

    // Blur focused form elements
    if (event.target && event.target.blur) {
      event.target.blur();
    }
  }


  // Global touchstart handler that creates an allowable region for a click event.
  // This allowable region can be removed by preventGhostClick if we want to bust it.
  function onTouchStart(event) {
    var touches = event.touches && event.touches.length ? event.touches : [event];
    var x = touches[0].clientX;
    var y = touches[0].clientY;
    touchCoordinates.push(x, y);

    $timeout(function() {
      // Remove the allowable region.
      for (var i = 0; i < touchCoordinates.length; i += 2) {
        if (touchCoordinates[i] === x && touchCoordinates[i + 1] === y) {
          touchCoordinates.splice(i, i + 2);
          return;
        }
      }
    }, PREVENT_DURATION, false);
  }

  // On the first call, attaches some event handlers. Then whenever it gets called, it creates a
  // zone around the touchstart where clicks will get busted.
  function preventGhostClick(x, y) {
    if (!touchCoordinates) {
      $rootElement[0].addEventListener('click', onClick, true);
      $rootElement[0].addEventListener('touchstart', onTouchStart, true);
      touchCoordinates = [];
    }

    lastPreventedTime = Date.now();

    checkAllowableRegions(touchCoordinates, x, y);
  }

  // Actual linking function.
  return function(scope, element, attr) {
    var clickHandler = $parse(attr.ngClick),
        tapping = false,
        tapElement,  // Used to blur the element after a tap.
        startTime,   // Used to check if the tap was held too long.
        touchStartX,
        touchStartY;

    function resetState() {
      tapping = false;
      element.removeClass(ACTIVE_CLASS_NAME);
    }

    element.on('touchstart', function(event) {
      tapping = true;
      tapElement = event.target ? event.target : event.srcElement; // IE uses srcElement.
      // Hack for Safari, which can target text nodes instead of containers.
      if (tapElement.nodeType === 3) {
        tapElement = tapElement.parentNode;
      }

      element.addClass(ACTIVE_CLASS_NAME);

      startTime = Date.now();

      // Use jQuery originalEvent
      var originalEvent = event.originalEvent || event;
      var touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];
      var e = touches[0];
      touchStartX = e.clientX;
      touchStartY = e.clientY;
    });

    element.on('touchcancel', function(event) {
      resetState();
    });

    element.on('touchend', function(event) {
      var diff = Date.now() - startTime;

      // Use jQuery originalEvent
      var originalEvent = event.originalEvent || event;
      var touches = (originalEvent.changedTouches && originalEvent.changedTouches.length) ?
          originalEvent.changedTouches :
          ((originalEvent.touches && originalEvent.touches.length) ? originalEvent.touches : [originalEvent]);
      var e = touches[0];
      var x = e.clientX;
      var y = e.clientY;
      var dist = Math.sqrt(Math.pow(x - touchStartX, 2) + Math.pow(y - touchStartY, 2));

      if (tapping && diff < TAP_DURATION && dist < MOVE_TOLERANCE) {
        // Call preventGhostClick so the clickbuster will catch the corresponding click.
        preventGhostClick(x, y);

        // Blur the focused element (the button, probably) before firing the callback.
        // This doesn't work perfectly on Android Chrome, but seems to work elsewhere.
        // I couldn't get anything to work reliably on Android Chrome.
        if (tapElement) {
          tapElement.blur();
        }

        if (!angular.isDefined(attr.disabled) || attr.disabled === false) {
          element.triggerHandler('click', [event]);
        }
      }

      resetState();
    });

    // Hack for iOS Safari's benefit. It goes searching for onclick handlers and is liable to click
    // something else nearby.
    element.onclick = function(event) { };

    // Actual click handler.
    // There are three different kinds of clicks, only two of which reach this point.
    // - On desktop browsers without touch events, their clicks will always come here.
    // - On mobile browsers, the simulated "fast" click will call this.
    // - But the browser's follow-up slow click will be "busted" before it reaches this handler.
    // Therefore it's safe to use this directive on both mobile and desktop.
    element.on('click', function(event, touchend) {
      scope.$apply(function() {
        clickHandler(scope, {$event: (touchend || event)});
      });
    });

    element.on('mousedown', function(event) {
      element.addClass(ACTIVE_CLASS_NAME);
    });

    element.on('mousemove mouseup', function(event) {
      element.removeClass(ACTIVE_CLASS_NAME);
    });

  };
}];

/* global ngTouch: false */

/**
 * @ngdoc directive
 * @name ngSwipeLeft
 *
 * @description
 * Specify custom behavior when an element is swiped to the left on a touchscreen device.
 * A leftward swipe is a quick, right-to-left slide of the finger.
 * Though ngSwipeLeft is designed for touch-based devices, it will work with a mouse click and drag
 * too.
 *
 * To disable the mouse click and drag functionality, add `ng-swipe-disable-mouse` to
 * the `ng-swipe-left` or `ng-swipe-right` DOM Element.
 *
 * Requires the {@link ngTouch `ngTouch`} module to be installed.
 *
 * @element ANY
 * @param {expression} ngSwipeLeft {@link guide/expression Expression} to evaluate
 * upon left swipe. (Event object is available as `$event`)
 *
 * @example
    <example module="ngSwipeLeftExample" deps="angular-touch.js" name="ng-swipe-left">
      <file name="index.html">
        <div ng-show="!showActions" ng-swipe-left="showActions = true">
          Some list content, like an email in the inbox
        </div>
        <div ng-show="showActions" ng-swipe-right="showActions = false">
          <button ng-click="reply()">Reply</button>
          <button ng-click="delete()">Delete</button>
        </div>
      </file>
      <file name="script.js">
        angular.module('ngSwipeLeftExample', ['ngTouch']);
      </file>
    </example>
 */

/**
 * @ngdoc directive
 * @name ngSwipeRight
 *
 * @description
 * Specify custom behavior when an element is swiped to the right on a touchscreen device.
 * A rightward swipe is a quick, left-to-right slide of the finger.
 * Though ngSwipeRight is designed for touch-based devices, it will work with a mouse click and drag
 * too.
 *
 * Requires the {@link ngTouch `ngTouch`} module to be installed.
 *
 * @element ANY
 * @param {expression} ngSwipeRight {@link guide/expression Expression} to evaluate
 * upon right swipe. (Event object is available as `$event`)
 *
 * @example
    <example module="ngSwipeRightExample" deps="angular-touch.js" name="ng-swipe-right">
      <file name="index.html">
        <div ng-show="!showActions" ng-swipe-left="showActions = true">
          Some list content, like an email in the inbox
        </div>
        <div ng-show="showActions" ng-swipe-right="showActions = false">
          <button ng-click="reply()">Reply</button>
          <button ng-click="delete()">Delete</button>
        </div>
      </file>
      <file name="script.js">
        angular.module('ngSwipeRightExample', ['ngTouch']);
      </file>
    </example>
 */

function makeSwipeDirective(directiveName, direction, eventName) {
  ngTouch.directive(directiveName, ['$parse', '$swipe', function($parse, $swipe) {
    // The maximum vertical delta for a swipe should be less than 75px.
    var MAX_VERTICAL_DISTANCE = 75;
    // Vertical distance should not be more than a fraction of the horizontal distance.
    var MAX_VERTICAL_RATIO = 0.3;
    // At least a 30px lateral motion is necessary for a swipe.
    var MIN_HORIZONTAL_DISTANCE = 30;

    return function(scope, element, attr) {
      var swipeHandler = $parse(attr[directiveName]);

      var startCoords, valid;

      function validSwipe(coords) {
        // Check that it's within the coordinates.
        // Absolute vertical distance must be within tolerances.
        // Horizontal distance, we take the current X - the starting X.
        // This is negative for leftward swipes and positive for rightward swipes.
        // After multiplying by the direction (-1 for left, +1 for right), legal swipes
        // (ie. same direction as the directive wants) will have a positive delta and
        // illegal ones a negative delta.
        // Therefore this delta must be positive, and larger than the minimum.
        if (!startCoords) return false;
        var deltaY = Math.abs(coords.y - startCoords.y);
        var deltaX = (coords.x - startCoords.x) * direction;
        return valid && // Short circuit for already-invalidated swipes.
            deltaY < MAX_VERTICAL_DISTANCE &&
            deltaX > 0 &&
            deltaX > MIN_HORIZONTAL_DISTANCE &&
            deltaY / deltaX < MAX_VERTICAL_RATIO;
      }

      var pointerTypes = ['touch'];
      if (!angular.isDefined(attr['ngSwipeDisableMouse'])) {
        pointerTypes.push('mouse');
      }
      $swipe.bind(element, {
        'start': function(coords, event) {
          startCoords = coords;
          valid = true;
        },
        'cancel': function(event) {
          valid = false;
        },
        'end': function(coords, event) {
          if (validSwipe(coords)) {
            scope.$apply(function() {
              element.triggerHandler(eventName);
              swipeHandler(scope, {$event: event});
            });
          }
        }
      }, pointerTypes);
    };
  }]);
}

// Left is negative X-coordinate, right is positive.
makeSwipeDirective('ngSwipeLeft', -1, 'swipeleft');
makeSwipeDirective('ngSwipeRight', 1, 'swiperight');



})(window, window.angular);

},{}],5:[function(require,module,exports){
/**
 * @license AngularJS v1.5.11
 * (c) 2010-2017 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function(window) {'use strict';

/**
 * @description
 *
 * This object provides a utility for producing rich Error messages within
 * Angular. It can be called as follows:
 *
 * var exampleMinErr = minErr('example');
 * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);
 *
 * The above creates an instance of minErr in the example namespace. The
 * resulting error will have a namespaced error code of example.one.  The
 * resulting error will replace {0} with the value of foo, and {1} with the
 * value of bar. The object is not restricted in the number of arguments it can
 * take.
 *
 * If fewer arguments are specified than necessary for interpolation, the extra
 * interpolation markers will be preserved in the final string.
 *
 * Since data will be parsed statically during a build step, some restrictions
 * are applied with respect to how minErr instances are created and called.
 * Instances should have names of the form namespaceMinErr for a minErr created
 * using minErr('namespace') . Error codes, namespaces and template strings
 * should all be static strings, not variables or general expressions.
 *
 * @param {string} module The namespace to use for the new minErr instance.
 * @param {function} ErrorConstructor Custom error constructor to be instantiated when returning
 *   error from returned function, for cases when a particular type of error is useful.
 * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance
 */

function minErr(module, ErrorConstructor) {
  ErrorConstructor = ErrorConstructor || Error;
  return function() {
    var SKIP_INDEXES = 2;

    var templateArgs = arguments,
      code = templateArgs[0],
      message = '[' + (module ? module + ':' : '') + code + '] ',
      template = templateArgs[1],
      paramPrefix, i;

    message += template.replace(/\{\d+\}/g, function(match) {
      var index = +match.slice(1, -1),
        shiftedIndex = index + SKIP_INDEXES;

      if (shiftedIndex < templateArgs.length) {
        return toDebugString(templateArgs[shiftedIndex]);
      }

      return match;
    });

    message += '\nhttp://errors.angularjs.org/1.5.11/' +
      (module ? module + '/' : '') + code;

    for (i = SKIP_INDEXES, paramPrefix = '?'; i < templateArgs.length; i++, paramPrefix = '&') {
      message += paramPrefix + 'p' + (i - SKIP_INDEXES) + '=' +
        encodeURIComponent(toDebugString(templateArgs[i]));
    }

    return new ErrorConstructor(message);
  };
}

/* We need to tell ESLint what variables are being exported */
/* exported
  angular,
  msie,
  jqLite,
  jQuery,
  slice,
  splice,
  push,
  toString,
  ngMinErr,
  angularModule,
  uid,
  REGEX_STRING_REGEXP,
  VALIDITY_STATE_PROPERTY,

  lowercase,
  uppercase,
  manualLowercase,
  manualUppercase,
  nodeName_,
  isArrayLike,
  forEach,
  forEachSorted,
  reverseParams,
  nextUid,
  setHashKey,
  extend,
  toInt,
  inherit,
  merge,
  noop,
  identity,
  valueFn,
  isUndefined,
  isDefined,
  isObject,
  isBlankObject,
  isString,
  isNumber,
  isNumberNaN,
  isDate,
  isArray,
  isFunction,
  isRegExp,
  isWindow,
  isScope,
  isFile,
  isFormData,
  isBlob,
  isBoolean,
  isPromiseLike,
  trim,
  escapeForRegexp,
  isElement,
  makeMap,
  includes,
  arrayRemove,
  copy,
  equals,
  csp,
  jq,
  concat,
  sliceArgs,
  bind,
  toJsonReplacer,
  toJson,
  fromJson,
  convertTimezoneToLocal,
  timezoneToOffset,
  startingTag,
  tryDecodeURIComponent,
  parseKeyValue,
  toKeyValue,
  encodeUriSegment,
  encodeUriQuery,
  angularInit,
  bootstrap,
  getTestability,
  snake_case,
  bindJQuery,
  assertArg,
  assertArgFn,
  assertNotHasOwnProperty,
  getter,
  getBlockNodes,
  hasOwnProperty,
  createMap,

  NODE_TYPE_ELEMENT,
  NODE_TYPE_ATTRIBUTE,
  NODE_TYPE_TEXT,
  NODE_TYPE_COMMENT,
  NODE_TYPE_DOCUMENT,
  NODE_TYPE_DOCUMENT_FRAGMENT
*/

////////////////////////////////////

/**
 * @ngdoc module
 * @name ng
 * @module ng
 * @installation
 * @description
 *
 * # ng (core module)
 * The ng module is loaded by default when an AngularJS application is started. The module itself
 * contains the essential components for an AngularJS application to function. The table below
 * lists a high level breakdown of each of the services/factories, filters, directives and testing
 * components available within this core module.
 *
 * <div doc-module-components="ng"></div>
 */

var REGEX_STRING_REGEXP = /^\/(.+)\/([a-z]*)$/;

// The name of a form control's ValidityState property.
// This is used so that it's possible for internal tests to create mock ValidityStates.
var VALIDITY_STATE_PROPERTY = 'validity';

var hasOwnProperty = Object.prototype.hasOwnProperty;

var lowercase = function(string) {return isString(string) ? string.toLowerCase() : string;};
var uppercase = function(string) {return isString(string) ? string.toUpperCase() : string;};


var manualLowercase = function(s) {
  /* eslint-disable no-bitwise */
  return isString(s)
      ? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})
      : s;
  /* eslint-enable */
};
var manualUppercase = function(s) {
  /* eslint-disable no-bitwise */
  return isString(s)
      ? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) & ~32);})
      : s;
  /* eslint-enable */
};


// String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish
// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods
// with correct but slower alternatives. See https://github.com/angular/angular.js/issues/11387
if ('i' !== 'I'.toLowerCase()) {
  lowercase = manualLowercase;
  uppercase = manualUppercase;
}


var
    msie,             // holds major version number for IE, or NaN if UA is not IE.
    jqLite,           // delay binding since jQuery could be loaded after us.
    jQuery,           // delay binding
    slice             = [].slice,
    splice            = [].splice,
    push              = [].push,
    toString          = Object.prototype.toString,
    getPrototypeOf    = Object.getPrototypeOf,
    ngMinErr          = minErr('ng'),

    /** @name angular */
    angular           = window.angular || (window.angular = {}),
    angularModule,
    uid               = 0;

/**
 * documentMode is an IE-only property
 * http://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx
 */
msie = window.document.documentMode;


/**
 * @private
 * @param {*} obj
 * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments,
 *                   String ...)
 */
function isArrayLike(obj) {

  // `null`, `undefined` and `window` are not array-like
  if (obj == null || isWindow(obj)) return false;

  // arrays, strings and jQuery/jqLite objects are array like
  // * jqLite is either the jQuery or jqLite constructor function
  // * we have to check the existence of jqLite first as this method is called
  //   via the forEach method when constructing the jqLite object in the first place
  if (isArray(obj) || isString(obj) || (jqLite && obj instanceof jqLite)) return true;

  // Support: iOS 8.2 (not reproducible in simulator)
  // "length" in obj used to prevent JIT error (gh-11508)
  var length = 'length' in Object(obj) && obj.length;

  // NodeList objects (with `item` method) and
  // other objects with suitable length characteristics are array-like
  return isNumber(length) &&
    (length >= 0 && ((length - 1) in obj || obj instanceof Array) || typeof obj.item === 'function');

}

/**
 * @ngdoc function
 * @name angular.forEach
 * @module ng
 * @kind function
 *
 * @description
 * Invokes the `iterator` function once for each item in `obj` collection, which can be either an
 * object or an array. The `iterator` function is invoked with `iterator(value, key, obj)`, where `value`
 * is the value of an object property or an array element, `key` is the object property key or
 * array element index and obj is the `obj` itself. Specifying a `context` for the function is optional.
 *
 * It is worth noting that `.forEach` does not iterate over inherited properties because it filters
 * using the `hasOwnProperty` method.
 *
 * Unlike ES262's
 * [Array.prototype.forEach](http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.18),
 * providing 'undefined' or 'null' values for `obj` will not throw a TypeError, but rather just
 * return the value provided.
 *
   ```js
     var values = {name: 'misko', gender: 'male'};
     var log = [];
     angular.forEach(values, function(value, key) {
       this.push(key + ': ' + value);
     }, log);
     expect(log).toEqual(['name: misko', 'gender: male']);
   ```
 *
 * @param {Object|Array} obj Object to iterate over.
 * @param {Function} iterator Iterator function.
 * @param {Object=} context Object to become context (`this`) for the iterator function.
 * @returns {Object|Array} Reference to `obj`.
 */

function forEach(obj, iterator, context) {
  var key, length;
  if (obj) {
    if (isFunction(obj)) {
      for (key in obj) {
        // Need to check if hasOwnProperty exists,
        // as on IE8 the result of querySelectorAll is an object without a hasOwnProperty function
        if (key !== 'prototype' && key !== 'length' && key !== 'name' && (!obj.hasOwnProperty || obj.hasOwnProperty(key))) {
          iterator.call(context, obj[key], key, obj);
        }
      }
    } else if (isArray(obj) || isArrayLike(obj)) {
      var isPrimitive = typeof obj !== 'object';
      for (key = 0, length = obj.length; key < length; key++) {
        if (isPrimitive || key in obj) {
          iterator.call(context, obj[key], key, obj);
        }
      }
    } else if (obj.forEach && obj.forEach !== forEach) {
        obj.forEach(iterator, context, obj);
    } else if (isBlankObject(obj)) {
      // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty
      for (key in obj) {
        iterator.call(context, obj[key], key, obj);
      }
    } else if (typeof obj.hasOwnProperty === 'function') {
      // Slow path for objects inheriting Object.prototype, hasOwnProperty check needed
      for (key in obj) {
        if (obj.hasOwnProperty(key)) {
          iterator.call(context, obj[key], key, obj);
        }
      }
    } else {
      // Slow path for objects which do not have a method `hasOwnProperty`
      for (key in obj) {
        if (hasOwnProperty.call(obj, key)) {
          iterator.call(context, obj[key], key, obj);
        }
      }
    }
  }
  return obj;
}

function forEachSorted(obj, iterator, context) {
  var keys = Object.keys(obj).sort();
  for (var i = 0; i < keys.length; i++) {
    iterator.call(context, obj[keys[i]], keys[i]);
  }
  return keys;
}


/**
 * when using forEach the params are value, key, but it is often useful to have key, value.
 * @param {function(string, *)} iteratorFn
 * @returns {function(*, string)}
 */
function reverseParams(iteratorFn) {
  return function(value, key) {iteratorFn(key, value);};
}

/**
 * A consistent way of creating unique IDs in angular.
 *
 * Using simple numbers allows us to generate 28.6 million unique ids per second for 10 years before
 * we hit number precision issues in JavaScript.
 *
 * Math.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M
 *
 * @returns {number} an unique alpha-numeric string
 */
function nextUid() {
  return ++uid;
}


/**
 * Set or clear the hashkey for an object.
 * @param obj object
 * @param h the hashkey (!truthy to delete the hashkey)
 */
function setHashKey(obj, h) {
  if (h) {
    obj.$$hashKey = h;
  } else {
    delete obj.$$hashKey;
  }
}


function baseExtend(dst, objs, deep) {
  var h = dst.$$hashKey;

  for (var i = 0, ii = objs.length; i < ii; ++i) {
    var obj = objs[i];
    if (!isObject(obj) && !isFunction(obj)) continue;
    var keys = Object.keys(obj);
    for (var j = 0, jj = keys.length; j < jj; j++) {
      var key = keys[j];
      var src = obj[key];

      if (deep && isObject(src)) {
        if (isDate(src)) {
          dst[key] = new Date(src.valueOf());
        } else if (isRegExp(src)) {
          dst[key] = new RegExp(src);
        } else if (src.nodeName) {
          dst[key] = src.cloneNode(true);
        } else if (isElement(src)) {
          dst[key] = src.clone();
        } else {
          if (!isObject(dst[key])) dst[key] = isArray(src) ? [] : {};
          baseExtend(dst[key], [src], true);
        }
      } else {
        dst[key] = src;
      }
    }
  }

  setHashKey(dst, h);
  return dst;
}

/**
 * @ngdoc function
 * @name angular.extend
 * @module ng
 * @kind function
 *
 * @description
 * Extends the destination object `dst` by copying own enumerable properties from the `src` object(s)
 * to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so
 * by passing an empty object as the target: `var object = angular.extend({}, object1, object2)`.
 *
 * **Note:** Keep in mind that `angular.extend` does not support recursive merge (deep copy). Use
 * {@link angular.merge} for this.
 *
 * @param {Object} dst Destination object.
 * @param {...Object} src Source object(s).
 * @returns {Object} Reference to `dst`.
 */
function extend(dst) {
  return baseExtend(dst, slice.call(arguments, 1), false);
}


/**
* @ngdoc function
* @name angular.merge
* @module ng
* @kind function
*
* @description
* Deeply extends the destination object `dst` by copying own enumerable properties from the `src` object(s)
* to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so
* by passing an empty object as the target: `var object = angular.merge({}, object1, object2)`.
*
* Unlike {@link angular.extend extend()}, `merge()` recursively descends into object properties of source
* objects, performing a deep copy.
*
* @param {Object} dst Destination object.
* @param {...Object} src Source object(s).
* @returns {Object} Reference to `dst`.
*/
function merge(dst) {
  return baseExtend(dst, slice.call(arguments, 1), true);
}



function toInt(str) {
  return parseInt(str, 10);
}

var isNumberNaN = Number.isNaN || function isNumberNaN(num) {
  // eslint-disable-next-line no-self-compare
  return num !== num;
};


function inherit(parent, extra) {
  return extend(Object.create(parent), extra);
}

/**
 * @ngdoc function
 * @name angular.noop
 * @module ng
 * @kind function
 *
 * @description
 * A function that performs no operations. This function can be useful when writing code in the
 * functional style.
   ```js
     function foo(callback) {
       var result = calculateResult();
       (callback || angular.noop)(result);
     }
   ```
 */
function noop() {}
noop.$inject = [];


/**
 * @ngdoc function
 * @name angular.identity
 * @module ng
 * @kind function
 *
 * @description
 * A function that returns its first argument. This function is useful when writing code in the
 * functional style.
 *
   ```js
   function transformer(transformationFn, value) {
     return (transformationFn || angular.identity)(value);
   };

   // E.g.
   function getResult(fn, input) {
     return (fn || angular.identity)(input);
   };

   getResult(function(n) { return n * 2; }, 21);   // returns 42
   getResult(null, 21);                            // returns 21
   getResult(undefined, 21);                       // returns 21
   ```
 *
 * @param {*} value to be returned.
 * @returns {*} the value passed in.
 */
function identity($) {return $;}
identity.$inject = [];


function valueFn(value) {return function valueRef() {return value;};}

function hasCustomToString(obj) {
  return isFunction(obj.toString) && obj.toString !== toString;
}


/**
 * @ngdoc function
 * @name angular.isUndefined
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is undefined.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is undefined.
 */
function isUndefined(value) {return typeof value === 'undefined';}


/**
 * @ngdoc function
 * @name angular.isDefined
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is defined.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is defined.
 */
function isDefined(value) {return typeof value !== 'undefined';}


/**
 * @ngdoc function
 * @name angular.isObject
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not
 * considered to be objects. Note that JavaScript arrays are objects.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is an `Object` but not `null`.
 */
function isObject(value) {
  // http://jsperf.com/isobject4
  return value !== null && typeof value === 'object';
}


/**
 * Determine if a value is an object with a null prototype
 *
 * @returns {boolean} True if `value` is an `Object` with a null prototype
 */
function isBlankObject(value) {
  return value !== null && typeof value === 'object' && !getPrototypeOf(value);
}


/**
 * @ngdoc function
 * @name angular.isString
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is a `String`.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `String`.
 */
function isString(value) {return typeof value === 'string';}


/**
 * @ngdoc function
 * @name angular.isNumber
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is a `Number`.
 *
 * This includes the "special" numbers `NaN`, `+Infinity` and `-Infinity`.
 *
 * If you wish to exclude these then you can use the native
 * [`isFinite'](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite)
 * method.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `Number`.
 */
function isNumber(value) {return typeof value === 'number';}


/**
 * @ngdoc function
 * @name angular.isDate
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a value is a date.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `Date`.
 */
function isDate(value) {
  return toString.call(value) === '[object Date]';
}


/**
 * @ngdoc function
 * @name angular.isArray
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is an `Array`. Alias of Array.isArray.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is an `Array`.
 */
var isArray = Array.isArray;

/**
 * @ngdoc function
 * @name angular.isFunction
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is a `Function`.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `Function`.
 */
function isFunction(value) {return typeof value === 'function';}


/**
 * Determines if a value is a regular expression object.
 *
 * @private
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `RegExp`.
 */
function isRegExp(value) {
  return toString.call(value) === '[object RegExp]';
}


/**
 * Checks if `obj` is a window object.
 *
 * @private
 * @param {*} obj Object to check
 * @returns {boolean} True if `obj` is a window obj.
 */
function isWindow(obj) {
  return obj && obj.window === obj;
}


function isScope(obj) {
  return obj && obj.$evalAsync && obj.$watch;
}


function isFile(obj) {
  return toString.call(obj) === '[object File]';
}


function isFormData(obj) {
  return toString.call(obj) === '[object FormData]';
}


function isBlob(obj) {
  return toString.call(obj) === '[object Blob]';
}


function isBoolean(value) {
  return typeof value === 'boolean';
}


function isPromiseLike(obj) {
  return obj && isFunction(obj.then);
}


var TYPED_ARRAY_REGEXP = /^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/;
function isTypedArray(value) {
  return value && isNumber(value.length) && TYPED_ARRAY_REGEXP.test(toString.call(value));
}

function isArrayBuffer(obj) {
  return toString.call(obj) === '[object ArrayBuffer]';
}


var trim = function(value) {
  return isString(value) ? value.trim() : value;
};

// Copied from:
// http://docs.closure-library.googlecode.com/git/local_closure_goog_string_string.js.source.html#line1021
// Prereq: s is a string.
var escapeForRegexp = function(s) {
  return s
    .replace(/([-()[\]{}+?*.$^|,:#<!\\])/g, '\\$1')
    // eslint-disable-next-line no-control-regex
    .replace(/\x08/g, '\\x08');
};


/**
 * @ngdoc function
 * @name angular.isElement
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is a DOM element (or wrapped jQuery element).
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).
 */
function isElement(node) {
  return !!(node &&
    (node.nodeName  // We are a direct element.
    || (node.prop && node.attr && node.find)));  // We have an on and find method part of jQuery API.
}

/**
 * @param str 'key1,key2,...'
 * @returns {object} in the form of {key1:true, key2:true, ...}
 */
function makeMap(str) {
  var obj = {}, items = str.split(','), i;
  for (i = 0; i < items.length; i++) {
    obj[items[i]] = true;
  }
  return obj;
}


function nodeName_(element) {
  return lowercase(element.nodeName || (element[0] && element[0].nodeName));
}

function includes(array, obj) {
  return Array.prototype.indexOf.call(array, obj) !== -1;
}

function arrayRemove(array, value) {
  var index = array.indexOf(value);
  if (index >= 0) {
    array.splice(index, 1);
  }
  return index;
}

/**
 * @ngdoc function
 * @name angular.copy
 * @module ng
 * @kind function
 *
 * @description
 * Creates a deep copy of `source`, which should be an object or an array.
 *
 * * If no destination is supplied, a copy of the object or array is created.
 * * If a destination is provided, all of its elements (for arrays) or properties (for objects)
 *   are deleted and then all elements/properties from the source are copied to it.
 * * If `source` is not an object or array (inc. `null` and `undefined`), `source` is returned.
 * * If `source` is identical to `destination` an exception will be thrown.
 *
 * <br />
 * <div class="alert alert-warning">
 *   Only enumerable properties are taken into account. Non-enumerable properties (both on `source`
 *   and on `destination`) will be ignored.
 * </div>
 *
 * @param {*} source The source that will be used to make a copy.
 *                   Can be any type, including primitives, `null`, and `undefined`.
 * @param {(Object|Array)=} destination Destination into which the source is copied. If
 *     provided, must be of the same type as `source`.
 * @returns {*} The copy or updated `destination`, if `destination` was specified.
 *
 * @example
  <example module="copyExample" name="angular-copy">
    <file name="index.html">
      <div ng-controller="ExampleController">
        <form novalidate class="simple-form">
          <label>Name: <input type="text" ng-model="user.name" /></label><br />
          <label>Age:  <input type="number" ng-model="user.age" /></label><br />
          Gender: <label><input type="radio" ng-model="user.gender" value="male" />male</label>
                  <label><input type="radio" ng-model="user.gender" value="female" />female</label><br />
          <button ng-click="reset()">RESET</button>
          <button ng-click="update(user)">SAVE</button>
        </form>
        <pre>form = {{user | json}}</pre>
        <pre>master = {{master | json}}</pre>
      </div>
    </file>
    <file name="script.js">
      // Module: copyExample
      angular.
        module('copyExample', []).
        controller('ExampleController', ['$scope', function($scope) {
          $scope.master = {};

          $scope.reset = function() {
            // Example with 1 argument
            $scope.user = angular.copy($scope.master);
          };

          $scope.update = function(user) {
            // Example with 2 arguments
            angular.copy(user, $scope.master);
          };

          $scope.reset();
        }]);
    </file>
  </example>
 */
function copy(source, destination) {
  var stackSource = [];
  var stackDest = [];

  if (destination) {
    if (isTypedArray(destination) || isArrayBuffer(destination)) {
      throw ngMinErr('cpta', 'Can\'t copy! TypedArray destination cannot be mutated.');
    }
    if (source === destination) {
      throw ngMinErr('cpi', 'Can\'t copy! Source and destination are identical.');
    }

    // Empty the destination object
    if (isArray(destination)) {
      destination.length = 0;
    } else {
      forEach(destination, function(value, key) {
        if (key !== '$$hashKey') {
          delete destination[key];
        }
      });
    }

    stackSource.push(source);
    stackDest.push(destination);
    return copyRecurse(source, destination);
  }

  return copyElement(source);

  function copyRecurse(source, destination) {
    var h = destination.$$hashKey;
    var key;
    if (isArray(source)) {
      for (var i = 0, ii = source.length; i < ii; i++) {
        destination.push(copyElement(source[i]));
      }
    } else if (isBlankObject(source)) {
      // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty
      for (key in source) {
        destination[key] = copyElement(source[key]);
      }
    } else if (source && typeof source.hasOwnProperty === 'function') {
      // Slow path, which must rely on hasOwnProperty
      for (key in source) {
        if (source.hasOwnProperty(key)) {
          destination[key] = copyElement(source[key]);
        }
      }
    } else {
      // Slowest path --- hasOwnProperty can't be called as a method
      for (key in source) {
        if (hasOwnProperty.call(source, key)) {
          destination[key] = copyElement(source[key]);
        }
      }
    }
    setHashKey(destination, h);
    return destination;
  }

  function copyElement(source) {
    // Simple values
    if (!isObject(source)) {
      return source;
    }

    // Already copied values
    var index = stackSource.indexOf(source);
    if (index !== -1) {
      return stackDest[index];
    }

    if (isWindow(source) || isScope(source)) {
      throw ngMinErr('cpws',
        'Can\'t copy! Making copies of Window or Scope instances is not supported.');
    }

    var needsRecurse = false;
    var destination = copyType(source);

    if (destination === undefined) {
      destination = isArray(source) ? [] : Object.create(getPrototypeOf(source));
      needsRecurse = true;
    }

    stackSource.push(source);
    stackDest.push(destination);

    return needsRecurse
      ? copyRecurse(source, destination)
      : destination;
  }

  function copyType(source) {
    switch (toString.call(source)) {
      case '[object Int8Array]':
      case '[object Int16Array]':
      case '[object Int32Array]':
      case '[object Float32Array]':
      case '[object Float64Array]':
      case '[object Uint8Array]':
      case '[object Uint8ClampedArray]':
      case '[object Uint16Array]':
      case '[object Uint32Array]':
        return new source.constructor(copyElement(source.buffer), source.byteOffset, source.length);

      case '[object ArrayBuffer]':
        // Support: IE10
        if (!source.slice) {
          // If we're in this case we know the environment supports ArrayBuffer
          /* eslint-disable no-undef */
          var copied = new ArrayBuffer(source.byteLength);
          new Uint8Array(copied).set(new Uint8Array(source));
          /* eslint-enable */
          return copied;
        }
        return source.slice(0);

      case '[object Boolean]':
      case '[object Number]':
      case '[object String]':
      case '[object Date]':
        return new source.constructor(source.valueOf());

      case '[object RegExp]':
        var re = new RegExp(source.source, source.toString().match(/[^/]*$/)[0]);
        re.lastIndex = source.lastIndex;
        return re;

      case '[object Blob]':
        return new source.constructor([source], {type: source.type});
    }

    if (isFunction(source.cloneNode)) {
      return source.cloneNode(true);
    }
  }
}


/**
 * @ngdoc function
 * @name angular.equals
 * @module ng
 * @kind function
 *
 * @description
 * Determines if two objects or two values are equivalent. Supports value types, regular
 * expressions, arrays and objects.
 *
 * Two objects or values are considered equivalent if at least one of the following is true:
 *
 * * Both objects or values pass `===` comparison.
 * * Both objects or values are of the same type and all of their properties are equal by
 *   comparing them with `angular.equals`.
 * * Both values are NaN. (In JavaScript, NaN == NaN => false. But we consider two NaN as equal)
 * * Both values represent the same regular expression (In JavaScript,
 *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual
 *   representation matches).
 *
 * During a property comparison, properties of `function` type and properties with names
 * that begin with `$` are ignored.
 *
 * Scope and DOMWindow objects are being compared only by identify (`===`).
 *
 * @param {*} o1 Object or value to compare.
 * @param {*} o2 Object or value to compare.
 * @returns {boolean} True if arguments are equal.
 *
 * @example
   <example module="equalsExample" name="equalsExample">
     <file name="index.html">
      <div ng-controller="ExampleController">
        <form novalidate>
          <h3>User 1</h3>
          Name: <input type="text" ng-model="user1.name">
          Age: <input type="number" ng-model="user1.age">

          <h3>User 2</h3>
          Name: <input type="text" ng-model="user2.name">
          Age: <input type="number" ng-model="user2.age">

          <div>
            <br/>
            <input type="button" value="Compare" ng-click="compare()">
          </div>
          User 1: <pre>{{user1 | json}}</pre>
          User 2: <pre>{{user2 | json}}</pre>
          Equal: <pre>{{result}}</pre>
        </form>
      </div>
    </file>
    <file name="script.js">
        angular.module('equalsExample', []).controller('ExampleController', ['$scope', function($scope) {
          $scope.user1 = {};
          $scope.user2 = {};
          $scope.compare = function() {
            $scope.result = angular.equals($scope.user1, $scope.user2);
          };
        }]);
    </file>
  </example>
 */
function equals(o1, o2) {
  if (o1 === o2) return true;
  if (o1 === null || o2 === null) return false;
  // eslint-disable-next-line no-self-compare
  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN
  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;
  if (t1 === t2 && t1 === 'object') {
    if (isArray(o1)) {
      if (!isArray(o2)) return false;
      if ((length = o1.length) === o2.length) {
        for (key = 0; key < length; key++) {
          if (!equals(o1[key], o2[key])) return false;
        }
        return true;
      }
    } else if (isDate(o1)) {
      if (!isDate(o2)) return false;
      return equals(o1.getTime(), o2.getTime());
    } else if (isRegExp(o1)) {
      if (!isRegExp(o2)) return false;
      return o1.toString() === o2.toString();
    } else {
      if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) ||
        isArray(o2) || isDate(o2) || isRegExp(o2)) return false;
      keySet = createMap();
      for (key in o1) {
        if (key.charAt(0) === '$' || isFunction(o1[key])) continue;
        if (!equals(o1[key], o2[key])) return false;
        keySet[key] = true;
      }
      for (key in o2) {
        if (!(key in keySet) &&
            key.charAt(0) !== '$' &&
            isDefined(o2[key]) &&
            !isFunction(o2[key])) return false;
      }
      return true;
    }
  }
  return false;
}

var csp = function() {
  if (!isDefined(csp.rules)) {


    var ngCspElement = (window.document.querySelector('[ng-csp]') ||
                    window.document.querySelector('[data-ng-csp]'));

    if (ngCspElement) {
      var ngCspAttribute = ngCspElement.getAttribute('ng-csp') ||
                    ngCspElement.getAttribute('data-ng-csp');
      csp.rules = {
        noUnsafeEval: !ngCspAttribute || (ngCspAttribute.indexOf('no-unsafe-eval') !== -1),
        noInlineStyle: !ngCspAttribute || (ngCspAttribute.indexOf('no-inline-style') !== -1)
      };
    } else {
      csp.rules = {
        noUnsafeEval: noUnsafeEval(),
        noInlineStyle: false
      };
    }
  }

  return csp.rules;

  function noUnsafeEval() {
    try {
      // eslint-disable-next-line no-new, no-new-func
      new Function('');
      return false;
    } catch (e) {
      return true;
    }
  }
};

/**
 * @ngdoc directive
 * @module ng
 * @name ngJq
 *
 * @element ANY
 * @param {string=} ngJq the name of the library available under `window`
 * to be used for angular.element
 * @description
 * Use this directive to force the angular.element library.  This should be
 * used to force either jqLite by leaving ng-jq blank or setting the name of
 * the jquery variable under window (eg. jQuery).
 *
 * Since angular looks for this directive when it is loaded (doesn't wait for the
 * DOMContentLoaded event), it must be placed on an element that comes before the script
 * which loads angular. Also, only the first instance of `ng-jq` will be used and all
 * others ignored.
 *
 * @example
 * This example shows how to force jqLite using the `ngJq` directive to the `html` tag.
 ```html
 <!doctype html>
 <html ng-app ng-jq>
 ...
 ...
 </html>
 ```
 * @example
 * This example shows how to use a jQuery based library of a different name.
 * The library name must be available at the top most 'window'.
 ```html
 <!doctype html>
 <html ng-app ng-jq="jQueryLib">
 ...
 ...
 </html>
 ```
 */
var jq = function() {
  if (isDefined(jq.name_)) return jq.name_;
  var el;
  var i, ii = ngAttrPrefixes.length, prefix, name;
  for (i = 0; i < ii; ++i) {
    prefix = ngAttrPrefixes[i];
    el = window.document.querySelector('[' + prefix.replace(':', '\\:') + 'jq]');
    if (el) {
      name = el.getAttribute(prefix + 'jq');
      break;
    }
  }

  return (jq.name_ = name);
};

function concat(array1, array2, index) {
  return array1.concat(slice.call(array2, index));
}

function sliceArgs(args, startIndex) {
  return slice.call(args, startIndex || 0);
}


/**
 * @ngdoc function
 * @name angular.bind
 * @module ng
 * @kind function
 *
 * @description
 * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for
 * `fn`). You can supply optional `args` that are prebound to the function. This feature is also
 * known as [partial application](http://en.wikipedia.org/wiki/Partial_application), as
 * distinguished from [function currying](http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application).
 *
 * @param {Object} self Context which `fn` should be evaluated in.
 * @param {function()} fn Function to be bound.
 * @param {...*} args Optional arguments to be prebound to the `fn` function call.
 * @returns {function()} Function that wraps the `fn` with all the specified bindings.
 */
function bind(self, fn) {
  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];
  if (isFunction(fn) && !(fn instanceof RegExp)) {
    return curryArgs.length
      ? function() {
          return arguments.length
            ? fn.apply(self, concat(curryArgs, arguments, 0))
            : fn.apply(self, curryArgs);
        }
      : function() {
          return arguments.length
            ? fn.apply(self, arguments)
            : fn.call(self);
        };
  } else {
    // In IE, native methods are not functions so they cannot be bound (note: they don't need to be).
    return fn;
  }
}


function toJsonReplacer(key, value) {
  var val = value;

  if (typeof key === 'string' && key.charAt(0) === '$' && key.charAt(1) === '$') {
    val = undefined;
  } else if (isWindow(value)) {
    val = '$WINDOW';
  } else if (value &&  window.document === value) {
    val = '$DOCUMENT';
  } else if (isScope(value)) {
    val = '$SCOPE';
  }

  return val;
}


/**
 * @ngdoc function
 * @name angular.toJson
 * @module ng
 * @kind function
 *
 * @description
 * Serializes input into a JSON-formatted string. Properties with leading $$ characters will be
 * stripped since angular uses this notation internally.
 *
 * @param {Object|Array|Date|string|number|boolean} obj Input to be serialized into JSON.
 * @param {boolean|number} [pretty=2] If set to true, the JSON output will contain newlines and whitespace.
 *    If set to an integer, the JSON output will contain that many spaces per indentation.
 * @returns {string|undefined} JSON-ified string representing `obj`.
 * @knownIssue
 *
 * The Safari browser throws a `RangeError` instead of returning `null` when it tries to stringify a `Date`
 * object with an invalid date value. The only reliable way to prevent this is to monkeypatch the
 * `Date.prototype.toJSON` method as follows:
 *
 * ```
 * var _DatetoJSON = Date.prototype.toJSON;
 * Date.prototype.toJSON = function() {
 *   try {
 *     return _DatetoJSON.call(this);
 *   } catch(e) {
 *     if (e instanceof RangeError) {
 *       return null;
 *     }
 *     throw e;
 *   }
 * };
 * ```
 *
 * See https://github.com/angular/angular.js/pull/14221 for more information.
 */
function toJson(obj, pretty) {
  if (isUndefined(obj)) return undefined;
  if (!isNumber(pretty)) {
    pretty = pretty ? 2 : null;
  }
  return JSON.stringify(obj, toJsonReplacer, pretty);
}


/**
 * @ngdoc function
 * @name angular.fromJson
 * @module ng
 * @kind function
 *
 * @description
 * Deserializes a JSON string.
 *
 * @param {string} json JSON string to deserialize.
 * @returns {Object|Array|string|number} Deserialized JSON string.
 */
function fromJson(json) {
  return isString(json)
      ? JSON.parse(json)
      : json;
}


var ALL_COLONS = /:/g;
function timezoneToOffset(timezone, fallback) {
  // IE/Edge do not "understand" colon (`:`) in timezone
  timezone = timezone.replace(ALL_COLONS, '');
  var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;
  return isNumberNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;
}


function addDateMinutes(date, minutes) {
  date = new Date(date.getTime());
  date.setMinutes(date.getMinutes() + minutes);
  return date;
}


function convertTimezoneToLocal(date, timezone, reverse) {
  reverse = reverse ? -1 : 1;
  var dateTimezoneOffset = date.getTimezoneOffset();
  var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
  return addDateMinutes(date, reverse * (timezoneOffset - dateTimezoneOffset));
}


/**
 * @returns {string} Returns the string representation of the element.
 */
function startingTag(element) {
  element = jqLite(element).clone();
  try {
    // turns out IE does not let you set .html() on elements which
    // are not allowed to have children. So we just ignore it.
    element.empty();
  } catch (e) { /* empty */ }
  var elemHtml = jqLite('<div>').append(element).html();
  try {
    return element[0].nodeType === NODE_TYPE_TEXT ? lowercase(elemHtml) :
        elemHtml.
          match(/^(<[^>]+>)/)[1].
          replace(/^<([\w-]+)/, function(match, nodeName) {return '<' + lowercase(nodeName);});
  } catch (e) {
    return lowercase(elemHtml);
  }

}


/////////////////////////////////////////////////

/**
 * Tries to decode the URI component without throwing an exception.
 *
 * @private
 * @param str value potential URI component to check.
 * @returns {boolean} True if `value` can be decoded
 * with the decodeURIComponent function.
 */
function tryDecodeURIComponent(value) {
  try {
    return decodeURIComponent(value);
  } catch (e) {
    // Ignore any invalid uri component.
  }
}


/**
 * Parses an escaped url query string into key-value pairs.
 * @returns {Object.<string,boolean|Array>}
 */
function parseKeyValue(/**string*/keyValue) {
  var obj = {};
  forEach((keyValue || '').split('&'), function(keyValue) {
    var splitPoint, key, val;
    if (keyValue) {
      key = keyValue = keyValue.replace(/\+/g,'%20');
      splitPoint = keyValue.indexOf('=');
      if (splitPoint !== -1) {
        key = keyValue.substring(0, splitPoint);
        val = keyValue.substring(splitPoint + 1);
      }
      key = tryDecodeURIComponent(key);
      if (isDefined(key)) {
        val = isDefined(val) ? tryDecodeURIComponent(val) : true;
        if (!hasOwnProperty.call(obj, key)) {
          obj[key] = val;
        } else if (isArray(obj[key])) {
          obj[key].push(val);
        } else {
          obj[key] = [obj[key],val];
        }
      }
    }
  });
  return obj;
}

function toKeyValue(obj) {
  var parts = [];
  forEach(obj, function(value, key) {
    if (isArray(value)) {
      forEach(value, function(arrayValue) {
        parts.push(encodeUriQuery(key, true) +
                   (arrayValue === true ? '' : '=' + encodeUriQuery(arrayValue, true)));
      });
    } else {
    parts.push(encodeUriQuery(key, true) +
               (value === true ? '' : '=' + encodeUriQuery(value, true)));
    }
  });
  return parts.length ? parts.join('&') : '';
}


/**
 * We need our custom method because encodeURIComponent is too aggressive and doesn't follow
 * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path
 * segments:
 *    segment       = *pchar
 *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
 *    pct-encoded   = "%" HEXDIG HEXDIG
 *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
 *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
 *                     / "*" / "+" / "," / ";" / "="
 */
function encodeUriSegment(val) {
  return encodeUriQuery(val, true).
             replace(/%26/gi, '&').
             replace(/%3D/gi, '=').
             replace(/%2B/gi, '+');
}


/**
 * This method is intended for encoding *key* or *value* parts of query component. We need a custom
 * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be
 * encoded per http://tools.ietf.org/html/rfc3986:
 *    query       = *( pchar / "/" / "?" )
 *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
 *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
 *    pct-encoded   = "%" HEXDIG HEXDIG
 *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
 *                     / "*" / "+" / "," / ";" / "="
 */
function encodeUriQuery(val, pctEncodeSpaces) {
  return encodeURIComponent(val).
             replace(/%40/gi, '@').
             replace(/%3A/gi, ':').
             replace(/%24/g, '$').
             replace(/%2C/gi, ',').
             replace(/%3B/gi, ';').
             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));
}

var ngAttrPrefixes = ['ng-', 'data-ng-', 'ng:', 'x-ng-'];

function getNgAttribute(element, ngAttr) {
  var attr, i, ii = ngAttrPrefixes.length;
  for (i = 0; i < ii; ++i) {
    attr = ngAttrPrefixes[i] + ngAttr;
    if (isString(attr = element.getAttribute(attr))) {
      return attr;
    }
  }
  return null;
}

function allowAutoBootstrap(document) {
  var script = document.currentScript;
  var src = script && script.getAttribute('src');

  if (!src) {
    return true;
  }

  var link = document.createElement('a');
  link.href = src;

  if (document.location.origin === link.origin) {
    // Same-origin resources are always allowed, even for non-whitelisted schemes.
    return true;
  }
  // Disabled bootstrapping unless angular.js was loaded from a known scheme used on the web.
  // This is to prevent angular.js bundled with browser extensions from being used to bypass the
  // content security policy in web pages and other browser extensions.
  switch (link.protocol) {
    case 'http:':
    case 'https:':
    case 'ftp:':
    case 'blob:':
    case 'file:':
    case 'data:':
      return true;
    default:
      return false;
  }
}

// Cached as it has to run during loading so that document.currentScript is available.
var isAutoBootstrapAllowed = allowAutoBootstrap(window.document);

/**
 * @ngdoc directive
 * @name ngApp
 * @module ng
 *
 * @element ANY
 * @param {angular.Module} ngApp an optional application
 *   {@link angular.module module} name to load.
 * @param {boolean=} ngStrictDi if this attribute is present on the app element, the injector will be
 *   created in "strict-di" mode. This means that the application will fail to invoke functions which
 *   do not use explicit function annotation (and are thus unsuitable for minification), as described
 *   in {@link guide/di the Dependency Injection guide}, and useful debugging info will assist in
 *   tracking down the root of these bugs.
 *
 * @description
 *
 * Use this directive to **auto-bootstrap** an AngularJS application. The `ngApp` directive
 * designates the **root element** of the application and is typically placed near the root element
 * of the page - e.g. on the `<body>` or `<html>` tags.
 *
 * There are a few things to keep in mind when using `ngApp`:
 * - only one AngularJS application can be auto-bootstrapped per HTML document. The first `ngApp`
 *   found in the document will be used to define the root element to auto-bootstrap as an
 *   application. To run multiple applications in an HTML document you must manually bootstrap them using
 *   {@link angular.bootstrap} instead.
 * - AngularJS applications cannot be nested within each other.
 * - Do not use a directive that uses {@link ng.$compile#transclusion transclusion} on the same element as `ngApp`.
 *   This includes directives such as {@link ng.ngIf `ngIf`}, {@link ng.ngInclude `ngInclude`} and
 *   {@link ngRoute.ngView `ngView`}.
 *   Doing this misplaces the app {@link ng.$rootElement `$rootElement`} and the app's {@link auto.$injector injector},
 *   causing animations to stop working and making the injector inaccessible from outside the app.
 *
 * You can specify an **AngularJS module** to be used as the root module for the application.  This
 * module will be loaded into the {@link auto.$injector} when the application is bootstrapped. It
 * should contain the application code needed or have dependencies on other modules that will
 * contain the code. See {@link angular.module} for more information.
 *
 * In the example below if the `ngApp` directive were not placed on the `html` element then the
 * document would not be compiled, the `AppController` would not be instantiated and the `{{ a+b }}`
 * would not be resolved to `3`.
 *
 * `ngApp` is the easiest, and most common way to bootstrap an application.
 *
 <example module="ngAppDemo" name="ng-app">
   <file name="index.html">
   <div ng-controller="ngAppDemoController">
     I can add: {{a}} + {{b}} =  {{ a+b }}
   </div>
   </file>
   <file name="script.js">
   angular.module('ngAppDemo', []).controller('ngAppDemoController', function($scope) {
     $scope.a = 1;
     $scope.b = 2;
   });
   </file>
 </example>
 *
 * Using `ngStrictDi`, you would see something like this:
 *
 <example ng-app-included="true" name="strict-di">
   <file name="index.html">
   <div ng-app="ngAppStrictDemo" ng-strict-di>
       <div ng-controller="GoodController1">
           I can add: {{a}} + {{b}} =  {{ a+b }}

           <p>This renders because the controller does not fail to
              instantiate, by using explicit annotation style (see
              script.js for details)
           </p>
       </div>

       <div ng-controller="GoodController2">
           Name: <input ng-model="name"><br />
           Hello, {{name}}!

           <p>This renders because the controller does not fail to
              instantiate, by using explicit annotation style
              (see script.js for details)
           </p>
       </div>

       <div ng-controller="BadController">
           I can add: {{a}} + {{b}} =  {{ a+b }}

           <p>The controller could not be instantiated, due to relying
              on automatic function annotations (which are disabled in
              strict mode). As such, the content of this section is not
              interpolated, and there should be an error in your web console.
           </p>
       </div>
   </div>
   </file>
   <file name="script.js">
   angular.module('ngAppStrictDemo', [])
     // BadController will fail to instantiate, due to relying on automatic function annotation,
     // rather than an explicit annotation
     .controller('BadController', function($scope) {
       $scope.a = 1;
       $scope.b = 2;
     })
     // Unlike BadController, GoodController1 and GoodController2 will not fail to be instantiated,
     // due to using explicit annotations using the array style and $inject property, respectively.
     .controller('GoodController1', ['$scope', function($scope) {
       $scope.a = 1;
       $scope.b = 2;
     }])
     .controller('GoodController2', GoodController2);
     function GoodController2($scope) {
       $scope.name = 'World';
     }
     GoodController2.$inject = ['$scope'];
   </file>
   <file name="style.css">
   div[ng-controller] {
       margin-bottom: 1em;
       -webkit-border-radius: 4px;
       border-radius: 4px;
       border: 1px solid;
       padding: .5em;
   }
   div[ng-controller^=Good] {
       border-color: #d6e9c6;
       background-color: #dff0d8;
       color: #3c763d;
   }
   div[ng-controller^=Bad] {
       border-color: #ebccd1;
       background-color: #f2dede;
       color: #a94442;
       margin-bottom: 0;
   }
   </file>
 </example>
 */
function angularInit(element, bootstrap) {
  var appElement,
      module,
      config = {};

  // The element `element` has priority over any other element.
  forEach(ngAttrPrefixes, function(prefix) {
    var name = prefix + 'app';

    if (!appElement && element.hasAttribute && element.hasAttribute(name)) {
      appElement = element;
      module = element.getAttribute(name);
    }
  });
  forEach(ngAttrPrefixes, function(prefix) {
    var name = prefix + 'app';
    var candidate;

    if (!appElement && (candidate = element.querySelector('[' + name.replace(':', '\\:') + ']'))) {
      appElement = candidate;
      module = candidate.getAttribute(name);
    }
  });
  if (appElement) {
    if (!isAutoBootstrapAllowed) {
      window.console.error('Angular: disabling automatic bootstrap. <script> protocol indicates ' +
          'an extension, document.location.href does not match.');
      return;
    }
    config.strictDi = getNgAttribute(appElement, 'strict-di') !== null;
    bootstrap(appElement, module ? [module] : [], config);
  }
}

/**
 * @ngdoc function
 * @name angular.bootstrap
 * @module ng
 * @description
 * Use this function to manually start up angular application.
 *
 * For more information, see the {@link guide/bootstrap Bootstrap guide}.
 *
 * Angular will detect if it has been loaded into the browser more than once and only allow the
 * first loaded script to be bootstrapped and will report a warning to the browser console for
 * each of the subsequent scripts. This prevents strange results in applications, where otherwise
 * multiple instances of Angular try to work on the DOM.
 *
 * <div class="alert alert-warning">
 * **Note:** Protractor based end-to-end tests cannot use this function to bootstrap manually.
 * They must use {@link ng.directive:ngApp ngApp}.
 * </div>
 *
 * <div class="alert alert-warning">
 * **Note:** Do not bootstrap the app on an element with a directive that uses {@link ng.$compile#transclusion transclusion},
 * such as {@link ng.ngIf `ngIf`}, {@link ng.ngInclude `ngInclude`} and {@link ngRoute.ngView `ngView`}.
 * Doing this misplaces the app {@link ng.$rootElement `$rootElement`} and the app's {@link auto.$injector injector},
 * causing animations to stop working and making the injector inaccessible from outside the app.
 * </div>
 *
 * ```html
 * <!doctype html>
 * <html>
 * <body>
 * <div ng-controller="WelcomeController">
 *   {{greeting}}
 * </div>
 *
 * <script src="angular.js"></script>
 * <script>
 *   var app = angular.module('demo', [])
 *   .controller('WelcomeController', function($scope) {
 *       $scope.greeting = 'Welcome!';
 *   });
 *   angular.bootstrap(document, ['demo']);
 * </script>
 * </body>
 * </html>
 * ```
 *
 * @param {DOMElement} element DOM element which is the root of angular application.
 * @param {Array<String|Function|Array>=} modules an array of modules to load into the application.
 *     Each item in the array should be the name of a predefined module or a (DI annotated)
 *     function that will be invoked by the injector as a `config` block.
 *     See: {@link angular.module modules}
 * @param {Object=} config an object for defining configuration options for the application. The
 *     following keys are supported:
 *
 * * `strictDi` - disable automatic function annotation for the application. This is meant to
 *   assist in finding bugs which break minified code. Defaults to `false`.
 *
 * @returns {auto.$injector} Returns the newly created injector for this app.
 */
function bootstrap(element, modules, config) {
  if (!isObject(config)) config = {};
  var defaultConfig = {
    strictDi: false
  };
  config = extend(defaultConfig, config);
  var doBootstrap = function() {
    element = jqLite(element);

    if (element.injector()) {
      var tag = (element[0] === window.document) ? 'document' : startingTag(element);
      // Encode angle brackets to prevent input from being sanitized to empty string #8683.
      throw ngMinErr(
          'btstrpd',
          'App already bootstrapped with this element \'{0}\'',
          tag.replace(/</,'&lt;').replace(/>/,'&gt;'));
    }

    modules = modules || [];
    modules.unshift(['$provide', function($provide) {
      $provide.value('$rootElement', element);
    }]);

    if (config.debugInfoEnabled) {
      // Pushing so that this overrides `debugInfoEnabled` setting defined in user's `modules`.
      modules.push(['$compileProvider', function($compileProvider) {
        $compileProvider.debugInfoEnabled(true);
      }]);
    }

    modules.unshift('ng');
    var injector = createInjector(modules, config.strictDi);
    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector',
       function bootstrapApply(scope, element, compile, injector) {
        scope.$apply(function() {
          element.data('$injector', injector);
          compile(element)(scope);
        });
      }]
    );
    return injector;
  };

  var NG_ENABLE_DEBUG_INFO = /^NG_ENABLE_DEBUG_INFO!/;
  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;

  if (window && NG_ENABLE_DEBUG_INFO.test(window.name)) {
    config.debugInfoEnabled = true;
    window.name = window.name.replace(NG_ENABLE_DEBUG_INFO, '');
  }

  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {
    return doBootstrap();
  }

  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');
  angular.resumeBootstrap = function(extraModules) {
    forEach(extraModules, function(module) {
      modules.push(module);
    });
    return doBootstrap();
  };

  if (isFunction(angular.resumeDeferredBootstrap)) {
    angular.resumeDeferredBootstrap();
  }
}

/**
 * @ngdoc function
 * @name angular.reloadWithDebugInfo
 * @module ng
 * @description
 * Use this function to reload the current application with debug information turned on.
 * This takes precedence over a call to `$compileProvider.debugInfoEnabled(false)`.
 *
 * See {@link ng.$compileProvider#debugInfoEnabled} for more.
 */
function reloadWithDebugInfo() {
  window.name = 'NG_ENABLE_DEBUG_INFO!' + window.name;
  window.location.reload();
}

/**
 * @name angular.getTestability
 * @module ng
 * @description
 * Get the testability service for the instance of Angular on the given
 * element.
 * @param {DOMElement} element DOM element which is the root of angular application.
 */
function getTestability(rootElement) {
  var injector = angular.element(rootElement).injector();
  if (!injector) {
    throw ngMinErr('test',
      'no injector found for element argument to getTestability');
  }
  return injector.get('$$testability');
}

var SNAKE_CASE_REGEXP = /[A-Z]/g;
function snake_case(name, separator) {
  separator = separator || '_';
  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {
    return (pos ? separator : '') + letter.toLowerCase();
  });
}

var bindJQueryFired = false;
function bindJQuery() {
  var originalCleanData;

  if (bindJQueryFired) {
    return;
  }

  // bind to jQuery if present;
  var jqName = jq();
  jQuery = isUndefined(jqName) ? window.jQuery :   // use jQuery (if present)
           !jqName             ? undefined     :   // use jqLite
                                 window[jqName];   // use jQuery specified by `ngJq`

  // Use jQuery if it exists with proper functionality, otherwise default to us.
  // Angular 1.2+ requires jQuery 1.7+ for on()/off() support.
  // Angular 1.3+ technically requires at least jQuery 2.1+ but it may work with older
  // versions. It will not work for sure with jQuery <1.7, though.
  if (jQuery && jQuery.fn.on) {
    jqLite = jQuery;
    extend(jQuery.fn, {
      scope: JQLitePrototype.scope,
      isolateScope: JQLitePrototype.isolateScope,
      controller: JQLitePrototype.controller,
      injector: JQLitePrototype.injector,
      inheritedData: JQLitePrototype.inheritedData
    });

    // All nodes removed from the DOM via various jQuery APIs like .remove()
    // are passed through jQuery.cleanData. Monkey-patch this method to fire
    // the $destroy event on all removed nodes.
    originalCleanData = jQuery.cleanData;
    jQuery.cleanData = function(elems) {
      var events;
      for (var i = 0, elem; (elem = elems[i]) != null; i++) {
        events = jQuery._data(elem, 'events');
        if (events && events.$destroy) {
          jQuery(elem).triggerHandler('$destroy');
        }
      }
      originalCleanData(elems);
    };
  } else {
    jqLite = JQLite;
  }

  angular.element = jqLite;

  // Prevent double-proxying.
  bindJQueryFired = true;
}

/**
 * throw error if the argument is falsy.
 */
function assertArg(arg, name, reason) {
  if (!arg) {
    throw ngMinErr('areq', 'Argument \'{0}\' is {1}', (name || '?'), (reason || 'required'));
  }
  return arg;
}

function assertArgFn(arg, name, acceptArrayAnnotation) {
  if (acceptArrayAnnotation && isArray(arg)) {
      arg = arg[arg.length - 1];
  }

  assertArg(isFunction(arg), name, 'not a function, got ' +
      (arg && typeof arg === 'object' ? arg.constructor.name || 'Object' : typeof arg));
  return arg;
}

/**
 * throw error if the name given is hasOwnProperty
 * @param  {String} name    the name to test
 * @param  {String} context the context in which the name is used, such as module or directive
 */
function assertNotHasOwnProperty(name, context) {
  if (name === 'hasOwnProperty') {
    throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);
  }
}

/**
 * Return the value accessible from the object by path. Any undefined traversals are ignored
 * @param {Object} obj starting object
 * @param {String} path path to traverse
 * @param {boolean} [bindFnToScope=true]
 * @returns {Object} value as accessible by path
 */
//TODO(misko): this function needs to be removed
function getter(obj, path, bindFnToScope) {
  if (!path) return obj;
  var keys = path.split('.');
  var key;
  var lastInstance = obj;
  var len = keys.length;

  for (var i = 0; i < len; i++) {
    key = keys[i];
    if (obj) {
      obj = (lastInstance = obj)[key];
    }
  }
  if (!bindFnToScope && isFunction(obj)) {
    return bind(lastInstance, obj);
  }
  return obj;
}

/**
 * Return the DOM siblings between the first and last node in the given array.
 * @param {Array} array like object
 * @returns {Array} the inputted object or a jqLite collection containing the nodes
 */
function getBlockNodes(nodes) {
  // TODO(perf): update `nodes` instead of creating a new object?
  var node = nodes[0];
  var endNode = nodes[nodes.length - 1];
  var blockNodes;

  for (var i = 1; node !== endNode && (node = node.nextSibling); i++) {
    if (blockNodes || nodes[i] !== node) {
      if (!blockNodes) {
        blockNodes = jqLite(slice.call(nodes, 0, i));
      }
      blockNodes.push(node);
    }
  }

  return blockNodes || nodes;
}


/**
 * Creates a new object without a prototype. This object is useful for lookup without having to
 * guard against prototypically inherited properties via hasOwnProperty.
 *
 * Related micro-benchmarks:
 * - http://jsperf.com/object-create2
 * - http://jsperf.com/proto-map-lookup/2
 * - http://jsperf.com/for-in-vs-object-keys2
 *
 * @returns {Object}
 */
function createMap() {
  return Object.create(null);
}

var NODE_TYPE_ELEMENT = 1;
var NODE_TYPE_ATTRIBUTE = 2;
var NODE_TYPE_TEXT = 3;
var NODE_TYPE_COMMENT = 8;
var NODE_TYPE_DOCUMENT = 9;
var NODE_TYPE_DOCUMENT_FRAGMENT = 11;

/**
 * @ngdoc type
 * @name angular.Module
 * @module ng
 * @description
 *
 * Interface for configuring angular {@link angular.module modules}.
 */

function setupModuleLoader(window) {

  var $injectorMinErr = minErr('$injector');
  var ngMinErr = minErr('ng');

  function ensure(obj, name, factory) {
    return obj[name] || (obj[name] = factory());
  }

  var angular = ensure(window, 'angular', Object);

  // We need to expose `angular.$$minErr` to modules such as `ngResource` that reference it during bootstrap
  angular.$$minErr = angular.$$minErr || minErr;

  return ensure(angular, 'module', function() {
    /** @type {Object.<string, angular.Module>} */
    var modules = {};

    /**
     * @ngdoc function
     * @name angular.module
     * @module ng
     * @description
     *
     * The `angular.module` is a global place for creating, registering and retrieving Angular
     * modules.
     * All modules (angular core or 3rd party) that should be available to an application must be
     * registered using this mechanism.
     *
     * Passing one argument retrieves an existing {@link angular.Module},
     * whereas passing more than one argument creates a new {@link angular.Module}
     *
     *
     * # Module
     *
     * A module is a collection of services, directives, controllers, filters, and configuration information.
     * `angular.module` is used to configure the {@link auto.$injector $injector}.
     *
     * ```js
     * // Create a new module
     * var myModule = angular.module('myModule', []);
     *
     * // register a new service
     * myModule.value('appName', 'MyCoolApp');
     *
     * // configure existing services inside initialization blocks.
     * myModule.config(['$locationProvider', function($locationProvider) {
     *   // Configure existing providers
     *   $locationProvider.hashPrefix('!');
     * }]);
     * ```
     *
     * Then you can create an injector and load your modules like this:
     *
     * ```js
     * var injector = angular.injector(['ng', 'myModule'])
     * ```
     *
     * However it's more likely that you'll just use
     * {@link ng.directive:ngApp ngApp} or
     * {@link angular.bootstrap} to simplify this process for you.
     *
     * @param {!string} name The name of the module to create or retrieve.
     * @param {!Array.<string>=} requires If specified then new module is being created. If
     *        unspecified then the module is being retrieved for further configuration.
     * @param {Function=} configFn Optional configuration function for the module. Same as
     *        {@link angular.Module#config Module#config()}.
     * @returns {angular.Module} new module with the {@link angular.Module} api.
     */
    return function module(name, requires, configFn) {
      var assertNotHasOwnProperty = function(name, context) {
        if (name === 'hasOwnProperty') {
          throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);
        }
      };

      assertNotHasOwnProperty(name, 'module');
      if (requires && modules.hasOwnProperty(name)) {
        modules[name] = null;
      }
      return ensure(modules, name, function() {
        if (!requires) {
          throw $injectorMinErr('nomod', 'Module \'{0}\' is not available! You either misspelled ' +
             'the module name or forgot to load it. If registering a module ensure that you ' +
             'specify the dependencies as the second argument.', name);
        }

        /** @type {!Array.<Array.<*>>} */
        var invokeQueue = [];

        /** @type {!Array.<Function>} */
        var configBlocks = [];

        /** @type {!Array.<Function>} */
        var runBlocks = [];

        var config = invokeLater('$injector', 'invoke', 'push', configBlocks);

        /** @type {angular.Module} */
        var moduleInstance = {
          // Private state
          _invokeQueue: invokeQueue,
          _configBlocks: configBlocks,
          _runBlocks: runBlocks,

          /**
           * @ngdoc property
           * @name angular.Module#requires
           * @module ng
           *
           * @description
           * Holds the list of modules which the injector will load before the current module is
           * loaded.
           */
          requires: requires,

          /**
           * @ngdoc property
           * @name angular.Module#name
           * @module ng
           *
           * @description
           * Name of the module.
           */
          name: name,


          /**
           * @ngdoc method
           * @name angular.Module#provider
           * @module ng
           * @param {string} name service name
           * @param {Function} providerType Construction function for creating new instance of the
           *                                service.
           * @description
           * See {@link auto.$provide#provider $provide.provider()}.
           */
          provider: invokeLaterAndSetModuleName('$provide', 'provider'),

          /**
           * @ngdoc method
           * @name angular.Module#factory
           * @module ng
           * @param {string} name service name
           * @param {Function} providerFunction Function for creating new instance of the service.
           * @description
           * See {@link auto.$provide#factory $provide.factory()}.
           */
          factory: invokeLaterAndSetModuleName('$provide', 'factory'),

          /**
           * @ngdoc method
           * @name angular.Module#service
           * @module ng
           * @param {string} name service name
           * @param {Function} constructor A constructor function that will be instantiated.
           * @description
           * See {@link auto.$provide#service $provide.service()}.
           */
          service: invokeLaterAndSetModuleName('$provide', 'service'),

          /**
           * @ngdoc method
           * @name angular.Module#value
           * @module ng
           * @param {string} name service name
           * @param {*} object Service instance object.
           * @description
           * See {@link auto.$provide#value $provide.value()}.
           */
          value: invokeLater('$provide', 'value'),

          /**
           * @ngdoc method
           * @name angular.Module#constant
           * @module ng
           * @param {string} name constant name
           * @param {*} object Constant value.
           * @description
           * Because the constants are fixed, they get applied before other provide methods.
           * See {@link auto.$provide#constant $provide.constant()}.
           */
          constant: invokeLater('$provide', 'constant', 'unshift'),

           /**
           * @ngdoc method
           * @name angular.Module#decorator
           * @module ng
           * @param {string} name The name of the service to decorate.
           * @param {Function} decorFn This function will be invoked when the service needs to be
           *                           instantiated and should return the decorated service instance.
           * @description
           * See {@link auto.$provide#decorator $provide.decorator()}.
           */
          decorator: invokeLaterAndSetModuleName('$provide', 'decorator'),

          /**
           * @ngdoc method
           * @name angular.Module#animation
           * @module ng
           * @param {string} name animation name
           * @param {Function} animationFactory Factory function for creating new instance of an
           *                                    animation.
           * @description
           *
           * **NOTE**: animations take effect only if the **ngAnimate** module is loaded.
           *
           *
           * Defines an animation hook that can be later used with
           * {@link $animate $animate} service and directives that use this service.
           *
           * ```js
           * module.animation('.animation-name', function($inject1, $inject2) {
           *   return {
           *     eventName : function(element, done) {
           *       //code to run the animation
           *       //once complete, then run done()
           *       return function cancellationFunction(element) {
           *         //code to cancel the animation
           *       }
           *     }
           *   }
           * })
           * ```
           *
           * See {@link ng.$animateProvider#register $animateProvider.register()} and
           * {@link ngAnimate ngAnimate module} for more information.
           */
          animation: invokeLaterAndSetModuleName('$animateProvider', 'register'),

          /**
           * @ngdoc method
           * @name angular.Module#filter
           * @module ng
           * @param {string} name Filter name - this must be a valid angular expression identifier
           * @param {Function} filterFactory Factory function for creating new instance of filter.
           * @description
           * See {@link ng.$filterProvider#register $filterProvider.register()}.
           *
           * <div class="alert alert-warning">
           * **Note:** Filter names must be valid angular {@link expression} identifiers, such as `uppercase` or `orderBy`.
           * Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace
           * your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores
           * (`myapp_subsection_filterx`).
           * </div>
           */
          filter: invokeLaterAndSetModuleName('$filterProvider', 'register'),

          /**
           * @ngdoc method
           * @name angular.Module#controller
           * @module ng
           * @param {string|Object} name Controller name, or an object map of controllers where the
           *    keys are the names and the values are the constructors.
           * @param {Function} constructor Controller constructor function.
           * @description
           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.
           */
          controller: invokeLaterAndSetModuleName('$controllerProvider', 'register'),

          /**
           * @ngdoc method
           * @name angular.Module#directive
           * @module ng
           * @param {string|Object} name Directive name, or an object map of directives where the
           *    keys are the names and the values are the factories.
           * @param {Function} directiveFactory Factory function for creating new instance of
           * directives.
           * @description
           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.
           */
          directive: invokeLaterAndSetModuleName('$compileProvider', 'directive'),

          /**
           * @ngdoc method
           * @name angular.Module#component
           * @module ng
           * @param {string} name Name of the component in camel-case (i.e. myComp which will match as my-comp)
           * @param {Object} options Component definition object (a simplified
           *    {@link ng.$compile#directive-definition-object directive definition object})
           *
           * @description
           * See {@link ng.$compileProvider#component $compileProvider.component()}.
           */
          component: invokeLaterAndSetModuleName('$compileProvider', 'component'),

          /**
           * @ngdoc method
           * @name angular.Module#config
           * @module ng
           * @param {Function} configFn Execute this function on module load. Useful for service
           *    configuration.
           * @description
           * Use this method to register work which needs to be performed on module loading.
           * For more about how to configure services, see
           * {@link providers#provider-recipe Provider Recipe}.
           */
          config: config,

          /**
           * @ngdoc method
           * @name angular.Module#run
           * @module ng
           * @param {Function} initializationFn Execute this function after injector creation.
           *    Useful for application initialization.
           * @description
           * Use this method to register work which should be performed when the injector is done
           * loading all modules.
           */
          run: function(block) {
            runBlocks.push(block);
            return this;
          }
        };

        if (configFn) {
          config(configFn);
        }

        return moduleInstance;

        /**
         * @param {string} provider
         * @param {string} method
         * @param {String=} insertMethod
         * @returns {angular.Module}
         */
        function invokeLater(provider, method, insertMethod, queue) {
          if (!queue) queue = invokeQueue;
          return function() {
            queue[insertMethod || 'push']([provider, method, arguments]);
            return moduleInstance;
          };
        }

        /**
         * @param {string} provider
         * @param {string} method
         * @returns {angular.Module}
         */
        function invokeLaterAndSetModuleName(provider, method) {
          return function(recipeName, factoryFunction) {
            if (factoryFunction && isFunction(factoryFunction)) factoryFunction.$$moduleName = name;
            invokeQueue.push([provider, method, arguments]);
            return moduleInstance;
          };
        }
      });
    };
  });

}

/* global shallowCopy: true */

/**
 * Creates a shallow copy of an object, an array or a primitive.
 *
 * Assumes that there are no proto properties for objects.
 */
function shallowCopy(src, dst) {
  if (isArray(src)) {
    dst = dst || [];

    for (var i = 0, ii = src.length; i < ii; i++) {
      dst[i] = src[i];
    }
  } else if (isObject(src)) {
    dst = dst || {};

    for (var key in src) {
      if (!(key.charAt(0) === '$' && key.charAt(1) === '$')) {
        dst[key] = src[key];
      }
    }
  }

  return dst || src;
}

/* global toDebugString: true */

function serializeObject(obj) {
  var seen = [];

  return JSON.stringify(obj, function(key, val) {
    val = toJsonReplacer(key, val);
    if (isObject(val)) {

      if (seen.indexOf(val) >= 0) return '...';

      seen.push(val);
    }
    return val;
  });
}

function toDebugString(obj) {
  if (typeof obj === 'function') {
    return obj.toString().replace(/ \{[\s\S]*$/, '');
  } else if (isUndefined(obj)) {
    return 'undefined';
  } else if (typeof obj !== 'string') {
    return serializeObject(obj);
  }
  return obj;
}

/* global angularModule: true,
  version: true,

  $CompileProvider,

  htmlAnchorDirective,
  inputDirective,
  inputDirective,
  formDirective,
  scriptDirective,
  selectDirective,
  optionDirective,
  ngBindDirective,
  ngBindHtmlDirective,
  ngBindTemplateDirective,
  ngClassDirective,
  ngClassEvenDirective,
  ngClassOddDirective,
  ngCloakDirective,
  ngControllerDirective,
  ngFormDirective,
  ngHideDirective,
  ngIfDirective,
  ngIncludeDirective,
  ngIncludeFillContentDirective,
  ngInitDirective,
  ngNonBindableDirective,
  ngPluralizeDirective,
  ngRepeatDirective,
  ngShowDirective,
  ngStyleDirective,
  ngSwitchDirective,
  ngSwitchWhenDirective,
  ngSwitchDefaultDirective,
  ngOptionsDirective,
  ngTranscludeDirective,
  ngModelDirective,
  ngListDirective,
  ngChangeDirective,
  patternDirective,
  patternDirective,
  requiredDirective,
  requiredDirective,
  minlengthDirective,
  minlengthDirective,
  maxlengthDirective,
  maxlengthDirective,
  ngValueDirective,
  ngModelOptionsDirective,
  ngAttributeAliasDirectives,
  ngEventDirectives,

  $AnchorScrollProvider,
  $AnimateProvider,
  $CoreAnimateCssProvider,
  $$CoreAnimateJsProvider,
  $$CoreAnimateQueueProvider,
  $$AnimateRunnerFactoryProvider,
  $$AnimateAsyncRunFactoryProvider,
  $BrowserProvider,
  $CacheFactoryProvider,
  $ControllerProvider,
  $DateProvider,
  $DocumentProvider,
  $ExceptionHandlerProvider,
  $FilterProvider,
  $$ForceReflowProvider,
  $InterpolateProvider,
  $IntervalProvider,
  $$HashMapProvider,
  $HttpProvider,
  $HttpParamSerializerProvider,
  $HttpParamSerializerJQLikeProvider,
  $HttpBackendProvider,
  $xhrFactoryProvider,
  $jsonpCallbacksProvider,
  $LocationProvider,
  $LogProvider,
  $ParseProvider,
  $RootScopeProvider,
  $QProvider,
  $$QProvider,
  $$SanitizeUriProvider,
  $SceProvider,
  $SceDelegateProvider,
  $SnifferProvider,
  $TemplateCacheProvider,
  $TemplateRequestProvider,
  $$TestabilityProvider,
  $TimeoutProvider,
  $$RAFProvider,
  $WindowProvider,
  $$jqLiteProvider,
  $$CookieReaderProvider
*/


/**
 * @ngdoc object
 * @name angular.version
 * @module ng
 * @description
 * An object that contains information about the current AngularJS version.
 *
 * This object has the following properties:
 *
 * - `full` – `{string}` – Full version string, such as "0.9.18".
 * - `major` – `{number}` – Major version number, such as "0".
 * - `minor` – `{number}` – Minor version number, such as "9".
 * - `dot` – `{number}` – Dot version number, such as "18".
 * - `codeName` – `{string}` – Code name of the release, such as "jiggling-armfat".
 */
var version = {
  // These placeholder strings will be replaced by grunt's `build` task.
  // They need to be double- or single-quoted.
  full: '1.5.11',
  major: 1,
  minor: 5,
  dot: 11,
  codeName: 'princely-quest'
};


function publishExternalAPI(angular) {
  extend(angular, {
    'bootstrap': bootstrap,
    'copy': copy,
    'extend': extend,
    'merge': merge,
    'equals': equals,
    'element': jqLite,
    'forEach': forEach,
    'injector': createInjector,
    'noop': noop,
    'bind': bind,
    'toJson': toJson,
    'fromJson': fromJson,
    'identity': identity,
    'isUndefined': isUndefined,
    'isDefined': isDefined,
    'isString': isString,
    'isFunction': isFunction,
    'isObject': isObject,
    'isNumber': isNumber,
    'isElement': isElement,
    'isArray': isArray,
    'version': version,
    'isDate': isDate,
    'lowercase': lowercase,
    'uppercase': uppercase,
    'callbacks': {$$counter: 0},
    'getTestability': getTestability,
    '$$minErr': minErr,
    '$$csp': csp,
    'reloadWithDebugInfo': reloadWithDebugInfo
  });

  angularModule = setupModuleLoader(window);

  angularModule('ng', ['ngLocale'], ['$provide',
    function ngModule($provide) {
      // $$sanitizeUriProvider needs to be before $compileProvider as it is used by it.
      $provide.provider({
        $$sanitizeUri: $$SanitizeUriProvider
      });
      $provide.provider('$compile', $CompileProvider).
        directive({
            a: htmlAnchorDirective,
            input: inputDirective,
            textarea: inputDirective,
            form: formDirective,
            script: scriptDirective,
            select: selectDirective,
            option: optionDirective,
            ngBind: ngBindDirective,
            ngBindHtml: ngBindHtmlDirective,
            ngBindTemplate: ngBindTemplateDirective,
            ngClass: ngClassDirective,
            ngClassEven: ngClassEvenDirective,
            ngClassOdd: ngClassOddDirective,
            ngCloak: ngCloakDirective,
            ngController: ngControllerDirective,
            ngForm: ngFormDirective,
            ngHide: ngHideDirective,
            ngIf: ngIfDirective,
            ngInclude: ngIncludeDirective,
            ngInit: ngInitDirective,
            ngNonBindable: ngNonBindableDirective,
            ngPluralize: ngPluralizeDirective,
            ngRepeat: ngRepeatDirective,
            ngShow: ngShowDirective,
            ngStyle: ngStyleDirective,
            ngSwitch: ngSwitchDirective,
            ngSwitchWhen: ngSwitchWhenDirective,
            ngSwitchDefault: ngSwitchDefaultDirective,
            ngOptions: ngOptionsDirective,
            ngTransclude: ngTranscludeDirective,
            ngModel: ngModelDirective,
            ngList: ngListDirective,
            ngChange: ngChangeDirective,
            pattern: patternDirective,
            ngPattern: patternDirective,
            required: requiredDirective,
            ngRequired: requiredDirective,
            minlength: minlengthDirective,
            ngMinlength: minlengthDirective,
            maxlength: maxlengthDirective,
            ngMaxlength: maxlengthDirective,
            ngValue: ngValueDirective,
            ngModelOptions: ngModelOptionsDirective
        }).
        directive({
          ngInclude: ngIncludeFillContentDirective
        }).
        directive(ngAttributeAliasDirectives).
        directive(ngEventDirectives);
      $provide.provider({
        $anchorScroll: $AnchorScrollProvider,
        $animate: $AnimateProvider,
        $animateCss: $CoreAnimateCssProvider,
        $$animateJs: $$CoreAnimateJsProvider,
        $$animateQueue: $$CoreAnimateQueueProvider,
        $$AnimateRunner: $$AnimateRunnerFactoryProvider,
        $$animateAsyncRun: $$AnimateAsyncRunFactoryProvider,
        $browser: $BrowserProvider,
        $cacheFactory: $CacheFactoryProvider,
        $controller: $ControllerProvider,
        $document: $DocumentProvider,
        $exceptionHandler: $ExceptionHandlerProvider,
        $filter: $FilterProvider,
        $$forceReflow: $$ForceReflowProvider,
        $interpolate: $InterpolateProvider,
        $interval: $IntervalProvider,
        $http: $HttpProvider,
        $httpParamSerializer: $HttpParamSerializerProvider,
        $httpParamSerializerJQLike: $HttpParamSerializerJQLikeProvider,
        $httpBackend: $HttpBackendProvider,
        $xhrFactory: $xhrFactoryProvider,
        $jsonpCallbacks: $jsonpCallbacksProvider,
        $location: $LocationProvider,
        $log: $LogProvider,
        $parse: $ParseProvider,
        $rootScope: $RootScopeProvider,
        $q: $QProvider,
        $$q: $$QProvider,
        $sce: $SceProvider,
        $sceDelegate: $SceDelegateProvider,
        $sniffer: $SnifferProvider,
        $templateCache: $TemplateCacheProvider,
        $templateRequest: $TemplateRequestProvider,
        $$testability: $$TestabilityProvider,
        $timeout: $TimeoutProvider,
        $window: $WindowProvider,
        $$rAF: $$RAFProvider,
        $$jqLite: $$jqLiteProvider,
        $$HashMap: $$HashMapProvider,
        $$cookieReader: $$CookieReaderProvider
      });
    }
  ]);
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *     Any commits to this file should be reviewed with security in mind.  *
 *   Changes to this file can potentially create security vulnerabilities. *
 *          An approval from 2 Core members with history of modifying      *
 *                         this file is required.                          *
 *                                                                         *
 *  Does the change somehow allow for arbitrary javascript to be executed? *
 *    Or allows for someone to change the prototype of built-in objects?   *
 *     Or gives undesired access to variables likes document or window?    *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/* global JQLitePrototype: true,
  addEventListenerFn: true,
  removeEventListenerFn: true,
  BOOLEAN_ATTR: true,
  ALIASED_ATTR: true
*/

//////////////////////////////////
//JQLite
//////////////////////////////////

/**
 * @ngdoc function
 * @name angular.element
 * @module ng
 * @kind function
 *
 * @description
 * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.
 *
 * If jQuery is available, `angular.element` is an alias for the
 * [jQuery](http://api.jquery.com/jQuery/) function. If jQuery is not available, `angular.element`
 * delegates to Angular's built-in subset of jQuery, called "jQuery lite" or **jqLite**.
 *
 * jqLite is a tiny, API-compatible subset of jQuery that allows
 * Angular to manipulate the DOM in a cross-browser compatible way. jqLite implements only the most
 * commonly needed functionality with the goal of having a very small footprint.
 *
 * To use `jQuery`, simply ensure it is loaded before the `angular.js` file. You can also use the
 * {@link ngJq `ngJq`} directive to specify that jqlite should be used over jQuery, or to use a
 * specific version of jQuery if multiple versions exist on the page.
 *
 * <div class="alert alert-info">**Note:** All element references in Angular are always wrapped with jQuery or
 * jqLite (such as the element argument in a directive's compile / link function). They are never raw DOM references.</div>
 *
 * <div class="alert alert-warning">**Note:** Keep in mind that this function will not find elements
 * by tag name / CSS selector. For lookups by tag name, try instead `angular.element(document).find(...)`
 * or `$document.find()`, or use the standard DOM APIs, e.g. `document.querySelectorAll()`.</div>
 *
 * ## Angular's jqLite
 * jqLite provides only the following jQuery methods:
 *
 * - [`addClass()`](http://api.jquery.com/addClass/) - Does not support a function as first argument
 * - [`after()`](http://api.jquery.com/after/)
 * - [`append()`](http://api.jquery.com/append/)
 * - [`attr()`](http://api.jquery.com/attr/) - Does not support functions as parameters
 * - [`bind()`](http://api.jquery.com/bind/) - Does not support namespaces, selectors or eventData
 * - [`children()`](http://api.jquery.com/children/) - Does not support selectors
 * - [`clone()`](http://api.jquery.com/clone/)
 * - [`contents()`](http://api.jquery.com/contents/)
 * - [`css()`](http://api.jquery.com/css/) - Only retrieves inline-styles, does not call `getComputedStyle()`.
 *   As a setter, does not convert numbers to strings or append 'px', and also does not have automatic property prefixing.
 * - [`data()`](http://api.jquery.com/data/)
 * - [`detach()`](http://api.jquery.com/detach/)
 * - [`empty()`](http://api.jquery.com/empty/)
 * - [`eq()`](http://api.jquery.com/eq/)
 * - [`find()`](http://api.jquery.com/find/) - Limited to lookups by tag name
 * - [`hasClass()`](http://api.jquery.com/hasClass/)
 * - [`html()`](http://api.jquery.com/html/)
 * - [`next()`](http://api.jquery.com/next/) - Does not support selectors
 * - [`on()`](http://api.jquery.com/on/) - Does not support namespaces, selectors or eventData
 * - [`off()`](http://api.jquery.com/off/) - Does not support namespaces, selectors or event object as parameter
 * - [`one()`](http://api.jquery.com/one/) - Does not support namespaces or selectors
 * - [`parent()`](http://api.jquery.com/parent/) - Does not support selectors
 * - [`prepend()`](http://api.jquery.com/prepend/)
 * - [`prop()`](http://api.jquery.com/prop/)
 * - [`ready()`](http://api.jquery.com/ready/)
 * - [`remove()`](http://api.jquery.com/remove/)
 * - [`removeAttr()`](http://api.jquery.com/removeAttr/) - Does not support multiple attributes
 * - [`removeClass()`](http://api.jquery.com/removeClass/) - Does not support a function as first argument
 * - [`removeData()`](http://api.jquery.com/removeData/)
 * - [`replaceWith()`](http://api.jquery.com/replaceWith/)
 * - [`text()`](http://api.jquery.com/text/)
 * - [`toggleClass()`](http://api.jquery.com/toggleClass/) - Does not support a function as first argument
 * - [`triggerHandler()`](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers
 * - [`unbind()`](http://api.jquery.com/unbind/) - Does not support namespaces or event object as parameter
 * - [`val()`](http://api.jquery.com/val/)
 * - [`wrap()`](http://api.jquery.com/wrap/)
 *
 * ## jQuery/jqLite Extras
 * Angular also provides the following additional methods and events to both jQuery and jqLite:
 *
 * ### Events
 * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event
 *    on all DOM nodes being removed.  This can be used to clean up any 3rd party bindings to the DOM
 *    element before it is removed.
 *
 * ### Methods
 * - `controller(name)` - retrieves the controller of the current element or its parent. By default
 *   retrieves controller associated with the `ngController` directive. If `name` is provided as
 *   camelCase directive name, then the controller for this directive will be retrieved (e.g.
 *   `'ngModel'`).
 * - `injector()` - retrieves the injector of the current element or its parent.
 * - `scope()` - retrieves the {@link ng.$rootScope.Scope scope} of the current
 *   element or its parent. Requires {@link guide/production#disabling-debug-data Debug Data} to
 *   be enabled.
 * - `isolateScope()` - retrieves an isolate {@link ng.$rootScope.Scope scope} if one is attached directly to the
 *   current element. This getter should be used only on elements that contain a directive which starts a new isolate
 *   scope. Calling `scope()` on this element always returns the original non-isolate scope.
 *   Requires {@link guide/production#disabling-debug-data Debug Data} to be enabled.
 * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top
 *   parent element is reached.
 *
 * @knownIssue You cannot spy on `angular.element` if you are using Jasmine version 1.x. See
 * https://github.com/angular/angular.js/issues/14251 for more information.
 *
 * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.
 * @returns {Object} jQuery object.
 */

JQLite.expando = 'ng339';

var jqCache = JQLite.cache = {},
    jqId = 1,
    addEventListenerFn = function(element, type, fn) {
      element.addEventListener(type, fn, false);
    },
    removeEventListenerFn = function(element, type, fn) {
      element.removeEventListener(type, fn, false);
    };

/*
 * !!! This is an undocumented "private" function !!!
 */
JQLite._data = function(node) {
  //jQuery always returns an object on cache miss
  return this.cache[node[this.expando]] || {};
};

function jqNextId() { return ++jqId; }


var SPECIAL_CHARS_REGEXP = /([:\-_]+(.))/g;
var MOZ_HACK_REGEXP = /^moz([A-Z])/;
var MOUSE_EVENT_MAP = { mouseleave: 'mouseout', mouseenter: 'mouseover' };
var jqLiteMinErr = minErr('jqLite');

/**
 * Converts snake_case to camelCase.
 * Also there is special case for Moz prefix starting with upper case letter.
 * @param name Name to normalize
 */
function camelCase(name) {
  return name.
    replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {
      return offset ? letter.toUpperCase() : letter;
    }).
    replace(MOZ_HACK_REGEXP, 'Moz$1');
}

var SINGLE_TAG_REGEXP = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/;
var HTML_REGEXP = /<|&#?\w+;/;
var TAG_NAME_REGEXP = /<([\w:-]+)/;
var XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi;

var wrapMap = {
  'option': [1, '<select multiple="multiple">', '</select>'],

  'thead': [1, '<table>', '</table>'],
  'col': [2, '<table><colgroup>', '</colgroup></table>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],
  'td': [3, '<table><tbody><tr>', '</tr></tbody></table>'],
  '_default': [0, '', '']
};

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function jqLiteIsTextNode(html) {
  return !HTML_REGEXP.test(html);
}

function jqLiteAcceptsData(node) {
  // The window object can accept data but has no nodeType
  // Otherwise we are only interested in elements (1) and documents (9)
  var nodeType = node.nodeType;
  return nodeType === NODE_TYPE_ELEMENT || !nodeType || nodeType === NODE_TYPE_DOCUMENT;
}

function jqLiteHasData(node) {
  for (var key in jqCache[node.ng339]) {
    return true;
  }
  return false;
}

function jqLiteCleanData(nodes) {
  for (var i = 0, ii = nodes.length; i < ii; i++) {
    jqLiteRemoveData(nodes[i]);
  }
}

function jqLiteBuildFragment(html, context) {
  var tmp, tag, wrap,
      fragment = context.createDocumentFragment(),
      nodes = [], i;

  if (jqLiteIsTextNode(html)) {
    // Convert non-html into a text node
    nodes.push(context.createTextNode(html));
  } else {
    // Convert html into DOM nodes
    tmp = fragment.appendChild(context.createElement('div'));
    tag = (TAG_NAME_REGEXP.exec(html) || ['', ''])[1].toLowerCase();
    wrap = wrapMap[tag] || wrapMap._default;
    tmp.innerHTML = wrap[1] + html.replace(XHTML_TAG_REGEXP, '<$1></$2>') + wrap[2];

    // Descend through wrappers to the right content
    i = wrap[0];
    while (i--) {
      tmp = tmp.lastChild;
    }

    nodes = concat(nodes, tmp.childNodes);

    tmp = fragment.firstChild;
    tmp.textContent = '';
  }

  // Remove wrapper from fragment
  fragment.textContent = '';
  fragment.innerHTML = ''; // Clear inner HTML
  forEach(nodes, function(node) {
    fragment.appendChild(node);
  });

  return fragment;
}

function jqLiteParseHTML(html, context) {
  context = context || window.document;
  var parsed;

  if ((parsed = SINGLE_TAG_REGEXP.exec(html))) {
    return [context.createElement(parsed[1])];
  }

  if ((parsed = jqLiteBuildFragment(html, context))) {
    return parsed.childNodes;
  }

  return [];
}

function jqLiteWrapNode(node, wrapper) {
  var parent = node.parentNode;

  if (parent) {
    parent.replaceChild(wrapper, node);
  }

  wrapper.appendChild(node);
}


// IE9-11 has no method "contains" in SVG element and in Node.prototype. Bug #10259.
var jqLiteContains = window.Node.prototype.contains || /** @this */ function(arg) {
  // eslint-disable-next-line no-bitwise
  return !!(this.compareDocumentPosition(arg) & 16);
};

/////////////////////////////////////////////
function JQLite(element) {
  if (element instanceof JQLite) {
    return element;
  }

  var argIsString;

  if (isString(element)) {
    element = trim(element);
    argIsString = true;
  }
  if (!(this instanceof JQLite)) {
    if (argIsString && element.charAt(0) !== '<') {
      throw jqLiteMinErr('nosel', 'Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');
    }
    return new JQLite(element);
  }

  if (argIsString) {
    jqLiteAddNodes(this, jqLiteParseHTML(element));
  } else {
    jqLiteAddNodes(this, element);
  }
}

function jqLiteClone(element) {
  return element.cloneNode(true);
}

function jqLiteDealoc(element, onlyDescendants) {
  if (!onlyDescendants) jqLiteRemoveData(element);

  if (element.querySelectorAll) {
    var descendants = element.querySelectorAll('*');
    for (var i = 0, l = descendants.length; i < l; i++) {
      jqLiteRemoveData(descendants[i]);
    }
  }
}

function jqLiteOff(element, type, fn, unsupported) {
  if (isDefined(unsupported)) throw jqLiteMinErr('offargs', 'jqLite#off() does not support the `selector` argument');

  var expandoStore = jqLiteExpandoStore(element);
  var events = expandoStore && expandoStore.events;
  var handle = expandoStore && expandoStore.handle;

  if (!handle) return; //no listeners registered

  if (!type) {
    for (type in events) {
      if (type !== '$destroy') {
        removeEventListenerFn(element, type, handle);
      }
      delete events[type];
    }
  } else {

    var removeHandler = function(type) {
      var listenerFns = events[type];
      if (isDefined(fn)) {
        arrayRemove(listenerFns || [], fn);
      }
      if (!(isDefined(fn) && listenerFns && listenerFns.length > 0)) {
        removeEventListenerFn(element, type, handle);
        delete events[type];
      }
    };

    forEach(type.split(' '), function(type) {
      removeHandler(type);
      if (MOUSE_EVENT_MAP[type]) {
        removeHandler(MOUSE_EVENT_MAP[type]);
      }
    });
  }
}

function jqLiteRemoveData(element, name) {
  var expandoId = element.ng339;
  var expandoStore = expandoId && jqCache[expandoId];

  if (expandoStore) {
    if (name) {
      delete expandoStore.data[name];
      return;
    }

    if (expandoStore.handle) {
      if (expandoStore.events.$destroy) {
        expandoStore.handle({}, '$destroy');
      }
      jqLiteOff(element);
    }
    delete jqCache[expandoId];
    element.ng339 = undefined; // don't delete DOM expandos. IE and Chrome don't like it
  }
}


function jqLiteExpandoStore(element, createIfNecessary) {
  var expandoId = element.ng339,
      expandoStore = expandoId && jqCache[expandoId];

  if (createIfNecessary && !expandoStore) {
    element.ng339 = expandoId = jqNextId();
    expandoStore = jqCache[expandoId] = {events: {}, data: {}, handle: undefined};
  }

  return expandoStore;
}


function jqLiteData(element, key, value) {
  if (jqLiteAcceptsData(element)) {

    var isSimpleSetter = isDefined(value);
    var isSimpleGetter = !isSimpleSetter && key && !isObject(key);
    var massGetter = !key;
    var expandoStore = jqLiteExpandoStore(element, !isSimpleGetter);
    var data = expandoStore && expandoStore.data;

    if (isSimpleSetter) { // data('key', value)
      data[key] = value;
    } else {
      if (massGetter) {  // data()
        return data;
      } else {
        if (isSimpleGetter) { // data('key')
          // don't force creation of expandoStore if it doesn't exist yet
          return data && data[key];
        } else { // mass-setter: data({key1: val1, key2: val2})
          extend(data, key);
        }
      }
    }
  }
}

function jqLiteHasClass(element, selector) {
  if (!element.getAttribute) return false;
  return ((' ' + (element.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ').
      indexOf(' ' + selector + ' ') > -1);
}

function jqLiteRemoveClass(element, cssClasses) {
  if (cssClasses && element.setAttribute) {
    forEach(cssClasses.split(' '), function(cssClass) {
      element.setAttribute('class', trim(
          (' ' + (element.getAttribute('class') || '') + ' ')
          .replace(/[\n\t]/g, ' ')
          .replace(' ' + trim(cssClass) + ' ', ' '))
      );
    });
  }
}

function jqLiteAddClass(element, cssClasses) {
  if (cssClasses && element.setAttribute) {
    var existingClasses = (' ' + (element.getAttribute('class') || '') + ' ')
                            .replace(/[\n\t]/g, ' ');

    forEach(cssClasses.split(' '), function(cssClass) {
      cssClass = trim(cssClass);
      if (existingClasses.indexOf(' ' + cssClass + ' ') === -1) {
        existingClasses += cssClass + ' ';
      }
    });

    element.setAttribute('class', trim(existingClasses));
  }
}


function jqLiteAddNodes(root, elements) {
  // THIS CODE IS VERY HOT. Don't make changes without benchmarking.

  if (elements) {

    // if a Node (the most common case)
    if (elements.nodeType) {
      root[root.length++] = elements;
    } else {
      var length = elements.length;

      // if an Array or NodeList and not a Window
      if (typeof length === 'number' && elements.window !== elements) {
        if (length) {
          for (var i = 0; i < length; i++) {
            root[root.length++] = elements[i];
          }
        }
      } else {
        root[root.length++] = elements;
      }
    }
  }
}


function jqLiteController(element, name) {
  return jqLiteInheritedData(element, '$' + (name || 'ngController') + 'Controller');
}

function jqLiteInheritedData(element, name, value) {
  // if element is the document object work with the html element instead
  // this makes $(document).scope() possible
  if (element.nodeType === NODE_TYPE_DOCUMENT) {
    element = element.documentElement;
  }
  var names = isArray(name) ? name : [name];

  while (element) {
    for (var i = 0, ii = names.length; i < ii; i++) {
      if (isDefined(value = jqLite.data(element, names[i]))) return value;
    }

    // If dealing with a document fragment node with a host element, and no parent, use the host
    // element as the parent. This enables directives within a Shadow DOM or polyfilled Shadow DOM
    // to lookup parent controllers.
    element = element.parentNode || (element.nodeType === NODE_TYPE_DOCUMENT_FRAGMENT && element.host);
  }
}

function jqLiteEmpty(element) {
  jqLiteDealoc(element, true);
  while (element.firstChild) {
    element.removeChild(element.firstChild);
  }
}

function jqLiteRemove(element, keepData) {
  if (!keepData) jqLiteDealoc(element);
  var parent = element.parentNode;
  if (parent) parent.removeChild(element);
}


function jqLiteDocumentLoaded(action, win) {
  win = win || window;
  if (win.document.readyState === 'complete') {
    // Force the action to be run async for consistent behavior
    // from the action's point of view
    // i.e. it will definitely not be in a $apply
    win.setTimeout(action);
  } else {
    // No need to unbind this handler as load is only ever called once
    jqLite(win).on('load', action);
  }
}

//////////////////////////////////////////
// Functions which are declared directly.
//////////////////////////////////////////
var JQLitePrototype = JQLite.prototype = {
  ready: function(fn) {
    var fired = false;

    function trigger() {
      if (fired) return;
      fired = true;
      fn();
    }

    // check if document is already loaded
    if (window.document.readyState === 'complete') {
      window.setTimeout(trigger);
    } else {
      this.on('DOMContentLoaded', trigger); // works for modern browsers and IE9
      // we can not use jqLite since we are not done loading and jQuery could be loaded later.
      // eslint-disable-next-line new-cap
      JQLite(window).on('load', trigger); // fallback to window.onload for others
    }
  },
  toString: function() {
    var value = [];
    forEach(this, function(e) { value.push('' + e);});
    return '[' + value.join(', ') + ']';
  },

  eq: function(index) {
      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);
  },

  length: 0,
  push: push,
  sort: [].sort,
  splice: [].splice
};

//////////////////////////////////////////
// Functions iterating getter/setters.
// these functions return self on setter and
// value on get.
//////////////////////////////////////////
var BOOLEAN_ATTR = {};
forEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function(value) {
  BOOLEAN_ATTR[lowercase(value)] = value;
});
var BOOLEAN_ELEMENTS = {};
forEach('input,select,option,textarea,button,form,details'.split(','), function(value) {
  BOOLEAN_ELEMENTS[value] = true;
});
var ALIASED_ATTR = {
  'ngMinlength': 'minlength',
  'ngMaxlength': 'maxlength',
  'ngMin': 'min',
  'ngMax': 'max',
  'ngPattern': 'pattern'
};

function getBooleanAttrName(element, name) {
  // check dom last since we will most likely fail on name
  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];

  // booleanAttr is here twice to minimize DOM access
  return booleanAttr && BOOLEAN_ELEMENTS[nodeName_(element)] && booleanAttr;
}

function getAliasedAttrName(name) {
  return ALIASED_ATTR[name];
}

forEach({
  data: jqLiteData,
  removeData: jqLiteRemoveData,
  hasData: jqLiteHasData,
  cleanData: jqLiteCleanData
}, function(fn, name) {
  JQLite[name] = fn;
});

forEach({
  data: jqLiteData,
  inheritedData: jqLiteInheritedData,

  scope: function(element) {
    // Can't use jqLiteData here directly so we stay compatible with jQuery!
    return jqLite.data(element, '$scope') || jqLiteInheritedData(element.parentNode || element, ['$isolateScope', '$scope']);
  },

  isolateScope: function(element) {
    // Can't use jqLiteData here directly so we stay compatible with jQuery!
    return jqLite.data(element, '$isolateScope') || jqLite.data(element, '$isolateScopeNoTemplate');
  },

  controller: jqLiteController,

  injector: function(element) {
    return jqLiteInheritedData(element, '$injector');
  },

  removeAttr: function(element, name) {
    element.removeAttribute(name);
  },

  hasClass: jqLiteHasClass,

  css: function(element, name, value) {
    name = camelCase(name);

    if (isDefined(value)) {
      element.style[name] = value;
    } else {
      return element.style[name];
    }
  },

  attr: function(element, name, value) {
    var nodeType = element.nodeType;
    if (nodeType === NODE_TYPE_TEXT || nodeType === NODE_TYPE_ATTRIBUTE || nodeType === NODE_TYPE_COMMENT) {
      return;
    }
    var lowercasedName = lowercase(name);
    if (BOOLEAN_ATTR[lowercasedName]) {
      if (isDefined(value)) {
        if (value) {
          element[name] = true;
          element.setAttribute(name, lowercasedName);
        } else {
          element[name] = false;
          element.removeAttribute(lowercasedName);
        }
      } else {
        return (element[name] ||
                 (element.attributes.getNamedItem(name) || noop).specified)
               ? lowercasedName
               : undefined;
      }
    } else if (isDefined(value)) {
      element.setAttribute(name, value);
    } else if (element.getAttribute) {
      // the extra argument "2" is to get the right thing for a.href in IE, see jQuery code
      // some elements (e.g. Document) don't have get attribute, so return undefined
      var ret = element.getAttribute(name, 2);
      // normalize non-existing attributes to undefined (as jQuery)
      return ret === null ? undefined : ret;
    }
  },

  prop: function(element, name, value) {
    if (isDefined(value)) {
      element[name] = value;
    } else {
      return element[name];
    }
  },

  text: (function() {
    getText.$dv = '';
    return getText;

    function getText(element, value) {
      if (isUndefined(value)) {
        var nodeType = element.nodeType;
        return (nodeType === NODE_TYPE_ELEMENT || nodeType === NODE_TYPE_TEXT) ? element.textContent : '';
      }
      element.textContent = value;
    }
  })(),

  val: function(element, value) {
    if (isUndefined(value)) {
      if (element.multiple && nodeName_(element) === 'select') {
        var result = [];
        forEach(element.options, function(option) {
          if (option.selected) {
            result.push(option.value || option.text);
          }
        });
        return result.length === 0 ? null : result;
      }
      return element.value;
    }
    element.value = value;
  },

  html: function(element, value) {
    if (isUndefined(value)) {
      return element.innerHTML;
    }
    jqLiteDealoc(element, true);
    element.innerHTML = value;
  },

  empty: jqLiteEmpty
}, function(fn, name) {
  /**
   * Properties: writes return selection, reads return first value
   */
  JQLite.prototype[name] = function(arg1, arg2) {
    var i, key;
    var nodeCount = this.length;

    // jqLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it
    // in a way that survives minification.
    // jqLiteEmpty takes no arguments but is a setter.
    if (fn !== jqLiteEmpty &&
        (isUndefined((fn.length === 2 && (fn !== jqLiteHasClass && fn !== jqLiteController)) ? arg1 : arg2))) {
      if (isObject(arg1)) {

        // we are a write, but the object properties are the key/values
        for (i = 0; i < nodeCount; i++) {
          if (fn === jqLiteData) {
            // data() takes the whole object in jQuery
            fn(this[i], arg1);
          } else {
            for (key in arg1) {
              fn(this[i], key, arg1[key]);
            }
          }
        }
        // return self for chaining
        return this;
      } else {
        // we are a read, so read the first child.
        // TODO: do we still need this?
        var value = fn.$dv;
        // Only if we have $dv do we iterate over all, otherwise it is just the first element.
        var jj = (isUndefined(value)) ? Math.min(nodeCount, 1) : nodeCount;
        for (var j = 0; j < jj; j++) {
          var nodeValue = fn(this[j], arg1, arg2);
          value = value ? value + nodeValue : nodeValue;
        }
        return value;
      }
    } else {
      // we are a write, so apply to all children
      for (i = 0; i < nodeCount; i++) {
        fn(this[i], arg1, arg2);
      }
      // return self for chaining
      return this;
    }
  };
});

function createEventHandler(element, events) {
  var eventHandler = function(event, type) {
    // jQuery specific api
    event.isDefaultPrevented = function() {
      return event.defaultPrevented;
    };

    var eventFns = events[type || event.type];
    var eventFnsLength = eventFns ? eventFns.length : 0;

    if (!eventFnsLength) return;

    if (isUndefined(event.immediatePropagationStopped)) {
      var originalStopImmediatePropagation = event.stopImmediatePropagation;
      event.stopImmediatePropagation = function() {
        event.immediatePropagationStopped = true;

        if (event.stopPropagation) {
          event.stopPropagation();
        }

        if (originalStopImmediatePropagation) {
          originalStopImmediatePropagation.call(event);
        }
      };
    }

    event.isImmediatePropagationStopped = function() {
      return event.immediatePropagationStopped === true;
    };

    // Some events have special handlers that wrap the real handler
    var handlerWrapper = eventFns.specialHandlerWrapper || defaultHandlerWrapper;

    // Copy event handlers in case event handlers array is modified during execution.
    if ((eventFnsLength > 1)) {
      eventFns = shallowCopy(eventFns);
    }

    for (var i = 0; i < eventFnsLength; i++) {
      if (!event.isImmediatePropagationStopped()) {
        handlerWrapper(element, event, eventFns[i]);
      }
    }
  };

  // TODO: this is a hack for angularMocks/clearDataCache that makes it possible to deregister all
  //       events on `element`
  eventHandler.elem = element;
  return eventHandler;
}

function defaultHandlerWrapper(element, event, handler) {
  handler.call(element, event);
}

function specialMouseHandlerWrapper(target, event, handler) {
  // Refer to jQuery's implementation of mouseenter & mouseleave
  // Read about mouseenter and mouseleave:
  // http://www.quirksmode.org/js/events_mouse.html#link8
  var related = event.relatedTarget;
  // For mousenter/leave call the handler if related is outside the target.
  // NB: No relatedTarget if the mouse left/entered the browser window
  if (!related || (related !== target && !jqLiteContains.call(target, related))) {
    handler.call(target, event);
  }
}

//////////////////////////////////////////
// Functions iterating traversal.
// These functions chain results into a single
// selector.
//////////////////////////////////////////
forEach({
  removeData: jqLiteRemoveData,

  on: function jqLiteOn(element, type, fn, unsupported) {
    if (isDefined(unsupported)) throw jqLiteMinErr('onargs', 'jqLite#on() does not support the `selector` or `eventData` parameters');

    // Do not add event handlers to non-elements because they will not be cleaned up.
    if (!jqLiteAcceptsData(element)) {
      return;
    }

    var expandoStore = jqLiteExpandoStore(element, true);
    var events = expandoStore.events;
    var handle = expandoStore.handle;

    if (!handle) {
      handle = expandoStore.handle = createEventHandler(element, events);
    }

    // http://jsperf.com/string-indexof-vs-split
    var types = type.indexOf(' ') >= 0 ? type.split(' ') : [type];
    var i = types.length;

    var addHandler = function(type, specialHandlerWrapper, noEventListener) {
      var eventFns = events[type];

      if (!eventFns) {
        eventFns = events[type] = [];
        eventFns.specialHandlerWrapper = specialHandlerWrapper;
        if (type !== '$destroy' && !noEventListener) {
          addEventListenerFn(element, type, handle);
        }
      }

      eventFns.push(fn);
    };

    while (i--) {
      type = types[i];
      if (MOUSE_EVENT_MAP[type]) {
        addHandler(MOUSE_EVENT_MAP[type], specialMouseHandlerWrapper);
        addHandler(type, undefined, true);
      } else {
        addHandler(type);
      }
    }
  },

  off: jqLiteOff,

  one: function(element, type, fn) {
    element = jqLite(element);

    //add the listener twice so that when it is called
    //you can remove the original function and still be
    //able to call element.off(ev, fn) normally
    element.on(type, function onFn() {
      element.off(type, fn);
      element.off(type, onFn);
    });
    element.on(type, fn);
  },

  replaceWith: function(element, replaceNode) {
    var index, parent = element.parentNode;
    jqLiteDealoc(element);
    forEach(new JQLite(replaceNode), function(node) {
      if (index) {
        parent.insertBefore(node, index.nextSibling);
      } else {
        parent.replaceChild(node, element);
      }
      index = node;
    });
  },

  children: function(element) {
    var children = [];
    forEach(element.childNodes, function(element) {
      if (element.nodeType === NODE_TYPE_ELEMENT) {
        children.push(element);
      }
    });
    return children;
  },

  contents: function(element) {
    return element.contentDocument || element.childNodes || [];
  },

  append: function(element, node) {
    var nodeType = element.nodeType;
    if (nodeType !== NODE_TYPE_ELEMENT && nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT) return;

    node = new JQLite(node);

    for (var i = 0, ii = node.length; i < ii; i++) {
      var child = node[i];
      element.appendChild(child);
    }
  },

  prepend: function(element, node) {
    if (element.nodeType === NODE_TYPE_ELEMENT) {
      var index = element.firstChild;
      forEach(new JQLite(node), function(child) {
        element.insertBefore(child, index);
      });
    }
  },

  wrap: function(element, wrapNode) {
    jqLiteWrapNode(element, jqLite(wrapNode).eq(0).clone()[0]);
  },

  remove: jqLiteRemove,

  detach: function(element) {
    jqLiteRemove(element, true);
  },

  after: function(element, newElement) {
    var index = element, parent = element.parentNode;

    if (parent) {
      newElement = new JQLite(newElement);

      for (var i = 0, ii = newElement.length; i < ii; i++) {
        var node = newElement[i];
        parent.insertBefore(node, index.nextSibling);
        index = node;
      }
    }
  },

  addClass: jqLiteAddClass,
  removeClass: jqLiteRemoveClass,

  toggleClass: function(element, selector, condition) {
    if (selector) {
      forEach(selector.split(' '), function(className) {
        var classCondition = condition;
        if (isUndefined(classCondition)) {
          classCondition = !jqLiteHasClass(element, className);
        }
        (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className);
      });
    }
  },

  parent: function(element) {
    var parent = element.parentNode;
    return parent && parent.nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT ? parent : null;
  },

  next: function(element) {
    return element.nextElementSibling;
  },

  find: function(element, selector) {
    if (element.getElementsByTagName) {
      return element.getElementsByTagName(selector);
    } else {
      return [];
    }
  },

  clone: jqLiteClone,

  triggerHandler: function(element, event, extraParameters) {

    var dummyEvent, eventFnsCopy, handlerArgs;
    var eventName = event.type || event;
    var expandoStore = jqLiteExpandoStore(element);
    var events = expandoStore && expandoStore.events;
    var eventFns = events && events[eventName];

    if (eventFns) {
      // Create a dummy event to pass to the handlers
      dummyEvent = {
        preventDefault: function() { this.defaultPrevented = true; },
        isDefaultPrevented: function() { return this.defaultPrevented === true; },
        stopImmediatePropagation: function() { this.immediatePropagationStopped = true; },
        isImmediatePropagationStopped: function() { return this.immediatePropagationStopped === true; },
        stopPropagation: noop,
        type: eventName,
        target: element
      };

      // If a custom event was provided then extend our dummy event with it
      if (event.type) {
        dummyEvent = extend(dummyEvent, event);
      }

      // Copy event handlers in case event handlers array is modified during execution.
      eventFnsCopy = shallowCopy(eventFns);
      handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent];

      forEach(eventFnsCopy, function(fn) {
        if (!dummyEvent.isImmediatePropagationStopped()) {
          fn.apply(element, handlerArgs);
        }
      });
    }
  }
}, function(fn, name) {
  /**
   * chaining functions
   */
  JQLite.prototype[name] = function(arg1, arg2, arg3) {
    var value;

    for (var i = 0, ii = this.length; i < ii; i++) {
      if (isUndefined(value)) {
        value = fn(this[i], arg1, arg2, arg3);
        if (isDefined(value)) {
          // any function which returns a value needs to be wrapped
          value = jqLite(value);
        }
      } else {
        jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));
      }
    }
    return isDefined(value) ? value : this;
  };
});

// bind legacy bind/unbind to on/off
JQLite.prototype.bind = JQLite.prototype.on;
JQLite.prototype.unbind = JQLite.prototype.off;


// Provider for private $$jqLite service
/** @this */
function $$jqLiteProvider() {
  this.$get = function $$jqLite() {
    return extend(JQLite, {
      hasClass: function(node, classes) {
        if (node.attr) node = node[0];
        return jqLiteHasClass(node, classes);
      },
      addClass: function(node, classes) {
        if (node.attr) node = node[0];
        return jqLiteAddClass(node, classes);
      },
      removeClass: function(node, classes) {
        if (node.attr) node = node[0];
        return jqLiteRemoveClass(node, classes);
      }
    });
  };
}

/**
 * Computes a hash of an 'obj'.
 * Hash of a:
 *  string is string
 *  number is number as string
 *  object is either result of calling $$hashKey function on the object or uniquely generated id,
 *         that is also assigned to the $$hashKey property of the object.
 *
 * @param obj
 * @returns {string} hash string such that the same input will have the same hash string.
 *         The resulting string key is in 'type:hashKey' format.
 */
function hashKey(obj, nextUidFn) {
  var key = obj && obj.$$hashKey;

  if (key) {
    if (typeof key === 'function') {
      key = obj.$$hashKey();
    }
    return key;
  }

  var objType = typeof obj;
  if (objType === 'function' || (objType === 'object' && obj !== null)) {
    key = obj.$$hashKey = objType + ':' + (nextUidFn || nextUid)();
  } else {
    key = objType + ':' + obj;
  }

  return key;
}

/**
 * HashMap which can use objects as keys
 */
function HashMap(array, isolatedUid) {
  if (isolatedUid) {
    var uid = 0;
    this.nextUid = function() {
      return ++uid;
    };
  }
  forEach(array, this.put, this);
}
HashMap.prototype = {
  /**
   * Store key value pair
   * @param key key to store can be any type
   * @param value value to store can be any type
   */
  put: function(key, value) {
    this[hashKey(key, this.nextUid)] = value;
  },

  /**
   * @param key
   * @returns {Object} the value for the key
   */
  get: function(key) {
    return this[hashKey(key, this.nextUid)];
  },

  /**
   * Remove the key/value pair
   * @param key
   */
  remove: function(key) {
    var value = this[key = hashKey(key, this.nextUid)];
    delete this[key];
    return value;
  }
};

var $$HashMapProvider = [/** @this */function() {
  this.$get = [function() {
    return HashMap;
  }];
}];

/**
 * @ngdoc function
 * @module ng
 * @name angular.injector
 * @kind function
 *
 * @description
 * Creates an injector object that can be used for retrieving services as well as for
 * dependency injection (see {@link guide/di dependency injection}).
 *
 * @param {Array.<string|Function>} modules A list of module functions or their aliases. See
 *     {@link angular.module}. The `ng` module must be explicitly added.
 * @param {boolean=} [strictDi=false] Whether the injector should be in strict mode, which
 *     disallows argument name annotation inference.
 * @returns {injector} Injector object. See {@link auto.$injector $injector}.
 *
 * @example
 * Typical usage
 * ```js
 *   // create an injector
 *   var $injector = angular.injector(['ng']);
 *
 *   // use the injector to kick off your application
 *   // use the type inference to auto inject arguments, or use implicit injection
 *   $injector.invoke(function($rootScope, $compile, $document) {
 *     $compile($document)($rootScope);
 *     $rootScope.$digest();
 *   });
 * ```
 *
 * Sometimes you want to get access to the injector of a currently running Angular app
 * from outside Angular. Perhaps, you want to inject and compile some markup after the
 * application has been bootstrapped. You can do this using the extra `injector()` added
 * to JQuery/jqLite elements. See {@link angular.element}.
 *
 * *This is fairly rare but could be the case if a third party library is injecting the
 * markup.*
 *
 * In the following example a new block of HTML containing a `ng-controller`
 * directive is added to the end of the document body by JQuery. We then compile and link
 * it into the current AngularJS scope.
 *
 * ```js
 * var $div = $('<div ng-controller="MyCtrl">{{content.label}}</div>');
 * $(document.body).append($div);
 *
 * angular.element(document).injector().invoke(function($compile) {
 *   var scope = angular.element($div).scope();
 *   $compile($div)(scope);
 * });
 * ```
 */


/**
 * @ngdoc module
 * @name auto
 * @installation
 * @description
 *
 * Implicit module which gets automatically added to each {@link auto.$injector $injector}.
 */

var ARROW_ARG = /^([^(]+?)=>/;
var FN_ARGS = /^[^(]*\(\s*([^)]*)\)/m;
var FN_ARG_SPLIT = /,/;
var FN_ARG = /^\s*(_?)(\S+?)\1\s*$/;
var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
var $injectorMinErr = minErr('$injector');

function stringifyFn(fn) {
  // Support: Chrome 50-51 only
  // Creating a new string by adding `' '` at the end, to hack around some bug in Chrome v50/51
  // (See https://github.com/angular/angular.js/issues/14487.)
  // TODO (gkalpak): Remove workaround when Chrome v52 is released
  return Function.prototype.toString.call(fn) + ' ';
}

function extractArgs(fn) {
  var fnText = stringifyFn(fn).replace(STRIP_COMMENTS, ''),
      args = fnText.match(ARROW_ARG) || fnText.match(FN_ARGS);
  return args;
}

function anonFn(fn) {
  // For anonymous functions, showing at the very least the function signature can help in
  // debugging.
  var args = extractArgs(fn);
  if (args) {
    return 'function(' + (args[1] || '').replace(/[\s\r\n]+/, ' ') + ')';
  }
  return 'fn';
}

function annotate(fn, strictDi, name) {
  var $inject,
      argDecl,
      last;

  if (typeof fn === 'function') {
    if (!($inject = fn.$inject)) {
      $inject = [];
      if (fn.length) {
        if (strictDi) {
          if (!isString(name) || !name) {
            name = fn.name || anonFn(fn);
          }
          throw $injectorMinErr('strictdi',
            '{0} is not using explicit annotation and cannot be invoked in strict mode', name);
        }
        argDecl = extractArgs(fn);
        forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg) {
          arg.replace(FN_ARG, function(all, underscore, name) {
            $inject.push(name);
          });
        });
      }
      fn.$inject = $inject;
    }
  } else if (isArray(fn)) {
    last = fn.length - 1;
    assertArgFn(fn[last], 'fn');
    $inject = fn.slice(0, last);
  } else {
    assertArgFn(fn, 'fn', true);
  }
  return $inject;
}

///////////////////////////////////////

/**
 * @ngdoc service
 * @name $injector
 *
 * @description
 *
 * `$injector` is used to retrieve object instances as defined by
 * {@link auto.$provide provider}, instantiate types, invoke methods,
 * and load modules.
 *
 * The following always holds true:
 *
 * ```js
 *   var $injector = angular.injector();
 *   expect($injector.get('$injector')).toBe($injector);
 *   expect($injector.invoke(function($injector) {
 *     return $injector;
 *   })).toBe($injector);
 * ```
 *
 * # Injection Function Annotation
 *
 * JavaScript does not have annotations, and annotations are needed for dependency injection. The
 * following are all valid ways of annotating function with injection arguments and are equivalent.
 *
 * ```js
 *   // inferred (only works if code not minified/obfuscated)
 *   $injector.invoke(function(serviceA){});
 *
 *   // annotated
 *   function explicit(serviceA) {};
 *   explicit.$inject = ['serviceA'];
 *   $injector.invoke(explicit);
 *
 *   // inline
 *   $injector.invoke(['serviceA', function(serviceA){}]);
 * ```
 *
 * ## Inference
 *
 * In JavaScript calling `toString()` on a function returns the function definition. The definition
 * can then be parsed and the function arguments can be extracted. This method of discovering
 * annotations is disallowed when the injector is in strict mode.
 * *NOTE:* This does not work with minification, and obfuscation tools since these tools change the
 * argument names.
 *
 * ## `$inject` Annotation
 * By adding an `$inject` property onto a function the injection parameters can be specified.
 *
 * ## Inline
 * As an array of injection names, where the last item in the array is the function to call.
 */

/**
 * @ngdoc method
 * @name $injector#get
 *
 * @description
 * Return an instance of the service.
 *
 * @param {string} name The name of the instance to retrieve.
 * @param {string=} caller An optional string to provide the origin of the function call for error messages.
 * @return {*} The instance.
 */

/**
 * @ngdoc method
 * @name $injector#invoke
 *
 * @description
 * Invoke the method and supply the method arguments from the `$injector`.
 *
 * @param {Function|Array.<string|Function>} fn The injectable function to invoke. Function parameters are
 *   injected according to the {@link guide/di $inject Annotation} rules.
 * @param {Object=} self The `this` for the invoked method.
 * @param {Object=} locals Optional object. If preset then any argument names are read from this
 *                         object first, before the `$injector` is consulted.
 * @returns {*} the value returned by the invoked `fn` function.
 */

/**
 * @ngdoc method
 * @name $injector#has
 *
 * @description
 * Allows the user to query if the particular service exists.
 *
 * @param {string} name Name of the service to query.
 * @returns {boolean} `true` if injector has given service.
 */

/**
 * @ngdoc method
 * @name $injector#instantiate
 * @description
 * Create a new instance of JS type. The method takes a constructor function, invokes the new
 * operator, and supplies all of the arguments to the constructor function as specified by the
 * constructor annotation.
 *
 * @param {Function} Type Annotated constructor function.
 * @param {Object=} locals Optional object. If preset then any argument names are read from this
 * object first, before the `$injector` is consulted.
 * @returns {Object} new instance of `Type`.
 */

/**
 * @ngdoc method
 * @name $injector#annotate
 *
 * @description
 * Returns an array of service names which the function is requesting for injection. This API is
 * used by the injector to determine which services need to be injected into the function when the
 * function is invoked. There are three ways in which the function can be annotated with the needed
 * dependencies.
 *
 * # Argument names
 *
 * The simplest form is to extract the dependencies from the arguments of the function. This is done
 * by converting the function into a string using `toString()` method and extracting the argument
 * names.
 * ```js
 *   // Given
 *   function MyController($scope, $route) {
 *     // ...
 *   }
 *
 *   // Then
 *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);
 * ```
 *
 * You can disallow this method by using strict injection mode.
 *
 * This method does not work with code minification / obfuscation. For this reason the following
 * annotation strategies are supported.
 *
 * # The `$inject` property
 *
 * If a function has an `$inject` property and its value is an array of strings, then the strings
 * represent names of services to be injected into the function.
 * ```js
 *   // Given
 *   var MyController = function(obfuscatedScope, obfuscatedRoute) {
 *     // ...
 *   }
 *   // Define function dependencies
 *   MyController['$inject'] = ['$scope', '$route'];
 *
 *   // Then
 *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);
 * ```
 *
 * # The array notation
 *
 * It is often desirable to inline Injected functions and that's when setting the `$inject` property
 * is very inconvenient. In these situations using the array notation to specify the dependencies in
 * a way that survives minification is a better choice:
 *
 * ```js
 *   // We wish to write this (not minification / obfuscation safe)
 *   injector.invoke(function($compile, $rootScope) {
 *     // ...
 *   });
 *
 *   // We are forced to write break inlining
 *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {
 *     // ...
 *   };
 *   tmpFn.$inject = ['$compile', '$rootScope'];
 *   injector.invoke(tmpFn);
 *
 *   // To better support inline function the inline annotation is supported
 *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {
 *     // ...
 *   }]);
 *
 *   // Therefore
 *   expect(injector.annotate(
 *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])
 *    ).toEqual(['$compile', '$rootScope']);
 * ```
 *
 * @param {Function|Array.<string|Function>} fn Function for which dependent service names need to
 * be retrieved as described above.
 *
 * @param {boolean=} [strictDi=false] Disallow argument name annotation inference.
 *
 * @returns {Array.<string>} The names of the services which the function requires.
 */



/**
 * @ngdoc service
 * @name $provide
 *
 * @description
 *
 * The {@link auto.$provide $provide} service has a number of methods for registering components
 * with the {@link auto.$injector $injector}. Many of these functions are also exposed on
 * {@link angular.Module}.
 *
 * An Angular **service** is a singleton object created by a **service factory**.  These **service
 * factories** are functions which, in turn, are created by a **service provider**.
 * The **service providers** are constructor functions. When instantiated they must contain a
 * property called `$get`, which holds the **service factory** function.
 *
 * When you request a service, the {@link auto.$injector $injector} is responsible for finding the
 * correct **service provider**, instantiating it and then calling its `$get` **service factory**
 * function to get the instance of the **service**.
 *
 * Often services have no configuration options and there is no need to add methods to the service
 * provider.  The provider will be no more than a constructor function with a `$get` property. For
 * these cases the {@link auto.$provide $provide} service has additional helper methods to register
 * services without specifying a provider.
 *
 * * {@link auto.$provide#provider provider(name, provider)} - registers a **service provider** with the
 *     {@link auto.$injector $injector}
 * * {@link auto.$provide#constant constant(name, obj)} - registers a value/object that can be accessed by
 *     providers and services.
 * * {@link auto.$provide#value value(name, obj)} - registers a value/object that can only be accessed by
 *     services, not providers.
 * * {@link auto.$provide#factory factory(name, fn)} - registers a service **factory function**
 *     that will be wrapped in a **service provider** object, whose `$get` property will contain the
 *     given factory function.
 * * {@link auto.$provide#service service(name, Fn)} - registers a **constructor function**
 *     that will be wrapped in a **service provider** object, whose `$get` property will instantiate
 *      a new object using the given constructor function.
 * * {@link auto.$provide#decorator decorator(name, decorFn)} - registers a **decorator function** that
 *      will be able to modify or replace the implementation of another service.
 *
 * See the individual methods for more information and examples.
 */

/**
 * @ngdoc method
 * @name $provide#provider
 * @description
 *
 * Register a **provider function** with the {@link auto.$injector $injector}. Provider functions
 * are constructor functions, whose instances are responsible for "providing" a factory for a
 * service.
 *
 * Service provider names start with the name of the service they provide followed by `Provider`.
 * For example, the {@link ng.$log $log} service has a provider called
 * {@link ng.$logProvider $logProvider}.
 *
 * Service provider objects can have additional methods which allow configuration of the provider
 * and its service. Importantly, you can configure what kind of service is created by the `$get`
 * method, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a
 * method {@link ng.$logProvider#debugEnabled debugEnabled}
 * which lets you specify whether the {@link ng.$log $log} service will log debug messages to the
 * console or not.
 *
 * @param {string} name The name of the instance. NOTE: the provider will be available under `name +
                        'Provider'` key.
 * @param {(Object|function())} provider If the provider is:
 *
 *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using
 *     {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.
 *   - `Constructor`: a new instance of the provider will be created using
 *     {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.
 *
 * @returns {Object} registered provider instance

 * @example
 *
 * The following example shows how to create a simple event tracking service and register it using
 * {@link auto.$provide#provider $provide.provider()}.
 *
 * ```js
 *  // Define the eventTracker provider
 *  function EventTrackerProvider() {
 *    var trackingUrl = '/track';
 *
 *    // A provider method for configuring where the tracked events should been saved
 *    this.setTrackingUrl = function(url) {
 *      trackingUrl = url;
 *    };
 *
 *    // The service factory function
 *    this.$get = ['$http', function($http) {
 *      var trackedEvents = {};
 *      return {
 *        // Call this to track an event
 *        event: function(event) {
 *          var count = trackedEvents[event] || 0;
 *          count += 1;
 *          trackedEvents[event] = count;
 *          return count;
 *        },
 *        // Call this to save the tracked events to the trackingUrl
 *        save: function() {
 *          $http.post(trackingUrl, trackedEvents);
 *        }
 *      };
 *    }];
 *  }
 *
 *  describe('eventTracker', function() {
 *    var postSpy;
 *
 *    beforeEach(module(function($provide) {
 *      // Register the eventTracker provider
 *      $provide.provider('eventTracker', EventTrackerProvider);
 *    }));
 *
 *    beforeEach(module(function(eventTrackerProvider) {
 *      // Configure eventTracker provider
 *      eventTrackerProvider.setTrackingUrl('/custom-track');
 *    }));
 *
 *    it('tracks events', inject(function(eventTracker) {
 *      expect(eventTracker.event('login')).toEqual(1);
 *      expect(eventTracker.event('login')).toEqual(2);
 *    }));
 *
 *    it('saves to the tracking url', inject(function(eventTracker, $http) {
 *      postSpy = spyOn($http, 'post');
 *      eventTracker.event('login');
 *      eventTracker.save();
 *      expect(postSpy).toHaveBeenCalled();
 *      expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');
 *      expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');
 *      expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });
 *    }));
 *  });
 * ```
 */

/**
 * @ngdoc method
 * @name $provide#factory
 * @description
 *
 * Register a **service factory**, which will be called to return the service instance.
 * This is short for registering a service where its provider consists of only a `$get` property,
 * which is the given service factory function.
 * You should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to
 * configure your service in a provider.
 *
 * @param {string} name The name of the instance.
 * @param {Function|Array.<string|Function>} $getFn The injectable $getFn for the instance creation.
 *                      Internally this is a short hand for `$provide.provider(name, {$get: $getFn})`.
 * @returns {Object} registered provider instance
 *
 * @example
 * Here is an example of registering a service
 * ```js
 *   $provide.factory('ping', ['$http', function($http) {
 *     return function ping() {
 *       return $http.send('/ping');
 *     };
 *   }]);
 * ```
 * You would then inject and use this service like this:
 * ```js
 *   someModule.controller('Ctrl', ['ping', function(ping) {
 *     ping();
 *   }]);
 * ```
 */


/**
 * @ngdoc method
 * @name $provide#service
 * @description
 *
 * Register a **service constructor**, which will be invoked with `new` to create the service
 * instance.
 * This is short for registering a service where its provider's `$get` property is a factory
 * function that returns an instance instantiated by the injector from the service constructor
 * function.
 *
 * Internally it looks a bit like this:
 *
 * ```
 * {
 *   $get: function() {
 *     return $injector.instantiate(constructor);
 *   }
 * }
 * ```
 *
 *
 * You should use {@link auto.$provide#service $provide.service(class)} if you define your service
 * as a type/class.
 *
 * @param {string} name The name of the instance.
 * @param {Function|Array.<string|Function>} constructor An injectable class (constructor function)
 *     that will be instantiated.
 * @returns {Object} registered provider instance
 *
 * @example
 * Here is an example of registering a service using
 * {@link auto.$provide#service $provide.service(class)}.
 * ```js
 *   var Ping = function($http) {
 *     this.$http = $http;
 *   };
 *
 *   Ping.$inject = ['$http'];
 *
 *   Ping.prototype.send = function() {
 *     return this.$http.get('/ping');
 *   };
 *   $provide.service('ping', Ping);
 * ```
 * You would then inject and use this service like this:
 * ```js
 *   someModule.controller('Ctrl', ['ping', function(ping) {
 *     ping.send();
 *   }]);
 * ```
 */


/**
 * @ngdoc method
 * @name $provide#value
 * @description
 *
 * Register a **value service** with the {@link auto.$injector $injector}, such as a string, a
 * number, an array, an object or a function. This is short for registering a service where its
 * provider's `$get` property is a factory function that takes no arguments and returns the **value
 * service**. That also means it is not possible to inject other services into a value service.
 *
 * Value services are similar to constant services, except that they cannot be injected into a
 * module configuration function (see {@link angular.Module#config}) but they can be overridden by
 * an Angular {@link auto.$provide#decorator decorator}.
 *
 * @param {string} name The name of the instance.
 * @param {*} value The value.
 * @returns {Object} registered provider instance
 *
 * @example
 * Here are some examples of creating value services.
 * ```js
 *   $provide.value('ADMIN_USER', 'admin');
 *
 *   $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });
 *
 *   $provide.value('halfOf', function(value) {
 *     return value / 2;
 *   });
 * ```
 */


/**
 * @ngdoc method
 * @name $provide#constant
 * @description
 *
 * Register a **constant service** with the {@link auto.$injector $injector}, such as a string,
 * a number, an array, an object or a function. Like the {@link auto.$provide#value value}, it is not
 * possible to inject other services into a constant.
 *
 * But unlike {@link auto.$provide#value value}, a constant can be
 * injected into a module configuration function (see {@link angular.Module#config}) and it cannot
 * be overridden by an Angular {@link auto.$provide#decorator decorator}.
 *
 * @param {string} name The name of the constant.
 * @param {*} value The constant value.
 * @returns {Object} registered instance
 *
 * @example
 * Here a some examples of creating constants:
 * ```js
 *   $provide.constant('SHARD_HEIGHT', 306);
 *
 *   $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);
 *
 *   $provide.constant('double', function(value) {
 *     return value * 2;
 *   });
 * ```
 */


/**
 * @ngdoc method
 * @name $provide#decorator
 * @description
 *
 * Register a **decorator function** with the {@link auto.$injector $injector}. A decorator function
 * intercepts the creation of a service, allowing it to override or modify the behavior of the
 * service. The return value of the decorator function may be the original service, or a new service
 * that replaces (or wraps and delegates to) the original service.
 *
 * You can find out more about using decorators in the {@link guide/decorators} guide.
 *
 * @param {string} name The name of the service to decorate.
 * @param {Function|Array.<string|Function>} decorator This function will be invoked when the service needs to be
 *    provided and should return the decorated service instance. The function is called using
 *    the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.
 *    Local injection arguments:
 *
 *    * `$delegate` - The original service instance, which can be replaced, monkey patched, configured,
 *      decorated or delegated to.
 *
 * @example
 * Here we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting
 * calls to {@link ng.$log#error $log.warn()}.
 * ```js
 *   $provide.decorator('$log', ['$delegate', function($delegate) {
 *     $delegate.warn = $delegate.error;
 *     return $delegate;
 *   }]);
 * ```
 */


function createInjector(modulesToLoad, strictDi) {
  strictDi = (strictDi === true);
  var INSTANTIATING = {},
      providerSuffix = 'Provider',
      path = [],
      loadedModules = new HashMap([], true),
      providerCache = {
        $provide: {
            provider: supportObject(provider),
            factory: supportObject(factory),
            service: supportObject(service),
            value: supportObject(value),
            constant: supportObject(constant),
            decorator: decorator
          }
      },
      providerInjector = (providerCache.$injector =
          createInternalInjector(providerCache, function(serviceName, caller) {
            if (angular.isString(caller)) {
              path.push(caller);
            }
            throw $injectorMinErr('unpr', 'Unknown provider: {0}', path.join(' <- '));
          })),
      instanceCache = {},
      protoInstanceInjector =
          createInternalInjector(instanceCache, function(serviceName, caller) {
            var provider = providerInjector.get(serviceName + providerSuffix, caller);
            return instanceInjector.invoke(
                provider.$get, provider, undefined, serviceName);
          }),
      instanceInjector = protoInstanceInjector;

  providerCache['$injector' + providerSuffix] = { $get: valueFn(protoInstanceInjector) };
  var runBlocks = loadModules(modulesToLoad);
  instanceInjector = protoInstanceInjector.get('$injector');
  instanceInjector.strictDi = strictDi;
  forEach(runBlocks, function(fn) { if (fn) instanceInjector.invoke(fn); });

  return instanceInjector;

  ////////////////////////////////////
  // $provider
  ////////////////////////////////////

  function supportObject(delegate) {
    return function(key, value) {
      if (isObject(key)) {
        forEach(key, reverseParams(delegate));
      } else {
        return delegate(key, value);
      }
    };
  }

  function provider(name, provider_) {
    assertNotHasOwnProperty(name, 'service');
    if (isFunction(provider_) || isArray(provider_)) {
      provider_ = providerInjector.instantiate(provider_);
    }
    if (!provider_.$get) {
      throw $injectorMinErr('pget', 'Provider \'{0}\' must define $get factory method.', name);
    }
    return (providerCache[name + providerSuffix] = provider_);
  }

  function enforceReturnValue(name, factory) {
    return /** @this */ function enforcedReturnValue() {
      var result = instanceInjector.invoke(factory, this);
      if (isUndefined(result)) {
        throw $injectorMinErr('undef', 'Provider \'{0}\' must return a value from $get factory method.', name);
      }
      return result;
    };
  }

  function factory(name, factoryFn, enforce) {
    return provider(name, {
      $get: enforce !== false ? enforceReturnValue(name, factoryFn) : factoryFn
    });
  }

  function service(name, constructor) {
    return factory(name, ['$injector', function($injector) {
      return $injector.instantiate(constructor);
    }]);
  }

  function value(name, val) { return factory(name, valueFn(val), false); }

  function constant(name, value) {
    assertNotHasOwnProperty(name, 'constant');
    providerCache[name] = value;
    instanceCache[name] = value;
  }

  function decorator(serviceName, decorFn) {
    var origProvider = providerInjector.get(serviceName + providerSuffix),
        orig$get = origProvider.$get;

    origProvider.$get = function() {
      var origInstance = instanceInjector.invoke(orig$get, origProvider);
      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});
    };
  }

  ////////////////////////////////////
  // Module Loading
  ////////////////////////////////////
  function loadModules(modulesToLoad) {
    assertArg(isUndefined(modulesToLoad) || isArray(modulesToLoad), 'modulesToLoad', 'not an array');
    var runBlocks = [], moduleFn;
    forEach(modulesToLoad, function(module) {
      if (loadedModules.get(module)) return;
      loadedModules.put(module, true);

      function runInvokeQueue(queue) {
        var i, ii;
        for (i = 0, ii = queue.length; i < ii; i++) {
          var invokeArgs = queue[i],
              provider = providerInjector.get(invokeArgs[0]);

          provider[invokeArgs[1]].apply(provider, invokeArgs[2]);
        }
      }

      try {
        if (isString(module)) {
          moduleFn = angularModule(module);
          runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);
          runInvokeQueue(moduleFn._invokeQueue);
          runInvokeQueue(moduleFn._configBlocks);
        } else if (isFunction(module)) {
            runBlocks.push(providerInjector.invoke(module));
        } else if (isArray(module)) {
            runBlocks.push(providerInjector.invoke(module));
        } else {
          assertArgFn(module, 'module');
        }
      } catch (e) {
        if (isArray(module)) {
          module = module[module.length - 1];
        }
        if (e.message && e.stack && e.stack.indexOf(e.message) === -1) {
          // Safari & FF's stack traces don't contain error.message content
          // unlike those of Chrome and IE
          // So if stack doesn't contain message, we create a new string that contains both.
          // Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.
          // eslint-disable-next-line no-ex-assign
          e = e.message + '\n' + e.stack;
        }
        throw $injectorMinErr('modulerr', 'Failed to instantiate module {0} due to:\n{1}',
                  module, e.stack || e.message || e);
      }
    });
    return runBlocks;
  }

  ////////////////////////////////////
  // internal Injector
  ////////////////////////////////////

  function createInternalInjector(cache, factory) {

    function getService(serviceName, caller) {
      if (cache.hasOwnProperty(serviceName)) {
        if (cache[serviceName] === INSTANTIATING) {
          throw $injectorMinErr('cdep', 'Circular dependency found: {0}',
                    serviceName + ' <- ' + path.join(' <- '));
        }
        return cache[serviceName];
      } else {
        try {
          path.unshift(serviceName);
          cache[serviceName] = INSTANTIATING;
          cache[serviceName] = factory(serviceName, caller);
          return cache[serviceName];
        } catch (err) {
          if (cache[serviceName] === INSTANTIATING) {
            delete cache[serviceName];
          }
          throw err;
        } finally {
          path.shift();
        }
      }
    }


    function injectionArgs(fn, locals, serviceName) {
      var args = [],
          $inject = createInjector.$$annotate(fn, strictDi, serviceName);

      for (var i = 0, length = $inject.length; i < length; i++) {
        var key = $inject[i];
        if (typeof key !== 'string') {
          throw $injectorMinErr('itkn',
                  'Incorrect injection token! Expected service name as string, got {0}', key);
        }
        args.push(locals && locals.hasOwnProperty(key) ? locals[key] :
                                                         getService(key, serviceName));
      }
      return args;
    }

    function isClass(func) {
      // IE 9-11 do not support classes and IE9 leaks with the code below.
      if (msie <= 11) {
        return false;
      }
      // Support: Edge 12-13 only
      // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/6156135/
      return typeof func === 'function'
        && /^(?:class\b|constructor\()/.test(stringifyFn(func));
    }

    function invoke(fn, self, locals, serviceName) {
      if (typeof locals === 'string') {
        serviceName = locals;
        locals = null;
      }

      var args = injectionArgs(fn, locals, serviceName);
      if (isArray(fn)) {
        fn = fn[fn.length - 1];
      }

      if (!isClass(fn)) {
        // http://jsperf.com/angularjs-invoke-apply-vs-switch
        // #5388
        return fn.apply(self, args);
      } else {
        args.unshift(null);
        return new (Function.prototype.bind.apply(fn, args))();
      }
    }


    function instantiate(Type, locals, serviceName) {
      // Check if Type is annotated and use just the given function at n-1 as parameter
      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);
      var ctor = (isArray(Type) ? Type[Type.length - 1] : Type);
      var args = injectionArgs(Type, locals, serviceName);
      // Empty object at position 0 is ignored for invocation with `new`, but required.
      args.unshift(null);
      return new (Function.prototype.bind.apply(ctor, args))();
    }


    return {
      invoke: invoke,
      instantiate: instantiate,
      get: getService,
      annotate: createInjector.$$annotate,
      has: function(name) {
        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);
      }
    };
  }
}

createInjector.$$annotate = annotate;

/**
 * @ngdoc provider
 * @name $anchorScrollProvider
 * @this
 *
 * @description
 * Use `$anchorScrollProvider` to disable automatic scrolling whenever
 * {@link ng.$location#hash $location.hash()} changes.
 */
function $AnchorScrollProvider() {

  var autoScrollingEnabled = true;

  /**
   * @ngdoc method
   * @name $anchorScrollProvider#disableAutoScrolling
   *
   * @description
   * By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to
   * {@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />
   * Use this method to disable automatic scrolling.
   *
   * If automatic scrolling is disabled, one must explicitly call
   * {@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the
   * current hash.
   */
  this.disableAutoScrolling = function() {
    autoScrollingEnabled = false;
  };

  /**
   * @ngdoc service
   * @name $anchorScroll
   * @kind function
   * @requires $window
   * @requires $location
   * @requires $rootScope
   *
   * @description
   * When called, it scrolls to the element related to the specified `hash` or (if omitted) to the
   * current value of {@link ng.$location#hash $location.hash()}, according to the rules specified
   * in the
   * [HTML5 spec](http://www.w3.org/html/wg/drafts/html/master/browsers.html#an-indicated-part-of-the-document).
   *
   * It also watches the {@link ng.$location#hash $location.hash()} and automatically scrolls to
   * match any anchor whenever it changes. This can be disabled by calling
   * {@link ng.$anchorScrollProvider#disableAutoScrolling $anchorScrollProvider.disableAutoScrolling()}.
   *
   * Additionally, you can use its {@link ng.$anchorScroll#yOffset yOffset} property to specify a
   * vertical scroll-offset (either fixed or dynamic).
   *
   * @param {string=} hash The hash specifying the element to scroll to. If omitted, the value of
   *                       {@link ng.$location#hash $location.hash()} will be used.
   *
   * @property {(number|function|jqLite)} yOffset
   * If set, specifies a vertical scroll-offset. This is often useful when there are fixed
   * positioned elements at the top of the page, such as navbars, headers etc.
   *
   * `yOffset` can be specified in various ways:
   * - **number**: A fixed number of pixels to be used as offset.<br /><br />
   * - **function**: A getter function called everytime `$anchorScroll()` is executed. Must return
   *   a number representing the offset (in pixels).<br /><br />
   * - **jqLite**: A jqLite/jQuery element to be used for specifying the offset. The distance from
   *   the top of the page to the element's bottom will be used as offset.<br />
   *   **Note**: The element will be taken into account only as long as its `position` is set to
   *   `fixed`. This option is useful, when dealing with responsive navbars/headers that adjust
   *   their height and/or positioning according to the viewport's size.
   *
   * <br />
   * <div class="alert alert-warning">
   * In order for `yOffset` to work properly, scrolling should take place on the document's root and
   * not some child element.
   * </div>
   *
   * @example
     <example module="anchorScrollExample" name="anchor-scroll">
       <file name="index.html">
         <div id="scrollArea" ng-controller="ScrollController">
           <a ng-click="gotoBottom()">Go to bottom</a>
           <a id="bottom"></a> You're at the bottom!
         </div>
       </file>
       <file name="script.js">
         angular.module('anchorScrollExample', [])
           .controller('ScrollController', ['$scope', '$location', '$anchorScroll',
             function($scope, $location, $anchorScroll) {
               $scope.gotoBottom = function() {
                 // set the location.hash to the id of
                 // the element you wish to scroll to.
                 $location.hash('bottom');

                 // call $anchorScroll()
                 $anchorScroll();
               };
             }]);
       </file>
       <file name="style.css">
         #scrollArea {
           height: 280px;
           overflow: auto;
         }

         #bottom {
           display: block;
           margin-top: 2000px;
         }
       </file>
     </example>
   *
   * <hr />
   * The example below illustrates the use of a vertical scroll-offset (specified as a fixed value).
   * See {@link ng.$anchorScroll#yOffset $anchorScroll.yOffset} for more details.
   *
   * @example
     <example module="anchorScrollOffsetExample" name="anchor-scroll-offset">
       <file name="index.html">
         <div class="fixed-header" ng-controller="headerCtrl">
           <a href="" ng-click="gotoAnchor(x)" ng-repeat="x in [1,2,3,4,5]">
             Go to anchor {{x}}
           </a>
         </div>
         <div id="anchor{{x}}" class="anchor" ng-repeat="x in [1,2,3,4,5]">
           Anchor {{x}} of 5
         </div>
       </file>
       <file name="script.js">
         angular.module('anchorScrollOffsetExample', [])
           .run(['$anchorScroll', function($anchorScroll) {
             $anchorScroll.yOffset = 50;   // always scroll by 50 extra pixels
           }])
           .controller('headerCtrl', ['$anchorScroll', '$location', '$scope',
             function($anchorScroll, $location, $scope) {
               $scope.gotoAnchor = function(x) {
                 var newHash = 'anchor' + x;
                 if ($location.hash() !== newHash) {
                   // set the $location.hash to `newHash` and
                   // $anchorScroll will automatically scroll to it
                   $location.hash('anchor' + x);
                 } else {
                   // call $anchorScroll() explicitly,
                   // since $location.hash hasn't changed
                   $anchorScroll();
                 }
               };
             }
           ]);
       </file>
       <file name="style.css">
         body {
           padding-top: 50px;
         }

         .anchor {
           border: 2px dashed DarkOrchid;
           padding: 10px 10px 200px 10px;
         }

         .fixed-header {
           background-color: rgba(0, 0, 0, 0.2);
           height: 50px;
           position: fixed;
           top: 0; left: 0; right: 0;
         }

         .fixed-header > a {
           display: inline-block;
           margin: 5px 15px;
         }
       </file>
     </example>
   */
  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {
    var document = $window.document;

    // Helper function to get first anchor from a NodeList
    // (using `Array#some()` instead of `angular#forEach()` since it's more performant
    //  and working in all supported browsers.)
    function getFirstAnchor(list) {
      var result = null;
      Array.prototype.some.call(list, function(element) {
        if (nodeName_(element) === 'a') {
          result = element;
          return true;
        }
      });
      return result;
    }

    function getYOffset() {

      var offset = scroll.yOffset;

      if (isFunction(offset)) {
        offset = offset();
      } else if (isElement(offset)) {
        var elem = offset[0];
        var style = $window.getComputedStyle(elem);
        if (style.position !== 'fixed') {
          offset = 0;
        } else {
          offset = elem.getBoundingClientRect().bottom;
        }
      } else if (!isNumber(offset)) {
        offset = 0;
      }

      return offset;
    }

    function scrollTo(elem) {
      if (elem) {
        elem.scrollIntoView();

        var offset = getYOffset();

        if (offset) {
          // `offset` is the number of pixels we should scroll UP in order to align `elem` properly.
          // This is true ONLY if the call to `elem.scrollIntoView()` initially aligns `elem` at the
          // top of the viewport.
          //
          // IF the number of pixels from the top of `elem` to the end of the page's content is less
          // than the height of the viewport, then `elem.scrollIntoView()` will align the `elem` some
          // way down the page.
          //
          // This is often the case for elements near the bottom of the page.
          //
          // In such cases we do not need to scroll the whole `offset` up, just the difference between
          // the top of the element and the offset, which is enough to align the top of `elem` at the
          // desired position.
          var elemTop = elem.getBoundingClientRect().top;
          $window.scrollBy(0, elemTop - offset);
        }
      } else {
        $window.scrollTo(0, 0);
      }
    }

    function scroll(hash) {
      // Allow numeric hashes
      hash = isString(hash) ? hash : isNumber(hash) ? hash.toString() : $location.hash();
      var elm;

      // empty hash, scroll to the top of the page
      if (!hash) scrollTo(null);

      // element with given id
      else if ((elm = document.getElementById(hash))) scrollTo(elm);

      // first anchor with given name :-D
      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) scrollTo(elm);

      // no element and hash === 'top', scroll to the top of the page
      else if (hash === 'top') scrollTo(null);
    }

    // does not scroll when user clicks on anchor link that is currently on
    // (no url change, no $location.hash() change), browser native does scroll
    if (autoScrollingEnabled) {
      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},
        function autoScrollWatchAction(newVal, oldVal) {
          // skip the initial scroll if $location.hash is empty
          if (newVal === oldVal && newVal === '') return;

          jqLiteDocumentLoaded(function() {
            $rootScope.$evalAsync(scroll);
          });
        });
    }

    return scroll;
  }];
}

var $animateMinErr = minErr('$animate');
var ELEMENT_NODE = 1;
var NG_ANIMATE_CLASSNAME = 'ng-animate';

function mergeClasses(a,b) {
  if (!a && !b) return '';
  if (!a) return b;
  if (!b) return a;
  if (isArray(a)) a = a.join(' ');
  if (isArray(b)) b = b.join(' ');
  return a + ' ' + b;
}

function extractElementNode(element) {
  for (var i = 0; i < element.length; i++) {
    var elm = element[i];
    if (elm.nodeType === ELEMENT_NODE) {
      return elm;
    }
  }
}

function splitClasses(classes) {
  if (isString(classes)) {
    classes = classes.split(' ');
  }

  // Use createMap() to prevent class assumptions involving property names in
  // Object.prototype
  var obj = createMap();
  forEach(classes, function(klass) {
    // sometimes the split leaves empty string values
    // incase extra spaces were applied to the options
    if (klass.length) {
      obj[klass] = true;
    }
  });
  return obj;
}

// if any other type of options value besides an Object value is
// passed into the $animate.method() animation then this helper code
// will be run which will ignore it. While this patch is not the
// greatest solution to this, a lot of existing plugins depend on
// $animate to either call the callback (< 1.2) or return a promise
// that can be changed. This helper function ensures that the options
// are wiped clean incase a callback function is provided.
function prepareAnimateOptions(options) {
  return isObject(options)
      ? options
      : {};
}

var $$CoreAnimateJsProvider = /** @this */ function() {
  this.$get = noop;
};

// this is prefixed with Core since it conflicts with
// the animateQueueProvider defined in ngAnimate/animateQueue.js
var $$CoreAnimateQueueProvider = /** @this */ function() {
  var postDigestQueue = new HashMap();
  var postDigestElements = [];

  this.$get = ['$$AnimateRunner', '$rootScope',
       function($$AnimateRunner,   $rootScope) {
    return {
      enabled: noop,
      on: noop,
      off: noop,
      pin: noop,

      push: function(element, event, options, domOperation) {
        if (domOperation) {
          domOperation();
        }

        options = options || {};
        if (options.from) {
          element.css(options.from);
        }
        if (options.to) {
          element.css(options.to);
        }

        if (options.addClass || options.removeClass) {
          addRemoveClassesPostDigest(element, options.addClass, options.removeClass);
        }

        var runner = new $$AnimateRunner();

        // since there are no animations to run the runner needs to be
        // notified that the animation call is complete.
        runner.complete();
        return runner;
      }
    };


    function updateData(data, classes, value) {
      var changed = false;
      if (classes) {
        classes = isString(classes) ? classes.split(' ') :
                  isArray(classes) ? classes : [];
        forEach(classes, function(className) {
          if (className) {
            changed = true;
            data[className] = value;
          }
        });
      }
      return changed;
    }

    function handleCSSClassChanges() {
      forEach(postDigestElements, function(element) {
        var data = postDigestQueue.get(element);
        if (data) {
          var existing = splitClasses(element.attr('class'));
          var toAdd = '';
          var toRemove = '';
          forEach(data, function(status, className) {
            var hasClass = !!existing[className];
            if (status !== hasClass) {
              if (status) {
                toAdd += (toAdd.length ? ' ' : '') + className;
              } else {
                toRemove += (toRemove.length ? ' ' : '') + className;
              }
            }
          });

          forEach(element, function(elm) {
            if (toAdd) {
              jqLiteAddClass(elm, toAdd);
            }
            if (toRemove) {
              jqLiteRemoveClass(elm, toRemove);
            }
          });
          postDigestQueue.remove(element);
        }
      });
      postDigestElements.length = 0;
    }


    function addRemoveClassesPostDigest(element, add, remove) {
      var data = postDigestQueue.get(element) || {};

      var classesAdded = updateData(data, add, true);
      var classesRemoved = updateData(data, remove, false);

      if (classesAdded || classesRemoved) {

        postDigestQueue.put(element, data);
        postDigestElements.push(element);

        if (postDigestElements.length === 1) {
          $rootScope.$$postDigest(handleCSSClassChanges);
        }
      }
    }
  }];
};

/**
 * @ngdoc provider
 * @name $animateProvider
 *
 * @description
 * Default implementation of $animate that doesn't perform any animations, instead just
 * synchronously performs DOM updates and resolves the returned runner promise.
 *
 * In order to enable animations the `ngAnimate` module has to be loaded.
 *
 * To see the functional implementation check out `src/ngAnimate/animate.js`.
 */
var $AnimateProvider = ['$provide', /** @this */ function($provide) {
  var provider = this;

  this.$$registeredAnimations = Object.create(null);

   /**
   * @ngdoc method
   * @name $animateProvider#register
   *
   * @description
   * Registers a new injectable animation factory function. The factory function produces the
   * animation object which contains callback functions for each event that is expected to be
   * animated.
   *
   *   * `eventFn`: `function(element, ... , doneFunction, options)`
   *   The element to animate, the `doneFunction` and the options fed into the animation. Depending
   *   on the type of animation additional arguments will be injected into the animation function. The
   *   list below explains the function signatures for the different animation methods:
   *
   *   - setClass: function(element, addedClasses, removedClasses, doneFunction, options)
   *   - addClass: function(element, addedClasses, doneFunction, options)
   *   - removeClass: function(element, removedClasses, doneFunction, options)
   *   - enter, leave, move: function(element, doneFunction, options)
   *   - animate: function(element, fromStyles, toStyles, doneFunction, options)
   *
   *   Make sure to trigger the `doneFunction` once the animation is fully complete.
   *
   * ```js
   *   return {
   *     //enter, leave, move signature
   *     eventFn : function(element, done, options) {
   *       //code to run the animation
   *       //once complete, then run done()
   *       return function endFunction(wasCancelled) {
   *         //code to cancel the animation
   *       }
   *     }
   *   }
   * ```
   *
   * @param {string} name The name of the animation (this is what the class-based CSS value will be compared to).
   * @param {Function} factory The factory function that will be executed to return the animation
   *                           object.
   */
  this.register = function(name, factory) {
    if (name && name.charAt(0) !== '.') {
      throw $animateMinErr('notcsel', 'Expecting class selector starting with \'.\' got \'{0}\'.', name);
    }

    var key = name + '-animation';
    provider.$$registeredAnimations[name.substr(1)] = key;
    $provide.factory(key, factory);
  };

  /**
   * @ngdoc method
   * @name $animateProvider#classNameFilter
   *
   * @description
   * Sets and/or returns the CSS class regular expression that is checked when performing
   * an animation. Upon bootstrap the classNameFilter value is not set at all and will
   * therefore enable $animate to attempt to perform an animation on any element that is triggered.
   * When setting the `classNameFilter` value, animations will only be performed on elements
   * that successfully match the filter expression. This in turn can boost performance
   * for low-powered devices as well as applications containing a lot of structural operations.
   * @param {RegExp=} expression The className expression which will be checked against all animations
   * @return {RegExp} The current CSS className expression value. If null then there is no expression value
   */
  this.classNameFilter = function(expression) {
    if (arguments.length === 1) {
      this.$$classNameFilter = (expression instanceof RegExp) ? expression : null;
      if (this.$$classNameFilter) {
        var reservedRegex = new RegExp('(\\s+|\\/)' + NG_ANIMATE_CLASSNAME + '(\\s+|\\/)');
        if (reservedRegex.test(this.$$classNameFilter.toString())) {
          throw $animateMinErr('nongcls','$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the "{0}" CSS class.', NG_ANIMATE_CLASSNAME);

        }
      }
    }
    return this.$$classNameFilter;
  };

  this.$get = ['$$animateQueue', function($$animateQueue) {
    function domInsert(element, parentElement, afterElement) {
      // if for some reason the previous element was removed
      // from the dom sometime before this code runs then let's
      // just stick to using the parent element as the anchor
      if (afterElement) {
        var afterNode = extractElementNode(afterElement);
        if (afterNode && !afterNode.parentNode && !afterNode.previousElementSibling) {
          afterElement = null;
        }
      }
      if (afterElement) {
        afterElement.after(element);
      } else {
        parentElement.prepend(element);
      }
    }

    /**
     * @ngdoc service
     * @name $animate
     * @description The $animate service exposes a series of DOM utility methods that provide support
     * for animation hooks. The default behavior is the application of DOM operations, however,
     * when an animation is detected (and animations are enabled), $animate will do the heavy lifting
     * to ensure that animation runs with the triggered DOM operation.
     *
     * By default $animate doesn't trigger any animations. This is because the `ngAnimate` module isn't
     * included and only when it is active then the animation hooks that `$animate` triggers will be
     * functional. Once active then all structural `ng-` directives will trigger animations as they perform
     * their DOM-related operations (enter, leave and move). Other directives such as `ngClass`,
     * `ngShow`, `ngHide` and `ngMessages` also provide support for animations.
     *
     * It is recommended that the`$animate` service is always used when executing DOM-related procedures within directives.
     *
     * To learn more about enabling animation support, click here to visit the
     * {@link ngAnimate ngAnimate module page}.
     */
    return {
      // we don't call it directly since non-existant arguments may
      // be interpreted as null within the sub enabled function

      /**
       *
       * @ngdoc method
       * @name $animate#on
       * @kind function
       * @description Sets up an event listener to fire whenever the animation event (enter, leave, move, etc...)
       *    has fired on the given element or among any of its children. Once the listener is fired, the provided callback
       *    is fired with the following params:
       *
       * ```js
       * $animate.on('enter', container,
       *    function callback(element, phase) {
       *      // cool we detected an enter animation within the container
       *    }
       * );
       * ```
       *
       * @param {string} event the animation event that will be captured (e.g. enter, leave, move, addClass, removeClass, etc...)
       * @param {DOMElement} container the container element that will capture each of the animation events that are fired on itself
       *     as well as among its children
       * @param {Function} callback the callback function that will be fired when the listener is triggered
       *
       * The arguments present in the callback function are:
       * * `element` - The captured DOM element that the animation was fired on.
       * * `phase` - The phase of the animation. The two possible phases are **start** (when the animation starts) and **close** (when it ends).
       */
      on: $$animateQueue.on,

      /**
       *
       * @ngdoc method
       * @name $animate#off
       * @kind function
       * @description Deregisters an event listener based on the event which has been associated with the provided element. This method
       * can be used in three different ways depending on the arguments:
       *
       * ```js
       * // remove all the animation event listeners listening for `enter`
       * $animate.off('enter');
       *
       * // remove listeners for all animation events from the container element
       * $animate.off(container);
       *
       * // remove all the animation event listeners listening for `enter` on the given element and its children
       * $animate.off('enter', container);
       *
       * // remove the event listener function provided by `callback` that is set
       * // to listen for `enter` on the given `container` as well as its children
       * $animate.off('enter', container, callback);
       * ```
       *
       * @param {string|DOMElement} event|container the animation event (e.g. enter, leave, move,
       * addClass, removeClass, etc...), or the container element. If it is the element, all other
       * arguments are ignored.
       * @param {DOMElement=} container the container element the event listener was placed on
       * @param {Function=} callback the callback function that was registered as the listener
       */
      off: $$animateQueue.off,

      /**
       * @ngdoc method
       * @name $animate#pin
       * @kind function
       * @description Associates the provided element with a host parent element to allow the element to be animated even if it exists
       *    outside of the DOM structure of the Angular application. By doing so, any animation triggered via `$animate` can be issued on the
       *    element despite being outside the realm of the application or within another application. Say for example if the application
       *    was bootstrapped on an element that is somewhere inside of the `<body>` tag, but we wanted to allow for an element to be situated
       *    as a direct child of `document.body`, then this can be achieved by pinning the element via `$animate.pin(element)`. Keep in mind
       *    that calling `$animate.pin(element, parentElement)` will not actually insert into the DOM anywhere; it will just create the association.
       *
       *    Note that this feature is only active when the `ngAnimate` module is used.
       *
       * @param {DOMElement} element the external element that will be pinned
       * @param {DOMElement} parentElement the host parent element that will be associated with the external element
       */
      pin: $$animateQueue.pin,

      /**
       *
       * @ngdoc method
       * @name $animate#enabled
       * @kind function
       * @description Used to get and set whether animations are enabled or not on the entire application or on an element and its children. This
       * function can be called in four ways:
       *
       * ```js
       * // returns true or false
       * $animate.enabled();
       *
       * // changes the enabled state for all animations
       * $animate.enabled(false);
       * $animate.enabled(true);
       *
       * // returns true or false if animations are enabled for an element
       * $animate.enabled(element);
       *
       * // changes the enabled state for an element and its children
       * $animate.enabled(element, true);
       * $animate.enabled(element, false);
       * ```
       *
       * @param {DOMElement=} element the element that will be considered for checking/setting the enabled state
       * @param {boolean=} enabled whether or not the animations will be enabled for the element
       *
       * @return {boolean} whether or not animations are enabled
       */
      enabled: $$animateQueue.enabled,

      /**
       * @ngdoc method
       * @name $animate#cancel
       * @kind function
       * @description Cancels the provided animation.
       *
       * @param {Promise} animationPromise The animation promise that is returned when an animation is started.
       */
      cancel: function(runner) {
        if (runner.end) {
          runner.end();
        }
      },

      /**
       *
       * @ngdoc method
       * @name $animate#enter
       * @kind function
       * @description Inserts the element into the DOM either after the `after` element (if provided) or
       *   as the first child within the `parent` element and then triggers an animation.
       *   A promise is returned that will be resolved during the next digest once the animation
       *   has completed.
       *
       * @param {DOMElement} element the element which will be inserted into the DOM
       * @param {DOMElement} parent the parent element which will append the element as
       *   a child (so long as the after element is not present)
       * @param {DOMElement=} after the sibling element after which the element will be appended
       * @param {object=} options an optional collection of options/styles that will be applied to the element.
       *   The object can have the following properties:
       *
       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
       *
       * @return {Promise} the animation callback promise
       */
      enter: function(element, parent, after, options) {
        parent = parent && jqLite(parent);
        after = after && jqLite(after);
        parent = parent || after.parent();
        domInsert(element, parent, after);
        return $$animateQueue.push(element, 'enter', prepareAnimateOptions(options));
      },

      /**
       *
       * @ngdoc method
       * @name $animate#move
       * @kind function
       * @description Inserts (moves) the element into its new position in the DOM either after
       *   the `after` element (if provided) or as the first child within the `parent` element
       *   and then triggers an animation. A promise is returned that will be resolved
       *   during the next digest once the animation has completed.
       *
       * @param {DOMElement} element the element which will be moved into the new DOM position
       * @param {DOMElement} parent the parent element which will append the element as
       *   a child (so long as the after element is not present)
       * @param {DOMElement=} after the sibling element after which the element will be appended
       * @param {object=} options an optional collection of options/styles that will be applied to the element.
       *   The object can have the following properties:
       *
       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
       *
       * @return {Promise} the animation callback promise
       */
      move: function(element, parent, after, options) {
        parent = parent && jqLite(parent);
        after = after && jqLite(after);
        parent = parent || after.parent();
        domInsert(element, parent, after);
        return $$animateQueue.push(element, 'move', prepareAnimateOptions(options));
      },

      /**
       * @ngdoc method
       * @name $animate#leave
       * @kind function
       * @description Triggers an animation and then removes the element from the DOM.
       * When the function is called a promise is returned that will be resolved during the next
       * digest once the animation has completed.
       *
       * @param {DOMElement} element the element which will be removed from the DOM
       * @param {object=} options an optional collection of options/styles that will be applied to the element.
       *   The object can have the following properties:
       *
       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
       *
       * @return {Promise} the animation callback promise
       */
      leave: function(element, options) {
        return $$animateQueue.push(element, 'leave', prepareAnimateOptions(options), function() {
          element.remove();
        });
      },

      /**
       * @ngdoc method
       * @name $animate#addClass
       * @kind function
       *
       * @description Triggers an addClass animation surrounding the addition of the provided CSS class(es). Upon
       *   execution, the addClass operation will only be handled after the next digest and it will not trigger an
       *   animation if element already contains the CSS class or if the class is removed at a later step.
       *   Note that class-based animations are treated differently compared to structural animations
       *   (like enter, move and leave) since the CSS classes may be added/removed at different points
       *   depending if CSS or JavaScript animations are used.
       *
       * @param {DOMElement} element the element which the CSS classes will be applied to
       * @param {string} className the CSS class(es) that will be added (multiple classes are separated via spaces)
       * @param {object=} options an optional collection of options/styles that will be applied to the element.
       *   The object can have the following properties:
       *
       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
       *
       * @return {Promise} the animation callback promise
       */
      addClass: function(element, className, options) {
        options = prepareAnimateOptions(options);
        options.addClass = mergeClasses(options.addclass, className);
        return $$animateQueue.push(element, 'addClass', options);
      },

      /**
       * @ngdoc method
       * @name $animate#removeClass
       * @kind function
       *
       * @description Triggers a removeClass animation surrounding the removal of the provided CSS class(es). Upon
       *   execution, the removeClass operation will only be handled after the next digest and it will not trigger an
       *   animation if element does not contain the CSS class or if the class is added at a later step.
       *   Note that class-based animations are treated differently compared to structural animations
       *   (like enter, move and leave) since the CSS classes may be added/removed at different points
       *   depending if CSS or JavaScript animations are used.
       *
       * @param {DOMElement} element the element which the CSS classes will be applied to
       * @param {string} className the CSS class(es) that will be removed (multiple classes are separated via spaces)
       * @param {object=} options an optional collection of options/styles that will be applied to the element.
       *   The object can have the following properties:
       *
       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
       *
       * @return {Promise} the animation callback promise
       */
      removeClass: function(element, className, options) {
        options = prepareAnimateOptions(options);
        options.removeClass = mergeClasses(options.removeClass, className);
        return $$animateQueue.push(element, 'removeClass', options);
      },

      /**
       * @ngdoc method
       * @name $animate#setClass
       * @kind function
       *
       * @description Performs both the addition and removal of a CSS classes on an element and (during the process)
       *    triggers an animation surrounding the class addition/removal. Much like `$animate.addClass` and
       *    `$animate.removeClass`, `setClass` will only evaluate the classes being added/removed once a digest has
       *    passed. Note that class-based animations are treated differently compared to structural animations
       *    (like enter, move and leave) since the CSS classes may be added/removed at different points
       *    depending if CSS or JavaScript animations are used.
       *
       * @param {DOMElement} element the element which the CSS classes will be applied to
       * @param {string} add the CSS class(es) that will be added (multiple classes are separated via spaces)
       * @param {string} remove the CSS class(es) that will be removed (multiple classes are separated via spaces)
       * @param {object=} options an optional collection of options/styles that will be applied to the element.
       *   The object can have the following properties:
       *
       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
       *
       * @return {Promise} the animation callback promise
       */
      setClass: function(element, add, remove, options) {
        options = prepareAnimateOptions(options);
        options.addClass = mergeClasses(options.addClass, add);
        options.removeClass = mergeClasses(options.removeClass, remove);
        return $$animateQueue.push(element, 'setClass', options);
      },

      /**
       * @ngdoc method
       * @name $animate#animate
       * @kind function
       *
       * @description Performs an inline animation on the element which applies the provided to and from CSS styles to the element.
       * If any detected CSS transition, keyframe or JavaScript matches the provided className value, then the animation will take
       * on the provided styles. For example, if a transition animation is set for the given className, then the provided `from` and
       * `to` styles will be applied alongside the given transition. If the CSS style provided in `from` does not have a corresponding
       * style in `to`, the style in `from` is applied immediately, and no animation is run.
       * If a JavaScript animation is detected then the provided styles will be given in as function parameters into the `animate`
       * method (or as part of the `options` parameter):
       *
       * ```js
       * ngModule.animation('.my-inline-animation', function() {
       *   return {
       *     animate : function(element, from, to, done, options) {
       *       //animation
       *       done();
       *     }
       *   }
       * });
       * ```
       *
       * @param {DOMElement} element the element which the CSS styles will be applied to
       * @param {object} from the from (starting) CSS styles that will be applied to the element and across the animation.
       * @param {object} to the to (destination) CSS styles that will be applied to the element and across the animation.
       * @param {string=} className an optional CSS class that will be applied to the element for the duration of the animation. If
       *    this value is left as empty then a CSS class of `ng-inline-animate` will be applied to the element.
       *    (Note that if no animation is detected then this value will not be applied to the element.)
       * @param {object=} options an optional collection of options/styles that will be applied to the element.
       *   The object can have the following properties:
       *
       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
       *
       * @return {Promise} the animation callback promise
       */
      animate: function(element, from, to, className, options) {
        options = prepareAnimateOptions(options);
        options.from = options.from ? extend(options.from, from) : from;
        options.to   = options.to   ? extend(options.to, to)     : to;

        className = className || 'ng-inline-animate';
        options.tempClasses = mergeClasses(options.tempClasses, className);
        return $$animateQueue.push(element, 'animate', options);
      }
    };
  }];
}];

var $$AnimateAsyncRunFactoryProvider = /** @this */ function() {
  this.$get = ['$$rAF', function($$rAF) {
    var waitQueue = [];

    function waitForTick(fn) {
      waitQueue.push(fn);
      if (waitQueue.length > 1) return;
      $$rAF(function() {
        for (var i = 0; i < waitQueue.length; i++) {
          waitQueue[i]();
        }
        waitQueue = [];
      });
    }

    return function() {
      var passed = false;
      waitForTick(function() {
        passed = true;
      });
      return function(callback) {
        if (passed) {
          callback();
        } else {
          waitForTick(callback);
        }
      };
    };
  }];
};

var $$AnimateRunnerFactoryProvider = /** @this */ function() {
  this.$get = ['$q', '$sniffer', '$$animateAsyncRun', '$document', '$timeout',
       function($q,   $sniffer,   $$animateAsyncRun,   $document,   $timeout) {

    var INITIAL_STATE = 0;
    var DONE_PENDING_STATE = 1;
    var DONE_COMPLETE_STATE = 2;

    AnimateRunner.chain = function(chain, callback) {
      var index = 0;

      next();
      function next() {
        if (index === chain.length) {
          callback(true);
          return;
        }

        chain[index](function(response) {
          if (response === false) {
            callback(false);
            return;
          }
          index++;
          next();
        });
      }
    };

    AnimateRunner.all = function(runners, callback) {
      var count = 0;
      var status = true;
      forEach(runners, function(runner) {
        runner.done(onProgress);
      });

      function onProgress(response) {
        status = status && response;
        if (++count === runners.length) {
          callback(status);
        }
      }
    };

    function AnimateRunner(host) {
      this.setHost(host);

      var rafTick = $$animateAsyncRun();
      var timeoutTick = function(fn) {
        $timeout(fn, 0, false);
      };

      this._doneCallbacks = [];
      this._tick = function(fn) {
        var doc = $document[0];

        // the document may not be ready or attached
        // to the module for some internal tests
        if (doc && doc.hidden) {
          timeoutTick(fn);
        } else {
          rafTick(fn);
        }
      };
      this._state = 0;
    }

    AnimateRunner.prototype = {
      setHost: function(host) {
        this.host = host || {};
      },

      done: function(fn) {
        if (this._state === DONE_COMPLETE_STATE) {
          fn();
        } else {
          this._doneCallbacks.push(fn);
        }
      },

      progress: noop,

      getPromise: function() {
        if (!this.promise) {
          var self = this;
          this.promise = $q(function(resolve, reject) {
            self.done(function(status) {
              if (status === false) {
                reject();
              } else {
                resolve();
              }
            });
          });
        }
        return this.promise;
      },

      then: function(resolveHandler, rejectHandler) {
        return this.getPromise().then(resolveHandler, rejectHandler);
      },

      'catch': function(handler) {
        return this.getPromise()['catch'](handler);
      },

      'finally': function(handler) {
        return this.getPromise()['finally'](handler);
      },

      pause: function() {
        if (this.host.pause) {
          this.host.pause();
        }
      },

      resume: function() {
        if (this.host.resume) {
          this.host.resume();
        }
      },

      end: function() {
        if (this.host.end) {
          this.host.end();
        }
        this._resolve(true);
      },

      cancel: function() {
        if (this.host.cancel) {
          this.host.cancel();
        }
        this._resolve(false);
      },

      complete: function(response) {
        var self = this;
        if (self._state === INITIAL_STATE) {
          self._state = DONE_PENDING_STATE;
          self._tick(function() {
            self._resolve(response);
          });
        }
      },

      _resolve: function(response) {
        if (this._state !== DONE_COMPLETE_STATE) {
          forEach(this._doneCallbacks, function(fn) {
            fn(response);
          });
          this._doneCallbacks.length = 0;
          this._state = DONE_COMPLETE_STATE;
        }
      }
    };

    return AnimateRunner;
  }];
};

/* exported $CoreAnimateCssProvider */

/**
 * @ngdoc service
 * @name $animateCss
 * @kind object
 * @this
 *
 * @description
 * This is the core version of `$animateCss`. By default, only when the `ngAnimate` is included,
 * then the `$animateCss` service will actually perform animations.
 *
 * Click here {@link ngAnimate.$animateCss to read the documentation for $animateCss}.
 */
var $CoreAnimateCssProvider = function() {
  this.$get = ['$$rAF', '$q', '$$AnimateRunner', function($$rAF, $q, $$AnimateRunner) {

    return function(element, initialOptions) {
      // all of the animation functions should create
      // a copy of the options data, however, if a
      // parent service has already created a copy then
      // we should stick to using that
      var options = initialOptions || {};
      if (!options.$$prepared) {
        options = copy(options);
      }

      // there is no point in applying the styles since
      // there is no animation that goes on at all in
      // this version of $animateCss.
      if (options.cleanupStyles) {
        options.from = options.to = null;
      }

      if (options.from) {
        element.css(options.from);
        options.from = null;
      }

      var closed, runner = new $$AnimateRunner();
      return {
        start: run,
        end: run
      };

      function run() {
        $$rAF(function() {
          applyAnimationContents();
          if (!closed) {
            runner.complete();
          }
          closed = true;
        });
        return runner;
      }

      function applyAnimationContents() {
        if (options.addClass) {
          element.addClass(options.addClass);
          options.addClass = null;
        }
        if (options.removeClass) {
          element.removeClass(options.removeClass);
          options.removeClass = null;
        }
        if (options.to) {
          element.css(options.to);
          options.to = null;
        }
      }
    };
  }];
};

/* global stripHash: true */

/**
 * ! This is a private undocumented service !
 *
 * @name $browser
 * @requires $log
 * @description
 * This object has two goals:
 *
 * - hide all the global state in the browser caused by the window object
 * - abstract away all the browser specific features and inconsistencies
 *
 * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`
 * service, which can be used for convenient testing of the application without the interaction with
 * the real browser apis.
 */
/**
 * @param {object} window The global window object.
 * @param {object} document jQuery wrapped document.
 * @param {object} $log window.console or an object with the same interface.
 * @param {object} $sniffer $sniffer service
 */
function Browser(window, document, $log, $sniffer) {
  var self = this,
      location = window.location,
      history = window.history,
      setTimeout = window.setTimeout,
      clearTimeout = window.clearTimeout,
      pendingDeferIds = {};

  self.isMock = false;

  var outstandingRequestCount = 0;
  var outstandingRequestCallbacks = [];

  // TODO(vojta): remove this temporary api
  self.$$completeOutstandingRequest = completeOutstandingRequest;
  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };

  /**
   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`
   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.
   */
  function completeOutstandingRequest(fn) {
    try {
      fn.apply(null, sliceArgs(arguments, 1));
    } finally {
      outstandingRequestCount--;
      if (outstandingRequestCount === 0) {
        while (outstandingRequestCallbacks.length) {
          try {
            outstandingRequestCallbacks.pop()();
          } catch (e) {
            $log.error(e);
          }
        }
      }
    }
  }

  function getHash(url) {
    var index = url.indexOf('#');
    return index === -1 ? '' : url.substr(index);
  }

  /**
   * @private
   * Note: this method is used only by scenario runner
   * TODO(vojta): prefix this method with $$ ?
   * @param {function()} callback Function that will be called when no outstanding request
   */
  self.notifyWhenNoOutstandingRequests = function(callback) {
    if (outstandingRequestCount === 0) {
      callback();
    } else {
      outstandingRequestCallbacks.push(callback);
    }
  };

  //////////////////////////////////////////////////////////////
  // URL API
  //////////////////////////////////////////////////////////////

  var cachedState, lastHistoryState,
      lastBrowserUrl = location.href,
      baseElement = document.find('base'),
      pendingLocation = null,
      getCurrentState = !$sniffer.history ? noop : function getCurrentState() {
        try {
          return history.state;
        } catch (e) {
          // MSIE can reportedly throw when there is no state (UNCONFIRMED).
        }
      };

  cacheState();
  lastHistoryState = cachedState;

  /**
   * @name $browser#url
   *
   * @description
   * GETTER:
   * Without any argument, this method just returns current value of location.href.
   *
   * SETTER:
   * With at least one argument, this method sets url to new value.
   * If html5 history api supported, pushState/replaceState is used, otherwise
   * location.href/location.replace is used.
   * Returns its own instance to allow chaining
   *
   * NOTE: this api is intended for use only by the $location service. Please use the
   * {@link ng.$location $location service} to change url.
   *
   * @param {string} url New url (when used as setter)
   * @param {boolean=} replace Should new url replace current history record?
   * @param {object=} state object to use with pushState/replaceState
   */
  self.url = function(url, replace, state) {
    // In modern browsers `history.state` is `null` by default; treating it separately
    // from `undefined` would cause `$browser.url('/foo')` to change `history.state`
    // to undefined via `pushState`. Instead, let's change `undefined` to `null` here.
    if (isUndefined(state)) {
      state = null;
    }

    // Android Browser BFCache causes location, history reference to become stale.
    if (location !== window.location) location = window.location;
    if (history !== window.history) history = window.history;

    // setter
    if (url) {
      var sameState = lastHistoryState === state;

      // Don't change anything if previous and current URLs and states match. This also prevents
      // IE<10 from getting into redirect loop when in LocationHashbangInHtml5Url mode.
      // See https://github.com/angular/angular.js/commit/ffb2701
      if (lastBrowserUrl === url && (!$sniffer.history || sameState)) {
        return self;
      }
      var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);
      lastBrowserUrl = url;
      lastHistoryState = state;
      // Don't use history API if only the hash changed
      // due to a bug in IE10/IE11 which leads
      // to not firing a `hashchange` nor `popstate` event
      // in some cases (see #9143).
      if ($sniffer.history && (!sameBase || !sameState)) {
        history[replace ? 'replaceState' : 'pushState'](state, '', url);
        cacheState();
        // Do the assignment again so that those two variables are referentially identical.
        lastHistoryState = cachedState;
      } else {
        if (!sameBase) {
          pendingLocation = url;
        }
        if (replace) {
          location.replace(url);
        } else if (!sameBase) {
          location.href = url;
        } else {
          location.hash = getHash(url);
        }
        if (location.href !== url) {
          pendingLocation = url;
        }
      }
      if (pendingLocation) {
        pendingLocation = url;
      }
      return self;
    // getter
    } else {
      // - pendingLocation is needed as browsers don't allow to read out
      //   the new location.href if a reload happened or if there is a bug like in iOS 9 (see
      //   https://openradar.appspot.com/22186109).
      // - the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172
      return pendingLocation || location.href.replace(/%27/g,'\'');
    }
  };

  /**
   * @name $browser#state
   *
   * @description
   * This method is a getter.
   *
   * Return history.state or null if history.state is undefined.
   *
   * @returns {object} state
   */
  self.state = function() {
    return cachedState;
  };

  var urlChangeListeners = [],
      urlChangeInit = false;

  function cacheStateAndFireUrlChange() {
    pendingLocation = null;
    cacheState();
    fireUrlChange();
  }

  // This variable should be used *only* inside the cacheState function.
  var lastCachedState = null;
  function cacheState() {
    // This should be the only place in $browser where `history.state` is read.
    cachedState = getCurrentState();
    cachedState = isUndefined(cachedState) ? null : cachedState;

    // Prevent callbacks fo fire twice if both hashchange & popstate were fired.
    if (equals(cachedState, lastCachedState)) {
      cachedState = lastCachedState;
    }
    lastCachedState = cachedState;
  }

  function fireUrlChange() {
    if (lastBrowserUrl === self.url() && lastHistoryState === cachedState) {
      return;
    }

    lastBrowserUrl = self.url();
    lastHistoryState = cachedState;
    forEach(urlChangeListeners, function(listener) {
      listener(self.url(), cachedState);
    });
  }

  /**
   * @name $browser#onUrlChange
   *
   * @description
   * Register callback function that will be called, when url changes.
   *
   * It's only called when the url is changed from outside of angular:
   * - user types different url into address bar
   * - user clicks on history (forward/back) button
   * - user clicks on a link
   *
   * It's not called when url is changed by $browser.url() method
   *
   * The listener gets called with new url as parameter.
   *
   * NOTE: this api is intended for use only by the $location service. Please use the
   * {@link ng.$location $location service} to monitor url changes in angular apps.
   *
   * @param {function(string)} listener Listener function to be called when url changes.
   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.
   */
  self.onUrlChange = function(callback) {
    // TODO(vojta): refactor to use node's syntax for events
    if (!urlChangeInit) {
      // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)
      // don't fire popstate when user change the address bar and don't fire hashchange when url
      // changed by push/replaceState

      // html5 history api - popstate event
      if ($sniffer.history) jqLite(window).on('popstate', cacheStateAndFireUrlChange);
      // hashchange event
      jqLite(window).on('hashchange', cacheStateAndFireUrlChange);

      urlChangeInit = true;
    }

    urlChangeListeners.push(callback);
    return callback;
  };

  /**
   * @private
   * Remove popstate and hashchange handler from window.
   *
   * NOTE: this api is intended for use only by $rootScope.
   */
  self.$$applicationDestroyed = function() {
    jqLite(window).off('hashchange popstate', cacheStateAndFireUrlChange);
  };

  /**
   * Checks whether the url has changed outside of Angular.
   * Needs to be exported to be able to check for changes that have been done in sync,
   * as hashchange/popstate events fire in async.
   */
  self.$$checkUrlChange = fireUrlChange;

  //////////////////////////////////////////////////////////////
  // Misc API
  //////////////////////////////////////////////////////////////

  /**
   * @name $browser#baseHref
   *
   * @description
   * Returns current <base href>
   * (always relative - without domain)
   *
   * @returns {string} The current base href
   */
  self.baseHref = function() {
    var href = baseElement.attr('href');
    return href ? href.replace(/^(https?:)?\/\/[^/]*/, '') : '';
  };

  /**
   * @name $browser#defer
   * @param {function()} fn A function, who's execution should be deferred.
   * @param {number=} [delay=0] of milliseconds to defer the function execution.
   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.
   *
   * @description
   * Executes a fn asynchronously via `setTimeout(fn, delay)`.
   *
   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using
   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed
   * via `$browser.defer.flush()`.
   *
   */
  self.defer = function(fn, delay) {
    var timeoutId;
    outstandingRequestCount++;
    timeoutId = setTimeout(function() {
      delete pendingDeferIds[timeoutId];
      completeOutstandingRequest(fn);
    }, delay || 0);
    pendingDeferIds[timeoutId] = true;
    return timeoutId;
  };


  /**
   * @name $browser#defer.cancel
   *
   * @description
   * Cancels a deferred task identified with `deferId`.
   *
   * @param {*} deferId Token returned by the `$browser.defer` function.
   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully
   *                    canceled.
   */
  self.defer.cancel = function(deferId) {
    if (pendingDeferIds[deferId]) {
      delete pendingDeferIds[deferId];
      clearTimeout(deferId);
      completeOutstandingRequest(noop);
      return true;
    }
    return false;
  };

}

/** @this */
function $BrowserProvider() {
  this.$get = ['$window', '$log', '$sniffer', '$document',
      function($window, $log, $sniffer, $document) {
        return new Browser($window, $document, $log, $sniffer);
      }];
}

/**
 * @ngdoc service
 * @name $cacheFactory
 * @this
 *
 * @description
 * Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to
 * them.
 *
 * ```js
 *
 *  var cache = $cacheFactory('cacheId');
 *  expect($cacheFactory.get('cacheId')).toBe(cache);
 *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();
 *
 *  cache.put("key", "value");
 *  cache.put("another key", "another value");
 *
 *  // We've specified no options on creation
 *  expect(cache.info()).toEqual({id: 'cacheId', size: 2});
 *
 * ```
 *
 *
 * @param {string} cacheId Name or id of the newly created cache.
 * @param {object=} options Options object that specifies the cache behavior. Properties:
 *
 *   - `{number=}` `capacity` — turns the cache into LRU cache.
 *
 * @returns {object} Newly created cache object with the following set of methods:
 *
 * - `{object}` `info()` — Returns id, size, and options of cache.
 * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns
 *   it.
 * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.
 * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.
 * - `{void}` `removeAll()` — Removes all cached values.
 * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.
 *
 * @example
   <example module="cacheExampleApp" name="cache-factory">
     <file name="index.html">
       <div ng-controller="CacheController">
         <input ng-model="newCacheKey" placeholder="Key">
         <input ng-model="newCacheValue" placeholder="Value">
         <button ng-click="put(newCacheKey, newCacheValue)">Cache</button>

         <p ng-if="keys.length">Cached Values</p>
         <div ng-repeat="key in keys">
           <span ng-bind="key"></span>
           <span>: </span>
           <b ng-bind="cache.get(key)"></b>
         </div>

         <p>Cache Info</p>
         <div ng-repeat="(key, value) in cache.info()">
           <span ng-bind="key"></span>
           <span>: </span>
           <b ng-bind="value"></b>
         </div>
       </div>
     </file>
     <file name="script.js">
       angular.module('cacheExampleApp', []).
         controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {
           $scope.keys = [];
           $scope.cache = $cacheFactory('cacheId');
           $scope.put = function(key, value) {
             if (angular.isUndefined($scope.cache.get(key))) {
               $scope.keys.push(key);
             }
             $scope.cache.put(key, angular.isUndefined(value) ? null : value);
           };
         }]);
     </file>
     <file name="style.css">
       p {
         margin: 10px 0 3px;
       }
     </file>
   </example>
 */
function $CacheFactoryProvider() {

  this.$get = function() {
    var caches = {};

    function cacheFactory(cacheId, options) {
      if (cacheId in caches) {
        throw minErr('$cacheFactory')('iid', 'CacheId \'{0}\' is already taken!', cacheId);
      }

      var size = 0,
          stats = extend({}, options, {id: cacheId}),
          data = createMap(),
          capacity = (options && options.capacity) || Number.MAX_VALUE,
          lruHash = createMap(),
          freshEnd = null,
          staleEnd = null;

      /**
       * @ngdoc type
       * @name $cacheFactory.Cache
       *
       * @description
       * A cache object used to store and retrieve data, primarily used by
       * {@link $http $http} and the {@link ng.directive:script script} directive to cache
       * templates and other data.
       *
       * ```js
       *  angular.module('superCache')
       *    .factory('superCache', ['$cacheFactory', function($cacheFactory) {
       *      return $cacheFactory('super-cache');
       *    }]);
       * ```
       *
       * Example test:
       *
       * ```js
       *  it('should behave like a cache', inject(function(superCache) {
       *    superCache.put('key', 'value');
       *    superCache.put('another key', 'another value');
       *
       *    expect(superCache.info()).toEqual({
       *      id: 'super-cache',
       *      size: 2
       *    });
       *
       *    superCache.remove('another key');
       *    expect(superCache.get('another key')).toBeUndefined();
       *
       *    superCache.removeAll();
       *    expect(superCache.info()).toEqual({
       *      id: 'super-cache',
       *      size: 0
       *    });
       *  }));
       * ```
       */
      return (caches[cacheId] = {

        /**
         * @ngdoc method
         * @name $cacheFactory.Cache#put
         * @kind function
         *
         * @description
         * Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be
         * retrieved later, and incrementing the size of the cache if the key was not already
         * present in the cache. If behaving like an LRU cache, it will also remove stale
         * entries from the set.
         *
         * It will not insert undefined values into the cache.
         *
         * @param {string} key the key under which the cached data is stored.
         * @param {*} value the value to store alongside the key. If it is undefined, the key
         *    will not be stored.
         * @returns {*} the value stored.
         */
        put: function(key, value) {
          if (isUndefined(value)) return;
          if (capacity < Number.MAX_VALUE) {
            var lruEntry = lruHash[key] || (lruHash[key] = {key: key});

            refresh(lruEntry);
          }

          if (!(key in data)) size++;
          data[key] = value;

          if (size > capacity) {
            this.remove(staleEnd.key);
          }

          return value;
        },

        /**
         * @ngdoc method
         * @name $cacheFactory.Cache#get
         * @kind function
         *
         * @description
         * Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.
         *
         * @param {string} key the key of the data to be retrieved
         * @returns {*} the value stored.
         */
        get: function(key) {
          if (capacity < Number.MAX_VALUE) {
            var lruEntry = lruHash[key];

            if (!lruEntry) return;

            refresh(lruEntry);
          }

          return data[key];
        },


        /**
         * @ngdoc method
         * @name $cacheFactory.Cache#remove
         * @kind function
         *
         * @description
         * Removes an entry from the {@link $cacheFactory.Cache Cache} object.
         *
         * @param {string} key the key of the entry to be removed
         */
        remove: function(key) {
          if (capacity < Number.MAX_VALUE) {
            var lruEntry = lruHash[key];

            if (!lruEntry) return;

            if (lruEntry === freshEnd) freshEnd = lruEntry.p;
            if (lruEntry === staleEnd) staleEnd = lruEntry.n;
            link(lruEntry.n,lruEntry.p);

            delete lruHash[key];
          }

          if (!(key in data)) return;

          delete data[key];
          size--;
        },


        /**
         * @ngdoc method
         * @name $cacheFactory.Cache#removeAll
         * @kind function
         *
         * @description
         * Clears the cache object of any entries.
         */
        removeAll: function() {
          data = createMap();
          size = 0;
          lruHash = createMap();
          freshEnd = staleEnd = null;
        },


        /**
         * @ngdoc method
         * @name $cacheFactory.Cache#destroy
         * @kind function
         *
         * @description
         * Destroys the {@link $cacheFactory.Cache Cache} object entirely,
         * removing it from the {@link $cacheFactory $cacheFactory} set.
         */
        destroy: function() {
          data = null;
          stats = null;
          lruHash = null;
          delete caches[cacheId];
        },


        /**
         * @ngdoc method
         * @name $cacheFactory.Cache#info
         * @kind function
         *
         * @description
         * Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.
         *
         * @returns {object} an object with the following properties:
         *   <ul>
         *     <li>**id**: the id of the cache instance</li>
         *     <li>**size**: the number of entries kept in the cache instance</li>
         *     <li>**...**: any additional properties from the options object when creating the
         *       cache.</li>
         *   </ul>
         */
        info: function() {
          return extend({}, stats, {size: size});
        }
      });


      /**
       * makes the `entry` the freshEnd of the LRU linked list
       */
      function refresh(entry) {
        if (entry !== freshEnd) {
          if (!staleEnd) {
            staleEnd = entry;
          } else if (staleEnd === entry) {
            staleEnd = entry.n;
          }

          link(entry.n, entry.p);
          link(entry, freshEnd);
          freshEnd = entry;
          freshEnd.n = null;
        }
      }


      /**
       * bidirectionally links two entries of the LRU linked list
       */
      function link(nextEntry, prevEntry) {
        if (nextEntry !== prevEntry) {
          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify
          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify
        }
      }
    }


  /**
   * @ngdoc method
   * @name $cacheFactory#info
   *
   * @description
   * Get information about all the caches that have been created
   *
   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`
   */
    cacheFactory.info = function() {
      var info = {};
      forEach(caches, function(cache, cacheId) {
        info[cacheId] = cache.info();
      });
      return info;
    };


  /**
   * @ngdoc method
   * @name $cacheFactory#get
   *
   * @description
   * Get access to a cache object by the `cacheId` used when it was created.
   *
   * @param {string} cacheId Name or id of a cache to access.
   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.
   */
    cacheFactory.get = function(cacheId) {
      return caches[cacheId];
    };


    return cacheFactory;
  };
}

/**
 * @ngdoc service
 * @name $templateCache
 * @this
 *
 * @description
 * The first time a template is used, it is loaded in the template cache for quick retrieval. You
 * can load templates directly into the cache in a `script` tag, or by consuming the
 * `$templateCache` service directly.
 *
 * Adding via the `script` tag:
 *
 * ```html
 *   <script type="text/ng-template" id="templateId.html">
 *     <p>This is the content of the template</p>
 *   </script>
 * ```
 *
 * **Note:** the `script` tag containing the template does not need to be included in the `head` of
 * the document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,
 * element with ng-app attribute), otherwise the template will be ignored.
 *
 * Adding via the `$templateCache` service:
 *
 * ```js
 * var myApp = angular.module('myApp', []);
 * myApp.run(function($templateCache) {
 *   $templateCache.put('templateId.html', 'This is the content of the template');
 * });
 * ```
 *
 * To retrieve the template later, simply use it in your component:
 * ```js
 * myApp.component('myComponent', {
 *    templateUrl: 'templateId.html'
 * });
 * ```
 *
 * or get it via the `$templateCache` service:
 * ```js
 * $templateCache.get('templateId.html')
 * ```
 *
 * See {@link ng.$cacheFactory $cacheFactory}.
 *
 */
function $TemplateCacheProvider() {
  this.$get = ['$cacheFactory', function($cacheFactory) {
    return $cacheFactory('templates');
  }];
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *     Any commits to this file should be reviewed with security in mind.  *
 *   Changes to this file can potentially create security vulnerabilities. *
 *          An approval from 2 Core members with history of modifying      *
 *                         this file is required.                          *
 *                                                                         *
 *  Does the change somehow allow for arbitrary javascript to be executed? *
 *    Or allows for someone to change the prototype of built-in objects?   *
 *     Or gives undesired access to variables like document or window?    *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!
 *
 * DOM-related variables:
 *
 * - "node" - DOM Node
 * - "element" - DOM Element or Node
 * - "$node" or "$element" - jqLite-wrapped node or element
 *
 *
 * Compiler related stuff:
 *
 * - "linkFn" - linking fn of a single directive
 * - "nodeLinkFn" - function that aggregates all linking fns for a particular node
 * - "childLinkFn" -  function that aggregates all linking fns for child nodes of a particular node
 * - "compositeLinkFn" - function that aggregates all linking fns for a compilation root (nodeList)
 */


/**
 * @ngdoc service
 * @name $compile
 * @kind function
 *
 * @description
 * Compiles an HTML string or DOM into a template and produces a template function, which
 * can then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.
 *
 * The compilation is a process of walking the DOM tree and matching DOM elements to
 * {@link ng.$compileProvider#directive directives}.
 *
 * <div class="alert alert-warning">
 * **Note:** This document is an in-depth reference of all directive options.
 * For a gentle introduction to directives with examples of common use cases,
 * see the {@link guide/directive directive guide}.
 * </div>
 *
 * ## Comprehensive Directive API
 *
 * There are many different options for a directive.
 *
 * The difference resides in the return value of the factory function.
 * You can either return a {@link $compile#directive-definition-object Directive Definition Object (see below)}
 * that defines the directive properties, or just the `postLink` function (all other properties will have
 * the default values).
 *
 * <div class="alert alert-success">
 * **Best Practice:** It's recommended to use the "directive definition object" form.
 * </div>
 *
 * Here's an example directive declared with a Directive Definition Object:
 *
 * ```js
 *   var myModule = angular.module(...);
 *
 *   myModule.directive('directiveName', function factory(injectables) {
 *     var directiveDefinitionObject = {
 *       {@link $compile#-priority- priority}: 0,
 *       {@link $compile#-template- template}: '<div></div>', // or // function(tElement, tAttrs) { ... },
 *       // or
 *       // {@link $compile#-templateurl- templateUrl}: 'directive.html', // or // function(tElement, tAttrs) { ... },
 *       {@link $compile#-transclude- transclude}: false,
 *       {@link $compile#-restrict- restrict}: 'A',
 *       {@link $compile#-templatenamespace- templateNamespace}: 'html',
 *       {@link $compile#-scope- scope}: false,
 *       {@link $compile#-controller- controller}: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },
 *       {@link $compile#-controlleras- controllerAs}: 'stringIdentifier',
 *       {@link $compile#-bindtocontroller- bindToController}: false,
 *       {@link $compile#-require- require}: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],
 *       {@link $compile#-multielement- multiElement}: false,
 *       {@link $compile#-compile- compile}: function compile(tElement, tAttrs, transclude) {
 *         return {
 *            {@link $compile#pre-linking-function pre}: function preLink(scope, iElement, iAttrs, controller) { ... },
 *            {@link $compile#post-linking-function post}: function postLink(scope, iElement, iAttrs, controller) { ... }
 *         }
 *         // or
 *         // return function postLink( ... ) { ... }
 *       },
 *       // or
 *       // {@link $compile#-link- link}: {
 *       //  {@link $compile#pre-linking-function pre}: function preLink(scope, iElement, iAttrs, controller) { ... },
 *       //  {@link $compile#post-linking-function post}: function postLink(scope, iElement, iAttrs, controller) { ... }
 *       // }
 *       // or
 *       // {@link $compile#-link- link}: function postLink( ... ) { ... }
 *     };
 *     return directiveDefinitionObject;
 *   });
 * ```
 *
 * <div class="alert alert-warning">
 * **Note:** Any unspecified options will use the default value. You can see the default values below.
 * </div>
 *
 * Therefore the above can be simplified as:
 *
 * ```js
 *   var myModule = angular.module(...);
 *
 *   myModule.directive('directiveName', function factory(injectables) {
 *     var directiveDefinitionObject = {
 *       link: function postLink(scope, iElement, iAttrs) { ... }
 *     };
 *     return directiveDefinitionObject;
 *     // or
 *     // return function postLink(scope, iElement, iAttrs) { ... }
 *   });
 * ```
 *
 * ### Life-cycle hooks
 * Directive controllers can provide the following methods that are called by Angular at points in the life-cycle of the
 * directive:
 * * `$onInit()` - Called on each controller after all the controllers on an element have been constructed and
 *   had their bindings initialized (and before the pre &amp; post linking functions for the directives on
 *   this element). This is a good place to put initialization code for your controller.
 * * `$onChanges(changesObj)` - Called whenever one-way (`<`) or interpolation (`@`) bindings are updated. The
 *   `changesObj` is a hash whose keys are the names of the bound properties that have changed, and the values are an
 *   object of the form `{ currentValue, previousValue, isFirstChange() }`. Use this hook to trigger updates within a
 *   component such as cloning the bound value to prevent accidental mutation of the outer value.
 * * `$doCheck()` - Called on each turn of the digest cycle. Provides an opportunity to detect and act on
 *   changes. Any actions that you wish to take in response to the changes that you detect must be
 *   invoked from this hook; implementing this has no effect on when `$onChanges` is called. For example, this hook
 *   could be useful if you wish to perform a deep equality check, or to check a Date object, changes to which would not
 *   be detected by Angular's change detector and thus not trigger `$onChanges`. This hook is invoked with no arguments;
 *   if detecting changes, you must store the previous value(s) for comparison to the current values.
 * * `$onDestroy()` - Called on a controller when its containing scope is destroyed. Use this hook for releasing
 *   external resources, watches and event handlers. Note that components have their `$onDestroy()` hooks called in
 *   the same order as the `$scope.$broadcast` events are triggered, which is top down. This means that parent
 *   components will have their `$onDestroy()` hook called before child components.
 * * `$postLink()` - Called after this controller's element and its children have been linked. Similar to the post-link
 *   function this hook can be used to set up DOM event handlers and do direct DOM manipulation.
 *   Note that child elements that contain `templateUrl` directives will not have been compiled and linked since
 *   they are waiting for their template to load asynchronously and their own compilation and linking has been
 *   suspended until that occurs.
 *
 * #### Comparison with Angular 2 life-cycle hooks
 * Angular 2 also uses life-cycle hooks for its components. While the Angular 1 life-cycle hooks are similar there are
 * some differences that you should be aware of, especially when it comes to moving your code from Angular 1 to Angular 2:
 *
 * * Angular 1 hooks are prefixed with `$`, such as `$onInit`. Angular 2 hooks are prefixed with `ng`, such as `ngOnInit`.
 * * Angular 1 hooks can be defined on the controller prototype or added to the controller inside its constructor.
 *   In Angular 2 you can only define hooks on the prototype of the Component class.
 * * Due to the differences in change-detection, you may get many more calls to `$doCheck` in Angular 1 than you would to
 *   `ngDoCheck` in Angular 2
 * * Changes to the model inside `$doCheck` will trigger new turns of the digest loop, which will cause the changes to be
 *   propagated throughout the application.
 *   Angular 2 does not allow the `ngDoCheck` hook to trigger a change outside of the component. It will either throw an
 *   error or do nothing depending upon the state of `enableProdMode()`.
 *
 * #### Life-cycle hook examples
 *
 * This example shows how you can check for mutations to a Date object even though the identity of the object
 * has not changed.
 *
 * <example name="doCheckDateExample" module="do-check-module">
 *   <file name="app.js">
 *     angular.module('do-check-module', [])
 *       .component('app', {
 *         template:
 *           'Month: <input ng-model="$ctrl.month" ng-change="$ctrl.updateDate()">' +
 *           'Date: {{ $ctrl.date }}' +
 *           '<test date="$ctrl.date"></test>',
 *         controller: function() {
 *           this.date = new Date();
 *           this.month = this.date.getMonth();
 *           this.updateDate = function() {
 *             this.date.setMonth(this.month);
 *           };
 *         }
 *       })
 *       .component('test', {
 *         bindings: { date: '<' },
 *         template:
 *           '<pre>{{ $ctrl.log | json }}</pre>',
 *         controller: function() {
 *           var previousValue;
 *           this.log = [];
 *           this.$doCheck = function() {
 *             var currentValue = this.date && this.date.valueOf();
 *             if (previousValue !== currentValue) {
 *               this.log.push('doCheck: date mutated: ' + this.date);
 *               previousValue = currentValue;
 *             }
 *           };
 *         }
 *       });
 *   </file>
 *   <file name="index.html">
 *     <app></app>
 *   </file>
 * </example>
 *
 * This example show how you might use `$doCheck` to trigger changes in your component's inputs even if the
 * actual identity of the component doesn't change. (Be aware that cloning and deep equality checks on large
 * arrays or objects can have a negative impact on your application performance)
 *
 * <example name="doCheckArrayExample" module="do-check-module">
 *   <file name="index.html">
 *     <div ng-init="items = []">
 *       <button ng-click="items.push(items.length)">Add Item</button>
 *       <button ng-click="items = []">Reset Items</button>
 *       <pre>{{ items }}</pre>
 *       <test items="items"></test>
 *     </div>
 *   </file>
 *   <file name="app.js">
 *      angular.module('do-check-module', [])
 *        .component('test', {
 *          bindings: { items: '<' },
 *          template:
 *            '<pre>{{ $ctrl.log | json }}</pre>',
 *          controller: function() {
 *            this.log = [];
 *
 *            this.$doCheck = function() {
 *              if (this.items_ref !== this.items) {
 *                this.log.push('doCheck: items changed');
 *                this.items_ref = this.items;
 *              }
 *              if (!angular.equals(this.items_clone, this.items)) {
 *                this.log.push('doCheck: items mutated');
 *                this.items_clone = angular.copy(this.items);
 *              }
 *            };
 *          }
 *        });
 *   </file>
 * </example>
 *
 *
 * ### Directive Definition Object
 *
 * The directive definition object provides instructions to the {@link ng.$compile
 * compiler}. The attributes are:
 *
 * #### `multiElement`
 * When this property is set to true (default is `false`), the HTML compiler will collect DOM nodes between
 * nodes with the attributes `directive-name-start` and `directive-name-end`, and group them
 * together as the directive elements. It is recommended that this feature be used on directives
 * which are not strictly behavioral (such as {@link ngClick}), and which
 * do not manipulate or replace child nodes (such as {@link ngInclude}).
 *
 * #### `priority`
 * When there are multiple directives defined on a single DOM element, sometimes it
 * is necessary to specify the order in which the directives are applied. The `priority` is used
 * to sort the directives before their `compile` functions get called. Priority is defined as a
 * number. Directives with greater numerical `priority` are compiled first. Pre-link functions
 * are also run in priority order, but post-link functions are run in reverse order. The order
 * of directives with the same priority is undefined. The default priority is `0`.
 *
 * #### `terminal`
 * If set to true then the current `priority` will be the last set of directives
 * which will execute (any directives at the current priority will still execute
 * as the order of execution on same `priority` is undefined). Note that expressions
 * and other directives used in the directive's template will also be excluded from execution.
 *
 * #### `scope`
 * The scope property can be `false`, `true`, or an object:
 *
 * * **`false` (default):** No scope will be created for the directive. The directive will use its
 * parent's scope.
 *
 * * **`true`:** A new child scope that prototypically inherits from its parent will be created for
 * the directive's element. If multiple directives on the same element request a new scope,
 * only one new scope is created.
 *
 * * **`{...}` (an object hash):** A new "isolate" scope is created for the directive's element. The
 * 'isolate' scope differs from normal scope in that it does not prototypically inherit from its parent
 * scope. This is useful when creating reusable components, which should not accidentally read or modify
 * data in the parent scope.
 *
 * The 'isolate' scope object hash defines a set of local scope properties derived from attributes on the
 * directive's element. These local properties are useful for aliasing values for templates. The keys in
 * the object hash map to the name of the property on the isolate scope; the values define how the property
 * is bound to the parent scope, via matching attributes on the directive's element:
 *
 * * `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is
 *   always a string since DOM attributes are strings. If no `attr` name is specified then the
 *   attribute name is assumed to be the same as the local name. Given `<my-component
 *   my-attr="hello {{name}}">` and the isolate scope definition `scope: { localName:'@myAttr' }`,
 *   the directive's scope property `localName` will reflect the interpolated value of `hello
 *   {{name}}`. As the `name` attribute changes so will the `localName` property on the directive's
 *   scope. The `name` is read from the parent scope (not the directive's scope).
 *
 * * `=` or `=attr` - set up a bidirectional binding between a local scope property and an expression
 *   passed via the attribute `attr`. The expression is evaluated in the context of the parent scope.
 *   If no `attr` name is specified then the attribute name is assumed to be the same as the local
 *   name. Given `<my-component my-attr="parentModel">` and the isolate scope definition `scope: {
 *   localModel: '=myAttr' }`, the property `localModel` on the directive's scope will reflect the
 *   value of `parentModel` on the parent scope. Changes to `parentModel` will be reflected in
 *   `localModel` and vice versa. Optional attributes should be marked as such with a question mark:
 *   `=?` or `=?attr`. If the binding expression is non-assignable, or if the attribute isn't
 *   optional and doesn't exist, an exception ({@link error/$compile/nonassign `$compile:nonassign`})
 *   will be thrown upon discovering changes to the local value, since it will be impossible to sync
 *   them back to the parent scope. By default, the {@link ng.$rootScope.Scope#$watch `$watch`}
 *   method is used for tracking changes, and the equality check is based on object identity.
 *   However, if an object literal or an array literal is passed as the binding expression, the
 *   equality check is done by value (using the {@link angular.equals} function). It's also possible
 *   to watch the evaluated value shallowly with {@link ng.$rootScope.Scope#$watchCollection
 *   `$watchCollection`}: use `=*` or `=*attr` (`=*?` or `=*?attr` if the attribute is optional).
 *
  * * `<` or `<attr` - set up a one-way (one-directional) binding between a local scope property and an
 *   expression passed via the attribute `attr`. The expression is evaluated in the context of the
 *   parent scope. If no `attr` name is specified then the attribute name is assumed to be the same as the
 *   local name. You can also make the binding optional by adding `?`: `<?` or `<?attr`.
 *
 *   For example, given `<my-component my-attr="parentModel">` and directive definition of
 *   `scope: { localModel:'<myAttr' }`, then the isolated scope property `localModel` will reflect the
 *   value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected
 *   in `localModel`, but changes in `localModel` will not reflect in `parentModel`. There are however
 *   two caveats:
 *     1. one-way binding does not copy the value from the parent to the isolate scope, it simply
 *     sets the same value. That means if your bound value is an object, changes to its properties
 *     in the isolated scope will be reflected in the parent scope (because both reference the same object).
 *     2. one-way binding watches changes to the **identity** of the parent value. That means the
 *     {@link ng.$rootScope.Scope#$watch `$watch`} on the parent value only fires if the reference
 *     to the value has changed. In most cases, this should not be of concern, but can be important
 *     to know if you one-way bind to an object, and then replace that object in the isolated scope.
 *     If you now change a property of the object in your parent scope, the change will not be
 *     propagated to the isolated scope, because the identity of the object on the parent scope
 *     has not changed. Instead you must assign a new object.
 *
 *   One-way binding is useful if you do not plan to propagate changes to your isolated scope bindings
 *   back to the parent. However, it does not make this completely impossible.
 *
 * * `&` or `&attr` - provides a way to execute an expression in the context of the parent scope. If
 *   no `attr` name is specified then the attribute name is assumed to be the same as the local name.
 *   Given `<my-component my-attr="count = count + value">` and the isolate scope definition `scope: {
 *   localFn:'&myAttr' }`, the isolate scope property `localFn` will point to a function wrapper for
 *   the `count = count + value` expression. Often it's desirable to pass data from the isolated scope
 *   via an expression to the parent scope. This can be done by passing a map of local variable names
 *   and values into the expression wrapper fn. For example, if the expression is `increment(amount)`
 *   then we can specify the amount value by calling the `localFn` as `localFn({amount: 22})`.
 *
 * In general it's possible to apply more than one directive to one element, but there might be limitations
 * depending on the type of scope required by the directives. The following points will help explain these limitations.
 * For simplicity only two directives are taken into account, but it is also applicable for several directives:
 *
 * * **no scope** + **no scope** => Two directives which don't require their own scope will use their parent's scope
 * * **child scope** + **no scope** =>  Both directives will share one single child scope
 * * **child scope** + **child scope** =>  Both directives will share one single child scope
 * * **isolated scope** + **no scope** =>  The isolated directive will use it's own created isolated scope. The other directive will use
 * its parent's scope
 * * **isolated scope** + **child scope** =>  **Won't work!** Only one scope can be related to one element. Therefore these directives cannot
 * be applied to the same element.
 * * **isolated scope** + **isolated scope**  =>  **Won't work!** Only one scope can be related to one element. Therefore these directives
 * cannot be applied to the same element.
 *
 *
 * #### `bindToController`
 * This property is used to bind scope properties directly to the controller. It can be either
 * `true` or an object hash with the same format as the `scope` property.
 *
 * When an isolate scope is used for a directive (see above), `bindToController: true` will
 * allow a component to have its properties bound to the controller, rather than to scope.
 *
 * After the controller is instantiated, the initial values of the isolate scope bindings will be bound to the controller
 * properties. You can access these bindings once they have been initialized by providing a controller method called
 * `$onInit`, which is called after all the controllers on an element have been constructed and had their bindings
 * initialized.
 *
 * <div class="alert alert-warning">
 * **Deprecation warning:** although bindings for non-ES6 class controllers are currently
 * bound to `this` before the controller constructor is called, this use is now deprecated. Please place initialization
 * code that relies upon bindings inside a `$onInit` method on the controller, instead.
 * </div>
 *
 * It is also possible to set `bindToController` to an object hash with the same format as the `scope` property.
 * This will set up the scope bindings to the controller directly. Note that `scope` can still be used
 * to define which kind of scope is created. By default, no scope is created. Use `scope: {}` to create an isolate
 * scope (useful for component directives).
 *
 * If both `bindToController` and `scope` are defined and have object hashes, `bindToController` overrides `scope`.
 *
 *
 * #### `controller`
 * Controller constructor function. The controller is instantiated before the
 * pre-linking phase and can be accessed by other directives (see
 * `require` attribute). This allows the directives to communicate with each other and augment
 * each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:
 *
 * * `$scope` - Current scope associated with the element
 * * `$element` - Current element
 * * `$attrs` - Current attributes object for the element
 * * `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:
 *   `function([scope], cloneLinkingFn, futureParentElement, slotName)`:
 *    * `scope`: (optional) override the scope.
 *    * `cloneLinkingFn`: (optional) argument to create clones of the original transcluded content.
 *    * `futureParentElement` (optional):
 *        * defines the parent to which the `cloneLinkingFn` will add the cloned elements.
 *        * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.
 *        * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)
 *          and when the `cloneLinkingFn` is passed,
 *          as those elements need to created and cloned in a special way when they are defined outside their
 *          usual containers (e.g. like `<svg>`).
 *        * See also the `directive.templateNamespace` property.
 *    * `slotName`: (optional) the name of the slot to transclude. If falsy (e.g. `null`, `undefined` or `''`)
 *      then the default transclusion is provided.
 *    The `$transclude` function also has a method on it, `$transclude.isSlotFilled(slotName)`, which returns
 *    `true` if the specified slot contains content (i.e. one or more DOM nodes).
 *
 * #### `require`
 * Require another directive and inject its controller as the fourth argument to the linking function. The
 * `require` property can be a string, an array or an object:
 * * a **string** containing the name of the directive to pass to the linking function
 * * an **array** containing the names of directives to pass to the linking function. The argument passed to the
 * linking function will be an array of controllers in the same order as the names in the `require` property
 * * an **object** whose property values are the names of the directives to pass to the linking function. The argument
 * passed to the linking function will also be an object with matching keys, whose values will hold the corresponding
 * controllers.
 *
 * If the `require` property is an object and `bindToController` is truthy, then the required controllers are
 * bound to the controller using the keys of the `require` property. This binding occurs after all the controllers
 * have been constructed but before `$onInit` is called.
 * If the name of the required controller is the same as the local name (the key), the name can be
 * omitted. For example, `{parentDir: '^^'}` is equivalent to `{parentDir: '^^parentDir'}`.
 * See the {@link $compileProvider#component} helper for an example of how this can be used.
 * If no such required directive(s) can be found, or if the directive does not have a controller, then an error is
 * raised (unless no link function is specified and the required controllers are not being bound to the directive
 * controller, in which case error checking is skipped). The name can be prefixed with:
 *
 * * (no prefix) - Locate the required controller on the current element. Throw an error if not found.
 * * `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.
 * * `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.
 * * `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.
 * * `?^` - Attempt to locate the required controller by searching the element and its parents or pass
 *   `null` to the `link` fn if not found.
 * * `?^^` - Attempt to locate the required controller by searching the element's parents, or pass
 *   `null` to the `link` fn if not found.
 *
 *
 * #### `controllerAs`
 * Identifier name for a reference to the controller in the directive's scope.
 * This allows the controller to be referenced from the directive template. This is especially
 * useful when a directive is used as component, i.e. with an `isolate` scope. It's also possible
 * to use it in a directive without an `isolate` / `new` scope, but you need to be aware that the
 * `controllerAs` reference might overwrite a property that already exists on the parent scope.
 *
 *
 * #### `restrict`
 * String of subset of `EACM` which restricts the directive to a specific directive
 * declaration style. If omitted, the defaults (elements and attributes) are used.
 *
 * * `E` - Element name (default): `<my-directive></my-directive>`
 * * `A` - Attribute (default): `<div my-directive="exp"></div>`
 * * `C` - Class: `<div class="my-directive: exp;"></div>`
 * * `M` - Comment: `<!-- directive: my-directive exp -->`
 *
 *
 * #### `templateNamespace`
 * String representing the document type used by the markup in the template.
 * AngularJS needs this information as those elements need to be created and cloned
 * in a special way when they are defined outside their usual containers like `<svg>` and `<math>`.
 *
 * * `html` - All root nodes in the template are HTML. Root nodes may also be
 *   top-level elements such as `<svg>` or `<math>`.
 * * `svg` - The root nodes in the template are SVG elements (excluding `<math>`).
 * * `math` - The root nodes in the template are MathML elements (excluding `<svg>`).
 *
 * If no `templateNamespace` is specified, then the namespace is considered to be `html`.
 *
 * #### `template`
 * HTML markup that may:
 * * Replace the contents of the directive's element (default).
 * * Replace the directive's element itself (if `replace` is true - DEPRECATED).
 * * Wrap the contents of the directive's element (if `transclude` is true).
 *
 * Value may be:
 *
 * * A string. For example `<div red-on-hover>{{delete_str}}</div>`.
 * * A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`
 *   function api below) and returns a string value.
 *
 *
 * #### `templateUrl`
 * This is similar to `template` but the template is loaded from the specified URL, asynchronously.
 *
 * Because template loading is asynchronous the compiler will suspend compilation of directives on that element
 * for later when the template has been resolved.  In the meantime it will continue to compile and link
 * sibling and parent elements as though this element had not contained any directives.
 *
 * The compiler does not suspend the entire compilation to wait for templates to be loaded because this
 * would result in the whole app "stalling" until all templates are loaded asynchronously - even in the
 * case when only one deeply nested directive has `templateUrl`.
 *
 * Template loading is asynchronous even if the template has been preloaded into the {@link $templateCache}
 *
 * You can specify `templateUrl` as a string representing the URL or as a function which takes two
 * arguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns
 * a string value representing the url.  In either case, the template URL is passed through {@link
 * $sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.
 *
 *
 * #### `replace` ([*DEPRECATED*!], will be removed in next major release - i.e. v2.0)
 * specify what the template should replace. Defaults to `false`.
 *
 * * `true` - the template will replace the directive's element.
 * * `false` - the template will replace the contents of the directive's element.
 *
 * The replacement process migrates all of the attributes / classes from the old element to the new
 * one. See the {@link guide/directive#template-expanding-directive
 * Directives Guide} for an example.
 *
 * There are very few scenarios where element replacement is required for the application function,
 * the main one being reusable custom components that are used within SVG contexts
 * (because SVG doesn't work with custom elements in the DOM tree).
 *
 * #### `transclude`
 * Extract the contents of the element where the directive appears and make it available to the directive.
 * The contents are compiled and provided to the directive as a **transclusion function**. See the
 * {@link $compile#transclusion Transclusion} section below.
 *
 *
 * #### `compile`
 *
 * ```js
 *   function compile(tElement, tAttrs, transclude) { ... }
 * ```
 *
 * The compile function deals with transforming the template DOM. Since most directives do not do
 * template transformation, it is not used often. The compile function takes the following arguments:
 *
 *   * `tElement` - template element - The element where the directive has been declared. It is
 *     safe to do template transformation on the element and child elements only.
 *
 *   * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared
 *     between all directive compile functions.
 *
 *   * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`
 *
 * <div class="alert alert-warning">
 * **Note:** The template instance and the link instance may be different objects if the template has
 * been cloned. For this reason it is **not** safe to do anything other than DOM transformations that
 * apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration
 * should be done in a linking function rather than in a compile function.
 * </div>

 * <div class="alert alert-warning">
 * **Note:** The compile function cannot handle directives that recursively use themselves in their
 * own templates or compile functions. Compiling these directives results in an infinite loop and
 * stack overflow errors.
 *
 * This can be avoided by manually using $compile in the postLink function to imperatively compile
 * a directive's template instead of relying on automatic template compilation via `template` or
 * `templateUrl` declaration or manual compilation inside the compile function.
 * </div>
 *
 * <div class="alert alert-danger">
 * **Note:** The `transclude` function that is passed to the compile function is deprecated, as it
 *   e.g. does not know about the right outer scope. Please use the transclude function that is passed
 *   to the link function instead.
 * </div>

 * A compile function can have a return value which can be either a function or an object.
 *
 * * returning a (post-link) function - is equivalent to registering the linking function via the
 *   `link` property of the config object when the compile function is empty.
 *
 * * returning an object with function(s) registered via `pre` and `post` properties - allows you to
 *   control when a linking function should be called during the linking phase. See info about
 *   pre-linking and post-linking functions below.
 *
 *
 * #### `link`
 * This property is used only if the `compile` property is not defined.
 *
 * ```js
 *   function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }
 * ```
 *
 * The link function is responsible for registering DOM listeners as well as updating the DOM. It is
 * executed after the template has been cloned. This is where most of the directive logic will be
 * put.
 *
 *   * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the
 *     directive for registering {@link ng.$rootScope.Scope#$watch watches}.
 *
 *   * `iElement` - instance element - The element where the directive is to be used. It is safe to
 *     manipulate the children of the element only in `postLink` function since the children have
 *     already been linked.
 *
 *   * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared
 *     between all directive linking functions.
 *
 *   * `controller` - the directive's required controller instance(s) - Instances are shared
 *     among all directives, which allows the directives to use the controllers as a communication
 *     channel. The exact value depends on the directive's `require` property:
 *       * no controller(s) required: the directive's own controller, or `undefined` if it doesn't have one
 *       * `string`: the controller instance
 *       * `array`: array of controller instances
 *
 *     If a required controller cannot be found, and it is optional, the instance is `null`,
 *     otherwise the {@link error:$compile:ctreq Missing Required Controller} error is thrown.
 *
 *     Note that you can also require the directive's own controller - it will be made available like
 *     any other controller.
 *
 *   * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.
 *     This is the same as the `$transclude` parameter of directive controllers,
 *     see {@link ng.$compile#-controller- the controller section for details}.
 *     `function([scope], cloneLinkingFn, futureParentElement)`.
 *
 * #### Pre-linking function
 *
 * Executed before the child elements are linked. Not safe to do DOM transformation since the
 * compiler linking function will fail to locate the correct elements for linking.
 *
 * #### Post-linking function
 *
 * Executed after the child elements are linked.
 *
 * Note that child elements that contain `templateUrl` directives will not have been compiled
 * and linked since they are waiting for their template to load asynchronously and their own
 * compilation and linking has been suspended until that occurs.
 *
 * It is safe to do DOM transformation in the post-linking function on elements that are not waiting
 * for their async templates to be resolved.
 *
 *
 * ### Transclusion
 *
 * Transclusion is the process of extracting a collection of DOM elements from one part of the DOM and
 * copying them to another part of the DOM, while maintaining their connection to the original AngularJS
 * scope from where they were taken.
 *
 * Transclusion is used (often with {@link ngTransclude}) to insert the
 * original contents of a directive's element into a specified place in the template of the directive.
 * The benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded
 * content has access to the properties on the scope from which it was taken, even if the directive
 * has isolated scope.
 * See the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.
 *
 * This makes it possible for the widget to have private state for its template, while the transcluded
 * content has access to its originating scope.
 *
 * <div class="alert alert-warning">
 * **Note:** When testing an element transclude directive you must not place the directive at the root of the
 * DOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives
 * Testing Transclusion Directives}.
 * </div>
 *
 * There are three kinds of transclusion depending upon whether you want to transclude just the contents of the
 * directive's element, the entire element or multiple parts of the element contents:
 *
 * * `true` - transclude the content (i.e. the child nodes) of the directive's element.
 * * `'element'` - transclude the whole of the directive's element including any directives on this
 *   element that defined at a lower priority than this directive. When used, the `template`
 *   property is ignored.
 * * **`{...}` (an object hash):** - map elements of the content onto transclusion "slots" in the template.
 *
 * **Mult-slot transclusion** is declared by providing an object for the `transclude` property.
 *
 * This object is a map where the keys are the name of the slot to fill and the value is an element selector
 * used to match the HTML to the slot. The element selector should be in normalized form (e.g. `myElement`)
 * and will match the standard element variants (e.g. `my-element`, `my:element`, `data-my-element`, etc).
 *
 * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}
 *
 * If the element selector is prefixed with a `?` then that slot is optional.
 *
 * For example, the transclude object `{ slotA: '?myCustomElement' }` maps `<my-custom-element>` elements to
 * the `slotA` slot, which can be accessed via the `$transclude` function or via the {@link ngTransclude} directive.
 *
 * Slots that are not marked as optional (`?`) will trigger a compile time error if there are no matching elements
 * in the transclude content. If you wish to know if an optional slot was filled with content, then you can call
 * `$transclude.isSlotFilled(slotName)` on the transclude function passed to the directive's link function and
 * injectable into the directive's controller.
 *
 *
 * #### Transclusion Functions
 *
 * When a directive requests transclusion, the compiler extracts its contents and provides a **transclusion
 * function** to the directive's `link` function and `controller`. This transclusion function is a special
 * **linking function** that will return the compiled contents linked to a new transclusion scope.
 *
 * <div class="alert alert-info">
 * If you are just using {@link ngTransclude} then you don't need to worry about this function, since
 * ngTransclude will deal with it for us.
 * </div>
 *
 * If you want to manually control the insertion and removal of the transcluded content in your directive
 * then you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery
 * object that contains the compiled DOM, which is linked to the correct transclusion scope.
 *
 * When you call a transclusion function you can pass in a **clone attach function**. This function accepts
 * two parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded
 * content and the `scope` is the newly created transclusion scope, which the clone will be linked to.
 *
 * <div class="alert alert-info">
 * **Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a transclude function
 * since you then get a fresh clone of the original DOM and also have access to the new transclusion scope.
 * </div>
 *
 * It is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone
 * attach function**:
 *
 * ```js
 * var transcludedContent, transclusionScope;
 *
 * $transclude(function(clone, scope) {
 *   element.append(clone);
 *   transcludedContent = clone;
 *   transclusionScope = scope;
 * });
 * ```
 *
 * Later, if you want to remove the transcluded content from your DOM then you should also destroy the
 * associated transclusion scope:
 *
 * ```js
 * transcludedContent.remove();
 * transclusionScope.$destroy();
 * ```
 *
 * <div class="alert alert-info">
 * **Best Practice**: if you intend to add and remove transcluded content manually in your directive
 * (by calling the transclude function to get the DOM and calling `element.remove()` to remove it),
 * then you are also responsible for calling `$destroy` on the transclusion scope.
 * </div>
 *
 * The built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}
 * automatically destroy their transcluded clones as necessary so you do not need to worry about this if
 * you are simply using {@link ngTransclude} to inject the transclusion into your directive.
 *
 *
 * #### Transclusion Scopes
 *
 * When you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion
 * scope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed
 * when the directive's scope gets destroyed) but it inherits the properties of the scope from which it
 * was taken.
 *
 * For example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look
 * like this:
 *
 * ```html
 * <div ng-app>
 *   <div isolate>
 *     <div transclusion>
 *     </div>
 *   </div>
 * </div>
 * ```
 *
 * The `$parent` scope hierarchy will look like this:
 *
   ```
   - $rootScope
     - isolate
       - transclusion
   ```
 *
 * but the scopes will inherit prototypically from different scopes to their `$parent`.
 *
   ```
   - $rootScope
     - transclusion
   - isolate
   ```
 *
 *
 * ### Attributes
 *
 * The {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the
 * `link()` or `compile()` functions. It has a variety of uses.
 *
 * * *Accessing normalized attribute names:* Directives like 'ngBind' can be expressed in many ways:
 *   'ng:bind', `data-ng-bind`, or 'x-ng-bind'. The attributes object allows for normalized access
 *   to the attributes.
 *
 * * *Directive inter-communication:* All directives share the same instance of the attributes
 *   object which allows the directives to use the attributes object as inter directive
 *   communication.
 *
 * * *Supports interpolation:* Interpolation attributes are assigned to the attribute object
 *   allowing other directives to read the interpolated value.
 *
 * * *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes
 *   that contain interpolation (e.g. `src="{{bar}}"`). Not only is this very efficient but it's also
 *   the only way to easily get the actual value because during the linking phase the interpolation
 *   hasn't been evaluated yet and so the value is at this time set to `undefined`.
 *
 * ```js
 * function linkingFn(scope, elm, attrs, ctrl) {
 *   // get the attribute value
 *   console.log(attrs.ngModel);
 *
 *   // change the attribute
 *   attrs.$set('ngModel', 'new value');
 *
 *   // observe changes to interpolated attribute
 *   attrs.$observe('ngModel', function(value) {
 *     console.log('ngModel has changed value to ' + value);
 *   });
 * }
 * ```
 *
 * ## Example
 *
 * <div class="alert alert-warning">
 * **Note**: Typically directives are registered with `module.directive`. The example below is
 * to illustrate how `$compile` works.
 * </div>
 *
 <example module="compileExample" name="compile">
   <file name="index.html">
    <script>
      angular.module('compileExample', [], function($compileProvider) {
        // configure new 'compile' directive by passing a directive
        // factory function. The factory function injects the '$compile'
        $compileProvider.directive('compile', function($compile) {
          // directive factory creates a link function
          return function(scope, element, attrs) {
            scope.$watch(
              function(scope) {
                 // watch the 'compile' expression for changes
                return scope.$eval(attrs.compile);
              },
              function(value) {
                // when the 'compile' expression changes
                // assign it into the current DOM
                element.html(value);

                // compile the new DOM and link it to the current
                // scope.
                // NOTE: we only compile .childNodes so that
                // we don't get into infinite loop compiling ourselves
                $compile(element.contents())(scope);
              }
            );
          };
        });
      })
      .controller('GreeterController', ['$scope', function($scope) {
        $scope.name = 'Angular';
        $scope.html = 'Hello {{name}}';
      }]);
    </script>
    <div ng-controller="GreeterController">
      <input ng-model="name"> <br/>
      <textarea ng-model="html"></textarea> <br/>
      <div compile="html"></div>
    </div>
   </file>
   <file name="protractor.js" type="protractor">
     it('should auto compile', function() {
       var textarea = $('textarea');
       var output = $('div[compile]');
       // The initial state reads 'Hello Angular'.
       expect(output.getText()).toBe('Hello Angular');
       textarea.clear();
       textarea.sendKeys('{{name}}!');
       expect(output.getText()).toBe('Angular!');
     });
   </file>
 </example>

 *
 *
 * @param {string|DOMElement} element Element or HTML string to compile into a template function.
 * @param {function(angular.Scope, cloneAttachFn=)} transclude function available to directives - DEPRECATED.
 *
 * <div class="alert alert-danger">
 * **Note:** Passing a `transclude` function to the $compile function is deprecated, as it
 *   e.g. will not use the right outer scope. Please pass the transclude function as a
 *   `parentBoundTranscludeFn` to the link function instead.
 * </div>
 *
 * @param {number} maxPriority only apply directives lower than given priority (Only effects the
 *                 root element(s), not their children)
 * @returns {function(scope, cloneAttachFn=, options=)} a link function which is used to bind template
 * (a DOM element/tree) to a scope. Where:
 *
 *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.
 *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the
 *  `template` and call the `cloneAttachFn` function allowing the caller to attach the
 *  cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is
 *  called as: <br/> `cloneAttachFn(clonedElement, scope)` where:
 *
 *      * `clonedElement` - is a clone of the original `element` passed into the compiler.
 *      * `scope` - is the current scope with which the linking function is working with.
 *
 *  * `options` - An optional object hash with linking options. If `options` is provided, then the following
 *  keys may be used to control linking behavior:
 *
 *      * `parentBoundTranscludeFn` - the transclude function made available to
 *        directives; if given, it will be passed through to the link functions of
 *        directives found in `element` during compilation.
 *      * `transcludeControllers` - an object hash with keys that map controller names
 *        to a hash with the key `instance`, which maps to the controller instance;
 *        if given, it will make the controllers available to directives on the compileNode:
 *        ```
 *        {
 *          parent: {
 *            instance: parentControllerInstance
 *          }
 *        }
 *        ```
 *      * `futureParentElement` - defines the parent to which the `cloneAttachFn` will add
 *        the cloned elements; only needed for transcludes that are allowed to contain non html
 *        elements (e.g. SVG elements). See also the directive.controller property.
 *
 * Calling the linking function returns the element of the template. It is either the original
 * element passed in, or the clone of the element if the `cloneAttachFn` is provided.
 *
 * After linking the view is not updated until after a call to $digest which typically is done by
 * Angular automatically.
 *
 * If you need access to the bound view, there are two ways to do it:
 *
 * - If you are not asking the linking function to clone the template, create the DOM element(s)
 *   before you send them to the compiler and keep this reference around.
 *   ```js
 *     var element = $compile('<p>{{total}}</p>')(scope);
 *   ```
 *
 * - if on the other hand, you need the element to be cloned, the view reference from the original
 *   example would not point to the clone, but rather to the original template that was cloned. In
 *   this case, you can access the clone via the cloneAttachFn:
 *   ```js
 *     var templateElement = angular.element('<p>{{total}}</p>'),
 *         scope = ....;
 *
 *     var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {
 *       //attach the clone to DOM document at the right place
 *     });
 *
 *     //now we have reference to the cloned DOM via `clonedElement`
 *   ```
 *
 *
 * For information on how the compiler works, see the
 * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.
 *
 * @knownIssue
 *
 * ### Double Compilation
 *
   Double compilation occurs when an already compiled part of the DOM gets
   compiled again. This is an undesired effect and can lead to misbehaving directives, performance issues,
   and memory leaks. Refer to the Compiler Guide {@link guide/compiler#double-compilation-and-how-to-avoid-it
   section on double compilation} for an in-depth explanation and ways to avoid it.
 *
 */

var $compileMinErr = minErr('$compile');

function UNINITIALIZED_VALUE() {}
var _UNINITIALIZED_VALUE = new UNINITIALIZED_VALUE();

/**
 * @ngdoc provider
 * @name $compileProvider
 *
 * @description
 */
$CompileProvider.$inject = ['$provide', '$$sanitizeUriProvider'];
/** @this */
function $CompileProvider($provide, $$sanitizeUriProvider) {
  var hasDirectives = {},
      Suffix = 'Directive',
      COMMENT_DIRECTIVE_REGEXP = /^\s*directive:\s*([\w-]+)\s+(.*)$/,
      CLASS_DIRECTIVE_REGEXP = /(([\w-]+)(?::([^;]+))?;?)/,
      ALL_OR_NOTHING_ATTRS = makeMap('ngSrc,ngSrcset,src,srcset'),
      REQUIRE_PREFIX_REGEXP = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/;

  // Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes
  // The assumption is that future DOM event attribute names will begin with
  // 'on' and be composed of only English letters.
  var EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/;
  var bindingCache = createMap();

  function parseIsolateBindings(scope, directiveName, isController) {
    var LOCAL_REGEXP = /^\s*([@&<]|=(\*?))(\??)\s*([\w$]*)\s*$/;

    var bindings = createMap();

    forEach(scope, function(definition, scopeName) {
      if (definition in bindingCache) {
        bindings[scopeName] = bindingCache[definition];
        return;
      }
      var match = definition.match(LOCAL_REGEXP);

      if (!match) {
        throw $compileMinErr('iscp',
            'Invalid {3} for directive \'{0}\'.' +
            ' Definition: {... {1}: \'{2}\' ...}',
            directiveName, scopeName, definition,
            (isController ? 'controller bindings definition' :
            'isolate scope definition'));
      }

      bindings[scopeName] = {
        mode: match[1][0],
        collection: match[2] === '*',
        optional: match[3] === '?',
        attrName: match[4] || scopeName
      };
      if (match[4]) {
        bindingCache[definition] = bindings[scopeName];
      }
    });

    return bindings;
  }

  function parseDirectiveBindings(directive, directiveName) {
    var bindings = {
      isolateScope: null,
      bindToController: null
    };
    if (isObject(directive.scope)) {
      if (directive.bindToController === true) {
        bindings.bindToController = parseIsolateBindings(directive.scope,
                                                         directiveName, true);
        bindings.isolateScope = {};
      } else {
        bindings.isolateScope = parseIsolateBindings(directive.scope,
                                                     directiveName, false);
      }
    }
    if (isObject(directive.bindToController)) {
      bindings.bindToController =
          parseIsolateBindings(directive.bindToController, directiveName, true);
    }
    if (bindings.bindToController && !directive.controller) {
      // There is no controller
      throw $compileMinErr('noctrl',
            'Cannot bind to controller without directive \'{0}\'s controller.',
            directiveName);
    }
    return bindings;
  }

  function assertValidDirectiveName(name) {
    var letter = name.charAt(0);
    if (!letter || letter !== lowercase(letter)) {
      throw $compileMinErr('baddir', 'Directive/Component name \'{0}\' is invalid. The first character must be a lowercase letter', name);
    }
    if (name !== name.trim()) {
      throw $compileMinErr('baddir',
            'Directive/Component name \'{0}\' is invalid. The name should not contain leading or trailing whitespaces',
            name);
    }
  }

  function getDirectiveRequire(directive) {
    var require = directive.require || (directive.controller && directive.name);

    if (!isArray(require) && isObject(require)) {
      forEach(require, function(value, key) {
        var match = value.match(REQUIRE_PREFIX_REGEXP);
        var name = value.substring(match[0].length);
        if (!name) require[key] = match[0] + key;
      });
    }

    return require;
  }

  function getDirectiveRestrict(restrict, name) {
    if (restrict && !(isString(restrict) && /[EACM]/.test(restrict))) {
      throw $compileMinErr('badrestrict',
          'Restrict property \'{0}\' of directive \'{1}\' is invalid',
          restrict,
          name);
    }

    return restrict || 'EA';
  }

  /**
   * @ngdoc method
   * @name $compileProvider#directive
   * @kind function
   *
   * @description
   * Register a new directive with the compiler.
   *
   * @param {string|Object} name Name of the directive in camel-case (i.e. <code>ngBind</code> which
   *    will match as <code>ng-bind</code>), or an object map of directives where the keys are the
   *    names and the values are the factories.
   * @param {Function|Array} directiveFactory An injectable directive factory function. See the
   *    {@link guide/directive directive guide} and the {@link $compile compile API} for more info.
   * @returns {ng.$compileProvider} Self for chaining.
   */
  this.directive = function registerDirective(name, directiveFactory) {
    assertArg(name, 'name');
    assertNotHasOwnProperty(name, 'directive');
    if (isString(name)) {
      assertValidDirectiveName(name);
      assertArg(directiveFactory, 'directiveFactory');
      if (!hasDirectives.hasOwnProperty(name)) {
        hasDirectives[name] = [];
        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',
          function($injector, $exceptionHandler) {
            var directives = [];
            forEach(hasDirectives[name], function(directiveFactory, index) {
              try {
                var directive = $injector.invoke(directiveFactory);
                if (isFunction(directive)) {
                  directive = { compile: valueFn(directive) };
                } else if (!directive.compile && directive.link) {
                  directive.compile = valueFn(directive.link);
                }
                directive.priority = directive.priority || 0;
                directive.index = index;
                directive.name = directive.name || name;
                directive.require = getDirectiveRequire(directive);
                directive.restrict = getDirectiveRestrict(directive.restrict, name);
                directive.$$moduleName = directiveFactory.$$moduleName;
                directives.push(directive);
              } catch (e) {
                $exceptionHandler(e);
              }
            });
            return directives;
          }]);
      }
      hasDirectives[name].push(directiveFactory);
    } else {
      forEach(name, reverseParams(registerDirective));
    }
    return this;
  };

  /**
   * @ngdoc method
   * @name $compileProvider#component
   * @module ng
   * @param {string} name Name of the component in camelCase (i.e. `myComp` which will match `<my-comp>`)
   * @param {Object} options Component definition object (a simplified
   *    {@link ng.$compile#directive-definition-object directive definition object}),
   *    with the following properties (all optional):
   *
   *    - `controller` – `{(string|function()=}` – controller constructor function that should be
   *      associated with newly created scope or the name of a {@link ng.$compile#-controller-
   *      registered controller} if passed as a string. An empty `noop` function by default.
   *    - `controllerAs` – `{string=}` – identifier name for to reference the controller in the component's scope.
   *      If present, the controller will be published to scope under the `controllerAs` name.
   *      If not present, this will default to be `$ctrl`.
   *    - `template` – `{string=|function()=}` – html template as a string or a function that
   *      returns an html template as a string which should be used as the contents of this component.
   *      Empty string by default.
   *
   *      If `template` is a function, then it is {@link auto.$injector#invoke injected} with
   *      the following locals:
   *
   *      - `$element` - Current element
   *      - `$attrs` - Current attributes object for the element
   *
   *    - `templateUrl` – `{string=|function()=}` – path or function that returns a path to an html
   *      template that should be used  as the contents of this component.
   *
   *      If `templateUrl` is a function, then it is {@link auto.$injector#invoke injected} with
   *      the following locals:
   *
   *      - `$element` - Current element
   *      - `$attrs` - Current attributes object for the element
   *
   *    - `bindings` – `{object=}` – defines bindings between DOM attributes and component properties.
   *      Component properties are always bound to the component controller and not to the scope.
   *      See {@link ng.$compile#-bindtocontroller- `bindToController`}.
   *    - `transclude` – `{boolean=}` – whether {@link $compile#transclusion content transclusion} is enabled.
   *      Disabled by default.
   *    - `require` - `{Object<string, string>=}` - requires the controllers of other directives and binds them to
   *      this component's controller. The object keys specify the property names under which the required
   *      controllers (object values) will be bound. See {@link ng.$compile#-require- `require`}.
   *    - `$...` – additional properties to attach to the directive factory function and the controller
   *      constructor function. (This is used by the component router to annotate)
   *
   * @returns {ng.$compileProvider} the compile provider itself, for chaining of function calls.
   * @description
   * Register a **component definition** with the compiler. This is a shorthand for registering a special
   * type of directive, which represents a self-contained UI component in your application. Such components
   * are always isolated (i.e. `scope: {}`) and are always restricted to elements (i.e. `restrict: 'E'`).
   *
   * Component definitions are very simple and do not require as much configuration as defining general
   * directives. Component definitions usually consist only of a template and a controller backing it.
   *
   * In order to make the definition easier, components enforce best practices like use of `controllerAs`,
   * `bindToController`. They always have **isolate scope** and are restricted to elements.
   *
   * Here are a few examples of how you would usually define components:
   *
   * ```js
   *   var myMod = angular.module(...);
   *   myMod.component('myComp', {
   *     template: '<div>My name is {{$ctrl.name}}</div>',
   *     controller: function() {
   *       this.name = 'shahar';
   *     }
   *   });
   *
   *   myMod.component('myComp', {
   *     template: '<div>My name is {{$ctrl.name}}</div>',
   *     bindings: {name: '@'}
   *   });
   *
   *   myMod.component('myComp', {
   *     templateUrl: 'views/my-comp.html',
   *     controller: 'MyCtrl',
   *     controllerAs: 'ctrl',
   *     bindings: {name: '@'}
   *   });
   *
   * ```
   * For more examples, and an in-depth guide, see the {@link guide/component component guide}.
   *
   * <br />
   * See also {@link ng.$compileProvider#directive $compileProvider.directive()}.
   */
  this.component = function registerComponent(name, options) {
    var controller = options.controller || function() {};

    function factory($injector) {
      function makeInjectable(fn) {
        if (isFunction(fn) || isArray(fn)) {
          return /** @this */ function(tElement, tAttrs) {
            return $injector.invoke(fn, this, {$element: tElement, $attrs: tAttrs});
          };
        } else {
          return fn;
        }
      }

      var template = (!options.template && !options.templateUrl ? '' : options.template);
      var ddo = {
        controller: controller,
        controllerAs: identifierForController(options.controller) || options.controllerAs || '$ctrl',
        template: makeInjectable(template),
        templateUrl: makeInjectable(options.templateUrl),
        transclude: options.transclude,
        scope: {},
        bindToController: options.bindings || {},
        restrict: 'E',
        require: options.require
      };

      // Copy annotations (starting with $) over to the DDO
      forEach(options, function(val, key) {
        if (key.charAt(0) === '$') ddo[key] = val;
      });

      return ddo;
    }

    // TODO(pete) remove the following `forEach` before we release 1.6.0
    // The component-router@0.2.0 looks for the annotations on the controller constructor
    // Nothing in Angular looks for annotations on the factory function but we can't remove
    // it from 1.5.x yet.

    // Copy any annotation properties (starting with $) over to the factory and controller constructor functions
    // These could be used by libraries such as the new component router
    forEach(options, function(val, key) {
      if (key.charAt(0) === '$') {
        factory[key] = val;
        // Don't try to copy over annotations to named controller
        if (isFunction(controller)) controller[key] = val;
      }
    });

    factory.$inject = ['$injector'];

    return this.directive(name, factory);
  };


  /**
   * @ngdoc method
   * @name $compileProvider#aHrefSanitizationWhitelist
   * @kind function
   *
   * @description
   * Retrieves or overrides the default regular expression that is used for whitelisting of safe
   * urls during a[href] sanitization.
   *
   * The sanitization is a security measure aimed at preventing XSS attacks via html links.
   *
   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into
   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`
   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
   *
   * @param {RegExp=} regexp New regexp to whitelist urls with.
   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
   *    chaining otherwise.
   */
  this.aHrefSanitizationWhitelist = function(regexp) {
    if (isDefined(regexp)) {
      $$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp);
      return this;
    } else {
      return $$sanitizeUriProvider.aHrefSanitizationWhitelist();
    }
  };


  /**
   * @ngdoc method
   * @name $compileProvider#imgSrcSanitizationWhitelist
   * @kind function
   *
   * @description
   * Retrieves or overrides the default regular expression that is used for whitelisting of safe
   * urls during img[src] sanitization.
   *
   * The sanitization is a security measure aimed at prevent XSS attacks via html links.
   *
   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into
   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`
   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
   *
   * @param {RegExp=} regexp New regexp to whitelist urls with.
   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
   *    chaining otherwise.
   */
  this.imgSrcSanitizationWhitelist = function(regexp) {
    if (isDefined(regexp)) {
      $$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp);
      return this;
    } else {
      return $$sanitizeUriProvider.imgSrcSanitizationWhitelist();
    }
  };

  /**
   * @ngdoc method
   * @name  $compileProvider#debugInfoEnabled
   *
   * @param {boolean=} enabled update the debugInfoEnabled state if provided, otherwise just return the
   * current debugInfoEnabled state
   * @returns {*} current value if used as getter or itself (chaining) if used as setter
   *
   * @kind function
   *
   * @description
   * Call this method to enable/disable various debug runtime information in the compiler such as adding
   * binding information and a reference to the current scope on to DOM elements.
   * If enabled, the compiler will add the following to DOM elements that have been bound to the scope
   * * `ng-binding` CSS class
   * * `$binding` data property containing an array of the binding expressions
   *
   * You may want to disable this in production for a significant performance boost. See
   * {@link guide/production#disabling-debug-data Disabling Debug Data} for more.
   *
   * The default value is true.
   */
  var debugInfoEnabled = true;
  this.debugInfoEnabled = function(enabled) {
    if (isDefined(enabled)) {
      debugInfoEnabled = enabled;
      return this;
    }
    return debugInfoEnabled;
  };

  /**
   * @ngdoc method
   * @name  $compileProvider#preAssignBindingsEnabled
   *
   * @param {boolean=} enabled update the preAssignBindingsEnabled state if provided, otherwise just return the
   * current preAssignBindingsEnabled state
   * @returns {*} current value if used as getter or itself (chaining) if used as setter
   *
   * @kind function
   *
   * @description
   * Call this method to enable/disable whether directive controllers are assigned bindings before
   * calling the controller's constructor.
   * If enabled (true), the compiler assigns the value of each of the bindings to the
   * properties of the controller object before the constructor of this object is called.
   *
   * If disabled (false), the compiler calls the constructor first before assigning bindings.
   *
   * The default value is true in Angular 1.5.x but will switch to false in Angular 1.6.x.
   */
  var preAssignBindingsEnabled = true;
  this.preAssignBindingsEnabled = function(enabled) {
    if (isDefined(enabled)) {
      preAssignBindingsEnabled = enabled;
      return this;
    }
    return preAssignBindingsEnabled;
  };


  var TTL = 10;
  /**
   * @ngdoc method
   * @name $compileProvider#onChangesTtl
   * @description
   *
   * Sets the number of times `$onChanges` hooks can trigger new changes before giving up and
   * assuming that the model is unstable.
   *
   * The current default is 10 iterations.
   *
   * In complex applications it's possible that dependencies between `$onChanges` hooks and bindings will result
   * in several iterations of calls to these hooks. However if an application needs more than the default 10
   * iterations to stabilize then you should investigate what is causing the model to continuously change during
   * the `$onChanges` hook execution.
   *
   * Increasing the TTL could have performance implications, so you should not change it without proper justification.
   *
   * @param {number} limit The number of `$onChanges` hook iterations.
   * @returns {number|object} the current limit (or `this` if called as a setter for chaining)
   */
  this.onChangesTtl = function(value) {
    if (arguments.length) {
      TTL = value;
      return this;
    }
    return TTL;
  };

  var commentDirectivesEnabledConfig = true;
  /**
   * @ngdoc method
   * @name $compileProvider#commentDirectivesEnabled
   * @description
   *
   * It indicates to the compiler
   * whether or not directives on comments should be compiled.
   * Defaults to `true`.
   *
   * Calling this function with false disables the compilation of directives
   * on comments for the whole application.
   * This results in a compilation performance gain,
   * as the compiler doesn't have to check comments when looking for directives.
   * This should however only be used if you are sure that no comment directives are used in
   * the application (including any 3rd party directives).
   *
   * @param {boolean} enabled `false` if the compiler may ignore directives on comments
   * @returns {boolean|object} the current value (or `this` if called as a setter for chaining)
   */
  this.commentDirectivesEnabled = function(value) {
    if (arguments.length) {
      commentDirectivesEnabledConfig = value;
      return this;
    }
    return commentDirectivesEnabledConfig;
  };


  var cssClassDirectivesEnabledConfig = true;
  /**
   * @ngdoc method
   * @name $compileProvider#cssClassDirectivesEnabled
   * @description
   *
   * It indicates to the compiler
   * whether or not directives on element classes should be compiled.
   * Defaults to `true`.
   *
   * Calling this function with false disables the compilation of directives
   * on element classes for the whole application.
   * This results in a compilation performance gain,
   * as the compiler doesn't have to check element classes when looking for directives.
   * This should however only be used if you are sure that no class directives are used in
   * the application (including any 3rd party directives).
   *
   * @param {boolean} enabled `false` if the compiler may ignore directives on element classes
   * @returns {boolean|object} the current value (or `this` if called as a setter for chaining)
   */
  this.cssClassDirectivesEnabled = function(value) {
    if (arguments.length) {
      cssClassDirectivesEnabledConfig = value;
      return this;
    }
    return cssClassDirectivesEnabledConfig;
  };

  this.$get = [
            '$injector', '$interpolate', '$exceptionHandler', '$templateRequest', '$parse',
            '$controller', '$rootScope', '$sce', '$animate', '$$sanitizeUri',
    function($injector,   $interpolate,   $exceptionHandler,   $templateRequest,   $parse,
             $controller,   $rootScope,   $sce,   $animate,   $$sanitizeUri) {

    var SIMPLE_ATTR_NAME = /^\w/;
    var specialAttrHolder = window.document.createElement('div');


    var commentDirectivesEnabled = commentDirectivesEnabledConfig;
    var cssClassDirectivesEnabled = cssClassDirectivesEnabledConfig;


    var onChangesTtl = TTL;
    // The onChanges hooks should all be run together in a single digest
    // When changes occur, the call to trigger their hooks will be added to this queue
    var onChangesQueue;

    // This function is called in a $$postDigest to trigger all the onChanges hooks in a single digest
    function flushOnChangesQueue() {
      try {
        if (!(--onChangesTtl)) {
          // We have hit the TTL limit so reset everything
          onChangesQueue = undefined;
          throw $compileMinErr('infchng', '{0} $onChanges() iterations reached. Aborting!\n', TTL);
        }
        // We must run this hook in an apply since the $$postDigest runs outside apply
        $rootScope.$apply(function() {
          var errors = [];
          for (var i = 0, ii = onChangesQueue.length; i < ii; ++i) {
            try {
              onChangesQueue[i]();
            } catch (e) {
              errors.push(e);
            }
          }
          // Reset the queue to trigger a new schedule next time there is a change
          onChangesQueue = undefined;
          if (errors.length) {
            throw errors;
          }
        });
      } finally {
        onChangesTtl++;
      }
    }


    function Attributes(element, attributesToCopy) {
      if (attributesToCopy) {
        var keys = Object.keys(attributesToCopy);
        var i, l, key;

        for (i = 0, l = keys.length; i < l; i++) {
          key = keys[i];
          this[key] = attributesToCopy[key];
        }
      } else {
        this.$attr = {};
      }

      this.$$element = element;
    }

    Attributes.prototype = {
      /**
       * @ngdoc method
       * @name $compile.directive.Attributes#$normalize
       * @kind function
       *
       * @description
       * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or
       * `data-`) to its normalized, camelCase form.
       *
       * Also there is special case for Moz prefix starting with upper case letter.
       *
       * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}
       *
       * @param {string} name Name to normalize
       */
      $normalize: directiveNormalize,


      /**
       * @ngdoc method
       * @name $compile.directive.Attributes#$addClass
       * @kind function
       *
       * @description
       * Adds the CSS class value specified by the classVal parameter to the element. If animations
       * are enabled then an animation will be triggered for the class addition.
       *
       * @param {string} classVal The className value that will be added to the element
       */
      $addClass: function(classVal) {
        if (classVal && classVal.length > 0) {
          $animate.addClass(this.$$element, classVal);
        }
      },

      /**
       * @ngdoc method
       * @name $compile.directive.Attributes#$removeClass
       * @kind function
       *
       * @description
       * Removes the CSS class value specified by the classVal parameter from the element. If
       * animations are enabled then an animation will be triggered for the class removal.
       *
       * @param {string} classVal The className value that will be removed from the element
       */
      $removeClass: function(classVal) {
        if (classVal && classVal.length > 0) {
          $animate.removeClass(this.$$element, classVal);
        }
      },

      /**
       * @ngdoc method
       * @name $compile.directive.Attributes#$updateClass
       * @kind function
       *
       * @description
       * Adds and removes the appropriate CSS class values to the element based on the difference
       * between the new and old CSS class values (specified as newClasses and oldClasses).
       *
       * @param {string} newClasses The current CSS className value
       * @param {string} oldClasses The former CSS className value
       */
      $updateClass: function(newClasses, oldClasses) {
        var toAdd = tokenDifference(newClasses, oldClasses);
        if (toAdd && toAdd.length) {
          $animate.addClass(this.$$element, toAdd);
        }

        var toRemove = tokenDifference(oldClasses, newClasses);
        if (toRemove && toRemove.length) {
          $animate.removeClass(this.$$element, toRemove);
        }
      },

      /**
       * Set a normalized attribute on the element in a way such that all directives
       * can share the attribute. This function properly handles boolean attributes.
       * @param {string} key Normalized key. (ie ngAttribute)
       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.
       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.
       *     Defaults to true.
       * @param {string=} attrName Optional none normalized name. Defaults to key.
       */
      $set: function(key, value, writeAttr, attrName) {
        // TODO: decide whether or not to throw an error if "class"
        //is set through this function since it may cause $updateClass to
        //become unstable.

        var node = this.$$element[0],
            booleanKey = getBooleanAttrName(node, key),
            aliasedKey = getAliasedAttrName(key),
            observer = key,
            nodeName;

        if (booleanKey) {
          this.$$element.prop(key, value);
          attrName = booleanKey;
        } else if (aliasedKey) {
          this[aliasedKey] = value;
          observer = aliasedKey;
        }

        this[key] = value;

        // translate normalized key to actual key
        if (attrName) {
          this.$attr[key] = attrName;
        } else {
          attrName = this.$attr[key];
          if (!attrName) {
            this.$attr[key] = attrName = snake_case(key, '-');
          }
        }

        nodeName = nodeName_(this.$$element);

        if ((nodeName === 'a' && (key === 'href' || key === 'xlinkHref')) ||
            (nodeName === 'img' && key === 'src')) {
          // sanitize a[href] and img[src] values
          this[key] = value = $$sanitizeUri(value, key === 'src');
        } else if (nodeName === 'img' && key === 'srcset' && isDefined(value)) {
          // sanitize img[srcset] values
          var result = '';

          // first check if there are spaces because it's not the same pattern
          var trimmedSrcset = trim(value);
          //                (   999x   ,|   999w   ,|   ,|,   )
          var srcPattern = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/;
          var pattern = /\s/.test(trimmedSrcset) ? srcPattern : /(,)/;

          // split srcset into tuple of uri and descriptor except for the last item
          var rawUris = trimmedSrcset.split(pattern);

          // for each tuples
          var nbrUrisWith2parts = Math.floor(rawUris.length / 2);
          for (var i = 0; i < nbrUrisWith2parts; i++) {
            var innerIdx = i * 2;
            // sanitize the uri
            result += $$sanitizeUri(trim(rawUris[innerIdx]), true);
            // add the descriptor
            result += (' ' + trim(rawUris[innerIdx + 1]));
          }

          // split the last item into uri and descriptor
          var lastTuple = trim(rawUris[i * 2]).split(/\s/);

          // sanitize the last uri
          result += $$sanitizeUri(trim(lastTuple[0]), true);

          // and add the last descriptor if any
          if (lastTuple.length === 2) {
            result += (' ' + trim(lastTuple[1]));
          }
          this[key] = value = result;
        }

        if (writeAttr !== false) {
          if (value === null || isUndefined(value)) {
            this.$$element.removeAttr(attrName);
          } else {
            if (SIMPLE_ATTR_NAME.test(attrName)) {
              this.$$element.attr(attrName, value);
            } else {
              setSpecialAttr(this.$$element[0], attrName, value);
            }
          }
        }

        // fire observers
        var $$observers = this.$$observers;
        if ($$observers) {
          forEach($$observers[observer], function(fn) {
            try {
              fn(value);
            } catch (e) {
              $exceptionHandler(e);
            }
          });
        }
      },


      /**
       * @ngdoc method
       * @name $compile.directive.Attributes#$observe
       * @kind function
       *
       * @description
       * Observes an interpolated attribute.
       *
       * The observer function will be invoked once during the next `$digest` following
       * compilation. The observer is then invoked whenever the interpolated value
       * changes.
       *
       * @param {string} key Normalized key. (ie ngAttribute) .
       * @param {function(interpolatedValue)} fn Function that will be called whenever
                the interpolated value of the attribute changes.
       *        See the {@link guide/interpolation#how-text-and-attribute-bindings-work Interpolation
       *        guide} for more info.
       * @returns {function()} Returns a deregistration function for this observer.
       */
      $observe: function(key, fn) {
        var attrs = this,
            $$observers = (attrs.$$observers || (attrs.$$observers = createMap())),
            listeners = ($$observers[key] || ($$observers[key] = []));

        listeners.push(fn);
        $rootScope.$evalAsync(function() {
          if (!listeners.$$inter && attrs.hasOwnProperty(key) && !isUndefined(attrs[key])) {
            // no one registered attribute interpolation function, so lets call it manually
            fn(attrs[key]);
          }
        });

        return function() {
          arrayRemove(listeners, fn);
        };
      }
    };

    function setSpecialAttr(element, attrName, value) {
      // Attributes names that do not start with letters (such as `(click)`) cannot be set using `setAttribute`
      // so we have to jump through some hoops to get such an attribute
      // https://github.com/angular/angular.js/pull/13318
      specialAttrHolder.innerHTML = '<span ' + attrName + '>';
      var attributes = specialAttrHolder.firstChild.attributes;
      var attribute = attributes[0];
      // We have to remove the attribute from its container element before we can add it to the destination element
      attributes.removeNamedItem(attribute.name);
      attribute.value = value;
      element.attributes.setNamedItem(attribute);
    }

    function safeAddClass($element, className) {
      try {
        $element.addClass(className);
      } catch (e) {
        // ignore, since it means that we are trying to set class on
        // SVG element, where class name is read-only.
      }
    }


    var startSymbol = $interpolate.startSymbol(),
        endSymbol = $interpolate.endSymbol(),
        denormalizeTemplate = (startSymbol === '{{' && endSymbol  === '}}')
            ? identity
            : function denormalizeTemplate(template) {
              return template.replace(/\{\{/g, startSymbol).replace(/}}/g, endSymbol);
        },
        NG_ATTR_BINDING = /^ngAttr[A-Z]/;
    var MULTI_ELEMENT_DIR_RE = /^(.+)Start$/;

    compile.$$addBindingInfo = debugInfoEnabled ? function $$addBindingInfo($element, binding) {
      var bindings = $element.data('$binding') || [];

      if (isArray(binding)) {
        bindings = bindings.concat(binding);
      } else {
        bindings.push(binding);
      }

      $element.data('$binding', bindings);
    } : noop;

    compile.$$addBindingClass = debugInfoEnabled ? function $$addBindingClass($element) {
      safeAddClass($element, 'ng-binding');
    } : noop;

    compile.$$addScopeInfo = debugInfoEnabled ? function $$addScopeInfo($element, scope, isolated, noTemplate) {
      var dataName = isolated ? (noTemplate ? '$isolateScopeNoTemplate' : '$isolateScope') : '$scope';
      $element.data(dataName, scope);
    } : noop;

    compile.$$addScopeClass = debugInfoEnabled ? function $$addScopeClass($element, isolated) {
      safeAddClass($element, isolated ? 'ng-isolate-scope' : 'ng-scope');
    } : noop;

    compile.$$createComment = function(directiveName, comment) {
      var content = '';
      if (debugInfoEnabled) {
        content = ' ' + (directiveName || '') + ': ';
        if (comment) content += comment + ' ';
      }
      return window.document.createComment(content);
    };

    return compile;

    //================================

    function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective,
                        previousCompileContext) {
      if (!($compileNodes instanceof jqLite)) {
        // jquery always rewraps, whereas we need to preserve the original selector so that we can
        // modify it.
        $compileNodes = jqLite($compileNodes);
      }

      var NOT_EMPTY = /\S+/;

      // We can not compile top level text elements since text nodes can be merged and we will
      // not be able to attach scope data to them, so we will wrap them in <span>
      for (var i = 0, len = $compileNodes.length; i < len; i++) {
        var domNode = $compileNodes[i];

        if (domNode.nodeType === NODE_TYPE_TEXT && domNode.nodeValue.match(NOT_EMPTY) /* non-empty */) {
          jqLiteWrapNode(domNode, $compileNodes[i] = window.document.createElement('span'));
        }
      }

      var compositeLinkFn =
              compileNodes($compileNodes, transcludeFn, $compileNodes,
                           maxPriority, ignoreDirective, previousCompileContext);
      compile.$$addScopeClass($compileNodes);
      var namespace = null;
      return function publicLinkFn(scope, cloneConnectFn, options) {
        assertArg(scope, 'scope');

        if (previousCompileContext && previousCompileContext.needsNewScope) {
          // A parent directive did a replace and a directive on this element asked
          // for transclusion, which caused us to lose a layer of element on which
          // we could hold the new transclusion scope, so we will create it manually
          // here.
          scope = scope.$parent.$new();
        }

        options = options || {};
        var parentBoundTranscludeFn = options.parentBoundTranscludeFn,
          transcludeControllers = options.transcludeControllers,
          futureParentElement = options.futureParentElement;

        // When `parentBoundTranscludeFn` is passed, it is a
        // `controllersBoundTransclude` function (it was previously passed
        // as `transclude` to directive.link) so we must unwrap it to get
        // its `boundTranscludeFn`
        if (parentBoundTranscludeFn && parentBoundTranscludeFn.$$boundTransclude) {
          parentBoundTranscludeFn = parentBoundTranscludeFn.$$boundTransclude;
        }

        if (!namespace) {
          namespace = detectNamespaceForChildElements(futureParentElement);
        }
        var $linkNode;
        if (namespace !== 'html') {
          // When using a directive with replace:true and templateUrl the $compileNodes
          // (or a child element inside of them)
          // might change, so we need to recreate the namespace adapted compileNodes
          // for call to the link function.
          // Note: This will already clone the nodes...
          $linkNode = jqLite(
            wrapTemplate(namespace, jqLite('<div>').append($compileNodes).html())
          );
        } else if (cloneConnectFn) {
          // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart
          // and sometimes changes the structure of the DOM.
          $linkNode = JQLitePrototype.clone.call($compileNodes);
        } else {
          $linkNode = $compileNodes;
        }

        if (transcludeControllers) {
          for (var controllerName in transcludeControllers) {
            $linkNode.data('$' + controllerName + 'Controller', transcludeControllers[controllerName].instance);
          }
        }

        compile.$$addScopeInfo($linkNode, scope);

        if (cloneConnectFn) cloneConnectFn($linkNode, scope);
        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn);
        return $linkNode;
      };
    }

    function detectNamespaceForChildElements(parentElement) {
      // TODO: Make this detect MathML as well...
      var node = parentElement && parentElement[0];
      if (!node) {
        return 'html';
      } else {
        return nodeName_(node) !== 'foreignobject' && toString.call(node).match(/SVG/) ? 'svg' : 'html';
      }
    }

    /**
     * Compile function matches each node in nodeList against the directives. Once all directives
     * for a particular node are collected their compile functions are executed. The compile
     * functions return values - the linking functions - are combined into a composite linking
     * function, which is the a linking function for the node.
     *
     * @param {NodeList} nodeList an array of nodes or NodeList to compile
     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the
     *        scope argument is auto-generated to the new child of the transcluded parent scope.
     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then
     *        the rootElement must be set the jqLite collection of the compile root. This is
     *        needed so that the jqLite collection items can be replaced with widgets.
     * @param {number=} maxPriority Max directive priority.
     * @returns {Function} A composite linking function of all of the matched directives or null.
     */
    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective,
                            previousCompileContext) {
      var linkFns = [],
          attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound, nodeLinkFnFound;

      for (var i = 0; i < nodeList.length; i++) {
        attrs = new Attributes();

        // we must always refer to nodeList[i] since the nodes can be replaced underneath us.
        directives = collectDirectives(nodeList[i], [], attrs, i === 0 ? maxPriority : undefined,
                                        ignoreDirective);

        nodeLinkFn = (directives.length)
            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement,
                                      null, [], [], previousCompileContext)
            : null;

        if (nodeLinkFn && nodeLinkFn.scope) {
          compile.$$addScopeClass(attrs.$$element);
        }

        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal ||
                      !(childNodes = nodeList[i].childNodes) ||
                      !childNodes.length)
            ? null
            : compileNodes(childNodes,
                 nodeLinkFn ? (
                  (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement)
                     && nodeLinkFn.transclude) : transcludeFn);

        if (nodeLinkFn || childLinkFn) {
          linkFns.push(i, nodeLinkFn, childLinkFn);
          linkFnFound = true;
          nodeLinkFnFound = nodeLinkFnFound || nodeLinkFn;
        }

        //use the previous context only for the first element in the virtual group
        previousCompileContext = null;
      }

      // return a linking function if we have found anything, null otherwise
      return linkFnFound ? compositeLinkFn : null;

      function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {
        var nodeLinkFn, childLinkFn, node, childScope, i, ii, idx, childBoundTranscludeFn;
        var stableNodeList;


        if (nodeLinkFnFound) {
          // copy nodeList so that if a nodeLinkFn removes or adds an element at this DOM level our
          // offsets don't get screwed up
          var nodeListLength = nodeList.length;
          stableNodeList = new Array(nodeListLength);

          // create a sparse array by only copying the elements which have a linkFn
          for (i = 0; i < linkFns.length; i += 3) {
            idx = linkFns[i];
            stableNodeList[idx] = nodeList[idx];
          }
        } else {
          stableNodeList = nodeList;
        }

        for (i = 0, ii = linkFns.length; i < ii;) {
          node = stableNodeList[linkFns[i++]];
          nodeLinkFn = linkFns[i++];
          childLinkFn = linkFns[i++];

          if (nodeLinkFn) {
            if (nodeLinkFn.scope) {
              childScope = scope.$new();
              compile.$$addScopeInfo(jqLite(node), childScope);
            } else {
              childScope = scope;
            }

            if (nodeLinkFn.transcludeOnThisElement) {
              childBoundTranscludeFn = createBoundTranscludeFn(
                  scope, nodeLinkFn.transclude, parentBoundTranscludeFn);

            } else if (!nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn) {
              childBoundTranscludeFn = parentBoundTranscludeFn;

            } else if (!parentBoundTranscludeFn && transcludeFn) {
              childBoundTranscludeFn = createBoundTranscludeFn(scope, transcludeFn);

            } else {
              childBoundTranscludeFn = null;
            }

            nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn);

          } else if (childLinkFn) {
            childLinkFn(scope, node.childNodes, undefined, parentBoundTranscludeFn);
          }
        }
      }
    }

    function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn) {
      function boundTranscludeFn(transcludedScope, cloneFn, controllers, futureParentElement, containingScope) {

        if (!transcludedScope) {
          transcludedScope = scope.$new(false, containingScope);
          transcludedScope.$$transcluded = true;
        }

        return transcludeFn(transcludedScope, cloneFn, {
          parentBoundTranscludeFn: previousBoundTranscludeFn,
          transcludeControllers: controllers,
          futureParentElement: futureParentElement
        });
      }

      // We need  to attach the transclusion slots onto the `boundTranscludeFn`
      // so that they are available inside the `controllersBoundTransclude` function
      var boundSlots = boundTranscludeFn.$$slots = createMap();
      for (var slotName in transcludeFn.$$slots) {
        if (transcludeFn.$$slots[slotName]) {
          boundSlots[slotName] = createBoundTranscludeFn(scope, transcludeFn.$$slots[slotName], previousBoundTranscludeFn);
        } else {
          boundSlots[slotName] = null;
        }
      }

      return boundTranscludeFn;
    }

    /**
     * Looks for directives on the given node and adds them to the directive collection which is
     * sorted.
     *
     * @param node Node to search.
     * @param directives An array to which the directives are added to. This array is sorted before
     *        the function returns.
     * @param attrs The shared attrs object which is used to populate the normalized attributes.
     * @param {number=} maxPriority Max directive priority.
     */
    function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {
      var nodeType = node.nodeType,
          attrsMap = attrs.$attr,
          match,
          nodeName,
          className;

      switch (nodeType) {
        case NODE_TYPE_ELEMENT: /* Element */

          nodeName = nodeName_(node);

          // use the node name: <directive>
          addDirective(directives,
              directiveNormalize(nodeName), 'E', maxPriority, ignoreDirective);

          // iterate over the attributes
          for (var attr, name, nName, ngAttrName, value, isNgAttr, nAttrs = node.attributes,
                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {
            var attrStartName = false;
            var attrEndName = false;

            attr = nAttrs[j];
            name = attr.name;
            value = trim(attr.value);

            // support ngAttr attribute binding
            ngAttrName = directiveNormalize(name);
            isNgAttr = NG_ATTR_BINDING.test(ngAttrName);
            if (isNgAttr) {
              name = name.replace(PREFIX_REGEXP, '')
                .substr(8).replace(/_(.)/g, function(match, letter) {
                  return letter.toUpperCase();
                });
            }

            var multiElementMatch = ngAttrName.match(MULTI_ELEMENT_DIR_RE);
            if (multiElementMatch && directiveIsMultiElement(multiElementMatch[1])) {
              attrStartName = name;
              attrEndName = name.substr(0, name.length - 5) + 'end';
              name = name.substr(0, name.length - 6);
            }

            nName = directiveNormalize(name.toLowerCase());
            attrsMap[nName] = name;
            if (isNgAttr || !attrs.hasOwnProperty(nName)) {
                attrs[nName] = value;
                if (getBooleanAttrName(node, nName)) {
                  attrs[nName] = true; // presence means true
                }
            }
            addAttrInterpolateDirective(node, directives, value, nName, isNgAttr);
            addDirective(directives, nName, 'A', maxPriority, ignoreDirective, attrStartName,
                          attrEndName);
          }

          if (nodeName === 'input' && node.getAttribute('type') === 'hidden') {
            // Hidden input elements can have strange behaviour when navigating back to the page
            // This tells the browser not to try to cache and reinstate previous values
            node.setAttribute('autocomplete', 'off');
          }

          // use class as directive
          if (!cssClassDirectivesEnabled) break;
          className = node.className;
          if (isObject(className)) {
              // Maybe SVGAnimatedString
              className = className.animVal;
          }
          if (isString(className) && className !== '') {
            while ((match = CLASS_DIRECTIVE_REGEXP.exec(className))) {
              nName = directiveNormalize(match[2]);
              if (addDirective(directives, nName, 'C', maxPriority, ignoreDirective)) {
                attrs[nName] = trim(match[3]);
              }
              className = className.substr(match.index + match[0].length);
            }
          }
          break;
        case NODE_TYPE_TEXT: /* Text Node */
          if (msie === 11) {
            // Workaround for #11781
            while (node.parentNode && node.nextSibling && node.nextSibling.nodeType === NODE_TYPE_TEXT) {
              node.nodeValue = node.nodeValue + node.nextSibling.nodeValue;
              node.parentNode.removeChild(node.nextSibling);
            }
          }
          addTextInterpolateDirective(directives, node.nodeValue);
          break;
        case NODE_TYPE_COMMENT: /* Comment */
          if (!commentDirectivesEnabled) break;
          collectCommentDirectives(node, directives, attrs, maxPriority, ignoreDirective);
          break;
      }

      directives.sort(byPriority);
      return directives;
    }

    function collectCommentDirectives(node, directives, attrs, maxPriority, ignoreDirective) {
      // function created because of performance, try/catch disables
      // the optimization of the whole function #14848
      try {
        var match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);
        if (match) {
          var nName = directiveNormalize(match[1]);
          if (addDirective(directives, nName, 'M', maxPriority, ignoreDirective)) {
            attrs[nName] = trim(match[2]);
          }
        }
      } catch (e) {
        // turns out that under some circumstances IE9 throws errors when one attempts to read
        // comment's node value.
        // Just ignore it and continue. (Can't seem to reproduce in test case.)
      }
    }

    /**
     * Given a node with a directive-start it collects all of the siblings until it finds
     * directive-end.
     * @param node
     * @param attrStart
     * @param attrEnd
     * @returns {*}
     */
    function groupScan(node, attrStart, attrEnd) {
      var nodes = [];
      var depth = 0;
      if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) {
        do {
          if (!node) {
            throw $compileMinErr('uterdir',
                      'Unterminated attribute, found \'{0}\' but no matching \'{1}\' found.',
                      attrStart, attrEnd);
          }
          if (node.nodeType === NODE_TYPE_ELEMENT) {
            if (node.hasAttribute(attrStart)) depth++;
            if (node.hasAttribute(attrEnd)) depth--;
          }
          nodes.push(node);
          node = node.nextSibling;
        } while (depth > 0);
      } else {
        nodes.push(node);
      }

      return jqLite(nodes);
    }

    /**
     * Wrapper for linking function which converts normal linking function into a grouped
     * linking function.
     * @param linkFn
     * @param attrStart
     * @param attrEnd
     * @returns {Function}
     */
    function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {
      return function groupedElementsLink(scope, element, attrs, controllers, transcludeFn) {
        element = groupScan(element[0], attrStart, attrEnd);
        return linkFn(scope, element, attrs, controllers, transcludeFn);
      };
    }

    /**
     * A function generator that is used to support both eager and lazy compilation
     * linking function.
     * @param eager
     * @param $compileNodes
     * @param transcludeFn
     * @param maxPriority
     * @param ignoreDirective
     * @param previousCompileContext
     * @returns {Function}
     */
    function compilationGenerator(eager, $compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext) {
      var compiled;

      if (eager) {
        return compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext);
      }
      return /** @this */ function lazyCompilation() {
        if (!compiled) {
          compiled = compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext);

          // Null out all of these references in order to make them eligible for garbage collection
          // since this is a potentially long lived closure
          $compileNodes = transcludeFn = previousCompileContext = null;
        }
        return compiled.apply(this, arguments);
      };
    }

    /**
     * Once the directives have been collected, their compile functions are executed. This method
     * is responsible for inlining directive templates as well as terminating the application
     * of the directives if the terminal directive has been reached.
     *
     * @param {Array} directives Array of collected directives to execute their compile function.
     *        this needs to be pre-sorted by priority order.
     * @param {Node} compileNode The raw DOM node to apply the compile functions to
     * @param {Object} templateAttrs The shared attribute function
     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the
     *                                                  scope argument is auto-generated to the new
     *                                                  child of the transcluded parent scope.
     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this
     *                              argument has the root jqLite array so that we can replace nodes
     *                              on it.
     * @param {Object=} originalReplaceDirective An optional directive that will be ignored when
     *                                           compiling the transclusion.
     * @param {Array.<Function>} preLinkFns
     * @param {Array.<Function>} postLinkFns
     * @param {Object} previousCompileContext Context used for previous compilation of the current
     *                                        node
     * @returns {Function} linkFn
     */
    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn,
                                   jqCollection, originalReplaceDirective, preLinkFns, postLinkFns,
                                   previousCompileContext) {
      previousCompileContext = previousCompileContext || {};

      var terminalPriority = -Number.MAX_VALUE,
          newScopeDirective = previousCompileContext.newScopeDirective,
          controllerDirectives = previousCompileContext.controllerDirectives,
          newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective,
          templateDirective = previousCompileContext.templateDirective,
          nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective,
          hasTranscludeDirective = false,
          hasTemplate = false,
          hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective,
          $compileNode = templateAttrs.$$element = jqLite(compileNode),
          directive,
          directiveName,
          $template,
          replaceDirective = originalReplaceDirective,
          childTranscludeFn = transcludeFn,
          linkFn,
          didScanForMultipleTransclusion = false,
          mightHaveMultipleTransclusionError = false,
          directiveValue;

      // executes all directives on the current element
      for (var i = 0, ii = directives.length; i < ii; i++) {
        directive = directives[i];
        var attrStart = directive.$$start;
        var attrEnd = directive.$$end;

        // collect multiblock sections
        if (attrStart) {
          $compileNode = groupScan(compileNode, attrStart, attrEnd);
        }
        $template = undefined;

        if (terminalPriority > directive.priority) {
          break; // prevent further processing of directives
        }

        directiveValue = directive.scope;

        if (directiveValue) {

          // skip the check for directives with async templates, we'll check the derived sync
          // directive when the template arrives
          if (!directive.templateUrl) {
            if (isObject(directiveValue)) {
              // This directive is trying to add an isolated scope.
              // Check that there is no scope of any kind already
              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective || newScopeDirective,
                                directive, $compileNode);
              newIsolateScopeDirective = directive;
            } else {
              // This directive is trying to add a child scope.
              // Check that there is no isolated scope already
              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective, directive,
                                $compileNode);
            }
          }

          newScopeDirective = newScopeDirective || directive;
        }

        directiveName = directive.name;

        // If we encounter a condition that can result in transclusion on the directive,
        // then scan ahead in the remaining directives for others that may cause a multiple
        // transclusion error to be thrown during the compilation process.  If a matching directive
        // is found, then we know that when we encounter a transcluded directive, we need to eagerly
        // compile the `transclude` function rather than doing it lazily in order to throw
        // exceptions at the correct time
        if (!didScanForMultipleTransclusion && ((directive.replace && (directive.templateUrl || directive.template))
            || (directive.transclude && !directive.$$tlb))) {
                var candidateDirective;

                for (var scanningIndex = i + 1; (candidateDirective = directives[scanningIndex++]);) {
                    if ((candidateDirective.transclude && !candidateDirective.$$tlb)
                        || (candidateDirective.replace && (candidateDirective.templateUrl || candidateDirective.template))) {
                        mightHaveMultipleTransclusionError = true;
                        break;
                    }
                }

                didScanForMultipleTransclusion = true;
        }

        if (!directive.templateUrl && directive.controller) {
          controllerDirectives = controllerDirectives || createMap();
          assertNoDuplicate('\'' + directiveName + '\' controller',
              controllerDirectives[directiveName], directive, $compileNode);
          controllerDirectives[directiveName] = directive;
        }

        directiveValue = directive.transclude;

        if (directiveValue) {
          hasTranscludeDirective = true;

          // Special case ngIf and ngRepeat so that we don't complain about duplicate transclusion.
          // This option should only be used by directives that know how to safely handle element transclusion,
          // where the transcluded nodes are added or replaced after linking.
          if (!directive.$$tlb) {
            assertNoDuplicate('transclusion', nonTlbTranscludeDirective, directive, $compileNode);
            nonTlbTranscludeDirective = directive;
          }

          if (directiveValue === 'element') {
            hasElementTranscludeDirective = true;
            terminalPriority = directive.priority;
            $template = $compileNode;
            $compileNode = templateAttrs.$$element =
                jqLite(compile.$$createComment(directiveName, templateAttrs[directiveName]));
            compileNode = $compileNode[0];
            replaceWith(jqCollection, sliceArgs($template), compileNode);

            // Support: Chrome < 50
            // https://github.com/angular/angular.js/issues/14041

            // In the versions of V8 prior to Chrome 50, the document fragment that is created
            // in the `replaceWith` function is improperly garbage collected despite still
            // being referenced by the `parentNode` property of all of the child nodes.  By adding
            // a reference to the fragment via a different property, we can avoid that incorrect
            // behavior.
            // TODO: remove this line after Chrome 50 has been released
            $template[0].$$parentNode = $template[0].parentNode;

            childTranscludeFn = compilationGenerator(mightHaveMultipleTransclusionError, $template, transcludeFn, terminalPriority,
                                        replaceDirective && replaceDirective.name, {
                                          // Don't pass in:
                                          // - controllerDirectives - otherwise we'll create duplicates controllers
                                          // - newIsolateScopeDirective or templateDirective - combining templates with
                                          //   element transclusion doesn't make sense.
                                          //
                                          // We need only nonTlbTranscludeDirective so that we prevent putting transclusion
                                          // on the same element more than once.
                                          nonTlbTranscludeDirective: nonTlbTranscludeDirective
                                        });
          } else {

            var slots = createMap();

            $template = jqLite(jqLiteClone(compileNode)).contents();

            if (isObject(directiveValue)) {

              // We have transclusion slots,
              // collect them up, compile them and store their transclusion functions
              $template = [];

              var slotMap = createMap();
              var filledSlots = createMap();

              // Parse the element selectors
              forEach(directiveValue, function(elementSelector, slotName) {
                // If an element selector starts with a ? then it is optional
                var optional = (elementSelector.charAt(0) === '?');
                elementSelector = optional ? elementSelector.substring(1) : elementSelector;

                slotMap[elementSelector] = slotName;

                // We explicitly assign `null` since this implies that a slot was defined but not filled.
                // Later when calling boundTransclusion functions with a slot name we only error if the
                // slot is `undefined`
                slots[slotName] = null;

                // filledSlots contains `true` for all slots that are either optional or have been
                // filled. This is used to check that we have not missed any required slots
                filledSlots[slotName] = optional;
              });

              // Add the matching elements into their slot
              forEach($compileNode.contents(), function(node) {
                var slotName = slotMap[directiveNormalize(nodeName_(node))];
                if (slotName) {
                  filledSlots[slotName] = true;
                  slots[slotName] = slots[slotName] || [];
                  slots[slotName].push(node);
                } else {
                  $template.push(node);
                }
              });

              // Check for required slots that were not filled
              forEach(filledSlots, function(filled, slotName) {
                if (!filled) {
                  throw $compileMinErr('reqslot', 'Required transclusion slot `{0}` was not filled.', slotName);
                }
              });

              for (var slotName in slots) {
                if (slots[slotName]) {
                  // Only define a transclusion function if the slot was filled
                  slots[slotName] = compilationGenerator(mightHaveMultipleTransclusionError, slots[slotName], transcludeFn);
                }
              }
            }

            $compileNode.empty(); // clear contents
            childTranscludeFn = compilationGenerator(mightHaveMultipleTransclusionError, $template, transcludeFn, undefined,
                undefined, { needsNewScope: directive.$$isolateScope || directive.$$newScope});
            childTranscludeFn.$$slots = slots;
          }
        }

        if (directive.template) {
          hasTemplate = true;
          assertNoDuplicate('template', templateDirective, directive, $compileNode);
          templateDirective = directive;

          directiveValue = (isFunction(directive.template))
              ? directive.template($compileNode, templateAttrs)
              : directive.template;

          directiveValue = denormalizeTemplate(directiveValue);

          if (directive.replace) {
            replaceDirective = directive;
            if (jqLiteIsTextNode(directiveValue)) {
              $template = [];
            } else {
              $template = removeComments(wrapTemplate(directive.templateNamespace, trim(directiveValue)));
            }
            compileNode = $template[0];

            if ($template.length !== 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {
              throw $compileMinErr('tplrt',
                  'Template for directive \'{0}\' must have exactly one root element. {1}',
                  directiveName, '');
            }

            replaceWith(jqCollection, $compileNode, compileNode);

            var newTemplateAttrs = {$attr: {}};

            // combine directives from the original node and from the template:
            // - take the array of directives for this element
            // - split it into two parts, those that already applied (processed) and those that weren't (unprocessed)
            // - collect directives from the template and sort them by priority
            // - combine directives as: processed + template + unprocessed
            var templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs);
            var unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));

            if (newIsolateScopeDirective || newScopeDirective) {
              // The original directive caused the current element to be replaced but this element
              // also needs to have a new scope, so we need to tell the template directives
              // that they would need to get their scope from further up, if they require transclusion
              markDirectiveScope(templateDirectives, newIsolateScopeDirective, newScopeDirective);
            }
            directives = directives.concat(templateDirectives).concat(unprocessedDirectives);
            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);

            ii = directives.length;
          } else {
            $compileNode.html(directiveValue);
          }
        }

        if (directive.templateUrl) {
          hasTemplate = true;
          assertNoDuplicate('template', templateDirective, directive, $compileNode);
          templateDirective = directive;

          if (directive.replace) {
            replaceDirective = directive;
          }

          // eslint-disable-next-line no-func-assign
          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode,
              templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {
                controllerDirectives: controllerDirectives,
                newScopeDirective: (newScopeDirective !== directive) && newScopeDirective,
                newIsolateScopeDirective: newIsolateScopeDirective,
                templateDirective: templateDirective,
                nonTlbTranscludeDirective: nonTlbTranscludeDirective
              });
          ii = directives.length;
        } else if (directive.compile) {
          try {
            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);
            var context = directive.$$originalDirective || directive;
            if (isFunction(linkFn)) {
              addLinkFns(null, bind(context, linkFn), attrStart, attrEnd);
            } else if (linkFn) {
              addLinkFns(bind(context, linkFn.pre), bind(context, linkFn.post), attrStart, attrEnd);
            }
          } catch (e) {
            $exceptionHandler(e, startingTag($compileNode));
          }
        }

        if (directive.terminal) {
          nodeLinkFn.terminal = true;
          terminalPriority = Math.max(terminalPriority, directive.priority);
        }

      }

      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope === true;
      nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective;
      nodeLinkFn.templateOnThisElement = hasTemplate;
      nodeLinkFn.transclude = childTranscludeFn;

      previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective;

      // might be normal or delayed nodeLinkFn depending on if templateUrl is present
      return nodeLinkFn;

      ////////////////////

      function addLinkFns(pre, post, attrStart, attrEnd) {
        if (pre) {
          if (attrStart) pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd);
          pre.require = directive.require;
          pre.directiveName = directiveName;
          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {
            pre = cloneAndAnnotateFn(pre, {isolateScope: true});
          }
          preLinkFns.push(pre);
        }
        if (post) {
          if (attrStart) post = groupElementsLinkFnWrapper(post, attrStart, attrEnd);
          post.require = directive.require;
          post.directiveName = directiveName;
          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {
            post = cloneAndAnnotateFn(post, {isolateScope: true});
          }
          postLinkFns.push(post);
        }
      }

      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {
        var i, ii, linkFn, isolateScope, controllerScope, elementControllers, transcludeFn, $element,
            attrs, scopeBindingInfo;

        if (compileNode === linkNode) {
          attrs = templateAttrs;
          $element = templateAttrs.$$element;
        } else {
          $element = jqLite(linkNode);
          attrs = new Attributes($element, templateAttrs);
        }

        controllerScope = scope;
        if (newIsolateScopeDirective) {
          isolateScope = scope.$new(true);
        } else if (newScopeDirective) {
          controllerScope = scope.$parent;
        }

        if (boundTranscludeFn) {
          // track `boundTranscludeFn` so it can be unwrapped if `transcludeFn`
          // is later passed as `parentBoundTranscludeFn` to `publicLinkFn`
          transcludeFn = controllersBoundTransclude;
          transcludeFn.$$boundTransclude = boundTranscludeFn;
          // expose the slots on the `$transclude` function
          transcludeFn.isSlotFilled = function(slotName) {
            return !!boundTranscludeFn.$$slots[slotName];
          };
        }

        if (controllerDirectives) {
          elementControllers = setupControllers($element, attrs, transcludeFn, controllerDirectives, isolateScope, scope, newIsolateScopeDirective);
        }

        if (newIsolateScopeDirective) {
          // Initialize isolate scope bindings for new isolate scope directive.
          compile.$$addScopeInfo($element, isolateScope, true, !(templateDirective && (templateDirective === newIsolateScopeDirective ||
              templateDirective === newIsolateScopeDirective.$$originalDirective)));
          compile.$$addScopeClass($element, true);
          isolateScope.$$isolateBindings =
              newIsolateScopeDirective.$$isolateBindings;
          scopeBindingInfo = initializeDirectiveBindings(scope, attrs, isolateScope,
                                        isolateScope.$$isolateBindings,
                                        newIsolateScopeDirective);
          if (scopeBindingInfo.removeWatches) {
            isolateScope.$on('$destroy', scopeBindingInfo.removeWatches);
          }
        }

        // Initialize bindToController bindings
        for (var name in elementControllers) {
          var controllerDirective = controllerDirectives[name];
          var controller = elementControllers[name];
          var bindings = controllerDirective.$$bindings.bindToController;

          if (preAssignBindingsEnabled) {
            if (bindings) {
              controller.bindingInfo =
                initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective);
            } else {
              controller.bindingInfo = {};
            }

            var controllerResult = controller();
            if (controllerResult !== controller.instance) {
              // If the controller constructor has a return value, overwrite the instance
              // from setupControllers
              controller.instance = controllerResult;
              $element.data('$' + controllerDirective.name + 'Controller', controllerResult);
              if (controller.bindingInfo.removeWatches) {
                controller.bindingInfo.removeWatches();
              }
              controller.bindingInfo =
                initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective);
            }
          } else {
            controller.instance = controller();
            $element.data('$' + controllerDirective.name + 'Controller', controller.instance);
            controller.bindingInfo =
              initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective);
          }
        }

        // Bind the required controllers to the controller, if `require` is an object and `bindToController` is truthy
        forEach(controllerDirectives, function(controllerDirective, name) {
          var require = controllerDirective.require;
          if (controllerDirective.bindToController && !isArray(require) && isObject(require)) {
            extend(elementControllers[name].instance, getControllers(name, require, $element, elementControllers));
          }
        });

        // Handle the init and destroy lifecycle hooks on all controllers that have them
        forEach(elementControllers, function(controller) {
          var controllerInstance = controller.instance;
          if (isFunction(controllerInstance.$onChanges)) {
            try {
              controllerInstance.$onChanges(controller.bindingInfo.initialChanges);
            } catch (e) {
              $exceptionHandler(e);
            }
          }
          if (isFunction(controllerInstance.$onInit)) {
            try {
              controllerInstance.$onInit();
            } catch (e) {
              $exceptionHandler(e);
            }
          }
          if (isFunction(controllerInstance.$doCheck)) {
            controllerScope.$watch(function() { controllerInstance.$doCheck(); });
            controllerInstance.$doCheck();
          }
          if (isFunction(controllerInstance.$onDestroy)) {
            controllerScope.$on('$destroy', function callOnDestroyHook() {
              controllerInstance.$onDestroy();
            });
          }
        });

        // PRELINKING
        for (i = 0, ii = preLinkFns.length; i < ii; i++) {
          linkFn = preLinkFns[i];
          invokeLinkFn(linkFn,
              linkFn.isolateScope ? isolateScope : scope,
              $element,
              attrs,
              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),
              transcludeFn
          );
        }

        // RECURSION
        // We only pass the isolate scope, if the isolate directive has a template,
        // otherwise the child elements do not belong to the isolate directive.
        var scopeToChild = scope;
        if (newIsolateScopeDirective && (newIsolateScopeDirective.template || newIsolateScopeDirective.templateUrl === null)) {
          scopeToChild = isolateScope;
        }
        if (childLinkFn) {
          childLinkFn(scopeToChild, linkNode.childNodes, undefined, boundTranscludeFn);
        }

        // POSTLINKING
        for (i = postLinkFns.length - 1; i >= 0; i--) {
          linkFn = postLinkFns[i];
          invokeLinkFn(linkFn,
              linkFn.isolateScope ? isolateScope : scope,
              $element,
              attrs,
              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),
              transcludeFn
          );
        }

        // Trigger $postLink lifecycle hooks
        forEach(elementControllers, function(controller) {
          var controllerInstance = controller.instance;
          if (isFunction(controllerInstance.$postLink)) {
            controllerInstance.$postLink();
          }
        });

        // This is the function that is injected as `$transclude`.
        // Note: all arguments are optional!
        function controllersBoundTransclude(scope, cloneAttachFn, futureParentElement, slotName) {
          var transcludeControllers;
          // No scope passed in:
          if (!isScope(scope)) {
            slotName = futureParentElement;
            futureParentElement = cloneAttachFn;
            cloneAttachFn = scope;
            scope = undefined;
          }

          if (hasElementTranscludeDirective) {
            transcludeControllers = elementControllers;
          }
          if (!futureParentElement) {
            futureParentElement = hasElementTranscludeDirective ? $element.parent() : $element;
          }
          if (slotName) {
            // slotTranscludeFn can be one of three things:
            //  * a transclude function - a filled slot
            //  * `null` - an optional slot that was not filled
            //  * `undefined` - a slot that was not declared (i.e. invalid)
            var slotTranscludeFn = boundTranscludeFn.$$slots[slotName];
            if (slotTranscludeFn) {
              return slotTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);
            } else if (isUndefined(slotTranscludeFn)) {
              throw $compileMinErr('noslot',
               'No parent directive that requires a transclusion with slot name "{0}". ' +
               'Element: {1}',
               slotName, startingTag($element));
            }
          } else {
            return boundTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);
          }
        }
      }
    }

    function getControllers(directiveName, require, $element, elementControllers) {
      var value;

      if (isString(require)) {
        var match = require.match(REQUIRE_PREFIX_REGEXP);
        var name = require.substring(match[0].length);
        var inheritType = match[1] || match[3];
        var optional = match[2] === '?';

        //If only parents then start at the parent element
        if (inheritType === '^^') {
          $element = $element.parent();
        //Otherwise attempt getting the controller from elementControllers in case
        //the element is transcluded (and has no data) and to avoid .data if possible
        } else {
          value = elementControllers && elementControllers[name];
          value = value && value.instance;
        }

        if (!value) {
          var dataName = '$' + name + 'Controller';
          value = inheritType ? $element.inheritedData(dataName) : $element.data(dataName);
        }

        if (!value && !optional) {
          throw $compileMinErr('ctreq',
              'Controller \'{0}\', required by directive \'{1}\', can\'t be found!',
              name, directiveName);
        }
      } else if (isArray(require)) {
        value = [];
        for (var i = 0, ii = require.length; i < ii; i++) {
          value[i] = getControllers(directiveName, require[i], $element, elementControllers);
        }
      } else if (isObject(require)) {
        value = {};
        forEach(require, function(controller, property) {
          value[property] = getControllers(directiveName, controller, $element, elementControllers);
        });
      }

      return value || null;
    }

    function setupControllers($element, attrs, transcludeFn, controllerDirectives, isolateScope, scope, newIsolateScopeDirective) {
      var elementControllers = createMap();
      for (var controllerKey in controllerDirectives) {
        var directive = controllerDirectives[controllerKey];
        var locals = {
          $scope: directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,
          $element: $element,
          $attrs: attrs,
          $transclude: transcludeFn
        };

        var controller = directive.controller;
        if (controller === '@') {
          controller = attrs[directive.name];
        }

        var controllerInstance = $controller(controller, locals, true, directive.controllerAs);

        // For directives with element transclusion the element is a comment.
        // In this case .data will not attach any data.
        // Instead, we save the controllers for the element in a local hash and attach to .data
        // later, once we have the actual element.
        elementControllers[directive.name] = controllerInstance;
        $element.data('$' + directive.name + 'Controller', controllerInstance.instance);
      }
      return elementControllers;
    }

    // Depending upon the context in which a directive finds itself it might need to have a new isolated
    // or child scope created. For instance:
    // * if the directive has been pulled into a template because another directive with a higher priority
    // asked for element transclusion
    // * if the directive itself asks for transclusion but it is at the root of a template and the original
    // element was replaced. See https://github.com/angular/angular.js/issues/12936
    function markDirectiveScope(directives, isolateScope, newScope) {
      for (var j = 0, jj = directives.length; j < jj; j++) {
        directives[j] = inherit(directives[j], {$$isolateScope: isolateScope, $$newScope: newScope});
      }
    }

    /**
     * looks up the directive and decorates it with exception handling and proper parameters. We
     * call this the boundDirective.
     *
     * @param {string} name name of the directive to look up.
     * @param {string} location The directive must be found in specific format.
     *   String containing any of theses characters:
     *
     *   * `E`: element name
     *   * `A': attribute
     *   * `C`: class
     *   * `M`: comment
     * @returns {boolean} true if directive was added.
     */
    function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName,
                          endAttrName) {
      if (name === ignoreDirective) return null;
      var match = null;
      if (hasDirectives.hasOwnProperty(name)) {
        for (var directive, directives = $injector.get(name + Suffix),
            i = 0, ii = directives.length; i < ii; i++) {
          directive = directives[i];
          if ((isUndefined(maxPriority) || maxPriority > directive.priority) &&
               directive.restrict.indexOf(location) !== -1) {
            if (startAttrName) {
              directive = inherit(directive, {$$start: startAttrName, $$end: endAttrName});
            }
            if (!directive.$$bindings) {
              var bindings = directive.$$bindings =
                  parseDirectiveBindings(directive, directive.name);
              if (isObject(bindings.isolateScope)) {
                directive.$$isolateBindings = bindings.isolateScope;
              }
            }
            tDirectives.push(directive);
            match = directive;
          }
        }
      }
      return match;
    }


    /**
     * looks up the directive and returns true if it is a multi-element directive,
     * and therefore requires DOM nodes between -start and -end markers to be grouped
     * together.
     *
     * @param {string} name name of the directive to look up.
     * @returns true if directive was registered as multi-element.
     */
    function directiveIsMultiElement(name) {
      if (hasDirectives.hasOwnProperty(name)) {
        for (var directive, directives = $injector.get(name + Suffix),
            i = 0, ii = directives.length; i < ii; i++) {
          directive = directives[i];
          if (directive.multiElement) {
            return true;
          }
        }
      }
      return false;
    }

    /**
     * When the element is replaced with HTML template then the new attributes
     * on the template need to be merged with the existing attributes in the DOM.
     * The desired effect is to have both of the attributes present.
     *
     * @param {object} dst destination attributes (original DOM)
     * @param {object} src source attributes (from the directive template)
     */
    function mergeTemplateAttributes(dst, src) {
      var srcAttr = src.$attr,
          dstAttr = dst.$attr;

      // reapply the old attributes to the new element
      forEach(dst, function(value, key) {
        if (key.charAt(0) !== '$') {
          if (src[key] && src[key] !== value) {
            value += (key === 'style' ? ';' : ' ') + src[key];
          }
          dst.$set(key, value, true, srcAttr[key]);
        }
      });

      // copy the new attributes on the old attrs object
      forEach(src, function(value, key) {
        // Check if we already set this attribute in the loop above.
        // `dst` will never contain hasOwnProperty as DOM parser won't let it.
        // You will get an "InvalidCharacterError: DOM Exception 5" error if you
        // have an attribute like "has-own-property" or "data-has-own-property", etc.
        if (!dst.hasOwnProperty(key) && key.charAt(0) !== '$') {
          dst[key] = value;

          if (key !== 'class' && key !== 'style') {
            dstAttr[key] = srcAttr[key];
          }
        }
      });
    }


    function compileTemplateUrl(directives, $compileNode, tAttrs,
        $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {
      var linkQueue = [],
          afterTemplateNodeLinkFn,
          afterTemplateChildLinkFn,
          beforeTemplateCompileNode = $compileNode[0],
          origAsyncDirective = directives.shift(),
          derivedSyncDirective = inherit(origAsyncDirective, {
            templateUrl: null, transclude: null, replace: null, $$originalDirective: origAsyncDirective
          }),
          templateUrl = (isFunction(origAsyncDirective.templateUrl))
              ? origAsyncDirective.templateUrl($compileNode, tAttrs)
              : origAsyncDirective.templateUrl,
          templateNamespace = origAsyncDirective.templateNamespace;

      $compileNode.empty();

      $templateRequest(templateUrl)
        .then(function(content) {
          var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;

          content = denormalizeTemplate(content);

          if (origAsyncDirective.replace) {
            if (jqLiteIsTextNode(content)) {
              $template = [];
            } else {
              $template = removeComments(wrapTemplate(templateNamespace, trim(content)));
            }
            compileNode = $template[0];

            if ($template.length !== 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {
              throw $compileMinErr('tplrt',
                  'Template for directive \'{0}\' must have exactly one root element. {1}',
                  origAsyncDirective.name, templateUrl);
            }

            tempTemplateAttrs = {$attr: {}};
            replaceWith($rootElement, $compileNode, compileNode);
            var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);

            if (isObject(origAsyncDirective.scope)) {
              // the original directive that caused the template to be loaded async required
              // an isolate scope
              markDirectiveScope(templateDirectives, true);
            }
            directives = templateDirectives.concat(directives);
            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);
          } else {
            compileNode = beforeTemplateCompileNode;
            $compileNode.html(content);
          }

          directives.unshift(derivedSyncDirective);

          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs,
              childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns,
              previousCompileContext);
          forEach($rootElement, function(node, i) {
            if (node === compileNode) {
              $rootElement[i] = $compileNode[0];
            }
          });
          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);

          while (linkQueue.length) {
            var scope = linkQueue.shift(),
                beforeTemplateLinkNode = linkQueue.shift(),
                linkRootElement = linkQueue.shift(),
                boundTranscludeFn = linkQueue.shift(),
                linkNode = $compileNode[0];

            if (scope.$$destroyed) continue;

            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {
              var oldClasses = beforeTemplateLinkNode.className;

              if (!(previousCompileContext.hasElementTranscludeDirective &&
                  origAsyncDirective.replace)) {
                // it was cloned therefore we have to clone as well.
                linkNode = jqLiteClone(compileNode);
              }
              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);

              // Copy in CSS classes from original node
              safeAddClass(jqLite(linkNode), oldClasses);
            }
            if (afterTemplateNodeLinkFn.transcludeOnThisElement) {
              childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);
            } else {
              childBoundTranscludeFn = boundTranscludeFn;
            }
            afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement,
              childBoundTranscludeFn);
          }
          linkQueue = null;
        });

      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {
        var childBoundTranscludeFn = boundTranscludeFn;
        if (scope.$$destroyed) return;
        if (linkQueue) {
          linkQueue.push(scope,
                         node,
                         rootElement,
                         childBoundTranscludeFn);
        } else {
          if (afterTemplateNodeLinkFn.transcludeOnThisElement) {
            childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);
          }
          afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn);
        }
      };
    }


    /**
     * Sorting function for bound directives.
     */
    function byPriority(a, b) {
      var diff = b.priority - a.priority;
      if (diff !== 0) return diff;
      if (a.name !== b.name) return (a.name < b.name) ? -1 : 1;
      return a.index - b.index;
    }

    function assertNoDuplicate(what, previousDirective, directive, element) {

      function wrapModuleNameIfDefined(moduleName) {
        return moduleName ?
          (' (module: ' + moduleName + ')') :
          '';
      }

      if (previousDirective) {
        throw $compileMinErr('multidir', 'Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}',
            previousDirective.name, wrapModuleNameIfDefined(previousDirective.$$moduleName),
            directive.name, wrapModuleNameIfDefined(directive.$$moduleName), what, startingTag(element));
      }
    }


    function addTextInterpolateDirective(directives, text) {
      var interpolateFn = $interpolate(text, true);
      if (interpolateFn) {
        directives.push({
          priority: 0,
          compile: function textInterpolateCompileFn(templateNode) {
            var templateNodeParent = templateNode.parent(),
                hasCompileParent = !!templateNodeParent.length;

            // When transcluding a template that has bindings in the root
            // we don't have a parent and thus need to add the class during linking fn.
            if (hasCompileParent) compile.$$addBindingClass(templateNodeParent);

            return function textInterpolateLinkFn(scope, node) {
              var parent = node.parent();
              if (!hasCompileParent) compile.$$addBindingClass(parent);
              compile.$$addBindingInfo(parent, interpolateFn.expressions);
              scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {
                node[0].nodeValue = value;
              });
            };
          }
        });
      }
    }


    function wrapTemplate(type, template) {
      type = lowercase(type || 'html');
      switch (type) {
      case 'svg':
      case 'math':
        var wrapper = window.document.createElement('div');
        wrapper.innerHTML = '<' + type + '>' + template + '</' + type + '>';
        return wrapper.childNodes[0].childNodes;
      default:
        return template;
      }
    }


    function getTrustedContext(node, attrNormalizedName) {
      if (attrNormalizedName === 'srcdoc') {
        return $sce.HTML;
      }
      var tag = nodeName_(node);
      // All tags with src attributes require a RESOURCE_URL value, except for
      // img and various html5 media tags.
      if (attrNormalizedName === 'src' || attrNormalizedName === 'ngSrc') {
        if (['img', 'video', 'audio', 'source', 'track'].indexOf(tag) === -1) {
          return $sce.RESOURCE_URL;
        }
      // maction[xlink:href] can source SVG.  It's not limited to <maction>.
      } else if (attrNormalizedName === 'xlinkHref' ||
          (tag === 'form' && attrNormalizedName === 'action')
      ) {
        return $sce.RESOURCE_URL;
      }
    }


    function addAttrInterpolateDirective(node, directives, value, name, isNgAttr) {
      var trustedContext = getTrustedContext(node, name);
      var mustHaveExpression = !isNgAttr;
      var allOrNothing = ALL_OR_NOTHING_ATTRS[name] || isNgAttr;

      var interpolateFn = $interpolate(value, mustHaveExpression, trustedContext, allOrNothing);

      // no interpolation found -> ignore
      if (!interpolateFn) return;

      if (name === 'multiple' && nodeName_(node) === 'select') {
        throw $compileMinErr('selmulti',
            'Binding to the \'multiple\' attribute is not supported. Element: {0}',
            startingTag(node));
      }

      directives.push({
        priority: 100,
        compile: function() {
            return {
              pre: function attrInterpolatePreLinkFn(scope, element, attr) {
                var $$observers = (attr.$$observers || (attr.$$observers = createMap()));

                if (EVENT_HANDLER_ATTR_REGEXP.test(name)) {
                  throw $compileMinErr('nodomevents',
                      'Interpolations for HTML DOM event attributes are disallowed.  Please use the ' +
                          'ng- versions (such as ng-click instead of onclick) instead.');
                }

                // If the attribute has changed since last $interpolate()ed
                var newValue = attr[name];
                if (newValue !== value) {
                  // we need to interpolate again since the attribute value has been updated
                  // (e.g. by another directive's compile function)
                  // ensure unset/empty values make interpolateFn falsy
                  interpolateFn = newValue && $interpolate(newValue, true, trustedContext, allOrNothing);
                  value = newValue;
                }

                // if attribute was updated so that there is no interpolation going on we don't want to
                // register any observers
                if (!interpolateFn) return;

                // initialize attr object so that it's ready in case we need the value for isolate
                // scope initialization, otherwise the value would not be available from isolate
                // directive's linking fn during linking phase
                attr[name] = interpolateFn(scope);

                ($$observers[name] || ($$observers[name] = [])).$$inter = true;
                (attr.$$observers && attr.$$observers[name].$$scope || scope).
                  $watch(interpolateFn, function interpolateFnWatchAction(newValue, oldValue) {
                    //special case for class attribute addition + removal
                    //so that class changes can tap into the animation
                    //hooks provided by the $animate service. Be sure to
                    //skip animations when the first digest occurs (when
                    //both the new and the old values are the same) since
                    //the CSS classes are the non-interpolated values
                    if (name === 'class' && newValue !== oldValue) {
                      attr.$updateClass(newValue, oldValue);
                    } else {
                      attr.$set(name, newValue);
                    }
                  });
              }
            };
          }
      });
    }


    /**
     * This is a special jqLite.replaceWith, which can replace items which
     * have no parents, provided that the containing jqLite collection is provided.
     *
     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes
     *                               in the root of the tree.
     * @param {JqLite} elementsToRemove The jqLite element which we are going to replace. We keep
     *                                  the shell, but replace its DOM node reference.
     * @param {Node} newNode The new DOM node.
     */
    function replaceWith($rootElement, elementsToRemove, newNode) {
      var firstElementToRemove = elementsToRemove[0],
          removeCount = elementsToRemove.length,
          parent = firstElementToRemove.parentNode,
          i, ii;

      if ($rootElement) {
        for (i = 0, ii = $rootElement.length; i < ii; i++) {
          if ($rootElement[i] === firstElementToRemove) {
            $rootElement[i++] = newNode;
            for (var j = i, j2 = j + removeCount - 1,
                     jj = $rootElement.length;
                 j < jj; j++, j2++) {
              if (j2 < jj) {
                $rootElement[j] = $rootElement[j2];
              } else {
                delete $rootElement[j];
              }
            }
            $rootElement.length -= removeCount - 1;

            // If the replaced element is also the jQuery .context then replace it
            // .context is a deprecated jQuery api, so we should set it only when jQuery set it
            // http://api.jquery.com/context/
            if ($rootElement.context === firstElementToRemove) {
              $rootElement.context = newNode;
            }
            break;
          }
        }
      }

      if (parent) {
        parent.replaceChild(newNode, firstElementToRemove);
      }

      // Append all the `elementsToRemove` to a fragment. This will...
      // - remove them from the DOM
      // - allow them to still be traversed with .nextSibling
      // - allow a single fragment.qSA to fetch all elements being removed
      var fragment = window.document.createDocumentFragment();
      for (i = 0; i < removeCount; i++) {
        fragment.appendChild(elementsToRemove[i]);
      }

      if (jqLite.hasData(firstElementToRemove)) {
        // Copy over user data (that includes Angular's $scope etc.). Don't copy private
        // data here because there's no public interface in jQuery to do that and copying over
        // event listeners (which is the main use of private data) wouldn't work anyway.
        jqLite.data(newNode, jqLite.data(firstElementToRemove));

        // Remove $destroy event listeners from `firstElementToRemove`
        jqLite(firstElementToRemove).off('$destroy');
      }

      // Cleanup any data/listeners on the elements and children.
      // This includes invoking the $destroy event on any elements with listeners.
      jqLite.cleanData(fragment.querySelectorAll('*'));

      // Update the jqLite collection to only contain the `newNode`
      for (i = 1; i < removeCount; i++) {
        delete elementsToRemove[i];
      }
      elementsToRemove[0] = newNode;
      elementsToRemove.length = 1;
    }


    function cloneAndAnnotateFn(fn, annotation) {
      return extend(function() { return fn.apply(null, arguments); }, fn, annotation);
    }


    function invokeLinkFn(linkFn, scope, $element, attrs, controllers, transcludeFn) {
      try {
        linkFn(scope, $element, attrs, controllers, transcludeFn);
      } catch (e) {
        $exceptionHandler(e, startingTag($element));
      }
    }


    // Set up $watches for isolate scope and controller bindings.
    function initializeDirectiveBindings(scope, attrs, destination, bindings, directive) {
      var removeWatchCollection = [];
      var initialChanges = {};
      var changes;
      forEach(bindings, function initializeBinding(definition, scopeName) {
        var attrName = definition.attrName,
        optional = definition.optional,
        mode = definition.mode, // @, =, <, or &
        lastValue,
        parentGet, parentSet, compare, removeWatch;

        switch (mode) {

          case '@':
            if (!optional && !hasOwnProperty.call(attrs, attrName)) {
              destination[scopeName] = attrs[attrName] = undefined;
            }
            removeWatch = attrs.$observe(attrName, function(value) {
              if (isString(value) || isBoolean(value)) {
                var oldValue = destination[scopeName];
                recordChanges(scopeName, value, oldValue);
                destination[scopeName] = value;
              }
            });
            attrs.$$observers[attrName].$$scope = scope;
            lastValue = attrs[attrName];
            if (isString(lastValue)) {
              // If the attribute has been provided then we trigger an interpolation to ensure
              // the value is there for use in the link fn
              destination[scopeName] = $interpolate(lastValue)(scope);
            } else if (isBoolean(lastValue)) {
              // If the attributes is one of the BOOLEAN_ATTR then Angular will have converted
              // the value to boolean rather than a string, so we special case this situation
              destination[scopeName] = lastValue;
            }
            initialChanges[scopeName] = new SimpleChange(_UNINITIALIZED_VALUE, destination[scopeName]);
            removeWatchCollection.push(removeWatch);
            break;

          case '=':
            if (!hasOwnProperty.call(attrs, attrName)) {
              if (optional) break;
              attrs[attrName] = undefined;
            }
            if (optional && !attrs[attrName]) break;

            parentGet = $parse(attrs[attrName]);
            if (parentGet.literal) {
              compare = equals;
            } else {
              // eslint-disable-next-line no-self-compare
              compare = function simpleCompare(a, b) { return a === b || (a !== a && b !== b); };
            }
            parentSet = parentGet.assign || function() {
              // reset the change, or we will throw this exception on every $digest
              lastValue = destination[scopeName] = parentGet(scope);
              throw $compileMinErr('nonassign',
                  'Expression \'{0}\' in attribute \'{1}\' used with directive \'{2}\' is non-assignable!',
                  attrs[attrName], attrName, directive.name);
            };
            lastValue = destination[scopeName] = parentGet(scope);
            var parentValueWatch = function parentValueWatch(parentValue) {
              if (!compare(parentValue, destination[scopeName])) {
                // we are out of sync and need to copy
                if (!compare(parentValue, lastValue)) {
                  // parent changed and it has precedence
                  destination[scopeName] = parentValue;
                } else {
                  // if the parent can be assigned then do so
                  parentSet(scope, parentValue = destination[scopeName]);
                }
              }
              lastValue = parentValue;
              return lastValue;
            };
            parentValueWatch.$stateful = true;
            if (definition.collection) {
              removeWatch = scope.$watchCollection(attrs[attrName], parentValueWatch);
            } else {
              removeWatch = scope.$watch($parse(attrs[attrName], parentValueWatch), null, parentGet.literal);
            }
            removeWatchCollection.push(removeWatch);
            break;

          case '<':
            if (!hasOwnProperty.call(attrs, attrName)) {
              if (optional) break;
              attrs[attrName] = undefined;
            }
            if (optional && !attrs[attrName]) break;

            parentGet = $parse(attrs[attrName]);
            var deepWatch = parentGet.literal;

            var initialValue = destination[scopeName] = parentGet(scope);
            initialChanges[scopeName] = new SimpleChange(_UNINITIALIZED_VALUE, destination[scopeName]);

            removeWatch = scope.$watch(parentGet, function parentValueWatchAction(newValue, oldValue) {
              if (oldValue === newValue) {
                if (oldValue === initialValue || (deepWatch && equals(oldValue, initialValue))) {
                  return;
                }
                oldValue = initialValue;
              }
              recordChanges(scopeName, newValue, oldValue);
              destination[scopeName] = newValue;
            }, deepWatch);

            removeWatchCollection.push(removeWatch);
            break;

          case '&':
            // Don't assign Object.prototype method to scope
            parentGet = attrs.hasOwnProperty(attrName) ? $parse(attrs[attrName]) : noop;

            // Don't assign noop to destination if expression is not valid
            if (parentGet === noop && optional) break;

            destination[scopeName] = function(locals) {
              return parentGet(scope, locals);
            };
            break;
        }
      });

      function recordChanges(key, currentValue, previousValue) {
        if (isFunction(destination.$onChanges) && currentValue !== previousValue &&
            // eslint-disable-next-line no-self-compare
            (currentValue === currentValue || previousValue === previousValue)) {
          // If we have not already scheduled the top level onChangesQueue handler then do so now
          if (!onChangesQueue) {
            scope.$$postDigest(flushOnChangesQueue);
            onChangesQueue = [];
          }
          // If we have not already queued a trigger of onChanges for this controller then do so now
          if (!changes) {
            changes = {};
            onChangesQueue.push(triggerOnChangesHook);
          }
          // If the has been a change on this property already then we need to reuse the previous value
          if (changes[key]) {
            previousValue = changes[key].previousValue;
          }
          // Store this change
          changes[key] = new SimpleChange(previousValue, currentValue);
        }
      }

      function triggerOnChangesHook() {
        destination.$onChanges(changes);
        // Now clear the changes so that we schedule onChanges when more changes arrive
        changes = undefined;
      }

      return {
        initialChanges: initialChanges,
        removeWatches: removeWatchCollection.length && function removeWatches() {
          for (var i = 0, ii = removeWatchCollection.length; i < ii; ++i) {
            removeWatchCollection[i]();
          }
        }
      };
    }
  }];
}

function SimpleChange(previous, current) {
  this.previousValue = previous;
  this.currentValue = current;
}
SimpleChange.prototype.isFirstChange = function() { return this.previousValue === _UNINITIALIZED_VALUE; };


var PREFIX_REGEXP = /^((?:x|data)[:\-_])/i;
/**
 * Converts all accepted directives format into proper directive name.
 * @param name Name to normalize
 */
function directiveNormalize(name) {
  return camelCase(name.replace(PREFIX_REGEXP, ''));
}

/**
 * @ngdoc type
 * @name $compile.directive.Attributes
 *
 * @description
 * A shared object between directive compile / linking functions which contains normalized DOM
 * element attributes. The values reflect current binding state `{{ }}`. The normalization is
 * needed since all of these are treated as equivalent in Angular:
 *
 * ```
 *    <span ng:bind="a" ng-bind="a" data-ng-bind="a" x-ng-bind="a">
 * ```
 */

/**
 * @ngdoc property
 * @name $compile.directive.Attributes#$attr
 *
 * @description
 * A map of DOM element attribute names to the normalized name. This is
 * needed to do reverse lookup from normalized name back to actual name.
 */


/**
 * @ngdoc method
 * @name $compile.directive.Attributes#$set
 * @kind function
 *
 * @description
 * Set DOM element attribute value.
 *
 *
 * @param {string} name Normalized element attribute name of the property to modify. The name is
 *          reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}
 *          property to the original name.
 * @param {string} value Value to set the attribute to. The value can be an interpolated string.
 */



/**
 * Closure compiler type information
 */

function nodesetLinkingFn(
  /* angular.Scope */ scope,
  /* NodeList */ nodeList,
  /* Element */ rootElement,
  /* function(Function) */ boundTranscludeFn
) {}

function directiveLinkingFn(
  /* nodesetLinkingFn */ nodesetLinkingFn,
  /* angular.Scope */ scope,
  /* Node */ node,
  /* Element */ rootElement,
  /* function(Function) */ boundTranscludeFn
) {}

function tokenDifference(str1, str2) {
  var values = '',
      tokens1 = str1.split(/\s+/),
      tokens2 = str2.split(/\s+/);

  outer:
  for (var i = 0; i < tokens1.length; i++) {
    var token = tokens1[i];
    for (var j = 0; j < tokens2.length; j++) {
      if (token === tokens2[j]) continue outer;
    }
    values += (values.length > 0 ? ' ' : '') + token;
  }
  return values;
}

function removeComments(jqNodes) {
  jqNodes = jqLite(jqNodes);
  var i = jqNodes.length;

  if (i <= 1) {
    return jqNodes;
  }

  while (i--) {
    var node = jqNodes[i];
    if (node.nodeType === NODE_TYPE_COMMENT ||
       (node.nodeType === NODE_TYPE_TEXT && node.nodeValue.trim() === '')) {
         splice.call(jqNodes, i, 1);
    }
  }
  return jqNodes;
}

var $controllerMinErr = minErr('$controller');


var CNTRL_REG = /^(\S+)(\s+as\s+([\w$]+))?$/;
function identifierForController(controller, ident) {
  if (ident && isString(ident)) return ident;
  if (isString(controller)) {
    var match = CNTRL_REG.exec(controller);
    if (match) return match[3];
  }
}


/**
 * @ngdoc provider
 * @name $controllerProvider
 * @this
 *
 * @description
 * The {@link ng.$controller $controller service} is used by Angular to create new
 * controllers.
 *
 * This provider allows controller registration via the
 * {@link ng.$controllerProvider#register register} method.
 */
function $ControllerProvider() {
  var controllers = {},
      globals = false;

  /**
   * @ngdoc method
   * @name $controllerProvider#has
   * @param {string} name Controller name to check.
   */
  this.has = function(name) {
    return controllers.hasOwnProperty(name);
  };

  /**
   * @ngdoc method
   * @name $controllerProvider#register
   * @param {string|Object} name Controller name, or an object map of controllers where the keys are
   *    the names and the values are the constructors.
   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI
   *    annotations in the array notation).
   */
  this.register = function(name, constructor) {
    assertNotHasOwnProperty(name, 'controller');
    if (isObject(name)) {
      extend(controllers, name);
    } else {
      controllers[name] = constructor;
    }
  };

  /**
   * @ngdoc method
   * @name $controllerProvider#allowGlobals
   *
   * @deprecated
   * sinceVersion="v1.3.0"
   * removeVersion="v1.7.0"
   * This method of finding controllers has been deprecated.
   *
   * @description If called, allows `$controller` to find controller constructors on `window`   *
   */
  this.allowGlobals = function() {
    globals = true;
  };


  this.$get = ['$injector', '$window', function($injector, $window) {

    /**
     * @ngdoc service
     * @name $controller
     * @requires $injector
     *
     * @param {Function|string} constructor If called with a function then it's considered to be the
     *    controller constructor function. Otherwise it's considered to be a string which is used
     *    to retrieve the controller constructor using the following steps:
     *
     *    * check if a controller with given name is registered via `$controllerProvider`
     *    * check if evaluating the string on the current scope returns a constructor
     *    * if $controllerProvider#allowGlobals, check `window[constructor]` on the global
     *      `window` object (not recommended)
     *
     *    The string can use the `controller as property` syntax, where the controller instance is published
     *    as the specified property on the `scope`; the `scope` must be injected into `locals` param for this
     *    to work correctly.
     *
     * @param {Object} locals Injection locals for Controller.
     * @return {Object} Instance of given controller.
     *
     * @description
     * `$controller` service is responsible for instantiating controllers.
     *
     * It's just a simple call to {@link auto.$injector $injector}, but extracted into
     * a service, so that one can override this service with [BC version](https://gist.github.com/1649788).
     */
    return function $controller(expression, locals, later, ident) {
      // PRIVATE API:
      //   param `later` --- indicates that the controller's constructor is invoked at a later time.
      //                     If true, $controller will allocate the object with the correct
      //                     prototype chain, but will not invoke the controller until a returned
      //                     callback is invoked.
      //   param `ident` --- An optional label which overrides the label parsed from the controller
      //                     expression, if any.
      var instance, match, constructor, identifier;
      later = later === true;
      if (ident && isString(ident)) {
        identifier = ident;
      }

      if (isString(expression)) {
        match = expression.match(CNTRL_REG);
        if (!match) {
          throw $controllerMinErr('ctrlfmt',
            'Badly formed controller string \'{0}\'. ' +
            'Must match `__name__ as __id__` or `__name__`.', expression);
        }
        constructor = match[1];
        identifier = identifier || match[3];
        expression = controllers.hasOwnProperty(constructor)
            ? controllers[constructor]
            : getter(locals.$scope, constructor, true) ||
                (globals ? getter($window, constructor, true) : undefined);

        if (!expression) {
          throw $controllerMinErr('ctrlreg',
            'The controller with the name \'{0}\' is not registered.', constructor);
        }

        assertArgFn(expression, constructor, true);
      }

      if (later) {
        // Instantiate controller later:
        // This machinery is used to create an instance of the object before calling the
        // controller's constructor itself.
        //
        // This allows properties to be added to the controller before the constructor is
        // invoked. Primarily, this is used for isolate scope bindings in $compile.
        //
        // This feature is not intended for use by applications, and is thus not documented
        // publicly.
        // Object creation: http://jsperf.com/create-constructor/2
        var controllerPrototype = (isArray(expression) ?
          expression[expression.length - 1] : expression).prototype;
        instance = Object.create(controllerPrototype || null);

        if (identifier) {
          addIdentifier(locals, identifier, instance, constructor || expression.name);
        }

        return extend(function $controllerInit() {
          var result = $injector.invoke(expression, instance, locals, constructor);
          if (result !== instance && (isObject(result) || isFunction(result))) {
            instance = result;
            if (identifier) {
              // If result changed, re-assign controllerAs value to scope.
              addIdentifier(locals, identifier, instance, constructor || expression.name);
            }
          }
          return instance;
        }, {
          instance: instance,
          identifier: identifier
        });
      }

      instance = $injector.instantiate(expression, locals, constructor);

      if (identifier) {
        addIdentifier(locals, identifier, instance, constructor || expression.name);
      }

      return instance;
    };

    function addIdentifier(locals, identifier, instance, name) {
      if (!(locals && isObject(locals.$scope))) {
        throw minErr('$controller')('noscp',
          'Cannot export controller \'{0}\' as \'{1}\'! No $scope object provided via `locals`.',
          name, identifier);
      }

      locals.$scope[identifier] = instance;
    }
  }];
}

/**
 * @ngdoc service
 * @name $document
 * @requires $window
 * @this
 *
 * @description
 * A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.
 *
 * @example
   <example module="documentExample" name="document">
     <file name="index.html">
       <div ng-controller="ExampleController">
         <p>$document title: <b ng-bind="title"></b></p>
         <p>window.document title: <b ng-bind="windowTitle"></b></p>
       </div>
     </file>
     <file name="script.js">
       angular.module('documentExample', [])
         .controller('ExampleController', ['$scope', '$document', function($scope, $document) {
           $scope.title = $document[0].title;
           $scope.windowTitle = angular.element(window.document)[0].title;
         }]);
     </file>
   </example>
 */
function $DocumentProvider() {
  this.$get = ['$window', function(window) {
    return jqLite(window.document);
  }];
}

/**
 * @ngdoc service
 * @name $exceptionHandler
 * @requires ng.$log
 * @this
 *
 * @description
 * Any uncaught exception in angular expressions is delegated to this service.
 * The default implementation simply delegates to `$log.error` which logs it into
 * the browser console.
 *
 * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by
 * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.
 *
 * ## Example:
 *
 * The example below will overwrite the default `$exceptionHandler` in order to (a) log uncaught
 * errors to the backend for later inspection by the developers and (b) to use `$log.warn()` instead
 * of `$log.error()`.
 *
 * ```js
 *   angular.
 *     module('exceptionOverwrite', []).
 *     factory('$exceptionHandler', ['$log', 'logErrorsToBackend', function($log, logErrorsToBackend) {
 *       return function myExceptionHandler(exception, cause) {
 *         logErrorsToBackend(exception, cause);
 *         $log.warn(exception, cause);
 *       };
 *     }]);
 * ```
 *
 * <hr />
 * Note, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`
 * methods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}
 * (unless executed during a digest).
 *
 * If you wish, you can manually delegate exceptions, e.g.
 * `try { ... } catch(e) { $exceptionHandler(e); }`
 *
 * @param {Error} exception Exception associated with the error.
 * @param {string=} cause Optional information about the context in which
 *       the error was thrown.
 *
 */
function $ExceptionHandlerProvider() {
  this.$get = ['$log', function($log) {
    return function(exception, cause) {
      $log.error.apply($log, arguments);
    };
  }];
}

var $$ForceReflowProvider = /** @this */ function() {
  this.$get = ['$document', function($document) {
    return function(domNode) {
      //the line below will force the browser to perform a repaint so
      //that all the animated elements within the animation frame will
      //be properly updated and drawn on screen. This is required to
      //ensure that the preparation animation is properly flushed so that
      //the active state picks up from there. DO NOT REMOVE THIS LINE.
      //DO NOT OPTIMIZE THIS LINE. THE MINIFIER WILL REMOVE IT OTHERWISE WHICH
      //WILL RESULT IN AN UNPREDICTABLE BUG THAT IS VERY HARD TO TRACK DOWN AND
      //WILL TAKE YEARS AWAY FROM YOUR LIFE.
      if (domNode) {
        if (!domNode.nodeType && domNode instanceof jqLite) {
          domNode = domNode[0];
        }
      } else {
        domNode = $document[0].body;
      }
      return domNode.offsetWidth + 1;
    };
  }];
};

var APPLICATION_JSON = 'application/json';
var CONTENT_TYPE_APPLICATION_JSON = {'Content-Type': APPLICATION_JSON + ';charset=utf-8'};
var JSON_START = /^\[|^\{(?!\{)/;
var JSON_ENDS = {
  '[': /]$/,
  '{': /}$/
};
var JSON_PROTECTION_PREFIX = /^\)]\}',?\n/;
var $httpMinErr = minErr('$http');
var $httpMinErrLegacyFn = function(method) {
  return function() {
    throw $httpMinErr('legacy', 'The method `{0}` on the promise returned from `$http` has been disabled.', method);
  };
};

function serializeValue(v) {
  if (isObject(v)) {
    return isDate(v) ? v.toISOString() : toJson(v);
  }
  return v;
}


/** @this */
function $HttpParamSerializerProvider() {
  /**
   * @ngdoc service
   * @name $httpParamSerializer
   * @description
   *
   * Default {@link $http `$http`} params serializer that converts objects to strings
   * according to the following rules:
   *
   * * `{'foo': 'bar'}` results in `foo=bar`
   * * `{'foo': Date.now()}` results in `foo=2015-04-01T09%3A50%3A49.262Z` (`toISOString()` and encoded representation of a Date object)
   * * `{'foo': ['bar', 'baz']}` results in `foo=bar&foo=baz` (repeated key for each array element)
   * * `{'foo': {'bar':'baz'}}` results in `foo=%7B%22bar%22%3A%22baz%22%7D` (stringified and encoded representation of an object)
   *
   * Note that serializer will sort the request parameters alphabetically.
   * */

  this.$get = function() {
    return function ngParamSerializer(params) {
      if (!params) return '';
      var parts = [];
      forEachSorted(params, function(value, key) {
        if (value === null || isUndefined(value)) return;
        if (isArray(value)) {
          forEach(value, function(v) {
            parts.push(encodeUriQuery(key)  + '=' + encodeUriQuery(serializeValue(v)));
          });
        } else {
          parts.push(encodeUriQuery(key) + '=' + encodeUriQuery(serializeValue(value)));
        }
      });

      return parts.join('&');
    };
  };
}

/** @this */
function $HttpParamSerializerJQLikeProvider() {
  /**
   * @ngdoc service
   * @name $httpParamSerializerJQLike
   *
   * @description
   *
   * Alternative {@link $http `$http`} params serializer that follows
   * jQuery's [`param()`](http://api.jquery.com/jquery.param/) method logic.
   * The serializer will also sort the params alphabetically.
   *
   * To use it for serializing `$http` request parameters, set it as the `paramSerializer` property:
   *
   * ```js
   * $http({
   *   url: myUrl,
   *   method: 'GET',
   *   params: myParams,
   *   paramSerializer: '$httpParamSerializerJQLike'
   * });
   * ```
   *
   * It is also possible to set it as the default `paramSerializer` in the
   * {@link $httpProvider#defaults `$httpProvider`}.
   *
   * Additionally, you can inject the serializer and use it explicitly, for example to serialize
   * form data for submission:
   *
   * ```js
   * .controller(function($http, $httpParamSerializerJQLike) {
   *   //...
   *
   *   $http({
   *     url: myUrl,
   *     method: 'POST',
   *     data: $httpParamSerializerJQLike(myData),
   *     headers: {
   *       'Content-Type': 'application/x-www-form-urlencoded'
   *     }
   *   });
   *
   * });
   * ```
   *
   * */
  this.$get = function() {
    return function jQueryLikeParamSerializer(params) {
      if (!params) return '';
      var parts = [];
      serialize(params, '', true);
      return parts.join('&');

      function serialize(toSerialize, prefix, topLevel) {
        if (toSerialize === null || isUndefined(toSerialize)) return;
        if (isArray(toSerialize)) {
          forEach(toSerialize, function(value, index) {
            serialize(value, prefix + '[' + (isObject(value) ? index : '') + ']');
          });
        } else if (isObject(toSerialize) && !isDate(toSerialize)) {
          forEachSorted(toSerialize, function(value, key) {
            serialize(value, prefix +
                (topLevel ? '' : '[') +
                key +
                (topLevel ? '' : ']'));
          });
        } else {
          parts.push(encodeUriQuery(prefix) + '=' + encodeUriQuery(serializeValue(toSerialize)));
        }
      }
    };
  };
}

function defaultHttpResponseTransform(data, headers) {
  if (isString(data)) {
    // Strip json vulnerability protection prefix and trim whitespace
    var tempData = data.replace(JSON_PROTECTION_PREFIX, '').trim();

    if (tempData) {
      var contentType = headers('Content-Type');
      if ((contentType && (contentType.indexOf(APPLICATION_JSON) === 0)) || isJsonLike(tempData)) {
        data = fromJson(tempData);
      }
    }
  }

  return data;
}

function isJsonLike(str) {
    var jsonStart = str.match(JSON_START);
    return jsonStart && JSON_ENDS[jsonStart[0]].test(str);
}

/**
 * Parse headers into key value object
 *
 * @param {string} headers Raw headers as a string
 * @returns {Object} Parsed headers as key value object
 */
function parseHeaders(headers) {
  var parsed = createMap(), i;

  function fillInParsed(key, val) {
    if (key) {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  }

  if (isString(headers)) {
    forEach(headers.split('\n'), function(line) {
      i = line.indexOf(':');
      fillInParsed(lowercase(trim(line.substr(0, i))), trim(line.substr(i + 1)));
    });
  } else if (isObject(headers)) {
    forEach(headers, function(headerVal, headerKey) {
      fillInParsed(lowercase(headerKey), trim(headerVal));
    });
  }

  return parsed;
}


/**
 * Returns a function that provides access to parsed headers.
 *
 * Headers are lazy parsed when first requested.
 * @see parseHeaders
 *
 * @param {(string|Object)} headers Headers to provide access to.
 * @returns {function(string=)} Returns a getter function which if called with:
 *
 *   - if called with an argument returns a single header value or null
 *   - if called with no arguments returns an object containing all headers.
 */
function headersGetter(headers) {
  var headersObj;

  return function(name) {
    if (!headersObj) headersObj =  parseHeaders(headers);

    if (name) {
      var value = headersObj[lowercase(name)];
      if (value === undefined) {
        value = null;
      }
      return value;
    }

    return headersObj;
  };
}


/**
 * Chain all given functions
 *
 * This function is used for both request and response transforming
 *
 * @param {*} data Data to transform.
 * @param {function(string=)} headers HTTP headers getter fn.
 * @param {number} status HTTP status code of the response.
 * @param {(Function|Array.<Function>)} fns Function or an array of functions.
 * @returns {*} Transformed data.
 */
function transformData(data, headers, status, fns) {
  if (isFunction(fns)) {
    return fns(data, headers, status);
  }

  forEach(fns, function(fn) {
    data = fn(data, headers, status);
  });

  return data;
}


function isSuccess(status) {
  return 200 <= status && status < 300;
}


/**
 * @ngdoc provider
 * @name $httpProvider
 * @this
 *
 * @description
 * Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.
 * */
function $HttpProvider() {
  /**
   * @ngdoc property
   * @name $httpProvider#defaults
   * @description
   *
   * Object containing default values for all {@link ng.$http $http} requests.
   *
   * - **`defaults.cache`** - {boolean|Object} - A boolean value or object created with
   * {@link ng.$cacheFactory `$cacheFactory`} to enable or disable caching of HTTP responses
   * by default. See {@link $http#caching $http Caching} for more information.
   *
   * - **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.
   * Defaults value is `'XSRF-TOKEN'`.
   *
   * - **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the
   * XSRF token. Defaults value is `'X-XSRF-TOKEN'`.
   *
   * - **`defaults.headers`** - {Object} - Default headers for all $http requests.
   * Refer to {@link ng.$http#setting-http-headers $http} for documentation on
   * setting default headers.
   *     - **`defaults.headers.common`**
   *     - **`defaults.headers.post`**
   *     - **`defaults.headers.put`**
   *     - **`defaults.headers.patch`**
   *
   *
   * - **`defaults.paramSerializer`** - `{string|function(Object<string,string>):string}` - A function
   *  used to the prepare string representation of request parameters (specified as an object).
   *  If specified as string, it is interpreted as a function registered with the {@link auto.$injector $injector}.
   *  Defaults to {@link ng.$httpParamSerializer $httpParamSerializer}.
   *
   **/
  var defaults = this.defaults = {
    // transform incoming response data
    transformResponse: [defaultHttpResponseTransform],

    // transform outgoing request data
    transformRequest: [function(d) {
      return isObject(d) && !isFile(d) && !isBlob(d) && !isFormData(d) ? toJson(d) : d;
    }],

    // default headers
    headers: {
      common: {
        'Accept': 'application/json, text/plain, */*'
      },
      post:   shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
      put:    shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
      patch:  shallowCopy(CONTENT_TYPE_APPLICATION_JSON)
    },

    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',

    paramSerializer: '$httpParamSerializer'
  };

  var useApplyAsync = false;
  /**
   * @ngdoc method
   * @name $httpProvider#useApplyAsync
   * @description
   *
   * Configure $http service to combine processing of multiple http responses received at around
   * the same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in
   * significant performance improvement for bigger applications that make many HTTP requests
   * concurrently (common during application bootstrap).
   *
   * Defaults to false. If no value is specified, returns the current configured value.
   *
   * @param {boolean=} value If true, when requests are loaded, they will schedule a deferred
   *    "apply" on the next tick, giving time for subsequent requests in a roughly ~10ms window
   *    to load and share the same digest cycle.
   *
   * @returns {boolean|Object} If a value is specified, returns the $httpProvider for chaining.
   *    otherwise, returns the current configured value.
   **/
  this.useApplyAsync = function(value) {
    if (isDefined(value)) {
      useApplyAsync = !!value;
      return this;
    }
    return useApplyAsync;
  };

  var useLegacyPromise = true;
  /**
   * @ngdoc method
   * @name $httpProvider#useLegacyPromiseExtensions
   * @description
   *
   * @deprecated
   * sinceVersion="v1.4.4"
   * removeVersion="v1.6.0"
   * This method will be removed in v1.6.0 along with the legacy promise methods.
   *
   * Configure `$http` service to return promises without the shorthand methods `success` and `error`.
   * This should be used to make sure that applications work without these methods.
   *
   * Defaults to true. If no value is specified, returns the current configured value.
   *
   * @param {boolean=} value If true, `$http` will return a promise with the deprecated legacy `success` and `error` methods.
   *
   * @returns {boolean|Object} If a value is specified, returns the $httpProvider for chaining.
   *    otherwise, returns the current configured value.
   **/
  this.useLegacyPromiseExtensions = function(value) {
    if (isDefined(value)) {
      useLegacyPromise = !!value;
      return this;
    }
    return useLegacyPromise;
  };

  /**
   * @ngdoc property
   * @name $httpProvider#interceptors
   * @description
   *
   * Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}
   * pre-processing of request or postprocessing of responses.
   *
   * These service factories are ordered by request, i.e. they are applied in the same order as the
   * array, on request, but reverse order, on response.
   *
   * {@link ng.$http#interceptors Interceptors detailed info}
   **/
  var interceptorFactories = this.interceptors = [];

  this.$get = ['$httpBackend', '$$cookieReader', '$cacheFactory', '$rootScope', '$q', '$injector',
      function($httpBackend, $$cookieReader, $cacheFactory, $rootScope, $q, $injector) {

    var defaultCache = $cacheFactory('$http');

    /**
     * Make sure that default param serializer is exposed as a function
     */
    defaults.paramSerializer = isString(defaults.paramSerializer) ?
      $injector.get(defaults.paramSerializer) : defaults.paramSerializer;

    /**
     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.
     * The reversal is needed so that we can build up the interception chain around the
     * server request.
     */
    var reversedInterceptors = [];

    forEach(interceptorFactories, function(interceptorFactory) {
      reversedInterceptors.unshift(isString(interceptorFactory)
          ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory));
    });

    /**
     * @ngdoc service
     * @kind function
     * @name $http
     * @requires ng.$httpBackend
     * @requires $cacheFactory
     * @requires $rootScope
     * @requires $q
     * @requires $injector
     *
     * @description
     * The `$http` service is a core Angular service that facilitates communication with the remote
     * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)
     * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).
     *
     * For unit testing applications that use `$http` service, see
     * {@link ngMock.$httpBackend $httpBackend mock}.
     *
     * For a higher level of abstraction, please check out the {@link ngResource.$resource
     * $resource} service.
     *
     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by
     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage
     * it is important to familiarize yourself with these APIs and the guarantees they provide.
     *
     *
     * ## General usage
     * The `$http` service is a function which takes a single argument — a {@link $http#usage configuration object} —
     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}.
     *
     * ```js
     *   // Simple GET request example:
     *   $http({
     *     method: 'GET',
     *     url: '/someUrl'
     *   }).then(function successCallback(response) {
     *       // this callback will be called asynchronously
     *       // when the response is available
     *     }, function errorCallback(response) {
     *       // called asynchronously if an error occurs
     *       // or server returns response with an error status.
     *     });
     * ```
     *
     * The response object has these properties:
     *
     *   - **data** – `{string|Object}` – The response body transformed with the transform
     *     functions.
     *   - **status** – `{number}` – HTTP status code of the response.
     *   - **headers** – `{function([headerName])}` – Header getter function.
     *   - **config** – `{Object}` – The configuration object that was used to generate the request.
     *   - **statusText** – `{string}` – HTTP status text of the response.
     *
     * A response status code between 200 and 299 is considered a success status and will result in
     * the success callback being called. Any response status code outside of that range is
     * considered an error status and will result in the error callback being called.
     * Also, status codes less than -1 are normalized to zero. -1 usually means the request was
     * aborted, e.g. using a `config.timeout`.
     * Note that if the response is a redirect, XMLHttpRequest will transparently follow it, meaning
     * that the outcome (success or error) will be determined by the final response status code.
     *
     *
     * ## Shortcut methods
     *
     * Shortcut methods are also available. All shortcut methods require passing in the URL, and
     * request data must be passed in for POST/PUT requests. An optional config can be passed as the
     * last argument.
     *
     * ```js
     *   $http.get('/someUrl', config).then(successCallback, errorCallback);
     *   $http.post('/someUrl', data, config).then(successCallback, errorCallback);
     * ```
     *
     * Complete list of shortcut methods:
     *
     * - {@link ng.$http#get $http.get}
     * - {@link ng.$http#head $http.head}
     * - {@link ng.$http#post $http.post}
     * - {@link ng.$http#put $http.put}
     * - {@link ng.$http#delete $http.delete}
     * - {@link ng.$http#jsonp $http.jsonp}
     * - {@link ng.$http#patch $http.patch}
     *
     *
     * ## Writing Unit Tests that use $http
     * When unit testing (using {@link ngMock ngMock}), it is necessary to call
     * {@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending
     * request using trained responses.
     *
     * ```
     * $httpBackend.expectGET(...);
     * $http.get(...);
     * $httpBackend.flush();
     * ```
     *
     * ## Deprecation Notice
     * <div class="alert alert-danger">
     *   The `$http` legacy promise methods `success` and `error` have been deprecated and will be
     *   removed in v1.6.0.
     *   Use the standard `then` method instead.
     *   If {@link $httpProvider#useLegacyPromiseExtensions `$httpProvider.useLegacyPromiseExtensions`} is set to
     *   `false` then these methods will throw {@link $http:legacy `$http/legacy`} error.
     * </div>
     *
     * ## Setting HTTP Headers
     *
     * The $http service will automatically add certain HTTP headers to all requests. These defaults
     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration
     * object, which currently contains this default configuration:
     *
     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):
     *   - <code>Accept: application/json, text/plain, \*&#65279;/&#65279;\*</code>
     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)
     *   - `Content-Type: application/json`
     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)
     *   - `Content-Type: application/json`
     *
     * To add or overwrite these defaults, simply add or remove a property from these configuration
     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object
     * with the lowercased HTTP method name as the key, e.g.
     * `$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }`.
     *
     * The defaults can also be set at runtime via the `$http.defaults` object in the same
     * fashion. For example:
     *
     * ```
     * module.run(function($http) {
     *   $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w';
     * });
     * ```
     *
     * In addition, you can supply a `headers` property in the config object passed when
     * calling `$http(config)`, which overrides the defaults without changing them globally.
     *
     * To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,
     * Use the `headers` property, setting the desired header to `undefined`. For example:
     *
     * ```js
     * var req = {
     *  method: 'POST',
     *  url: 'http://example.com',
     *  headers: {
     *    'Content-Type': undefined
     *  },
     *  data: { test: 'test' }
     * }
     *
     * $http(req).then(function(){...}, function(){...});
     * ```
     *
     * ## Transforming Requests and Responses
     *
     * Both requests and responses can be transformed using transformation functions: `transformRequest`
     * and `transformResponse`. These properties can be a single function that returns
     * the transformed value (`function(data, headersGetter, status)`) or an array of such transformation functions,
     * which allows you to `push` or `unshift` a new transformation function into the transformation chain.
     *
     * <div class="alert alert-warning">
     * **Note:** Angular does not make a copy of the `data` parameter before it is passed into the `transformRequest` pipeline.
     * That means changes to the properties of `data` are not local to the transform function (since Javascript passes objects by reference).
     * For example, when calling `$http.get(url, $scope.myObject)`, modifications to the object's properties in a transformRequest
     * function will be reflected on the scope and in any templates where the object is data-bound.
     * To prevent this, transform functions should have no side-effects.
     * If you need to modify properties, it is recommended to make a copy of the data, or create new object to return.
     * </div>
     *
     * ### Default Transformations
     *
     * The `$httpProvider` provider and `$http` service expose `defaults.transformRequest` and
     * `defaults.transformResponse` properties. If a request does not provide its own transformations
     * then these will be applied.
     *
     * You can augment or replace the default transformations by modifying these properties by adding to or
     * replacing the array.
     *
     * Angular provides the following default transformations:
     *
     * Request transformations (`$httpProvider.defaults.transformRequest` and `$http.defaults.transformRequest`):
     *
     * - If the `data` property of the request configuration object contains an object, serialize it
     *   into JSON format.
     *
     * Response transformations (`$httpProvider.defaults.transformResponse` and `$http.defaults.transformResponse`):
     *
     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).
     *  - If JSON response is detected, deserialize it using a JSON parser.
     *
     *
     * ### Overriding the Default Transformations Per Request
     *
     * If you wish to override the request/response transformations only for a single request then provide
     * `transformRequest` and/or `transformResponse` properties on the configuration object passed
     * into `$http`.
     *
     * Note that if you provide these properties on the config object the default transformations will be
     * overwritten. If you wish to augment the default transformations then you must include them in your
     * local transformation array.
     *
     * The following code demonstrates adding a new response transformation to be run after the default response
     * transformations have been run.
     *
     * ```js
     * function appendTransform(defaults, transform) {
     *
     *   // We can't guarantee that the default transformation is an array
     *   defaults = angular.isArray(defaults) ? defaults : [defaults];
     *
     *   // Append the new transformation to the defaults
     *   return defaults.concat(transform);
     * }
     *
     * $http({
     *   url: '...',
     *   method: 'GET',
     *   transformResponse: appendTransform($http.defaults.transformResponse, function(value) {
     *     return doTransform(value);
     *   })
     * });
     * ```
     *
     *
     * ## Caching
     *
     * {@link ng.$http `$http`} responses are not cached by default. To enable caching, you must
     * set the config.cache value or the default cache value to TRUE or to a cache object (created
     * with {@link ng.$cacheFactory `$cacheFactory`}). If defined, the value of config.cache takes
     * precedence over the default cache value.
     *
     * In order to:
     *   * cache all responses - set the default cache value to TRUE or to a cache object
     *   * cache a specific response - set config.cache value to TRUE or to a cache object
     *
     * If caching is enabled, but neither the default cache nor config.cache are set to a cache object,
     * then the default `$cacheFactory("$http")` object is used.
     *
     * The default cache value can be set by updating the
     * {@link ng.$http#defaults `$http.defaults.cache`} property or the
     * {@link $httpProvider#defaults `$httpProvider.defaults.cache`} property.
     *
     * When caching is enabled, {@link ng.$http `$http`} stores the response from the server using
     * the relevant cache object. The next time the same request is made, the response is returned
     * from the cache without sending a request to the server.
     *
     * Take note that:
     *
     *   * Only GET and JSONP requests are cached.
     *   * The cache key is the request URL including search parameters; headers are not considered.
     *   * Cached responses are returned asynchronously, in the same way as responses from the server.
     *   * If multiple identical requests are made using the same cache, which is not yet populated,
     *     one request will be made to the server and remaining requests will return the same response.
     *   * A cache-control header on the response does not affect if or how responses are cached.
     *
     *
     * ## Interceptors
     *
     * Before you start creating interceptors, be sure to understand the
     * {@link ng.$q $q and deferred/promise APIs}.
     *
     * For purposes of global error handling, authentication, or any kind of synchronous or
     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be
     * able to intercept requests before they are handed to the server and
     * responses before they are handed over to the application code that
     * initiated these requests. The interceptors leverage the {@link ng.$q
     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.
     *
     * The interceptors are service factories that are registered with the `$httpProvider` by
     * adding them to the `$httpProvider.interceptors` array. The factory is called and
     * injected with dependencies (if specified) and returns the interceptor.
     *
     * There are two kinds of interceptors (and two kinds of rejection interceptors):
     *
     *   * `request`: interceptors get called with a http {@link $http#usage config} object. The function is free to
     *     modify the `config` object or create a new one. The function needs to return the `config`
     *     object directly, or a promise containing the `config` or a new `config` object.
     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or
     *     resolved with a rejection.
     *   * `response`: interceptors get called with http `response` object. The function is free to
     *     modify the `response` object or create a new one. The function needs to return the `response`
     *     object directly, or as a promise containing the `response` or a new `response` object.
     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or
     *     resolved with a rejection.
     *
     *
     * ```js
     *   // register the interceptor as a service
     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {
     *     return {
     *       // optional method
     *       'request': function(config) {
     *         // do something on success
     *         return config;
     *       },
     *
     *       // optional method
     *      'requestError': function(rejection) {
     *         // do something on error
     *         if (canRecover(rejection)) {
     *           return responseOrNewPromise
     *         }
     *         return $q.reject(rejection);
     *       },
     *
     *
     *
     *       // optional method
     *       'response': function(response) {
     *         // do something on success
     *         return response;
     *       },
     *
     *       // optional method
     *      'responseError': function(rejection) {
     *         // do something on error
     *         if (canRecover(rejection)) {
     *           return responseOrNewPromise
     *         }
     *         return $q.reject(rejection);
     *       }
     *     };
     *   });
     *
     *   $httpProvider.interceptors.push('myHttpInterceptor');
     *
     *
     *   // alternatively, register the interceptor via an anonymous factory
     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {
     *     return {
     *      'request': function(config) {
     *          // same as above
     *       },
     *
     *       'response': function(response) {
     *          // same as above
     *       }
     *     };
     *   });
     * ```
     *
     * ## Security Considerations
     *
     * When designing web applications, consider security threats from:
     *
     * - [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)
     * - [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)
     *
     * Both server and the client must cooperate in order to eliminate these threats. Angular comes
     * pre-configured with strategies that address these issues, but for this to work backend server
     * cooperation is required.
     *
     * ### JSON Vulnerability Protection
     *
     * A [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)
     * allows third party website to turn your JSON resource URL into
     * [JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To
     * counter this your server can prefix all JSON requests with following string `")]}',\n"`.
     * Angular will automatically strip the prefix before processing it as JSON.
     *
     * For example if your server needs to return:
     * ```js
     * ['one','two']
     * ```
     *
     * which is vulnerable to attack, your server can return:
     * ```js
     * )]}',
     * ['one','two']
     * ```
     *
     * Angular will strip the prefix, before processing the JSON.
     *
     *
     * ### Cross Site Request Forgery (XSRF) Protection
     *
     * [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is an attack technique by
     * which the attacker can trick an authenticated user into unknowingly executing actions on your
     * website. Angular provides a mechanism to counter XSRF. When performing XHR requests, the
     * $http service reads a token from a cookie (by default, `XSRF-TOKEN`) and sets it as an HTTP
     * header (`X-XSRF-TOKEN`). Since only JavaScript that runs on your domain could read the
     * cookie, your server can be assured that the XHR came from JavaScript running on your domain.
     * The header will not be set for cross-domain requests.
     *
     * To take advantage of this, your server needs to set a token in a JavaScript readable session
     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the
     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure
     * that only JavaScript running on your domain could have sent the request. The token must be
     * unique for each user and must be verifiable by the server (to prevent the JavaScript from
     * making up its own tokens). We recommend that the token is a digest of your site's
     * authentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)
     * for added security.
     *
     * The name of the headers can be specified using the xsrfHeaderName and xsrfCookieName
     * properties of either $httpProvider.defaults at config-time, $http.defaults at run-time,
     * or the per-request config object.
     *
     * In order to prevent collisions in environments where multiple Angular apps share the
     * same domain or subdomain, we recommend that each application uses unique cookie name.
     *
     * @param {object} config Object describing the request to be made and how it should be
     *    processed. The object has following properties:
     *
     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)
     *    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.
     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be serialized
     *      with the `paramSerializer` and appended as GET parameters.
     *    - **data** – `{string|Object}` – Data to be sent as the request message data.
     *    - **headers** – `{Object}` – Map of strings or functions which return strings representing
     *      HTTP headers to send to the server. If the return value of a function is null, the
     *      header will not be sent. Functions accept a config object as an argument.
     *    - **eventHandlers** - `{Object}` - Event listeners to be bound to the XMLHttpRequest object.
     *      To bind events to the XMLHttpRequest upload object, use `uploadEventHandlers`.
     *      The handler will be called in the context of a `$apply` block.
     *    - **uploadEventHandlers** - `{Object}` - Event listeners to be bound to the XMLHttpRequest upload
     *      object. To bind events to the XMLHttpRequest object, use `eventHandlers`.
     *      The handler will be called in the context of a `$apply` block.
     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.
     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.
     *    - **transformRequest** –
     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
     *      transform function or an array of such functions. The transform function takes the http
     *      request body and headers and returns its transformed (typically serialized) version.
     *      See {@link ng.$http#overriding-the-default-transformations-per-request
     *      Overriding the Default Transformations}
     *    - **transformResponse** –
     *      `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –
     *      transform function or an array of such functions. The transform function takes the http
     *      response body, headers and status and returns its transformed (typically deserialized) version.
     *      See {@link ng.$http#overriding-the-default-transformations-per-request
     *      Overriding the Default Transformations}
     *    - **paramSerializer** - `{string|function(Object<string,string>):string}` - A function used to
     *      prepare the string representation of request parameters (specified as an object).
     *      If specified as string, it is interpreted as function registered with the
     *      {@link $injector $injector}, which means you can create your own serializer
     *      by registering it as a {@link auto.$provide#service service}.
     *      The default serializer is the {@link $httpParamSerializer $httpParamSerializer};
     *      alternatively, you can use the {@link $httpParamSerializerJQLike $httpParamSerializerJQLike}
     *    - **cache** – `{boolean|Object}` – A boolean value or object created with
     *      {@link ng.$cacheFactory `$cacheFactory`} to enable or disable caching of the HTTP response.
     *      See {@link $http#caching $http Caching} for more information.
     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}
     *      that should abort the request when resolved.
     *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the
     *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)
     *      for more information.
     *    - **responseType** - `{string}` - see
     *      [XMLHttpRequest.responseType](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#xmlhttprequest-responsetype).
     *
     * @returns {HttpPromise} Returns a {@link ng.$q `Promise}` that will be resolved to a response object
     *                        when the request succeeds or fails.
     *
     *
     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending
     *   requests. This is primarily meant to be used for debugging purposes.
     *
     *
     * @example
<example module="httpExample" name="http-service">
<file name="index.html">
  <div ng-controller="FetchController">
    <select ng-model="method" aria-label="Request method">
      <option>GET</option>
      <option>JSONP</option>
    </select>
    <input type="text" ng-model="url" size="80" aria-label="URL" />
    <button id="fetchbtn" ng-click="fetch()">fetch</button><br>
    <button id="samplegetbtn" ng-click="updateModel('GET', 'http-hello.html')">Sample GET</button>
    <button id="samplejsonpbtn"
      ng-click="updateModel('JSONP',
                    'https://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')">
      Sample JSONP
    </button>
    <button id="invalidjsonpbtn"
      ng-click="updateModel('JSONP', 'https://angularjs.org/doesntexist&callback=JSON_CALLBACK')">
        Invalid JSONP
      </button>
    <pre>http status code: {{status}}</pre>
    <pre>http response data: {{data}}</pre>
  </div>
</file>
<file name="script.js">
  angular.module('httpExample', [])
    .controller('FetchController', ['$scope', '$http', '$templateCache',
      function($scope, $http, $templateCache) {
        $scope.method = 'GET';
        $scope.url = 'http-hello.html';

        $scope.fetch = function() {
          $scope.code = null;
          $scope.response = null;

          $http({method: $scope.method, url: $scope.url, cache: $templateCache}).
            then(function(response) {
              $scope.status = response.status;
              $scope.data = response.data;
            }, function(response) {
              $scope.data = response.data || 'Request failed';
              $scope.status = response.status;
          });
        };

        $scope.updateModel = function(method, url) {
          $scope.method = method;
          $scope.url = url;
        };
      }]);
</file>
<file name="http-hello.html">
  Hello, $http!
</file>
<file name="protractor.js" type="protractor">
  var status = element(by.binding('status'));
  var data = element(by.binding('data'));
  var fetchBtn = element(by.id('fetchbtn'));
  var sampleGetBtn = element(by.id('samplegetbtn'));
  var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));

  it('should make an xhr GET request', function() {
    sampleGetBtn.click();
    fetchBtn.click();
    expect(status.getText()).toMatch('200');
    expect(data.getText()).toMatch(/Hello, \$http!/);
  });

// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185
// it('should make a JSONP request to angularjs.org', function() {
//   var sampleJsonpBtn = element(by.id('samplejsonpbtn'));
//   sampleJsonpBtn.click();
//   fetchBtn.click();
//   expect(status.getText()).toMatch('200');
//   expect(data.getText()).toMatch(/Super Hero!/);
// });

  it('should make JSONP request to invalid URL and invoke the error handler',
      function() {
    invalidJsonpBtn.click();
    fetchBtn.click();
    expect(status.getText()).toMatch('0');
    expect(data.getText()).toMatch('Request failed');
  });
</file>
</example>
     */
    function $http(requestConfig) {

      if (!isObject(requestConfig)) {
        throw minErr('$http')('badreq', 'Http request configuration must be an object.  Received: {0}', requestConfig);
      }

      if (!isString(requestConfig.url)) {
        throw minErr('$http')('badreq', 'Http request configuration url must be a string.  Received: {0}', requestConfig.url);
      }

      var config = extend({
        method: 'get',
        transformRequest: defaults.transformRequest,
        transformResponse: defaults.transformResponse,
        paramSerializer: defaults.paramSerializer
      }, requestConfig);

      config.headers = mergeHeaders(requestConfig);
      config.method = uppercase(config.method);
      config.paramSerializer = isString(config.paramSerializer) ?
          $injector.get(config.paramSerializer) : config.paramSerializer;

      var requestInterceptors = [];
      var responseInterceptors = [];
      var promise = $q.when(config);

      // apply interceptors
      forEach(reversedInterceptors, function(interceptor) {
        if (interceptor.request || interceptor.requestError) {
          requestInterceptors.unshift(interceptor.request, interceptor.requestError);
        }
        if (interceptor.response || interceptor.responseError) {
          responseInterceptors.push(interceptor.response, interceptor.responseError);
        }
      });

      promise = chainInterceptors(promise, requestInterceptors);
      promise = promise.then(serverRequest);
      promise = chainInterceptors(promise, responseInterceptors);

      if (useLegacyPromise) {
        promise.success = function(fn) {
          assertArgFn(fn, 'fn');

          promise.then(function(response) {
            fn(response.data, response.status, response.headers, config);
          });
          return promise;
        };

        promise.error = function(fn) {
          assertArgFn(fn, 'fn');

          promise.then(null, function(response) {
            fn(response.data, response.status, response.headers, config);
          });
          return promise;
        };
      } else {
        promise.success = $httpMinErrLegacyFn('success');
        promise.error = $httpMinErrLegacyFn('error');
      }

      return promise;


      function chainInterceptors(promise, interceptors) {
        for (var i = 0, ii = interceptors.length; i < ii;) {
          var thenFn = interceptors[i++];
          var rejectFn = interceptors[i++];

          promise = promise.then(thenFn, rejectFn);
        }

        interceptors.length = 0;

        return promise;
      }

      function executeHeaderFns(headers, config) {
        var headerContent, processedHeaders = {};

        forEach(headers, function(headerFn, header) {
          if (isFunction(headerFn)) {
            headerContent = headerFn(config);
            if (headerContent != null) {
              processedHeaders[header] = headerContent;
            }
          } else {
            processedHeaders[header] = headerFn;
          }
        });

        return processedHeaders;
      }

      function mergeHeaders(config) {
        var defHeaders = defaults.headers,
            reqHeaders = extend({}, config.headers),
            defHeaderName, lowercaseDefHeaderName, reqHeaderName;

        defHeaders = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);

        // using for-in instead of forEach to avoid unnecessary iteration after header has been found
        defaultHeadersIteration:
        for (defHeaderName in defHeaders) {
          lowercaseDefHeaderName = lowercase(defHeaderName);

          for (reqHeaderName in reqHeaders) {
            if (lowercase(reqHeaderName) === lowercaseDefHeaderName) {
              continue defaultHeadersIteration;
            }
          }

          reqHeaders[defHeaderName] = defHeaders[defHeaderName];
        }

        // execute if header value is a function for merged headers
        return executeHeaderFns(reqHeaders, shallowCopy(config));
      }

      function serverRequest(config) {
        var headers = config.headers;
        var reqData = transformData(config.data, headersGetter(headers), undefined, config.transformRequest);

        // strip content-type if data is undefined
        if (isUndefined(reqData)) {
          forEach(headers, function(value, header) {
            if (lowercase(header) === 'content-type') {
              delete headers[header];
            }
          });
        }

        if (isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials)) {
          config.withCredentials = defaults.withCredentials;
        }

        // send request
        return sendReq(config, reqData).then(transformResponse, transformResponse);
      }

      function transformResponse(response) {
        // make a copy since the response must be cacheable
        var resp = extend({}, response);
        resp.data = transformData(response.data, response.headers, response.status,
                                  config.transformResponse);
        return (isSuccess(response.status))
          ? resp
          : $q.reject(resp);
      }
    }

    $http.pendingRequests = [];

    /**
     * @ngdoc method
     * @name $http#get
     *
     * @description
     * Shortcut method to perform `GET` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */

    /**
     * @ngdoc method
     * @name $http#delete
     *
     * @description
     * Shortcut method to perform `DELETE` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */

    /**
     * @ngdoc method
     * @name $http#head
     *
     * @description
     * Shortcut method to perform `HEAD` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */

    /**
     * @ngdoc method
     * @name $http#jsonp
     *
     * @description
     * Shortcut method to perform `JSONP` request.
     * If you would like to customize where and how the callbacks are stored then try overriding
     * or decorating the {@link $jsonpCallbacks} service.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request.
     *                     The name of the callback should be the string `JSON_CALLBACK`.
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */
    createShortMethods('get', 'delete', 'head', 'jsonp');

    /**
     * @ngdoc method
     * @name $http#post
     *
     * @description
     * Shortcut method to perform `POST` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {*} data Request content
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */

    /**
     * @ngdoc method
     * @name $http#put
     *
     * @description
     * Shortcut method to perform `PUT` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {*} data Request content
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */

     /**
      * @ngdoc method
      * @name $http#patch
      *
      * @description
      * Shortcut method to perform `PATCH` request.
      *
      * @param {string} url Relative or absolute URL specifying the destination of the request
      * @param {*} data Request content
      * @param {Object=} config Optional configuration object
      * @returns {HttpPromise} Future object
      */
    createShortMethodsWithData('post', 'put', 'patch');

        /**
         * @ngdoc property
         * @name $http#defaults
         *
         * @description
         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of
         * default headers, withCredentials as well as request and response transformations.
         *
         * See "Setting HTTP Headers" and "Transforming Requests and Responses" sections above.
         */
    $http.defaults = defaults;


    return $http;


    function createShortMethods(names) {
      forEach(arguments, function(name) {
        $http[name] = function(url, config) {
          return $http(extend({}, config || {}, {
            method: name,
            url: url
          }));
        };
      });
    }


    function createShortMethodsWithData(name) {
      forEach(arguments, function(name) {
        $http[name] = function(url, data, config) {
          return $http(extend({}, config || {}, {
            method: name,
            url: url,
            data: data
          }));
        };
      });
    }


    /**
     * Makes the request.
     *
     * !!! ACCESSES CLOSURE VARS:
     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests
     */
    function sendReq(config, reqData) {
      var deferred = $q.defer(),
          promise = deferred.promise,
          cache,
          cachedResp,
          reqHeaders = config.headers,
          url = buildUrl(config.url, config.paramSerializer(config.params));

      $http.pendingRequests.push(config);
      promise.then(removePendingReq, removePendingReq);


      if ((config.cache || defaults.cache) && config.cache !== false &&
          (config.method === 'GET' || config.method === 'JSONP')) {
        cache = isObject(config.cache) ? config.cache
              : isObject(defaults.cache) ? defaults.cache
              : defaultCache;
      }

      if (cache) {
        cachedResp = cache.get(url);
        if (isDefined(cachedResp)) {
          if (isPromiseLike(cachedResp)) {
            // cached request has already been sent, but there is no response yet
            cachedResp.then(resolvePromiseWithResult, resolvePromiseWithResult);
          } else {
            // serving from cache
            if (isArray(cachedResp)) {
              resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3]);
            } else {
              resolvePromise(cachedResp, 200, {}, 'OK');
            }
          }
        } else {
          // put the promise for the non-transformed response into cache as a placeholder
          cache.put(url, promise);
        }
      }


      // if we won't have the response in cache, set the xsrf headers and
      // send the request to the backend
      if (isUndefined(cachedResp)) {
        var xsrfValue = urlIsSameOrigin(config.url)
            ? $$cookieReader()[config.xsrfCookieName || defaults.xsrfCookieName]
            : undefined;
        if (xsrfValue) {
          reqHeaders[(config.xsrfHeaderName || defaults.xsrfHeaderName)] = xsrfValue;
        }

        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,
            config.withCredentials, config.responseType,
            createApplyHandlers(config.eventHandlers),
            createApplyHandlers(config.uploadEventHandlers));
      }

      return promise;

      function createApplyHandlers(eventHandlers) {
        if (eventHandlers) {
          var applyHandlers = {};
          forEach(eventHandlers, function(eventHandler, key) {
            applyHandlers[key] = function(event) {
              if (useApplyAsync) {
                $rootScope.$applyAsync(callEventHandler);
              } else if ($rootScope.$$phase) {
                callEventHandler();
              } else {
                $rootScope.$apply(callEventHandler);
              }

              function callEventHandler() {
                eventHandler(event);
              }
            };
          });
          return applyHandlers;
        }
      }


      /**
       * Callback registered to $httpBackend():
       *  - caches the response if desired
       *  - resolves the raw $http promise
       *  - calls $apply
       */
      function done(status, response, headersString, statusText) {
        if (cache) {
          if (isSuccess(status)) {
            cache.put(url, [status, response, parseHeaders(headersString), statusText]);
          } else {
            // remove promise from the cache
            cache.remove(url);
          }
        }

        function resolveHttpPromise() {
          resolvePromise(response, status, headersString, statusText);
        }

        if (useApplyAsync) {
          $rootScope.$applyAsync(resolveHttpPromise);
        } else {
          resolveHttpPromise();
          if (!$rootScope.$$phase) $rootScope.$apply();
        }
      }


      /**
       * Resolves the raw $http promise.
       */
      function resolvePromise(response, status, headers, statusText) {
        //status: HTTP response status code, 0, -1 (aborted by timeout / promise)
        status = status >= -1 ? status : 0;

        (isSuccess(status) ? deferred.resolve : deferred.reject)({
          data: response,
          status: status,
          headers: headersGetter(headers),
          config: config,
          statusText: statusText
        });
      }

      function resolvePromiseWithResult(result) {
        resolvePromise(result.data, result.status, shallowCopy(result.headers()), result.statusText);
      }

      function removePendingReq() {
        var idx = $http.pendingRequests.indexOf(config);
        if (idx !== -1) $http.pendingRequests.splice(idx, 1);
      }
    }


    function buildUrl(url, serializedParams) {
      if (serializedParams.length > 0) {
        url += ((url.indexOf('?') === -1) ? '?' : '&') + serializedParams;
      }
      return url;
    }
  }];
}

/**
 * @ngdoc service
 * @name $xhrFactory
 * @this
 *
 * @description
 * Factory function used to create XMLHttpRequest objects.
 *
 * Replace or decorate this service to create your own custom XMLHttpRequest objects.
 *
 * ```
 * angular.module('myApp', [])
 * .factory('$xhrFactory', function() {
 *   return function createXhr(method, url) {
 *     return new window.XMLHttpRequest({mozSystem: true});
 *   };
 * });
 * ```
 *
 * @param {string} method HTTP method of the request (GET, POST, PUT, ..)
 * @param {string} url URL of the request.
 */
function $xhrFactoryProvider() {
  this.$get = function() {
    return function createXhr() {
      return new window.XMLHttpRequest();
    };
  };
}

/**
 * @ngdoc service
 * @name $httpBackend
 * @requires $jsonpCallbacks
 * @requires $document
 * @requires $xhrFactory
 * @this
 *
 * @description
 * HTTP backend used by the {@link ng.$http service} that delegates to
 * XMLHttpRequest object or JSONP and deals with browser incompatibilities.
 *
 * You should never need to use this service directly, instead use the higher-level abstractions:
 * {@link ng.$http $http} or {@link ngResource.$resource $resource}.
 *
 * During testing this implementation is swapped with {@link ngMock.$httpBackend mock
 * $httpBackend} which can be trained with responses.
 */
function $HttpBackendProvider() {
  this.$get = ['$browser', '$jsonpCallbacks', '$document', '$xhrFactory', function($browser, $jsonpCallbacks, $document, $xhrFactory) {
    return createHttpBackend($browser, $xhrFactory, $browser.defer, $jsonpCallbacks, $document[0]);
  }];
}

function createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {
  // TODO(vojta): fix the signature
  return function(method, url, post, callback, headers, timeout, withCredentials, responseType, eventHandlers, uploadEventHandlers) {
    $browser.$$incOutstandingRequestCount();
    url = url || $browser.url();

    if (lowercase(method) === 'jsonp') {
      var callbackPath = callbacks.createCallback(url);
      var jsonpDone = jsonpReq(url, callbackPath, function(status, text) {
        // jsonpReq only ever sets status to 200 (OK), 404 (ERROR) or -1 (WAITING)
        var response = (status === 200) && callbacks.getResponse(callbackPath);
        completeRequest(callback, status, response, '', text);
        callbacks.removeCallback(callbackPath);
      });
    } else {

      var xhr = createXhr(method, url);

      xhr.open(method, url, true);
      forEach(headers, function(value, key) {
        if (isDefined(value)) {
            xhr.setRequestHeader(key, value);
        }
      });

      xhr.onload = function requestLoaded() {
        var statusText = xhr.statusText || '';

        // responseText is the old-school way of retrieving response (supported by IE9)
        // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)
        var response = ('response' in xhr) ? xhr.response : xhr.responseText;

        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
        var status = xhr.status === 1223 ? 204 : xhr.status;

        // fix status code when it is 0 (0 status is undocumented).
        // Occurs when accessing file resources or on Android 4.1 stock browser
        // while retrieving files from application cache.
        if (status === 0) {
          status = response ? 200 : urlResolve(url).protocol === 'file' ? 404 : 0;
        }

        completeRequest(callback,
            status,
            response,
            xhr.getAllResponseHeaders(),
            statusText);
      };

      var requestError = function() {
        // The response is always empty
        // See https://xhr.spec.whatwg.org/#request-error-steps and https://fetch.spec.whatwg.org/#concept-network-error
        completeRequest(callback, -1, null, null, '');
      };

      xhr.onerror = requestError;
      xhr.onabort = requestError;
      xhr.ontimeout = requestError;

      forEach(eventHandlers, function(value, key) {
          xhr.addEventListener(key, value);
      });

      forEach(uploadEventHandlers, function(value, key) {
        xhr.upload.addEventListener(key, value);
      });

      if (withCredentials) {
        xhr.withCredentials = true;
      }

      if (responseType) {
        try {
          xhr.responseType = responseType;
        } catch (e) {
          // WebKit added support for the json responseType value on 09/03/2013
          // https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are
          // known to throw when setting the value "json" as the response type. Other older
          // browsers implementing the responseType
          //
          // The json response type can be ignored if not supported, because JSON payloads are
          // parsed on the client-side regardless.
          if (responseType !== 'json') {
            throw e;
          }
        }
      }

      xhr.send(isUndefined(post) ? null : post);
    }

    if (timeout > 0) {
      var timeoutId = $browserDefer(timeoutRequest, timeout);
    } else if (isPromiseLike(timeout)) {
      timeout.then(timeoutRequest);
    }


    function timeoutRequest() {
      if (jsonpDone) {
        jsonpDone();
      }
      if (xhr) {
        xhr.abort();
      }
    }

    function completeRequest(callback, status, response, headersString, statusText) {
      // cancel timeout and subsequent timeout promise resolution
      if (isDefined(timeoutId)) {
        $browserDefer.cancel(timeoutId);
      }
      jsonpDone = xhr = null;

      callback(status, response, headersString, statusText);
      $browser.$$completeOutstandingRequest(noop);
    }
  };

  function jsonpReq(url, callbackPath, done) {
    url = url.replace('JSON_CALLBACK', callbackPath);
    // we can't use jQuery/jqLite here because jQuery does crazy stuff with script elements, e.g.:
    // - fetches local scripts via XHR and evals them
    // - adds and immediately removes script elements from the document
    var script = rawDocument.createElement('script'), callback = null;
    script.type = 'text/javascript';
    script.src = url;
    script.async = true;

    callback = function(event) {
      removeEventListenerFn(script, 'load', callback);
      removeEventListenerFn(script, 'error', callback);
      rawDocument.body.removeChild(script);
      script = null;
      var status = -1;
      var text = 'unknown';

      if (event) {
        if (event.type === 'load' && !callbacks.wasCalled(callbackPath)) {
          event = { type: 'error' };
        }
        text = event.type;
        status = event.type === 'error' ? 404 : 200;
      }

      if (done) {
        done(status, text);
      }
    };

    addEventListenerFn(script, 'load', callback);
    addEventListenerFn(script, 'error', callback);
    rawDocument.body.appendChild(script);
    return callback;
  }
}

var $interpolateMinErr = angular.$interpolateMinErr = minErr('$interpolate');
$interpolateMinErr.throwNoconcat = function(text) {
  throw $interpolateMinErr('noconcat',
      'Error while interpolating: {0}\nStrict Contextual Escaping disallows ' +
      'interpolations that concatenate multiple expressions when a trusted value is ' +
      'required.  See http://docs.angularjs.org/api/ng.$sce', text);
};

$interpolateMinErr.interr = function(text, err) {
  return $interpolateMinErr('interr', 'Can\'t interpolate: {0}\n{1}', text, err.toString());
};

/**
 * @ngdoc provider
 * @name $interpolateProvider
 * @this
 *
 * @description
 *
 * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.
 *
 * <div class="alert alert-danger">
 * This feature is sometimes used to mix different markup languages, e.g. to wrap an Angular
 * template within a Python Jinja template (or any other template language). Mixing templating
 * languages is **very dangerous**. The embedding template language will not safely escape Angular
 * expressions, so any user-controlled values in the template will cause Cross Site Scripting (XSS)
 * security bugs!
 * </div>
 *
 * @example
<example name="custom-interpolation-markup" module="customInterpolationApp">
<file name="index.html">
<script>
  var customInterpolationApp = angular.module('customInterpolationApp', []);

  customInterpolationApp.config(function($interpolateProvider) {
    $interpolateProvider.startSymbol('//');
    $interpolateProvider.endSymbol('//');
  });


  customInterpolationApp.controller('DemoController', function() {
      this.label = "This binding is brought you by // interpolation symbols.";
  });
</script>
<div ng-controller="DemoController as demo">
    //demo.label//
</div>
</file>
<file name="protractor.js" type="protractor">
  it('should interpolate binding with custom symbols', function() {
    expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');
  });
</file>
</example>
 */
function $InterpolateProvider() {
  var startSymbol = '{{';
  var endSymbol = '}}';

  /**
   * @ngdoc method
   * @name $interpolateProvider#startSymbol
   * @description
   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.
   *
   * @param {string=} value new value to set the starting symbol to.
   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.
   */
  this.startSymbol = function(value) {
    if (value) {
      startSymbol = value;
      return this;
    } else {
      return startSymbol;
    }
  };

  /**
   * @ngdoc method
   * @name $interpolateProvider#endSymbol
   * @description
   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.
   *
   * @param {string=} value new value to set the ending symbol to.
   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.
   */
  this.endSymbol = function(value) {
    if (value) {
      endSymbol = value;
      return this;
    } else {
      return endSymbol;
    }
  };


  this.$get = ['$parse', '$exceptionHandler', '$sce', function($parse, $exceptionHandler, $sce) {
    var startSymbolLength = startSymbol.length,
        endSymbolLength = endSymbol.length,
        escapedStartRegexp = new RegExp(startSymbol.replace(/./g, escape), 'g'),
        escapedEndRegexp = new RegExp(endSymbol.replace(/./g, escape), 'g');

    function escape(ch) {
      return '\\\\\\' + ch;
    }

    function unescapeText(text) {
      return text.replace(escapedStartRegexp, startSymbol).
        replace(escapedEndRegexp, endSymbol);
    }

    function stringify(value) {
      if (value == null) { // null || undefined
        return '';
      }
      switch (typeof value) {
        case 'string':
          break;
        case 'number':
          value = '' + value;
          break;
        default:
          value = toJson(value);
      }

      return value;
    }

    // TODO: this is the same as the constantWatchDelegate in parse.js
    function constantWatchDelegate(scope, listener, objectEquality, constantInterp) {
      var unwatch = scope.$watch(function constantInterpolateWatch(scope) {
        unwatch();
        return constantInterp(scope);
      }, listener, objectEquality);
      return unwatch;
    }

    /**
     * @ngdoc service
     * @name $interpolate
     * @kind function
     *
     * @requires $parse
     * @requires $sce
     *
     * @description
     *
     * Compiles a string with markup into an interpolation function. This service is used by the
     * HTML {@link ng.$compile $compile} service for data binding. See
     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the
     * interpolation markup.
     *
     *
     * ```js
     *   var $interpolate = ...; // injected
     *   var exp = $interpolate('Hello {{name | uppercase}}!');
     *   expect(exp({name:'Angular'})).toEqual('Hello ANGULAR!');
     * ```
     *
     * `$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is
     * `true`, the interpolation function will return `undefined` unless all embedded expressions
     * evaluate to a value other than `undefined`.
     *
     * ```js
     *   var $interpolate = ...; // injected
     *   var context = {greeting: 'Hello', name: undefined };
     *
     *   // default "forgiving" mode
     *   var exp = $interpolate('{{greeting}} {{name}}!');
     *   expect(exp(context)).toEqual('Hello !');
     *
     *   // "allOrNothing" mode
     *   exp = $interpolate('{{greeting}} {{name}}!', false, null, true);
     *   expect(exp(context)).toBeUndefined();
     *   context.name = 'Angular';
     *   expect(exp(context)).toEqual('Hello Angular!');
     * ```
     *
     * `allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.
     *
     * #### Escaped Interpolation
     * $interpolate provides a mechanism for escaping interpolation markers. Start and end markers
     * can be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).
     * It will be rendered as a regular start/end marker, and will not be interpreted as an expression
     * or binding.
     *
     * This enables web-servers to prevent script injection attacks and defacing attacks, to some
     * degree, while also enabling code examples to work without relying on the
     * {@link ng.directive:ngNonBindable ngNonBindable} directive.
     *
     * **For security purposes, it is strongly encouraged that web servers escape user-supplied data,
     * replacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all
     * interpolation start/end markers with their escaped counterparts.**
     *
     * Escaped interpolation markers are only replaced with the actual interpolation markers in rendered
     * output when the $interpolate service processes the text. So, for HTML elements interpolated
     * by {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter
     * set to `true`, the interpolated text must contain an unescaped interpolation expression. As such,
     * this is typically useful only when user-data is used in rendering a template from the server, or
     * when otherwise untrusted data is used by a directive.
     *
     * <example name="interpolation">
     *  <file name="index.html">
     *    <div ng-init="username='A user'">
     *      <p ng-init="apptitle='Escaping demo'">{{apptitle}}: \{\{ username = "defaced value"; \}\}
     *        </p>
     *      <p><strong>{{username}}</strong> attempts to inject code which will deface the
     *        application, but fails to accomplish their task, because the server has correctly
     *        escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)
     *        characters.</p>
     *      <p>Instead, the result of the attempted script injection is visible, and can be removed
     *        from the database by an administrator.</p>
     *    </div>
     *  </file>
     * </example>
     *
     * @knownIssue
     * It is currently not possible for an interpolated expression to contain the interpolation end
     * symbol. For example, `{{ '}}' }}` will be incorrectly interpreted as `{{ ' }}` + `' }}`, i.e.
     * an interpolated expression consisting of a single-quote (`'`) and the `' }}` string.
     *
     * @knownIssue
     * All directives and components must use the standard `{{` `}}` interpolation symbols
     * in their templates. If you change the application interpolation symbols the {@link $compile}
     * service will attempt to denormalize the standard symbols to the custom symbols.
     * The denormalization process is not clever enough to know not to replace instances of the standard
     * symbols where they would not normally be treated as interpolation symbols. For example in the following
     * code snippet the closing braces of the literal object will get incorrectly denormalized:
     *
     * ```
     * <div data-context='{"context":{"id":3,"type":"page"}}">
     * ```
     *
     * The workaround is to ensure that such instances are separated by whitespace:
     * ```
     * <div data-context='{"context":{"id":3,"type":"page"} }">
     * ```
     *
     * See https://github.com/angular/angular.js/pull/14610#issuecomment-219401099 for more information.
     *
     * @param {string} text The text with markup to interpolate.
     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have
     *    embedded expression in order to return an interpolation function. Strings with no
     *    embedded expression will return null for the interpolation function.
     * @param {string=} trustedContext when provided, the returned function passes the interpolated
     *    result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,
     *    trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that
     *    provides Strict Contextual Escaping for details.
     * @param {boolean=} allOrNothing if `true`, then the returned function returns undefined
     *    unless all embedded expressions evaluate to a value other than `undefined`.
     * @returns {function(context)} an interpolation function which is used to compute the
     *    interpolated string. The function has these parameters:
     *
     * - `context`: evaluation context for all expressions embedded in the interpolated text
     */
    function $interpolate(text, mustHaveExpression, trustedContext, allOrNothing) {
      // Provide a quick exit and simplified result function for text with no interpolation
      if (!text.length || text.indexOf(startSymbol) === -1) {
        var constantInterp;
        if (!mustHaveExpression) {
          var unescapedText = unescapeText(text);
          constantInterp = valueFn(unescapedText);
          constantInterp.exp = text;
          constantInterp.expressions = [];
          constantInterp.$$watchDelegate = constantWatchDelegate;
        }
        return constantInterp;
      }

      allOrNothing = !!allOrNothing;
      var startIndex,
          endIndex,
          index = 0,
          expressions = [],
          parseFns = [],
          textLength = text.length,
          exp,
          concat = [],
          expressionPositions = [];

      while (index < textLength) {
        if (((startIndex = text.indexOf(startSymbol, index)) !== -1) &&
             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) !== -1)) {
          if (index !== startIndex) {
            concat.push(unescapeText(text.substring(index, startIndex)));
          }
          exp = text.substring(startIndex + startSymbolLength, endIndex);
          expressions.push(exp);
          parseFns.push($parse(exp, parseStringifyInterceptor));
          index = endIndex + endSymbolLength;
          expressionPositions.push(concat.length);
          concat.push('');
        } else {
          // we did not find an interpolation, so we have to add the remainder to the separators array
          if (index !== textLength) {
            concat.push(unescapeText(text.substring(index)));
          }
          break;
        }
      }

      // Concatenating expressions makes it hard to reason about whether some combination of
      // concatenated values are unsafe to use and could easily lead to XSS.  By requiring that a
      // single expression be used for iframe[src], object[src], etc., we ensure that the value
      // that's used is assigned or constructed by some JS code somewhere that is more testable or
      // make it obvious that you bound the value to some user controlled value.  This helps reduce
      // the load when auditing for XSS issues.
      if (trustedContext && concat.length > 1) {
          $interpolateMinErr.throwNoconcat(text);
      }

      if (!mustHaveExpression || expressions.length) {
        var compute = function(values) {
          for (var i = 0, ii = expressions.length; i < ii; i++) {
            if (allOrNothing && isUndefined(values[i])) return;
            concat[expressionPositions[i]] = values[i];
          }
          return concat.join('');
        };

        var getValue = function(value) {
          return trustedContext ?
            $sce.getTrusted(trustedContext, value) :
            $sce.valueOf(value);
        };

        return extend(function interpolationFn(context) {
            var i = 0;
            var ii = expressions.length;
            var values = new Array(ii);

            try {
              for (; i < ii; i++) {
                values[i] = parseFns[i](context);
              }

              return compute(values);
            } catch (err) {
              $exceptionHandler($interpolateMinErr.interr(text, err));
            }

          }, {
          // all of these properties are undocumented for now
          exp: text, //just for compatibility with regular watchers created via $watch
          expressions: expressions,
          $$watchDelegate: function(scope, listener) {
            var lastValue;
            return scope.$watchGroup(parseFns, /** @this */ function interpolateFnWatcher(values, oldValues) {
              var currValue = compute(values);
              if (isFunction(listener)) {
                listener.call(this, currValue, values !== oldValues ? lastValue : currValue, scope);
              }
              lastValue = currValue;
            });
          }
        });
      }

      function parseStringifyInterceptor(value) {
        try {
          value = getValue(value);
          return allOrNothing && !isDefined(value) ? value : stringify(value);
        } catch (err) {
          $exceptionHandler($interpolateMinErr.interr(text, err));
        }
      }
    }


    /**
     * @ngdoc method
     * @name $interpolate#startSymbol
     * @description
     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.
     *
     * Use {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change
     * the symbol.
     *
     * @returns {string} start symbol.
     */
    $interpolate.startSymbol = function() {
      return startSymbol;
    };


    /**
     * @ngdoc method
     * @name $interpolate#endSymbol
     * @description
     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.
     *
     * Use {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change
     * the symbol.
     *
     * @returns {string} end symbol.
     */
    $interpolate.endSymbol = function() {
      return endSymbol;
    };

    return $interpolate;
  }];
}

/** @this */
function $IntervalProvider() {
  this.$get = ['$rootScope', '$window', '$q', '$$q', '$browser',
       function($rootScope,   $window,   $q,   $$q,   $browser) {
    var intervals = {};


     /**
      * @ngdoc service
      * @name $interval
      *
      * @description
      * Angular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`
      * milliseconds.
      *
      * The return value of registering an interval function is a promise. This promise will be
      * notified upon each tick of the interval, and will be resolved after `count` iterations, or
      * run indefinitely if `count` is not defined. The value of the notification will be the
      * number of iterations that have run.
      * To cancel an interval, call `$interval.cancel(promise)`.
      *
      * In tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to
      * move forward by `millis` milliseconds and trigger any functions scheduled to run in that
      * time.
      *
      * <div class="alert alert-warning">
      * **Note**: Intervals created by this service must be explicitly destroyed when you are finished
      * with them.  In particular they are not automatically destroyed when a controller's scope or a
      * directive's element are destroyed.
      * You should take this into consideration and make sure to always cancel the interval at the
      * appropriate moment.  See the example below for more details on how and when to do this.
      * </div>
      *
      * @param {function()} fn A function that should be called repeatedly. If no additional arguments
      *   are passed (see below), the function is called with the current iteration count.
      * @param {number} delay Number of milliseconds between each function call.
      * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat
      *   indefinitely.
      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise
      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.
      * @param {...*=} Pass additional parameters to the executed function.
      * @returns {promise} A promise which will be notified on each iteration.
      *
      * @example
      * <example module="intervalExample" name="interval-service">
      * <file name="index.html">
      *   <script>
      *     angular.module('intervalExample', [])
      *       .controller('ExampleController', ['$scope', '$interval',
      *         function($scope, $interval) {
      *           $scope.format = 'M/d/yy h:mm:ss a';
      *           $scope.blood_1 = 100;
      *           $scope.blood_2 = 120;
      *
      *           var stop;
      *           $scope.fight = function() {
      *             // Don't start a new fight if we are already fighting
      *             if ( angular.isDefined(stop) ) return;
      *
      *             stop = $interval(function() {
      *               if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {
      *                 $scope.blood_1 = $scope.blood_1 - 3;
      *                 $scope.blood_2 = $scope.blood_2 - 4;
      *               } else {
      *                 $scope.stopFight();
      *               }
      *             }, 100);
      *           };
      *
      *           $scope.stopFight = function() {
      *             if (angular.isDefined(stop)) {
      *               $interval.cancel(stop);
      *               stop = undefined;
      *             }
      *           };
      *
      *           $scope.resetFight = function() {
      *             $scope.blood_1 = 100;
      *             $scope.blood_2 = 120;
      *           };
      *
      *           $scope.$on('$destroy', function() {
      *             // Make sure that the interval is destroyed too
      *             $scope.stopFight();
      *           });
      *         }])
      *       // Register the 'myCurrentTime' directive factory method.
      *       // We inject $interval and dateFilter service since the factory method is DI.
      *       .directive('myCurrentTime', ['$interval', 'dateFilter',
      *         function($interval, dateFilter) {
      *           // return the directive link function. (compile function not needed)
      *           return function(scope, element, attrs) {
      *             var format,  // date format
      *                 stopTime; // so that we can cancel the time updates
      *
      *             // used to update the UI
      *             function updateTime() {
      *               element.text(dateFilter(new Date(), format));
      *             }
      *
      *             // watch the expression, and update the UI on change.
      *             scope.$watch(attrs.myCurrentTime, function(value) {
      *               format = value;
      *               updateTime();
      *             });
      *
      *             stopTime = $interval(updateTime, 1000);
      *
      *             // listen on DOM destroy (removal) event, and cancel the next UI update
      *             // to prevent updating time after the DOM element was removed.
      *             element.on('$destroy', function() {
      *               $interval.cancel(stopTime);
      *             });
      *           }
      *         }]);
      *   </script>
      *
      *   <div>
      *     <div ng-controller="ExampleController">
      *       <label>Date format: <input ng-model="format"></label> <hr/>
      *       Current time is: <span my-current-time="format"></span>
      *       <hr/>
      *       Blood 1 : <font color='red'>{{blood_1}}</font>
      *       Blood 2 : <font color='red'>{{blood_2}}</font>
      *       <button type="button" data-ng-click="fight()">Fight</button>
      *       <button type="button" data-ng-click="stopFight()">StopFight</button>
      *       <button type="button" data-ng-click="resetFight()">resetFight</button>
      *     </div>
      *   </div>
      *
      * </file>
      * </example>
      */
    function interval(fn, delay, count, invokeApply) {
      var hasParams = arguments.length > 4,
          args = hasParams ? sliceArgs(arguments, 4) : [],
          setInterval = $window.setInterval,
          clearInterval = $window.clearInterval,
          iteration = 0,
          skipApply = (isDefined(invokeApply) && !invokeApply),
          deferred = (skipApply ? $$q : $q).defer(),
          promise = deferred.promise;

      count = isDefined(count) ? count : 0;

      promise.$$intervalId = setInterval(function tick() {
        if (skipApply) {
          $browser.defer(callback);
        } else {
          $rootScope.$evalAsync(callback);
        }
        deferred.notify(iteration++);

        if (count > 0 && iteration >= count) {
          deferred.resolve(iteration);
          clearInterval(promise.$$intervalId);
          delete intervals[promise.$$intervalId];
        }

        if (!skipApply) $rootScope.$apply();

      }, delay);

      intervals[promise.$$intervalId] = deferred;

      return promise;

      function callback() {
        if (!hasParams) {
          fn(iteration);
        } else {
          fn.apply(null, args);
        }
      }
    }


     /**
      * @ngdoc method
      * @name $interval#cancel
      *
      * @description
      * Cancels a task associated with the `promise`.
      *
      * @param {Promise=} promise returned by the `$interval` function.
      * @returns {boolean} Returns `true` if the task was successfully canceled.
      */
    interval.cancel = function(promise) {
      if (promise && promise.$$intervalId in intervals) {
        intervals[promise.$$intervalId].reject('canceled');
        $window.clearInterval(promise.$$intervalId);
        delete intervals[promise.$$intervalId];
        return true;
      }
      return false;
    };

    return interval;
  }];
}

/**
 * @ngdoc service
 * @name $jsonpCallbacks
 * @requires $window
 * @description
 * This service handles the lifecycle of callbacks to handle JSONP requests.
 * Override this service if you wish to customise where the callbacks are stored and
 * how they vary compared to the requested url.
 */
var $jsonpCallbacksProvider = /** @this */ function() {
  this.$get = ['$window', function($window) {
    var callbacks = $window.angular.callbacks;
    var callbackMap = {};

    function createCallback(callbackId) {
      var callback = function(data) {
        callback.data = data;
        callback.called = true;
      };
      callback.id = callbackId;
      return callback;
    }

    return {
      /**
       * @ngdoc method
       * @name $jsonpCallbacks#createCallback
       * @param {string} url the url of the JSONP request
       * @returns {string} the callback path to send to the server as part of the JSONP request
       * @description
       * {@link $httpBackend} calls this method to create a callback and get hold of the path to the callback
       * to pass to the server, which will be used to call the callback with its payload in the JSONP response.
       */
      createCallback: function(url) {
        var callbackId = '_' + (callbacks.$$counter++).toString(36);
        var callbackPath = 'angular.callbacks.' + callbackId;
        var callback = createCallback(callbackId);
        callbackMap[callbackPath] = callbacks[callbackId] = callback;
        return callbackPath;
      },
      /**
       * @ngdoc method
       * @name $jsonpCallbacks#wasCalled
       * @param {string} callbackPath the path to the callback that was sent in the JSONP request
       * @returns {boolean} whether the callback has been called, as a result of the JSONP response
       * @description
       * {@link $httpBackend} calls this method to find out whether the JSONP response actually called the
       * callback that was passed in the request.
       */
      wasCalled: function(callbackPath) {
        return callbackMap[callbackPath].called;
      },
      /**
       * @ngdoc method
       * @name $jsonpCallbacks#getResponse
       * @param {string} callbackPath the path to the callback that was sent in the JSONP request
       * @returns {*} the data received from the response via the registered callback
       * @description
       * {@link $httpBackend} calls this method to get hold of the data that was provided to the callback
       * in the JSONP response.
       */
      getResponse: function(callbackPath) {
        return callbackMap[callbackPath].data;
      },
      /**
       * @ngdoc method
       * @name $jsonpCallbacks#removeCallback
       * @param {string} callbackPath the path to the callback that was sent in the JSONP request
       * @description
       * {@link $httpBackend} calls this method to remove the callback after the JSONP request has
       * completed or timed-out.
       */
      removeCallback: function(callbackPath) {
        var callback = callbackMap[callbackPath];
        delete callbacks[callback.id];
        delete callbackMap[callbackPath];
      }
    };
  }];
};

/**
 * @ngdoc service
 * @name $locale
 *
 * @description
 * $locale service provides localization rules for various Angular components. As of right now the
 * only public api is:
 *
 * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)
 */

var PATH_MATCH = /^([^?#]*)(\?([^#]*))?(#(.*))?$/,
    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};
var $locationMinErr = minErr('$location');


/**
 * Encode path using encodeUriSegment, ignoring forward slashes
 *
 * @param {string} path Path to encode
 * @returns {string}
 */
function encodePath(path) {
  var segments = path.split('/'),
      i = segments.length;

  while (i--) {
    segments[i] = encodeUriSegment(segments[i]);
  }

  return segments.join('/');
}

function parseAbsoluteUrl(absoluteUrl, locationObj) {
  var parsedUrl = urlResolve(absoluteUrl);

  locationObj.$$protocol = parsedUrl.protocol;
  locationObj.$$host = parsedUrl.hostname;
  locationObj.$$port = toInt(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null;
}

var DOUBLE_SLASH_REGEX = /^\s*[\\/]{2,}/;
function parseAppUrl(url, locationObj) {

  if (DOUBLE_SLASH_REGEX.test(url)) {
    throw $locationMinErr('badpath', 'Invalid url "{0}".', url);
  }

  var prefixed = (url.charAt(0) !== '/');
  if (prefixed) {
    url = '/' + url;
  }
  var match = urlResolve(url);
  locationObj.$$path = decodeURIComponent(prefixed && match.pathname.charAt(0) === '/' ?
      match.pathname.substring(1) : match.pathname);
  locationObj.$$search = parseKeyValue(match.search);
  locationObj.$$hash = decodeURIComponent(match.hash);

  // make sure path starts with '/';
  if (locationObj.$$path && locationObj.$$path.charAt(0) !== '/') {
    locationObj.$$path = '/' + locationObj.$$path;
  }
}

function startsWith(str, search) {
  return str.slice(0, search.length) === search;
}

/**
 *
 * @param {string} base
 * @param {string} url
 * @returns {string} returns text from `url` after `base` or `undefined` if it does not begin with
 *                   the expected string.
 */
function stripBaseUrl(base, url) {
  if (startsWith(url, base)) {
    return url.substr(base.length);
  }
}


function stripHash(url) {
  var index = url.indexOf('#');
  return index === -1 ? url : url.substr(0, index);
}

function trimEmptyHash(url) {
  return url.replace(/(#.+)|#$/, '$1');
}


function stripFile(url) {
  return url.substr(0, stripHash(url).lastIndexOf('/') + 1);
}

/* return the server only (scheme://host:port) */
function serverBase(url) {
  return url.substring(0, url.indexOf('/', url.indexOf('//') + 2));
}


/**
 * LocationHtml5Url represents a URL
 * This object is exposed as $location service when HTML5 mode is enabled and supported
 *
 * @constructor
 * @param {string} appBase application base URL
 * @param {string} appBaseNoFile application base URL stripped of any filename
 * @param {string} basePrefix URL path prefix
 */
function LocationHtml5Url(appBase, appBaseNoFile, basePrefix) {
  this.$$html5 = true;
  basePrefix = basePrefix || '';
  parseAbsoluteUrl(appBase, this);


  /**
   * Parse given HTML5 (regular) URL string into properties
   * @param {string} url HTML5 URL
   * @private
   */
  this.$$parse = function(url) {
    var pathUrl = stripBaseUrl(appBaseNoFile, url);
    if (!isString(pathUrl)) {
      throw $locationMinErr('ipthprfx', 'Invalid url "{0}", missing path prefix "{1}".', url,
          appBaseNoFile);
    }

    parseAppUrl(pathUrl, this);

    if (!this.$$path) {
      this.$$path = '/';
    }

    this.$$compose();
  };

  /**
   * Compose url and update `absUrl` property
   * @private
   */
  this.$$compose = function() {
    var search = toKeyValue(this.$$search),
        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';

    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;
    this.$$absUrl = appBaseNoFile + this.$$url.substr(1); // first char is always '/'
  };

  this.$$parseLinkUrl = function(url, relHref) {
    if (relHref && relHref[0] === '#') {
      // special case for links to hash fragments:
      // keep the old url and only replace the hash fragment
      this.hash(relHref.slice(1));
      return true;
    }
    var appUrl, prevAppUrl;
    var rewrittenUrl;


    if (isDefined(appUrl = stripBaseUrl(appBase, url))) {
      prevAppUrl = appUrl;
      if (basePrefix && isDefined(appUrl = stripBaseUrl(basePrefix, appUrl))) {
        rewrittenUrl = appBaseNoFile + (stripBaseUrl('/', appUrl) || appUrl);
      } else {
        rewrittenUrl = appBase + prevAppUrl;
      }
    } else if (isDefined(appUrl = stripBaseUrl(appBaseNoFile, url))) {
      rewrittenUrl = appBaseNoFile + appUrl;
    } else if (appBaseNoFile === url + '/') {
      rewrittenUrl = appBaseNoFile;
    }
    if (rewrittenUrl) {
      this.$$parse(rewrittenUrl);
    }
    return !!rewrittenUrl;
  };
}


/**
 * LocationHashbangUrl represents URL
 * This object is exposed as $location service when developer doesn't opt into html5 mode.
 * It also serves as the base class for html5 mode fallback on legacy browsers.
 *
 * @constructor
 * @param {string} appBase application base URL
 * @param {string} appBaseNoFile application base URL stripped of any filename
 * @param {string} hashPrefix hashbang prefix
 */
function LocationHashbangUrl(appBase, appBaseNoFile, hashPrefix) {

  parseAbsoluteUrl(appBase, this);


  /**
   * Parse given hashbang URL into properties
   * @param {string} url Hashbang URL
   * @private
   */
  this.$$parse = function(url) {
    var withoutBaseUrl = stripBaseUrl(appBase, url) || stripBaseUrl(appBaseNoFile, url);
    var withoutHashUrl;

    if (!isUndefined(withoutBaseUrl) && withoutBaseUrl.charAt(0) === '#') {

      // The rest of the URL starts with a hash so we have
      // got either a hashbang path or a plain hash fragment
      withoutHashUrl = stripBaseUrl(hashPrefix, withoutBaseUrl);
      if (isUndefined(withoutHashUrl)) {
        // There was no hashbang prefix so we just have a hash fragment
        withoutHashUrl = withoutBaseUrl;
      }

    } else {
      // There was no hashbang path nor hash fragment:
      // If we are in HTML5 mode we use what is left as the path;
      // Otherwise we ignore what is left
      if (this.$$html5) {
        withoutHashUrl = withoutBaseUrl;
      } else {
        withoutHashUrl = '';
        if (isUndefined(withoutBaseUrl)) {
          appBase = url;
          this.replace();
        }
      }
    }

    parseAppUrl(withoutHashUrl, this);

    this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase);

    this.$$compose();

    /*
     * In Windows, on an anchor node on documents loaded from
     * the filesystem, the browser will return a pathname
     * prefixed with the drive name ('/C:/path') when a
     * pathname without a drive is set:
     *  * a.setAttribute('href', '/foo')
     *   * a.pathname === '/C:/foo' //true
     *
     * Inside of Angular, we're always using pathnames that
     * do not include drive names for routing.
     */
    function removeWindowsDriveName(path, url, base) {
      /*
      Matches paths for file protocol on windows,
      such as /C:/foo/bar, and captures only /foo/bar.
      */
      var windowsFilePathExp = /^\/[A-Z]:(\/.*)/;

      var firstPathSegmentMatch;

      //Get the relative path from the input URL.
      if (startsWith(url, base)) {
        url = url.replace(base, '');
      }

      // The input URL intentionally contains a first path segment that ends with a colon.
      if (windowsFilePathExp.exec(url)) {
        return path;
      }

      firstPathSegmentMatch = windowsFilePathExp.exec(path);
      return firstPathSegmentMatch ? firstPathSegmentMatch[1] : path;
    }
  };

  /**
   * Compose hashbang URL and update `absUrl` property
   * @private
   */
  this.$$compose = function() {
    var search = toKeyValue(this.$$search),
        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';

    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;
    this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : '');
  };

  this.$$parseLinkUrl = function(url, relHref) {
    if (stripHash(appBase) === stripHash(url)) {
      this.$$parse(url);
      return true;
    }
    return false;
  };
}


/**
 * LocationHashbangUrl represents URL
 * This object is exposed as $location service when html5 history api is enabled but the browser
 * does not support it.
 *
 * @constructor
 * @param {string} appBase application base URL
 * @param {string} appBaseNoFile application base URL stripped of any filename
 * @param {string} hashPrefix hashbang prefix
 */
function LocationHashbangInHtml5Url(appBase, appBaseNoFile, hashPrefix) {
  this.$$html5 = true;
  LocationHashbangUrl.apply(this, arguments);

  this.$$parseLinkUrl = function(url, relHref) {
    if (relHref && relHref[0] === '#') {
      // special case for links to hash fragments:
      // keep the old url and only replace the hash fragment
      this.hash(relHref.slice(1));
      return true;
    }

    var rewrittenUrl;
    var appUrl;

    if (appBase === stripHash(url)) {
      rewrittenUrl = url;
    } else if ((appUrl = stripBaseUrl(appBaseNoFile, url))) {
      rewrittenUrl = appBase + hashPrefix + appUrl;
    } else if (appBaseNoFile === url + '/') {
      rewrittenUrl = appBaseNoFile;
    }
    if (rewrittenUrl) {
      this.$$parse(rewrittenUrl);
    }
    return !!rewrittenUrl;
  };

  this.$$compose = function() {
    var search = toKeyValue(this.$$search),
        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';

    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;
    // include hashPrefix in $$absUrl when $$url is empty so IE9 does not reload page because of removal of '#'
    this.$$absUrl = appBase + hashPrefix + this.$$url;
  };

}


var locationPrototype = {

  /**
   * Ensure absolute URL is initialized.
   * @private
   */
  $$absUrl:'',

  /**
   * Are we in html5 mode?
   * @private
   */
  $$html5: false,

  /**
   * Has any change been replacing?
   * @private
   */
  $$replace: false,

  /**
   * @ngdoc method
   * @name $location#absUrl
   *
   * @description
   * This method is getter only.
   *
   * Return full URL representation with all segments encoded according to rules specified in
   * [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).
   *
   *
   * ```js
   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
   * var absUrl = $location.absUrl();
   * // => "http://example.com/#/some/path?foo=bar&baz=xoxo"
   * ```
   *
   * @return {string} full URL
   */
  absUrl: locationGetter('$$absUrl'),

  /**
   * @ngdoc method
   * @name $location#url
   *
   * @description
   * This method is getter / setter.
   *
   * Return URL (e.g. `/path?a=b#hash`) when called without any parameter.
   *
   * Change path, search and hash, when called with parameter and return `$location`.
   *
   *
   * ```js
   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
   * var url = $location.url();
   * // => "/some/path?foo=bar&baz=xoxo"
   * ```
   *
   * @param {string=} url New URL without base prefix (e.g. `/path?a=b#hash`)
   * @return {string} url
   */
  url: function(url) {
    if (isUndefined(url)) {
      return this.$$url;
    }

    var match = PATH_MATCH.exec(url);
    if (match[1] || url === '') this.path(decodeURIComponent(match[1]));
    if (match[2] || match[1] || url === '') this.search(match[3] || '');
    this.hash(match[5] || '');

    return this;
  },

  /**
   * @ngdoc method
   * @name $location#protocol
   *
   * @description
   * This method is getter only.
   *
   * Return protocol of current URL.
   *
   *
   * ```js
   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
   * var protocol = $location.protocol();
   * // => "http"
   * ```
   *
   * @return {string} protocol of current URL
   */
  protocol: locationGetter('$$protocol'),

  /**
   * @ngdoc method
   * @name $location#host
   *
   * @description
   * This method is getter only.
   *
   * Return host of current URL.
   *
   * Note: compared to the non-angular version `location.host` which returns `hostname:port`, this returns the `hostname` portion only.
   *
   *
   * ```js
   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
   * var host = $location.host();
   * // => "example.com"
   *
   * // given URL http://user:password@example.com:8080/#/some/path?foo=bar&baz=xoxo
   * host = $location.host();
   * // => "example.com"
   * host = location.host;
   * // => "example.com:8080"
   * ```
   *
   * @return {string} host of current URL.
   */
  host: locationGetter('$$host'),

  /**
   * @ngdoc method
   * @name $location#port
   *
   * @description
   * This method is getter only.
   *
   * Return port of current URL.
   *
   *
   * ```js
   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
   * var port = $location.port();
   * // => 80
   * ```
   *
   * @return {Number} port
   */
  port: locationGetter('$$port'),

  /**
   * @ngdoc method
   * @name $location#path
   *
   * @description
   * This method is getter / setter.
   *
   * Return path of current URL when called without any parameter.
   *
   * Change path when called with parameter and return `$location`.
   *
   * Note: Path should always begin with forward slash (/), this method will add the forward slash
   * if it is missing.
   *
   *
   * ```js
   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
   * var path = $location.path();
   * // => "/some/path"
   * ```
   *
   * @param {(string|number)=} path New path
   * @return {(string|object)} path if called with no parameters, or `$location` if called with a parameter
   */
  path: locationGetterSetter('$$path', function(path) {
    path = path !== null ? path.toString() : '';
    return path.charAt(0) === '/' ? path : '/' + path;
  }),

  /**
   * @ngdoc method
   * @name $location#search
   *
   * @description
   * This method is getter / setter.
   *
   * Return search part (as object) of current URL when called without any parameter.
   *
   * Change search part when called with parameter and return `$location`.
   *
   *
   * ```js
   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
   * var searchObject = $location.search();
   * // => {foo: 'bar', baz: 'xoxo'}
   *
   * // set foo to 'yipee'
   * $location.search('foo', 'yipee');
   * // $location.search() => {foo: 'yipee', baz: 'xoxo'}
   * ```
   *
   * @param {string|Object.<string>|Object.<Array.<string>>} search New search params - string or
   * hash object.
   *
   * When called with a single argument the method acts as a setter, setting the `search` component
   * of `$location` to the specified value.
   *
   * If the argument is a hash object containing an array of values, these values will be encoded
   * as duplicate search parameters in the URL.
   *
   * @param {(string|Number|Array<string>|boolean)=} paramValue If `search` is a string or number, then `paramValue`
   * will override only a single search property.
   *
   * If `paramValue` is an array, it will override the property of the `search` component of
   * `$location` specified via the first argument.
   *
   * If `paramValue` is `null`, the property specified via the first argument will be deleted.
   *
   * If `paramValue` is `true`, the property specified via the first argument will be added with no
   * value nor trailing equal sign.
   *
   * @return {Object} If called with no arguments returns the parsed `search` object. If called with
   * one or more arguments returns `$location` object itself.
   */
  search: function(search, paramValue) {
    switch (arguments.length) {
      case 0:
        return this.$$search;
      case 1:
        if (isString(search) || isNumber(search)) {
          search = search.toString();
          this.$$search = parseKeyValue(search);
        } else if (isObject(search)) {
          search = copy(search, {});
          // remove object undefined or null properties
          forEach(search, function(value, key) {
            if (value == null) delete search[key];
          });

          this.$$search = search;
        } else {
          throw $locationMinErr('isrcharg',
              'The first argument of the `$location#search()` call must be a string or an object.');
        }
        break;
      default:
        if (isUndefined(paramValue) || paramValue === null) {
          delete this.$$search[search];
        } else {
          this.$$search[search] = paramValue;
        }
    }

    this.$$compose();
    return this;
  },

  /**
   * @ngdoc method
   * @name $location#hash
   *
   * @description
   * This method is getter / setter.
   *
   * Returns the hash fragment when called without any parameters.
   *
   * Changes the hash fragment when called with a parameter and returns `$location`.
   *
   *
   * ```js
   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue
   * var hash = $location.hash();
   * // => "hashValue"
   * ```
   *
   * @param {(string|number)=} hash New hash fragment
   * @return {string} hash
   */
  hash: locationGetterSetter('$$hash', function(hash) {
    return hash !== null ? hash.toString() : '';
  }),

  /**
   * @ngdoc method
   * @name $location#replace
   *
   * @description
   * If called, all changes to $location during the current `$digest` will replace the current history
   * record, instead of adding a new one.
   */
  replace: function() {
    this.$$replace = true;
    return this;
  }
};

forEach([LocationHashbangInHtml5Url, LocationHashbangUrl, LocationHtml5Url], function(Location) {
  Location.prototype = Object.create(locationPrototype);

  /**
   * @ngdoc method
   * @name $location#state
   *
   * @description
   * This method is getter / setter.
   *
   * Return the history state object when called without any parameter.
   *
   * Change the history state object when called with one parameter and return `$location`.
   * The state object is later passed to `pushState` or `replaceState`.
   *
   * NOTE: This method is supported only in HTML5 mode and only in browsers supporting
   * the HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support
   * older browsers (like IE9 or Android < 4.0), don't use this method.
   *
   * @param {object=} state State object for pushState or replaceState
   * @return {object} state
   */
  Location.prototype.state = function(state) {
    if (!arguments.length) {
      return this.$$state;
    }

    if (Location !== LocationHtml5Url || !this.$$html5) {
      throw $locationMinErr('nostate', 'History API state support is available only ' +
        'in HTML5 mode and only in browsers supporting HTML5 History API');
    }
    // The user might modify `stateObject` after invoking `$location.state(stateObject)`
    // but we're changing the $$state reference to $browser.state() during the $digest
    // so the modification window is narrow.
    this.$$state = isUndefined(state) ? null : state;

    return this;
  };
});


function locationGetter(property) {
  return /** @this */ function() {
    return this[property];
  };
}


function locationGetterSetter(property, preprocess) {
  return /** @this */ function(value) {
    if (isUndefined(value)) {
      return this[property];
    }

    this[property] = preprocess(value);
    this.$$compose();

    return this;
  };
}


/**
 * @ngdoc service
 * @name $location
 *
 * @requires $rootElement
 *
 * @description
 * The $location service parses the URL in the browser address bar (based on the
 * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL
 * available to your application. Changes to the URL in the address bar are reflected into
 * $location service and changes to $location are reflected into the browser address bar.
 *
 * **The $location service:**
 *
 * - Exposes the current URL in the browser address bar, so you can
 *   - Watch and observe the URL.
 *   - Change the URL.
 * - Synchronizes the URL with the browser when the user
 *   - Changes the address bar.
 *   - Clicks the back or forward button (or clicks a History link).
 *   - Clicks on a link.
 * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).
 *
 * For more information see {@link guide/$location Developer Guide: Using $location}
 */

/**
 * @ngdoc provider
 * @name $locationProvider
 * @this
 *
 * @description
 * Use the `$locationProvider` to configure how the application deep linking paths are stored.
 */
function $LocationProvider() {
  var hashPrefix = '',
      html5Mode = {
        enabled: false,
        requireBase: true,
        rewriteLinks: true
      };

  /**
   * @ngdoc method
   * @name $locationProvider#hashPrefix
   * @description
   * The default value for the prefix is `''`.
   * @param {string=} prefix Prefix for hash part (containing path and search)
   * @returns {*} current value if used as getter or itself (chaining) if used as setter
   */
  this.hashPrefix = function(prefix) {
    if (isDefined(prefix)) {
      hashPrefix = prefix;
      return this;
    } else {
      return hashPrefix;
    }
  };

  /**
   * @ngdoc method
   * @name $locationProvider#html5Mode
   * @description
   * @param {(boolean|Object)=} mode If boolean, sets `html5Mode.enabled` to value.
   *   If object, sets `enabled`, `requireBase` and `rewriteLinks` to respective values. Supported
   *   properties:
   *   - **enabled** – `{boolean}` – (default: false) If true, will rely on `history.pushState` to
   *     change urls where supported. Will fall back to hash-prefixed paths in browsers that do not
   *     support `pushState`.
   *   - **requireBase** - `{boolean}` - (default: `true`) When html5Mode is enabled, specifies
   *     whether or not a <base> tag is required to be present. If `enabled` and `requireBase` are
   *     true, and a base tag is not present, an error will be thrown when `$location` is injected.
   *     See the {@link guide/$location $location guide for more information}
   *   - **rewriteLinks** - `{boolean|string}` - (default: `true`) When html5Mode is enabled,
   *     enables/disables URL rewriting for relative links. If set to a string, URL rewriting will
   *     only happen on links with an attribute that matches the given string. For example, if set
   *     to `'internal-link'`, then the URL will only be rewritten for `<a internal-link>` links.
   *     Note that [attribute name normalization](guide/directive#normalization) does not apply
   *     here, so `'internalLink'` will **not** match `'internal-link'`.
   *
   * @returns {Object} html5Mode object if used as getter or itself (chaining) if used as setter
   */
  this.html5Mode = function(mode) {
    if (isBoolean(mode)) {
      html5Mode.enabled = mode;
      return this;
    } else if (isObject(mode)) {

      if (isBoolean(mode.enabled)) {
        html5Mode.enabled = mode.enabled;
      }

      if (isBoolean(mode.requireBase)) {
        html5Mode.requireBase = mode.requireBase;
      }

      if (isBoolean(mode.rewriteLinks) || isString(mode.rewriteLinks)) {
        html5Mode.rewriteLinks = mode.rewriteLinks;
      }

      return this;
    } else {
      return html5Mode;
    }
  };

  /**
   * @ngdoc event
   * @name $location#$locationChangeStart
   * @eventType broadcast on root scope
   * @description
   * Broadcasted before a URL will change.
   *
   * This change can be prevented by calling
   * `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more
   * details about event object. Upon successful change
   * {@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.
   *
   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when
   * the browser supports the HTML5 History API.
   *
   * @param {Object} angularEvent Synthetic event object.
   * @param {string} newUrl New URL
   * @param {string=} oldUrl URL that was before it was changed.
   * @param {string=} newState New history state object
   * @param {string=} oldState History state object that was before it was changed.
   */

  /**
   * @ngdoc event
   * @name $location#$locationChangeSuccess
   * @eventType broadcast on root scope
   * @description
   * Broadcasted after a URL was changed.
   *
   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when
   * the browser supports the HTML5 History API.
   *
   * @param {Object} angularEvent Synthetic event object.
   * @param {string} newUrl New URL
   * @param {string=} oldUrl URL that was before it was changed.
   * @param {string=} newState New history state object
   * @param {string=} oldState History state object that was before it was changed.
   */

  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window',
      function($rootScope, $browser, $sniffer, $rootElement, $window) {
    var $location,
        LocationMode,
        baseHref = $browser.baseHref(), // if base[href] is undefined, it defaults to ''
        initialUrl = $browser.url(),
        appBase;

    if (html5Mode.enabled) {
      if (!baseHref && html5Mode.requireBase) {
        throw $locationMinErr('nobase',
          '$location in HTML5 mode requires a <base> tag to be present!');
      }
      appBase = serverBase(initialUrl) + (baseHref || '/');
      LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url;
    } else {
      appBase = stripHash(initialUrl);
      LocationMode = LocationHashbangUrl;
    }
    var appBaseNoFile = stripFile(appBase);

    $location = new LocationMode(appBase, appBaseNoFile, '#' + hashPrefix);
    $location.$$parseLinkUrl(initialUrl, initialUrl);

    $location.$$state = $browser.state();

    var IGNORE_URI_REGEXP = /^\s*(javascript|mailto):/i;

    function setBrowserUrlWithFallback(url, replace, state) {
      var oldUrl = $location.url();
      var oldState = $location.$$state;
      try {
        $browser.url(url, replace, state);

        // Make sure $location.state() returns referentially identical (not just deeply equal)
        // state object; this makes possible quick checking if the state changed in the digest
        // loop. Checking deep equality would be too expensive.
        $location.$$state = $browser.state();
      } catch (e) {
        // Restore old values if pushState fails
        $location.url(oldUrl);
        $location.$$state = oldState;

        throw e;
      }
    }

    $rootElement.on('click', function(event) {
      var rewriteLinks = html5Mode.rewriteLinks;
      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)
      // currently we open nice url link and redirect then

      if (!rewriteLinks || event.ctrlKey || event.metaKey || event.shiftKey || event.which === 2 || event.button === 2) return;

      var elm = jqLite(event.target);

      // traverse the DOM up to find first A tag
      while (nodeName_(elm[0]) !== 'a') {
        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)
        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;
      }

      if (isString(rewriteLinks) && isUndefined(elm.attr(rewriteLinks))) return;

      var absHref = elm.prop('href');
      // get the actual href attribute - see
      // http://msdn.microsoft.com/en-us/library/ie/dd347148(v=vs.85).aspx
      var relHref = elm.attr('href') || elm.attr('xlink:href');

      if (isObject(absHref) && absHref.toString() === '[object SVGAnimatedString]') {
        // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during
        // an animation.
        absHref = urlResolve(absHref.animVal).href;
      }

      // Ignore when url is started with javascript: or mailto:
      if (IGNORE_URI_REGEXP.test(absHref)) return;

      if (absHref && !elm.attr('target') && !event.isDefaultPrevented()) {
        if ($location.$$parseLinkUrl(absHref, relHref)) {
          // We do a preventDefault for all urls that are part of the angular application,
          // in html5mode and also without, so that we are able to abort navigation without
          // getting double entries in the location history.
          event.preventDefault();
          // update location manually
          if ($location.absUrl() !== $browser.url()) {
            $rootScope.$apply();
            // hack to work around FF6 bug 684208 when scenario runner clicks on links
            $window.angular['ff-684208-preventDefault'] = true;
          }
        }
      }
    });


    // rewrite hashbang url <> html5 url
    if (trimEmptyHash($location.absUrl()) !== trimEmptyHash(initialUrl)) {
      $browser.url($location.absUrl(), true);
    }

    var initializing = true;

    // update $location when $browser url changes
    $browser.onUrlChange(function(newUrl, newState) {

      if (isUndefined(stripBaseUrl(appBaseNoFile, newUrl))) {
        // If we are navigating outside of the app then force a reload
        $window.location.href = newUrl;
        return;
      }

      $rootScope.$evalAsync(function() {
        var oldUrl = $location.absUrl();
        var oldState = $location.$$state;
        var defaultPrevented;
        newUrl = trimEmptyHash(newUrl);
        $location.$$parse(newUrl);
        $location.$$state = newState;

        defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,
            newState, oldState).defaultPrevented;

        // if the location was changed by a `$locationChangeStart` handler then stop
        // processing this location change
        if ($location.absUrl() !== newUrl) return;

        if (defaultPrevented) {
          $location.$$parse(oldUrl);
          $location.$$state = oldState;
          setBrowserUrlWithFallback(oldUrl, false, oldState);
        } else {
          initializing = false;
          afterLocationChange(oldUrl, oldState);
        }
      });
      if (!$rootScope.$$phase) $rootScope.$digest();
    });

    // update browser
    $rootScope.$watch(function $locationWatch() {
      var oldUrl = trimEmptyHash($browser.url());
      var newUrl = trimEmptyHash($location.absUrl());
      var oldState = $browser.state();
      var currentReplace = $location.$$replace;
      var urlOrStateChanged = oldUrl !== newUrl ||
        ($location.$$html5 && $sniffer.history && oldState !== $location.$$state);

      if (initializing || urlOrStateChanged) {
        initializing = false;

        $rootScope.$evalAsync(function() {
          var newUrl = $location.absUrl();
          var defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,
              $location.$$state, oldState).defaultPrevented;

          // if the location was changed by a `$locationChangeStart` handler then stop
          // processing this location change
          if ($location.absUrl() !== newUrl) return;

          if (defaultPrevented) {
            $location.$$parse(oldUrl);
            $location.$$state = oldState;
          } else {
            if (urlOrStateChanged) {
              setBrowserUrlWithFallback(newUrl, currentReplace,
                                        oldState === $location.$$state ? null : $location.$$state);
            }
            afterLocationChange(oldUrl, oldState);
          }
        });
      }

      $location.$$replace = false;

      // we don't need to return anything because $evalAsync will make the digest loop dirty when
      // there is a change
    });

    return $location;

    function afterLocationChange(oldUrl, oldState) {
      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl,
        $location.$$state, oldState);
    }
}];
}

/**
 * @ngdoc service
 * @name $log
 * @requires $window
 *
 * @description
 * Simple service for logging. Default implementation safely writes the message
 * into the browser's console (if present).
 *
 * The main purpose of this service is to simplify debugging and troubleshooting.
 *
 * The default is to log `debug` messages. You can use
 * {@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.
 *
 * @example
   <example module="logExample" name="log-service">
     <file name="script.js">
       angular.module('logExample', [])
         .controller('LogController', ['$scope', '$log', function($scope, $log) {
           $scope.$log = $log;
           $scope.message = 'Hello World!';
         }]);
     </file>
     <file name="index.html">
       <div ng-controller="LogController">
         <p>Reload this page with open console, enter text and hit the log button...</p>
         <label>Message:
         <input type="text" ng-model="message" /></label>
         <button ng-click="$log.log(message)">log</button>
         <button ng-click="$log.warn(message)">warn</button>
         <button ng-click="$log.info(message)">info</button>
         <button ng-click="$log.error(message)">error</button>
         <button ng-click="$log.debug(message)">debug</button>
       </div>
     </file>
   </example>
 */

/**
 * @ngdoc provider
 * @name $logProvider
 * @this
 *
 * @description
 * Use the `$logProvider` to configure how the application logs messages
 */
function $LogProvider() {
  var debug = true,
      self = this;

  /**
   * @ngdoc method
   * @name $logProvider#debugEnabled
   * @description
   * @param {boolean=} flag enable or disable debug level messages
   * @returns {*} current value if used as getter or itself (chaining) if used as setter
   */
  this.debugEnabled = function(flag) {
    if (isDefined(flag)) {
      debug = flag;
      return this;
    } else {
      return debug;
    }
  };

  this.$get = ['$window', function($window) {
    return {
      /**
       * @ngdoc method
       * @name $log#log
       *
       * @description
       * Write a log message
       */
      log: consoleLog('log'),

      /**
       * @ngdoc method
       * @name $log#info
       *
       * @description
       * Write an information message
       */
      info: consoleLog('info'),

      /**
       * @ngdoc method
       * @name $log#warn
       *
       * @description
       * Write a warning message
       */
      warn: consoleLog('warn'),

      /**
       * @ngdoc method
       * @name $log#error
       *
       * @description
       * Write an error message
       */
      error: consoleLog('error'),

      /**
       * @ngdoc method
       * @name $log#debug
       *
       * @description
       * Write a debug message
       */
      debug: (function() {
        var fn = consoleLog('debug');

        return function() {
          if (debug) {
            fn.apply(self, arguments);
          }
        };
      })()
    };

    function formatError(arg) {
      if (arg instanceof Error) {
        if (arg.stack) {
          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)
              ? 'Error: ' + arg.message + '\n' + arg.stack
              : arg.stack;
        } else if (arg.sourceURL) {
          arg = arg.message + '\n' + arg.sourceURL + ':' + arg.line;
        }
      }
      return arg;
    }

    function consoleLog(type) {
      var console = $window.console || {},
          logFn = console[type] || console.log || noop,
          hasApply = false;

      // Note: reading logFn.apply throws an error in IE11 in IE8 document mode.
      // The reason behind this is that console.log has type "object" in IE8...
      try {
        hasApply = !!logFn.apply;
      } catch (e) { /* empty */ }

      if (hasApply) {
        return function() {
          var args = [];
          forEach(arguments, function(arg) {
            args.push(formatError(arg));
          });
          return logFn.apply(console, args);
        };
      }

      // we are IE which either doesn't have window.console => this is noop and we do nothing,
      // or we are IE where console.log doesn't have apply so we log at least first 2 args
      return function(arg1, arg2) {
        logFn(arg1, arg2 == null ? '' : arg2);
      };
    }
  }];
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *     Any commits to this file should be reviewed with security in mind.  *
 *   Changes to this file can potentially create security vulnerabilities. *
 *          An approval from 2 Core members with history of modifying      *
 *                         this file is required.                          *
 *                                                                         *
 *  Does the change somehow allow for arbitrary javascript to be executed? *
 *    Or allows for someone to change the prototype of built-in objects?   *
 *     Or gives undesired access to variables likes document or window?    *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

var $parseMinErr = minErr('$parse');

var ARRAY_CTOR = [].constructor;
var BOOLEAN_CTOR = (false).constructor;
var FUNCTION_CTOR = Function.constructor;
var NUMBER_CTOR = (0).constructor;
var OBJECT_CTOR = {}.constructor;
var STRING_CTOR = ''.constructor;
var ARRAY_CTOR_PROTO = ARRAY_CTOR.prototype;
var BOOLEAN_CTOR_PROTO = BOOLEAN_CTOR.prototype;
var FUNCTION_CTOR_PROTO = FUNCTION_CTOR.prototype;
var NUMBER_CTOR_PROTO = NUMBER_CTOR.prototype;
var OBJECT_CTOR_PROTO = OBJECT_CTOR.prototype;
var STRING_CTOR_PROTO = STRING_CTOR.prototype;

var CALL = FUNCTION_CTOR_PROTO.call;
var APPLY = FUNCTION_CTOR_PROTO.apply;
var BIND = FUNCTION_CTOR_PROTO.bind;

var objectValueOf = OBJECT_CTOR_PROTO.valueOf;

// Sandboxing Angular Expressions
// ------------------------------
// Angular expressions are generally considered safe because these expressions only have direct
// access to `$scope` and locals. However, one can obtain the ability to execute arbitrary JS code by
// obtaining a reference to native JS functions such as the Function constructor.
//
// As an example, consider the following Angular expression:
//
//   {}.toString.constructor('alert("evil JS code")')
//
// This sandboxing technique is not perfect and doesn't aim to be. The goal is to prevent exploits
// against the expression language, but not to prevent exploits that were enabled by exposing
// sensitive JavaScript or browser APIs on Scope. Exposing such objects on a Scope is never a good
// practice and therefore we are not even trying to protect against interaction with an object
// explicitly exposed in this way.
//
// In general, it is not possible to access a Window object from an angular expression unless a
// window or some DOM object that has a reference to window is published onto a Scope.
// Similarly we prevent invocations of function known to be dangerous, as well as assignments to
// native objects.
//
// See https://docs.angularjs.org/guide/security


function ensureSafeMemberName(name, fullExpression) {
  if (name === '__defineGetter__' || name === '__defineSetter__'
      || name === '__lookupGetter__' || name === '__lookupSetter__'
      || name === '__proto__') {
    throw $parseMinErr('isecfld',
        'Attempting to access a disallowed field in Angular expressions! '
        + 'Expression: {0}', fullExpression);
  }
  return name;
}

function getStringValue(name) {
  // Property names must be strings. This means that non-string objects cannot be used
  // as keys in an object. Any non-string object, including a number, is typecasted
  // into a string via the toString method.
  // -- MDN, https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Property_accessors#Property_names
  //
  // So, to ensure that we are checking the same `name` that JavaScript would use, we cast it
  // to a string. It's not always possible. If `name` is an object and its `toString` method is
  // 'broken' (doesn't return a string, isn't a function, etc.), an error will be thrown:
  //
  // TypeError: Cannot convert object to primitive value
  //
  // For performance reasons, we don't catch this error here and allow it to propagate up the call
  // stack. Note that you'll get the same error in JavaScript if you try to access a property using
  // such a 'broken' object as a key.
  return name + '';
}

function ensureSafeObject(obj, fullExpression) {
  // nifty check if obj is Function that is fast and works across iframes and other contexts
  if (obj) {
    if (obj.constructor === obj) {
      throw $parseMinErr('isecfn',
          'Referencing Function in Angular expressions is disallowed! Expression: {0}',
          fullExpression);
    } else if (// isWindow(obj)
        obj.window === obj) {
      throw $parseMinErr('isecwindow',
          'Referencing the Window in Angular expressions is disallowed! Expression: {0}',
          fullExpression);
    } else if (// isElement(obj)
        obj.children && (obj.nodeName || (obj.prop && obj.attr && obj.find))) {
      throw $parseMinErr('isecdom',
          'Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}',
          fullExpression);
    } else if (// block Object so that we can't get hold of dangerous Object.* methods
        obj === Object) {
      throw $parseMinErr('isecobj',
          'Referencing Object in Angular expressions is disallowed! Expression: {0}',
          fullExpression);
    }
  }
  return obj;
}

function ensureSafeFunction(obj, fullExpression) {
  if (obj) {
    if (obj.constructor === obj) {
      throw $parseMinErr('isecfn',
        'Referencing Function in Angular expressions is disallowed! Expression: {0}',
        fullExpression);
    } else if (obj === CALL || obj === APPLY || obj === BIND) {
      throw $parseMinErr('isecff',
        'Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}',
        fullExpression);
    }
  }
}

function ensureSafeAssignContext(obj, fullExpression) {
  if (obj) {
    if (obj === ARRAY_CTOR ||
        obj === BOOLEAN_CTOR ||
        obj === FUNCTION_CTOR ||
        obj === NUMBER_CTOR ||
        obj === OBJECT_CTOR ||
        obj === STRING_CTOR ||
        obj === ARRAY_CTOR_PROTO ||
        obj === BOOLEAN_CTOR_PROTO ||
        obj === FUNCTION_CTOR_PROTO ||
        obj === NUMBER_CTOR_PROTO ||
        obj === OBJECT_CTOR_PROTO ||
        obj === STRING_CTOR_PROTO) {
      throw $parseMinErr('isecaf',
        'Assigning to a constructor or its prototype is disallowed! Expression: {0}',
        fullExpression);
    }
  }
}

var OPERATORS = createMap();
forEach('+ - * / % === !== == != < > <= >= && || ! = |'.split(' '), function(operator) { OPERATORS[operator] = true; });
var ESCAPE = {'n':'\n', 'f':'\f', 'r':'\r', 't':'\t', 'v':'\v', '\'':'\'', '"':'"'};


/////////////////////////////////////////


/**
 * @constructor
 */
var Lexer = function Lexer(options) {
  this.options = options;
};

Lexer.prototype = {
  constructor: Lexer,

  lex: function(text) {
    this.text = text;
    this.index = 0;
    this.tokens = [];

    while (this.index < this.text.length) {
      var ch = this.text.charAt(this.index);
      if (ch === '"' || ch === '\'') {
        this.readString(ch);
      } else if (this.isNumber(ch) || ch === '.' && this.isNumber(this.peek())) {
        this.readNumber();
      } else if (this.isIdentifierStart(this.peekMultichar())) {
        this.readIdent();
      } else if (this.is(ch, '(){}[].,;:?')) {
        this.tokens.push({index: this.index, text: ch});
        this.index++;
      } else if (this.isWhitespace(ch)) {
        this.index++;
      } else {
        var ch2 = ch + this.peek();
        var ch3 = ch2 + this.peek(2);
        var op1 = OPERATORS[ch];
        var op2 = OPERATORS[ch2];
        var op3 = OPERATORS[ch3];
        if (op1 || op2 || op3) {
          var token = op3 ? ch3 : (op2 ? ch2 : ch);
          this.tokens.push({index: this.index, text: token, operator: true});
          this.index += token.length;
        } else {
          this.throwError('Unexpected next character ', this.index, this.index + 1);
        }
      }
    }
    return this.tokens;
  },

  is: function(ch, chars) {
    return chars.indexOf(ch) !== -1;
  },

  peek: function(i) {
    var num = i || 1;
    return (this.index + num < this.text.length) ? this.text.charAt(this.index + num) : false;
  },

  isNumber: function(ch) {
    return ('0' <= ch && ch <= '9') && typeof ch === 'string';
  },

  isWhitespace: function(ch) {
    // IE treats non-breaking space as \u00A0
    return (ch === ' ' || ch === '\r' || ch === '\t' ||
            ch === '\n' || ch === '\v' || ch === '\u00A0');
  },

  isIdentifierStart: function(ch) {
    return this.options.isIdentifierStart ?
        this.options.isIdentifierStart(ch, this.codePointAt(ch)) :
        this.isValidIdentifierStart(ch);
  },

  isValidIdentifierStart: function(ch) {
    return ('a' <= ch && ch <= 'z' ||
            'A' <= ch && ch <= 'Z' ||
            '_' === ch || ch === '$');
  },

  isIdentifierContinue: function(ch) {
    return this.options.isIdentifierContinue ?
        this.options.isIdentifierContinue(ch, this.codePointAt(ch)) :
        this.isValidIdentifierContinue(ch);
  },

  isValidIdentifierContinue: function(ch, cp) {
    return this.isValidIdentifierStart(ch, cp) || this.isNumber(ch);
  },

  codePointAt: function(ch) {
    if (ch.length === 1) return ch.charCodeAt(0);
    // eslint-disable-next-line no-bitwise
    return (ch.charCodeAt(0) << 10) + ch.charCodeAt(1) - 0x35FDC00;
  },

  peekMultichar: function() {
    var ch = this.text.charAt(this.index);
    var peek = this.peek();
    if (!peek) {
      return ch;
    }
    var cp1 = ch.charCodeAt(0);
    var cp2 = peek.charCodeAt(0);
    if (cp1 >= 0xD800 && cp1 <= 0xDBFF && cp2 >= 0xDC00 && cp2 <= 0xDFFF) {
      return ch + peek;
    }
    return ch;
  },

  isExpOperator: function(ch) {
    return (ch === '-' || ch === '+' || this.isNumber(ch));
  },

  throwError: function(error, start, end) {
    end = end || this.index;
    var colStr = (isDefined(start)
            ? 's ' + start +  '-' + this.index + ' [' + this.text.substring(start, end) + ']'
            : ' ' + end);
    throw $parseMinErr('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].',
        error, colStr, this.text);
  },

  readNumber: function() {
    var number = '';
    var start = this.index;
    while (this.index < this.text.length) {
      var ch = lowercase(this.text.charAt(this.index));
      if (ch === '.' || this.isNumber(ch)) {
        number += ch;
      } else {
        var peekCh = this.peek();
        if (ch === 'e' && this.isExpOperator(peekCh)) {
          number += ch;
        } else if (this.isExpOperator(ch) &&
            peekCh && this.isNumber(peekCh) &&
            number.charAt(number.length - 1) === 'e') {
          number += ch;
        } else if (this.isExpOperator(ch) &&
            (!peekCh || !this.isNumber(peekCh)) &&
            number.charAt(number.length - 1) === 'e') {
          this.throwError('Invalid exponent');
        } else {
          break;
        }
      }
      this.index++;
    }
    this.tokens.push({
      index: start,
      text: number,
      constant: true,
      value: Number(number)
    });
  },

  readIdent: function() {
    var start = this.index;
    this.index += this.peekMultichar().length;
    while (this.index < this.text.length) {
      var ch = this.peekMultichar();
      if (!this.isIdentifierContinue(ch)) {
        break;
      }
      this.index += ch.length;
    }
    this.tokens.push({
      index: start,
      text: this.text.slice(start, this.index),
      identifier: true
    });
  },

  readString: function(quote) {
    var start = this.index;
    this.index++;
    var string = '';
    var rawString = quote;
    var escape = false;
    while (this.index < this.text.length) {
      var ch = this.text.charAt(this.index);
      rawString += ch;
      if (escape) {
        if (ch === 'u') {
          var hex = this.text.substring(this.index + 1, this.index + 5);
          if (!hex.match(/[\da-f]{4}/i)) {
            this.throwError('Invalid unicode escape [\\u' + hex + ']');
          }
          this.index += 4;
          string += String.fromCharCode(parseInt(hex, 16));
        } else {
          var rep = ESCAPE[ch];
          string = string + (rep || ch);
        }
        escape = false;
      } else if (ch === '\\') {
        escape = true;
      } else if (ch === quote) {
        this.index++;
        this.tokens.push({
          index: start,
          text: rawString,
          constant: true,
          value: string
        });
        return;
      } else {
        string += ch;
      }
      this.index++;
    }
    this.throwError('Unterminated quote', start);
  }
};

var AST = function AST(lexer, options) {
  this.lexer = lexer;
  this.options = options;
};

AST.Program = 'Program';
AST.ExpressionStatement = 'ExpressionStatement';
AST.AssignmentExpression = 'AssignmentExpression';
AST.ConditionalExpression = 'ConditionalExpression';
AST.LogicalExpression = 'LogicalExpression';
AST.BinaryExpression = 'BinaryExpression';
AST.UnaryExpression = 'UnaryExpression';
AST.CallExpression = 'CallExpression';
AST.MemberExpression = 'MemberExpression';
AST.Identifier = 'Identifier';
AST.Literal = 'Literal';
AST.ArrayExpression = 'ArrayExpression';
AST.Property = 'Property';
AST.ObjectExpression = 'ObjectExpression';
AST.ThisExpression = 'ThisExpression';
AST.LocalsExpression = 'LocalsExpression';

// Internal use only
AST.NGValueParameter = 'NGValueParameter';

AST.prototype = {
  ast: function(text) {
    this.text = text;
    this.tokens = this.lexer.lex(text);

    var value = this.program();

    if (this.tokens.length !== 0) {
      this.throwError('is an unexpected token', this.tokens[0]);
    }

    return value;
  },

  program: function() {
    var body = [];
    while (true) {
      if (this.tokens.length > 0 && !this.peek('}', ')', ';', ']'))
        body.push(this.expressionStatement());
      if (!this.expect(';')) {
        return { type: AST.Program, body: body};
      }
    }
  },

  expressionStatement: function() {
    return { type: AST.ExpressionStatement, expression: this.filterChain() };
  },

  filterChain: function() {
    var left = this.expression();
    while (this.expect('|')) {
      left = this.filter(left);
    }
    return left;
  },

  expression: function() {
    return this.assignment();
  },

  assignment: function() {
    var result = this.ternary();
    if (this.expect('=')) {
      if (!isAssignable(result)) {
        throw $parseMinErr('lval', 'Trying to assign a value to a non l-value');
      }

      result = { type: AST.AssignmentExpression, left: result, right: this.assignment(), operator: '='};
    }
    return result;
  },

  ternary: function() {
    var test = this.logicalOR();
    var alternate;
    var consequent;
    if (this.expect('?')) {
      alternate = this.expression();
      if (this.consume(':')) {
        consequent = this.expression();
        return { type: AST.ConditionalExpression, test: test, alternate: alternate, consequent: consequent};
      }
    }
    return test;
  },

  logicalOR: function() {
    var left = this.logicalAND();
    while (this.expect('||')) {
      left = { type: AST.LogicalExpression, operator: '||', left: left, right: this.logicalAND() };
    }
    return left;
  },

  logicalAND: function() {
    var left = this.equality();
    while (this.expect('&&')) {
      left = { type: AST.LogicalExpression, operator: '&&', left: left, right: this.equality()};
    }
    return left;
  },

  equality: function() {
    var left = this.relational();
    var token;
    while ((token = this.expect('==','!=','===','!=='))) {
      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.relational() };
    }
    return left;
  },

  relational: function() {
    var left = this.additive();
    var token;
    while ((token = this.expect('<', '>', '<=', '>='))) {
      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.additive() };
    }
    return left;
  },

  additive: function() {
    var left = this.multiplicative();
    var token;
    while ((token = this.expect('+','-'))) {
      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.multiplicative() };
    }
    return left;
  },

  multiplicative: function() {
    var left = this.unary();
    var token;
    while ((token = this.expect('*','/','%'))) {
      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.unary() };
    }
    return left;
  },

  unary: function() {
    var token;
    if ((token = this.expect('+', '-', '!'))) {
      return { type: AST.UnaryExpression, operator: token.text, prefix: true, argument: this.unary() };
    } else {
      return this.primary();
    }
  },

  primary: function() {
    var primary;
    if (this.expect('(')) {
      primary = this.filterChain();
      this.consume(')');
    } else if (this.expect('[')) {
      primary = this.arrayDeclaration();
    } else if (this.expect('{')) {
      primary = this.object();
    } else if (this.selfReferential.hasOwnProperty(this.peek().text)) {
      primary = copy(this.selfReferential[this.consume().text]);
    } else if (this.options.literals.hasOwnProperty(this.peek().text)) {
      primary = { type: AST.Literal, value: this.options.literals[this.consume().text]};
    } else if (this.peek().identifier) {
      primary = this.identifier();
    } else if (this.peek().constant) {
      primary = this.constant();
    } else {
      this.throwError('not a primary expression', this.peek());
    }

    var next;
    while ((next = this.expect('(', '[', '.'))) {
      if (next.text === '(') {
        primary = {type: AST.CallExpression, callee: primary, arguments: this.parseArguments() };
        this.consume(')');
      } else if (next.text === '[') {
        primary = { type: AST.MemberExpression, object: primary, property: this.expression(), computed: true };
        this.consume(']');
      } else if (next.text === '.') {
        primary = { type: AST.MemberExpression, object: primary, property: this.identifier(), computed: false };
      } else {
        this.throwError('IMPOSSIBLE');
      }
    }
    return primary;
  },

  filter: function(baseExpression) {
    var args = [baseExpression];
    var result = {type: AST.CallExpression, callee: this.identifier(), arguments: args, filter: true};

    while (this.expect(':')) {
      args.push(this.expression());
    }

    return result;
  },

  parseArguments: function() {
    var args = [];
    if (this.peekToken().text !== ')') {
      do {
        args.push(this.filterChain());
      } while (this.expect(','));
    }
    return args;
  },

  identifier: function() {
    var token = this.consume();
    if (!token.identifier) {
      this.throwError('is not a valid identifier', token);
    }
    return { type: AST.Identifier, name: token.text };
  },

  constant: function() {
    // TODO check that it is a constant
    return { type: AST.Literal, value: this.consume().value };
  },

  arrayDeclaration: function() {
    var elements = [];
    if (this.peekToken().text !== ']') {
      do {
        if (this.peek(']')) {
          // Support trailing commas per ES5.1.
          break;
        }
        elements.push(this.expression());
      } while (this.expect(','));
    }
    this.consume(']');

    return { type: AST.ArrayExpression, elements: elements };
  },

  object: function() {
    var properties = [], property;
    if (this.peekToken().text !== '}') {
      do {
        if (this.peek('}')) {
          // Support trailing commas per ES5.1.
          break;
        }
        property = {type: AST.Property, kind: 'init'};
        if (this.peek().constant) {
          property.key = this.constant();
          property.computed = false;
          this.consume(':');
          property.value = this.expression();
        } else if (this.peek().identifier) {
          property.key = this.identifier();
          property.computed = false;
          if (this.peek(':')) {
            this.consume(':');
            property.value = this.expression();
          } else {
            property.value = property.key;
          }
        } else if (this.peek('[')) {
          this.consume('[');
          property.key = this.expression();
          this.consume(']');
          property.computed = true;
          this.consume(':');
          property.value = this.expression();
        } else {
          this.throwError('invalid key', this.peek());
        }
        properties.push(property);
      } while (this.expect(','));
    }
    this.consume('}');

    return {type: AST.ObjectExpression, properties: properties };
  },

  throwError: function(msg, token) {
    throw $parseMinErr('syntax',
        'Syntax Error: Token \'{0}\' {1} at column {2} of the expression [{3}] starting at [{4}].',
          token.text, msg, (token.index + 1), this.text, this.text.substring(token.index));
  },

  consume: function(e1) {
    if (this.tokens.length === 0) {
      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);
    }

    var token = this.expect(e1);
    if (!token) {
      this.throwError('is unexpected, expecting [' + e1 + ']', this.peek());
    }
    return token;
  },

  peekToken: function() {
    if (this.tokens.length === 0) {
      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);
    }
    return this.tokens[0];
  },

  peek: function(e1, e2, e3, e4) {
    return this.peekAhead(0, e1, e2, e3, e4);
  },

  peekAhead: function(i, e1, e2, e3, e4) {
    if (this.tokens.length > i) {
      var token = this.tokens[i];
      var t = token.text;
      if (t === e1 || t === e2 || t === e3 || t === e4 ||
          (!e1 && !e2 && !e3 && !e4)) {
        return token;
      }
    }
    return false;
  },

  expect: function(e1, e2, e3, e4) {
    var token = this.peek(e1, e2, e3, e4);
    if (token) {
      this.tokens.shift();
      return token;
    }
    return false;
  },

  selfReferential: {
    'this': {type: AST.ThisExpression },
    '$locals': {type: AST.LocalsExpression }
  }
};

function ifDefined(v, d) {
  return typeof v !== 'undefined' ? v : d;
}

function plusFn(l, r) {
  if (typeof l === 'undefined') return r;
  if (typeof r === 'undefined') return l;
  return l + r;
}

function isStateless($filter, filterName) {
  var fn = $filter(filterName);
  return !fn.$stateful;
}

function findConstantAndWatchExpressions(ast, $filter) {
  var allConstants;
  var argsToWatch;
  var isStatelessFilter;
  switch (ast.type) {
  case AST.Program:
    allConstants = true;
    forEach(ast.body, function(expr) {
      findConstantAndWatchExpressions(expr.expression, $filter);
      allConstants = allConstants && expr.expression.constant;
    });
    ast.constant = allConstants;
    break;
  case AST.Literal:
    ast.constant = true;
    ast.toWatch = [];
    break;
  case AST.UnaryExpression:
    findConstantAndWatchExpressions(ast.argument, $filter);
    ast.constant = ast.argument.constant;
    ast.toWatch = ast.argument.toWatch;
    break;
  case AST.BinaryExpression:
    findConstantAndWatchExpressions(ast.left, $filter);
    findConstantAndWatchExpressions(ast.right, $filter);
    ast.constant = ast.left.constant && ast.right.constant;
    ast.toWatch = ast.left.toWatch.concat(ast.right.toWatch);
    break;
  case AST.LogicalExpression:
    findConstantAndWatchExpressions(ast.left, $filter);
    findConstantAndWatchExpressions(ast.right, $filter);
    ast.constant = ast.left.constant && ast.right.constant;
    ast.toWatch = ast.constant ? [] : [ast];
    break;
  case AST.ConditionalExpression:
    findConstantAndWatchExpressions(ast.test, $filter);
    findConstantAndWatchExpressions(ast.alternate, $filter);
    findConstantAndWatchExpressions(ast.consequent, $filter);
    ast.constant = ast.test.constant && ast.alternate.constant && ast.consequent.constant;
    ast.toWatch = ast.constant ? [] : [ast];
    break;
  case AST.Identifier:
    ast.constant = false;
    ast.toWatch = [ast];
    break;
  case AST.MemberExpression:
    findConstantAndWatchExpressions(ast.object, $filter);
    if (ast.computed) {
      findConstantAndWatchExpressions(ast.property, $filter);
    }
    ast.constant = ast.object.constant && (!ast.computed || ast.property.constant);
    ast.toWatch = [ast];
    break;
  case AST.CallExpression:
    isStatelessFilter = ast.filter ? isStateless($filter, ast.callee.name) : false;
    allConstants = isStatelessFilter;
    argsToWatch = [];
    forEach(ast.arguments, function(expr) {
      findConstantAndWatchExpressions(expr, $filter);
      allConstants = allConstants && expr.constant;
      if (!expr.constant) {
        argsToWatch.push.apply(argsToWatch, expr.toWatch);
      }
    });
    ast.constant = allConstants;
    ast.toWatch = isStatelessFilter ? argsToWatch : [ast];
    break;
  case AST.AssignmentExpression:
    findConstantAndWatchExpressions(ast.left, $filter);
    findConstantAndWatchExpressions(ast.right, $filter);
    ast.constant = ast.left.constant && ast.right.constant;
    ast.toWatch = [ast];
    break;
  case AST.ArrayExpression:
    allConstants = true;
    argsToWatch = [];
    forEach(ast.elements, function(expr) {
      findConstantAndWatchExpressions(expr, $filter);
      allConstants = allConstants && expr.constant;
      if (!expr.constant) {
        argsToWatch.push.apply(argsToWatch, expr.toWatch);
      }
    });
    ast.constant = allConstants;
    ast.toWatch = argsToWatch;
    break;
  case AST.ObjectExpression:
    allConstants = true;
    argsToWatch = [];
    forEach(ast.properties, function(property) {
      findConstantAndWatchExpressions(property.value, $filter);
      allConstants = allConstants && property.value.constant && !property.computed;
      if (!property.value.constant) {
        argsToWatch.push.apply(argsToWatch, property.value.toWatch);
      }
    });
    ast.constant = allConstants;
    ast.toWatch = argsToWatch;
    break;
  case AST.ThisExpression:
    ast.constant = false;
    ast.toWatch = [];
    break;
  case AST.LocalsExpression:
    ast.constant = false;
    ast.toWatch = [];
    break;
  }
}

function getInputs(body) {
  if (body.length !== 1) return;
  var lastExpression = body[0].expression;
  var candidate = lastExpression.toWatch;
  if (candidate.length !== 1) return candidate;
  return candidate[0] !== lastExpression ? candidate : undefined;
}

function isAssignable(ast) {
  return ast.type === AST.Identifier || ast.type === AST.MemberExpression;
}

function assignableAST(ast) {
  if (ast.body.length === 1 && isAssignable(ast.body[0].expression)) {
    return {type: AST.AssignmentExpression, left: ast.body[0].expression, right: {type: AST.NGValueParameter}, operator: '='};
  }
}

function isLiteral(ast) {
  return ast.body.length === 0 ||
      ast.body.length === 1 && (
      ast.body[0].expression.type === AST.Literal ||
      ast.body[0].expression.type === AST.ArrayExpression ||
      ast.body[0].expression.type === AST.ObjectExpression);
}

function isConstant(ast) {
  return ast.constant;
}

function ASTCompiler(astBuilder, $filter) {
  this.astBuilder = astBuilder;
  this.$filter = $filter;
}

ASTCompiler.prototype = {
  compile: function(expression, expensiveChecks) {
    var self = this;
    var ast = this.astBuilder.ast(expression);
    this.state = {
      nextId: 0,
      filters: {},
      expensiveChecks: expensiveChecks,
      fn: {vars: [], body: [], own: {}},
      assign: {vars: [], body: [], own: {}},
      inputs: []
    };
    findConstantAndWatchExpressions(ast, self.$filter);
    var extra = '';
    var assignable;
    this.stage = 'assign';
    if ((assignable = assignableAST(ast))) {
      this.state.computing = 'assign';
      var result = this.nextId();
      this.recurse(assignable, result);
      this.return_(result);
      extra = 'fn.assign=' + this.generateFunction('assign', 's,v,l');
    }
    var toWatch = getInputs(ast.body);
    self.stage = 'inputs';
    forEach(toWatch, function(watch, key) {
      var fnKey = 'fn' + key;
      self.state[fnKey] = {vars: [], body: [], own: {}};
      self.state.computing = fnKey;
      var intoId = self.nextId();
      self.recurse(watch, intoId);
      self.return_(intoId);
      self.state.inputs.push(fnKey);
      watch.watchId = key;
    });
    this.state.computing = 'fn';
    this.stage = 'main';
    this.recurse(ast);
    var fnString =
      // The build and minification steps remove the string "use strict" from the code, but this is done using a regex.
      // This is a workaround for this until we do a better job at only removing the prefix only when we should.
      '"' + this.USE + ' ' + this.STRICT + '";\n' +
      this.filterPrefix() +
      'var fn=' + this.generateFunction('fn', 's,l,a,i') +
      extra +
      this.watchFns() +
      'return fn;';

    // eslint-disable-next-line no-new-func
    var fn = (new Function('$filter',
        'ensureSafeMemberName',
        'ensureSafeObject',
        'ensureSafeFunction',
        'getStringValue',
        'ensureSafeAssignContext',
        'ifDefined',
        'plus',
        'text',
        fnString))(
          this.$filter,
          ensureSafeMemberName,
          ensureSafeObject,
          ensureSafeFunction,
          getStringValue,
          ensureSafeAssignContext,
          ifDefined,
          plusFn,
          expression);
    this.state = this.stage = undefined;
    fn.literal = isLiteral(ast);
    fn.constant = isConstant(ast);
    return fn;
  },

  USE: 'use',

  STRICT: 'strict',

  watchFns: function() {
    var result = [];
    var fns = this.state.inputs;
    var self = this;
    forEach(fns, function(name) {
      result.push('var ' + name + '=' + self.generateFunction(name, 's'));
    });
    if (fns.length) {
      result.push('fn.inputs=[' + fns.join(',') + '];');
    }
    return result.join('');
  },

  generateFunction: function(name, params) {
    return 'function(' + params + '){' +
        this.varsPrefix(name) +
        this.body(name) +
        '};';
  },

  filterPrefix: function() {
    var parts = [];
    var self = this;
    forEach(this.state.filters, function(id, filter) {
      parts.push(id + '=$filter(' + self.escape(filter) + ')');
    });
    if (parts.length) return 'var ' + parts.join(',') + ';';
    return '';
  },

  varsPrefix: function(section) {
    return this.state[section].vars.length ? 'var ' + this.state[section].vars.join(',') + ';' : '';
  },

  body: function(section) {
    return this.state[section].body.join('');
  },

  recurse: function(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck) {
    var left, right, self = this, args, expression, computed;
    recursionFn = recursionFn || noop;
    if (!skipWatchIdCheck && isDefined(ast.watchId)) {
      intoId = intoId || this.nextId();
      this.if_('i',
        this.lazyAssign(intoId, this.computedMember('i', ast.watchId)),
        this.lazyRecurse(ast, intoId, nameId, recursionFn, create, true)
      );
      return;
    }
    switch (ast.type) {
    case AST.Program:
      forEach(ast.body, function(expression, pos) {
        self.recurse(expression.expression, undefined, undefined, function(expr) { right = expr; });
        if (pos !== ast.body.length - 1) {
          self.current().body.push(right, ';');
        } else {
          self.return_(right);
        }
      });
      break;
    case AST.Literal:
      expression = this.escape(ast.value);
      this.assign(intoId, expression);
      recursionFn(expression);
      break;
    case AST.UnaryExpression:
      this.recurse(ast.argument, undefined, undefined, function(expr) { right = expr; });
      expression = ast.operator + '(' + this.ifDefined(right, 0) + ')';
      this.assign(intoId, expression);
      recursionFn(expression);
      break;
    case AST.BinaryExpression:
      this.recurse(ast.left, undefined, undefined, function(expr) { left = expr; });
      this.recurse(ast.right, undefined, undefined, function(expr) { right = expr; });
      if (ast.operator === '+') {
        expression = this.plus(left, right);
      } else if (ast.operator === '-') {
        expression = this.ifDefined(left, 0) + ast.operator + this.ifDefined(right, 0);
      } else {
        expression = '(' + left + ')' + ast.operator + '(' + right + ')';
      }
      this.assign(intoId, expression);
      recursionFn(expression);
      break;
    case AST.LogicalExpression:
      intoId = intoId || this.nextId();
      self.recurse(ast.left, intoId);
      self.if_(ast.operator === '&&' ? intoId : self.not(intoId), self.lazyRecurse(ast.right, intoId));
      recursionFn(intoId);
      break;
    case AST.ConditionalExpression:
      intoId = intoId || this.nextId();
      self.recurse(ast.test, intoId);
      self.if_(intoId, self.lazyRecurse(ast.alternate, intoId), self.lazyRecurse(ast.consequent, intoId));
      recursionFn(intoId);
      break;
    case AST.Identifier:
      intoId = intoId || this.nextId();
      if (nameId) {
        nameId.context = self.stage === 'inputs' ? 's' : this.assign(this.nextId(), this.getHasOwnProperty('l', ast.name) + '?l:s');
        nameId.computed = false;
        nameId.name = ast.name;
      }
      ensureSafeMemberName(ast.name);
      self.if_(self.stage === 'inputs' || self.not(self.getHasOwnProperty('l', ast.name)),
        function() {
          self.if_(self.stage === 'inputs' || 's', function() {
            if (create && create !== 1) {
              self.if_(
                self.not(self.nonComputedMember('s', ast.name)),
                self.lazyAssign(self.nonComputedMember('s', ast.name), '{}'));
            }
            self.assign(intoId, self.nonComputedMember('s', ast.name));
          });
        }, intoId && self.lazyAssign(intoId, self.nonComputedMember('l', ast.name))
        );
      if (self.state.expensiveChecks || isPossiblyDangerousMemberName(ast.name)) {
        self.addEnsureSafeObject(intoId);
      }
      recursionFn(intoId);
      break;
    case AST.MemberExpression:
      left = nameId && (nameId.context = this.nextId()) || this.nextId();
      intoId = intoId || this.nextId();
      self.recurse(ast.object, left, undefined, function() {
        self.if_(self.notNull(left), function() {
          if (create && create !== 1) {
            self.addEnsureSafeAssignContext(left);
          }
          if (ast.computed) {
            right = self.nextId();
            self.recurse(ast.property, right);
            self.getStringValue(right);
            self.addEnsureSafeMemberName(right);
            if (create && create !== 1) {
              self.if_(self.not(self.computedMember(left, right)), self.lazyAssign(self.computedMember(left, right), '{}'));
            }
            expression = self.ensureSafeObject(self.computedMember(left, right));
            self.assign(intoId, expression);
            if (nameId) {
              nameId.computed = true;
              nameId.name = right;
            }
          } else {
            ensureSafeMemberName(ast.property.name);
            if (create && create !== 1) {
              self.if_(self.not(self.nonComputedMember(left, ast.property.name)), self.lazyAssign(self.nonComputedMember(left, ast.property.name), '{}'));
            }
            expression = self.nonComputedMember(left, ast.property.name);
            if (self.state.expensiveChecks || isPossiblyDangerousMemberName(ast.property.name)) {
              expression = self.ensureSafeObject(expression);
            }
            self.assign(intoId, expression);
            if (nameId) {
              nameId.computed = false;
              nameId.name = ast.property.name;
            }
          }
        }, function() {
          self.assign(intoId, 'undefined');
        });
        recursionFn(intoId);
      }, !!create);
      break;
    case AST.CallExpression:
      intoId = intoId || this.nextId();
      if (ast.filter) {
        right = self.filter(ast.callee.name);
        args = [];
        forEach(ast.arguments, function(expr) {
          var argument = self.nextId();
          self.recurse(expr, argument);
          args.push(argument);
        });
        expression = right + '(' + args.join(',') + ')';
        self.assign(intoId, expression);
        recursionFn(intoId);
      } else {
        right = self.nextId();
        left = {};
        args = [];
        self.recurse(ast.callee, right, left, function() {
          self.if_(self.notNull(right), function() {
            self.addEnsureSafeFunction(right);
            forEach(ast.arguments, function(expr) {
              self.recurse(expr, self.nextId(), undefined, function(argument) {
                args.push(self.ensureSafeObject(argument));
              });
            });
            if (left.name) {
              if (!self.state.expensiveChecks) {
                self.addEnsureSafeObject(left.context);
              }
              expression = self.member(left.context, left.name, left.computed) + '(' + args.join(',') + ')';
            } else {
              expression = right + '(' + args.join(',') + ')';
            }
            expression = self.ensureSafeObject(expression);
            self.assign(intoId, expression);
          }, function() {
            self.assign(intoId, 'undefined');
          });
          recursionFn(intoId);
        });
      }
      break;
    case AST.AssignmentExpression:
      right = this.nextId();
      left = {};
      this.recurse(ast.left, undefined, left, function() {
        self.if_(self.notNull(left.context), function() {
          self.recurse(ast.right, right);
          self.addEnsureSafeObject(self.member(left.context, left.name, left.computed));
          self.addEnsureSafeAssignContext(left.context);
          expression = self.member(left.context, left.name, left.computed) + ast.operator + right;
          self.assign(intoId, expression);
          recursionFn(intoId || expression);
        });
      }, 1);
      break;
    case AST.ArrayExpression:
      args = [];
      forEach(ast.elements, function(expr) {
        self.recurse(expr, self.nextId(), undefined, function(argument) {
          args.push(argument);
        });
      });
      expression = '[' + args.join(',') + ']';
      this.assign(intoId, expression);
      recursionFn(expression);
      break;
    case AST.ObjectExpression:
      args = [];
      computed = false;
      forEach(ast.properties, function(property) {
        if (property.computed) {
          computed = true;
        }
      });
      if (computed) {
        intoId = intoId || this.nextId();
        this.assign(intoId, '{}');
        forEach(ast.properties, function(property) {
          if (property.computed) {
            left = self.nextId();
            self.recurse(property.key, left);
          } else {
            left = property.key.type === AST.Identifier ?
                       property.key.name :
                       ('' + property.key.value);
          }
          right = self.nextId();
          self.recurse(property.value, right);
          self.assign(self.member(intoId, left, property.computed), right);
        });
      } else {
        forEach(ast.properties, function(property) {
          self.recurse(property.value, ast.constant ? undefined : self.nextId(), undefined, function(expr) {
            args.push(self.escape(
                property.key.type === AST.Identifier ? property.key.name :
                  ('' + property.key.value)) +
                ':' + expr);
          });
        });
        expression = '{' + args.join(',') + '}';
        this.assign(intoId, expression);
      }
      recursionFn(intoId || expression);
      break;
    case AST.ThisExpression:
      this.assign(intoId, 's');
      recursionFn('s');
      break;
    case AST.LocalsExpression:
      this.assign(intoId, 'l');
      recursionFn('l');
      break;
    case AST.NGValueParameter:
      this.assign(intoId, 'v');
      recursionFn('v');
      break;
    }
  },

  getHasOwnProperty: function(element, property) {
    var key = element + '.' + property;
    var own = this.current().own;
    if (!own.hasOwnProperty(key)) {
      own[key] = this.nextId(false, element + '&&(' + this.escape(property) + ' in ' + element + ')');
    }
    return own[key];
  },

  assign: function(id, value) {
    if (!id) return;
    this.current().body.push(id, '=', value, ';');
    return id;
  },

  filter: function(filterName) {
    if (!this.state.filters.hasOwnProperty(filterName)) {
      this.state.filters[filterName] = this.nextId(true);
    }
    return this.state.filters[filterName];
  },

  ifDefined: function(id, defaultValue) {
    return 'ifDefined(' + id + ',' + this.escape(defaultValue) + ')';
  },

  plus: function(left, right) {
    return 'plus(' + left + ',' + right + ')';
  },

  return_: function(id) {
    this.current().body.push('return ', id, ';');
  },

  if_: function(test, alternate, consequent) {
    if (test === true) {
      alternate();
    } else {
      var body = this.current().body;
      body.push('if(', test, '){');
      alternate();
      body.push('}');
      if (consequent) {
        body.push('else{');
        consequent();
        body.push('}');
      }
    }
  },

  not: function(expression) {
    return '!(' + expression + ')';
  },

  notNull: function(expression) {
    return expression + '!=null';
  },

  nonComputedMember: function(left, right) {
    var SAFE_IDENTIFIER = /^[$_a-zA-Z][$_a-zA-Z0-9]*$/;
    var UNSAFE_CHARACTERS = /[^$_a-zA-Z0-9]/g;
    if (SAFE_IDENTIFIER.test(right)) {
      return left + '.' + right;
    } else {
      return left  + '["' + right.replace(UNSAFE_CHARACTERS, this.stringEscapeFn) + '"]';
    }
  },

  computedMember: function(left, right) {
    return left + '[' + right + ']';
  },

  member: function(left, right, computed) {
    if (computed) return this.computedMember(left, right);
    return this.nonComputedMember(left, right);
  },

  addEnsureSafeObject: function(item) {
    this.current().body.push(this.ensureSafeObject(item), ';');
  },

  addEnsureSafeMemberName: function(item) {
    this.current().body.push(this.ensureSafeMemberName(item), ';');
  },

  addEnsureSafeFunction: function(item) {
    this.current().body.push(this.ensureSafeFunction(item), ';');
  },

  addEnsureSafeAssignContext: function(item) {
    this.current().body.push(this.ensureSafeAssignContext(item), ';');
  },

  ensureSafeObject: function(item) {
    return 'ensureSafeObject(' + item + ',text)';
  },

  ensureSafeMemberName: function(item) {
    return 'ensureSafeMemberName(' + item + ',text)';
  },

  ensureSafeFunction: function(item) {
    return 'ensureSafeFunction(' + item + ',text)';
  },

  getStringValue: function(item) {
    this.assign(item, 'getStringValue(' + item + ')');
  },

  ensureSafeAssignContext: function(item) {
    return 'ensureSafeAssignContext(' + item + ',text)';
  },

  lazyRecurse: function(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck) {
    var self = this;
    return function() {
      self.recurse(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck);
    };
  },

  lazyAssign: function(id, value) {
    var self = this;
    return function() {
      self.assign(id, value);
    };
  },

  stringEscapeRegex: /[^ a-zA-Z0-9]/g,

  stringEscapeFn: function(c) {
    return '\\u' + ('0000' + c.charCodeAt(0).toString(16)).slice(-4);
  },

  escape: function(value) {
    if (isString(value)) return '\'' + value.replace(this.stringEscapeRegex, this.stringEscapeFn) + '\'';
    if (isNumber(value)) return value.toString();
    if (value === true) return 'true';
    if (value === false) return 'false';
    if (value === null) return 'null';
    if (typeof value === 'undefined') return 'undefined';

    throw $parseMinErr('esc', 'IMPOSSIBLE');
  },

  nextId: function(skip, init) {
    var id = 'v' + (this.state.nextId++);
    if (!skip) {
      this.current().vars.push(id + (init ? '=' + init : ''));
    }
    return id;
  },

  current: function() {
    return this.state[this.state.computing];
  }
};


function ASTInterpreter(astBuilder, $filter) {
  this.astBuilder = astBuilder;
  this.$filter = $filter;
}

ASTInterpreter.prototype = {
  compile: function(expression, expensiveChecks) {
    var self = this;
    var ast = this.astBuilder.ast(expression);
    this.expression = expression;
    this.expensiveChecks = expensiveChecks;
    findConstantAndWatchExpressions(ast, self.$filter);
    var assignable;
    var assign;
    if ((assignable = assignableAST(ast))) {
      assign = this.recurse(assignable);
    }
    var toWatch = getInputs(ast.body);
    var inputs;
    if (toWatch) {
      inputs = [];
      forEach(toWatch, function(watch, key) {
        var input = self.recurse(watch);
        watch.input = input;
        inputs.push(input);
        watch.watchId = key;
      });
    }
    var expressions = [];
    forEach(ast.body, function(expression) {
      expressions.push(self.recurse(expression.expression));
    });
    var fn = ast.body.length === 0 ? noop :
             ast.body.length === 1 ? expressions[0] :
             function(scope, locals) {
               var lastValue;
               forEach(expressions, function(exp) {
                 lastValue = exp(scope, locals);
               });
               return lastValue;
             };
    if (assign) {
      fn.assign = function(scope, value, locals) {
        return assign(scope, locals, value);
      };
    }
    if (inputs) {
      fn.inputs = inputs;
    }
    fn.literal = isLiteral(ast);
    fn.constant = isConstant(ast);
    return fn;
  },

  recurse: function(ast, context, create) {
    var left, right, self = this, args;
    if (ast.input) {
      return this.inputs(ast.input, ast.watchId);
    }
    switch (ast.type) {
    case AST.Literal:
      return this.value(ast.value, context);
    case AST.UnaryExpression:
      right = this.recurse(ast.argument);
      return this['unary' + ast.operator](right, context);
    case AST.BinaryExpression:
      left = this.recurse(ast.left);
      right = this.recurse(ast.right);
      return this['binary' + ast.operator](left, right, context);
    case AST.LogicalExpression:
      left = this.recurse(ast.left);
      right = this.recurse(ast.right);
      return this['binary' + ast.operator](left, right, context);
    case AST.ConditionalExpression:
      return this['ternary?:'](
        this.recurse(ast.test),
        this.recurse(ast.alternate),
        this.recurse(ast.consequent),
        context
      );
    case AST.Identifier:
      ensureSafeMemberName(ast.name, self.expression);
      return self.identifier(ast.name,
                             self.expensiveChecks || isPossiblyDangerousMemberName(ast.name),
                             context, create, self.expression);
    case AST.MemberExpression:
      left = this.recurse(ast.object, false, !!create);
      if (!ast.computed) {
        ensureSafeMemberName(ast.property.name, self.expression);
        right = ast.property.name;
      }
      if (ast.computed) right = this.recurse(ast.property);
      return ast.computed ?
        this.computedMember(left, right, context, create, self.expression) :
        this.nonComputedMember(left, right, self.expensiveChecks, context, create, self.expression);
    case AST.CallExpression:
      args = [];
      forEach(ast.arguments, function(expr) {
        args.push(self.recurse(expr));
      });
      if (ast.filter) right = this.$filter(ast.callee.name);
      if (!ast.filter) right = this.recurse(ast.callee, true);
      return ast.filter ?
        function(scope, locals, assign, inputs) {
          var values = [];
          for (var i = 0; i < args.length; ++i) {
            values.push(args[i](scope, locals, assign, inputs));
          }
          var value = right.apply(undefined, values, inputs);
          return context ? {context: undefined, name: undefined, value: value} : value;
        } :
        function(scope, locals, assign, inputs) {
          var rhs = right(scope, locals, assign, inputs);
          var value;
          if (rhs.value != null) {
            ensureSafeObject(rhs.context, self.expression);
            ensureSafeFunction(rhs.value, self.expression);
            var values = [];
            for (var i = 0; i < args.length; ++i) {
              values.push(ensureSafeObject(args[i](scope, locals, assign, inputs), self.expression));
            }
            value = ensureSafeObject(rhs.value.apply(rhs.context, values), self.expression);
          }
          return context ? {value: value} : value;
        };
    case AST.AssignmentExpression:
      left = this.recurse(ast.left, true, 1);
      right = this.recurse(ast.right);
      return function(scope, locals, assign, inputs) {
        var lhs = left(scope, locals, assign, inputs);
        var rhs = right(scope, locals, assign, inputs);
        ensureSafeObject(lhs.value, self.expression);
        ensureSafeAssignContext(lhs.context);
        lhs.context[lhs.name] = rhs;
        return context ? {value: rhs} : rhs;
      };
    case AST.ArrayExpression:
      args = [];
      forEach(ast.elements, function(expr) {
        args.push(self.recurse(expr));
      });
      return function(scope, locals, assign, inputs) {
        var value = [];
        for (var i = 0; i < args.length; ++i) {
          value.push(args[i](scope, locals, assign, inputs));
        }
        return context ? {value: value} : value;
      };
    case AST.ObjectExpression:
      args = [];
      forEach(ast.properties, function(property) {
        if (property.computed) {
          args.push({key: self.recurse(property.key),
                     computed: true,
                     value: self.recurse(property.value)
          });
        } else {
          args.push({key: property.key.type === AST.Identifier ?
                          property.key.name :
                          ('' + property.key.value),
                     computed: false,
                     value: self.recurse(property.value)
          });
        }
      });
      return function(scope, locals, assign, inputs) {
        var value = {};
        for (var i = 0; i < args.length; ++i) {
          if (args[i].computed) {
            value[args[i].key(scope, locals, assign, inputs)] = args[i].value(scope, locals, assign, inputs);
          } else {
            value[args[i].key] = args[i].value(scope, locals, assign, inputs);
          }
        }
        return context ? {value: value} : value;
      };
    case AST.ThisExpression:
      return function(scope) {
        return context ? {value: scope} : scope;
      };
    case AST.LocalsExpression:
      return function(scope, locals) {
        return context ? {value: locals} : locals;
      };
    case AST.NGValueParameter:
      return function(scope, locals, assign) {
        return context ? {value: assign} : assign;
      };
    }
  },

  'unary+': function(argument, context) {
    return function(scope, locals, assign, inputs) {
      var arg = argument(scope, locals, assign, inputs);
      if (isDefined(arg)) {
        arg = +arg;
      } else {
        arg = 0;
      }
      return context ? {value: arg} : arg;
    };
  },
  'unary-': function(argument, context) {
    return function(scope, locals, assign, inputs) {
      var arg = argument(scope, locals, assign, inputs);
      if (isDefined(arg)) {
        arg = -arg;
      } else {
        arg = 0;
      }
      return context ? {value: arg} : arg;
    };
  },
  'unary!': function(argument, context) {
    return function(scope, locals, assign, inputs) {
      var arg = !argument(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary+': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var lhs = left(scope, locals, assign, inputs);
      var rhs = right(scope, locals, assign, inputs);
      var arg = plusFn(lhs, rhs);
      return context ? {value: arg} : arg;
    };
  },
  'binary-': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var lhs = left(scope, locals, assign, inputs);
      var rhs = right(scope, locals, assign, inputs);
      var arg = (isDefined(lhs) ? lhs : 0) - (isDefined(rhs) ? rhs : 0);
      return context ? {value: arg} : arg;
    };
  },
  'binary*': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) * right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary/': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) / right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary%': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) % right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary===': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) === right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary!==': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) !== right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary==': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      // eslint-disable-next-line eqeqeq
      var arg = left(scope, locals, assign, inputs) == right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary!=': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      // eslint-disable-next-line eqeqeq
      var arg = left(scope, locals, assign, inputs) != right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary<': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) < right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary>': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) > right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary<=': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) <= right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary>=': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) >= right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary&&': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) && right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'binary||': function(left, right, context) {
    return function(scope, locals, assign, inputs) {
      var arg = left(scope, locals, assign, inputs) || right(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  'ternary?:': function(test, alternate, consequent, context) {
    return function(scope, locals, assign, inputs) {
      var arg = test(scope, locals, assign, inputs) ? alternate(scope, locals, assign, inputs) : consequent(scope, locals, assign, inputs);
      return context ? {value: arg} : arg;
    };
  },
  value: function(value, context) {
    return function() { return context ? {context: undefined, name: undefined, value: value} : value; };
  },
  identifier: function(name, expensiveChecks, context, create, expression) {
    return function(scope, locals, assign, inputs) {
      var base = locals && (name in locals) ? locals : scope;
      if (create && create !== 1 && base && !(base[name])) {
        base[name] = {};
      }
      var value = base ? base[name] : undefined;
      if (expensiveChecks) {
        ensureSafeObject(value, expression);
      }
      if (context) {
        return {context: base, name: name, value: value};
      } else {
        return value;
      }
    };
  },
  computedMember: function(left, right, context, create, expression) {
    return function(scope, locals, assign, inputs) {
      var lhs = left(scope, locals, assign, inputs);
      var rhs;
      var value;
      if (lhs != null) {
        rhs = right(scope, locals, assign, inputs);
        rhs = getStringValue(rhs);
        ensureSafeMemberName(rhs, expression);
        if (create && create !== 1) {
          ensureSafeAssignContext(lhs);
          if (lhs && !(lhs[rhs])) {
            lhs[rhs] = {};
          }
        }
        value = lhs[rhs];
        ensureSafeObject(value, expression);
      }
      if (context) {
        return {context: lhs, name: rhs, value: value};
      } else {
        return value;
      }
    };
  },
  nonComputedMember: function(left, right, expensiveChecks, context, create, expression) {
    return function(scope, locals, assign, inputs) {
      var lhs = left(scope, locals, assign, inputs);
      if (create && create !== 1) {
        ensureSafeAssignContext(lhs);
        if (lhs && !(lhs[right])) {
          lhs[right] = {};
        }
      }
      var value = lhs != null ? lhs[right] : undefined;
      if (expensiveChecks || isPossiblyDangerousMemberName(right)) {
        ensureSafeObject(value, expression);
      }
      if (context) {
        return {context: lhs, name: right, value: value};
      } else {
        return value;
      }
    };
  },
  inputs: function(input, watchId) {
    return function(scope, value, locals, inputs) {
      if (inputs) return inputs[watchId];
      return input(scope, value, locals);
    };
  }
};

/**
 * @constructor
 */
var Parser = function Parser(lexer, $filter, options) {
  this.lexer = lexer;
  this.$filter = $filter;
  this.options = options;
  this.ast = new AST(lexer, options);
  this.astCompiler = options.csp ? new ASTInterpreter(this.ast, $filter) :
                                   new ASTCompiler(this.ast, $filter);
};

Parser.prototype = {
  constructor: Parser,

  parse: function(text) {
    return this.astCompiler.compile(text, this.options.expensiveChecks);
  }
};

function isPossiblyDangerousMemberName(name) {
  return name === 'constructor';
}

function getValueOf(value) {
  return isFunction(value.valueOf) ? value.valueOf() : objectValueOf.call(value);
}

///////////////////////////////////

/**
 * @ngdoc service
 * @name $parse
 * @kind function
 *
 * @description
 *
 * Converts Angular {@link guide/expression expression} into a function.
 *
 * ```js
 *   var getter = $parse('user.name');
 *   var setter = getter.assign;
 *   var context = {user:{name:'angular'}};
 *   var locals = {user:{name:'local'}};
 *
 *   expect(getter(context)).toEqual('angular');
 *   setter(context, 'newValue');
 *   expect(context.user.name).toEqual('newValue');
 *   expect(getter(context, locals)).toEqual('local');
 * ```
 *
 *
 * @param {string} expression String expression to compile.
 * @returns {function(context, locals)} a function which represents the compiled expression:
 *
 *    * `context` – `{object}` – an object against which any expressions embedded in the strings
 *      are evaluated against (typically a scope object).
 *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
 *      `context`.
 *
 *    The returned function also has the following properties:
 *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript
 *        literal.
 *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript
 *        constant literals.
 *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be
 *        set to a function to change its value on the given context.
 *
 */


/**
 * @ngdoc provider
 * @name $parseProvider
 * @this
 *
 * @description
 * `$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}
 *  service.
 */
function $ParseProvider() {
  var cacheDefault = createMap();
  var cacheExpensive = createMap();
  var literals = {
    'true': true,
    'false': false,
    'null': null,
    'undefined': undefined
  };
  var identStart, identContinue;

  /**
   * @ngdoc method
   * @name $parseProvider#addLiteral
   * @description
   *
   * Configure $parse service to add literal values that will be present as literal at expressions.
   *
   * @param {string} literalName Token for the literal value. The literal name value must be a valid literal name.
   * @param {*} literalValue Value for this literal. All literal values must be primitives or `undefined`.
   *
   **/
  this.addLiteral = function(literalName, literalValue) {
    literals[literalName] = literalValue;
  };

 /**
  * @ngdoc method
  * @name $parseProvider#setIdentifierFns
  *
  * @description
  *
  * Allows defining the set of characters that are allowed in Angular expressions. The function
  * `identifierStart` will get called to know if a given character is a valid character to be the
  * first character for an identifier. The function `identifierContinue` will get called to know if
  * a given character is a valid character to be a follow-up identifier character. The functions
  * `identifierStart` and `identifierContinue` will receive as arguments the single character to be
  * identifier and the character code point. These arguments will be `string` and `numeric`. Keep in
  * mind that the `string` parameter can be two characters long depending on the character
  * representation. It is expected for the function to return `true` or `false`, whether that
  * character is allowed or not.
  *
  * Since this function will be called extensively, keep the implementation of these functions fast,
  * as the performance of these functions have a direct impact on the expressions parsing speed.
  *
  * @param {function=} identifierStart The function that will decide whether the given character is
  *   a valid identifier start character.
  * @param {function=} identifierContinue The function that will decide whether the given character is
  *   a valid identifier continue character.
  */
  this.setIdentifierFns = function(identifierStart, identifierContinue) {
    identStart = identifierStart;
    identContinue = identifierContinue;
    return this;
  };

  this.$get = ['$filter', function($filter) {
    var noUnsafeEval = csp().noUnsafeEval;
    var $parseOptions = {
          csp: noUnsafeEval,
          expensiveChecks: false,
          literals: copy(literals),
          isIdentifierStart: isFunction(identStart) && identStart,
          isIdentifierContinue: isFunction(identContinue) && identContinue
        },
        $parseOptionsExpensive = {
          csp: noUnsafeEval,
          expensiveChecks: true,
          literals: copy(literals),
          isIdentifierStart: isFunction(identStart) && identStart,
          isIdentifierContinue: isFunction(identContinue) && identContinue
        };
    var runningChecksEnabled = false;

    $parse.$$runningExpensiveChecks = function() {
      return runningChecksEnabled;
    };

    return $parse;

    function $parse(exp, interceptorFn, expensiveChecks) {
      var parsedExpression, oneTime, cacheKey;

      expensiveChecks = expensiveChecks || runningChecksEnabled;

      switch (typeof exp) {
        case 'string':
          exp = exp.trim();
          cacheKey = exp;

          var cache = (expensiveChecks ? cacheExpensive : cacheDefault);
          parsedExpression = cache[cacheKey];

          if (!parsedExpression) {
            if (exp.charAt(0) === ':' && exp.charAt(1) === ':') {
              oneTime = true;
              exp = exp.substring(2);
            }
            var parseOptions = expensiveChecks ? $parseOptionsExpensive : $parseOptions;
            var lexer = new Lexer(parseOptions);
            var parser = new Parser(lexer, $filter, parseOptions);
            parsedExpression = parser.parse(exp);
            if (parsedExpression.constant) {
              parsedExpression.$$watchDelegate = constantWatchDelegate;
            } else if (oneTime) {
              parsedExpression.$$watchDelegate = parsedExpression.literal ?
                  oneTimeLiteralWatchDelegate : oneTimeWatchDelegate;
            } else if (parsedExpression.inputs) {
              parsedExpression.$$watchDelegate = inputsWatchDelegate;
            }
            if (expensiveChecks) {
              parsedExpression = expensiveChecksInterceptor(parsedExpression);
            }
            cache[cacheKey] = parsedExpression;
          }
          return addInterceptor(parsedExpression, interceptorFn);

        case 'function':
          return addInterceptor(exp, interceptorFn);

        default:
          return addInterceptor(noop, interceptorFn);
      }
    }

    function expensiveChecksInterceptor(fn) {
      if (!fn) return fn;
      expensiveCheckFn.$$watchDelegate = fn.$$watchDelegate;
      expensiveCheckFn.assign = expensiveChecksInterceptor(fn.assign);
      expensiveCheckFn.constant = fn.constant;
      expensiveCheckFn.literal = fn.literal;
      for (var i = 0; fn.inputs && i < fn.inputs.length; ++i) {
        fn.inputs[i] = expensiveChecksInterceptor(fn.inputs[i]);
      }
      expensiveCheckFn.inputs = fn.inputs;

      return expensiveCheckFn;

      function expensiveCheckFn(scope, locals, assign, inputs) {
        var expensiveCheckOldValue = runningChecksEnabled;
        runningChecksEnabled = true;
        try {
          return fn(scope, locals, assign, inputs);
        } finally {
          runningChecksEnabled = expensiveCheckOldValue;
        }
      }
    }

    function expressionInputDirtyCheck(newValue, oldValueOfValue) {

      if (newValue == null || oldValueOfValue == null) { // null/undefined
        return newValue === oldValueOfValue;
      }

      if (typeof newValue === 'object') {

        // attempt to convert the value to a primitive type
        // TODO(docs): add a note to docs that by implementing valueOf even objects and arrays can
        //             be cheaply dirty-checked
        newValue = getValueOf(newValue);

        if (typeof newValue === 'object') {
          // objects/arrays are not supported - deep-watching them would be too expensive
          return false;
        }

        // fall-through to the primitive equality check
      }

      //Primitive or NaN
      // eslint-disable-next-line no-self-compare
      return newValue === oldValueOfValue || (newValue !== newValue && oldValueOfValue !== oldValueOfValue);
    }

    function inputsWatchDelegate(scope, listener, objectEquality, parsedExpression, prettyPrintExpression) {
      var inputExpressions = parsedExpression.inputs;
      var lastResult;

      if (inputExpressions.length === 1) {
        var oldInputValueOf = expressionInputDirtyCheck; // init to something unique so that equals check fails
        inputExpressions = inputExpressions[0];
        return scope.$watch(function expressionInputWatch(scope) {
          var newInputValue = inputExpressions(scope);
          if (!expressionInputDirtyCheck(newInputValue, oldInputValueOf)) {
            lastResult = parsedExpression(scope, undefined, undefined, [newInputValue]);
            oldInputValueOf = newInputValue && getValueOf(newInputValue);
          }
          return lastResult;
        }, listener, objectEquality, prettyPrintExpression);
      }

      var oldInputValueOfValues = [];
      var oldInputValues = [];
      for (var i = 0, ii = inputExpressions.length; i < ii; i++) {
        oldInputValueOfValues[i] = expressionInputDirtyCheck; // init to something unique so that equals check fails
        oldInputValues[i] = null;
      }

      return scope.$watch(function expressionInputsWatch(scope) {
        var changed = false;

        for (var i = 0, ii = inputExpressions.length; i < ii; i++) {
          var newInputValue = inputExpressions[i](scope);
          if (changed || (changed = !expressionInputDirtyCheck(newInputValue, oldInputValueOfValues[i]))) {
            oldInputValues[i] = newInputValue;
            oldInputValueOfValues[i] = newInputValue && getValueOf(newInputValue);
          }
        }

        if (changed) {
          lastResult = parsedExpression(scope, undefined, undefined, oldInputValues);
        }

        return lastResult;
      }, listener, objectEquality, prettyPrintExpression);
    }

    function oneTimeWatchDelegate(scope, listener, objectEquality, parsedExpression) {
      var unwatch, lastValue;
      unwatch = scope.$watch(function oneTimeWatch(scope) {
        return parsedExpression(scope);
      }, /** @this */ function oneTimeListener(value, old, scope) {
        lastValue = value;
        if (isFunction(listener)) {
          listener.apply(this, arguments);
        }
        if (isDefined(value)) {
          scope.$$postDigest(function() {
            if (isDefined(lastValue)) {
              unwatch();
            }
          });
        }
      }, objectEquality);
      return unwatch;
    }

    function oneTimeLiteralWatchDelegate(scope, listener, objectEquality, parsedExpression) {
      var unwatch, lastValue;
      unwatch = scope.$watch(function oneTimeWatch(scope) {
        return parsedExpression(scope);
      }, /** @this */ function oneTimeListener(value, old, scope) {
        lastValue = value;
        if (isFunction(listener)) {
          listener.call(this, value, old, scope);
        }
        if (isAllDefined(value)) {
          scope.$$postDigest(function() {
            if (isAllDefined(lastValue)) unwatch();
          });
        }
      }, objectEquality);

      return unwatch;

      function isAllDefined(value) {
        var allDefined = true;
        forEach(value, function(val) {
          if (!isDefined(val)) allDefined = false;
        });
        return allDefined;
      }
    }

    function constantWatchDelegate(scope, listener, objectEquality, parsedExpression) {
      var unwatch = scope.$watch(function constantWatch(scope) {
        unwatch();
        return parsedExpression(scope);
      }, listener, objectEquality);
      return unwatch;
    }

    function addInterceptor(parsedExpression, interceptorFn) {
      if (!interceptorFn) return parsedExpression;
      var watchDelegate = parsedExpression.$$watchDelegate;
      var useInputs = false;

      var regularWatch =
          watchDelegate !== oneTimeLiteralWatchDelegate &&
          watchDelegate !== oneTimeWatchDelegate;

      var fn = regularWatch ? function regularInterceptedExpression(scope, locals, assign, inputs) {
        var value = useInputs && inputs ? inputs[0] : parsedExpression(scope, locals, assign, inputs);
        return interceptorFn(value, scope, locals);
      } : function oneTimeInterceptedExpression(scope, locals, assign, inputs) {
        var value = parsedExpression(scope, locals, assign, inputs);
        var result = interceptorFn(value, scope, locals);
        // we only return the interceptor's result if the
        // initial value is defined (for bind-once)
        return isDefined(value) ? result : value;
      };

      // Propagate $$watchDelegates other then inputsWatchDelegate
      if (parsedExpression.$$watchDelegate &&
          parsedExpression.$$watchDelegate !== inputsWatchDelegate) {
        fn.$$watchDelegate = parsedExpression.$$watchDelegate;
      } else if (!interceptorFn.$stateful) {
        // If there is an interceptor, but no watchDelegate then treat the interceptor like
        // we treat filters - it is assumed to be a pure function unless flagged with $stateful
        fn.$$watchDelegate = inputsWatchDelegate;
        useInputs = !parsedExpression.inputs;
        fn.inputs = parsedExpression.inputs ? parsedExpression.inputs : [parsedExpression];
      }

      return fn;
    }
  }];
}

/**
 * @ngdoc service
 * @name $q
 * @requires $rootScope
 * @this
 *
 * @description
 * A service that helps you run functions asynchronously, and use their return values (or exceptions)
 * when they are done processing.
 *
 * This is an implementation of promises/deferred objects inspired by
 * [Kris Kowal's Q](https://github.com/kriskowal/q).
 *
 * $q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred
 * implementations, and the other which resembles ES6 (ES2015) promises to some degree.
 *
 * # $q constructor
 *
 * The streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`
 * function as the first argument. This is similar to the native Promise implementation from ES6,
 * see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).
 *
 * While the constructor-style use is supported, not all of the supporting methods from ES6 promises are
 * available yet.
 *
 * It can be used like so:
 *
 * ```js
 *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`
 *   // are available in the current lexical scope (they could have been injected or passed in).
 *
 *   function asyncGreet(name) {
 *     // perform some asynchronous operation, resolve or reject the promise when appropriate.
 *     return $q(function(resolve, reject) {
 *       setTimeout(function() {
 *         if (okToGreet(name)) {
 *           resolve('Hello, ' + name + '!');
 *         } else {
 *           reject('Greeting ' + name + ' is not allowed.');
 *         }
 *       }, 1000);
 *     });
 *   }
 *
 *   var promise = asyncGreet('Robin Hood');
 *   promise.then(function(greeting) {
 *     alert('Success: ' + greeting);
 *   }, function(reason) {
 *     alert('Failed: ' + reason);
 *   });
 * ```
 *
 * Note: progress/notify callbacks are not currently supported via the ES6-style interface.
 *
 * Note: unlike ES6 behavior, an exception thrown in the constructor function will NOT implicitly reject the promise.
 *
 * However, the more traditional CommonJS-style usage is still available, and documented below.
 *
 * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an
 * interface for interacting with an object that represents the result of an action that is
 * performed asynchronously, and may or may not be finished at any given point in time.
 *
 * From the perspective of dealing with error handling, deferred and promise APIs are to
 * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.
 *
 * ```js
 *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`
 *   // are available in the current lexical scope (they could have been injected or passed in).
 *
 *   function asyncGreet(name) {
 *     var deferred = $q.defer();
 *
 *     setTimeout(function() {
 *       deferred.notify('About to greet ' + name + '.');
 *
 *       if (okToGreet(name)) {
 *         deferred.resolve('Hello, ' + name + '!');
 *       } else {
 *         deferred.reject('Greeting ' + name + ' is not allowed.');
 *       }
 *     }, 1000);
 *
 *     return deferred.promise;
 *   }
 *
 *   var promise = asyncGreet('Robin Hood');
 *   promise.then(function(greeting) {
 *     alert('Success: ' + greeting);
 *   }, function(reason) {
 *     alert('Failed: ' + reason);
 *   }, function(update) {
 *     alert('Got notification: ' + update);
 *   });
 * ```
 *
 * At first it might not be obvious why this extra complexity is worth the trouble. The payoff
 * comes in the way of guarantees that promise and deferred APIs make, see
 * https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.
 *
 * Additionally the promise api allows for composition that is very hard to do with the
 * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.
 * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the
 * section on serial or parallel joining of promises.
 *
 * # The Deferred API
 *
 * A new instance of deferred is constructed by calling `$q.defer()`.
 *
 * The purpose of the deferred object is to expose the associated Promise instance as well as APIs
 * that can be used for signaling the successful or unsuccessful completion, as well as the status
 * of the task.
 *
 * **Methods**
 *
 * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection
 *   constructed via `$q.reject`, the promise will be rejected instead.
 * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to
 *   resolving it with a rejection constructed via `$q.reject`.
 * - `notify(value)` - provides updates on the status of the promise's execution. This may be called
 *   multiple times before the promise is either resolved or rejected.
 *
 * **Properties**
 *
 * - promise – `{Promise}` – promise object associated with this deferred.
 *
 *
 * # The Promise API
 *
 * A new promise instance is created when a deferred instance is created and can be retrieved by
 * calling `deferred.promise`.
 *
 * The purpose of the promise object is to allow for interested parties to get access to the result
 * of the deferred task when it completes.
 *
 * **Methods**
 *
 * - `then(successCallback, [errorCallback], [notifyCallback])` – regardless of when the promise was or
 *   will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously
 *   as soon as the result is available. The callbacks are called with a single argument: the result
 *   or rejection reason. Additionally, the notify callback may be called zero or more times to
 *   provide a progress indication, before the promise is resolved or rejected.
 *
 *   This method *returns a new promise* which is resolved or rejected via the return value of the
 *   `successCallback`, `errorCallback` (unless that value is a promise, in which case it is resolved
 *   with the value which is resolved in that promise using
 *   [promise chaining](http://www.html5rocks.com/en/tutorials/es6/promises/#toc-promises-queues)).
 *   It also notifies via the return value of the `notifyCallback` method. The promise cannot be
 *   resolved or rejected from the notifyCallback method. The errorCallback and notifyCallback
 *   arguments are optional.
 *
 * - `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`
 *
 * - `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,
 *   but to do so without modifying the final value. This is useful to release resources or do some
 *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full
 *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for
 *   more information.
 *
 * # Chaining promises
 *
 * Because calling the `then` method of a promise returns a new derived promise, it is easily
 * possible to create a chain of promises:
 *
 * ```js
 *   promiseB = promiseA.then(function(result) {
 *     return result + 1;
 *   });
 *
 *   // promiseB will be resolved immediately after promiseA is resolved and its value
 *   // will be the result of promiseA incremented by 1
 * ```
 *
 * It is possible to create chains of any length and since a promise can be resolved with another
 * promise (which will defer its resolution further), it is possible to pause/defer resolution of
 * the promises at any point in the chain. This makes it possible to implement powerful APIs like
 * $http's response interceptors.
 *
 *
 * # Differences between Kris Kowal's Q and $q
 *
 *  There are two main differences:
 *
 * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation
 *   mechanism in angular, which means faster propagation of resolution or rejection into your
 *   models and avoiding unnecessary browser repaints, which would result in flickering UI.
 * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains
 *   all the important functionality needed for common async tasks.
 *
 * # Testing
 *
 *  ```js
 *    it('should simulate promise', inject(function($q, $rootScope) {
 *      var deferred = $q.defer();
 *      var promise = deferred.promise;
 *      var resolvedValue;
 *
 *      promise.then(function(value) { resolvedValue = value; });
 *      expect(resolvedValue).toBeUndefined();
 *
 *      // Simulate resolving of promise
 *      deferred.resolve(123);
 *      // Note that the 'then' function does not get called synchronously.
 *      // This is because we want the promise API to always be async, whether or not
 *      // it got called synchronously or asynchronously.
 *      expect(resolvedValue).toBeUndefined();
 *
 *      // Propagate promise resolution to 'then' functions using $apply().
 *      $rootScope.$apply();
 *      expect(resolvedValue).toEqual(123);
 *    }));
 *  ```
 *
 * @param {function(function, function)} resolver Function which is responsible for resolving or
 *   rejecting the newly created promise. The first parameter is a function which resolves the
 *   promise, the second parameter is a function which rejects the promise.
 *
 * @returns {Promise} The newly created promise.
 */
function $QProvider() {

  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {
    return qFactory(function(callback) {
      $rootScope.$evalAsync(callback);
    }, $exceptionHandler);
  }];
}

/** @this */
function $$QProvider() {
  this.$get = ['$browser', '$exceptionHandler', function($browser, $exceptionHandler) {
    return qFactory(function(callback) {
      $browser.defer(callback);
    }, $exceptionHandler);
  }];
}

/**
 * Constructs a promise manager.
 *
 * @param {function(function)} nextTick Function for executing functions in the next turn.
 * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for
 *     debugging purposes.
 * @returns {object} Promise manager.
 */
function qFactory(nextTick, exceptionHandler) {
  var $qMinErr = minErr('$q', TypeError);

  /**
   * @ngdoc method
   * @name ng.$q#defer
   * @kind function
   *
   * @description
   * Creates a `Deferred` object which represents a task which will finish in the future.
   *
   * @returns {Deferred} Returns a new instance of deferred.
   */
  function defer() {
    var d = new Deferred();
    //Necessary to support unbound execution :/
    d.resolve = simpleBind(d, d.resolve);
    d.reject = simpleBind(d, d.reject);
    d.notify = simpleBind(d, d.notify);
    return d;
  }

  function Promise() {
    this.$$state = { status: 0 };
  }

  extend(Promise.prototype, {
    then: function(onFulfilled, onRejected, progressBack) {
      if (isUndefined(onFulfilled) && isUndefined(onRejected) && isUndefined(progressBack)) {
        return this;
      }
      var result = new Deferred();

      this.$$state.pending = this.$$state.pending || [];
      this.$$state.pending.push([result, onFulfilled, onRejected, progressBack]);
      if (this.$$state.status > 0) scheduleProcessQueue(this.$$state);

      return result.promise;
    },

    'catch': function(callback) {
      return this.then(null, callback);
    },

    'finally': function(callback, progressBack) {
      return this.then(function(value) {
        return handleCallback(value, resolve, callback);
      }, function(error) {
        return handleCallback(error, reject, callback);
      }, progressBack);
    }
  });

  //Faster, more basic than angular.bind http://jsperf.com/angular-bind-vs-custom-vs-native
  function simpleBind(context, fn) {
    return function(value) {
      fn.call(context, value);
    };
  }

  function processQueue(state) {
    var fn, deferred, pending;

    pending = state.pending;
    state.processScheduled = false;
    state.pending = undefined;
    for (var i = 0, ii = pending.length; i < ii; ++i) {
      deferred = pending[i][0];
      fn = pending[i][state.status];
      try {
        if (isFunction(fn)) {
          deferred.resolve(fn(state.value));
        } else if (state.status === 1) {
          deferred.resolve(state.value);
        } else {
          deferred.reject(state.value);
        }
      } catch (e) {
        deferred.reject(e);
        exceptionHandler(e);
      }
    }
  }

  function scheduleProcessQueue(state) {
    if (state.processScheduled || !state.pending) return;
    state.processScheduled = true;
    nextTick(function() { processQueue(state); });
  }

  function Deferred() {
    this.promise = new Promise();
  }

  extend(Deferred.prototype, {
    resolve: function(val) {
      if (this.promise.$$state.status) return;
      if (val === this.promise) {
        this.$$reject($qMinErr(
          'qcycle',
          'Expected promise to be resolved with value other than itself \'{0}\'',
          val));
      } else {
        this.$$resolve(val);
      }

    },

    $$resolve: function(val) {
      var then;
      var that = this;
      var done = false;
      try {
        if ((isObject(val) || isFunction(val))) then = val && val.then;
        if (isFunction(then)) {
          this.promise.$$state.status = -1;
          then.call(val, resolvePromise, rejectPromise, simpleBind(this, this.notify));
        } else {
          this.promise.$$state.value = val;
          this.promise.$$state.status = 1;
          scheduleProcessQueue(this.promise.$$state);
        }
      } catch (e) {
        rejectPromise(e);
        exceptionHandler(e);
      }

      function resolvePromise(val) {
        if (done) return;
        done = true;
        that.$$resolve(val);
      }
      function rejectPromise(val) {
        if (done) return;
        done = true;
        that.$$reject(val);
      }
    },

    reject: function(reason) {
      if (this.promise.$$state.status) return;
      this.$$reject(reason);
    },

    $$reject: function(reason) {
      this.promise.$$state.value = reason;
      this.promise.$$state.status = 2;
      scheduleProcessQueue(this.promise.$$state);
    },

    notify: function(progress) {
      var callbacks = this.promise.$$state.pending;

      if ((this.promise.$$state.status <= 0) && callbacks && callbacks.length) {
        nextTick(function() {
          var callback, result;
          for (var i = 0, ii = callbacks.length; i < ii; i++) {
            result = callbacks[i][0];
            callback = callbacks[i][3];
            try {
              result.notify(isFunction(callback) ? callback(progress) : progress);
            } catch (e) {
              exceptionHandler(e);
            }
          }
        });
      }
    }
  });

  /**
   * @ngdoc method
   * @name $q#reject
   * @kind function
   *
   * @description
   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be
   * used to forward rejection in a chain of promises. If you are dealing with the last promise in
   * a promise chain, you don't need to worry about it.
   *
   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of
   * `reject` as the `throw` keyword in JavaScript. This also means that if you "catch" an error via
   * a promise error callback and you want to forward the error to the promise derived from the
   * current promise, you have to "rethrow" the error by returning a rejection constructed via
   * `reject`.
   *
   * ```js
   *   promiseB = promiseA.then(function(result) {
   *     // success: do something and resolve promiseB
   *     //          with the old or a new result
   *     return result;
   *   }, function(reason) {
   *     // error: handle the error if possible and
   *     //        resolve promiseB with newPromiseOrValue,
   *     //        otherwise forward the rejection to promiseB
   *     if (canHandle(reason)) {
   *      // handle the error and recover
   *      return newPromiseOrValue;
   *     }
   *     return $q.reject(reason);
   *   });
   * ```
   *
   * @param {*} reason Constant, message, exception or an object representing the rejection reason.
   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.
   */
  function reject(reason) {
    var result = new Deferred();
    result.reject(reason);
    return result.promise;
  }

  function handleCallback(value, resolver, callback) {
    var callbackOutput = null;
    try {
      if (isFunction(callback)) callbackOutput = callback();
    } catch (e) {
      return reject(e);
    }
    if (isPromiseLike(callbackOutput)) {
      return callbackOutput.then(function() {
        return resolver(value);
      }, reject);
    } else {
      return resolver(value);
    }
  }

  /**
   * @ngdoc method
   * @name $q#when
   * @kind function
   *
   * @description
   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.
   * This is useful when you are dealing with an object that might or might not be a promise, or if
   * the promise comes from a source that can't be trusted.
   *
   * @param {*} value Value or a promise
   * @param {Function=} successCallback
   * @param {Function=} errorCallback
   * @param {Function=} progressCallback
   * @returns {Promise} Returns a promise of the passed value or promise
   */


  function when(value, callback, errback, progressBack) {
    var result = new Deferred();
    result.resolve(value);
    return result.promise.then(callback, errback, progressBack);
  }

  /**
   * @ngdoc method
   * @name $q#resolve
   * @kind function
   *
   * @description
   * Alias of {@link ng.$q#when when} to maintain naming consistency with ES6.
   *
   * @param {*} value Value or a promise
   * @param {Function=} successCallback
   * @param {Function=} errorCallback
   * @param {Function=} progressCallback
   * @returns {Promise} Returns a promise of the passed value or promise
   */
  var resolve = when;

  /**
   * @ngdoc method
   * @name $q#all
   * @kind function
   *
   * @description
   * Combines multiple promises into a single promise that is resolved when all of the input
   * promises are resolved.
   *
   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.
   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,
   *   each value corresponding to the promise at the same index/key in the `promises` array/hash.
   *   If any of the promises is resolved with a rejection, this resulting promise will be rejected
   *   with the same rejection value.
   */

  function all(promises) {
    var deferred = new Deferred(),
        counter = 0,
        results = isArray(promises) ? [] : {};

    forEach(promises, function(promise, key) {
      counter++;
      when(promise).then(function(value) {
        results[key] = value;
        if (!(--counter)) deferred.resolve(results);
      }, function(reason) {
        deferred.reject(reason);
      });
    });

    if (counter === 0) {
      deferred.resolve(results);
    }

    return deferred.promise;
  }

  /**
   * @ngdoc method
   * @name $q#race
   * @kind function
   *
   * @description
   * Returns a promise that resolves or rejects as soon as one of those promises
   * resolves or rejects, with the value or reason from that promise.
   *
   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.
   * @returns {Promise} a promise that resolves or rejects as soon as one of the `promises`
   * resolves or rejects, with the value or reason from that promise.
   */

  function race(promises) {
    var deferred = defer();

    forEach(promises, function(promise) {
      when(promise).then(deferred.resolve, deferred.reject);
    });

    return deferred.promise;
  }

  function $Q(resolver) {
    if (!isFunction(resolver)) {
      throw $qMinErr('norslvr', 'Expected resolverFn, got \'{0}\'', resolver);
    }

    var deferred = new Deferred();

    function resolveFn(value) {
      deferred.resolve(value);
    }

    function rejectFn(reason) {
      deferred.reject(reason);
    }

    resolver(resolveFn, rejectFn);

    return deferred.promise;
  }

  // Let's make the instanceof operator work for promises, so that
  // `new $q(fn) instanceof $q` would evaluate to true.
  $Q.prototype = Promise.prototype;

  $Q.defer = defer;
  $Q.reject = reject;
  $Q.when = when;
  $Q.resolve = resolve;
  $Q.all = all;
  $Q.race = race;

  return $Q;
}

/** @this */
function $$RAFProvider() { //rAF
  this.$get = ['$window', '$timeout', function($window, $timeout) {
    var requestAnimationFrame = $window.requestAnimationFrame ||
                                $window.webkitRequestAnimationFrame;

    var cancelAnimationFrame = $window.cancelAnimationFrame ||
                               $window.webkitCancelAnimationFrame ||
                               $window.webkitCancelRequestAnimationFrame;

    var rafSupported = !!requestAnimationFrame;
    var raf = rafSupported
      ? function(fn) {
          var id = requestAnimationFrame(fn);
          return function() {
            cancelAnimationFrame(id);
          };
        }
      : function(fn) {
          var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666
          return function() {
            $timeout.cancel(timer);
          };
        };

    raf.supported = rafSupported;

    return raf;
  }];
}

/**
 * DESIGN NOTES
 *
 * The design decisions behind the scope are heavily favored for speed and memory consumption.
 *
 * The typical use of scope is to watch the expressions, which most of the time return the same
 * value as last time so we optimize the operation.
 *
 * Closures construction is expensive in terms of speed as well as memory:
 *   - No closures, instead use prototypical inheritance for API
 *   - Internal state needs to be stored on scope directly, which means that private state is
 *     exposed as $$____ properties
 *
 * Loop operations are optimized by using while(count--) { ... }
 *   - This means that in order to keep the same order of execution as addition we have to add
 *     items to the array at the beginning (unshift) instead of at the end (push)
 *
 * Child scopes are created and removed often
 *   - Using an array would be slow since inserts in the middle are expensive; so we use linked lists
 *
 * There are fewer watches than observers. This is why you don't want the observer to be implemented
 * in the same way as watch. Watch requires return of the initialization function which is expensive
 * to construct.
 */


/**
 * @ngdoc provider
 * @name $rootScopeProvider
 * @description
 *
 * Provider for the $rootScope service.
 */

/**
 * @ngdoc method
 * @name $rootScopeProvider#digestTtl
 * @description
 *
 * Sets the number of `$digest` iterations the scope should attempt to execute before giving up and
 * assuming that the model is unstable.
 *
 * The current default is 10 iterations.
 *
 * In complex applications it's possible that the dependencies between `$watch`s will result in
 * several digest iterations. However if an application needs more than the default 10 digest
 * iterations for its model to stabilize then you should investigate what is causing the model to
 * continuously change during the digest.
 *
 * Increasing the TTL could have performance implications, so you should not change it without
 * proper justification.
 *
 * @param {number} limit The number of digest iterations.
 */


/**
 * @ngdoc service
 * @name $rootScope
 * @this
 *
 * @description
 *
 * Every application has a single root {@link ng.$rootScope.Scope scope}.
 * All other scopes are descendant scopes of the root scope. Scopes provide separation
 * between the model and the view, via a mechanism for watching the model for changes.
 * They also provide event emission/broadcast and subscription facility. See the
 * {@link guide/scope developer guide on scopes}.
 */
function $RootScopeProvider() {
  var TTL = 10;
  var $rootScopeMinErr = minErr('$rootScope');
  var lastDirtyWatch = null;
  var applyAsyncId = null;

  this.digestTtl = function(value) {
    if (arguments.length) {
      TTL = value;
    }
    return TTL;
  };

  function createChildScopeClass(parent) {
    function ChildScope() {
      this.$$watchers = this.$$nextSibling =
          this.$$childHead = this.$$childTail = null;
      this.$$listeners = {};
      this.$$listenerCount = {};
      this.$$watchersCount = 0;
      this.$id = nextUid();
      this.$$ChildScope = null;
    }
    ChildScope.prototype = parent;
    return ChildScope;
  }

  this.$get = ['$exceptionHandler', '$parse', '$browser',
      function($exceptionHandler, $parse, $browser) {

    function destroyChildScope($event) {
        $event.currentScope.$$destroyed = true;
    }

    function cleanUpScope($scope) {

      if (msie === 9) {
        // There is a memory leak in IE9 if all child scopes are not disconnected
        // completely when a scope is destroyed. So this code will recurse up through
        // all this scopes children
        //
        // See issue https://github.com/angular/angular.js/issues/10706
        if ($scope.$$childHead) {
          cleanUpScope($scope.$$childHead);
        }
        if ($scope.$$nextSibling) {
          cleanUpScope($scope.$$nextSibling);
        }
      }

      // The code below works around IE9 and V8's memory leaks
      //
      // See:
      // - https://code.google.com/p/v8/issues/detail?id=2073#c26
      // - https://github.com/angular/angular.js/issues/6794#issuecomment-38648909
      // - https://github.com/angular/angular.js/issues/1313#issuecomment-10378451

      $scope.$parent = $scope.$$nextSibling = $scope.$$prevSibling = $scope.$$childHead =
          $scope.$$childTail = $scope.$root = $scope.$$watchers = null;
    }

    /**
     * @ngdoc type
     * @name $rootScope.Scope
     *
     * @description
     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the
     * {@link auto.$injector $injector}. Child scopes are created using the
     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when
     * compiled HTML template is executed.) See also the {@link guide/scope Scopes guide} for
     * an in-depth introduction and usage examples.
     *
     *
     * # Inheritance
     * A scope can inherit from a parent scope, as in this example:
     * ```js
         var parent = $rootScope;
         var child = parent.$new();

         parent.salutation = "Hello";
         expect(child.salutation).toEqual('Hello');

         child.salutation = "Welcome";
         expect(child.salutation).toEqual('Welcome');
         expect(parent.salutation).toEqual('Hello');
     * ```
     *
     * When interacting with `Scope` in tests, additional helper methods are available on the
     * instances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional
     * details.
     *
     *
     * @param {Object.<string, function()>=} providers Map of service factory which need to be
     *                                       provided for the current scope. Defaults to {@link ng}.
     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should
     *                              append/override services provided by `providers`. This is handy
     *                              when unit-testing and having the need to override a default
     *                              service.
     * @returns {Object} Newly created scope.
     *
     */
    function Scope() {
      this.$id = nextUid();
      this.$$phase = this.$parent = this.$$watchers =
                     this.$$nextSibling = this.$$prevSibling =
                     this.$$childHead = this.$$childTail = null;
      this.$root = this;
      this.$$destroyed = false;
      this.$$listeners = {};
      this.$$listenerCount = {};
      this.$$watchersCount = 0;
      this.$$isolateBindings = null;
    }

    /**
     * @ngdoc property
     * @name $rootScope.Scope#$id
     *
     * @description
     * Unique scope ID (monotonically increasing) useful for debugging.
     */

     /**
      * @ngdoc property
      * @name $rootScope.Scope#$parent
      *
      * @description
      * Reference to the parent scope.
      */

      /**
       * @ngdoc property
       * @name $rootScope.Scope#$root
       *
       * @description
       * Reference to the root scope.
       */

    Scope.prototype = {
      constructor: Scope,
      /**
       * @ngdoc method
       * @name $rootScope.Scope#$new
       * @kind function
       *
       * @description
       * Creates a new child {@link ng.$rootScope.Scope scope}.
       *
       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.
       * The scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.
       *
       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is
       * desired for the scope and its child scopes to be permanently detached from the parent and
       * thus stop participating in model change detection and listener notification by invoking.
       *
       * @param {boolean} isolate If true, then the scope does not prototypically inherit from the
       *         parent scope. The scope is isolated, as it can not see parent scope properties.
       *         When creating widgets, it is useful for the widget to not accidentally read parent
       *         state.
       *
       * @param {Scope} [parent=this] The {@link ng.$rootScope.Scope `Scope`} that will be the `$parent`
       *                              of the newly created scope. Defaults to `this` scope if not provided.
       *                              This is used when creating a transclude scope to correctly place it
       *                              in the scope hierarchy while maintaining the correct prototypical
       *                              inheritance.
       *
       * @returns {Object} The newly created child scope.
       *
       */
      $new: function(isolate, parent) {
        var child;

        parent = parent || this;

        if (isolate) {
          child = new Scope();
          child.$root = this.$root;
        } else {
          // Only create a child scope class if somebody asks for one,
          // but cache it to allow the VM to optimize lookups.
          if (!this.$$ChildScope) {
            this.$$ChildScope = createChildScopeClass(this);
          }
          child = new this.$$ChildScope();
        }
        child.$parent = parent;
        child.$$prevSibling = parent.$$childTail;
        if (parent.$$childHead) {
          parent.$$childTail.$$nextSibling = child;
          parent.$$childTail = child;
        } else {
          parent.$$childHead = parent.$$childTail = child;
        }

        // When the new scope is not isolated or we inherit from `this`, and
        // the parent scope is destroyed, the property `$$destroyed` is inherited
        // prototypically. In all other cases, this property needs to be set
        // when the parent scope is destroyed.
        // The listener needs to be added after the parent is set
        if (isolate || parent !== this) child.$on('$destroy', destroyChildScope);

        return child;
      },

      /**
       * @ngdoc method
       * @name $rootScope.Scope#$watch
       * @kind function
       *
       * @description
       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.
       *
       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest
       *   $digest()} and should return the value that will be watched. (`watchExpression` should not change
       *   its value when executed multiple times with the same input because it may be executed multiple
       *   times by {@link ng.$rootScope.Scope#$digest $digest()}. That is, `watchExpression` should be
       *   [idempotent](http://en.wikipedia.org/wiki/Idempotence).)
       * - The `listener` is called only when the value from the current `watchExpression` and the
       *   previous call to `watchExpression` are not equal (with the exception of the initial run,
       *   see below). Inequality is determined according to reference inequality,
       *   [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)
       *    via the `!==` Javascript operator, unless `objectEquality == true`
       *   (see next point)
       * - When `objectEquality == true`, inequality of the `watchExpression` is determined
       *   according to the {@link angular.equals} function. To save the value of the object for
       *   later comparison, the {@link angular.copy} function is used. This therefore means that
       *   watching complex objects will have adverse memory and performance implications.
       * - The watch `listener` may change the model, which may trigger other `listener`s to fire.
       *   This is achieved by rerunning the watchers until no changes are detected. The rerun
       *   iteration limit is 10 to prevent an infinite loop deadlock.
       *
       *
       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,
       * you can register a `watchExpression` function with no `listener`. (Be prepared for
       * multiple calls to your `watchExpression` because it will execute multiple times in a
       * single {@link ng.$rootScope.Scope#$digest $digest} cycle if a change is detected.)
       *
       * After a watcher is registered with the scope, the `listener` fn is called asynchronously
       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the
       * watcher. In rare cases, this is undesirable because the listener is called when the result
       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you
       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the
       * listener was called due to initialization.
       *
       *
       *
       * # Example
       * ```js
           // let's assume that scope was dependency injected as the $rootScope
           var scope = $rootScope;
           scope.name = 'misko';
           scope.counter = 0;

           expect(scope.counter).toEqual(0);
           scope.$watch('name', function(newValue, oldValue) {
             scope.counter = scope.counter + 1;
           });
           expect(scope.counter).toEqual(0);

           scope.$digest();
           // the listener is always called during the first $digest loop after it was registered
           expect(scope.counter).toEqual(1);

           scope.$digest();
           // but now it will not be called unless the value changes
           expect(scope.counter).toEqual(1);

           scope.name = 'adam';
           scope.$digest();
           expect(scope.counter).toEqual(2);



           // Using a function as a watchExpression
           var food;
           scope.foodCounter = 0;
           expect(scope.foodCounter).toEqual(0);
           scope.$watch(
             // This function returns the value being watched. It is called for each turn of the $digest loop
             function() { return food; },
             // This is the change listener, called when the value returned from the above function changes
             function(newValue, oldValue) {
               if ( newValue !== oldValue ) {
                 // Only increment the counter if the value changed
                 scope.foodCounter = scope.foodCounter + 1;
               }
             }
           );
           // No digest has been run so the counter will be zero
           expect(scope.foodCounter).toEqual(0);

           // Run the digest but since food has not changed count will still be zero
           scope.$digest();
           expect(scope.foodCounter).toEqual(0);

           // Update food and run digest.  Now the counter will increment
           food = 'cheeseburger';
           scope.$digest();
           expect(scope.foodCounter).toEqual(1);

       * ```
       *
       *
       *
       * @param {(function()|string)} watchExpression Expression that is evaluated on each
       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers
       *    a call to the `listener`.
       *
       *    - `string`: Evaluated as {@link guide/expression expression}
       *    - `function(scope)`: called with current `scope` as a parameter.
       * @param {function(newVal, oldVal, scope)} listener Callback called whenever the value
       *    of `watchExpression` changes.
       *
       *    - `newVal` contains the current value of the `watchExpression`
       *    - `oldVal` contains the previous value of the `watchExpression`
       *    - `scope` refers to the current scope
       * @param {boolean=} [objectEquality=false] Compare for object equality using {@link angular.equals} instead of
       *     comparing for reference equality.
       * @returns {function()} Returns a deregistration function for this listener.
       */
      $watch: function(watchExp, listener, objectEquality, prettyPrintExpression) {
        var get = $parse(watchExp);

        if (get.$$watchDelegate) {
          return get.$$watchDelegate(this, listener, objectEquality, get, watchExp);
        }
        var scope = this,
            array = scope.$$watchers,
            watcher = {
              fn: listener,
              last: initWatchVal,
              get: get,
              exp: prettyPrintExpression || watchExp,
              eq: !!objectEquality
            };

        lastDirtyWatch = null;

        if (!isFunction(listener)) {
          watcher.fn = noop;
        }

        if (!array) {
          array = scope.$$watchers = [];
          array.$$digestWatchIndex = -1;
        }
        // we use unshift since we use a while loop in $digest for speed.
        // the while loop reads in reverse order.
        array.unshift(watcher);
        array.$$digestWatchIndex++;
        incrementWatchersCount(this, 1);

        return function deregisterWatch() {
          var index = arrayRemove(array, watcher);
          if (index >= 0) {
            incrementWatchersCount(scope, -1);
            if (index < array.$$digestWatchIndex) {
              array.$$digestWatchIndex--;
            }
          }
          lastDirtyWatch = null;
        };
      },

      /**
       * @ngdoc method
       * @name $rootScope.Scope#$watchGroup
       * @kind function
       *
       * @description
       * A variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.
       * If any one expression in the collection changes the `listener` is executed.
       *
       * - The items in the `watchExpressions` array are observed via the standard `$watch` operation. Their return
       *   values are examined for changes on every call to `$digest`.
       * - The `listener` is called whenever any expression in the `watchExpressions` array changes.
       *
       * @param {Array.<string|Function(scope)>} watchExpressions Array of expressions that will be individually
       * watched using {@link ng.$rootScope.Scope#$watch $watch()}
       *
       * @param {function(newValues, oldValues, scope)} listener Callback called whenever the return value of any
       *    expression in `watchExpressions` changes
       *    The `newValues` array contains the current values of the `watchExpressions`, with the indexes matching
       *    those of `watchExpression`
       *    and the `oldValues` array contains the previous values of the `watchExpressions`, with the indexes matching
       *    those of `watchExpression`
       *    The `scope` refers to the current scope.
       * @returns {function()} Returns a de-registration function for all listeners.
       */
      $watchGroup: function(watchExpressions, listener) {
        var oldValues = new Array(watchExpressions.length);
        var newValues = new Array(watchExpressions.length);
        var deregisterFns = [];
        var self = this;
        var changeReactionScheduled = false;
        var firstRun = true;

        if (!watchExpressions.length) {
          // No expressions means we call the listener ASAP
          var shouldCall = true;
          self.$evalAsync(function() {
            if (shouldCall) listener(newValues, newValues, self);
          });
          return function deregisterWatchGroup() {
            shouldCall = false;
          };
        }

        if (watchExpressions.length === 1) {
          // Special case size of one
          return this.$watch(watchExpressions[0], function watchGroupAction(value, oldValue, scope) {
            newValues[0] = value;
            oldValues[0] = oldValue;
            listener(newValues, (value === oldValue) ? newValues : oldValues, scope);
          });
        }

        forEach(watchExpressions, function(expr, i) {
          var unwatchFn = self.$watch(expr, function watchGroupSubAction(value, oldValue) {
            newValues[i] = value;
            oldValues[i] = oldValue;
            if (!changeReactionScheduled) {
              changeReactionScheduled = true;
              self.$evalAsync(watchGroupAction);
            }
          });
          deregisterFns.push(unwatchFn);
        });

        function watchGroupAction() {
          changeReactionScheduled = false;

          if (firstRun) {
            firstRun = false;
            listener(newValues, newValues, self);
          } else {
            listener(newValues, oldValues, self);
          }
        }

        return function deregisterWatchGroup() {
          while (deregisterFns.length) {
            deregisterFns.shift()();
          }
        };
      },


      /**
       * @ngdoc method
       * @name $rootScope.Scope#$watchCollection
       * @kind function
       *
       * @description
       * Shallow watches the properties of an object and fires whenever any of the properties change
       * (for arrays, this implies watching the array items; for object maps, this implies watching
       * the properties). If a change is detected, the `listener` callback is fired.
       *
       * - The `obj` collection is observed via standard $watch operation and is examined on every
       *   call to $digest() to see if any items have been added, removed, or moved.
       * - The `listener` is called whenever anything within the `obj` has changed. Examples include
       *   adding, removing, and moving items belonging to an object or array.
       *
       *
       * # Example
       * ```js
          $scope.names = ['igor', 'matias', 'misko', 'james'];
          $scope.dataCount = 4;

          $scope.$watchCollection('names', function(newNames, oldNames) {
            $scope.dataCount = newNames.length;
          });

          expect($scope.dataCount).toEqual(4);
          $scope.$digest();

          //still at 4 ... no changes
          expect($scope.dataCount).toEqual(4);

          $scope.names.pop();
          $scope.$digest();

          //now there's been a change
          expect($scope.dataCount).toEqual(3);
       * ```
       *
       *
       * @param {string|function(scope)} obj Evaluated as {@link guide/expression expression}. The
       *    expression value should evaluate to an object or an array which is observed on each
       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the
       *    collection will trigger a call to the `listener`.
       *
       * @param {function(newCollection, oldCollection, scope)} listener a callback function called
       *    when a change is detected.
       *    - The `newCollection` object is the newly modified data obtained from the `obj` expression
       *    - The `oldCollection` object is a copy of the former collection data.
       *      Due to performance considerations, the`oldCollection` value is computed only if the
       *      `listener` function declares two or more arguments.
       *    - The `scope` argument refers to the current scope.
       *
       * @returns {function()} Returns a de-registration function for this listener. When the
       *    de-registration function is executed, the internal watch operation is terminated.
       */
      $watchCollection: function(obj, listener) {
        $watchCollectionInterceptor.$stateful = true;

        var self = this;
        // the current value, updated on each dirty-check run
        var newValue;
        // a shallow copy of the newValue from the last dirty-check run,
        // updated to match newValue during dirty-check run
        var oldValue;
        // a shallow copy of the newValue from when the last change happened
        var veryOldValue;
        // only track veryOldValue if the listener is asking for it
        var trackVeryOldValue = (listener.length > 1);
        var changeDetected = 0;
        var changeDetector = $parse(obj, $watchCollectionInterceptor);
        var internalArray = [];
        var internalObject = {};
        var initRun = true;
        var oldLength = 0;

        function $watchCollectionInterceptor(_value) {
          newValue = _value;
          var newLength, key, bothNaN, newItem, oldItem;

          // If the new value is undefined, then return undefined as the watch may be a one-time watch
          if (isUndefined(newValue)) return;

          if (!isObject(newValue)) { // if primitive
            if (oldValue !== newValue) {
              oldValue = newValue;
              changeDetected++;
            }
          } else if (isArrayLike(newValue)) {
            if (oldValue !== internalArray) {
              // we are transitioning from something which was not an array into array.
              oldValue = internalArray;
              oldLength = oldValue.length = 0;
              changeDetected++;
            }

            newLength = newValue.length;

            if (oldLength !== newLength) {
              // if lengths do not match we need to trigger change notification
              changeDetected++;
              oldValue.length = oldLength = newLength;
            }
            // copy the items to oldValue and look for changes.
            for (var i = 0; i < newLength; i++) {
              oldItem = oldValue[i];
              newItem = newValue[i];

              // eslint-disable-next-line no-self-compare
              bothNaN = (oldItem !== oldItem) && (newItem !== newItem);
              if (!bothNaN && (oldItem !== newItem)) {
                changeDetected++;
                oldValue[i] = newItem;
              }
            }
          } else {
            if (oldValue !== internalObject) {
              // we are transitioning from something which was not an object into object.
              oldValue = internalObject = {};
              oldLength = 0;
              changeDetected++;
            }
            // copy the items to oldValue and look for changes.
            newLength = 0;
            for (key in newValue) {
              if (hasOwnProperty.call(newValue, key)) {
                newLength++;
                newItem = newValue[key];
                oldItem = oldValue[key];

                if (key in oldValue) {
                  // eslint-disable-next-line no-self-compare
                  bothNaN = (oldItem !== oldItem) && (newItem !== newItem);
                  if (!bothNaN && (oldItem !== newItem)) {
                    changeDetected++;
                    oldValue[key] = newItem;
                  }
                } else {
                  oldLength++;
                  oldValue[key] = newItem;
                  changeDetected++;
                }
              }
            }
            if (oldLength > newLength) {
              // we used to have more keys, need to find them and destroy them.
              changeDetected++;
              for (key in oldValue) {
                if (!hasOwnProperty.call(newValue, key)) {
                  oldLength--;
                  delete oldValue[key];
                }
              }
            }
          }
          return changeDetected;
        }

        function $watchCollectionAction() {
          if (initRun) {
            initRun = false;
            listener(newValue, newValue, self);
          } else {
            listener(newValue, veryOldValue, self);
          }

          // make a copy for the next time a collection is changed
          if (trackVeryOldValue) {
            if (!isObject(newValue)) {
              //primitive
              veryOldValue = newValue;
            } else if (isArrayLike(newValue)) {
              veryOldValue = new Array(newValue.length);
              for (var i = 0; i < newValue.length; i++) {
                veryOldValue[i] = newValue[i];
              }
            } else { // if object
              veryOldValue = {};
              for (var key in newValue) {
                if (hasOwnProperty.call(newValue, key)) {
                  veryOldValue[key] = newValue[key];
                }
              }
            }
          }
        }

        return this.$watch(changeDetector, $watchCollectionAction);
      },

      /**
       * @ngdoc method
       * @name $rootScope.Scope#$digest
       * @kind function
       *
       * @description
       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and
       * its children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change
       * the model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}
       * until no more listeners are firing. This means that it is possible to get into an infinite
       * loop. This function will throw `'Maximum iteration limit exceeded.'` if the number of
       * iterations exceeds 10.
       *
       * Usually, you don't call `$digest()` directly in
       * {@link ng.directive:ngController controllers} or in
       * {@link ng.$compileProvider#directive directives}.
       * Instead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within
       * a {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.
       *
       * If you want to be notified whenever `$digest()` is called,
       * you can register a `watchExpression` function with
       * {@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.
       *
       * In unit tests, you may need to call `$digest()` to simulate the scope life cycle.
       *
       * # Example
       * ```js
           var scope = ...;
           scope.name = 'misko';
           scope.counter = 0;

           expect(scope.counter).toEqual(0);
           scope.$watch('name', function(newValue, oldValue) {
             scope.counter = scope.counter + 1;
           });
           expect(scope.counter).toEqual(0);

           scope.$digest();
           // the listener is always called during the first $digest loop after it was registered
           expect(scope.counter).toEqual(1);

           scope.$digest();
           // but now it will not be called unless the value changes
           expect(scope.counter).toEqual(1);

           scope.name = 'adam';
           scope.$digest();
           expect(scope.counter).toEqual(2);
       * ```
       *
       */
      $digest: function() {
        var watch, value, last, fn, get,
            watchers,
            dirty, ttl = TTL,
            next, current, target = this,
            watchLog = [],
            logIdx, asyncTask;

        beginPhase('$digest');
        // Check for changes to browser url that happened in sync before the call to $digest
        $browser.$$checkUrlChange();

        if (this === $rootScope && applyAsyncId !== null) {
          // If this is the root scope, and $applyAsync has scheduled a deferred $apply(), then
          // cancel the scheduled $apply and flush the queue of expressions to be evaluated.
          $browser.defer.cancel(applyAsyncId);
          flushApplyAsync();
        }

        lastDirtyWatch = null;

        do { // "while dirty" loop
          dirty = false;
          current = target;

          // It's safe for asyncQueuePosition to be a local variable here because this loop can't
          // be reentered recursively. Calling $digest from a function passed to $applyAsync would
          // lead to a '$digest already in progress' error.
          for (var asyncQueuePosition = 0; asyncQueuePosition < asyncQueue.length; asyncQueuePosition++) {
            try {
              asyncTask = asyncQueue[asyncQueuePosition];
              asyncTask.scope.$eval(asyncTask.expression, asyncTask.locals);
            } catch (e) {
              $exceptionHandler(e);
            }
            lastDirtyWatch = null;
          }
          asyncQueue.length = 0;

          traverseScopesLoop:
          do { // "traverse the scopes" loop
            if ((watchers = current.$$watchers)) {
              // process our watches
              watchers.$$digestWatchIndex = watchers.length;
              while (watchers.$$digestWatchIndex--) {
                try {
                  watch = watchers[watchers.$$digestWatchIndex];
                  // Most common watches are on primitives, in which case we can short
                  // circuit it with === operator, only when === fails do we use .equals
                  if (watch) {
                    get = watch.get;
                    if ((value = get(current)) !== (last = watch.last) &&
                        !(watch.eq
                            ? equals(value, last)
                            : (isNumberNaN(value) && isNumberNaN(last)))) {
                      dirty = true;
                      lastDirtyWatch = watch;
                      watch.last = watch.eq ? copy(value, null) : value;
                      fn = watch.fn;
                      fn(value, ((last === initWatchVal) ? value : last), current);
                      if (ttl < 5) {
                        logIdx = 4 - ttl;
                        if (!watchLog[logIdx]) watchLog[logIdx] = [];
                        watchLog[logIdx].push({
                          msg: isFunction(watch.exp) ? 'fn: ' + (watch.exp.name || watch.exp.toString()) : watch.exp,
                          newVal: value,
                          oldVal: last
                        });
                      }
                    } else if (watch === lastDirtyWatch) {
                      // If the most recently dirty watcher is now clean, short circuit since the remaining watchers
                      // have already been tested.
                      dirty = false;
                      break traverseScopesLoop;
                    }
                  }
                } catch (e) {
                  $exceptionHandler(e);
                }
              }
            }

            // Insanity Warning: scope depth-first traversal
            // yes, this code is a bit crazy, but it works and we have tests to prove it!
            // this piece should be kept in sync with the traversal in $broadcast
            if (!(next = ((current.$$watchersCount && current.$$childHead) ||
                (current !== target && current.$$nextSibling)))) {
              while (current !== target && !(next = current.$$nextSibling)) {
                current = current.$parent;
              }
            }
          } while ((current = next));

          // `break traverseScopesLoop;` takes us to here

          if ((dirty || asyncQueue.length) && !(ttl--)) {
            clearPhase();
            throw $rootScopeMinErr('infdig',
                '{0} $digest() iterations reached. Aborting!\n' +
                'Watchers fired in the last 5 iterations: {1}',
                TTL, watchLog);
          }

        } while (dirty || asyncQueue.length);

        clearPhase();

        // postDigestQueuePosition isn't local here because this loop can be reentered recursively.
        while (postDigestQueuePosition < postDigestQueue.length) {
          try {
            postDigestQueue[postDigestQueuePosition++]();
          } catch (e) {
            $exceptionHandler(e);
          }
        }
        postDigestQueue.length = postDigestQueuePosition = 0;
      },


      /**
       * @ngdoc event
       * @name $rootScope.Scope#$destroy
       * @eventType broadcast on scope being destroyed
       *
       * @description
       * Broadcasted when a scope and its children are being destroyed.
       *
       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to
       * clean up DOM bindings before an element is removed from the DOM.
       */

      /**
       * @ngdoc method
       * @name $rootScope.Scope#$destroy
       * @kind function
       *
       * @description
       * Removes the current scope (and all of its children) from the parent scope. Removal implies
       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer
       * propagate to the current scope and its children. Removal also implies that the current
       * scope is eligible for garbage collection.
       *
       * The `$destroy()` is usually used by directives such as
       * {@link ng.directive:ngRepeat ngRepeat} for managing the
       * unrolling of the loop.
       *
       * Just before a scope is destroyed, a `$destroy` event is broadcasted on this scope.
       * Application code can register a `$destroy` event handler that will give it a chance to
       * perform any necessary cleanup.
       *
       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to
       * clean up DOM bindings before an element is removed from the DOM.
       */
      $destroy: function() {
        // We can't destroy a scope that has been already destroyed.
        if (this.$$destroyed) return;
        var parent = this.$parent;

        this.$broadcast('$destroy');
        this.$$destroyed = true;

        if (this === $rootScope) {
          //Remove handlers attached to window when $rootScope is removed
          $browser.$$applicationDestroyed();
        }

        incrementWatchersCount(this, -this.$$watchersCount);
        for (var eventName in this.$$listenerCount) {
          decrementListenerCount(this, this.$$listenerCount[eventName], eventName);
        }

        // sever all the references to parent scopes (after this cleanup, the current scope should
        // not be retained by any of our references and should be eligible for garbage collection)
        if (parent && parent.$$childHead === this) parent.$$childHead = this.$$nextSibling;
        if (parent && parent.$$childTail === this) parent.$$childTail = this.$$prevSibling;
        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;
        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;

        // Disable listeners, watchers and apply/digest methods
        this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = noop;
        this.$on = this.$watch = this.$watchGroup = function() { return noop; };
        this.$$listeners = {};

        // Disconnect the next sibling to prevent `cleanUpScope` destroying those too
        this.$$nextSibling = null;
        cleanUpScope(this);
      },

      /**
       * @ngdoc method
       * @name $rootScope.Scope#$eval
       * @kind function
       *
       * @description
       * Executes the `expression` on the current scope and returns the result. Any exceptions in
       * the expression are propagated (uncaught). This is useful when evaluating Angular
       * expressions.
       *
       * # Example
       * ```js
           var scope = ng.$rootScope.Scope();
           scope.a = 1;
           scope.b = 2;

           expect(scope.$eval('a+b')).toEqual(3);
           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);
       * ```
       *
       * @param {(string|function())=} expression An angular expression to be executed.
       *
       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.
       *    - `function(scope)`: execute the function with the current `scope` parameter.
       *
       * @param {(object)=} locals Local variables object, useful for overriding values in scope.
       * @returns {*} The result of evaluating the expression.
       */
      $eval: function(expr, locals) {
        return $parse(expr)(this, locals);
      },

      /**
       * @ngdoc method
       * @name $rootScope.Scope#$evalAsync
       * @kind function
       *
       * @description
       * Executes the expression on the current scope at a later point in time.
       *
       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only
       * that:
       *
       *   - it will execute after the function that scheduled the evaluation (preferably before DOM
       *     rendering).
       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after
       *     `expression` execution.
       *
       * Any exceptions from the execution of the expression are forwarded to the
       * {@link ng.$exceptionHandler $exceptionHandler} service.
       *
       * __Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle
       * will be scheduled. However, it is encouraged to always call code that changes the model
       * from within an `$apply` call. That includes code evaluated via `$evalAsync`.
       *
       * @param {(string|function())=} expression An angular expression to be executed.
       *
       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.
       *    - `function(scope)`: execute the function with the current `scope` parameter.
       *
       * @param {(object)=} locals Local variables object, useful for overriding values in scope.
       */
      $evalAsync: function(expr, locals) {
        // if we are outside of an $digest loop and this is the first time we are scheduling async
        // task also schedule async auto-flush
        if (!$rootScope.$$phase && !asyncQueue.length) {
          $browser.defer(function() {
            if (asyncQueue.length) {
              $rootScope.$digest();
            }
          });
        }

        asyncQueue.push({scope: this, expression: $parse(expr), locals: locals});
      },

      $$postDigest: function(fn) {
        postDigestQueue.push(fn);
      },

      /**
       * @ngdoc method
       * @name $rootScope.Scope#$apply
       * @kind function
       *
       * @description
       * `$apply()` is used to execute an expression in angular from outside of the angular
       * framework. (For example from browser DOM events, setTimeout, XHR or third party libraries).
       * Because we are calling into the angular framework we need to perform proper scope life
       * cycle of {@link ng.$exceptionHandler exception handling},
       * {@link ng.$rootScope.Scope#$digest executing watches}.
       *
       * ## Life cycle
       *
       * # Pseudo-Code of `$apply()`
       * ```js
           function $apply(expr) {
             try {
               return $eval(expr);
             } catch (e) {
               $exceptionHandler(e);
             } finally {
               $root.$digest();
             }
           }
       * ```
       *
       *
       * Scope's `$apply()` method transitions through the following stages:
       *
       * 1. The {@link guide/expression expression} is executed using the
       *    {@link ng.$rootScope.Scope#$eval $eval()} method.
       * 2. Any exceptions from the execution of the expression are forwarded to the
       *    {@link ng.$exceptionHandler $exceptionHandler} service.
       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the
       *    expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.
       *
       *
       * @param {(string|function())=} exp An angular expression to be executed.
       *
       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.
       *    - `function(scope)`: execute the function with current `scope` parameter.
       *
       * @returns {*} The result of evaluating the expression.
       */
      $apply: function(expr) {
        try {
          beginPhase('$apply');
          try {
            return this.$eval(expr);
          } finally {
            clearPhase();
          }
        } catch (e) {
          $exceptionHandler(e);
        } finally {
          try {
            $rootScope.$digest();
          } catch (e) {
            $exceptionHandler(e);
            // eslint-disable-next-line no-unsafe-finally
            throw e;
          }
        }
      },

      /**
       * @ngdoc method
       * @name $rootScope.Scope#$applyAsync
       * @kind function
       *
       * @description
       * Schedule the invocation of $apply to occur at a later time. The actual time difference
       * varies across browsers, but is typically around ~10 milliseconds.
       *
       * This can be used to queue up multiple expressions which need to be evaluated in the same
       * digest.
       *
       * @param {(string|function())=} exp An angular expression to be executed.
       *
       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.
       *    - `function(scope)`: execute the function with current `scope` parameter.
       */
      $applyAsync: function(expr) {
        var scope = this;
        if (expr) {
          applyAsyncQueue.push($applyAsyncExpression);
        }
        expr = $parse(expr);
        scheduleApplyAsync();

        function $applyAsyncExpression() {
          scope.$eval(expr);
        }
      },

      /**
       * @ngdoc method
       * @name $rootScope.Scope#$on
       * @kind function
       *
       * @description
       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for
       * discussion of event life cycle.
       *
       * The event listener function format is: `function(event, args...)`. The `event` object
       * passed into the listener has the following attributes:
       *
       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or
       *     `$broadcast`-ed.
       *   - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the
       *     event propagates through the scope hierarchy, this property is set to null.
       *   - `name` - `{string}`: name of the event.
       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel
       *     further event propagation (available only for events that were `$emit`-ed).
       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag
       *     to true.
       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.
       *
       * @param {string} name Event name to listen on.
       * @param {function(event, ...args)} listener Function to call when the event is emitted.
       * @returns {function()} Returns a deregistration function for this listener.
       */
      $on: function(name, listener) {
        var namedListeners = this.$$listeners[name];
        if (!namedListeners) {
          this.$$listeners[name] = namedListeners = [];
        }
        namedListeners.push(listener);

        var current = this;
        do {
          if (!current.$$listenerCount[name]) {
            current.$$listenerCount[name] = 0;
          }
          current.$$listenerCount[name]++;
        } while ((current = current.$parent));

        var self = this;
        return function() {
          var indexOfListener = namedListeners.indexOf(listener);
          if (indexOfListener !== -1) {
            namedListeners[indexOfListener] = null;
            decrementListenerCount(self, 1, name);
          }
        };
      },


      /**
       * @ngdoc method
       * @name $rootScope.Scope#$emit
       * @kind function
       *
       * @description
       * Dispatches an event `name` upwards through the scope hierarchy notifying the
       * registered {@link ng.$rootScope.Scope#$on} listeners.
       *
       * The event life cycle starts at the scope on which `$emit` was called. All
       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get
       * notified. Afterwards, the event traverses upwards toward the root scope and calls all
       * registered listeners along the way. The event will stop propagating if one of the listeners
       * cancels it.
       *
       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed
       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.
       *
       * @param {string} name Event name to emit.
       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.
       * @return {Object} Event object (see {@link ng.$rootScope.Scope#$on}).
       */
      $emit: function(name, args) {
        var empty = [],
            namedListeners,
            scope = this,
            stopPropagation = false,
            event = {
              name: name,
              targetScope: scope,
              stopPropagation: function() {stopPropagation = true;},
              preventDefault: function() {
                event.defaultPrevented = true;
              },
              defaultPrevented: false
            },
            listenerArgs = concat([event], arguments, 1),
            i, length;

        do {
          namedListeners = scope.$$listeners[name] || empty;
          event.currentScope = scope;
          for (i = 0, length = namedListeners.length; i < length; i++) {

            // if listeners were deregistered, defragment the array
            if (!namedListeners[i]) {
              namedListeners.splice(i, 1);
              i--;
              length--;
              continue;
            }
            try {
              //allow all listeners attached to the current scope to run
              namedListeners[i].apply(null, listenerArgs);
            } catch (e) {
              $exceptionHandler(e);
            }
          }
          //if any listener on the current scope stops propagation, prevent bubbling
          if (stopPropagation) {
            event.currentScope = null;
            return event;
          }
          //traverse upwards
          scope = scope.$parent;
        } while (scope);

        event.currentScope = null;

        return event;
      },


      /**
       * @ngdoc method
       * @name $rootScope.Scope#$broadcast
       * @kind function
       *
       * @description
       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the
       * registered {@link ng.$rootScope.Scope#$on} listeners.
       *
       * The event life cycle starts at the scope on which `$broadcast` was called. All
       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get
       * notified. Afterwards, the event propagates to all direct and indirect scopes of the current
       * scope and calls all registered listeners along the way. The event cannot be canceled.
       *
       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed
       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.
       *
       * @param {string} name Event name to broadcast.
       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.
       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}
       */
      $broadcast: function(name, args) {
        var target = this,
            current = target,
            next = target,
            event = {
              name: name,
              targetScope: target,
              preventDefault: function() {
                event.defaultPrevented = true;
              },
              defaultPrevented: false
            };

        if (!target.$$listenerCount[name]) return event;

        var listenerArgs = concat([event], arguments, 1),
            listeners, i, length;

        //down while you can, then up and next sibling or up and next sibling until back at root
        while ((current = next)) {
          event.currentScope = current;
          listeners = current.$$listeners[name] || [];
          for (i = 0, length = listeners.length; i < length; i++) {
            // if listeners were deregistered, defragment the array
            if (!listeners[i]) {
              listeners.splice(i, 1);
              i--;
              length--;
              continue;
            }

            try {
              listeners[i].apply(null, listenerArgs);
            } catch (e) {
              $exceptionHandler(e);
            }
          }

          // Insanity Warning: scope depth-first traversal
          // yes, this code is a bit crazy, but it works and we have tests to prove it!
          // this piece should be kept in sync with the traversal in $digest
          // (though it differs due to having the extra check for $$listenerCount)
          if (!(next = ((current.$$listenerCount[name] && current.$$childHead) ||
              (current !== target && current.$$nextSibling)))) {
            while (current !== target && !(next = current.$$nextSibling)) {
              current = current.$parent;
            }
          }
        }

        event.currentScope = null;
        return event;
      }
    };

    var $rootScope = new Scope();

    //The internal queues. Expose them on the $rootScope for debugging/testing purposes.
    var asyncQueue = $rootScope.$$asyncQueue = [];
    var postDigestQueue = $rootScope.$$postDigestQueue = [];
    var applyAsyncQueue = $rootScope.$$applyAsyncQueue = [];

    var postDigestQueuePosition = 0;

    return $rootScope;


    function beginPhase(phase) {
      if ($rootScope.$$phase) {
        throw $rootScopeMinErr('inprog', '{0} already in progress', $rootScope.$$phase);
      }

      $rootScope.$$phase = phase;
    }

    function clearPhase() {
      $rootScope.$$phase = null;
    }

    function incrementWatchersCount(current, count) {
      do {
        current.$$watchersCount += count;
      } while ((current = current.$parent));
    }

    function decrementListenerCount(current, count, name) {
      do {
        current.$$listenerCount[name] -= count;

        if (current.$$listenerCount[name] === 0) {
          delete current.$$listenerCount[name];
        }
      } while ((current = current.$parent));
    }

    /**
     * function used as an initial value for watchers.
     * because it's unique we can easily tell it apart from other values
     */
    function initWatchVal() {}

    function flushApplyAsync() {
      while (applyAsyncQueue.length) {
        try {
          applyAsyncQueue.shift()();
        } catch (e) {
          $exceptionHandler(e);
        }
      }
      applyAsyncId = null;
    }

    function scheduleApplyAsync() {
      if (applyAsyncId === null) {
        applyAsyncId = $browser.defer(function() {
          $rootScope.$apply(flushApplyAsync);
        });
      }
    }
  }];
}

/**
 * @ngdoc service
 * @name $rootElement
 *
 * @description
 * The root element of Angular application. This is either the element where {@link
 * ng.directive:ngApp ngApp} was declared or the element passed into
 * {@link angular.bootstrap}. The element represents the root element of application. It is also the
 * location where the application's {@link auto.$injector $injector} service gets
 * published, and can be retrieved using `$rootElement.injector()`.
 */


// the implementation is in angular.bootstrap

/**
 * @this
 * @description
 * Private service to sanitize uris for links and images. Used by $compile and $sanitize.
 */
function $$SanitizeUriProvider() {
  var aHrefSanitizationWhitelist = /^\s*(https?|ftp|mailto|tel|file):/,
    imgSrcSanitizationWhitelist = /^\s*((https?|ftp|file|blob):|data:image\/)/;

  /**
   * @description
   * Retrieves or overrides the default regular expression that is used for whitelisting of safe
   * urls during a[href] sanitization.
   *
   * The sanitization is a security measure aimed at prevent XSS attacks via html links.
   *
   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into
   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`
   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
   *
   * @param {RegExp=} regexp New regexp to whitelist urls with.
   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
   *    chaining otherwise.
   */
  this.aHrefSanitizationWhitelist = function(regexp) {
    if (isDefined(regexp)) {
      aHrefSanitizationWhitelist = regexp;
      return this;
    }
    return aHrefSanitizationWhitelist;
  };


  /**
   * @description
   * Retrieves or overrides the default regular expression that is used for whitelisting of safe
   * urls during img[src] sanitization.
   *
   * The sanitization is a security measure aimed at prevent XSS attacks via html links.
   *
   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into
   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`
   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
   *
   * @param {RegExp=} regexp New regexp to whitelist urls with.
   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
   *    chaining otherwise.
   */
  this.imgSrcSanitizationWhitelist = function(regexp) {
    if (isDefined(regexp)) {
      imgSrcSanitizationWhitelist = regexp;
      return this;
    }
    return imgSrcSanitizationWhitelist;
  };

  this.$get = function() {
    return function sanitizeUri(uri, isImage) {
      var regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;
      var normalizedVal;
      normalizedVal = urlResolve(uri).href;
      if (normalizedVal !== '' && !normalizedVal.match(regex)) {
        return 'unsafe:' + normalizedVal;
      }
      return uri;
    };
  };
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *     Any commits to this file should be reviewed with security in mind.  *
 *   Changes to this file can potentially create security vulnerabilities. *
 *          An approval from 2 Core members with history of modifying      *
 *                         this file is required.                          *
 *                                                                         *
 *  Does the change somehow allow for arbitrary javascript to be executed? *
 *    Or allows for someone to change the prototype of built-in objects?   *
 *     Or gives undesired access to variables likes document or window?    *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/* exported $SceProvider, $SceDelegateProvider */

var $sceMinErr = minErr('$sce');

var SCE_CONTEXTS = {
  HTML: 'html',
  CSS: 'css',
  URL: 'url',
  // RESOURCE_URL is a subtype of URL used in contexts where a privileged resource is sourced from a
  // url.  (e.g. ng-include, script src, templateUrl)
  RESOURCE_URL: 'resourceUrl',
  JS: 'js'
};

// Helper functions follow.

function adjustMatcher(matcher) {
  if (matcher === 'self') {
    return matcher;
  } else if (isString(matcher)) {
    // Strings match exactly except for 2 wildcards - '*' and '**'.
    // '*' matches any character except those from the set ':/.?&'.
    // '**' matches any character (like .* in a RegExp).
    // More than 2 *'s raises an error as it's ill defined.
    if (matcher.indexOf('***') > -1) {
      throw $sceMinErr('iwcard',
          'Illegal sequence *** in string matcher.  String: {0}', matcher);
    }
    matcher = escapeForRegexp(matcher).
                  replace(/\\\*\\\*/g, '.*').
                  replace(/\\\*/g, '[^:/.?&;]*');
    return new RegExp('^' + matcher + '$');
  } else if (isRegExp(matcher)) {
    // The only other type of matcher allowed is a Regexp.
    // Match entire URL / disallow partial matches.
    // Flags are reset (i.e. no global, ignoreCase or multiline)
    return new RegExp('^' + matcher.source + '$');
  } else {
    throw $sceMinErr('imatcher',
        'Matchers may only be "self", string patterns or RegExp objects');
  }
}


function adjustMatchers(matchers) {
  var adjustedMatchers = [];
  if (isDefined(matchers)) {
    forEach(matchers, function(matcher) {
      adjustedMatchers.push(adjustMatcher(matcher));
    });
  }
  return adjustedMatchers;
}


/**
 * @ngdoc service
 * @name $sceDelegate
 * @kind function
 *
 * @description
 *
 * `$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict
 * Contextual Escaping (SCE)} services to AngularJS.
 *
 * Typically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of
 * the `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is
 * because, while the `$sce` provides numerous shorthand methods, etc., you really only need to
 * override 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things
 * work because `$sce` delegates to `$sceDelegate` for these operations.
 *
 * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.
 *
 * The default instance of `$sceDelegate` should work out of the box with little pain.  While you
 * can override it completely to change the behavior of `$sce`, the common case would
 * involve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting
 * your own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as
 * templates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist
 * $sceDelegateProvider.resourceUrlWhitelist} and {@link
 * ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}
 */

/**
 * @ngdoc provider
 * @name $sceDelegateProvider
 * @this
 *
 * @description
 *
 * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate
 * $sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure
 * that the URLs used for sourcing Angular templates are safe.  Refer {@link
 * ng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and
 * {@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}
 *
 * For the general details about this service in Angular, read the main page for {@link ng.$sce
 * Strict Contextual Escaping (SCE)}.
 *
 * **Example**:  Consider the following case. <a name="example"></a>
 *
 * - your app is hosted at url `http://myapp.example.com/`
 * - but some of your templates are hosted on other domains you control such as
 *   `http://srv01.assets.example.com/`, `http://srv02.assets.example.com/`, etc.
 * - and you have an open redirect at `http://myapp.example.com/clickThru?...`.
 *
 * Here is what a secure configuration for this scenario might look like:
 *
 * ```
 *  angular.module('myApp', []).config(function($sceDelegateProvider) {
 *    $sceDelegateProvider.resourceUrlWhitelist([
 *      // Allow same origin resource loads.
 *      'self',
 *      // Allow loading from our assets domain.  Notice the difference between * and **.
 *      'http://srv*.assets.example.com/**'
 *    ]);
 *
 *    // The blacklist overrides the whitelist so the open redirect here is blocked.
 *    $sceDelegateProvider.resourceUrlBlacklist([
 *      'http://myapp.example.com/clickThru**'
 *    ]);
 *  });
 * ```
 */

function $SceDelegateProvider() {
  this.SCE_CONTEXTS = SCE_CONTEXTS;

  // Resource URLs can also be trusted by policy.
  var resourceUrlWhitelist = ['self'],
      resourceUrlBlacklist = [];

  /**
   * @ngdoc method
   * @name $sceDelegateProvider#resourceUrlWhitelist
   * @kind function
   *
   * @param {Array=} whitelist When provided, replaces the resourceUrlWhitelist with the value
   *    provided.  This must be an array or null.  A snapshot of this array is used so further
   *    changes to the array are ignored.
   *
   *    Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items
   *    allowed in this array.
   *
   *    <div class="alert alert-warning">
   *    **Note:** an empty whitelist array will block all URLs!
   *    </div>
   *
   * @return {Array} the currently set whitelist array.
   *
   * The **default value** when no whitelist has been explicitly set is `['self']` allowing only
   * same origin resource requests.
   *
   * @description
   * Sets/Gets the whitelist of trusted resource URLs.
   */
  this.resourceUrlWhitelist = function(value) {
    if (arguments.length) {
      resourceUrlWhitelist = adjustMatchers(value);
    }
    return resourceUrlWhitelist;
  };

  /**
   * @ngdoc method
   * @name $sceDelegateProvider#resourceUrlBlacklist
   * @kind function
   *
   * @param {Array=} blacklist When provided, replaces the resourceUrlBlacklist with the value
   *    provided.  This must be an array or null.  A snapshot of this array is used so further
   *    changes to the array are ignored.
   *
   *    Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items
   *    allowed in this array.
   *
   *    The typical usage for the blacklist is to **block
   *    [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as
   *    these would otherwise be trusted but actually return content from the redirected domain.
   *
   *    Finally, **the blacklist overrides the whitelist** and has the final say.
   *
   * @return {Array} the currently set blacklist array.
   *
   * The **default value** when no whitelist has been explicitly set is the empty array (i.e. there
   * is no blacklist.)
   *
   * @description
   * Sets/Gets the blacklist of trusted resource URLs.
   */

  this.resourceUrlBlacklist = function(value) {
    if (arguments.length) {
      resourceUrlBlacklist = adjustMatchers(value);
    }
    return resourceUrlBlacklist;
  };

  this.$get = ['$injector', function($injector) {

    var htmlSanitizer = function htmlSanitizer(html) {
      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');
    };

    if ($injector.has('$sanitize')) {
      htmlSanitizer = $injector.get('$sanitize');
    }


    function matchUrl(matcher, parsedUrl) {
      if (matcher === 'self') {
        return urlIsSameOrigin(parsedUrl);
      } else {
        // definitely a regex.  See adjustMatchers()
        return !!matcher.exec(parsedUrl.href);
      }
    }

    function isResourceUrlAllowedByPolicy(url) {
      var parsedUrl = urlResolve(url.toString());
      var i, n, allowed = false;
      // Ensure that at least one item from the whitelist allows this url.
      for (i = 0, n = resourceUrlWhitelist.length; i < n; i++) {
        if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {
          allowed = true;
          break;
        }
      }
      if (allowed) {
        // Ensure that no item from the blacklist blocked this url.
        for (i = 0, n = resourceUrlBlacklist.length; i < n; i++) {
          if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {
            allowed = false;
            break;
          }
        }
      }
      return allowed;
    }

    function generateHolderType(Base) {
      var holderType = function TrustedValueHolderType(trustedValue) {
        this.$$unwrapTrustedValue = function() {
          return trustedValue;
        };
      };
      if (Base) {
        holderType.prototype = new Base();
      }
      holderType.prototype.valueOf = function sceValueOf() {
        return this.$$unwrapTrustedValue();
      };
      holderType.prototype.toString = function sceToString() {
        return this.$$unwrapTrustedValue().toString();
      };
      return holderType;
    }

    var trustedValueHolderBase = generateHolderType(),
        byType = {};

    byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase);
    byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase);
    byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase);
    byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase);
    byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]);

    /**
     * @ngdoc method
     * @name $sceDelegate#trustAs
     *
     * @description
     * Returns an object that is trusted by angular for use in specified strict
     * contextual escaping contexts (such as ng-bind-html, ng-include, any src
     * attribute interpolation, any dom event binding attribute interpolation
     * such as for onclick,  etc.) that uses the provided value.
     * See {@link ng.$sce $sce} for enabling strict contextual escaping.
     *
     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,
     *   resourceUrl, html, js and css.
     * @param {*} value The value that that should be considered trusted/safe.
     * @returns {*} A value that can be used to stand in for the provided `value` in places
     * where Angular expects a $sce.trustAs() return value.
     */
    function trustAs(type, trustedValue) {
      var Constructor = (byType.hasOwnProperty(type) ? byType[type] : null);
      if (!Constructor) {
        throw $sceMinErr('icontext',
            'Attempted to trust a value in invalid context. Context: {0}; Value: {1}',
            type, trustedValue);
      }
      if (trustedValue === null || isUndefined(trustedValue) || trustedValue === '') {
        return trustedValue;
      }
      // All the current contexts in SCE_CONTEXTS happen to be strings.  In order to avoid trusting
      // mutable objects, we ensure here that the value passed in is actually a string.
      if (typeof trustedValue !== 'string') {
        throw $sceMinErr('itype',
            'Attempted to trust a non-string value in a content requiring a string: Context: {0}',
            type);
      }
      return new Constructor(trustedValue);
    }

    /**
     * @ngdoc method
     * @name $sceDelegate#valueOf
     *
     * @description
     * If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs
     * `$sceDelegate.trustAs`}, returns the value that had been passed to {@link
     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.
     *
     * If the passed parameter is not a value that had been returned by {@link
     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.
     *
     * @param {*} value The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}
     *      call or anything else.
     * @returns {*} The `value` that was originally provided to {@link ng.$sceDelegate#trustAs
     *     `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns
     *     `value` unchanged.
     */
    function valueOf(maybeTrusted) {
      if (maybeTrusted instanceof trustedValueHolderBase) {
        return maybeTrusted.$$unwrapTrustedValue();
      } else {
        return maybeTrusted;
      }
    }

    /**
     * @ngdoc method
     * @name $sceDelegate#getTrusted
     *
     * @description
     * Takes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and
     * returns the originally supplied value if the queried context type is a supertype of the
     * created type.  If this condition isn't satisfied, throws an exception.
     *
     * <div class="alert alert-danger">
     * Disabling auto-escaping is extremely dangerous, it usually creates a Cross Site Scripting
     * (XSS) vulnerability in your application.
     * </div>
     *
     * @param {string} type The kind of context in which this value is to be used.
     * @param {*} maybeTrusted The result of a prior {@link ng.$sceDelegate#trustAs
     *     `$sceDelegate.trustAs`} call.
     * @returns {*} The value the was originally provided to {@link ng.$sceDelegate#trustAs
     *     `$sceDelegate.trustAs`} if valid in this context.  Otherwise, throws an exception.
     */
    function getTrusted(type, maybeTrusted) {
      if (maybeTrusted === null || isUndefined(maybeTrusted) || maybeTrusted === '') {
        return maybeTrusted;
      }
      var constructor = (byType.hasOwnProperty(type) ? byType[type] : null);
      if (constructor && maybeTrusted instanceof constructor) {
        return maybeTrusted.$$unwrapTrustedValue();
      }
      // If we get here, then we may only take one of two actions.
      // 1. sanitize the value for the requested type, or
      // 2. throw an exception.
      if (type === SCE_CONTEXTS.RESOURCE_URL) {
        if (isResourceUrlAllowedByPolicy(maybeTrusted)) {
          return maybeTrusted;
        } else {
          throw $sceMinErr('insecurl',
              'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}',
              maybeTrusted.toString());
        }
      } else if (type === SCE_CONTEXTS.HTML) {
        return htmlSanitizer(maybeTrusted);
      }
      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');
    }

    return { trustAs: trustAs,
             getTrusted: getTrusted,
             valueOf: valueOf };
  }];
}


/**
 * @ngdoc provider
 * @name $sceProvider
 * @this
 *
 * @description
 *
 * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.
 * -   enable/disable Strict Contextual Escaping (SCE) in a module
 * -   override the default implementation with a custom delegate
 *
 * Read more about {@link ng.$sce Strict Contextual Escaping (SCE)}.
 */

/**
 * @ngdoc service
 * @name $sce
 * @kind function
 *
 * @description
 *
 * `$sce` is a service that provides Strict Contextual Escaping services to AngularJS.
 *
 * # Strict Contextual Escaping
 *
 * Strict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain
 * contexts to result in a value that is marked as safe to use for that context.  One example of
 * such a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer
 * to these contexts as privileged or SCE contexts.
 *
 * As of version 1.2, Angular ships with SCE enabled by default.
 *
 * Note:  When enabled (the default), IE<11 in quirks mode is not supported.  In this mode, IE<11 allow
 * one to execute arbitrary javascript by the use of the expression() syntax.  Refer
 * <http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.
 * You can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`
 * to the top of your HTML document.
 *
 * SCE assists in writing code in a way that (a) is secure by default and (b) makes auditing for
 * security vulnerabilities such as XSS, clickjacking, etc. a lot easier.
 *
 * Here's an example of a binding in a privileged context:
 *
 * ```
 * <input ng-model="userHtml" aria-label="User input">
 * <div ng-bind-html="userHtml"></div>
 * ```
 *
 * Notice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE
 * disabled, this application allows the user to render arbitrary HTML into the DIV.
 * In a more realistic example, one may be rendering user comments, blog articles, etc. via
 * bindings.  (HTML is just one example of a context where rendering user controlled input creates
 * security vulnerabilities.)
 *
 * For the case of HTML, you might use a library, either on the client side, or on the server side,
 * to sanitize unsafe HTML before binding to the value and rendering it in the document.
 *
 * How would you ensure that every place that used these types of bindings was bound to a value that
 * was sanitized by your library (or returned as safe for rendering by your server?)  How can you
 * ensure that you didn't accidentally delete the line that sanitized the value, or renamed some
 * properties/fields and forgot to update the binding to the sanitized value?
 *
 * To be secure by default, you want to ensure that any such bindings are disallowed unless you can
 * determine that something explicitly says it's safe to use a value for binding in that
 * context.  You can then audit your code (a simple grep would do) to ensure that this is only done
 * for those values that you can easily tell are safe - because they were received from your server,
 * sanitized by your library, etc.  You can organize your codebase to help with this - perhaps
 * allowing only the files in a specific directory to do this.  Ensuring that the internal API
 * exposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.
 *
 * In the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}
 * (and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to
 * obtain values that will be accepted by SCE / privileged contexts.
 *
 *
 * ## How does it work?
 *
 * In privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted
 * $sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link
 * ng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the
 * {@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.
 *
 * As an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link
 * ng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly
 * simplified):
 *
 * ```
 * var ngBindHtmlDirective = ['$sce', function($sce) {
 *   return function(scope, element, attr) {
 *     scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {
 *       element.html(value || '');
 *     });
 *   };
 * }];
 * ```
 *
 * ## Impact on loading templates
 *
 * This applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as
 * `templateUrl`'s specified by {@link guide/directive directives}.
 *
 * By default, Angular only loads templates from the same domain and protocol as the application
 * document.  This is done by calling {@link ng.$sce#getTrustedResourceUrl
 * $sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or
 * protocols, you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist
 * them} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.
 *
 * *Please note*:
 * The browser's
 * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)
 * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)
 * policy apply in addition to this and may further restrict whether the template is successfully
 * loaded.  This means that without the right CORS policy, loading templates from a different domain
 * won't work on all browsers.  Also, loading templates from `file://` URL does not work on some
 * browsers.
 *
 * ## This feels like too much overhead
 *
 * It's important to remember that SCE only applies to interpolation expressions.
 *
 * If your expressions are constant literals, they're automatically trusted and you don't need to
 * call `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.
 * `<div ng-bind-html="'<b>implicitly trusted</b>'"></div>`) just works.
 *
 * Additionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them
 * through {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.
 *
 * The included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load
 * templates in `ng-include` from your application's domain without having to even know about SCE.
 * It blocks loading templates from other domains or loading templates over http from an https
 * served document.  You can change these by setting your own custom {@link
 * ng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link
 * ng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.
 *
 * This significantly reduces the overhead.  It is far easier to pay the small overhead and have an
 * application that's secure and can be audited to verify that with much more ease than bolting
 * security onto an application later.
 *
 * <a name="contexts"></a>
 * ## What trusted context types are supported?
 *
 * | Context             | Notes          |
 * |---------------------|----------------|
 * | `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |
 * | `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |
 * | `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |
 * | `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG`, `VIDEO`, `AUDIO`, `SOURCE`, and `TRACK` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |
 * | `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |
 *
 * ## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name="resourceUrlPatternItem"></a>
 *
 *  Each element in these arrays must be one of the following:
 *
 *  - **'self'**
 *    - The special **string**, `'self'`, can be used to match against all URLs of the **same
 *      domain** as the application document using the **same protocol**.
 *  - **String** (except the special value `'self'`)
 *    - The string is matched against the full *normalized / absolute URL* of the resource
 *      being tested (substring matches are not good enough.)
 *    - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters
 *      match themselves.
 *    - `*`: matches zero or more occurrences of any character other than one of the following 6
 *      characters: '`:`', '`/`', '`.`', '`?`', '`&`' and '`;`'.  It's a useful wildcard for use
 *      in a whitelist.
 *    - `**`: matches zero or more occurrences of *any* character.  As such, it's not
 *      appropriate for use in a scheme, domain, etc. as it would match too much.  (e.g.
 *      http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might
 *      not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.
 *      http://foo.example.com/templates/**).
 *  - **RegExp** (*see caveat below*)
 *    - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax
 *      (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to
 *      accidentally introduce a bug when one updates a complex expression (imho, all regexes should
 *      have good test coverage).  For instance, the use of `.` in the regex is correct only in a
 *      small number of cases.  A `.` character in the regex used when matching the scheme or a
 *      subdomain could be matched against a `:` or literal `.` that was likely not intended.   It
 *      is highly recommended to use the string patterns and only fall back to regular expressions
 *      as a last resort.
 *    - The regular expression must be an instance of RegExp (i.e. not a string.)  It is
 *      matched against the **entire** *normalized / absolute URL* of the resource being tested
 *      (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags
 *      present on the RegExp (such as multiline, global, ignoreCase) are ignored.
 *    - If you are generating your JavaScript from some other templating engine (not
 *      recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),
 *      remember to escape your regular expression (and be aware that you might need more than
 *      one level of escaping depending on your templating engine and the way you interpolated
 *      the value.)  Do make use of your platform's escaping mechanism as it might be good
 *      enough before coding your own.  E.g. Ruby has
 *      [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)
 *      and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).
 *      Javascript lacks a similar built in function for escaping.  Take a look at Google
 *      Closure library's [goog.string.regExpEscape(s)](
 *      http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).
 *
 * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.
 *
 * ## Show me an example using SCE.
 *
 * <example module="mySceApp" deps="angular-sanitize.js" name="sce-service">
 * <file name="index.html">
 *   <div ng-controller="AppController as myCtrl">
 *     <i ng-bind-html="myCtrl.explicitlyTrustedHtml" id="explicitlyTrustedHtml"></i><br><br>
 *     <b>User comments</b><br>
 *     By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when
 *     $sanitize is available.  If $sanitize isn't available, this results in an error instead of an
 *     exploit.
 *     <div class="well">
 *       <div ng-repeat="userComment in myCtrl.userComments">
 *         <b>{{userComment.name}}</b>:
 *         <span ng-bind-html="userComment.htmlComment" class="htmlComment"></span>
 *         <br>
 *       </div>
 *     </div>
 *   </div>
 * </file>
 *
 * <file name="script.js">
 *   angular.module('mySceApp', ['ngSanitize'])
 *     .controller('AppController', ['$http', '$templateCache', '$sce',
 *       function AppController($http, $templateCache, $sce) {
 *         var self = this;
 *         $http.get('test_data.json', {cache: $templateCache}).success(function(userComments) {
 *           self.userComments = userComments;
 *         });
 *         self.explicitlyTrustedHtml = $sce.trustAsHtml(
 *             '<span onmouseover="this.textContent=&quot;Explicitly trusted HTML bypasses ' +
 *             'sanitization.&quot;">Hover over this text.</span>');
 *       }]);
 * </file>
 *
 * <file name="test_data.json">
 * [
 *   { "name": "Alice",
 *     "htmlComment":
 *         "<span onmouseover='this.textContent=\"PWN3D!\"'>Is <i>anyone</i> reading this?</span>"
 *   },
 *   { "name": "Bob",
 *     "htmlComment": "<i>Yes!</i>  Am I the only other one?"
 *   }
 * ]
 * </file>
 *
 * <file name="protractor.js" type="protractor">
 *   describe('SCE doc demo', function() {
 *     it('should sanitize untrusted values', function() {
 *       expect(element.all(by.css('.htmlComment')).first().getAttribute('innerHTML'))
 *           .toBe('<span>Is <i>anyone</i> reading this?</span>');
 *     });
 *
 *     it('should NOT sanitize explicitly trusted values', function() {
 *       expect(element(by.id('explicitlyTrustedHtml')).getAttribute('innerHTML')).toBe(
 *           '<span onmouseover="this.textContent=&quot;Explicitly trusted HTML bypasses ' +
 *           'sanitization.&quot;">Hover over this text.</span>');
 *     });
 *   });
 * </file>
 * </example>
 *
 *
 *
 * ## Can I disable SCE completely?
 *
 * Yes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits
 * for little coding overhead.  It will be much harder to take an SCE disabled application and
 * either secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE
 * for cases where you have a lot of existing code that was written before SCE was introduced and
 * you're migrating them a module at a time.
 *
 * That said, here's how you can completely disable SCE:
 *
 * ```
 * angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {
 *   // Completely disable SCE.  For demonstration purposes only!
 *   // Do not use in new projects.
 *   $sceProvider.enabled(false);
 * });
 * ```
 *
 */

function $SceProvider() {
  var enabled = true;

  /**
   * @ngdoc method
   * @name $sceProvider#enabled
   * @kind function
   *
   * @param {boolean=} value If provided, then enables/disables SCE.
   * @return {boolean} true if SCE is enabled, false otherwise.
   *
   * @description
   * Enables/disables SCE and returns the current value.
   */
  this.enabled = function(value) {
    if (arguments.length) {
      enabled = !!value;
    }
    return enabled;
  };


  /* Design notes on the default implementation for SCE.
   *
   * The API contract for the SCE delegate
   * -------------------------------------
   * The SCE delegate object must provide the following 3 methods:
   *
   * - trustAs(contextEnum, value)
   *     This method is used to tell the SCE service that the provided value is OK to use in the
   *     contexts specified by contextEnum.  It must return an object that will be accepted by
   *     getTrusted() for a compatible contextEnum and return this value.
   *
   * - valueOf(value)
   *     For values that were not produced by trustAs(), return them as is.  For values that were
   *     produced by trustAs(), return the corresponding input value to trustAs.  Basically, if
   *     trustAs is wrapping the given values into some type, this operation unwraps it when given
   *     such a value.
   *
   * - getTrusted(contextEnum, value)
   *     This function should return the a value that is safe to use in the context specified by
   *     contextEnum or throw and exception otherwise.
   *
   * NOTE: This contract deliberately does NOT state that values returned by trustAs() must be
   * opaque or wrapped in some holder object.  That happens to be an implementation detail.  For
   * instance, an implementation could maintain a registry of all trusted objects by context.  In
   * such a case, trustAs() would return the same object that was passed in.  getTrusted() would
   * return the same object passed in if it was found in the registry under a compatible context or
   * throw an exception otherwise.  An implementation might only wrap values some of the time based
   * on some criteria.  getTrusted() might return a value and not throw an exception for special
   * constants or objects even if not wrapped.  All such implementations fulfill this contract.
   *
   *
   * A note on the inheritance model for SCE contexts
   * ------------------------------------------------
   * I've used inheritance and made RESOURCE_URL wrapped types a subtype of URL wrapped types.  This
   * is purely an implementation details.
   *
   * The contract is simply this:
   *
   *     getTrusted($sce.RESOURCE_URL, value) succeeding implies that getTrusted($sce.URL, value)
   *     will also succeed.
   *
   * Inheritance happens to capture this in a natural way.  In some future, we
   * may not use inheritance anymore.  That is OK because no code outside of
   * sce.js and sceSpecs.js would need to be aware of this detail.
   */

  this.$get = ['$parse', '$sceDelegate', function(
                $parse,   $sceDelegate) {
    // Prereq: Ensure that we're not running in IE<11 quirks mode.  In that mode, IE < 11 allow
    // the "expression(javascript expression)" syntax which is insecure.
    if (enabled && msie < 8) {
      throw $sceMinErr('iequirks',
        'Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks ' +
        'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML ' +
        'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');
    }

    var sce = shallowCopy(SCE_CONTEXTS);

    /**
     * @ngdoc method
     * @name $sce#isEnabled
     * @kind function
     *
     * @return {Boolean} true if SCE is enabled, false otherwise.  If you want to set the value, you
     * have to do it at module config time on {@link ng.$sceProvider $sceProvider}.
     *
     * @description
     * Returns a boolean indicating if SCE is enabled.
     */
    sce.isEnabled = function() {
      return enabled;
    };
    sce.trustAs = $sceDelegate.trustAs;
    sce.getTrusted = $sceDelegate.getTrusted;
    sce.valueOf = $sceDelegate.valueOf;

    if (!enabled) {
      sce.trustAs = sce.getTrusted = function(type, value) { return value; };
      sce.valueOf = identity;
    }

    /**
     * @ngdoc method
     * @name $sce#parseAs
     *
     * @description
     * Converts Angular {@link guide/expression expression} into a function.  This is like {@link
     * ng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it
     * wraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,
     * *result*)}
     *
     * @param {string} type The kind of SCE context in which this result will be used.
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */
    sce.parseAs = function sceParseAs(type, expr) {
      var parsed = $parse(expr);
      if (parsed.literal && parsed.constant) {
        return parsed;
      } else {
        return $parse(expr, function(value) {
          return sce.getTrusted(type, value);
        });
      }
    };

    /**
     * @ngdoc method
     * @name $sce#trustAs
     *
     * @description
     * Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,
     * returns an object that is trusted by angular for use in specified strict contextual
     * escaping contexts (such as ng-bind-html, ng-include, any src attribute
     * interpolation, any dom event binding attribute interpolation such as for onclick,  etc.)
     * that uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual
     * escaping.
     *
     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,
     *   resourceUrl, html, js and css.
     * @param {*} value The value that that should be considered trusted/safe.
     * @returns {*} A value that can be used to stand in for the provided `value` in places
     * where Angular expects a $sce.trustAs() return value.
     */

    /**
     * @ngdoc method
     * @name $sce#trustAsHtml
     *
     * @description
     * Shorthand method.  `$sce.trustAsHtml(value)` →
     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}
     *
     * @param {*} value The value to trustAs.
     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedHtml
     *     $sce.getTrustedHtml(value)} to obtain the original value.  (privileged directives
     *     only accept expressions that are either literal constants or are the
     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)
     */

    /**
     * @ngdoc method
     * @name $sce#trustAsUrl
     *
     * @description
     * Shorthand method.  `$sce.trustAsUrl(value)` →
     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}
     *
     * @param {*} value The value to trustAs.
     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedUrl
     *     $sce.getTrustedUrl(value)} to obtain the original value.  (privileged directives
     *     only accept expressions that are either literal constants or are the
     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)
     */

    /**
     * @ngdoc method
     * @name $sce#trustAsResourceUrl
     *
     * @description
     * Shorthand method.  `$sce.trustAsResourceUrl(value)` →
     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}
     *
     * @param {*} value The value to trustAs.
     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedResourceUrl
     *     $sce.getTrustedResourceUrl(value)} to obtain the original value.  (privileged directives
     *     only accept expressions that are either literal constants or are the return
     *     value of {@link ng.$sce#trustAs $sce.trustAs}.)
     */

    /**
     * @ngdoc method
     * @name $sce#trustAsJs
     *
     * @description
     * Shorthand method.  `$sce.trustAsJs(value)` →
     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}
     *
     * @param {*} value The value to trustAs.
     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedJs
     *     $sce.getTrustedJs(value)} to obtain the original value.  (privileged directives
     *     only accept expressions that are either literal constants or are the
     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)
     */

    /**
     * @ngdoc method
     * @name $sce#getTrusted
     *
     * @description
     * Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,
     * takes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the
     * originally supplied value if the queried context type is a supertype of the created type.
     * If this condition isn't satisfied, throws an exception.
     *
     * @param {string} type The kind of context in which this value is to be used.
     * @param {*} maybeTrusted The result of a prior {@link ng.$sce#trustAs `$sce.trustAs`}
     *                         call.
     * @returns {*} The value the was originally provided to
     *              {@link ng.$sce#trustAs `$sce.trustAs`} if valid in this context.
     *              Otherwise, throws an exception.
     */

    /**
     * @ngdoc method
     * @name $sce#getTrustedHtml
     *
     * @description
     * Shorthand method.  `$sce.getTrustedHtml(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}
     *
     * @param {*} value The value to pass to `$sce.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.HTML, value)`
     */

    /**
     * @ngdoc method
     * @name $sce#getTrustedCss
     *
     * @description
     * Shorthand method.  `$sce.getTrustedCss(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}
     *
     * @param {*} value The value to pass to `$sce.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.CSS, value)`
     */

    /**
     * @ngdoc method
     * @name $sce#getTrustedUrl
     *
     * @description
     * Shorthand method.  `$sce.getTrustedUrl(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}
     *
     * @param {*} value The value to pass to `$sce.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.URL, value)`
     */

    /**
     * @ngdoc method
     * @name $sce#getTrustedResourceUrl
     *
     * @description
     * Shorthand method.  `$sce.getTrustedResourceUrl(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}
     *
     * @param {*} value The value to pass to `$sceDelegate.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`
     */

    /**
     * @ngdoc method
     * @name $sce#getTrustedJs
     *
     * @description
     * Shorthand method.  `$sce.getTrustedJs(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}
     *
     * @param {*} value The value to pass to `$sce.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.JS, value)`
     */

    /**
     * @ngdoc method
     * @name $sce#parseAsHtml
     *
     * @description
     * Shorthand method.  `$sce.parseAsHtml(expression string)` →
     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */

    /**
     * @ngdoc method
     * @name $sce#parseAsCss
     *
     * @description
     * Shorthand method.  `$sce.parseAsCss(value)` →
     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */

    /**
     * @ngdoc method
     * @name $sce#parseAsUrl
     *
     * @description
     * Shorthand method.  `$sce.parseAsUrl(value)` →
     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */

    /**
     * @ngdoc method
     * @name $sce#parseAsResourceUrl
     *
     * @description
     * Shorthand method.  `$sce.parseAsResourceUrl(value)` →
     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */

    /**
     * @ngdoc method
     * @name $sce#parseAsJs
     *
     * @description
     * Shorthand method.  `$sce.parseAsJs(value)` →
     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */

    // Shorthand delegations.
    var parse = sce.parseAs,
        getTrusted = sce.getTrusted,
        trustAs = sce.trustAs;

    forEach(SCE_CONTEXTS, function(enumValue, name) {
      var lName = lowercase(name);
      sce[camelCase('parse_as_' + lName)] = function(expr) {
        return parse(enumValue, expr);
      };
      sce[camelCase('get_trusted_' + lName)] = function(value) {
        return getTrusted(enumValue, value);
      };
      sce[camelCase('trust_as_' + lName)] = function(value) {
        return trustAs(enumValue, value);
      };
    });

    return sce;
  }];
}

/* exported $SnifferProvider */

/**
 * !!! This is an undocumented "private" service !!!
 *
 * @name $sniffer
 * @requires $window
 * @requires $document
 * @this
 *
 * @property {boolean} history Does the browser support html5 history api ?
 * @property {boolean} transitions Does the browser support CSS transition events ?
 * @property {boolean} animations Does the browser support CSS animation events ?
 *
 * @description
 * This is very simple implementation of testing browser's features.
 */
function $SnifferProvider() {
  this.$get = ['$window', '$document', function($window, $document) {
    var eventSupport = {},
        // Chrome Packaged Apps are not allowed to access `history.pushState`.
        // If not sandboxed, they can be detected by the presence of `chrome.app.runtime`
        // (see https://developer.chrome.com/apps/api_index). If sandboxed, they can be detected by
        // the presence of an extension runtime ID and the absence of other Chrome runtime APIs
        // (see https://developer.chrome.com/apps/manifest/sandbox).
        isChromePackagedApp =
            $window.chrome &&
            ($window.chrome.app && $window.chrome.app.runtime ||
                !$window.chrome.app && $window.chrome.runtime && $window.chrome.runtime.id),
        hasHistoryPushState = !isChromePackagedApp && $window.history && $window.history.pushState,
        android =
          toInt((/android (\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),
        boxee = /Boxee/i.test(($window.navigator || {}).userAgent),
        document = $document[0] || {},
        vendorPrefix,
        vendorRegex = /^(Moz|webkit|ms)(?=[A-Z])/,
        bodyStyle = document.body && document.body.style,
        transitions = false,
        animations = false,
        match;

    if (bodyStyle) {
      for (var prop in bodyStyle) {
        if ((match = vendorRegex.exec(prop))) {
          vendorPrefix = match[0];
          vendorPrefix = vendorPrefix[0].toUpperCase() + vendorPrefix.substr(1);
          break;
        }
      }

      if (!vendorPrefix) {
        vendorPrefix = ('WebkitOpacity' in bodyStyle) && 'webkit';
      }

      transitions = !!(('transition' in bodyStyle) || (vendorPrefix + 'Transition' in bodyStyle));
      animations  = !!(('animation' in bodyStyle) || (vendorPrefix + 'Animation' in bodyStyle));

      if (android && (!transitions ||  !animations)) {
        transitions = isString(bodyStyle.webkitTransition);
        animations = isString(bodyStyle.webkitAnimation);
      }
    }


    return {
      // Android has history.pushState, but it does not update location correctly
      // so let's not use the history API at all.
      // http://code.google.com/p/android/issues/detail?id=17471
      // https://github.com/angular/angular.js/issues/904

      // older webkit browser (533.9) on Boxee box has exactly the same problem as Android has
      // so let's not use the history API also
      // We are purposefully using `!(android < 4)` to cover the case when `android` is undefined
      history: !!(hasHistoryPushState && !(android < 4) && !boxee),
      hasEvent: function(event) {
        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have
        // it. In particular the event is not fired when backspace or delete key are pressed or
        // when cut operation is performed.
        // IE10+ implements 'input' event but it erroneously fires under various situations,
        // e.g. when placeholder changes, or a form is focused.
        if (event === 'input' && msie <= 11) return false;

        if (isUndefined(eventSupport[event])) {
          var divElm = document.createElement('div');
          eventSupport[event] = 'on' + event in divElm;
        }

        return eventSupport[event];
      },
      csp: csp(),
      vendorPrefix: vendorPrefix,
      transitions: transitions,
      animations: animations,
      android: android
    };
  }];
}

var $templateRequestMinErr = minErr('$compile');

/**
 * @ngdoc provider
 * @name $templateRequestProvider
 * @this
 *
 * @description
 * Used to configure the options passed to the {@link $http} service when making a template request.
 *
 * For example, it can be used for specifying the "Accept" header that is sent to the server, when
 * requesting a template.
 */
function $TemplateRequestProvider() {

  var httpOptions;

  /**
   * @ngdoc method
   * @name $templateRequestProvider#httpOptions
   * @description
   * The options to be passed to the {@link $http} service when making the request.
   * You can use this to override options such as the "Accept" header for template requests.
   *
   * The {@link $templateRequest} will set the `cache` and the `transformResponse` properties of the
   * options if not overridden here.
   *
   * @param {string=} value new value for the {@link $http} options.
   * @returns {string|self} Returns the {@link $http} options when used as getter and self if used as setter.
   */
  this.httpOptions = function(val) {
    if (val) {
      httpOptions = val;
      return this;
    }
    return httpOptions;
  };

  /**
   * @ngdoc service
   * @name $templateRequest
   *
   * @description
   * The `$templateRequest` service runs security checks then downloads the provided template using
   * `$http` and, upon success, stores the contents inside of `$templateCache`. If the HTTP request
   * fails or the response data of the HTTP request is empty, a `$compile` error will be thrown (the
   * exception can be thwarted by setting the 2nd parameter of the function to true). Note that the
   * contents of `$templateCache` are trusted, so the call to `$sce.getTrustedUrl(tpl)` is omitted
   * when `tpl` is of type string and `$templateCache` has the matching entry.
   *
   * If you want to pass custom options to the `$http` service, such as setting the Accept header you
   * can configure this via {@link $templateRequestProvider#httpOptions}.
   *
   * @param {string|TrustedResourceUrl} tpl The HTTP request template URL
   * @param {boolean=} ignoreRequestError Whether or not to ignore the exception when the request fails or the template is empty
   *
   * @return {Promise} a promise for the HTTP response data of the given URL.
   *
   * @property {number} totalPendingRequests total amount of pending template requests being downloaded.
   */
  this.$get = ['$templateCache', '$http', '$q', '$sce', function($templateCache, $http, $q, $sce) {

    function handleRequestFn(tpl, ignoreRequestError) {
      handleRequestFn.totalPendingRequests++;

      // We consider the template cache holds only trusted templates, so
      // there's no need to go through whitelisting again for keys that already
      // are included in there. This also makes Angular accept any script
      // directive, no matter its name. However, we still need to unwrap trusted
      // types.
      if (!isString(tpl) || isUndefined($templateCache.get(tpl))) {
        tpl = $sce.getTrustedResourceUrl(tpl);
      }

      var transformResponse = $http.defaults && $http.defaults.transformResponse;

      if (isArray(transformResponse)) {
        transformResponse = transformResponse.filter(function(transformer) {
          return transformer !== defaultHttpResponseTransform;
        });
      } else if (transformResponse === defaultHttpResponseTransform) {
        transformResponse = null;
      }

      return $http.get(tpl, extend({
          cache: $templateCache,
          transformResponse: transformResponse
        }, httpOptions)
        )['finally'](function() {
          handleRequestFn.totalPendingRequests--;
        })
        .then(function(response) {
          $templateCache.put(tpl, response.data);
          return response.data;
        }, handleError);

      function handleError(resp) {
        if (!ignoreRequestError) {
          throw $templateRequestMinErr('tpload', 'Failed to load template: {0} (HTTP status: {1} {2})',
            tpl, resp.status, resp.statusText);
        }
        return $q.reject(resp);
      }
    }

    handleRequestFn.totalPendingRequests = 0;

    return handleRequestFn;
  }];
}

/** @this */
function $$TestabilityProvider() {
  this.$get = ['$rootScope', '$browser', '$location',
       function($rootScope,   $browser,   $location) {

    /**
     * @name $testability
     *
     * @description
     * The private $$testability service provides a collection of methods for use when debugging
     * or by automated test and debugging tools.
     */
    var testability = {};

    /**
     * @name $$testability#findBindings
     *
     * @description
     * Returns an array of elements that are bound (via ng-bind or {{}})
     * to expressions matching the input.
     *
     * @param {Element} element The element root to search from.
     * @param {string} expression The binding expression to match.
     * @param {boolean} opt_exactMatch If true, only returns exact matches
     *     for the expression. Filters and whitespace are ignored.
     */
    testability.findBindings = function(element, expression, opt_exactMatch) {
      var bindings = element.getElementsByClassName('ng-binding');
      var matches = [];
      forEach(bindings, function(binding) {
        var dataBinding = angular.element(binding).data('$binding');
        if (dataBinding) {
          forEach(dataBinding, function(bindingName) {
            if (opt_exactMatch) {
              var matcher = new RegExp('(^|\\s)' + escapeForRegexp(expression) + '(\\s|\\||$)');
              if (matcher.test(bindingName)) {
                matches.push(binding);
              }
            } else {
              if (bindingName.indexOf(expression) !== -1) {
                matches.push(binding);
              }
            }
          });
        }
      });
      return matches;
    };

    /**
     * @name $$testability#findModels
     *
     * @description
     * Returns an array of elements that are two-way found via ng-model to
     * expressions matching the input.
     *
     * @param {Element} element The element root to search from.
     * @param {string} expression The model expression to match.
     * @param {boolean} opt_exactMatch If true, only returns exact matches
     *     for the expression.
     */
    testability.findModels = function(element, expression, opt_exactMatch) {
      var prefixes = ['ng-', 'data-ng-', 'ng\\:'];
      for (var p = 0; p < prefixes.length; ++p) {
        var attributeEquals = opt_exactMatch ? '=' : '*=';
        var selector = '[' + prefixes[p] + 'model' + attributeEquals + '"' + expression + '"]';
        var elements = element.querySelectorAll(selector);
        if (elements.length) {
          return elements;
        }
      }
    };

    /**
     * @name $$testability#getLocation
     *
     * @description
     * Shortcut for getting the location in a browser agnostic way. Returns
     *     the path, search, and hash. (e.g. /path?a=b#hash)
     */
    testability.getLocation = function() {
      return $location.url();
    };

    /**
     * @name $$testability#setLocation
     *
     * @description
     * Shortcut for navigating to a location without doing a full page reload.
     *
     * @param {string} url The location url (path, search and hash,
     *     e.g. /path?a=b#hash) to go to.
     */
    testability.setLocation = function(url) {
      if (url !== $location.url()) {
        $location.url(url);
        $rootScope.$digest();
      }
    };

    /**
     * @name $$testability#whenStable
     *
     * @description
     * Calls the callback when $timeout and $http requests are completed.
     *
     * @param {function} callback
     */
    testability.whenStable = function(callback) {
      $browser.notifyWhenNoOutstandingRequests(callback);
    };

    return testability;
  }];
}

/** @this */
function $TimeoutProvider() {
  this.$get = ['$rootScope', '$browser', '$q', '$$q', '$exceptionHandler',
       function($rootScope,   $browser,   $q,   $$q,   $exceptionHandler) {

    var deferreds = {};


     /**
      * @ngdoc service
      * @name $timeout
      *
      * @description
      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch
      * block and delegates any exceptions to
      * {@link ng.$exceptionHandler $exceptionHandler} service.
      *
      * The return value of calling `$timeout` is a promise, which will be resolved when
      * the delay has passed and the timeout function, if provided, is executed.
      *
      * To cancel a timeout request, call `$timeout.cancel(promise)`.
      *
      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to
      * synchronously flush the queue of deferred functions.
      *
      * If you only want a promise that will be resolved after some specified delay
      * then you can call `$timeout` without the `fn` function.
      *
      * @param {function()=} fn A function, whose execution should be delayed.
      * @param {number=} [delay=0] Delay in milliseconds.
      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise
      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.
      * @param {...*=} Pass additional parameters to the executed function.
      * @returns {Promise} Promise that will be resolved when the timeout is reached. The promise
      *   will be resolved with the return value of the `fn` function.
      *
      */
    function timeout(fn, delay, invokeApply) {
      if (!isFunction(fn)) {
        invokeApply = delay;
        delay = fn;
        fn = noop;
      }

      var args = sliceArgs(arguments, 3),
          skipApply = (isDefined(invokeApply) && !invokeApply),
          deferred = (skipApply ? $$q : $q).defer(),
          promise = deferred.promise,
          timeoutId;

      timeoutId = $browser.defer(function() {
        try {
          deferred.resolve(fn.apply(null, args));
        } catch (e) {
          deferred.reject(e);
          $exceptionHandler(e);
        } finally {
          delete deferreds[promise.$$timeoutId];
        }

        if (!skipApply) $rootScope.$apply();
      }, delay);

      promise.$$timeoutId = timeoutId;
      deferreds[timeoutId] = deferred;

      return promise;
    }


     /**
      * @ngdoc method
      * @name $timeout#cancel
      *
      * @description
      * Cancels a task associated with the `promise`. As a result of this, the promise will be
      * resolved with a rejection.
      *
      * @param {Promise=} promise Promise returned by the `$timeout` function.
      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully
      *   canceled.
      */
    timeout.cancel = function(promise) {
      if (promise && promise.$$timeoutId in deferreds) {
        deferreds[promise.$$timeoutId].reject('canceled');
        delete deferreds[promise.$$timeoutId];
        return $browser.defer.cancel(promise.$$timeoutId);
      }
      return false;
    };

    return timeout;
  }];
}

// NOTE:  The usage of window and document instead of $window and $document here is
// deliberate.  This service depends on the specific behavior of anchor nodes created by the
// browser (resolving and parsing URLs) that is unlikely to be provided by mock objects and
// cause us to break tests.  In addition, when the browser resolves a URL for XHR, it
// doesn't know about mocked locations and resolves URLs to the real document - which is
// exactly the behavior needed here.  There is little value is mocking these out for this
// service.
var urlParsingNode = window.document.createElement('a');
var originUrl = urlResolve(window.location.href);


/**
 *
 * Implementation Notes for non-IE browsers
 * ----------------------------------------
 * Assigning a URL to the href property of an anchor DOM node, even one attached to the DOM,
 * results both in the normalizing and parsing of the URL.  Normalizing means that a relative
 * URL will be resolved into an absolute URL in the context of the application document.
 * Parsing means that the anchor node's host, hostname, protocol, port, pathname and related
 * properties are all populated to reflect the normalized URL.  This approach has wide
 * compatibility - Safari 1+, Mozilla 1+, Opera 7+,e etc.  See
 * http://www.aptana.com/reference/html/api/HTMLAnchorElement.html
 *
 * Implementation Notes for IE
 * ---------------------------
 * IE <= 10 normalizes the URL when assigned to the anchor node similar to the other
 * browsers.  However, the parsed components will not be set if the URL assigned did not specify
 * them.  (e.g. if you assign a.href = "foo", then a.protocol, a.host, etc. will be empty.)  We
 * work around that by performing the parsing in a 2nd step by taking a previously normalized
 * URL (e.g. by assigning to a.href) and assigning it a.href again.  This correctly populates the
 * properties such as protocol, hostname, port, etc.
 *
 * References:
 *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement
 *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html
 *   http://url.spec.whatwg.org/#urlutils
 *   https://github.com/angular/angular.js/pull/2902
 *   http://james.padolsey.com/javascript/parsing-urls-with-the-dom/
 *
 * @kind function
 * @param {string} url The URL to be parsed.
 * @description Normalizes and parses a URL.
 * @returns {object} Returns the normalized URL as a dictionary.
 *
 *   | member name   | Description    |
 *   |---------------|----------------|
 *   | href          | A normalized version of the provided URL if it was not an absolute URL |
 *   | protocol      | The protocol including the trailing colon                              |
 *   | host          | The host and port (if the port is non-default) of the normalizedUrl    |
 *   | search        | The search params, minus the question mark                             |
 *   | hash          | The hash string, minus the hash symbol
 *   | hostname      | The hostname
 *   | port          | The port, without ":"
 *   | pathname      | The pathname, beginning with "/"
 *
 */
function urlResolve(url) {
  var href = url;

  if (msie) {
    // Normalize before parse.  Refer Implementation Notes on why this is
    // done in two steps on IE.
    urlParsingNode.setAttribute('href', href);
    href = urlParsingNode.href;
  }

  urlParsingNode.setAttribute('href', href);

  // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
  return {
    href: urlParsingNode.href,
    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
    host: urlParsingNode.host,
    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
    hostname: urlParsingNode.hostname,
    port: urlParsingNode.port,
    pathname: (urlParsingNode.pathname.charAt(0) === '/')
      ? urlParsingNode.pathname
      : '/' + urlParsingNode.pathname
  };
}

/**
 * Parse a request URL and determine whether this is a same-origin request as the application document.
 *
 * @param {string|object} requestUrl The url of the request as a string that will be resolved
 * or a parsed URL object.
 * @returns {boolean} Whether the request is for the same origin as the application document.
 */
function urlIsSameOrigin(requestUrl) {
  var parsed = (isString(requestUrl)) ? urlResolve(requestUrl) : requestUrl;
  return (parsed.protocol === originUrl.protocol &&
          parsed.host === originUrl.host);
}

/**
 * @ngdoc service
 * @name $window
 * @this
 *
 * @description
 * A reference to the browser's `window` object. While `window`
 * is globally available in JavaScript, it causes testability problems, because
 * it is a global variable. In angular we always refer to it through the
 * `$window` service, so it may be overridden, removed or mocked for testing.
 *
 * Expressions, like the one defined for the `ngClick` directive in the example
 * below, are evaluated with respect to the current scope.  Therefore, there is
 * no risk of inadvertently coding in a dependency on a global value in such an
 * expression.
 *
 * @example
   <example module="windowExample" name="window-service">
     <file name="index.html">
       <script>
         angular.module('windowExample', [])
           .controller('ExampleController', ['$scope', '$window', function($scope, $window) {
             $scope.greeting = 'Hello, World!';
             $scope.doGreeting = function(greeting) {
               $window.alert(greeting);
             };
           }]);
       </script>
       <div ng-controller="ExampleController">
         <input type="text" ng-model="greeting" aria-label="greeting" />
         <button ng-click="doGreeting(greeting)">ALERT</button>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
      it('should display the greeting in the input box', function() {
       element(by.model('greeting')).sendKeys('Hello, E2E Tests');
       // If we click the button it will block the test runner
       // element(':button').click();
      });
     </file>
   </example>
 */
function $WindowProvider() {
  this.$get = valueFn(window);
}

/**
 * @name $$cookieReader
 * @requires $document
 *
 * @description
 * This is a private service for reading cookies used by $http and ngCookies
 *
 * @return {Object} a key/value map of the current cookies
 */
function $$CookieReader($document) {
  var rawDocument = $document[0] || {};
  var lastCookies = {};
  var lastCookieString = '';

  function safeGetCookie(rawDocument) {
    try {
      return rawDocument.cookie || '';
    } catch (e) {
      return '';
    }
  }

  function safeDecodeURIComponent(str) {
    try {
      return decodeURIComponent(str);
    } catch (e) {
      return str;
    }
  }

  return function() {
    var cookieArray, cookie, i, index, name;
    var currentCookieString = safeGetCookie(rawDocument);

    if (currentCookieString !== lastCookieString) {
      lastCookieString = currentCookieString;
      cookieArray = lastCookieString.split('; ');
      lastCookies = {};

      for (i = 0; i < cookieArray.length; i++) {
        cookie = cookieArray[i];
        index = cookie.indexOf('=');
        if (index > 0) { //ignore nameless cookies
          name = safeDecodeURIComponent(cookie.substring(0, index));
          // the first value that is seen for a cookie is the most
          // specific one.  values for the same cookie name that
          // follow are for less specific paths.
          if (isUndefined(lastCookies[name])) {
            lastCookies[name] = safeDecodeURIComponent(cookie.substring(index + 1));
          }
        }
      }
    }
    return lastCookies;
  };
}

$$CookieReader.$inject = ['$document'];

/** @this */
function $$CookieReaderProvider() {
  this.$get = $$CookieReader;
}

/* global currencyFilter: true,
 dateFilter: true,
 filterFilter: true,
 jsonFilter: true,
 limitToFilter: true,
 lowercaseFilter: true,
 numberFilter: true,
 orderByFilter: true,
 uppercaseFilter: true,
 */

/**
 * @ngdoc provider
 * @name $filterProvider
 * @description
 *
 * Filters are just functions which transform input to an output. However filters need to be
 * Dependency Injected. To achieve this a filter definition consists of a factory function which is
 * annotated with dependencies and is responsible for creating a filter function.
 *
 * <div class="alert alert-warning">
 * **Note:** Filter names must be valid angular {@link expression} identifiers, such as `uppercase` or `orderBy`.
 * Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace
 * your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores
 * (`myapp_subsection_filterx`).
 * </div>
 *
 * ```js
 *   // Filter registration
 *   function MyModule($provide, $filterProvider) {
 *     // create a service to demonstrate injection (not always needed)
 *     $provide.value('greet', function(name){
 *       return 'Hello ' + name + '!';
 *     });
 *
 *     // register a filter factory which uses the
 *     // greet service to demonstrate DI.
 *     $filterProvider.register('greet', function(greet){
 *       // return the filter function which uses the greet service
 *       // to generate salutation
 *       return function(text) {
 *         // filters need to be forgiving so check input validity
 *         return text && greet(text) || text;
 *       };
 *     });
 *   }
 * ```
 *
 * The filter function is registered with the `$injector` under the filter name suffix with
 * `Filter`.
 *
 * ```js
 *   it('should be the same instance', inject(
 *     function($filterProvider) {
 *       $filterProvider.register('reverse', function(){
 *         return ...;
 *       });
 *     },
 *     function($filter, reverseFilter) {
 *       expect($filter('reverse')).toBe(reverseFilter);
 *     });
 * ```
 *
 *
 * For more information about how angular filters work, and how to create your own filters, see
 * {@link guide/filter Filters} in the Angular Developer Guide.
 */

/**
 * @ngdoc service
 * @name $filter
 * @kind function
 * @description
 * Filters are used for formatting data displayed to the user.
 *
 * They can be used in view templates, controllers or services.Angular comes
 * with a collection of [built-in filters](api/ng/filter), but it is easy to
 * define your own as well.
 *
 * The general syntax in templates is as follows:
 *
 * ```html
 * {{ expression [| filter_name[:parameter_value] ... ] }}
 * ```
 *
 * @param {String} name Name of the filter function to retrieve
 * @return {Function} the filter function
 * @example
   <example name="$filter" module="filterExample">
     <file name="index.html">
       <div ng-controller="MainCtrl">
        <h3>{{ originalText }}</h3>
        <h3>{{ filteredText }}</h3>
       </div>
     </file>

     <file name="script.js">
      angular.module('filterExample', [])
      .controller('MainCtrl', function($scope, $filter) {
        $scope.originalText = 'hello';
        $scope.filteredText = $filter('uppercase')($scope.originalText);
      });
     </file>
   </example>
  */
$FilterProvider.$inject = ['$provide'];
/** @this */
function $FilterProvider($provide) {
  var suffix = 'Filter';

  /**
   * @ngdoc method
   * @name $filterProvider#register
   * @param {string|Object} name Name of the filter function, or an object map of filters where
   *    the keys are the filter names and the values are the filter factories.
   *
   *    <div class="alert alert-warning">
   *    **Note:** Filter names must be valid angular {@link expression} identifiers, such as `uppercase` or `orderBy`.
   *    Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace
   *    your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores
   *    (`myapp_subsection_filterx`).
   *    </div>
    * @param {Function} factory If the first argument was a string, a factory function for the filter to be registered.
   * @returns {Object} Registered filter instance, or if a map of filters was provided then a map
   *    of the registered filter instances.
   */
  function register(name, factory) {
    if (isObject(name)) {
      var filters = {};
      forEach(name, function(filter, key) {
        filters[key] = register(key, filter);
      });
      return filters;
    } else {
      return $provide.factory(name + suffix, factory);
    }
  }
  this.register = register;

  this.$get = ['$injector', function($injector) {
    return function(name) {
      return $injector.get(name + suffix);
    };
  }];

  ////////////////////////////////////////

  /* global
    currencyFilter: false,
    dateFilter: false,
    filterFilter: false,
    jsonFilter: false,
    limitToFilter: false,
    lowercaseFilter: false,
    numberFilter: false,
    orderByFilter: false,
    uppercaseFilter: false
  */

  register('currency', currencyFilter);
  register('date', dateFilter);
  register('filter', filterFilter);
  register('json', jsonFilter);
  register('limitTo', limitToFilter);
  register('lowercase', lowercaseFilter);
  register('number', numberFilter);
  register('orderBy', orderByFilter);
  register('uppercase', uppercaseFilter);
}

/**
 * @ngdoc filter
 * @name filter
 * @kind function
 *
 * @description
 * Selects a subset of items from `array` and returns it as a new array.
 *
 * @param {Array} array The source array.
 * @param {string|Object|function()} expression The predicate to be used for selecting items from
 *   `array`.
 *
 *   Can be one of:
 *
 *   - `string`: The string is used for matching against the contents of the `array`. All strings or
 *     objects with string properties in `array` that match this string will be returned. This also
 *     applies to nested object properties.
 *     The predicate can be negated by prefixing the string with `!`.
 *
 *   - `Object`: A pattern object can be used to filter specific properties on objects contained
 *     by `array`. For example `{name:"M", phone:"1"}` predicate will return an array of items
 *     which have property `name` containing "M" and property `phone` containing "1". A special
 *     property name (`$` by default) can be used (e.g. as in `{$: "text"}`) to accept a match
 *     against any property of the object or its nested object properties. That's equivalent to the
 *     simple substring match with a `string` as described above. The special property name can be
 *     overwritten, using the `anyPropertyKey` parameter.
 *     The predicate can be negated by prefixing the string with `!`.
 *     For example `{name: "!M"}` predicate will return an array of items which have property `name`
 *     not containing "M".
 *
 *     Note that a named property will match properties on the same level only, while the special
 *     `$` property will match properties on the same level or deeper. E.g. an array item like
 *     `{name: {first: 'John', last: 'Doe'}}` will **not** be matched by `{name: 'John'}`, but
 *     **will** be matched by `{$: 'John'}`.
 *
 *   - `function(value, index, array)`: A predicate function can be used to write arbitrary filters.
 *     The function is called for each element of the array, with the element, its index, and
 *     the entire array itself as arguments.
 *
 *     The final result is an array of those elements that the predicate returned true for.
 *
 * @param {function(actual, expected)|true|false} [comparator] Comparator which is used in
 *     determining if the expected value (from the filter expression) and actual value (from
 *     the object in the array) should be considered a match.
 *
 *   Can be one of:
 *
 *   - `function(actual, expected)`:
 *     The function will be given the object value and the predicate value to compare and
 *     should return true if both values should be considered equal.
 *
 *   - `true`: A shorthand for `function(actual, expected) { return angular.equals(actual, expected)}`.
 *     This is essentially strict comparison of expected and actual.
 *
 *   - `false`: A short hand for a function which will look for a substring match in a case
 *     insensitive way. Primitive values are converted to strings. Objects are not compared against
 *     primitives, unless they have a custom `toString` method (e.g. `Date` objects).
 *
 *
 *   Defaults to `false`.
 *
 * @param {string} [anyPropertyKey] The special property name that matches against any property.
 *     By default `$`.
 *
 * @example
   <example name="filter-filter">
     <file name="index.html">
       <div ng-init="friends = [{name:'John', phone:'555-1276'},
                                {name:'Mary', phone:'800-BIG-MARY'},
                                {name:'Mike', phone:'555-4321'},
                                {name:'Adam', phone:'555-5678'},
                                {name:'Julie', phone:'555-8765'},
                                {name:'Juliette', phone:'555-5678'}]"></div>

       <label>Search: <input ng-model="searchText"></label>
       <table id="searchTextResults">
         <tr><th>Name</th><th>Phone</th></tr>
         <tr ng-repeat="friend in friends | filter:searchText">
           <td>{{friend.name}}</td>
           <td>{{friend.phone}}</td>
         </tr>
       </table>
       <hr>
       <label>Any: <input ng-model="search.$"></label> <br>
       <label>Name only <input ng-model="search.name"></label><br>
       <label>Phone only <input ng-model="search.phone"></label><br>
       <label>Equality <input type="checkbox" ng-model="strict"></label><br>
       <table id="searchObjResults">
         <tr><th>Name</th><th>Phone</th></tr>
         <tr ng-repeat="friendObj in friends | filter:search:strict">
           <td>{{friendObj.name}}</td>
           <td>{{friendObj.phone}}</td>
         </tr>
       </table>
     </file>
     <file name="protractor.js" type="protractor">
       var expectFriendNames = function(expectedNames, key) {
         element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {
           arr.forEach(function(wd, i) {
             expect(wd.getText()).toMatch(expectedNames[i]);
           });
         });
       };

       it('should search across all fields when filtering with a string', function() {
         var searchText = element(by.model('searchText'));
         searchText.clear();
         searchText.sendKeys('m');
         expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');

         searchText.clear();
         searchText.sendKeys('76');
         expectFriendNames(['John', 'Julie'], 'friend');
       });

       it('should search in specific fields when filtering with a predicate object', function() {
         var searchAny = element(by.model('search.$'));
         searchAny.clear();
         searchAny.sendKeys('i');
         expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');
       });
       it('should use a equal comparison when comparator is true', function() {
         var searchName = element(by.model('search.name'));
         var strict = element(by.model('strict'));
         searchName.clear();
         searchName.sendKeys('Julie');
         strict.click();
         expectFriendNames(['Julie'], 'friendObj');
       });
     </file>
   </example>
 */

function filterFilter() {
  return function(array, expression, comparator, anyPropertyKey) {
    if (!isArrayLike(array)) {
      if (array == null) {
        return array;
      } else {
        throw minErr('filter')('notarray', 'Expected array but received: {0}', array);
      }
    }

    anyPropertyKey = anyPropertyKey || '$';
    var expressionType = getTypeForFilter(expression);
    var predicateFn;
    var matchAgainstAnyProp;

    switch (expressionType) {
      case 'function':
        predicateFn = expression;
        break;
      case 'boolean':
      case 'null':
      case 'number':
      case 'string':
        matchAgainstAnyProp = true;
        // falls through
      case 'object':
        predicateFn = createPredicateFn(expression, comparator, anyPropertyKey, matchAgainstAnyProp);
        break;
      default:
        return array;
    }

    return Array.prototype.filter.call(array, predicateFn);
  };
}

// Helper functions for `filterFilter`
function createPredicateFn(expression, comparator, anyPropertyKey, matchAgainstAnyProp) {
  var shouldMatchPrimitives = isObject(expression) && (anyPropertyKey in expression);
  var predicateFn;

  if (comparator === true) {
    comparator = equals;
  } else if (!isFunction(comparator)) {
    comparator = function(actual, expected) {
      if (isUndefined(actual)) {
        // No substring matching against `undefined`
        return false;
      }
      if ((actual === null) || (expected === null)) {
        // No substring matching against `null`; only match against `null`
        return actual === expected;
      }
      if (isObject(expected) || (isObject(actual) && !hasCustomToString(actual))) {
        // Should not compare primitives against objects, unless they have custom `toString` method
        return false;
      }

      actual = lowercase('' + actual);
      expected = lowercase('' + expected);
      return actual.indexOf(expected) !== -1;
    };
  }

  predicateFn = function(item) {
    if (shouldMatchPrimitives && !isObject(item)) {
      return deepCompare(item, expression[anyPropertyKey], comparator, anyPropertyKey, false);
    }
    return deepCompare(item, expression, comparator, anyPropertyKey, matchAgainstAnyProp);
  };

  return predicateFn;
}

function deepCompare(actual, expected, comparator, anyPropertyKey, matchAgainstAnyProp, dontMatchWholeObject) {
  var actualType = getTypeForFilter(actual);
  var expectedType = getTypeForFilter(expected);

  if ((expectedType === 'string') && (expected.charAt(0) === '!')) {
    return !deepCompare(actual, expected.substring(1), comparator, anyPropertyKey, matchAgainstAnyProp);
  } else if (isArray(actual)) {
    // In case `actual` is an array, consider it a match
    // if ANY of it's items matches `expected`
    return actual.some(function(item) {
      return deepCompare(item, expected, comparator, anyPropertyKey, matchAgainstAnyProp);
    });
  }

  switch (actualType) {
    case 'object':
      var key;
      if (matchAgainstAnyProp) {
        for (key in actual) {
          if ((key.charAt(0) !== '$') && deepCompare(actual[key], expected, comparator, anyPropertyKey, true)) {
            return true;
          }
        }
        return dontMatchWholeObject ? false : deepCompare(actual, expected, comparator, anyPropertyKey, false);
      } else if (expectedType === 'object') {
        for (key in expected) {
          var expectedVal = expected[key];
          if (isFunction(expectedVal) || isUndefined(expectedVal)) {
            continue;
          }

          var matchAnyProperty = key === anyPropertyKey;
          var actualVal = matchAnyProperty ? actual : actual[key];
          if (!deepCompare(actualVal, expectedVal, comparator, anyPropertyKey, matchAnyProperty, matchAnyProperty)) {
            return false;
          }
        }
        return true;
      } else {
        return comparator(actual, expected);
      }
    case 'function':
      return false;
    default:
      return comparator(actual, expected);
  }
}

// Used for easily differentiating between `null` and actual `object`
function getTypeForFilter(val) {
  return (val === null) ? 'null' : typeof val;
}

var MAX_DIGITS = 22;
var DECIMAL_SEP = '.';
var ZERO_CHAR = '0';

/**
 * @ngdoc filter
 * @name currency
 * @kind function
 *
 * @description
 * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default
 * symbol for current locale is used.
 *
 * @param {number} amount Input to filter.
 * @param {string=} symbol Currency symbol or identifier to be displayed.
 * @param {number=} fractionSize Number of decimal places to round the amount to, defaults to default max fraction size for current locale
 * @returns {string} Formatted number.
 *
 *
 * @example
   <example module="currencyExample" name="currency-filter">
     <file name="index.html">
       <script>
         angular.module('currencyExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.amount = 1234.56;
           }]);
       </script>
       <div ng-controller="ExampleController">
         <input type="number" ng-model="amount" aria-label="amount"> <br>
         default currency symbol ($): <span id="currency-default">{{amount | currency}}</span><br>
         custom currency identifier (USD$): <span id="currency-custom">{{amount | currency:"USD$"}}</span>
         no fractions (0): <span id="currency-no-fractions">{{amount | currency:"USD$":0}}</span>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should init with 1234.56', function() {
         expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');
         expect(element(by.id('currency-custom')).getText()).toBe('USD$1,234.56');
         expect(element(by.id('currency-no-fractions')).getText()).toBe('USD$1,235');
       });
       it('should update', function() {
         if (browser.params.browser === 'safari') {
           // Safari does not understand the minus key. See
           // https://github.com/angular/protractor/issues/481
           return;
         }
         element(by.model('amount')).clear();
         element(by.model('amount')).sendKeys('-1234');
         expect(element(by.id('currency-default')).getText()).toBe('-$1,234.00');
         expect(element(by.id('currency-custom')).getText()).toBe('-USD$1,234.00');
         expect(element(by.id('currency-no-fractions')).getText()).toBe('-USD$1,234');
       });
     </file>
   </example>
 */
currencyFilter.$inject = ['$locale'];
function currencyFilter($locale) {
  var formats = $locale.NUMBER_FORMATS;
  return function(amount, currencySymbol, fractionSize) {
    if (isUndefined(currencySymbol)) {
      currencySymbol = formats.CURRENCY_SYM;
    }

    if (isUndefined(fractionSize)) {
      fractionSize = formats.PATTERNS[1].maxFrac;
    }

    // if null or undefined pass it through
    return (amount == null)
        ? amount
        : formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, fractionSize).
            replace(/\u00A4/g, currencySymbol);
  };
}

/**
 * @ngdoc filter
 * @name number
 * @kind function
 *
 * @description
 * Formats a number as text.
 *
 * If the input is null or undefined, it will just be returned.
 * If the input is infinite (Infinity or -Infinity), the Infinity symbol '∞' or '-∞' is returned, respectively.
 * If the input is not a number an empty string is returned.
 *
 *
 * @param {number|string} number Number to format.
 * @param {(number|string)=} fractionSize Number of decimal places to round the number to.
 * If this is not provided then the fraction size is computed from the current locale's number
 * formatting pattern. In the case of the default locale, it will be 3.
 * @returns {string} Number rounded to `fractionSize` appropriately formatted based on the current
 *                   locale (e.g., in the en_US locale it will have "." as the decimal separator and
 *                   include "," group separators after each third digit).
 *
 * @example
   <example module="numberFilterExample" name="number-filter">
     <file name="index.html">
       <script>
         angular.module('numberFilterExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.val = 1234.56789;
           }]);
       </script>
       <div ng-controller="ExampleController">
         <label>Enter number: <input ng-model='val'></label><br>
         Default formatting: <span id='number-default'>{{val | number}}</span><br>
         No fractions: <span>{{val | number:0}}</span><br>
         Negative number: <span>{{-val | number:4}}</span>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should format numbers', function() {
         expect(element(by.id('number-default')).getText()).toBe('1,234.568');
         expect(element(by.binding('val | number:0')).getText()).toBe('1,235');
         expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');
       });

       it('should update', function() {
         element(by.model('val')).clear();
         element(by.model('val')).sendKeys('3374.333');
         expect(element(by.id('number-default')).getText()).toBe('3,374.333');
         expect(element(by.binding('val | number:0')).getText()).toBe('3,374');
         expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');
      });
     </file>
   </example>
 */
numberFilter.$inject = ['$locale'];
function numberFilter($locale) {
  var formats = $locale.NUMBER_FORMATS;
  return function(number, fractionSize) {

    // if null or undefined pass it through
    return (number == null)
        ? number
        : formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,
                       fractionSize);
  };
}

/**
 * Parse a number (as a string) into three components that can be used
 * for formatting the number.
 *
 * (Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/)
 *
 * @param  {string} numStr The number to parse
 * @return {object} An object describing this number, containing the following keys:
 *  - d : an array of digits containing leading zeros as necessary
 *  - i : the number of the digits in `d` that are to the left of the decimal point
 *  - e : the exponent for numbers that would need more than `MAX_DIGITS` digits in `d`
 *
 */
function parse(numStr) {
  var exponent = 0, digits, numberOfIntegerDigits;
  var i, j, zeros;

  // Decimal point?
  if ((numberOfIntegerDigits = numStr.indexOf(DECIMAL_SEP)) > -1) {
    numStr = numStr.replace(DECIMAL_SEP, '');
  }

  // Exponential form?
  if ((i = numStr.search(/e/i)) > 0) {
    // Work out the exponent.
    if (numberOfIntegerDigits < 0) numberOfIntegerDigits = i;
    numberOfIntegerDigits += +numStr.slice(i + 1);
    numStr = numStr.substring(0, i);
  } else if (numberOfIntegerDigits < 0) {
    // There was no decimal point or exponent so it is an integer.
    numberOfIntegerDigits = numStr.length;
  }

  // Count the number of leading zeros.
  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */ }

  if (i === (zeros = numStr.length)) {
    // The digits are all zero.
    digits = [0];
    numberOfIntegerDigits = 1;
  } else {
    // Count the number of trailing zeros
    zeros--;
    while (numStr.charAt(zeros) === ZERO_CHAR) zeros--;

    // Trailing zeros are insignificant so ignore them
    numberOfIntegerDigits -= i;
    digits = [];
    // Convert string to array of digits without leading/trailing zeros.
    for (j = 0; i <= zeros; i++, j++) {
      digits[j] = +numStr.charAt(i);
    }
  }

  // If the number overflows the maximum allowed digits then use an exponent.
  if (numberOfIntegerDigits > MAX_DIGITS) {
    digits = digits.splice(0, MAX_DIGITS - 1);
    exponent = numberOfIntegerDigits - 1;
    numberOfIntegerDigits = 1;
  }

  return { d: digits, e: exponent, i: numberOfIntegerDigits };
}

/**
 * Round the parsed number to the specified number of decimal places
 * This function changed the parsedNumber in-place
 */
function roundNumber(parsedNumber, fractionSize, minFrac, maxFrac) {
    var digits = parsedNumber.d;
    var fractionLen = digits.length - parsedNumber.i;

    // determine fractionSize if it is not specified; `+fractionSize` converts it to a number
    fractionSize = (isUndefined(fractionSize)) ? Math.min(Math.max(minFrac, fractionLen), maxFrac) : +fractionSize;

    // The index of the digit to where rounding is to occur
    var roundAt = fractionSize + parsedNumber.i;
    var digit = digits[roundAt];

    if (roundAt > 0) {
      // Drop fractional digits beyond `roundAt`
      digits.splice(Math.max(parsedNumber.i, roundAt));

      // Set non-fractional digits beyond `roundAt` to 0
      for (var j = roundAt; j < digits.length; j++) {
        digits[j] = 0;
      }
    } else {
      // We rounded to zero so reset the parsedNumber
      fractionLen = Math.max(0, fractionLen);
      parsedNumber.i = 1;
      digits.length = Math.max(1, roundAt = fractionSize + 1);
      digits[0] = 0;
      for (var i = 1; i < roundAt; i++) digits[i] = 0;
    }

    if (digit >= 5) {
      if (roundAt - 1 < 0) {
        for (var k = 0; k > roundAt; k--) {
          digits.unshift(0);
          parsedNumber.i++;
        }
        digits.unshift(1);
        parsedNumber.i++;
      } else {
        digits[roundAt - 1]++;
      }
    }

    // Pad out with zeros to get the required fraction length
    for (; fractionLen < Math.max(0, fractionSize); fractionLen++) digits.push(0);


    // Do any carrying, e.g. a digit was rounded up to 10
    var carry = digits.reduceRight(function(carry, d, i, digits) {
      d = d + carry;
      digits[i] = d % 10;
      return Math.floor(d / 10);
    }, 0);
    if (carry) {
      digits.unshift(carry);
      parsedNumber.i++;
    }
}

/**
 * Format a number into a string
 * @param  {number} number       The number to format
 * @param  {{
 *           minFrac, // the minimum number of digits required in the fraction part of the number
 *           maxFrac, // the maximum number of digits required in the fraction part of the number
 *           gSize,   // number of digits in each group of separated digits
 *           lgSize,  // number of digits in the last group of digits before the decimal separator
 *           negPre,  // the string to go in front of a negative number (e.g. `-` or `(`))
 *           posPre,  // the string to go in front of a positive number
 *           negSuf,  // the string to go after a negative number (e.g. `)`)
 *           posSuf   // the string to go after a positive number
 *         }} pattern
 * @param  {string} groupSep     The string to separate groups of number (e.g. `,`)
 * @param  {string} decimalSep   The string to act as the decimal separator (e.g. `.`)
 * @param  {[type]} fractionSize The size of the fractional part of the number
 * @return {string}              The number formatted as a string
 */
function formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {

  if (!(isString(number) || isNumber(number)) || isNaN(number)) return '';

  var isInfinity = !isFinite(number);
  var isZero = false;
  var numStr = Math.abs(number) + '',
      formattedText = '',
      parsedNumber;

  if (isInfinity) {
    formattedText = '\u221e';
  } else {
    parsedNumber = parse(numStr);

    roundNumber(parsedNumber, fractionSize, pattern.minFrac, pattern.maxFrac);

    var digits = parsedNumber.d;
    var integerLen = parsedNumber.i;
    var exponent = parsedNumber.e;
    var decimals = [];
    isZero = digits.reduce(function(isZero, d) { return isZero && !d; }, true);

    // pad zeros for small numbers
    while (integerLen < 0) {
      digits.unshift(0);
      integerLen++;
    }

    // extract decimals digits
    if (integerLen > 0) {
      decimals = digits.splice(integerLen, digits.length);
    } else {
      decimals = digits;
      digits = [0];
    }

    // format the integer digits with grouping separators
    var groups = [];
    if (digits.length >= pattern.lgSize) {
      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));
    }
    while (digits.length > pattern.gSize) {
      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));
    }
    if (digits.length) {
      groups.unshift(digits.join(''));
    }
    formattedText = groups.join(groupSep);

    // append the decimal digits
    if (decimals.length) {
      formattedText += decimalSep + decimals.join('');
    }

    if (exponent) {
      formattedText += 'e+' + exponent;
    }
  }
  if (number < 0 && !isZero) {
    return pattern.negPre + formattedText + pattern.negSuf;
  } else {
    return pattern.posPre + formattedText + pattern.posSuf;
  }
}

function padNumber(num, digits, trim, negWrap) {
  var neg = '';
  if (num < 0 || (negWrap && num <= 0)) {
    if (negWrap) {
      num = -num + 1;
    } else {
      num = -num;
      neg = '-';
    }
  }
  num = '' + num;
  while (num.length < digits) num = ZERO_CHAR + num;
  if (trim) {
    num = num.substr(num.length - digits);
  }
  return neg + num;
}


function dateGetter(name, size, offset, trim, negWrap) {
  offset = offset || 0;
  return function(date) {
    var value = date['get' + name]();
    if (offset > 0 || value > -offset) {
      value += offset;
    }
    if (value === 0 && offset === -12) value = 12;
    return padNumber(value, size, trim, negWrap);
  };
}

function dateStrGetter(name, shortForm, standAlone) {
  return function(date, formats) {
    var value = date['get' + name]();
    var propPrefix = (standAlone ? 'STANDALONE' : '') + (shortForm ? 'SHORT' : '');
    var get = uppercase(propPrefix + name);

    return formats[get][value];
  };
}

function timeZoneGetter(date, formats, offset) {
  var zone = -1 * offset;
  var paddedZone = (zone >= 0) ? '+' : '';

  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +
                padNumber(Math.abs(zone % 60), 2);

  return paddedZone;
}

function getFirstThursdayOfYear(year) {
    // 0 = index of January
    var dayOfWeekOnFirst = (new Date(year, 0, 1)).getDay();
    // 4 = index of Thursday (+1 to account for 1st = 5)
    // 11 = index of *next* Thursday (+1 account for 1st = 12)
    return new Date(year, 0, ((dayOfWeekOnFirst <= 4) ? 5 : 12) - dayOfWeekOnFirst);
}

function getThursdayThisWeek(datetime) {
    return new Date(datetime.getFullYear(), datetime.getMonth(),
      // 4 = index of Thursday
      datetime.getDate() + (4 - datetime.getDay()));
}

function weekGetter(size) {
   return function(date) {
      var firstThurs = getFirstThursdayOfYear(date.getFullYear()),
         thisThurs = getThursdayThisWeek(date);

      var diff = +thisThurs - +firstThurs,
         result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week

      return padNumber(result, size);
   };
}

function ampmGetter(date, formats) {
  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];
}

function eraGetter(date, formats) {
  return date.getFullYear() <= 0 ? formats.ERAS[0] : formats.ERAS[1];
}

function longEraGetter(date, formats) {
  return date.getFullYear() <= 0 ? formats.ERANAMES[0] : formats.ERANAMES[1];
}

var DATE_FORMATS = {
  yyyy: dateGetter('FullYear', 4, 0, false, true),
    yy: dateGetter('FullYear', 2, 0, true, true),
     y: dateGetter('FullYear', 1, 0, false, true),
  MMMM: dateStrGetter('Month'),
   MMM: dateStrGetter('Month', true),
    MM: dateGetter('Month', 2, 1),
     M: dateGetter('Month', 1, 1),
  LLLL: dateStrGetter('Month', false, true),
    dd: dateGetter('Date', 2),
     d: dateGetter('Date', 1),
    HH: dateGetter('Hours', 2),
     H: dateGetter('Hours', 1),
    hh: dateGetter('Hours', 2, -12),
     h: dateGetter('Hours', 1, -12),
    mm: dateGetter('Minutes', 2),
     m: dateGetter('Minutes', 1),
    ss: dateGetter('Seconds', 2),
     s: dateGetter('Seconds', 1),
     // while ISO 8601 requires fractions to be prefixed with `.` or `,`
     // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions
   sss: dateGetter('Milliseconds', 3),
  EEEE: dateStrGetter('Day'),
   EEE: dateStrGetter('Day', true),
     a: ampmGetter,
     Z: timeZoneGetter,
    ww: weekGetter(2),
     w: weekGetter(1),
     G: eraGetter,
     GG: eraGetter,
     GGG: eraGetter,
     GGGG: longEraGetter
};

var DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,
    NUMBER_STRING = /^-?\d+$/;

/**
 * @ngdoc filter
 * @name date
 * @kind function
 *
 * @description
 *   Formats `date` to a string based on the requested `format`.
 *
 *   `format` string can be composed of the following elements:
 *
 *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)
 *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)
 *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)
 *   * `'MMMM'`: Month in year (January-December)
 *   * `'MMM'`: Month in year (Jan-Dec)
 *   * `'MM'`: Month in year, padded (01-12)
 *   * `'M'`: Month in year (1-12)
 *   * `'LLLL'`: Stand-alone month in year (January-December)
 *   * `'dd'`: Day in month, padded (01-31)
 *   * `'d'`: Day in month (1-31)
 *   * `'EEEE'`: Day in Week,(Sunday-Saturday)
 *   * `'EEE'`: Day in Week, (Sun-Sat)
 *   * `'HH'`: Hour in day, padded (00-23)
 *   * `'H'`: Hour in day (0-23)
 *   * `'hh'`: Hour in AM/PM, padded (01-12)
 *   * `'h'`: Hour in AM/PM, (1-12)
 *   * `'mm'`: Minute in hour, padded (00-59)
 *   * `'m'`: Minute in hour (0-59)
 *   * `'ss'`: Second in minute, padded (00-59)
 *   * `'s'`: Second in minute (0-59)
 *   * `'sss'`: Millisecond in second, padded (000-999)
 *   * `'a'`: AM/PM marker
 *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)
 *   * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year
 *   * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year
 *   * `'G'`, `'GG'`, `'GGG'`: The abbreviated form of the era string (e.g. 'AD')
 *   * `'GGGG'`: The long form of the era string (e.g. 'Anno Domini')
 *
 *   `format` string can also be one of the following predefined
 *   {@link guide/i18n localizable formats}:
 *
 *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale
 *     (e.g. Sep 3, 2010 12:05:08 PM)
 *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)
 *   * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale
 *     (e.g. Friday, September 3, 2010)
 *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)
 *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)
 *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)
 *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)
 *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)
 *
 *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.
 *   `"h 'in the morning'"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence
 *   (e.g. `"h 'o''clock'"`).
 *
 * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or
 *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its
 *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is
 *    specified in the string input, the time is considered to be in the local timezone.
 * @param {string=} format Formatting rules (see Description). If not specified,
 *    `mediumDate` is used.
 * @param {string=} timezone Timezone to be used for formatting. It understands UTC/GMT and the
 *    continental US time zone abbreviations, but for general use, use a time zone offset, for
 *    example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)
 *    If not specified, the timezone of the browser will be used.
 * @returns {string} Formatted string or the input if input is not recognized as date/millis.
 *
 * @example
   <example name="filter-date">
     <file name="index.html">
       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:
           <span>{{1288323623006 | date:'medium'}}</span><br>
       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:
          <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>
       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:
          <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>
       <span ng-non-bindable>{{1288323623006 | date:"MM/dd/yyyy 'at' h:mma"}}</span>:
          <span>{{'1288323623006' | date:"MM/dd/yyyy 'at' h:mma"}}</span><br>
     </file>
     <file name="protractor.js" type="protractor">
       it('should format date', function() {
         expect(element(by.binding("1288323623006 | date:'medium'")).getText()).
            toMatch(/Oct 2\d, 2010 \d{1,2}:\d{2}:\d{2} (AM|PM)/);
         expect(element(by.binding("1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'")).getText()).
            toMatch(/2010-10-2\d \d{2}:\d{2}:\d{2} (-|\+)?\d{4}/);
         expect(element(by.binding("'1288323623006' | date:'MM/dd/yyyy @ h:mma'")).getText()).
            toMatch(/10\/2\d\/2010 @ \d{1,2}:\d{2}(AM|PM)/);
         expect(element(by.binding("'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"")).getText()).
            toMatch(/10\/2\d\/2010 at \d{1,2}:\d{2}(AM|PM)/);
       });
     </file>
   </example>
 */
dateFilter.$inject = ['$locale'];
function dateFilter($locale) {


  var R_ISO8601_STR = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
                     // 1        2       3         4          5          6          7          8  9     10      11
  function jsonStringToDate(string) {
    var match;
    if ((match = string.match(R_ISO8601_STR))) {
      var date = new Date(0),
          tzHour = 0,
          tzMin  = 0,
          dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,
          timeSetter = match[8] ? date.setUTCHours : date.setHours;

      if (match[9]) {
        tzHour = toInt(match[9] + match[10]);
        tzMin = toInt(match[9] + match[11]);
      }
      dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));
      var h = toInt(match[4] || 0) - tzHour;
      var m = toInt(match[5] || 0) - tzMin;
      var s = toInt(match[6] || 0);
      var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);
      timeSetter.call(date, h, m, s, ms);
      return date;
    }
    return string;
  }


  return function(date, format, timezone) {
    var text = '',
        parts = [],
        fn, match;

    format = format || 'mediumDate';
    format = $locale.DATETIME_FORMATS[format] || format;
    if (isString(date)) {
      date = NUMBER_STRING.test(date) ? toInt(date) : jsonStringToDate(date);
    }

    if (isNumber(date)) {
      date = new Date(date);
    }

    if (!isDate(date) || !isFinite(date.getTime())) {
      return date;
    }

    while (format) {
      match = DATE_FORMATS_SPLIT.exec(format);
      if (match) {
        parts = concat(parts, match, 1);
        format = parts.pop();
      } else {
        parts.push(format);
        format = null;
      }
    }

    var dateTimezoneOffset = date.getTimezoneOffset();
    if (timezone) {
      dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
      date = convertTimezoneToLocal(date, timezone, true);
    }
    forEach(parts, function(value) {
      fn = DATE_FORMATS[value];
      text += fn ? fn(date, $locale.DATETIME_FORMATS, dateTimezoneOffset)
                 : value === '\'\'' ? '\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\'');
    });

    return text;
  };
}


/**
 * @ngdoc filter
 * @name json
 * @kind function
 *
 * @description
 *   Allows you to convert a JavaScript object into JSON string.
 *
 *   This filter is mostly useful for debugging. When using the double curly {{value}} notation
 *   the binding is automatically converted to JSON.
 *
 * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.
 * @param {number=} spacing The number of spaces to use per indentation, defaults to 2.
 * @returns {string} JSON string.
 *
 *
 * @example
   <example name="filter-json">
     <file name="index.html">
       <pre id="default-spacing">{{ {'name':'value'} | json }}</pre>
       <pre id="custom-spacing">{{ {'name':'value'} | json:4 }}</pre>
     </file>
     <file name="protractor.js" type="protractor">
       it('should jsonify filtered objects', function() {
         expect(element(by.id('default-spacing')).getText()).toMatch(/\{\n {2}"name": ?"value"\n}/);
         expect(element(by.id('custom-spacing')).getText()).toMatch(/\{\n {4}"name": ?"value"\n}/);
       });
     </file>
   </example>
 *
 */
function jsonFilter() {
  return function(object, spacing) {
    if (isUndefined(spacing)) {
        spacing = 2;
    }
    return toJson(object, spacing);
  };
}


/**
 * @ngdoc filter
 * @name lowercase
 * @kind function
 * @description
 * Converts string to lowercase.
 * @see angular.lowercase
 */
var lowercaseFilter = valueFn(lowercase);


/**
 * @ngdoc filter
 * @name uppercase
 * @kind function
 * @description
 * Converts string to uppercase.
 * @see angular.uppercase
 */
var uppercaseFilter = valueFn(uppercase);

/**
 * @ngdoc filter
 * @name limitTo
 * @kind function
 *
 * @description
 * Creates a new array or string containing only a specified number of elements. The elements are
 * taken from either the beginning or the end of the source array, string or number, as specified by
 * the value and sign (positive or negative) of `limit`. Other array-like objects are also supported
 * (e.g. array subclasses, NodeLists, jqLite/jQuery collections etc). If a number is used as input,
 * it is converted to a string.
 *
 * @param {Array|ArrayLike|string|number} input - Array/array-like, string or number to be limited.
 * @param {string|number} limit - The length of the returned array or string. If the `limit` number
 *     is positive, `limit` number of items from the beginning of the source array/string are copied.
 *     If the number is negative, `limit` number  of items from the end of the source array/string
 *     are copied. The `limit` will be trimmed if it exceeds `array.length`. If `limit` is undefined,
 *     the input will be returned unchanged.
 * @param {(string|number)=} begin - Index at which to begin limitation. As a negative index,
 *     `begin` indicates an offset from the end of `input`. Defaults to `0`.
 * @returns {Array|string} A new sub-array or substring of length `limit` or less if the input had
 *     less than `limit` elements.
 *
 * @example
   <example module="limitToExample" name="limit-to-filter">
     <file name="index.html">
       <script>
         angular.module('limitToExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.numbers = [1,2,3,4,5,6,7,8,9];
             $scope.letters = "abcdefghi";
             $scope.longNumber = 2345432342;
             $scope.numLimit = 3;
             $scope.letterLimit = 3;
             $scope.longNumberLimit = 3;
           }]);
       </script>
       <div ng-controller="ExampleController">
         <label>
            Limit {{numbers}} to:
            <input type="number" step="1" ng-model="numLimit">
         </label>
         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>
         <label>
            Limit {{letters}} to:
            <input type="number" step="1" ng-model="letterLimit">
         </label>
         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>
         <label>
            Limit {{longNumber}} to:
            <input type="number" step="1" ng-model="longNumberLimit">
         </label>
         <p>Output long number: {{ longNumber | limitTo:longNumberLimit }}</p>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       var numLimitInput = element(by.model('numLimit'));
       var letterLimitInput = element(by.model('letterLimit'));
       var longNumberLimitInput = element(by.model('longNumberLimit'));
       var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));
       var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));
       var limitedLongNumber = element(by.binding('longNumber | limitTo:longNumberLimit'));

       it('should limit the number array to first three items', function() {
         expect(numLimitInput.getAttribute('value')).toBe('3');
         expect(letterLimitInput.getAttribute('value')).toBe('3');
         expect(longNumberLimitInput.getAttribute('value')).toBe('3');
         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');
         expect(limitedLetters.getText()).toEqual('Output letters: abc');
         expect(limitedLongNumber.getText()).toEqual('Output long number: 234');
       });

       // There is a bug in safari and protractor that doesn't like the minus key
       // it('should update the output when -3 is entered', function() {
       //   numLimitInput.clear();
       //   numLimitInput.sendKeys('-3');
       //   letterLimitInput.clear();
       //   letterLimitInput.sendKeys('-3');
       //   longNumberLimitInput.clear();
       //   longNumberLimitInput.sendKeys('-3');
       //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');
       //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');
       //   expect(limitedLongNumber.getText()).toEqual('Output long number: 342');
       // });

       it('should not exceed the maximum size of input array', function() {
         numLimitInput.clear();
         numLimitInput.sendKeys('100');
         letterLimitInput.clear();
         letterLimitInput.sendKeys('100');
         longNumberLimitInput.clear();
         longNumberLimitInput.sendKeys('100');
         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');
         expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');
         expect(limitedLongNumber.getText()).toEqual('Output long number: 2345432342');
       });
     </file>
   </example>
*/
function limitToFilter() {
  return function(input, limit, begin) {
    if (Math.abs(Number(limit)) === Infinity) {
      limit = Number(limit);
    } else {
      limit = toInt(limit);
    }
    if (isNumberNaN(limit)) return input;

    if (isNumber(input)) input = input.toString();
    if (!isArrayLike(input)) return input;

    begin = (!begin || isNaN(begin)) ? 0 : toInt(begin);
    begin = (begin < 0) ? Math.max(0, input.length + begin) : begin;

    if (limit >= 0) {
      return sliceFn(input, begin, begin + limit);
    } else {
      if (begin === 0) {
        return sliceFn(input, limit, input.length);
      } else {
        return sliceFn(input, Math.max(0, begin + limit), begin);
      }
    }
  };
}

function sliceFn(input, begin, end) {
  if (isString(input)) return input.slice(begin, end);

  return slice.call(input, begin, end);
}

/**
 * @ngdoc filter
 * @name orderBy
 * @kind function
 *
 * @description
 * Returns an array containing the items from the specified `collection`, ordered by a `comparator`
 * function based on the values computed using the `expression` predicate.
 *
 * For example, `[{id: 'foo'}, {id: 'bar'}] | orderBy:'id'` would result in
 * `[{id: 'bar'}, {id: 'foo'}]`.
 *
 * The `collection` can be an Array or array-like object (e.g. NodeList, jQuery object, TypedArray,
 * String, etc).
 *
 * The `expression` can be a single predicate, or a list of predicates each serving as a tie-breaker
 * for the preceding one. The `expression` is evaluated against each item and the output is used
 * for comparing with other items.
 *
 * You can change the sorting order by setting `reverse` to `true`. By default, items are sorted in
 * ascending order.
 *
 * The comparison is done using the `comparator` function. If none is specified, a default, built-in
 * comparator is used (see below for details - in a nutshell, it compares numbers numerically and
 * strings alphabetically).
 *
 * ### Under the hood
 *
 * Ordering the specified `collection` happens in two phases:
 *
 * 1. All items are passed through the predicate (or predicates), and the returned values are saved
 *    along with their type (`string`, `number` etc). For example, an item `{label: 'foo'}`, passed
 *    through a predicate that extracts the value of the `label` property, would be transformed to:
 *    ```
 *    {
 *      value: 'foo',
 *      type: 'string',
 *      index: ...
 *    }
 *    ```
 * 2. The comparator function is used to sort the items, based on the derived values, types and
 *    indices.
 *
 * If you use a custom comparator, it will be called with pairs of objects of the form
 * `{value: ..., type: '...', index: ...}` and is expected to return `0` if the objects are equal
 * (as far as the comparator is concerned), `-1` if the 1st one should be ranked higher than the
 * second, or `1` otherwise.
 *
 * In order to ensure that the sorting will be deterministic across platforms, if none of the
 * specified predicates can distinguish between two items, `orderBy` will automatically introduce a
 * dummy predicate that returns the item's index as `value`.
 * (If you are using a custom comparator, make sure it can handle this predicate as well.)
 *
 * Finally, in an attempt to simplify things, if a predicate returns an object as the extracted
 * value for an item, `orderBy` will try to convert that object to a primitive value, before passing
 * it to the comparator. The following rules govern the conversion:
 *
 * 1. If the object has a `valueOf()` method that returns a primitive, its return value will be
 *    used instead.<br />
 *    (If the object has a `valueOf()` method that returns another object, then the returned object
 *    will be used in subsequent steps.)
 * 2. If the object has a custom `toString()` method (i.e. not the one inherited from `Object`) that
 *    returns a primitive, its return value will be used instead.<br />
 *    (If the object has a `toString()` method that returns another object, then the returned object
 *    will be used in subsequent steps.)
 * 3. No conversion; the object itself is used.
 *
 * ### The default comparator
 *
 * The default, built-in comparator should be sufficient for most usecases. In short, it compares
 * numbers numerically, strings alphabetically (and case-insensitively), for objects falls back to
 * using their index in the original collection, and sorts values of different types by type.
 *
 * More specifically, it follows these steps to determine the relative order of items:
 *
 * 1. If the compared values are of different types, compare the types themselves alphabetically.
 * 2. If both values are of type `string`, compare them alphabetically in a case- and
 *    locale-insensitive way.
 * 3. If both values are objects, compare their indices instead.
 * 4. Otherwise, return:
 *    -  `0`, if the values are equal (by strict equality comparison, i.e. using `===`).
 *    - `-1`, if the 1st value is "less than" the 2nd value (compared using the `<` operator).
 *    -  `1`, otherwise.
 *
 * **Note:** If you notice numbers not being sorted as expected, make sure they are actually being
 *           saved as numbers and not strings.
 * **Note:** For the purpose of sorting, `null` values are treated as the string `'null'` (i.e.
 *           `type: 'string'`, `value: 'null'`). This may cause unexpected sort order relative to
 *           other values.
 *
 * @param {Array|ArrayLike} collection - The collection (array or array-like object) to sort.
 * @param {(Function|string|Array.<Function|string>)=} expression - A predicate (or list of
 *    predicates) to be used by the comparator to determine the order of elements.
 *
 *    Can be one of:
 *
 *    - `Function`: A getter function. This function will be called with each item as argument and
 *      the return value will be used for sorting.
 *    - `string`: An Angular expression. This expression will be evaluated against each item and the
 *      result will be used for sorting. For example, use `'label'` to sort by a property called
 *      `label` or `'label.substring(0, 3)'` to sort by the first 3 characters of the `label`
 *      property.<br />
 *      (The result of a constant expression is interpreted as a property name to be used for
 *      comparison. For example, use `'"special name"'` (note the extra pair of quotes) to sort by a
 *      property called `special name`.)<br />
 *      An expression can be optionally prefixed with `+` or `-` to control the sorting direction,
 *      ascending or descending. For example, `'+label'` or `'-label'`. If no property is provided,
 *      (e.g. `'+'` or `'-'`), the collection element itself is used in comparisons.
 *    - `Array`: An array of function and/or string predicates. If a predicate cannot determine the
 *      relative order of two items, the next predicate is used as a tie-breaker.
 *
 * **Note:** If the predicate is missing or empty then it defaults to `'+'`.
 *
 * @param {boolean=} reverse - If `true`, reverse the sorting order.
 * @param {(Function)=} comparator - The comparator function used to determine the relative order of
 *    value pairs. If omitted, the built-in comparator will be used.
 *
 * @returns {Array} - The sorted array.
 *
 *
 * @example
 * ### Ordering a table with `ngRepeat`
 *
 * The example below demonstrates a simple {@link ngRepeat ngRepeat}, where the data is sorted by
 * age in descending order (expression is set to `'-age'`). The `comparator` is not set, which means
 * it defaults to the built-in comparator.
 *
   <example name="orderBy-static" module="orderByExample1">
     <file name="index.html">
       <div ng-controller="ExampleController">
         <table class="friends">
           <tr>
             <th>Name</th>
             <th>Phone Number</th>
             <th>Age</th>
           </tr>
           <tr ng-repeat="friend in friends | orderBy:'-age'">
             <td>{{friend.name}}</td>
             <td>{{friend.phone}}</td>
             <td>{{friend.age}}</td>
           </tr>
         </table>
       </div>
     </file>
     <file name="script.js">
       angular.module('orderByExample1', [])
         .controller('ExampleController', ['$scope', function($scope) {
           $scope.friends = [
             {name: 'John',   phone: '555-1212',  age: 10},
             {name: 'Mary',   phone: '555-9876',  age: 19},
             {name: 'Mike',   phone: '555-4321',  age: 21},
             {name: 'Adam',   phone: '555-5678',  age: 35},
             {name: 'Julie',  phone: '555-8765',  age: 29}
           ];
         }]);
     </file>
     <file name="style.css">
       .friends {
         border-collapse: collapse;
       }

       .friends th {
         border-bottom: 1px solid;
       }
       .friends td, .friends th {
         border-left: 1px solid;
         padding: 5px 10px;
       }
       .friends td:first-child, .friends th:first-child {
         border-left: none;
       }
     </file>
     <file name="protractor.js" type="protractor">
       // Element locators
       var names = element.all(by.repeater('friends').column('friend.name'));

       it('should sort friends by age in reverse order', function() {
         expect(names.get(0).getText()).toBe('Adam');
         expect(names.get(1).getText()).toBe('Julie');
         expect(names.get(2).getText()).toBe('Mike');
         expect(names.get(3).getText()).toBe('Mary');
         expect(names.get(4).getText()).toBe('John');
       });
     </file>
   </example>
 * <hr />
 *
 * @example
 * ### Changing parameters dynamically
 *
 * All parameters can be changed dynamically. The next example shows how you can make the columns of
 * a table sortable, by binding the `expression` and `reverse` parameters to scope properties.
 *
   <example name="orderBy-dynamic" module="orderByExample2">
     <file name="index.html">
       <div ng-controller="ExampleController">
         <pre>Sort by = {{propertyName}}; reverse = {{reverse}}</pre>
         <hr/>
         <button ng-click="propertyName = null; reverse = false">Set to unsorted</button>
         <hr/>
         <table class="friends">
           <tr>
             <th>
               <button ng-click="sortBy('name')">Name</button>
               <span class="sortorder" ng-show="propertyName === 'name'" ng-class="{reverse: reverse}"></span>
             </th>
             <th>
               <button ng-click="sortBy('phone')">Phone Number</button>
               <span class="sortorder" ng-show="propertyName === 'phone'" ng-class="{reverse: reverse}"></span>
             </th>
             <th>
               <button ng-click="sortBy('age')">Age</button>
               <span class="sortorder" ng-show="propertyName === 'age'" ng-class="{reverse: reverse}"></span>
             </th>
           </tr>
           <tr ng-repeat="friend in friends | orderBy:propertyName:reverse">
             <td>{{friend.name}}</td>
             <td>{{friend.phone}}</td>
             <td>{{friend.age}}</td>
           </tr>
         </table>
       </div>
     </file>
     <file name="script.js">
       angular.module('orderByExample2', [])
         .controller('ExampleController', ['$scope', function($scope) {
           var friends = [
             {name: 'John',   phone: '555-1212',  age: 10},
             {name: 'Mary',   phone: '555-9876',  age: 19},
             {name: 'Mike',   phone: '555-4321',  age: 21},
             {name: 'Adam',   phone: '555-5678',  age: 35},
             {name: 'Julie',  phone: '555-8765',  age: 29}
           ];

           $scope.propertyName = 'age';
           $scope.reverse = true;
           $scope.friends = friends;

           $scope.sortBy = function(propertyName) {
             $scope.reverse = ($scope.propertyName === propertyName) ? !$scope.reverse : false;
             $scope.propertyName = propertyName;
           };
         }]);
     </file>
     <file name="style.css">
       .friends {
         border-collapse: collapse;
       }

       .friends th {
         border-bottom: 1px solid;
       }
       .friends td, .friends th {
         border-left: 1px solid;
         padding: 5px 10px;
       }
       .friends td:first-child, .friends th:first-child {
         border-left: none;
       }

       .sortorder:after {
         content: '\25b2';   // BLACK UP-POINTING TRIANGLE
       }
       .sortorder.reverse:after {
         content: '\25bc';   // BLACK DOWN-POINTING TRIANGLE
       }
     </file>
     <file name="protractor.js" type="protractor">
       // Element locators
       var unsortButton = element(by.partialButtonText('unsorted'));
       var nameHeader = element(by.partialButtonText('Name'));
       var phoneHeader = element(by.partialButtonText('Phone'));
       var ageHeader = element(by.partialButtonText('Age'));
       var firstName = element(by.repeater('friends').column('friend.name').row(0));
       var lastName = element(by.repeater('friends').column('friend.name').row(4));

       it('should sort friends by some property, when clicking on the column header', function() {
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('John');

         phoneHeader.click();
         expect(firstName.getText()).toBe('John');
         expect(lastName.getText()).toBe('Mary');

         nameHeader.click();
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('Mike');

         ageHeader.click();
         expect(firstName.getText()).toBe('John');
         expect(lastName.getText()).toBe('Adam');
       });

       it('should sort friends in reverse order, when clicking on the same column', function() {
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('John');

         ageHeader.click();
         expect(firstName.getText()).toBe('John');
         expect(lastName.getText()).toBe('Adam');

         ageHeader.click();
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('John');
       });

       it('should restore the original order, when clicking "Set to unsorted"', function() {
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('John');

         unsortButton.click();
         expect(firstName.getText()).toBe('John');
         expect(lastName.getText()).toBe('Julie');
       });
     </file>
   </example>
 * <hr />
 *
 * @example
 * ### Using `orderBy` inside a controller
 *
 * It is also possible to call the `orderBy` filter manually, by injecting `orderByFilter`, and
 * calling it with the desired parameters. (Alternatively, you could inject the `$filter` factory
 * and retrieve the `orderBy` filter with `$filter('orderBy')`.)
 *
   <example name="orderBy-call-manually" module="orderByExample3">
     <file name="index.html">
       <div ng-controller="ExampleController">
         <pre>Sort by = {{propertyName}}; reverse = {{reverse}}</pre>
         <hr/>
         <button ng-click="sortBy(null)">Set to unsorted</button>
         <hr/>
         <table class="friends">
           <tr>
             <th>
               <button ng-click="sortBy('name')">Name</button>
               <span class="sortorder" ng-show="propertyName === 'name'" ng-class="{reverse: reverse}"></span>
             </th>
             <th>
               <button ng-click="sortBy('phone')">Phone Number</button>
               <span class="sortorder" ng-show="propertyName === 'phone'" ng-class="{reverse: reverse}"></span>
             </th>
             <th>
               <button ng-click="sortBy('age')">Age</button>
               <span class="sortorder" ng-show="propertyName === 'age'" ng-class="{reverse: reverse}"></span>
             </th>
           </tr>
           <tr ng-repeat="friend in friends">
             <td>{{friend.name}}</td>
             <td>{{friend.phone}}</td>
             <td>{{friend.age}}</td>
           </tr>
         </table>
       </div>
     </file>
     <file name="script.js">
       angular.module('orderByExample3', [])
         .controller('ExampleController', ['$scope', 'orderByFilter', function($scope, orderBy) {
           var friends = [
             {name: 'John',   phone: '555-1212',  age: 10},
             {name: 'Mary',   phone: '555-9876',  age: 19},
             {name: 'Mike',   phone: '555-4321',  age: 21},
             {name: 'Adam',   phone: '555-5678',  age: 35},
             {name: 'Julie',  phone: '555-8765',  age: 29}
           ];

           $scope.propertyName = 'age';
           $scope.reverse = true;
           $scope.friends = orderBy(friends, $scope.propertyName, $scope.reverse);

           $scope.sortBy = function(propertyName) {
             $scope.reverse = (propertyName !== null && $scope.propertyName === propertyName)
                 ? !$scope.reverse : false;
             $scope.propertyName = propertyName;
             $scope.friends = orderBy(friends, $scope.propertyName, $scope.reverse);
           };
         }]);
     </file>
     <file name="style.css">
       .friends {
         border-collapse: collapse;
       }

       .friends th {
         border-bottom: 1px solid;
       }
       .friends td, .friends th {
         border-left: 1px solid;
         padding: 5px 10px;
       }
       .friends td:first-child, .friends th:first-child {
         border-left: none;
       }

       .sortorder:after {
         content: '\25b2';   // BLACK UP-POINTING TRIANGLE
       }
       .sortorder.reverse:after {
         content: '\25bc';   // BLACK DOWN-POINTING TRIANGLE
       }
     </file>
     <file name="protractor.js" type="protractor">
       // Element locators
       var unsortButton = element(by.partialButtonText('unsorted'));
       var nameHeader = element(by.partialButtonText('Name'));
       var phoneHeader = element(by.partialButtonText('Phone'));
       var ageHeader = element(by.partialButtonText('Age'));
       var firstName = element(by.repeater('friends').column('friend.name').row(0));
       var lastName = element(by.repeater('friends').column('friend.name').row(4));

       it('should sort friends by some property, when clicking on the column header', function() {
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('John');

         phoneHeader.click();
         expect(firstName.getText()).toBe('John');
         expect(lastName.getText()).toBe('Mary');

         nameHeader.click();
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('Mike');

         ageHeader.click();
         expect(firstName.getText()).toBe('John');
         expect(lastName.getText()).toBe('Adam');
       });

       it('should sort friends in reverse order, when clicking on the same column', function() {
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('John');

         ageHeader.click();
         expect(firstName.getText()).toBe('John');
         expect(lastName.getText()).toBe('Adam');

         ageHeader.click();
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('John');
       });

       it('should restore the original order, when clicking "Set to unsorted"', function() {
         expect(firstName.getText()).toBe('Adam');
         expect(lastName.getText()).toBe('John');

         unsortButton.click();
         expect(firstName.getText()).toBe('John');
         expect(lastName.getText()).toBe('Julie');
       });
     </file>
   </example>
 * <hr />
 *
 * @example
 * ### Using a custom comparator
 *
 * If you have very specific requirements about the way items are sorted, you can pass your own
 * comparator function. For example, you might need to compare some strings in a locale-sensitive
 * way. (When specifying a custom comparator, you also need to pass a value for the `reverse`
 * argument - passing `false` retains the default sorting order, i.e. ascending.)
 *
   <example name="orderBy-custom-comparator" module="orderByExample4">
     <file name="index.html">
       <div ng-controller="ExampleController">
         <div class="friends-container custom-comparator">
           <h3>Locale-sensitive Comparator</h3>
           <table class="friends">
             <tr>
               <th>Name</th>
               <th>Favorite Letter</th>
             </tr>
             <tr ng-repeat="friend in friends | orderBy:'favoriteLetter':false:localeSensitiveComparator">
               <td>{{friend.name}}</td>
               <td>{{friend.favoriteLetter}}</td>
             </tr>
           </table>
         </div>
         <div class="friends-container default-comparator">
           <h3>Default Comparator</h3>
           <table class="friends">
             <tr>
               <th>Name</th>
               <th>Favorite Letter</th>
             </tr>
             <tr ng-repeat="friend in friends | orderBy:'favoriteLetter'">
               <td>{{friend.name}}</td>
               <td>{{friend.favoriteLetter}}</td>
             </tr>
           </table>
         </div>
       </div>
     </file>
     <file name="script.js">
       angular.module('orderByExample4', [])
         .controller('ExampleController', ['$scope', function($scope) {
           $scope.friends = [
             {name: 'John',   favoriteLetter: 'Ä'},
             {name: 'Mary',   favoriteLetter: 'Ü'},
             {name: 'Mike',   favoriteLetter: 'Ö'},
             {name: 'Adam',   favoriteLetter: 'H'},
             {name: 'Julie',  favoriteLetter: 'Z'}
           ];

           $scope.localeSensitiveComparator = function(v1, v2) {
             // If we don't get strings, just compare by index
             if (v1.type !== 'string' || v2.type !== 'string') {
               return (v1.index < v2.index) ? -1 : 1;
             }

             // Compare strings alphabetically, taking locale into account
             return v1.value.localeCompare(v2.value);
           };
         }]);
     </file>
     <file name="style.css">
       .friends-container {
         display: inline-block;
         margin: 0 30px;
       }

       .friends {
         border-collapse: collapse;
       }

       .friends th {
         border-bottom: 1px solid;
       }
       .friends td, .friends th {
         border-left: 1px solid;
         padding: 5px 10px;
       }
       .friends td:first-child, .friends th:first-child {
         border-left: none;
       }
     </file>
     <file name="protractor.js" type="protractor">
       // Element locators
       var container = element(by.css('.custom-comparator'));
       var names = container.all(by.repeater('friends').column('friend.name'));

       it('should sort friends by favorite letter (in correct alphabetical order)', function() {
         expect(names.get(0).getText()).toBe('John');
         expect(names.get(1).getText()).toBe('Adam');
         expect(names.get(2).getText()).toBe('Mike');
         expect(names.get(3).getText()).toBe('Mary');
         expect(names.get(4).getText()).toBe('Julie');
       });
     </file>
   </example>
 *
 */
orderByFilter.$inject = ['$parse'];
function orderByFilter($parse) {
  return function(array, sortPredicate, reverseOrder, compareFn) {

    if (array == null) return array;
    if (!isArrayLike(array)) {
      throw minErr('orderBy')('notarray', 'Expected array but received: {0}', array);
    }

    if (!isArray(sortPredicate)) { sortPredicate = [sortPredicate]; }
    if (sortPredicate.length === 0) { sortPredicate = ['+']; }

    var predicates = processPredicates(sortPredicate);

    var descending = reverseOrder ? -1 : 1;

    // Define the `compare()` function. Use a default comparator if none is specified.
    var compare = isFunction(compareFn) ? compareFn : defaultCompare;

    // The next three lines are a version of a Swartzian Transform idiom from Perl
    // (sometimes called the Decorate-Sort-Undecorate idiom)
    // See https://en.wikipedia.org/wiki/Schwartzian_transform
    var compareValues = Array.prototype.map.call(array, getComparisonObject);
    compareValues.sort(doComparison);
    array = compareValues.map(function(item) { return item.value; });

    return array;

    function getComparisonObject(value, index) {
      // NOTE: We are adding an extra `tieBreaker` value based on the element's index.
      // This will be used to keep the sort stable when none of the input predicates can
      // distinguish between two elements.
      return {
        value: value,
        tieBreaker: {value: index, type: 'number', index: index},
        predicateValues: predicates.map(function(predicate) {
          return getPredicateValue(predicate.get(value), index);
        })
      };
    }

    function doComparison(v1, v2) {
      for (var i = 0, ii = predicates.length; i < ii; i++) {
        var result = compare(v1.predicateValues[i], v2.predicateValues[i]);
        if (result) {
          return result * predicates[i].descending * descending;
        }
      }

      return compare(v1.tieBreaker, v2.tieBreaker) * descending;
    }
  };

  function processPredicates(sortPredicates) {
    return sortPredicates.map(function(predicate) {
      var descending = 1, get = identity;

      if (isFunction(predicate)) {
        get = predicate;
      } else if (isString(predicate)) {
        if ((predicate.charAt(0) === '+' || predicate.charAt(0) === '-')) {
          descending = predicate.charAt(0) === '-' ? -1 : 1;
          predicate = predicate.substring(1);
        }
        if (predicate !== '') {
          get = $parse(predicate);
          if (get.constant) {
            var key = get();
            get = function(value) { return value[key]; };
          }
        }
      }
      return {get: get, descending: descending};
    });
  }

  function isPrimitive(value) {
    switch (typeof value) {
      case 'number': /* falls through */
      case 'boolean': /* falls through */
      case 'string':
        return true;
      default:
        return false;
    }
  }

  function objectValue(value) {
    // If `valueOf` is a valid function use that
    if (isFunction(value.valueOf)) {
      value = value.valueOf();
      if (isPrimitive(value)) return value;
    }
    // If `toString` is a valid function and not the one from `Object.prototype` use that
    if (hasCustomToString(value)) {
      value = value.toString();
      if (isPrimitive(value)) return value;
    }

    return value;
  }

  function getPredicateValue(value, index) {
    var type = typeof value;
    if (value === null) {
      type = 'string';
      value = 'null';
    } else if (type === 'object') {
      value = objectValue(value);
    }
    return {value: value, type: type, index: index};
  }

  function defaultCompare(v1, v2) {
    var result = 0;
    var type1 = v1.type;
    var type2 = v2.type;

    if (type1 === type2) {
      var value1 = v1.value;
      var value2 = v2.value;

      if (type1 === 'string') {
        // Compare strings case-insensitively
        value1 = value1.toLowerCase();
        value2 = value2.toLowerCase();
      } else if (type1 === 'object') {
        // For basic objects, use the position of the object
        // in the collection instead of the value
        if (isObject(value1)) value1 = v1.index;
        if (isObject(value2)) value2 = v2.index;
      }

      if (value1 !== value2) {
        result = value1 < value2 ? -1 : 1;
      }
    } else {
      result = type1 < type2 ? -1 : 1;
    }

    return result;
  }
}

function ngDirective(directive) {
  if (isFunction(directive)) {
    directive = {
      link: directive
    };
  }
  directive.restrict = directive.restrict || 'AC';
  return valueFn(directive);
}

/**
 * @ngdoc directive
 * @name a
 * @restrict E
 *
 * @description
 * Modifies the default behavior of the html a tag so that the default action is prevented when
 * the href attribute is empty.
 *
 * For dynamically creating `href` attributes for a tags, see the {@link ng.ngHref `ngHref`} directive.
 */
var htmlAnchorDirective = valueFn({
  restrict: 'E',
  compile: function(element, attr) {
    if (!attr.href && !attr.xlinkHref) {
      return function(scope, element) {
        // If the linked element is not an anchor tag anymore, do nothing
        if (element[0].nodeName.toLowerCase() !== 'a') return;

        // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.
        var href = toString.call(element.prop('href')) === '[object SVGAnimatedString]' ?
                   'xlink:href' : 'href';
        element.on('click', function(event) {
          // if we have no href url, then don't navigate anywhere.
          if (!element.attr(href)) {
            event.preventDefault();
          }
        });
      };
    }
  }
});

/**
 * @ngdoc directive
 * @name ngHref
 * @restrict A
 * @priority 99
 *
 * @description
 * Using Angular markup like `{{hash}}` in an href attribute will
 * make the link go to the wrong URL if the user clicks it before
 * Angular has a chance to replace the `{{hash}}` markup with its
 * value. Until Angular replaces the markup the link will be broken
 * and will most likely return a 404 error. The `ngHref` directive
 * solves this problem.
 *
 * The wrong way to write it:
 * ```html
 * <a href="http://www.gravatar.com/avatar/{{hash}}">link1</a>
 * ```
 *
 * The correct way to write it:
 * ```html
 * <a ng-href="http://www.gravatar.com/avatar/{{hash}}">link1</a>
 * ```
 *
 * @element A
 * @param {template} ngHref any string which can contain `{{}}` markup.
 *
 * @example
 * This example shows various combinations of `href`, `ng-href` and `ng-click` attributes
 * in links and their different behaviors:
    <example name="ng-href">
      <file name="index.html">
        <input ng-model="value" /><br />
        <a id="link-1" href ng-click="value = 1">link 1</a> (link, don't reload)<br />
        <a id="link-2" href="" ng-click="value = 2">link 2</a> (link, don't reload)<br />
        <a id="link-3" ng-href="/{{'123'}}">link 3</a> (link, reload!)<br />
        <a id="link-4" href="" name="xx" ng-click="value = 4">anchor</a> (link, don't reload)<br />
        <a id="link-5" name="xxx" ng-click="value = 5">anchor</a> (no link)<br />
        <a id="link-6" ng-href="{{value}}">link</a> (link, change location)
      </file>
      <file name="protractor.js" type="protractor">
        it('should execute ng-click but not reload when href without value', function() {
          element(by.id('link-1')).click();
          expect(element(by.model('value')).getAttribute('value')).toEqual('1');
          expect(element(by.id('link-1')).getAttribute('href')).toBe('');
        });

        it('should execute ng-click but not reload when href empty string', function() {
          element(by.id('link-2')).click();
          expect(element(by.model('value')).getAttribute('value')).toEqual('2');
          expect(element(by.id('link-2')).getAttribute('href')).toBe('');
        });

        it('should execute ng-click and change url when ng-href specified', function() {
          expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\/123$/);

          element(by.id('link-3')).click();

          // At this point, we navigate away from an Angular page, so we need
          // to use browser.driver to get the base webdriver.

          browser.wait(function() {
            return browser.driver.getCurrentUrl().then(function(url) {
              return url.match(/\/123$/);
            });
          }, 5000, 'page should navigate to /123');
        });

        it('should execute ng-click but not reload when href empty string and name specified', function() {
          element(by.id('link-4')).click();
          expect(element(by.model('value')).getAttribute('value')).toEqual('4');
          expect(element(by.id('link-4')).getAttribute('href')).toBe('');
        });

        it('should execute ng-click but not reload when no href but name specified', function() {
          element(by.id('link-5')).click();
          expect(element(by.model('value')).getAttribute('value')).toEqual('5');
          expect(element(by.id('link-5')).getAttribute('href')).toBe(null);
        });

        it('should only change url when only ng-href', function() {
          element(by.model('value')).clear();
          element(by.model('value')).sendKeys('6');
          expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\/6$/);

          element(by.id('link-6')).click();

          // At this point, we navigate away from an Angular page, so we need
          // to use browser.driver to get the base webdriver.
          browser.wait(function() {
            return browser.driver.getCurrentUrl().then(function(url) {
              return url.match(/\/6$/);
            });
          }, 5000, 'page should navigate to /6');
        });
      </file>
    </example>
 */

/**
 * @ngdoc directive
 * @name ngSrc
 * @restrict A
 * @priority 99
 *
 * @description
 * Using Angular markup like `{{hash}}` in a `src` attribute doesn't
 * work right: The browser will fetch from the URL with the literal
 * text `{{hash}}` until Angular replaces the expression inside
 * `{{hash}}`. The `ngSrc` directive solves this problem.
 *
 * The buggy way to write it:
 * ```html
 * <img src="http://www.gravatar.com/avatar/{{hash}}" alt="Description"/>
 * ```
 *
 * The correct way to write it:
 * ```html
 * <img ng-src="http://www.gravatar.com/avatar/{{hash}}" alt="Description" />
 * ```
 *
 * @element IMG
 * @param {template} ngSrc any string which can contain `{{}}` markup.
 */

/**
 * @ngdoc directive
 * @name ngSrcset
 * @restrict A
 * @priority 99
 *
 * @description
 * Using Angular markup like `{{hash}}` in a `srcset` attribute doesn't
 * work right: The browser will fetch from the URL with the literal
 * text `{{hash}}` until Angular replaces the expression inside
 * `{{hash}}`. The `ngSrcset` directive solves this problem.
 *
 * The buggy way to write it:
 * ```html
 * <img srcset="http://www.gravatar.com/avatar/{{hash}} 2x" alt="Description"/>
 * ```
 *
 * The correct way to write it:
 * ```html
 * <img ng-srcset="http://www.gravatar.com/avatar/{{hash}} 2x" alt="Description" />
 * ```
 *
 * @element IMG
 * @param {template} ngSrcset any string which can contain `{{}}` markup.
 */

/**
 * @ngdoc directive
 * @name ngDisabled
 * @restrict A
 * @priority 100
 *
 * @description
 *
 * This directive sets the `disabled` attribute on the element if the
 * {@link guide/expression expression} inside `ngDisabled` evaluates to truthy.
 *
 * A special directive is necessary because we cannot use interpolation inside the `disabled`
 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
 *
 * @example
    <example name="ng-disabled">
      <file name="index.html">
        <label>Click me to toggle: <input type="checkbox" ng-model="checked"></label><br/>
        <button ng-model="button" ng-disabled="checked">Button</button>
      </file>
      <file name="protractor.js" type="protractor">
        it('should toggle button', function() {
          expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();
          element(by.model('checked')).click();
          expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();
        });
      </file>
    </example>
 *
 * @element INPUT
 * @param {expression} ngDisabled If the {@link guide/expression expression} is truthy,
 *     then the `disabled` attribute will be set on the element
 */


/**
 * @ngdoc directive
 * @name ngChecked
 * @restrict A
 * @priority 100
 *
 * @description
 * Sets the `checked` attribute on the element, if the expression inside `ngChecked` is truthy.
 *
 * Note that this directive should not be used together with {@link ngModel `ngModel`},
 * as this can lead to unexpected behavior.
 *
 * A special directive is necessary because we cannot use interpolation inside the `checked`
 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
 *
 * @example
    <example name="ng-checked">
      <file name="index.html">
        <label>Check me to check both: <input type="checkbox" ng-model="master"></label><br/>
        <input id="checkSlave" type="checkbox" ng-checked="master" aria-label="Slave input">
      </file>
      <file name="protractor.js" type="protractor">
        it('should check both checkBoxes', function() {
          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeFalsy();
          element(by.model('master')).click();
          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeTruthy();
        });
      </file>
    </example>
 *
 * @element INPUT
 * @param {expression} ngChecked If the {@link guide/expression expression} is truthy,
 *     then the `checked` attribute will be set on the element
 */


/**
 * @ngdoc directive
 * @name ngReadonly
 * @restrict A
 * @priority 100
 *
 * @description
 *
 * Sets the `readonly` attribute on the element, if the expression inside `ngReadonly` is truthy.
 * Note that `readonly` applies only to `input` elements with specific types. [See the input docs on
 * MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly) for more information.
 *
 * A special directive is necessary because we cannot use interpolation inside the `readonly`
 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
 *
 * @example
    <example name="ng-readonly">
      <file name="index.html">
        <label>Check me to make text readonly: <input type="checkbox" ng-model="checked"></label><br/>
        <input type="text" ng-readonly="checked" value="I'm Angular" aria-label="Readonly field" />
      </file>
      <file name="protractor.js" type="protractor">
        it('should toggle readonly attr', function() {
          expect(element(by.css('[type="text"]')).getAttribute('readonly')).toBeFalsy();
          element(by.model('checked')).click();
          expect(element(by.css('[type="text"]')).getAttribute('readonly')).toBeTruthy();
        });
      </file>
    </example>
 *
 * @element INPUT
 * @param {expression} ngReadonly If the {@link guide/expression expression} is truthy,
 *     then special attribute "readonly" will be set on the element
 */


/**
 * @ngdoc directive
 * @name ngSelected
 * @restrict A
 * @priority 100
 *
 * @description
 *
 * Sets the `selected` attribute on the element, if the expression inside `ngSelected` is truthy.
 *
 * A special directive is necessary because we cannot use interpolation inside the `selected`
 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
 *
 * <div class="alert alert-warning">
 *   **Note:** `ngSelected` does not interact with the `select` and `ngModel` directives, it only
 *   sets the `selected` attribute on the element. If you are using `ngModel` on the select, you
 *   should not use `ngSelected` on the options, as `ngModel` will set the select value and
 *   selected options.
 * </div>
 *
 * @example
    <example name="ng-selected">
      <file name="index.html">
        <label>Check me to select: <input type="checkbox" ng-model="selected"></label><br/>
        <select aria-label="ngSelected demo">
          <option>Hello!</option>
          <option id="greet" ng-selected="selected">Greetings!</option>
        </select>
      </file>
      <file name="protractor.js" type="protractor">
        it('should select Greetings!', function() {
          expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();
          element(by.model('selected')).click();
          expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();
        });
      </file>
    </example>
 *
 * @element OPTION
 * @param {expression} ngSelected If the {@link guide/expression expression} is truthy,
 *     then special attribute "selected" will be set on the element
 */

/**
 * @ngdoc directive
 * @name ngOpen
 * @restrict A
 * @priority 100
 *
 * @description
 *
 * Sets the `open` attribute on the element, if the expression inside `ngOpen` is truthy.
 *
 * A special directive is necessary because we cannot use interpolation inside the `open`
 * attribute. See the {@link guide/interpolation interpolation guide} for more info.
 *
 * ## A note about browser compatibility
 *
 * Edge, Firefox, and Internet Explorer do not support the `details` element, it is
 * recommended to use {@link ng.ngShow} and {@link ng.ngHide} instead.
 *
 * @example
     <example name="ng-open">
       <file name="index.html">
         <label>Check me check multiple: <input type="checkbox" ng-model="open"></label><br/>
         <details id="details" ng-open="open">
            <summary>Show/Hide me</summary>
         </details>
       </file>
       <file name="protractor.js" type="protractor">
         it('should toggle open', function() {
           expect(element(by.id('details')).getAttribute('open')).toBeFalsy();
           element(by.model('open')).click();
           expect(element(by.id('details')).getAttribute('open')).toBeTruthy();
         });
       </file>
     </example>
 *
 * @element DETAILS
 * @param {expression} ngOpen If the {@link guide/expression expression} is truthy,
 *     then special attribute "open" will be set on the element
 */

var ngAttributeAliasDirectives = {};

// boolean attrs are evaluated
forEach(BOOLEAN_ATTR, function(propName, attrName) {
  // binding to multiple is not supported
  if (propName === 'multiple') return;

  function defaultLinkFn(scope, element, attr) {
    scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {
      attr.$set(attrName, !!value);
    });
  }

  var normalized = directiveNormalize('ng-' + attrName);
  var linkFn = defaultLinkFn;

  if (propName === 'checked') {
    linkFn = function(scope, element, attr) {
      // ensuring ngChecked doesn't interfere with ngModel when both are set on the same input
      if (attr.ngModel !== attr[normalized]) {
        defaultLinkFn(scope, element, attr);
      }
    };
  }

  ngAttributeAliasDirectives[normalized] = function() {
    return {
      restrict: 'A',
      priority: 100,
      link: linkFn
    };
  };
});

// aliased input attrs are evaluated
forEach(ALIASED_ATTR, function(htmlAttr, ngAttr) {
  ngAttributeAliasDirectives[ngAttr] = function() {
    return {
      priority: 100,
      link: function(scope, element, attr) {
        //special case ngPattern when a literal regular expression value
        //is used as the expression (this way we don't have to watch anything).
        if (ngAttr === 'ngPattern' && attr.ngPattern.charAt(0) === '/') {
          var match = attr.ngPattern.match(REGEX_STRING_REGEXP);
          if (match) {
            attr.$set('ngPattern', new RegExp(match[1], match[2]));
            return;
          }
        }

        scope.$watch(attr[ngAttr], function ngAttrAliasWatchAction(value) {
          attr.$set(ngAttr, value);
        });
      }
    };
  };
});

// ng-src, ng-srcset, ng-href are interpolated
forEach(['src', 'srcset', 'href'], function(attrName) {
  var normalized = directiveNormalize('ng-' + attrName);
  ngAttributeAliasDirectives[normalized] = function() {
    return {
      priority: 99, // it needs to run after the attributes are interpolated
      link: function(scope, element, attr) {
        var propName = attrName,
            name = attrName;

        if (attrName === 'href' &&
            toString.call(element.prop('href')) === '[object SVGAnimatedString]') {
          name = 'xlinkHref';
          attr.$attr[name] = 'xlink:href';
          propName = null;
        }

        attr.$observe(normalized, function(value) {
          if (!value) {
            if (attrName === 'href') {
              attr.$set(name, null);
            }
            return;
          }

          attr.$set(name, value);

          // on IE, if "ng:src" directive declaration is used and "src" attribute doesn't exist
          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need
          // to set the property as well to achieve the desired effect.
          // we use attr[attrName] value since $set can sanitize the url.
          if (msie && propName) element.prop(propName, attr[name]);
        });
      }
    };
  };
});

/* global -nullFormCtrl, -SUBMITTED_CLASS, addSetValidityMethod: true
 */
var nullFormCtrl = {
  $addControl: noop,
  $$renameControl: nullFormRenameControl,
  $removeControl: noop,
  $setValidity: noop,
  $setDirty: noop,
  $setPristine: noop,
  $setSubmitted: noop
},
SUBMITTED_CLASS = 'ng-submitted';

function nullFormRenameControl(control, name) {
  control.$name = name;
}

/**
 * @ngdoc type
 * @name form.FormController
 *
 * @property {boolean} $pristine True if user has not interacted with the form yet.
 * @property {boolean} $dirty True if user has already interacted with the form.
 * @property {boolean} $valid True if all of the containing forms and controls are valid.
 * @property {boolean} $invalid True if at least one containing control or form is invalid.
 * @property {boolean} $pending True if at least one containing control or form is pending.
 * @property {boolean} $submitted True if user has submitted the form even if its invalid.
 *
 * @property {Object} $error Is an object hash, containing references to controls or
 *  forms with failing validators, where:
 *
 *  - keys are validation tokens (error names),
 *  - values are arrays of controls or forms that have a failing validator for given error name.
 *
 *  Built-in validation tokens:
 *
 *  - `email`
 *  - `max`
 *  - `maxlength`
 *  - `min`
 *  - `minlength`
 *  - `number`
 *  - `pattern`
 *  - `required`
 *  - `url`
 *  - `date`
 *  - `datetimelocal`
 *  - `time`
 *  - `week`
 *  - `month`
 *
 * @description
 * `FormController` keeps track of all its controls and nested forms as well as the state of them,
 * such as being valid/invalid or dirty/pristine.
 *
 * Each {@link ng.directive:form form} directive creates an instance
 * of `FormController`.
 *
 */
//asks for $scope to fool the BC controller module
FormController.$inject = ['$element', '$attrs', '$scope', '$animate', '$interpolate'];
function FormController(element, attrs, $scope, $animate, $interpolate) {
  var form = this,
      controls = [];

  // init state
  form.$error = {};
  form.$$success = {};
  form.$pending = undefined;
  form.$name = $interpolate(attrs.name || attrs.ngForm || '')($scope);
  form.$dirty = false;
  form.$pristine = true;
  form.$valid = true;
  form.$invalid = false;
  form.$submitted = false;
  form.$$parentForm = nullFormCtrl;

  /**
   * @ngdoc method
   * @name form.FormController#$rollbackViewValue
   *
   * @description
   * Rollback all form controls pending updates to the `$modelValue`.
   *
   * Updates may be pending by a debounced event or because the input is waiting for a some future
   * event defined in `ng-model-options`. This method is typically needed by the reset button of
   * a form that uses `ng-model-options` to pend updates.
   */
  form.$rollbackViewValue = function() {
    forEach(controls, function(control) {
      control.$rollbackViewValue();
    });
  };

  /**
   * @ngdoc method
   * @name form.FormController#$commitViewValue
   *
   * @description
   * Commit all form controls pending updates to the `$modelValue`.
   *
   * Updates may be pending by a debounced event or because the input is waiting for a some future
   * event defined in `ng-model-options`. This method is rarely needed as `NgModelController`
   * usually handles calling this in response to input events.
   */
  form.$commitViewValue = function() {
    forEach(controls, function(control) {
      control.$commitViewValue();
    });
  };

  /**
   * @ngdoc method
   * @name form.FormController#$addControl
   * @param {object} control control object, either a {@link form.FormController} or an
   * {@link ngModel.NgModelController}
   *
   * @description
   * Register a control with the form. Input elements using ngModelController do this automatically
   * when they are linked.
   *
   * Note that the current state of the control will not be reflected on the new parent form. This
   * is not an issue with normal use, as freshly compiled and linked controls are in a `$pristine`
   * state.
   *
   * However, if the method is used programmatically, for example by adding dynamically created controls,
   * or controls that have been previously removed without destroying their corresponding DOM element,
   * it's the developers responsibility to make sure the current state propagates to the parent form.
   *
   * For example, if an input control is added that is already `$dirty` and has `$error` properties,
   * calling `$setDirty()` and `$validate()` afterwards will propagate the state to the parent form.
   */
  form.$addControl = function(control) {
    // Breaking change - before, inputs whose name was "hasOwnProperty" were quietly ignored
    // and not added to the scope.  Now we throw an error.
    assertNotHasOwnProperty(control.$name, 'input');
    controls.push(control);

    if (control.$name) {
      form[control.$name] = control;
    }

    control.$$parentForm = form;
  };

  // Private API: rename a form control
  form.$$renameControl = function(control, newName) {
    var oldName = control.$name;

    if (form[oldName] === control) {
      delete form[oldName];
    }
    form[newName] = control;
    control.$name = newName;
  };

  /**
   * @ngdoc method
   * @name form.FormController#$removeControl
   * @param {object} control control object, either a {@link form.FormController} or an
   * {@link ngModel.NgModelController}
   *
   * @description
   * Deregister a control from the form.
   *
   * Input elements using ngModelController do this automatically when they are destroyed.
   *
   * Note that only the removed control's validation state (`$errors`etc.) will be removed from the
   * form. `$dirty`, `$submitted` states will not be changed, because the expected behavior can be
   * different from case to case. For example, removing the only `$dirty` control from a form may or
   * may not mean that the form is still `$dirty`.
   */
  form.$removeControl = function(control) {
    if (control.$name && form[control.$name] === control) {
      delete form[control.$name];
    }
    forEach(form.$pending, function(value, name) {
      form.$setValidity(name, null, control);
    });
    forEach(form.$error, function(value, name) {
      form.$setValidity(name, null, control);
    });
    forEach(form.$$success, function(value, name) {
      form.$setValidity(name, null, control);
    });

    arrayRemove(controls, control);
    control.$$parentForm = nullFormCtrl;
  };


  /**
   * @ngdoc method
   * @name form.FormController#$setValidity
   *
   * @description
   * Sets the validity of a form control.
   *
   * This method will also propagate to parent forms.
   */
  addSetValidityMethod({
    ctrl: this,
    $element: element,
    set: function(object, property, controller) {
      var list = object[property];
      if (!list) {
        object[property] = [controller];
      } else {
        var index = list.indexOf(controller);
        if (index === -1) {
          list.push(controller);
        }
      }
    },
    unset: function(object, property, controller) {
      var list = object[property];
      if (!list) {
        return;
      }
      arrayRemove(list, controller);
      if (list.length === 0) {
        delete object[property];
      }
    },
    $animate: $animate
  });

  /**
   * @ngdoc method
   * @name form.FormController#$setDirty
   *
   * @description
   * Sets the form to a dirty state.
   *
   * This method can be called to add the 'ng-dirty' class and set the form to a dirty
   * state (ng-dirty class). This method will also propagate to parent forms.
   */
  form.$setDirty = function() {
    $animate.removeClass(element, PRISTINE_CLASS);
    $animate.addClass(element, DIRTY_CLASS);
    form.$dirty = true;
    form.$pristine = false;
    form.$$parentForm.$setDirty();
  };

  /**
   * @ngdoc method
   * @name form.FormController#$setPristine
   *
   * @description
   * Sets the form to its pristine state.
   *
   * This method sets the form's `$pristine` state to true, the `$dirty` state to false, removes
   * the `ng-dirty` class and adds the `ng-pristine` class. Additionally, it sets the `$submitted`
   * state to false.
   *
   * This method will also propagate to all the controls contained in this form.
   *
   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after
   * saving or resetting it.
   */
  form.$setPristine = function() {
    $animate.setClass(element, PRISTINE_CLASS, DIRTY_CLASS + ' ' + SUBMITTED_CLASS);
    form.$dirty = false;
    form.$pristine = true;
    form.$submitted = false;
    forEach(controls, function(control) {
      control.$setPristine();
    });
  };

  /**
   * @ngdoc method
   * @name form.FormController#$setUntouched
   *
   * @description
   * Sets the form to its untouched state.
   *
   * This method can be called to remove the 'ng-touched' class and set the form controls to their
   * untouched state (ng-untouched class).
   *
   * Setting a form controls back to their untouched state is often useful when setting the form
   * back to its pristine state.
   */
  form.$setUntouched = function() {
    forEach(controls, function(control) {
      control.$setUntouched();
    });
  };

  /**
   * @ngdoc method
   * @name form.FormController#$setSubmitted
   *
   * @description
   * Sets the form to its submitted state.
   */
  form.$setSubmitted = function() {
    $animate.addClass(element, SUBMITTED_CLASS);
    form.$submitted = true;
    form.$$parentForm.$setSubmitted();
  };
}

/**
 * @ngdoc directive
 * @name ngForm
 * @restrict EAC
 *
 * @description
 * Nestable alias of {@link ng.directive:form `form`} directive. HTML
 * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a
 * sub-group of controls needs to be determined.
 *
 * Note: the purpose of `ngForm` is to group controls,
 * but not to be a replacement for the `<form>` tag with all of its capabilities
 * (e.g. posting to the server, ...).
 *
 * @param {string=} ngForm|name Name of the form. If specified, the form controller will be published into
 *                       related scope, under this name.
 *
 */

 /**
 * @ngdoc directive
 * @name form
 * @restrict E
 *
 * @description
 * Directive that instantiates
 * {@link form.FormController FormController}.
 *
 * If the `name` attribute is specified, the form controller is published onto the current scope under
 * this name.
 *
 * # Alias: {@link ng.directive:ngForm `ngForm`}
 *
 * In Angular, forms can be nested. This means that the outer form is valid when all of the child
 * forms are valid as well. However, browsers do not allow nesting of `<form>` elements, so
 * Angular provides the {@link ng.directive:ngForm `ngForm`} directive, which behaves identically to
 * `form` but can be nested. Nested forms can be useful, for example, if the validity of a sub-group
 * of controls needs to be determined.
 *
 * # CSS classes
 *  - `ng-valid` is set if the form is valid.
 *  - `ng-invalid` is set if the form is invalid.
 *  - `ng-pending` is set if the form is pending.
 *  - `ng-pristine` is set if the form is pristine.
 *  - `ng-dirty` is set if the form is dirty.
 *  - `ng-submitted` is set if the form was submitted.
 *
 * Keep in mind that ngAnimate can detect each of these classes when added and removed.
 *
 *
 * # Submitting a form and preventing the default action
 *
 * Since the role of forms in client-side Angular applications is different than in classical
 * roundtrip apps, it is desirable for the browser not to translate the form submission into a full
 * page reload that sends the data to the server. Instead some javascript logic should be triggered
 * to handle the form submission in an application-specific way.
 *
 * For this reason, Angular prevents the default action (form submission to the server) unless the
 * `<form>` element has an `action` attribute specified.
 *
 * You can use one of the following two ways to specify what javascript method should be called when
 * a form is submitted:
 *
 * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element
 * - {@link ng.directive:ngClick ngClick} directive on the first
  *  button or input field of type submit (input[type=submit])
 *
 * To prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}
 * or {@link ng.directive:ngClick ngClick} directives.
 * This is because of the following form submission rules in the HTML specification:
 *
 * - If a form has only one input field then hitting enter in this field triggers form submit
 * (`ngSubmit`)
 * - if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter
 * doesn't trigger submit
 * - if a form has one or more input fields and one or more buttons or input[type=submit] then
 * hitting enter in any of the input fields will trigger the click handler on the *first* button or
 * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)
 *
 * Any pending `ngModelOptions` changes will take place immediately when an enclosing form is
 * submitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`
 * to have access to the updated model.
 *
 * ## Animation Hooks
 *
 * Animations in ngForm are triggered when any of the associated CSS classes are added and removed.
 * These classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any
 * other validations that are performed within the form. Animations in ngForm are similar to how
 * they work in ngClass and animations can be hooked into using CSS transitions, keyframes as well
 * as JS animations.
 *
 * The following example shows a simple way to utilize CSS transitions to style a form element
 * that has been rendered as invalid after it has been validated:
 *
 * <pre>
 * //be sure to include ngAnimate as a module to hook into more
 * //advanced animations
 * .my-form {
 *   transition:0.5s linear all;
 *   background: white;
 * }
 * .my-form.ng-invalid {
 *   background: red;
 *   color:white;
 * }
 * </pre>
 *
 * @example
    <example name="ng-form" deps="angular-animate.js" animations="true" fixBase="true" module="formExample">
      <file name="index.html">
       <script>
         angular.module('formExample', [])
           .controller('FormController', ['$scope', function($scope) {
             $scope.userType = 'guest';
           }]);
       </script>
       <style>
        .my-form {
          transition:all linear 0.5s;
          background: transparent;
        }
        .my-form.ng-invalid {
          background: red;
        }
       </style>
       <form name="myForm" ng-controller="FormController" class="my-form">
         userType: <input name="input" ng-model="userType" required>
         <span class="error" ng-show="myForm.input.$error.required">Required!</span><br>
         <code>userType = {{userType}}</code><br>
         <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br>
         <code>myForm.input.$error = {{myForm.input.$error}}</code><br>
         <code>myForm.$valid = {{myForm.$valid}}</code><br>
         <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br>
        </form>
      </file>
      <file name="protractor.js" type="protractor">
        it('should initialize to model', function() {
          var userType = element(by.binding('userType'));
          var valid = element(by.binding('myForm.input.$valid'));

          expect(userType.getText()).toContain('guest');
          expect(valid.getText()).toContain('true');
        });

        it('should be invalid if empty', function() {
          var userType = element(by.binding('userType'));
          var valid = element(by.binding('myForm.input.$valid'));
          var userInput = element(by.model('userType'));

          userInput.clear();
          userInput.sendKeys('');

          expect(userType.getText()).toEqual('userType =');
          expect(valid.getText()).toContain('false');
        });
      </file>
    </example>
 *
 * @param {string=} name Name of the form. If specified, the form controller will be published into
 *                       related scope, under this name.
 */
var formDirectiveFactory = function(isNgForm) {
  return ['$timeout', '$parse', function($timeout, $parse) {
    var formDirective = {
      name: 'form',
      restrict: isNgForm ? 'EAC' : 'E',
      require: ['form', '^^?form'], //first is the form's own ctrl, second is an optional parent form
      controller: FormController,
      compile: function ngFormCompile(formElement, attr) {
        // Setup initial state of the control
        formElement.addClass(PRISTINE_CLASS).addClass(VALID_CLASS);

        var nameAttr = attr.name ? 'name' : (isNgForm && attr.ngForm ? 'ngForm' : false);

        return {
          pre: function ngFormPreLink(scope, formElement, attr, ctrls) {
            var controller = ctrls[0];

            // if `action` attr is not present on the form, prevent the default action (submission)
            if (!('action' in attr)) {
              // we can't use jq events because if a form is destroyed during submission the default
              // action is not prevented. see #1238
              //
              // IE 9 is not affected because it doesn't fire a submit event and try to do a full
              // page reload if the form was destroyed by submission of the form via a click handler
              // on a button in the form. Looks like an IE9 specific bug.
              var handleFormSubmission = function(event) {
                scope.$apply(function() {
                  controller.$commitViewValue();
                  controller.$setSubmitted();
                });

                event.preventDefault();
              };

              addEventListenerFn(formElement[0], 'submit', handleFormSubmission);

              // unregister the preventDefault listener so that we don't not leak memory but in a
              // way that will achieve the prevention of the default action.
              formElement.on('$destroy', function() {
                $timeout(function() {
                  removeEventListenerFn(formElement[0], 'submit', handleFormSubmission);
                }, 0, false);
              });
            }

            var parentFormCtrl = ctrls[1] || controller.$$parentForm;
            parentFormCtrl.$addControl(controller);

            var setter = nameAttr ? getSetter(controller.$name) : noop;

            if (nameAttr) {
              setter(scope, controller);
              attr.$observe(nameAttr, function(newValue) {
                if (controller.$name === newValue) return;
                setter(scope, undefined);
                controller.$$parentForm.$$renameControl(controller, newValue);
                setter = getSetter(controller.$name);
                setter(scope, controller);
              });
            }
            formElement.on('$destroy', function() {
              controller.$$parentForm.$removeControl(controller);
              setter(scope, undefined);
              extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards
            });
          }
        };
      }
    };

    return formDirective;

    function getSetter(expression) {
      if (expression === '') {
        //create an assignable expression, so forms with an empty name can be renamed later
        return $parse('this[""]').assign;
      }
      return $parse(expression).assign || noop;
    }
  }];
};

var formDirective = formDirectiveFactory();
var ngFormDirective = formDirectiveFactory(true);

/* global
  VALID_CLASS: false,
  INVALID_CLASS: false,
  PRISTINE_CLASS: false,
  DIRTY_CLASS: false,
  ngModelMinErr: false
*/

// Regex code was initially obtained from SO prior to modification: https://stackoverflow.com/questions/3143070/javascript-regex-iso-datetime#answer-3143231
var ISO_DATE_REGEXP = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/;
// See valid URLs in RFC3987 (http://tools.ietf.org/html/rfc3987)
// Note: We are being more lenient, because browsers are too.
//   1. Scheme
//   2. Slashes
//   3. Username
//   4. Password
//   5. Hostname
//   6. Port
//   7. Path
//   8. Query
//   9. Fragment
//                 1111111111111111 222   333333    44444        55555555555555555555555     666     77777777     8888888     999
var URL_REGEXP = /^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i;
// eslint-disable-next-line max-len
var EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;
var NUMBER_REGEXP = /^\s*(-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/;
var DATE_REGEXP = /^(\d{4,})-(\d{2})-(\d{2})$/;
var DATETIMELOCAL_REGEXP = /^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;
var WEEK_REGEXP = /^(\d{4,})-W(\d\d)$/;
var MONTH_REGEXP = /^(\d{4,})-(\d\d)$/;
var TIME_REGEXP = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;

var PARTIAL_VALIDATION_EVENTS = 'keydown wheel mousedown';
var PARTIAL_VALIDATION_TYPES = createMap();
forEach('date,datetime-local,month,time,week'.split(','), function(type) {
  PARTIAL_VALIDATION_TYPES[type] = true;
});

var inputType = {

  /**
   * @ngdoc input
   * @name input[text]
   *
   * @description
   * Standard HTML text input with angular data binding, inherited by most of the `input` elements.
   *
   *
   * @param {string} ngModel Assignable angular expression to data-bind to.
   * @param {string=} name Property name of the form under which the control is published.
   * @param {string=} required Adds `required` validation error key if the value is not entered.
   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
   *    `required` when you want to data-bind to the `required` attribute.
   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
   *    minlength.
   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
   *    any length.
   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
   *    that contains the regular expression body that will be converted to a regular expression
   *    as in the ngPattern directive.
   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
   *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.
   *    If the expression evaluates to a RegExp object, then this is used directly.
   *    If the expression evaluates to a string, then it will be converted to a RegExp
   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
   *    `new RegExp('^abc$')`.<br />
   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
   *    start at the index of the last search's match, thus not taking the whole input value into
   *    account.
   * @param {string=} ngChange Angular expression to be executed when input changes due to user
   *    interaction with the input element.
   * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.
   *    This parameter is ignored for input[type=password] controls, which will never trim the
   *    input.
   *
   * @example
      <example name="text-input-directive" module="textInputExample">
        <file name="index.html">
         <script>
           angular.module('textInputExample', [])
             .controller('ExampleController', ['$scope', function($scope) {
               $scope.example = {
                 text: 'guest',
                 word: /^\s*\w*\s*$/
               };
             }]);
         </script>
         <form name="myForm" ng-controller="ExampleController">
           <label>Single word:
             <input type="text" name="input" ng-model="example.text"
                    ng-pattern="example.word" required ng-trim="false">
           </label>
           <div role="alert">
             <span class="error" ng-show="myForm.input.$error.required">
               Required!</span>
             <span class="error" ng-show="myForm.input.$error.pattern">
               Single word only!</span>
           </div>
           <code>text = {{example.text}}</code><br/>
           <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br/>
           <code>myForm.input.$error = {{myForm.input.$error}}</code><br/>
           <code>myForm.$valid = {{myForm.$valid}}</code><br/>
           <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br/>
          </form>
        </file>
        <file name="protractor.js" type="protractor">
          var text = element(by.binding('example.text'));
          var valid = element(by.binding('myForm.input.$valid'));
          var input = element(by.model('example.text'));

          it('should initialize to model', function() {
            expect(text.getText()).toContain('guest');
            expect(valid.getText()).toContain('true');
          });

          it('should be invalid if empty', function() {
            input.clear();
            input.sendKeys('');

            expect(text.getText()).toEqual('text =');
            expect(valid.getText()).toContain('false');
          });

          it('should be invalid if multi word', function() {
            input.clear();
            input.sendKeys('hello world');

            expect(valid.getText()).toContain('false');
          });
        </file>
      </example>
   */
  'text': textInputType,

    /**
     * @ngdoc input
     * @name input[date]
     *
     * @description
     * Input with date validation and transformation. In browsers that do not yet support
     * the HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601
     * date format (yyyy-MM-dd), for example: `2009-01-06`. Since many
     * modern browsers do not yet support this input type, it is important to provide cues to users on the
     * expected input format via a placeholder or label.
     *
     * The model must always be a Date object, otherwise Angular will throw an error.
     * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
     *
     * The timezone to be used to read/write the `Date` instance in the model can be defined using
     * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
     *
     * @param {string} ngModel Assignable angular expression to data-bind to.
     * @param {string=} name Property name of the form under which the control is published.
     * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a
     *   valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute
     *   (e.g. `min="{{minDate | date:'yyyy-MM-dd'}}"`). Note that `min` will also add native HTML5
     *   constraint validation.
     * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be
     *   a valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute
     *   (e.g. `max="{{maxDate | date:'yyyy-MM-dd'}}"`). Note that `max` will also add native HTML5
     *   constraint validation.
     * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO date string
     *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
     * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO date string
     *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
     * @param {string=} required Sets `required` validation error key if the value is not entered.
     * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
     *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
     *    `required` when you want to data-bind to the `required` attribute.
     * @param {string=} ngChange Angular expression to be executed when input changes due to user
     *    interaction with the input element.
     *
     * @example
     <example name="date-input-directive" module="dateInputExample">
     <file name="index.html">
       <script>
          angular.module('dateInputExample', [])
            .controller('DateController', ['$scope', function($scope) {
              $scope.example = {
                value: new Date(2013, 9, 22)
              };
            }]);
       </script>
       <form name="myForm" ng-controller="DateController as dateCtrl">
          <label for="exampleInput">Pick a date in 2013:</label>
          <input type="date" id="exampleInput" name="input" ng-model="example.value"
              placeholder="yyyy-MM-dd" min="2013-01-01" max="2013-12-31" required />
          <div role="alert">
            <span class="error" ng-show="myForm.input.$error.required">
                Required!</span>
            <span class="error" ng-show="myForm.input.$error.date">
                Not a valid date!</span>
           </div>
           <tt>value = {{example.value | date: "yyyy-MM-dd"}}</tt><br/>
           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
       </form>
     </file>
     <file name="protractor.js" type="protractor">
        var value = element(by.binding('example.value | date: "yyyy-MM-dd"'));
        var valid = element(by.binding('myForm.input.$valid'));

        // currently protractor/webdriver does not support
        // sending keys to all known HTML5 input controls
        // for various browsers (see https://github.com/angular/protractor/issues/562).
        function setInput(val) {
          // set the value of the element and force validation.
          var scr = "var ipt = document.getElementById('exampleInput'); " +
          "ipt.value = '" + val + "';" +
          "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
          browser.executeScript(scr);
        }

        it('should initialize to model', function() {
          expect(value.getText()).toContain('2013-10-22');
          expect(valid.getText()).toContain('myForm.input.$valid = true');
        });

        it('should be invalid if empty', function() {
          setInput('');
          expect(value.getText()).toEqual('value =');
          expect(valid.getText()).toContain('myForm.input.$valid = false');
        });

        it('should be invalid if over max', function() {
          setInput('2015-01-01');
          expect(value.getText()).toContain('');
          expect(valid.getText()).toContain('myForm.input.$valid = false');
        });
     </file>
     </example>
     */
  'date': createDateInputType('date', DATE_REGEXP,
         createDateParser(DATE_REGEXP, ['yyyy', 'MM', 'dd']),
         'yyyy-MM-dd'),

   /**
    * @ngdoc input
    * @name input[datetime-local]
    *
    * @description
    * Input with datetime validation and transformation. In browsers that do not yet support
    * the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
    * local datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.
    *
    * The model must always be a Date object, otherwise Angular will throw an error.
    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
    *
    * The timezone to be used to read/write the `Date` instance in the model can be defined using
    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
    *
    * @param {string} ngModel Assignable angular expression to data-bind to.
    * @param {string=} name Property name of the form under which the control is published.
    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
    *   This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation
    *   inside this attribute (e.g. `min="{{minDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}"`).
    *   Note that `min` will also add native HTML5 constraint validation.
    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
    *   This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation
    *   inside this attribute (e.g. `max="{{maxDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}"`).
    *   Note that `max` will also add native HTML5 constraint validation.
    * @param {(date|string)=} ngMin Sets the `min` validation error key to the Date / ISO datetime string
    *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
    * @param {(date|string)=} ngMax Sets the `max` validation error key to the Date / ISO datetime string
    *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
    * @param {string=} required Sets `required` validation error key if the value is not entered.
    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
    *    `required` when you want to data-bind to the `required` attribute.
    * @param {string=} ngChange Angular expression to be executed when input changes due to user
    *    interaction with the input element.
    *
    * @example
    <example name="datetimelocal-input-directive" module="dateExample">
    <file name="index.html">
      <script>
        angular.module('dateExample', [])
          .controller('DateController', ['$scope', function($scope) {
            $scope.example = {
              value: new Date(2010, 11, 28, 14, 57)
            };
          }]);
      </script>
      <form name="myForm" ng-controller="DateController as dateCtrl">
        <label for="exampleInput">Pick a date between in 2013:</label>
        <input type="datetime-local" id="exampleInput" name="input" ng-model="example.value"
            placeholder="yyyy-MM-ddTHH:mm:ss" min="2001-01-01T00:00:00" max="2013-12-31T00:00:00" required />
        <div role="alert">
          <span class="error" ng-show="myForm.input.$error.required">
              Required!</span>
          <span class="error" ng-show="myForm.input.$error.datetimelocal">
              Not a valid date!</span>
        </div>
        <tt>value = {{example.value | date: "yyyy-MM-ddTHH:mm:ss"}}</tt><br/>
        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
      </form>
    </file>
    <file name="protractor.js" type="protractor">
      var value = element(by.binding('example.value | date: "yyyy-MM-ddTHH:mm:ss"'));
      var valid = element(by.binding('myForm.input.$valid'));

      // currently protractor/webdriver does not support
      // sending keys to all known HTML5 input controls
      // for various browsers (https://github.com/angular/protractor/issues/562).
      function setInput(val) {
        // set the value of the element and force validation.
        var scr = "var ipt = document.getElementById('exampleInput'); " +
        "ipt.value = '" + val + "';" +
        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
        browser.executeScript(scr);
      }

      it('should initialize to model', function() {
        expect(value.getText()).toContain('2010-12-28T14:57:00');
        expect(valid.getText()).toContain('myForm.input.$valid = true');
      });

      it('should be invalid if empty', function() {
        setInput('');
        expect(value.getText()).toEqual('value =');
        expect(valid.getText()).toContain('myForm.input.$valid = false');
      });

      it('should be invalid if over max', function() {
        setInput('2015-01-01T23:59:00');
        expect(value.getText()).toContain('');
        expect(valid.getText()).toContain('myForm.input.$valid = false');
      });
    </file>
    </example>
    */
  'datetime-local': createDateInputType('datetimelocal', DATETIMELOCAL_REGEXP,
      createDateParser(DATETIMELOCAL_REGEXP, ['yyyy', 'MM', 'dd', 'HH', 'mm', 'ss', 'sss']),
      'yyyy-MM-ddTHH:mm:ss.sss'),

  /**
   * @ngdoc input
   * @name input[time]
   *
   * @description
   * Input with time validation and transformation. In browsers that do not yet support
   * the HTML5 time input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
   * local time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a
   * Date object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.
   *
   * The model must always be a Date object, otherwise Angular will throw an error.
   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
   *
   * The timezone to be used to read/write the `Date` instance in the model can be defined using
   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
   *
   * @param {string} ngModel Assignable angular expression to data-bind to.
   * @param {string=} name Property name of the form under which the control is published.
   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
   *   This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this
   *   attribute (e.g. `min="{{minTime | date:'HH:mm:ss'}}"`). Note that `min` will also add
   *   native HTML5 constraint validation.
   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
   *   This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this
   *   attribute (e.g. `max="{{maxTime | date:'HH:mm:ss'}}"`). Note that `max` will also add
   *   native HTML5 constraint validation.
   * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO time string the
   *   `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
   * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO time string the
   *   `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
   * @param {string=} required Sets `required` validation error key if the value is not entered.
   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
   *    `required` when you want to data-bind to the `required` attribute.
   * @param {string=} ngChange Angular expression to be executed when input changes due to user
   *    interaction with the input element.
   *
   * @example
   <example name="time-input-directive" module="timeExample">
   <file name="index.html">
     <script>
      angular.module('timeExample', [])
        .controller('DateController', ['$scope', function($scope) {
          $scope.example = {
            value: new Date(1970, 0, 1, 14, 57, 0)
          };
        }]);
     </script>
     <form name="myForm" ng-controller="DateController as dateCtrl">
        <label for="exampleInput">Pick a time between 8am and 5pm:</label>
        <input type="time" id="exampleInput" name="input" ng-model="example.value"
            placeholder="HH:mm:ss" min="08:00:00" max="17:00:00" required />
        <div role="alert">
          <span class="error" ng-show="myForm.input.$error.required">
              Required!</span>
          <span class="error" ng-show="myForm.input.$error.time">
              Not a valid date!</span>
        </div>
        <tt>value = {{example.value | date: "HH:mm:ss"}}</tt><br/>
        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
     </form>
   </file>
   <file name="protractor.js" type="protractor">
      var value = element(by.binding('example.value | date: "HH:mm:ss"'));
      var valid = element(by.binding('myForm.input.$valid'));

      // currently protractor/webdriver does not support
      // sending keys to all known HTML5 input controls
      // for various browsers (https://github.com/angular/protractor/issues/562).
      function setInput(val) {
        // set the value of the element and force validation.
        var scr = "var ipt = document.getElementById('exampleInput'); " +
        "ipt.value = '" + val + "';" +
        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
        browser.executeScript(scr);
      }

      it('should initialize to model', function() {
        expect(value.getText()).toContain('14:57:00');
        expect(valid.getText()).toContain('myForm.input.$valid = true');
      });

      it('should be invalid if empty', function() {
        setInput('');
        expect(value.getText()).toEqual('value =');
        expect(valid.getText()).toContain('myForm.input.$valid = false');
      });

      it('should be invalid if over max', function() {
        setInput('23:59:00');
        expect(value.getText()).toContain('');
        expect(valid.getText()).toContain('myForm.input.$valid = false');
      });
   </file>
   </example>
   */
  'time': createDateInputType('time', TIME_REGEXP,
      createDateParser(TIME_REGEXP, ['HH', 'mm', 'ss', 'sss']),
     'HH:mm:ss.sss'),

   /**
    * @ngdoc input
    * @name input[week]
    *
    * @description
    * Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support
    * the HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
    * week format (yyyy-W##), for example: `2013-W02`.
    *
    * The model must always be a Date object, otherwise Angular will throw an error.
    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
    *
    * The timezone to be used to read/write the `Date` instance in the model can be defined using
    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
    *
    * @param {string} ngModel Assignable angular expression to data-bind to.
    * @param {string=} name Property name of the form under which the control is published.
    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
    *   This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this
    *   attribute (e.g. `min="{{minWeek | date:'yyyy-Www'}}"`). Note that `min` will also add
    *   native HTML5 constraint validation.
    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
    *   This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this
    *   attribute (e.g. `max="{{maxWeek | date:'yyyy-Www'}}"`). Note that `max` will also add
    *   native HTML5 constraint validation.
    * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO week string
    *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
    * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO week string
    *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
    * @param {string=} required Sets `required` validation error key if the value is not entered.
    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
    *    `required` when you want to data-bind to the `required` attribute.
    * @param {string=} ngChange Angular expression to be executed when input changes due to user
    *    interaction with the input element.
    *
    * @example
    <example name="week-input-directive" module="weekExample">
    <file name="index.html">
      <script>
      angular.module('weekExample', [])
        .controller('DateController', ['$scope', function($scope) {
          $scope.example = {
            value: new Date(2013, 0, 3)
          };
        }]);
      </script>
      <form name="myForm" ng-controller="DateController as dateCtrl">
        <label>Pick a date between in 2013:
          <input id="exampleInput" type="week" name="input" ng-model="example.value"
                 placeholder="YYYY-W##" min="2012-W32"
                 max="2013-W52" required />
        </label>
        <div role="alert">
          <span class="error" ng-show="myForm.input.$error.required">
              Required!</span>
          <span class="error" ng-show="myForm.input.$error.week">
              Not a valid date!</span>
        </div>
        <tt>value = {{example.value | date: "yyyy-Www"}}</tt><br/>
        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
      </form>
    </file>
    <file name="protractor.js" type="protractor">
      var value = element(by.binding('example.value | date: "yyyy-Www"'));
      var valid = element(by.binding('myForm.input.$valid'));

      // currently protractor/webdriver does not support
      // sending keys to all known HTML5 input controls
      // for various browsers (https://github.com/angular/protractor/issues/562).
      function setInput(val) {
        // set the value of the element and force validation.
        var scr = "var ipt = document.getElementById('exampleInput'); " +
        "ipt.value = '" + val + "';" +
        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
        browser.executeScript(scr);
      }

      it('should initialize to model', function() {
        expect(value.getText()).toContain('2013-W01');
        expect(valid.getText()).toContain('myForm.input.$valid = true');
      });

      it('should be invalid if empty', function() {
        setInput('');
        expect(value.getText()).toEqual('value =');
        expect(valid.getText()).toContain('myForm.input.$valid = false');
      });

      it('should be invalid if over max', function() {
        setInput('2015-W01');
        expect(value.getText()).toContain('');
        expect(valid.getText()).toContain('myForm.input.$valid = false');
      });
    </file>
    </example>
    */
  'week': createDateInputType('week', WEEK_REGEXP, weekParser, 'yyyy-Www'),

  /**
   * @ngdoc input
   * @name input[month]
   *
   * @description
   * Input with month validation and transformation. In browsers that do not yet support
   * the HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
   * month format (yyyy-MM), for example: `2009-01`.
   *
   * The model must always be a Date object, otherwise Angular will throw an error.
   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
   * If the model is not set to the first of the month, the next view to model update will set it
   * to the first of the month.
   *
   * The timezone to be used to read/write the `Date` instance in the model can be defined using
   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
   *
   * @param {string} ngModel Assignable angular expression to data-bind to.
   * @param {string=} name Property name of the form under which the control is published.
   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
   *   This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this
   *   attribute (e.g. `min="{{minMonth | date:'yyyy-MM'}}"`). Note that `min` will also add
   *   native HTML5 constraint validation.
   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
   *   This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this
   *   attribute (e.g. `max="{{maxMonth | date:'yyyy-MM'}}"`). Note that `max` will also add
   *   native HTML5 constraint validation.
   * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO week string
   *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
   * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO week string
   *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.

   * @param {string=} required Sets `required` validation error key if the value is not entered.
   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
   *    `required` when you want to data-bind to the `required` attribute.
   * @param {string=} ngChange Angular expression to be executed when input changes due to user
   *    interaction with the input element.
   *
   * @example
   <example name="month-input-directive" module="monthExample">
   <file name="index.html">
     <script>
      angular.module('monthExample', [])
        .controller('DateController', ['$scope', function($scope) {
          $scope.example = {
            value: new Date(2013, 9, 1)
          };
        }]);
     </script>
     <form name="myForm" ng-controller="DateController as dateCtrl">
       <label for="exampleInput">Pick a month in 2013:</label>
       <input id="exampleInput" type="month" name="input" ng-model="example.value"
          placeholder="yyyy-MM" min="2013-01" max="2013-12" required />
       <div role="alert">
         <span class="error" ng-show="myForm.input.$error.required">
            Required!</span>
         <span class="error" ng-show="myForm.input.$error.month">
            Not a valid month!</span>
       </div>
       <tt>value = {{example.value | date: "yyyy-MM"}}</tt><br/>
       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
     </form>
   </file>
   <file name="protractor.js" type="protractor">
      var value = element(by.binding('example.value | date: "yyyy-MM"'));
      var valid = element(by.binding('myForm.input.$valid'));

      // currently protractor/webdriver does not support
      // sending keys to all known HTML5 input controls
      // for various browsers (https://github.com/angular/protractor/issues/562).
      function setInput(val) {
        // set the value of the element and force validation.
        var scr = "var ipt = document.getElementById('exampleInput'); " +
        "ipt.value = '" + val + "';" +
        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
        browser.executeScript(scr);
      }

      it('should initialize to model', function() {
        expect(value.getText()).toContain('2013-10');
        expect(valid.getText()).toContain('myForm.input.$valid = true');
      });

      it('should be invalid if empty', function() {
        setInput('');
        expect(value.getText()).toEqual('value =');
        expect(valid.getText()).toContain('myForm.input.$valid = false');
      });

      it('should be invalid if over max', function() {
        setInput('2015-01');
        expect(value.getText()).toContain('');
        expect(valid.getText()).toContain('myForm.input.$valid = false');
      });
   </file>
   </example>
   */
  'month': createDateInputType('month', MONTH_REGEXP,
     createDateParser(MONTH_REGEXP, ['yyyy', 'MM']),
     'yyyy-MM'),

  /**
   * @ngdoc input
   * @name input[number]
   *
   * @description
   * Text input with number validation and transformation. Sets the `number` validation
   * error if not a valid number.
   *
   * <div class="alert alert-warning">
   * The model must always be of type `number` otherwise Angular will throw an error.
   * Be aware that a string containing a number is not enough. See the {@link ngModel:numfmt}
   * error docs for more information and an example of how to convert your model if necessary.
   * </div>
   *
   * ## Issues with HTML5 constraint validation
   *
   * In browsers that follow the
   * [HTML5 specification](https://html.spec.whatwg.org/multipage/forms.html#number-state-%28type=number%29),
   * `input[number]` does not work as expected with {@link ngModelOptions `ngModelOptions.allowInvalid`}.
   * If a non-number is entered in the input, the browser will report the value as an empty string,
   * which means the view / model values in `ngModel` and subsequently the scope value
   * will also be an empty string.
   *
   *
   * @param {string} ngModel Assignable angular expression to data-bind to.
   * @param {string=} name Property name of the form under which the control is published.
   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
   * @param {string=} required Sets `required` validation error key if the value is not entered.
   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
   *    `required` when you want to data-bind to the `required` attribute.
   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
   *    minlength.
   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
   *    any length.
   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
   *    that contains the regular expression body that will be converted to a regular expression
   *    as in the ngPattern directive.
   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
   *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.
   *    If the expression evaluates to a RegExp object, then this is used directly.
   *    If the expression evaluates to a string, then it will be converted to a RegExp
   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
   *    `new RegExp('^abc$')`.<br />
   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
   *    start at the index of the last search's match, thus not taking the whole input value into
   *    account.
   * @param {string=} ngChange Angular expression to be executed when input changes due to user
   *    interaction with the input element.
   *
   * @example
      <example name="number-input-directive" module="numberExample">
        <file name="index.html">
         <script>
           angular.module('numberExample', [])
             .controller('ExampleController', ['$scope', function($scope) {
               $scope.example = {
                 value: 12
               };
             }]);
         </script>
         <form name="myForm" ng-controller="ExampleController">
           <label>Number:
             <input type="number" name="input" ng-model="example.value"
                    min="0" max="99" required>
          </label>
           <div role="alert">
             <span class="error" ng-show="myForm.input.$error.required">
               Required!</span>
             <span class="error" ng-show="myForm.input.$error.number">
               Not valid number!</span>
           </div>
           <tt>value = {{example.value}}</tt><br/>
           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
          </form>
        </file>
        <file name="protractor.js" type="protractor">
          var value = element(by.binding('example.value'));
          var valid = element(by.binding('myForm.input.$valid'));
          var input = element(by.model('example.value'));

          it('should initialize to model', function() {
            expect(value.getText()).toContain('12');
            expect(valid.getText()).toContain('true');
          });

          it('should be invalid if empty', function() {
            input.clear();
            input.sendKeys('');
            expect(value.getText()).toEqual('value =');
            expect(valid.getText()).toContain('false');
          });

          it('should be invalid if over max', function() {
            input.clear();
            input.sendKeys('123');
            expect(value.getText()).toEqual('value =');
            expect(valid.getText()).toContain('false');
          });
        </file>
      </example>
   */
  'number': numberInputType,


  /**
   * @ngdoc input
   * @name input[url]
   *
   * @description
   * Text input with URL validation. Sets the `url` validation error key if the content is not a
   * valid URL.
   *
   * <div class="alert alert-warning">
   * **Note:** `input[url]` uses a regex to validate urls that is derived from the regex
   * used in Chromium. If you need stricter validation, you can use `ng-pattern` or modify
   * the built-in validators (see the {@link guide/forms Forms guide})
   * </div>
   *
   * @param {string} ngModel Assignable angular expression to data-bind to.
   * @param {string=} name Property name of the form under which the control is published.
   * @param {string=} required Sets `required` validation error key if the value is not entered.
   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
   *    `required` when you want to data-bind to the `required` attribute.
   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
   *    minlength.
   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
   *    any length.
   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
   *    that contains the regular expression body that will be converted to a regular expression
   *    as in the ngPattern directive.
   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
   *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.
   *    If the expression evaluates to a RegExp object, then this is used directly.
   *    If the expression evaluates to a string, then it will be converted to a RegExp
   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
   *    `new RegExp('^abc$')`.<br />
   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
   *    start at the index of the last search's match, thus not taking the whole input value into
   *    account.
   * @param {string=} ngChange Angular expression to be executed when input changes due to user
   *    interaction with the input element.
   *
   * @example
      <example name="url-input-directive" module="urlExample">
        <file name="index.html">
         <script>
           angular.module('urlExample', [])
             .controller('ExampleController', ['$scope', function($scope) {
               $scope.url = {
                 text: 'http://google.com'
               };
             }]);
         </script>
         <form name="myForm" ng-controller="ExampleController">
           <label>URL:
             <input type="url" name="input" ng-model="url.text" required>
           <label>
           <div role="alert">
             <span class="error" ng-show="myForm.input.$error.required">
               Required!</span>
             <span class="error" ng-show="myForm.input.$error.url">
               Not valid url!</span>
           </div>
           <tt>text = {{url.text}}</tt><br/>
           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>
          </form>
        </file>
        <file name="protractor.js" type="protractor">
          var text = element(by.binding('url.text'));
          var valid = element(by.binding('myForm.input.$valid'));
          var input = element(by.model('url.text'));

          it('should initialize to model', function() {
            expect(text.getText()).toContain('http://google.com');
            expect(valid.getText()).toContain('true');
          });

          it('should be invalid if empty', function() {
            input.clear();
            input.sendKeys('');

            expect(text.getText()).toEqual('text =');
            expect(valid.getText()).toContain('false');
          });

          it('should be invalid if not url', function() {
            input.clear();
            input.sendKeys('box');

            expect(valid.getText()).toContain('false');
          });
        </file>
      </example>
   */
  'url': urlInputType,


  /**
   * @ngdoc input
   * @name input[email]
   *
   * @description
   * Text input with email validation. Sets the `email` validation error key if not a valid email
   * address.
   *
   * <div class="alert alert-warning">
   * **Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex
   * used in Chromium. If you need stricter validation (e.g. requiring a top-level domain), you can
   * use `ng-pattern` or modify the built-in validators (see the {@link guide/forms Forms guide})
   * </div>
   *
   * @param {string} ngModel Assignable angular expression to data-bind to.
   * @param {string=} name Property name of the form under which the control is published.
   * @param {string=} required Sets `required` validation error key if the value is not entered.
   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
   *    `required` when you want to data-bind to the `required` attribute.
   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
   *    minlength.
   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
   *    any length.
   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
   *    that contains the regular expression body that will be converted to a regular expression
   *    as in the ngPattern directive.
   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
   *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.
   *    If the expression evaluates to a RegExp object, then this is used directly.
   *    If the expression evaluates to a string, then it will be converted to a RegExp
   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
   *    `new RegExp('^abc$')`.<br />
   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
   *    start at the index of the last search's match, thus not taking the whole input value into
   *    account.
   * @param {string=} ngChange Angular expression to be executed when input changes due to user
   *    interaction with the input element.
   *
   * @example
      <example name="email-input-directive" module="emailExample">
        <file name="index.html">
         <script>
           angular.module('emailExample', [])
             .controller('ExampleController', ['$scope', function($scope) {
               $scope.email = {
                 text: 'me@example.com'
               };
             }]);
         </script>
           <form name="myForm" ng-controller="ExampleController">
             <label>Email:
               <input type="email" name="input" ng-model="email.text" required>
             </label>
             <div role="alert">
               <span class="error" ng-show="myForm.input.$error.required">
                 Required!</span>
               <span class="error" ng-show="myForm.input.$error.email">
                 Not valid email!</span>
             </div>
             <tt>text = {{email.text}}</tt><br/>
             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>
           </form>
         </file>
        <file name="protractor.js" type="protractor">
          var text = element(by.binding('email.text'));
          var valid = element(by.binding('myForm.input.$valid'));
          var input = element(by.model('email.text'));

          it('should initialize to model', function() {
            expect(text.getText()).toContain('me@example.com');
            expect(valid.getText()).toContain('true');
          });

          it('should be invalid if empty', function() {
            input.clear();
            input.sendKeys('');
            expect(text.getText()).toEqual('text =');
            expect(valid.getText()).toContain('false');
          });

          it('should be invalid if not email', function() {
            input.clear();
            input.sendKeys('xxx');

            expect(valid.getText()).toContain('false');
          });
        </file>
      </example>
   */
  'email': emailInputType,


  /**
   * @ngdoc input
   * @name input[radio]
   *
   * @description
   * HTML radio button.
   *
   * @param {string} ngModel Assignable angular expression to data-bind to.
   * @param {string} value The value to which the `ngModel` expression should be set when selected.
   *    Note that `value` only supports `string` values, i.e. the scope model needs to be a string,
   *    too. Use `ngValue` if you need complex models (`number`, `object`, ...).
   * @param {string=} name Property name of the form under which the control is published.
   * @param {string=} ngChange Angular expression to be executed when input changes due to user
   *    interaction with the input element.
   * @param {string} ngValue Angular expression to which `ngModel` will be be set when the radio
   *    is selected. Should be used instead of the `value` attribute if you need
   *    a non-string `ngModel` (`boolean`, `array`, ...).
   *
   * @example
      <example name="radio-input-directive" module="radioExample">
        <file name="index.html">
         <script>
           angular.module('radioExample', [])
             .controller('ExampleController', ['$scope', function($scope) {
               $scope.color = {
                 name: 'blue'
               };
               $scope.specialValue = {
                 "id": "12345",
                 "value": "green"
               };
             }]);
         </script>
         <form name="myForm" ng-controller="ExampleController">
           <label>
             <input type="radio" ng-model="color.name" value="red">
             Red
           </label><br/>
           <label>
             <input type="radio" ng-model="color.name" ng-value="specialValue">
             Green
           </label><br/>
           <label>
             <input type="radio" ng-model="color.name" value="blue">
             Blue
           </label><br/>
           <tt>color = {{color.name | json}}</tt><br/>
          </form>
          Note that `ng-value="specialValue"` sets radio item's value to be the value of `$scope.specialValue`.
        </file>
        <file name="protractor.js" type="protractor">
          it('should change state', function() {
            var inputs = element.all(by.model('color.name'));
            var color = element(by.binding('color.name'));

            expect(color.getText()).toContain('blue');

            inputs.get(0).click();
            expect(color.getText()).toContain('red');

            inputs.get(1).click();
            expect(color.getText()).toContain('green');
          });
        </file>
      </example>
   */
  'radio': radioInputType,

  /**
   * @ngdoc input
   * @name input[range]
   *
   * @description
   * Native range input with validation and transformation.
   *
   * <div class="alert alert-warning">
   *   <p>
   *     In v1.5.9+, in order to avoid interfering with already existing, custom directives for
   *     `input[range]`, you need to let Angular know that you want to enable its built-in support.
   *     You can do this by adding the `ng-input-range` attribute to the input element. E.g.:
   *     `<input type="range" ng-input-range ... />`
   *   </p><br />
   *   <p>
   *     Input elements without the `ng-input-range` attibute will continue to be treated the same
   *     as in previous versions (e.g. their model value will be a string not a number and Angular
   *     will not take `min`/`max`/`step` attributes and properties into account).
   *   </p><br />
   *   <p>
   *     **Note:** From v1.6.x onwards, the support for `input[range]` will be always enabled and
   *     the `ng-input-range` attribute will have no effect.
   *   </p><br />
   *   <p>
   *     This documentation page refers to elements which have the built-in support enabled; i.e.
   *     elements _with_ the `ng-input-range` attribute.
   *   </p>
   * </div>
   *
   * The model for the range input must always be a `Number`.
   *
   * IE9 and other browsers that do not support the `range` type fall back
   * to a text input without any default values for `min`, `max` and `step`. Model binding,
   * validation and number parsing are nevertheless supported.
   *
   * Browsers that support range (latest Chrome, Safari, Firefox, Edge) treat `input[range]`
   * in a way that never allows the input to hold an invalid value. That means:
   * - any non-numerical value is set to `(max + min) / 2`.
   * - any numerical value that is less than the current min val, or greater than the current max val
   * is set to the min / max val respectively.
   * - additionally, the current `step` is respected, so the nearest value that satisfies a step
   * is used.
   *
   * See the [HTML Spec on input[type=range]](https://www.w3.org/TR/html5/forms.html#range-state-(type=range))
   * for more info.
   *
   * This has the following consequences for Angular:
   *
   * Since the element value should always reflect the current model value, a range input
   * will set the bound ngModel expression to the value that the browser has set for the
   * input element. For example, in the following input `<input type="range" ng-input-range ng-model="model.value">`,
   * if the application sets `model.value = null`, the browser will set the input to `'50'`.
   * Angular will then set the model to `50`, to prevent input and model value being out of sync.
   *
   * That means the model for range will immediately be set to `50` after `ngModel` has been
   * initialized. It also means a range input can never have the required error.
   *
   * This does not only affect changes to the model value, but also to the values of the `min`,
   * `max`, and `step` attributes. When these change in a way that will cause the browser to modify
   * the input value, Angular will also update the model value.
   *
   * Automatic value adjustment also means that a range input element can never have the `required`,
   * `min`, or `max` errors.
   *
   * However, `step` is currently only fully implemented by Firefox. Other browsers have problems
   * when the step value changes dynamically - they do not adjust the element value correctly, but
   * instead may set the `stepMismatch` error. If that's the case, the Angular will set the `step`
   * error on the input, and set the model to `undefined`.
   *
   * Note that `input[range]` is not compatible with `ngMax`, `ngMin`, and `ngStep`, because they do
   * not set the `min` and `max` attributes, which means that the browser won't automatically adjust
   * the input value based on their values, and will always assume min = 0, max = 100, and step = 1.
   *
   * @param           ngInputRange The presense of this attribute enables the built-in support for
   *                  `input[range]`.
   * @param {string}  ngModel Assignable angular expression to data-bind to.
   * @param {string=} name Property name of the form under which the control is published.
   * @param {string=} min Sets the `min` validation to ensure that the value entered is greater
   *                  than `min`. Can be interpolated.
   * @param {string=} max Sets the `max` validation to ensure that the value entered is less than `max`.
   *                  Can be interpolated.
   * @param {string=} step Sets the `step` validation to ensure that the value entered matches the `step`
   *                  Can be interpolated.
   * @param {string=} ngChange Angular expression to be executed when the ngModel value changes due
   *                  to user interaction with the input element.
   * @param {expression=} ngChecked If the expression is truthy, then the `checked` attribute will be set on the
   *                      element. **Note** : `ngChecked` should not be used alongside `ngModel`.
   *                      Checkout {@link ng.directive:ngChecked ngChecked} for usage.
   *
   * @example
      <example name="range-input-directive" module="rangeExample">
        <file name="index.html">
          <script>
            angular.module('rangeExample', [])
              .controller('ExampleController', ['$scope', function($scope) {
                $scope.value = 75;
                $scope.min = 10;
                $scope.max = 90;
              }]);
          </script>
          <form name="myForm" ng-controller="ExampleController">

            Model as range: <input type="range" ng-input-range name="range" ng-model="value" min="{{min}}"  max="{{max}}">
            <hr>
            Model as number: <input type="number" ng-model="value"><br>
            Min: <input type="number" ng-model="min"><br>
            Max: <input type="number" ng-model="max"><br>
            value = <code>{{value}}</code><br/>
            myForm.range.$valid = <code>{{myForm.range.$valid}}</code><br/>
            myForm.range.$error = <code>{{myForm.range.$error}}</code>
          </form>
        </file>
      </example>

   * ## Range Input with ngMin & ngMax attributes

   * @example
      <example name="range-input-directive-ng" module="rangeExample">
        <file name="index.html">
          <script>
            angular.module('rangeExample', [])
              .controller('ExampleController', ['$scope', function($scope) {
                $scope.value = 75;
                $scope.min = 10;
                $scope.max = 90;
              }]);
          </script>
          <form name="myForm" ng-controller="ExampleController">
            Model as range: <input type="range" ng-input-range name="range" ng-model="value" ng-min="min" ng-max="max">
            <hr>
            Model as number: <input type="number" ng-model="value"><br>
            Min: <input type="number" ng-model="min"><br>
            Max: <input type="number" ng-model="max"><br>
            value = <code>{{value}}</code><br/>
            myForm.range.$valid = <code>{{myForm.range.$valid}}</code><br/>
            myForm.range.$error = <code>{{myForm.range.$error}}</code>
          </form>
        </file>
      </example>

   */
  'range': rangeInputType,

  /**
   * @ngdoc input
   * @name input[checkbox]
   *
   * @description
   * HTML checkbox.
   *
   * @param {string} ngModel Assignable angular expression to data-bind to.
   * @param {string=} name Property name of the form under which the control is published.
   * @param {expression=} ngTrueValue The value to which the expression should be set when selected.
   * @param {expression=} ngFalseValue The value to which the expression should be set when not selected.
   * @param {string=} ngChange Angular expression to be executed when input changes due to user
   *    interaction with the input element.
   *
   * @example
      <example name="checkbox-input-directive" module="checkboxExample">
        <file name="index.html">
         <script>
           angular.module('checkboxExample', [])
             .controller('ExampleController', ['$scope', function($scope) {
               $scope.checkboxModel = {
                value1 : true,
                value2 : 'YES'
              };
             }]);
         </script>
         <form name="myForm" ng-controller="ExampleController">
           <label>Value1:
             <input type="checkbox" ng-model="checkboxModel.value1">
           </label><br/>
           <label>Value2:
             <input type="checkbox" ng-model="checkboxModel.value2"
                    ng-true-value="'YES'" ng-false-value="'NO'">
            </label><br/>
           <tt>value1 = {{checkboxModel.value1}}</tt><br/>
           <tt>value2 = {{checkboxModel.value2}}</tt><br/>
          </form>
        </file>
        <file name="protractor.js" type="protractor">
          it('should change state', function() {
            var value1 = element(by.binding('checkboxModel.value1'));
            var value2 = element(by.binding('checkboxModel.value2'));

            expect(value1.getText()).toContain('true');
            expect(value2.getText()).toContain('YES');

            element(by.model('checkboxModel.value1')).click();
            element(by.model('checkboxModel.value2')).click();

            expect(value1.getText()).toContain('false');
            expect(value2.getText()).toContain('NO');
          });
        </file>
      </example>
   */
  'checkbox': checkboxInputType,

  'hidden': noop,
  'button': noop,
  'submit': noop,
  'reset': noop,
  'file': noop
};

function stringBasedInputType(ctrl) {
  ctrl.$formatters.push(function(value) {
    return ctrl.$isEmpty(value) ? value : value.toString();
  });
}

function textInputType(scope, element, attr, ctrl, $sniffer, $browser) {
  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
  stringBasedInputType(ctrl);
}

function baseInputType(scope, element, attr, ctrl, $sniffer, $browser) {
  var type = lowercase(element[0].type);

  // In composition mode, users are still inputting intermediate text buffer,
  // hold the listener until composition is done.
  // More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent
  if (!$sniffer.android) {
    var composing = false;

    element.on('compositionstart', function() {
      composing = true;
    });

    element.on('compositionend', function() {
      composing = false;
      listener();
    });
  }

  var timeout;

  var listener = function(ev) {
    if (timeout) {
      $browser.defer.cancel(timeout);
      timeout = null;
    }
    if (composing) return;
    var value = element.val(),
        event = ev && ev.type;

    // By default we will trim the value
    // If the attribute ng-trim exists we will avoid trimming
    // If input type is 'password', the value is never trimmed
    if (type !== 'password' && (!attr.ngTrim || attr.ngTrim !== 'false')) {
      value = trim(value);
    }

    // If a control is suffering from bad input (due to native validators), browsers discard its
    // value, so it may be necessary to revalidate (by calling $setViewValue again) even if the
    // control's value is the same empty value twice in a row.
    if (ctrl.$viewValue !== value || (value === '' && ctrl.$$hasNativeValidators)) {
      ctrl.$setViewValue(value, event);
    }
  };

  // if the browser does support "input" event, we are fine - except on IE9 which doesn't fire the
  // input event on backspace, delete or cut
  if ($sniffer.hasEvent('input')) {
    element.on('input', listener);
  } else {
    var deferListener = function(ev, input, origValue) {
      if (!timeout) {
        timeout = $browser.defer(function() {
          timeout = null;
          if (!input || input.value !== origValue) {
            listener(ev);
          }
        });
      }
    };

    element.on('keydown', /** @this */ function(event) {
      var key = event.keyCode;

      // ignore
      //    command            modifiers                   arrows
      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;

      deferListener(event, this, this.value);
    });

    // if user modifies input value using context menu in IE, we need "paste" and "cut" events to catch it
    if ($sniffer.hasEvent('paste')) {
      element.on('paste cut', deferListener);
    }
  }

  // if user paste into input using mouse on older browser
  // or form autocomplete on newer browser, we need "change" event to catch it
  element.on('change', listener);

  // Some native input types (date-family) have the ability to change validity without
  // firing any input/change events.
  // For these event types, when native validators are present and the browser supports the type,
  // check for validity changes on various DOM events.
  if (PARTIAL_VALIDATION_TYPES[type] && ctrl.$$hasNativeValidators && type === attr.type) {
    element.on(PARTIAL_VALIDATION_EVENTS, /** @this */ function(ev) {
      if (!timeout) {
        var validity = this[VALIDITY_STATE_PROPERTY];
        var origBadInput = validity.badInput;
        var origTypeMismatch = validity.typeMismatch;
        timeout = $browser.defer(function() {
          timeout = null;
          if (validity.badInput !== origBadInput || validity.typeMismatch !== origTypeMismatch) {
            listener(ev);
          }
        });
      }
    });
  }

  ctrl.$render = function() {
    // Workaround for Firefox validation #12102.
    var value = ctrl.$isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue;
    if (element.val() !== value) {
      element.val(value);
    }
  };
}

function weekParser(isoWeek, existingDate) {
  if (isDate(isoWeek)) {
    return isoWeek;
  }

  if (isString(isoWeek)) {
    WEEK_REGEXP.lastIndex = 0;
    var parts = WEEK_REGEXP.exec(isoWeek);
    if (parts) {
      var year = +parts[1],
          week = +parts[2],
          hours = 0,
          minutes = 0,
          seconds = 0,
          milliseconds = 0,
          firstThurs = getFirstThursdayOfYear(year),
          addDays = (week - 1) * 7;

      if (existingDate) {
        hours = existingDate.getHours();
        minutes = existingDate.getMinutes();
        seconds = existingDate.getSeconds();
        milliseconds = existingDate.getMilliseconds();
      }

      return new Date(year, 0, firstThurs.getDate() + addDays, hours, minutes, seconds, milliseconds);
    }
  }

  return NaN;
}

function createDateParser(regexp, mapping) {
  return function(iso, date) {
    var parts, map;

    if (isDate(iso)) {
      return iso;
    }

    if (isString(iso)) {
      // When a date is JSON'ified to wraps itself inside of an extra
      // set of double quotes. This makes the date parsing code unable
      // to match the date string and parse it as a date.
      if (iso.charAt(0) === '"' && iso.charAt(iso.length - 1) === '"') {
        iso = iso.substring(1, iso.length - 1);
      }
      if (ISO_DATE_REGEXP.test(iso)) {
        return new Date(iso);
      }
      regexp.lastIndex = 0;
      parts = regexp.exec(iso);

      if (parts) {
        parts.shift();
        if (date) {
          map = {
            yyyy: date.getFullYear(),
            MM: date.getMonth() + 1,
            dd: date.getDate(),
            HH: date.getHours(),
            mm: date.getMinutes(),
            ss: date.getSeconds(),
            sss: date.getMilliseconds() / 1000
          };
        } else {
          map = { yyyy: 1970, MM: 1, dd: 1, HH: 0, mm: 0, ss: 0, sss: 0 };
        }

        forEach(parts, function(part, index) {
          if (index < mapping.length) {
            map[mapping[index]] = +part;
          }
        });
        return new Date(map.yyyy, map.MM - 1, map.dd, map.HH, map.mm, map.ss || 0, map.sss * 1000 || 0);
      }
    }

    return NaN;
  };
}

function createDateInputType(type, regexp, parseDate, format) {
  return function dynamicDateInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter) {
    badInputChecker(scope, element, attr, ctrl);
    baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
    var timezone = ctrl && ctrl.$options && ctrl.$options.timezone;
    var previousDate;

    ctrl.$$parserName = type;
    ctrl.$parsers.push(function(value) {
      if (ctrl.$isEmpty(value)) return null;
      if (regexp.test(value)) {
        // Note: We cannot read ctrl.$modelValue, as there might be a different
        // parser/formatter in the processing chain so that the model
        // contains some different data format!
        var parsedDate = parseDate(value, previousDate);
        if (timezone) {
          parsedDate = convertTimezoneToLocal(parsedDate, timezone);
        }
        return parsedDate;
      }
      return undefined;
    });

    ctrl.$formatters.push(function(value) {
      if (value && !isDate(value)) {
        throw ngModelMinErr('datefmt', 'Expected `{0}` to be a date', value);
      }
      if (isValidDate(value)) {
        previousDate = value;
        if (previousDate && timezone) {
          previousDate = convertTimezoneToLocal(previousDate, timezone, true);
        }
        return $filter('date')(value, format, timezone);
      } else {
        previousDate = null;
        return '';
      }
    });

    if (isDefined(attr.min) || attr.ngMin) {
      var minVal;
      ctrl.$validators.min = function(value) {
        return !isValidDate(value) || isUndefined(minVal) || parseDate(value) >= minVal;
      };
      attr.$observe('min', function(val) {
        minVal = parseObservedDateValue(val);
        ctrl.$validate();
      });
    }

    if (isDefined(attr.max) || attr.ngMax) {
      var maxVal;
      ctrl.$validators.max = function(value) {
        return !isValidDate(value) || isUndefined(maxVal) || parseDate(value) <= maxVal;
      };
      attr.$observe('max', function(val) {
        maxVal = parseObservedDateValue(val);
        ctrl.$validate();
      });
    }

    function isValidDate(value) {
      // Invalid Date: getTime() returns NaN
      return value && !(value.getTime && value.getTime() !== value.getTime());
    }

    function parseObservedDateValue(val) {
      return isDefined(val) && !isDate(val) ? parseDate(val) || undefined : val;
    }
  };
}

function badInputChecker(scope, element, attr, ctrl) {
  var node = element[0];
  var nativeValidation = ctrl.$$hasNativeValidators = isObject(node.validity);
  if (nativeValidation) {
    ctrl.$parsers.push(function(value) {
      var validity = element.prop(VALIDITY_STATE_PROPERTY) || {};
      return validity.badInput || validity.typeMismatch ? undefined : value;
    });
  }
}

function numberFormatterParser(ctrl) {
  ctrl.$$parserName = 'number';
  ctrl.$parsers.push(function(value) {
    if (ctrl.$isEmpty(value))      return null;
    if (NUMBER_REGEXP.test(value)) return parseFloat(value);
    return undefined;
  });

  ctrl.$formatters.push(function(value) {
    if (!ctrl.$isEmpty(value)) {
      if (!isNumber(value)) {
        throw ngModelMinErr('numfmt', 'Expected `{0}` to be a number', value);
      }
      value = value.toString();
    }
    return value;
  });
}

function parseNumberAttrVal(val) {
  if (isDefined(val) && !isNumber(val)) {
    val = parseFloat(val);
  }
  return !isNumberNaN(val) ? val : undefined;
}

function isNumberInteger(num) {
  // See http://stackoverflow.com/questions/14636536/how-to-check-if-a-variable-is-an-integer-in-javascript#14794066
  // (minus the assumption that `num` is a number)

  // eslint-disable-next-line no-bitwise
  return (num | 0) === num;
}

function countDecimals(num) {
  var numString = num.toString();
  var decimalSymbolIndex = numString.indexOf('.');

  if (decimalSymbolIndex === -1) {
    if (-1 < num && num < 1) {
      // It may be in the exponential notation format (`1e-X`)
      var match = /e-(\d+)$/.exec(numString);

      if (match) {
        return Number(match[1]);
      }
    }

    return 0;
  }

  return numString.length - decimalSymbolIndex - 1;
}

function isValidForStep(viewValue, stepBase, step) {
  // At this point `stepBase` and `step` are expected to be non-NaN values
  // and `viewValue` is expected to be a valid stringified number.
  var value = Number(viewValue);

  // Due to limitations in Floating Point Arithmetic (e.g. `0.3 - 0.2 !== 0.1` or
  // `0.5 % 0.1 !== 0`), we need to convert all numbers to integers.
  if (!isNumberInteger(value) || !isNumberInteger(stepBase) || !isNumberInteger(step)) {
    var decimalCount = Math.max(countDecimals(value), countDecimals(stepBase), countDecimals(step));
    var multiplier = Math.pow(10, decimalCount);

    value = value * multiplier;
    stepBase = stepBase * multiplier;
    step = step * multiplier;
  }

  return (value - stepBase) % step === 0;
}

function numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {
  badInputChecker(scope, element, attr, ctrl);
  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
  numberFormatterParser(ctrl);

  var minVal;
  var maxVal;

  if (isDefined(attr.min) || attr.ngMin) {
    ctrl.$validators.min = function(value) {
      return ctrl.$isEmpty(value) || isUndefined(minVal) || value >= minVal;
    };

    attr.$observe('min', function(val) {
      minVal = parseNumberAttrVal(val);
      // TODO(matsko): implement validateLater to reduce number of validations
      ctrl.$validate();
    });
  }

  if (isDefined(attr.max) || attr.ngMax) {
    ctrl.$validators.max = function(value) {
      return ctrl.$isEmpty(value) || isUndefined(maxVal) || value <= maxVal;
    };

    attr.$observe('max', function(val) {
      maxVal = parseNumberAttrVal(val);
      // TODO(matsko): implement validateLater to reduce number of validations
      ctrl.$validate();
    });
  }
}

function rangeInputType(scope, element, attr, ctrl, $sniffer, $browser) {
  badInputChecker(scope, element, attr, ctrl);
  numberFormatterParser(ctrl);
  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);

  var supportsRange = ctrl.$$hasNativeValidators && element[0].type === 'range',
      minVal = supportsRange ? 0 : undefined,
      maxVal = supportsRange ? 100 : undefined,
      stepVal = supportsRange ? 1 : undefined,
      validity = element[0].validity,
      hasMinAttr = isDefined(attr.min),
      hasMaxAttr = isDefined(attr.max),
      hasStepAttr = isDefined(attr.step);

  var originalRender = ctrl.$render;

  ctrl.$render = supportsRange && isDefined(validity.rangeUnderflow) && isDefined(validity.rangeOverflow) ?
    //Browsers that implement range will set these values automatically, but reading the adjusted values after
    //$render would cause the min / max validators to be applied with the wrong value
    function rangeRender() {
      originalRender();
      ctrl.$setViewValue(element.val());
    } :
    originalRender;

  if (hasMinAttr) {
    ctrl.$validators.min = supportsRange ?
      // Since all browsers set the input to a valid value, we don't need to check validity
      function noopMinValidator() { return true; } :
      // non-support browsers validate the min val
      function minValidator(modelValue, viewValue) {
        return ctrl.$isEmpty(viewValue) || isUndefined(minVal) || viewValue >= minVal;
      };

    setInitialValueAndObserver('min', minChange);
  }

  if (hasMaxAttr) {
    ctrl.$validators.max = supportsRange ?
      // Since all browsers set the input to a valid value, we don't need to check validity
      function noopMaxValidator() { return true; } :
      // non-support browsers validate the max val
      function maxValidator(modelValue, viewValue) {
        return ctrl.$isEmpty(viewValue) || isUndefined(maxVal) || viewValue <= maxVal;
      };

    setInitialValueAndObserver('max', maxChange);
  }

  if (hasStepAttr) {
    ctrl.$validators.step = supportsRange ?
      function nativeStepValidator() {
        // Currently, only FF implements the spec on step change correctly (i.e. adjusting the
        // input element value to a valid value). It's possible that other browsers set the stepMismatch
        // validity error instead, so we can at least report an error in that case.
        return !validity.stepMismatch;
      } :
      // ngStep doesn't set the setp attr, so the browser doesn't adjust the input value as setting step would
      function stepValidator(modelValue, viewValue) {
        return ctrl.$isEmpty(viewValue) || isUndefined(stepVal) ||
               isValidForStep(viewValue, minVal || 0, stepVal);
      };

    setInitialValueAndObserver('step', stepChange);
  }

  function setInitialValueAndObserver(htmlAttrName, changeFn) {
    // interpolated attributes set the attribute value only after a digest, but we need the
    // attribute value when the input is first rendered, so that the browser can adjust the
    // input value based on the min/max value
    element.attr(htmlAttrName, attr[htmlAttrName]);
    attr.$observe(htmlAttrName, changeFn);
  }

  function minChange(val) {
    minVal = parseNumberAttrVal(val);
    // ignore changes before model is initialized
    if (isNumberNaN(ctrl.$modelValue)) {
      return;
    }

    if (supportsRange) {
      var elVal = element.val();
      // IE11 doesn't set the el val correctly if the minVal is greater than the element value
      if (minVal > elVal) {
        elVal = minVal;
        element.val(elVal);
      }
      ctrl.$setViewValue(elVal);
    } else {
      // TODO(matsko): implement validateLater to reduce number of validations
      ctrl.$validate();
    }
  }

  function maxChange(val) {
    maxVal = parseNumberAttrVal(val);
    // ignore changes before model is initialized
    if (isNumberNaN(ctrl.$modelValue)) {
      return;
    }

    if (supportsRange) {
      var elVal = element.val();
      // IE11 doesn't set the el val correctly if the maxVal is less than the element value
      if (maxVal < elVal) {
        element.val(maxVal);
        // IE11 and Chrome don't set the value to the minVal when max < min
        elVal = maxVal < minVal ? minVal : maxVal;
      }
      ctrl.$setViewValue(elVal);
    } else {
      // TODO(matsko): implement validateLater to reduce number of validations
      ctrl.$validate();
    }
  }

  function stepChange(val) {
    stepVal = parseNumberAttrVal(val);
    // ignore changes before model is initialized
    if (isNumberNaN(ctrl.$modelValue)) {
      return;
    }

    // Some browsers don't adjust the input value correctly, but set the stepMismatch error
    if (supportsRange && ctrl.$viewValue !== element.val()) {
      ctrl.$setViewValue(element.val());
    } else {
      // TODO(matsko): implement validateLater to reduce number of validations
      ctrl.$validate();
    }
  }
}

function urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {
  // Note: no badInputChecker here by purpose as `url` is only a validation
  // in browsers, i.e. we can always read out input.value even if it is not valid!
  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
  stringBasedInputType(ctrl);

  ctrl.$$parserName = 'url';
  ctrl.$validators.url = function(modelValue, viewValue) {
    var value = modelValue || viewValue;
    return ctrl.$isEmpty(value) || URL_REGEXP.test(value);
  };
}

function emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {
  // Note: no badInputChecker here by purpose as `url` is only a validation
  // in browsers, i.e. we can always read out input.value even if it is not valid!
  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
  stringBasedInputType(ctrl);

  ctrl.$$parserName = 'email';
  ctrl.$validators.email = function(modelValue, viewValue) {
    var value = modelValue || viewValue;
    return ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value);
  };
}

function radioInputType(scope, element, attr, ctrl) {
  // make the name unique, if not defined
  if (isUndefined(attr.name)) {
    element.attr('name', nextUid());
  }

  var listener = function(ev) {
    if (element[0].checked) {
      ctrl.$setViewValue(attr.value, ev && ev.type);
    }
  };

  element.on('click', listener);

  ctrl.$render = function() {
    var value = attr.value;
    // We generally use strict comparison. This is behavior we cannot change without a BC.
    // eslint-disable-next-line eqeqeq
    element[0].checked = (value == ctrl.$viewValue);
  };

  attr.$observe('value', ctrl.$render);
}

function parseConstantExpr($parse, context, name, expression, fallback) {
  var parseFn;
  if (isDefined(expression)) {
    parseFn = $parse(expression);
    if (!parseFn.constant) {
      throw ngModelMinErr('constexpr', 'Expected constant expression for `{0}`, but saw ' +
                                   '`{1}`.', name, expression);
    }
    return parseFn(context);
  }
  return fallback;
}

function checkboxInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter, $parse) {
  var trueValue = parseConstantExpr($parse, scope, 'ngTrueValue', attr.ngTrueValue, true);
  var falseValue = parseConstantExpr($parse, scope, 'ngFalseValue', attr.ngFalseValue, false);

  var listener = function(ev) {
    ctrl.$setViewValue(element[0].checked, ev && ev.type);
  };

  element.on('click', listener);

  ctrl.$render = function() {
    element[0].checked = ctrl.$viewValue;
  };

  // Override the standard `$isEmpty` because the $viewValue of an empty checkbox is always set to `false`
  // This is because of the parser below, which compares the `$modelValue` with `trueValue` to convert
  // it to a boolean.
  ctrl.$isEmpty = function(value) {
    return value === false;
  };

  ctrl.$formatters.push(function(value) {
    return equals(value, trueValue);
  });

  ctrl.$parsers.push(function(value) {
    return value ? trueValue : falseValue;
  });
}


/**
 * @ngdoc directive
 * @name textarea
 * @restrict E
 *
 * @description
 * HTML textarea element control with angular data-binding. The data-binding and validation
 * properties of this element are exactly the same as those of the
 * {@link ng.directive:input input element}.
 *
 * @param {string} ngModel Assignable angular expression to data-bind to.
 * @param {string=} name Property name of the form under which the control is published.
 * @param {string=} required Sets `required` validation error key if the value is not entered.
 * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
 *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
 *    `required` when you want to data-bind to the `required` attribute.
 * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
 *    minlength.
 * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
 *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any
 *    length.
 * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
 *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.
 *    If the expression evaluates to a RegExp object, then this is used directly.
 *    If the expression evaluates to a string, then it will be converted to a RegExp
 *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
 *    `new RegExp('^abc$')`.<br />
 *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
 *    start at the index of the last search's match, thus not taking the whole input value into
 *    account.
 * @param {string=} ngChange Angular expression to be executed when input changes due to user
 *    interaction with the input element.
 * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.
 *
 * @knownIssue
 *
 * When specifying the `placeholder` attribute of `<textarea>`, Internet Explorer will temporarily
 * insert the placeholder value as the textarea's content. If the placeholder value contains
 * interpolation (`{{ ... }}`), an error will be logged in the console when Angular tries to update
 * the value of the by-then-removed text node. This doesn't affect the functionality of the
 * textarea, but can be undesirable.
 *
 * You can work around this Internet Explorer issue by using `ng-attr-placeholder` instead of
 * `placeholder` on textareas, whenever you need interpolation in the placeholder value. You can
 * find more details on `ngAttr` in the
 * [Interpolation](guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes) section of the
 * Developer Guide.
 */


/**
 * @ngdoc directive
 * @name input
 * @restrict E
 *
 * @description
 * HTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,
 * input state control, and validation.
 * Input control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.
 *
 * <div class="alert alert-warning">
 * **Note:** Not every feature offered is available for all input types.
 * Specifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.
 * </div>
 *
 * @param {string} ngModel Assignable angular expression to data-bind to.
 * @param {string=} name Property name of the form under which the control is published.
 * @param {string=} required Sets `required` validation error key if the value is not entered.
 * @param {boolean=} ngRequired Sets `required` attribute if set to true
 * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
 *    minlength.
 * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
 *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any
 *    length.
 * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
 *    value does not match a RegExp found by evaluating the Angular expression given in the attribute value.
 *    If the expression evaluates to a RegExp object, then this is used directly.
 *    If the expression evaluates to a string, then it will be converted to a RegExp
 *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
 *    `new RegExp('^abc$')`.<br />
 *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
 *    start at the index of the last search's match, thus not taking the whole input value into
 *    account.
 * @param {string=} ngChange Angular expression to be executed when input changes due to user
 *    interaction with the input element.
 * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.
 *    This parameter is ignored for input[type=password] controls, which will never trim the
 *    input.
 *
 * @example
    <example name="input-directive" module="inputExample">
      <file name="index.html">
       <script>
          angular.module('inputExample', [])
            .controller('ExampleController', ['$scope', function($scope) {
              $scope.user = {name: 'guest', last: 'visitor'};
            }]);
       </script>
       <div ng-controller="ExampleController">
         <form name="myForm">
           <label>
              User name:
              <input type="text" name="userName" ng-model="user.name" required>
           </label>
           <div role="alert">
             <span class="error" ng-show="myForm.userName.$error.required">
              Required!</span>
           </div>
           <label>
              Last name:
              <input type="text" name="lastName" ng-model="user.last"
              ng-minlength="3" ng-maxlength="10">
           </label>
           <div role="alert">
             <span class="error" ng-show="myForm.lastName.$error.minlength">
               Too short!</span>
             <span class="error" ng-show="myForm.lastName.$error.maxlength">
               Too long!</span>
           </div>
         </form>
         <hr>
         <tt>user = {{user}}</tt><br/>
         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br/>
         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br/>
         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br/>
         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br/>
         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br/>
         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br/>
       </div>
      </file>
      <file name="protractor.js" type="protractor">
        var user = element(by.exactBinding('user'));
        var userNameValid = element(by.binding('myForm.userName.$valid'));
        var lastNameValid = element(by.binding('myForm.lastName.$valid'));
        var lastNameError = element(by.binding('myForm.lastName.$error'));
        var formValid = element(by.binding('myForm.$valid'));
        var userNameInput = element(by.model('user.name'));
        var userLastInput = element(by.model('user.last'));

        it('should initialize to model', function() {
          expect(user.getText()).toContain('{"name":"guest","last":"visitor"}');
          expect(userNameValid.getText()).toContain('true');
          expect(formValid.getText()).toContain('true');
        });

        it('should be invalid if empty when required', function() {
          userNameInput.clear();
          userNameInput.sendKeys('');

          expect(user.getText()).toContain('{"last":"visitor"}');
          expect(userNameValid.getText()).toContain('false');
          expect(formValid.getText()).toContain('false');
        });

        it('should be valid if empty when min length is set', function() {
          userLastInput.clear();
          userLastInput.sendKeys('');

          expect(user.getText()).toContain('{"name":"guest","last":""}');
          expect(lastNameValid.getText()).toContain('true');
          expect(formValid.getText()).toContain('true');
        });

        it('should be invalid if less than required min length', function() {
          userLastInput.clear();
          userLastInput.sendKeys('xx');

          expect(user.getText()).toContain('{"name":"guest"}');
          expect(lastNameValid.getText()).toContain('false');
          expect(lastNameError.getText()).toContain('minlength');
          expect(formValid.getText()).toContain('false');
        });

        it('should be invalid if longer than max length', function() {
          userLastInput.clear();
          userLastInput.sendKeys('some ridiculously long name');

          expect(user.getText()).toContain('{"name":"guest"}');
          expect(lastNameValid.getText()).toContain('false');
          expect(lastNameError.getText()).toContain('maxlength');
          expect(formValid.getText()).toContain('false');
        });
      </file>
    </example>
 */
var inputDirective = ['$browser', '$sniffer', '$filter', '$parse',
    function($browser, $sniffer, $filter, $parse) {
  return {
    restrict: 'E',
    require: ['?ngModel'],
    link: {
      pre: function(scope, element, attr, ctrls) {
        if (ctrls[0]) {
          var type = lowercase(attr.type);
          if ((type === 'range') && !attr.hasOwnProperty('ngInputRange')) {
            type = 'text';
          }
          (inputType[type] || inputType.text)(scope, element, attr, ctrls[0], $sniffer,
                                                              $browser, $filter, $parse);
        }
      }
    }
  };
}];



var CONSTANT_VALUE_REGEXP = /^(true|false|\d+)$/;
/**
 * @ngdoc directive
 * @name ngValue
 *
 * @description
 * Binds the given expression to the value of `<option>` or {@link input[radio] `input[radio]`},
 * so that when the element is selected, the {@link ngModel `ngModel`} of that element is set to
 * the bound value.
 *
 * `ngValue` is useful when dynamically generating lists of radio buttons using
 * {@link ngRepeat `ngRepeat`}, as shown below.
 *
 * Likewise, `ngValue` can be used to generate `<option>` elements for
 * the {@link select `select`} element. In that case however, only strings are supported
 * for the `value `attribute, so the resulting `ngModel` will always be a string.
 * Support for `select` models with non-string values is available via `ngOptions`.
 *
 * @element input
 * @param {string=} ngValue angular expression, whose value will be bound to the `value` attribute
 *   of the `input` element
 *
 * @example
    <example name="ngValue-directive" module="valueExample">
      <file name="index.html">
       <script>
          angular.module('valueExample', [])
            .controller('ExampleController', ['$scope', function($scope) {
              $scope.names = ['pizza', 'unicorns', 'robots'];
              $scope.my = { favorite: 'unicorns' };
            }]);
       </script>
        <form ng-controller="ExampleController">
          <h2>Which is your favorite?</h2>
            <label ng-repeat="name in names" for="{{name}}">
              {{name}}
              <input type="radio"
                     ng-model="my.favorite"
                     ng-value="name"
                     id="{{name}}"
                     name="favorite">
            </label>
          <div>You chose {{my.favorite}}</div>
        </form>
      </file>
      <file name="protractor.js" type="protractor">
        var favorite = element(by.binding('my.favorite'));

        it('should initialize to model', function() {
          expect(favorite.getText()).toContain('unicorns');
        });
        it('should bind the values to the inputs', function() {
          element.all(by.model('my.favorite')).get(0).click();
          expect(favorite.getText()).toContain('pizza');
        });
      </file>
    </example>
 */
var ngValueDirective = function() {
  return {
    restrict: 'A',
    priority: 100,
    compile: function(tpl, tplAttr) {
      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {
        return function ngValueConstantLink(scope, elm, attr) {
          attr.$set('value', scope.$eval(attr.ngValue));
        };
      } else {
        return function ngValueLink(scope, elm, attr) {
          scope.$watch(attr.ngValue, function valueWatchAction(value) {
            attr.$set('value', value);
          });
        };
      }
    }
  };
};

/**
 * @ngdoc directive
 * @name ngBind
 * @restrict AC
 *
 * @description
 * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element
 * with the value of a given expression, and to update the text content when the value of that
 * expression changes.
 *
 * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like
 * `{{ expression }}` which is similar but less verbose.
 *
 * It is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily
 * displayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an
 * element attribute, it makes the bindings invisible to the user while the page is loading.
 *
 * An alternative solution to this problem would be using the
 * {@link ng.directive:ngCloak ngCloak} directive.
 *
 *
 * @element ANY
 * @param {expression} ngBind {@link guide/expression Expression} to evaluate.
 *
 * @example
 * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.
   <example module="bindExample" name="ng-bind">
     <file name="index.html">
       <script>
         angular.module('bindExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.name = 'Whirled';
           }]);
       </script>
       <div ng-controller="ExampleController">
         <label>Enter name: <input type="text" ng-model="name"></label><br>
         Hello <span ng-bind="name"></span>!
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-bind', function() {
         var nameInput = element(by.model('name'));

         expect(element(by.binding('name')).getText()).toBe('Whirled');
         nameInput.clear();
         nameInput.sendKeys('world');
         expect(element(by.binding('name')).getText()).toBe('world');
       });
     </file>
   </example>
 */
var ngBindDirective = ['$compile', function($compile) {
  return {
    restrict: 'AC',
    compile: function ngBindCompile(templateElement) {
      $compile.$$addBindingClass(templateElement);
      return function ngBindLink(scope, element, attr) {
        $compile.$$addBindingInfo(element, attr.ngBind);
        element = element[0];
        scope.$watch(attr.ngBind, function ngBindWatchAction(value) {
          element.textContent = isUndefined(value) ? '' : value;
        });
      };
    }
  };
}];


/**
 * @ngdoc directive
 * @name ngBindTemplate
 *
 * @description
 * The `ngBindTemplate` directive specifies that the element
 * text content should be replaced with the interpolation of the template
 * in the `ngBindTemplate` attribute.
 * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`
 * expressions. This directive is needed since some HTML elements
 * (such as TITLE and OPTION) cannot contain SPAN elements.
 *
 * @element ANY
 * @param {string} ngBindTemplate template of form
 *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.
 *
 * @example
 * Try it here: enter text in text box and watch the greeting change.
   <example module="bindExample" name="ng-bind-template">
     <file name="index.html">
       <script>
         angular.module('bindExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.salutation = 'Hello';
             $scope.name = 'World';
           }]);
       </script>
       <div ng-controller="ExampleController">
        <label>Salutation: <input type="text" ng-model="salutation"></label><br>
        <label>Name: <input type="text" ng-model="name"></label><br>
        <pre ng-bind-template="{{salutation}} {{name}}!"></pre>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-bind', function() {
         var salutationElem = element(by.binding('salutation'));
         var salutationInput = element(by.model('salutation'));
         var nameInput = element(by.model('name'));

         expect(salutationElem.getText()).toBe('Hello World!');

         salutationInput.clear();
         salutationInput.sendKeys('Greetings');
         nameInput.clear();
         nameInput.sendKeys('user');

         expect(salutationElem.getText()).toBe('Greetings user!');
       });
     </file>
   </example>
 */
var ngBindTemplateDirective = ['$interpolate', '$compile', function($interpolate, $compile) {
  return {
    compile: function ngBindTemplateCompile(templateElement) {
      $compile.$$addBindingClass(templateElement);
      return function ngBindTemplateLink(scope, element, attr) {
        var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));
        $compile.$$addBindingInfo(element, interpolateFn.expressions);
        element = element[0];
        attr.$observe('ngBindTemplate', function(value) {
          element.textContent = isUndefined(value) ? '' : value;
        });
      };
    }
  };
}];


/**
 * @ngdoc directive
 * @name ngBindHtml
 *
 * @description
 * Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default,
 * the resulting HTML content will be sanitized using the {@link ngSanitize.$sanitize $sanitize} service.
 * To utilize this functionality, ensure that `$sanitize` is available, for example, by including {@link
 * ngSanitize} in your module's dependencies (not in core Angular). In order to use {@link ngSanitize}
 * in your module's dependencies, you need to include "angular-sanitize.js" in your application.
 *
 * You may also bypass sanitization for values you know are safe. To do so, bind to
 * an explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example
 * under {@link ng.$sce#show-me-an-example-using-sce- Strict Contextual Escaping (SCE)}.
 *
 * Note: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you
 * will have an exception (instead of an exploit.)
 *
 * @element ANY
 * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.
 *
 * @example

   <example module="bindHtmlExample" deps="angular-sanitize.js" name="ng-bind-html">
     <file name="index.html">
       <div ng-controller="ExampleController">
        <p ng-bind-html="myHTML"></p>
       </div>
     </file>

     <file name="script.js">
       angular.module('bindHtmlExample', ['ngSanitize'])
         .controller('ExampleController', ['$scope', function($scope) {
           $scope.myHTML =
              'I am an <code>HTML</code>string with ' +
              '<a href="#">links!</a> and other <em>stuff</em>';
         }]);
     </file>

     <file name="protractor.js" type="protractor">
       it('should check ng-bind-html', function() {
         expect(element(by.binding('myHTML')).getText()).toBe(
             'I am an HTMLstring with links! and other stuff');
       });
     </file>
   </example>
 */
var ngBindHtmlDirective = ['$sce', '$parse', '$compile', function($sce, $parse, $compile) {
  return {
    restrict: 'A',
    compile: function ngBindHtmlCompile(tElement, tAttrs) {
      var ngBindHtmlGetter = $parse(tAttrs.ngBindHtml);
      var ngBindHtmlWatch = $parse(tAttrs.ngBindHtml, function sceValueOf(val) {
        // Unwrap the value to compare the actual inner safe value, not the wrapper object.
        return $sce.valueOf(val);
      });
      $compile.$$addBindingClass(tElement);

      return function ngBindHtmlLink(scope, element, attr) {
        $compile.$$addBindingInfo(element, attr.ngBindHtml);

        scope.$watch(ngBindHtmlWatch, function ngBindHtmlWatchAction() {
          // The watched value is the unwrapped value. To avoid re-escaping, use the direct getter.
          var value = ngBindHtmlGetter(scope);
          element.html($sce.getTrustedHtml(value) || '');
        });
      };
    }
  };
}];

/**
 * @ngdoc directive
 * @name ngChange
 *
 * @description
 * Evaluate the given expression when the user changes the input.
 * The expression is evaluated immediately, unlike the JavaScript onchange event
 * which only triggers at the end of a change (usually, when the user leaves the
 * form element or presses the return key).
 *
 * The `ngChange` expression is only evaluated when a change in the input value causes
 * a new value to be committed to the model.
 *
 * It will not be evaluated:
 * * if the value returned from the `$parsers` transformation pipeline has not changed
 * * if the input has continued to be invalid since the model will stay `null`
 * * if the model is changed programmatically and not by a change to the input value
 *
 *
 * Note, this directive requires `ngModel` to be present.
 *
 * @element input
 * @param {expression} ngChange {@link guide/expression Expression} to evaluate upon change
 * in input value.
 *
 * @example
 * <example name="ngChange-directive" module="changeExample">
 *   <file name="index.html">
 *     <script>
 *       angular.module('changeExample', [])
 *         .controller('ExampleController', ['$scope', function($scope) {
 *           $scope.counter = 0;
 *           $scope.change = function() {
 *             $scope.counter++;
 *           };
 *         }]);
 *     </script>
 *     <div ng-controller="ExampleController">
 *       <input type="checkbox" ng-model="confirmed" ng-change="change()" id="ng-change-example1" />
 *       <input type="checkbox" ng-model="confirmed" id="ng-change-example2" />
 *       <label for="ng-change-example2">Confirmed</label><br />
 *       <tt>debug = {{confirmed}}</tt><br/>
 *       <tt>counter = {{counter}}</tt><br/>
 *     </div>
 *   </file>
 *   <file name="protractor.js" type="protractor">
 *     var counter = element(by.binding('counter'));
 *     var debug = element(by.binding('confirmed'));
 *
 *     it('should evaluate the expression if changing from view', function() {
 *       expect(counter.getText()).toContain('0');
 *
 *       element(by.id('ng-change-example1')).click();
 *
 *       expect(counter.getText()).toContain('1');
 *       expect(debug.getText()).toContain('true');
 *     });
 *
 *     it('should not evaluate the expression if changing from model', function() {
 *       element(by.id('ng-change-example2')).click();

 *       expect(counter.getText()).toContain('0');
 *       expect(debug.getText()).toContain('true');
 *     });
 *   </file>
 * </example>
 */
var ngChangeDirective = valueFn({
  restrict: 'A',
  require: 'ngModel',
  link: function(scope, element, attr, ctrl) {
    ctrl.$viewChangeListeners.push(function() {
      scope.$eval(attr.ngChange);
    });
  }
});

/* exported
  ngClassDirective,
  ngClassEvenDirective,
  ngClassOddDirective
*/

function classDirective(name, selector) {
  name = 'ngClass' + name;
  return ['$animate', function($animate) {
    return {
      restrict: 'AC',
      link: function(scope, element, attr) {
        var oldVal;

        attr.$observe('class', function(value) {
          ngClassWatchAction(scope.$eval(attr[name]));
        });


        if (name !== 'ngClass') {
          scope.$watch('$index', function($index, old$index) {
            /* eslint-disable no-bitwise */
            var mod = $index & 1;
            if (mod !== (old$index & 1)) {
              var classes = arrayClasses(oldVal);
              if (mod === selector) {
                addClasses(classes);
              } else {
                removeClasses(classes);
              }
            }
            /* eslint-enable */
          });
        }

        scope.$watch(attr[name], ngClassWatchAction, true);

        function addClasses(classes) {
          var newClasses = digestClassCounts(classes, 1);
          attr.$addClass(newClasses);
        }

        function removeClasses(classes) {
          var newClasses = digestClassCounts(classes, -1);
          attr.$removeClass(newClasses);
        }

        function digestClassCounts(classes, count) {
          // Use createMap() to prevent class assumptions involving property
          // names in Object.prototype
          var classCounts = element.data('$classCounts') || createMap();
          var classesToUpdate = [];
          forEach(classes, function(className) {
            if (count > 0 || classCounts[className]) {
              classCounts[className] = (classCounts[className] || 0) + count;
              if (classCounts[className] === +(count > 0)) {
                classesToUpdate.push(className);
              }
            }
          });
          element.data('$classCounts', classCounts);
          return classesToUpdate.join(' ');
        }

        function updateClasses(oldClasses, newClasses) {
          var toAdd = arrayDifference(newClasses, oldClasses);
          var toRemove = arrayDifference(oldClasses, newClasses);
          toAdd = digestClassCounts(toAdd, 1);
          toRemove = digestClassCounts(toRemove, -1);
          if (toAdd && toAdd.length) {
            $animate.addClass(element, toAdd);
          }
          if (toRemove && toRemove.length) {
            $animate.removeClass(element, toRemove);
          }
        }

        function ngClassWatchAction(newVal) {
          // eslint-disable-next-line no-bitwise
          if (selector === true || (scope.$index & 1) === selector) {
            var newClasses = arrayClasses(newVal || []);
            if (!oldVal) {
              addClasses(newClasses);
            } else if (!equals(newVal,oldVal)) {
              var oldClasses = arrayClasses(oldVal);
              updateClasses(oldClasses, newClasses);
            }
          }
          if (isArray(newVal)) {
            oldVal = newVal.map(function(v) { return shallowCopy(v); });
          } else {
            oldVal = shallowCopy(newVal);
          }
        }
      }
    };

    function arrayDifference(tokens1, tokens2) {
      var values = [];

      outer:
      for (var i = 0; i < tokens1.length; i++) {
        var token = tokens1[i];
        for (var j = 0; j < tokens2.length; j++) {
          if (token === tokens2[j]) continue outer;
        }
        values.push(token);
      }
      return values;
    }

    function arrayClasses(classVal) {
      var classes = [];
      if (isArray(classVal)) {
        forEach(classVal, function(v) {
          classes = classes.concat(arrayClasses(v));
        });
        return classes;
      } else if (isString(classVal)) {
        return classVal.split(' ');
      } else if (isObject(classVal)) {
        forEach(classVal, function(v, k) {
          if (v) {
            classes = classes.concat(k.split(' '));
          }
        });
        return classes;
      }
      return classVal;
    }
  }];
}

/**
 * @ngdoc directive
 * @name ngClass
 * @restrict AC
 *
 * @description
 * The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding
 * an expression that represents all classes to be added.
 *
 * The directive operates in three different ways, depending on which of three types the expression
 * evaluates to:
 *
 * 1. If the expression evaluates to a string, the string should be one or more space-delimited class
 * names.
 *
 * 2. If the expression evaluates to an object, then for each key-value pair of the
 * object with a truthy value the corresponding key is used as a class name.
 *
 * 3. If the expression evaluates to an array, each element of the array should either be a string as in
 * type 1 or an object as in type 2. This means that you can mix strings and objects together in an array
 * to give you more control over what CSS classes appear. See the code below for an example of this.
 *
 *
 * The directive won't add duplicate classes if a particular class was already set.
 *
 * When the expression changes, the previously added classes are removed and only then are the
 * new classes added.
 *
 * @knownIssue
 * You should not use {@link guide/interpolation interpolation} in the value of the `class`
 * attribute, when using the `ngClass` directive on the same element.
 * See {@link guide/interpolation#known-issues here} for more info.
 *
 * @animations
 * | Animation                        | Occurs                              |
 * |----------------------------------|-------------------------------------|
 * | {@link ng.$animate#addClass addClass}       | just before the class is applied to the element   |
 * | {@link ng.$animate#removeClass removeClass} | just before the class is removed from the element |
 *
 * @element ANY
 * @param {expression} ngClass {@link guide/expression Expression} to eval. The result
 *   of the evaluation can be a string representing space delimited class
 *   names, an array, or a map of class names to boolean values. In the case of a map, the
 *   names of the properties whose values are truthy will be added as css classes to the
 *   element.
 *
 * @example Example that demonstrates basic bindings via ngClass directive.
   <example name="ng-class">
     <file name="index.html">
       <p ng-class="{strike: deleted, bold: important, 'has-error': error}">Map Syntax Example</p>
       <label>
          <input type="checkbox" ng-model="deleted">
          deleted (apply "strike" class)
       </label><br>
       <label>
          <input type="checkbox" ng-model="important">
          important (apply "bold" class)
       </label><br>
       <label>
          <input type="checkbox" ng-model="error">
          error (apply "has-error" class)
       </label>
       <hr>
       <p ng-class="style">Using String Syntax</p>
       <input type="text" ng-model="style"
              placeholder="Type: bold strike red" aria-label="Type: bold strike red">
       <hr>
       <p ng-class="[style1, style2, style3]">Using Array Syntax</p>
       <input ng-model="style1"
              placeholder="Type: bold, strike or red" aria-label="Type: bold, strike or red"><br>
       <input ng-model="style2"
              placeholder="Type: bold, strike or red" aria-label="Type: bold, strike or red 2"><br>
       <input ng-model="style3"
              placeholder="Type: bold, strike or red" aria-label="Type: bold, strike or red 3"><br>
       <hr>
       <p ng-class="[style4, {orange: warning}]">Using Array and Map Syntax</p>
       <input ng-model="style4" placeholder="Type: bold, strike" aria-label="Type: bold, strike"><br>
       <label><input type="checkbox" ng-model="warning"> warning (apply "orange" class)</label>
     </file>
     <file name="style.css">
       .strike {
           text-decoration: line-through;
       }
       .bold {
           font-weight: bold;
       }
       .red {
           color: red;
       }
       .has-error {
           color: red;
           background-color: yellow;
       }
       .orange {
           color: orange;
       }
     </file>
     <file name="protractor.js" type="protractor">
       var ps = element.all(by.css('p'));

       it('should let you toggle the class', function() {

         expect(ps.first().getAttribute('class')).not.toMatch(/bold/);
         expect(ps.first().getAttribute('class')).not.toMatch(/has-error/);

         element(by.model('important')).click();
         expect(ps.first().getAttribute('class')).toMatch(/bold/);

         element(by.model('error')).click();
         expect(ps.first().getAttribute('class')).toMatch(/has-error/);
       });

       it('should let you toggle string example', function() {
         expect(ps.get(1).getAttribute('class')).toBe('');
         element(by.model('style')).clear();
         element(by.model('style')).sendKeys('red');
         expect(ps.get(1).getAttribute('class')).toBe('red');
       });

       it('array example should have 3 classes', function() {
         expect(ps.get(2).getAttribute('class')).toBe('');
         element(by.model('style1')).sendKeys('bold');
         element(by.model('style2')).sendKeys('strike');
         element(by.model('style3')).sendKeys('red');
         expect(ps.get(2).getAttribute('class')).toBe('bold strike red');
       });

       it('array with map example should have 2 classes', function() {
         expect(ps.last().getAttribute('class')).toBe('');
         element(by.model('style4')).sendKeys('bold');
         element(by.model('warning')).click();
         expect(ps.last().getAttribute('class')).toBe('bold orange');
       });
     </file>
   </example>

   ## Animations

   The example below demonstrates how to perform animations using ngClass.

   <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-class">
     <file name="index.html">
      <input id="setbtn" type="button" value="set" ng-click="myVar='my-class'">
      <input id="clearbtn" type="button" value="clear" ng-click="myVar=''">
      <br>
      <span class="base-class" ng-class="myVar">Sample Text</span>
     </file>
     <file name="style.css">
       .base-class {
         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
       }

       .base-class.my-class {
         color: red;
         font-size:3em;
       }
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-class', function() {
         expect(element(by.css('.base-class')).getAttribute('class')).not.
           toMatch(/my-class/);

         element(by.id('setbtn')).click();

         expect(element(by.css('.base-class')).getAttribute('class')).
           toMatch(/my-class/);

         element(by.id('clearbtn')).click();

         expect(element(by.css('.base-class')).getAttribute('class')).not.
           toMatch(/my-class/);
       });
     </file>
   </example>


   ## ngClass and pre-existing CSS3 Transitions/Animations
   The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.
   Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder
   any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure
   to view the step by step details of {@link $animate#addClass $animate.addClass} and
   {@link $animate#removeClass $animate.removeClass}.
 */
var ngClassDirective = classDirective('', true);

/**
 * @ngdoc directive
 * @name ngClassOdd
 * @restrict AC
 *
 * @description
 * The `ngClassOdd` and `ngClassEven` directives work exactly as
 * {@link ng.directive:ngClass ngClass}, except they work in
 * conjunction with `ngRepeat` and take effect only on odd (even) rows.
 *
 * This directive can be applied only within the scope of an
 * {@link ng.directive:ngRepeat ngRepeat}.
 *
 * @element ANY
 * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result
 *   of the evaluation can be a string representing space delimited class names or an array.
 *
 * @example
   <example name="ng-class-odd">
     <file name="index.html">
        <ol ng-init="names=['John', 'Mary', 'Cate', 'Suz']">
          <li ng-repeat="name in names">
           <span ng-class-odd="'odd'" ng-class-even="'even'">
             {{name}}
           </span>
          </li>
        </ol>
     </file>
     <file name="style.css">
       .odd {
         color: red;
       }
       .even {
         color: blue;
       }
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-class-odd and ng-class-even', function() {
         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).
           toMatch(/odd/);
         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).
           toMatch(/even/);
       });
     </file>
   </example>
 */
var ngClassOddDirective = classDirective('Odd', 0);

/**
 * @ngdoc directive
 * @name ngClassEven
 * @restrict AC
 *
 * @description
 * The `ngClassOdd` and `ngClassEven` directives work exactly as
 * {@link ng.directive:ngClass ngClass}, except they work in
 * conjunction with `ngRepeat` and take effect only on odd (even) rows.
 *
 * This directive can be applied only within the scope of an
 * {@link ng.directive:ngRepeat ngRepeat}.
 *
 * @element ANY
 * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The
 *   result of the evaluation can be a string representing space delimited class names or an array.
 *
 * @example
   <example name="ng-class-even">
     <file name="index.html">
        <ol ng-init="names=['John', 'Mary', 'Cate', 'Suz']">
          <li ng-repeat="name in names">
           <span ng-class-odd="'odd'" ng-class-even="'even'">
             {{name}} &nbsp; &nbsp; &nbsp;
           </span>
          </li>
        </ol>
     </file>
     <file name="style.css">
       .odd {
         color: red;
       }
       .even {
         color: blue;
       }
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-class-odd and ng-class-even', function() {
         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).
           toMatch(/odd/);
         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).
           toMatch(/even/);
       });
     </file>
   </example>
 */
var ngClassEvenDirective = classDirective('Even', 1);

/**
 * @ngdoc directive
 * @name ngCloak
 * @restrict AC
 *
 * @description
 * The `ngCloak` directive is used to prevent the Angular html template from being briefly
 * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this
 * directive to avoid the undesirable flicker effect caused by the html template display.
 *
 * The directive can be applied to the `<body>` element, but the preferred usage is to apply
 * multiple `ngCloak` directives to small portions of the page to permit progressive rendering
 * of the browser view.
 *
 * `ngCloak` works in cooperation with the following css rule embedded within `angular.js` and
 * `angular.min.js`.
 * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).
 *
 * ```css
 * [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
 *   display: none !important;
 * }
 * ```
 *
 * When this css rule is loaded by the browser, all html elements (including their children) that
 * are tagged with the `ngCloak` directive are hidden. When Angular encounters this directive
 * during the compilation of the template it deletes the `ngCloak` element attribute, making
 * the compiled element visible.
 *
 * For the best result, the `angular.js` script must be loaded in the head section of the html
 * document; alternatively, the css rule above must be included in the external stylesheet of the
 * application.
 *
 * @element ANY
 *
 * @example
   <example name="ng-cloak">
     <file name="index.html">
        <div id="template1" ng-cloak>{{ 'hello' }}</div>
        <div id="template2" class="ng-cloak">{{ 'world' }}</div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should remove the template directive and css class', function() {
         expect($('#template1').getAttribute('ng-cloak')).
           toBeNull();
         expect($('#template2').getAttribute('ng-cloak')).
           toBeNull();
       });
     </file>
   </example>
 *
 */
var ngCloakDirective = ngDirective({
  compile: function(element, attr) {
    attr.$set('ngCloak', undefined);
    element.removeClass('ng-cloak');
  }
});

/**
 * @ngdoc directive
 * @name ngController
 *
 * @description
 * The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular
 * supports the principles behind the Model-View-Controller design pattern.
 *
 * MVC components in angular:
 *
 * * Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties
 *   are accessed through bindings.
 * * View — The template (HTML with data bindings) that is rendered into the View.
 * * Controller — The `ngController` directive specifies a Controller class; the class contains business
 *   logic behind the application to decorate the scope with functions and values
 *
 * Note that you can also attach controllers to the DOM by declaring it in a route definition
 * via the {@link ngRoute.$route $route} service. A common mistake is to declare the controller
 * again using `ng-controller` in the template itself.  This will cause the controller to be attached
 * and executed twice.
 *
 * @element ANY
 * @scope
 * @priority 500
 * @param {expression} ngController Name of a constructor function registered with the current
 * {@link ng.$controllerProvider $controllerProvider} or an {@link guide/expression expression}
 * that on the current scope evaluates to a constructor function.
 *
 * The controller instance can be published into a scope property by specifying
 * `ng-controller="as propertyName"`.
 *
 * If the current `$controllerProvider` is configured to use globals (via
 * {@link ng.$controllerProvider#allowGlobals `$controllerProvider.allowGlobals()` }), this may
 * also be the name of a globally accessible constructor function (not recommended).
 *
 * @example
 * Here is a simple form for editing user contact information. Adding, removing, clearing, and
 * greeting are methods declared on the controller (see source tab). These methods can
 * easily be called from the angular markup. Any changes to the data are automatically reflected
 * in the View without the need for a manual update.
 *
 * Two different declaration styles are included below:
 *
 * * one binds methods and properties directly onto the controller using `this`:
 * `ng-controller="SettingsController1 as settings"`
 * * one injects `$scope` into the controller:
 * `ng-controller="SettingsController2"`
 *
 * The second option is more common in the Angular community, and is generally used in boilerplates
 * and in this guide. However, there are advantages to binding properties directly to the controller
 * and avoiding scope.
 *
 * * Using `controller as` makes it obvious which controller you are accessing in the template when
 * multiple controllers apply to an element.
 * * If you are writing your controllers as classes you have easier access to the properties and
 * methods, which will appear on the scope, from inside the controller code.
 * * Since there is always a `.` in the bindings, you don't have to worry about prototypal
 * inheritance masking primitives.
 *
 * This example demonstrates the `controller as` syntax.
 *
 * <example name="ngControllerAs" module="controllerAsExample">
 *   <file name="index.html">
 *    <div id="ctrl-as-exmpl" ng-controller="SettingsController1 as settings">
 *      <label>Name: <input type="text" ng-model="settings.name"/></label>
 *      <button ng-click="settings.greet()">greet</button><br/>
 *      Contact:
 *      <ul>
 *        <li ng-repeat="contact in settings.contacts">
 *          <select ng-model="contact.type" aria-label="Contact method" id="select_{{$index}}">
 *             <option>phone</option>
 *             <option>email</option>
 *          </select>
 *          <input type="text" ng-model="contact.value" aria-labelledby="select_{{$index}}" />
 *          <button ng-click="settings.clearContact(contact)">clear</button>
 *          <button ng-click="settings.removeContact(contact)" aria-label="Remove">X</button>
 *        </li>
 *        <li><button ng-click="settings.addContact()">add</button></li>
 *     </ul>
 *    </div>
 *   </file>
 *   <file name="app.js">
 *    angular.module('controllerAsExample', [])
 *      .controller('SettingsController1', SettingsController1);
 *
 *    function SettingsController1() {
 *      this.name = 'John Smith';
 *      this.contacts = [
 *        {type: 'phone', value: '408 555 1212'},
 *        {type: 'email', value: 'john.smith@example.org'}
 *      ];
 *    }
 *
 *    SettingsController1.prototype.greet = function() {
 *      alert(this.name);
 *    };
 *
 *    SettingsController1.prototype.addContact = function() {
 *      this.contacts.push({type: 'email', value: 'yourname@example.org'});
 *    };
 *
 *    SettingsController1.prototype.removeContact = function(contactToRemove) {
 *     var index = this.contacts.indexOf(contactToRemove);
 *      this.contacts.splice(index, 1);
 *    };
 *
 *    SettingsController1.prototype.clearContact = function(contact) {
 *      contact.type = 'phone';
 *      contact.value = '';
 *    };
 *   </file>
 *   <file name="protractor.js" type="protractor">
 *     it('should check controller as', function() {
 *       var container = element(by.id('ctrl-as-exmpl'));
 *         expect(container.element(by.model('settings.name'))
 *           .getAttribute('value')).toBe('John Smith');
 *
 *       var firstRepeat =
 *           container.element(by.repeater('contact in settings.contacts').row(0));
 *       var secondRepeat =
 *           container.element(by.repeater('contact in settings.contacts').row(1));
 *
 *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
 *           .toBe('408 555 1212');
 *
 *       expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))
 *           .toBe('john.smith@example.org');
 *
 *       firstRepeat.element(by.buttonText('clear')).click();
 *
 *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
 *           .toBe('');
 *
 *       container.element(by.buttonText('add')).click();
 *
 *       expect(container.element(by.repeater('contact in settings.contacts').row(2))
 *           .element(by.model('contact.value'))
 *           .getAttribute('value'))
 *           .toBe('yourname@example.org');
 *     });
 *   </file>
 * </example>
 *
 * This example demonstrates the "attach to `$scope`" style of controller.
 *
 * <example name="ngController" module="controllerExample">
 *  <file name="index.html">
 *   <div id="ctrl-exmpl" ng-controller="SettingsController2">
 *     <label>Name: <input type="text" ng-model="name"/></label>
 *     <button ng-click="greet()">greet</button><br/>
 *     Contact:
 *     <ul>
 *       <li ng-repeat="contact in contacts">
 *         <select ng-model="contact.type" id="select_{{$index}}">
 *            <option>phone</option>
 *            <option>email</option>
 *         </select>
 *         <input type="text" ng-model="contact.value" aria-labelledby="select_{{$index}}" />
 *         <button ng-click="clearContact(contact)">clear</button>
 *         <button ng-click="removeContact(contact)">X</button>
 *       </li>
 *       <li>[ <button ng-click="addContact()">add</button> ]</li>
 *    </ul>
 *   </div>
 *  </file>
 *  <file name="app.js">
 *   angular.module('controllerExample', [])
 *     .controller('SettingsController2', ['$scope', SettingsController2]);
 *
 *   function SettingsController2($scope) {
 *     $scope.name = 'John Smith';
 *     $scope.contacts = [
 *       {type:'phone', value:'408 555 1212'},
 *       {type:'email', value:'john.smith@example.org'}
 *     ];
 *
 *     $scope.greet = function() {
 *       alert($scope.name);
 *     };
 *
 *     $scope.addContact = function() {
 *       $scope.contacts.push({type:'email', value:'yourname@example.org'});
 *     };
 *
 *     $scope.removeContact = function(contactToRemove) {
 *       var index = $scope.contacts.indexOf(contactToRemove);
 *       $scope.contacts.splice(index, 1);
 *     };
 *
 *     $scope.clearContact = function(contact) {
 *       contact.type = 'phone';
 *       contact.value = '';
 *     };
 *   }
 *  </file>
 *  <file name="protractor.js" type="protractor">
 *    it('should check controller', function() {
 *      var container = element(by.id('ctrl-exmpl'));
 *
 *      expect(container.element(by.model('name'))
 *          .getAttribute('value')).toBe('John Smith');
 *
 *      var firstRepeat =
 *          container.element(by.repeater('contact in contacts').row(0));
 *      var secondRepeat =
 *          container.element(by.repeater('contact in contacts').row(1));
 *
 *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
 *          .toBe('408 555 1212');
 *      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))
 *          .toBe('john.smith@example.org');
 *
 *      firstRepeat.element(by.buttonText('clear')).click();
 *
 *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
 *          .toBe('');
 *
 *      container.element(by.buttonText('add')).click();
 *
 *      expect(container.element(by.repeater('contact in contacts').row(2))
 *          .element(by.model('contact.value'))
 *          .getAttribute('value'))
 *          .toBe('yourname@example.org');
 *    });
 *  </file>
 *</example>

 */
var ngControllerDirective = [function() {
  return {
    restrict: 'A',
    scope: true,
    controller: '@',
    priority: 500
  };
}];

/**
 * @ngdoc directive
 * @name ngCsp
 *
 * @restrict A
 * @element ANY
 * @description
 *
 * Angular has some features that can conflict with certain restrictions that are applied when using
 * [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) rules.
 *
 * If you intend to implement CSP with these rules then you must tell Angular not to use these
 * features.
 *
 * This is necessary when developing things like Google Chrome Extensions or Universal Windows Apps.
 *
 *
 * The following default rules in CSP affect Angular:
 *
 * * The use of `eval()`, `Function(string)` and similar functions to dynamically create and execute
 * code from strings is forbidden. Angular makes use of this in the {@link $parse} service to
 * provide a 30% increase in the speed of evaluating Angular expressions. (This CSP rule can be
 * disabled with the CSP keyword `unsafe-eval`, but it is generally not recommended as it would
 * weaken the protections offered by CSP.)
 *
 * * The use of inline resources, such as inline `<script>` and `<style>` elements, are forbidden.
 * This prevents apps from injecting custom styles directly into the document. Angular makes use of
 * this to include some CSS rules (e.g. {@link ngCloak} and {@link ngHide}). To make these
 * directives work when a CSP rule is blocking inline styles, you must link to the `angular-csp.css`
 * in your HTML manually. (This CSP rule can be disabled with the CSP keyword `unsafe-inline`, but
 * it is generally not recommended as it would weaken the protections offered by CSP.)
 *
 * If you do not provide `ngCsp` then Angular tries to autodetect if CSP is blocking dynamic code
 * creation from strings (e.g., `unsafe-eval` not specified in CSP header) and automatically
 * deactivates this feature in the {@link $parse} service. This autodetection, however, triggers a
 * CSP error to be logged in the console:
 *
 * ```
 * Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of
 * script in the following Content Security Policy directive: "default-src 'self'". Note that
 * 'script-src' was not explicitly set, so 'default-src' is used as a fallback.
 * ```
 *
 * This error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`
 * directive on an element of the HTML document that appears before the `<script>` tag that loads
 * the `angular.js` file.
 *
 * *Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*
 *
 * You can specify which of the CSP related Angular features should be deactivated by providing
 * a value for the `ng-csp` attribute. The options are as follows:
 *
 * * no-inline-style: this stops Angular from injecting CSS styles into the DOM
 *
 * * no-unsafe-eval: this stops Angular from optimizing $parse with unsafe eval of strings
 *
 * You can use these values in the following combinations:
 *
 *
 * * No declaration means that Angular will assume that you can do inline styles, but it will do
 * a runtime check for unsafe-eval. E.g. `<body>`. This is backwardly compatible with previous
 * versions of Angular.
 *
 * * A simple `ng-csp` (or `data-ng-csp`) attribute will tell Angular to deactivate both inline
 * styles and unsafe eval. E.g. `<body ng-csp>`. This is backwardly compatible with previous
 * versions of Angular.
 *
 * * Specifying only `no-unsafe-eval` tells Angular that we must not use eval, but that we can
 * inject inline styles. E.g. `<body ng-csp="no-unsafe-eval">`.
 *
 * * Specifying only `no-inline-style` tells Angular that we must not inject styles, but that we can
 * run eval - no automatic check for unsafe eval will occur. E.g. `<body ng-csp="no-inline-style">`
 *
 * * Specifying both `no-unsafe-eval` and `no-inline-style` tells Angular that we must not inject
 * styles nor use eval, which is the same as an empty: ng-csp.
 * E.g.`<body ng-csp="no-inline-style;no-unsafe-eval">`
 *
 * @example
 * This example shows how to apply the `ngCsp` directive to the `html` tag.
   ```html
     <!doctype html>
     <html ng-app ng-csp>
     ...
     ...
     </html>
   ```
  * @example
      <!-- Note: the `.csp` suffix in the example name triggers CSP mode in our http server! -->
      <example name="example.csp" module="cspExample" ng-csp="true">
        <file name="index.html">
          <div ng-controller="MainController as ctrl">
            <div>
              <button ng-click="ctrl.inc()" id="inc">Increment</button>
              <span id="counter">
                {{ctrl.counter}}
              </span>
            </div>

            <div>
              <button ng-click="ctrl.evil()" id="evil">Evil</button>
              <span id="evilError">
                {{ctrl.evilError}}
              </span>
            </div>
          </div>
        </file>
        <file name="script.js">
           angular.module('cspExample', [])
             .controller('MainController', function MainController() {
                this.counter = 0;
                this.inc = function() {
                  this.counter++;
                };
                this.evil = function() {
                  try {
                    eval('1+2'); // eslint-disable-line no-eval
                  } catch (e) {
                    this.evilError = e.message;
                  }
                };
              });
        </file>
        <file name="protractor.js" type="protractor">
          var util, webdriver;

          var incBtn = element(by.id('inc'));
          var counter = element(by.id('counter'));
          var evilBtn = element(by.id('evil'));
          var evilError = element(by.id('evilError'));

          function getAndClearSevereErrors() {
            return browser.manage().logs().get('browser').then(function(browserLog) {
              return browserLog.filter(function(logEntry) {
                return logEntry.level.value > webdriver.logging.Level.WARNING.value;
              });
            });
          }

          function clearErrors() {
            getAndClearSevereErrors();
          }

          function expectNoErrors() {
            getAndClearSevereErrors().then(function(filteredLog) {
              expect(filteredLog.length).toEqual(0);
              if (filteredLog.length) {
                console.log('browser console errors: ' + util.inspect(filteredLog));
              }
            });
          }

          function expectError(regex) {
            getAndClearSevereErrors().then(function(filteredLog) {
              var found = false;
              filteredLog.forEach(function(log) {
                if (log.message.match(regex)) {
                  found = true;
                }
              });
              if (!found) {
                throw new Error('expected an error that matches ' + regex);
              }
            });
          }

          beforeEach(function() {
            util = require('util');
            webdriver = require('selenium-webdriver');
          });

          // For now, we only test on Chrome,
          // as Safari does not load the page with Protractor's injected scripts,
          // and Firefox webdriver always disables content security policy (#6358)
          if (browser.params.browser !== 'chrome') {
            return;
          }

          it('should not report errors when the page is loaded', function() {
            // clear errors so we are not dependent on previous tests
            clearErrors();
            // Need to reload the page as the page is already loaded when
            // we come here
            browser.driver.getCurrentUrl().then(function(url) {
              browser.get(url);
            });
            expectNoErrors();
          });

          it('should evaluate expressions', function() {
            expect(counter.getText()).toEqual('0');
            incBtn.click();
            expect(counter.getText()).toEqual('1');
            expectNoErrors();
          });

          it('should throw and report an error when using "eval"', function() {
            evilBtn.click();
            expect(evilError.getText()).toMatch(/Content Security Policy/);
            expectError(/Content Security Policy/);
          });
        </file>
      </example>
  */

// `ngCsp` is not implemented as a proper directive any more, because we need it be processed while
// we bootstrap the app (before `$parse` is instantiated). For this reason, we just have the `csp()`
// fn that looks for the `ng-csp` attribute anywhere in the current doc.

/**
 * @ngdoc directive
 * @name ngClick
 *
 * @description
 * The ngClick directive allows you to specify custom behavior when
 * an element is clicked.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon
 * click. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-click">
     <file name="index.html">
      <button ng-click="count = count + 1" ng-init="count=0">
        Increment
      </button>
      <span>
        count: {{count}}
      </span>
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-click', function() {
         expect(element(by.binding('count')).getText()).toMatch('0');
         element(by.css('button')).click();
         expect(element(by.binding('count')).getText()).toMatch('1');
       });
     </file>
   </example>
 */
/*
 * A collection of directives that allows creation of custom event handlers that are defined as
 * angular expressions and are compiled and executed within the current scope.
 */
var ngEventDirectives = {};

// For events that might fire synchronously during DOM manipulation
// we need to execute their event handlers asynchronously using $evalAsync,
// so that they are not executed in an inconsistent state.
var forceAsyncEvents = {
  'blur': true,
  'focus': true
};
forEach(
  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '),
  function(eventName) {
    var directiveName = directiveNormalize('ng-' + eventName);
    ngEventDirectives[directiveName] = ['$parse', '$rootScope', function($parse, $rootScope) {
      return {
        restrict: 'A',
        compile: function($element, attr) {
          // We expose the powerful $event object on the scope that provides access to the Window,
          // etc. that isn't protected by the fast paths in $parse.  We explicitly request better
          // checks at the cost of speed since event handler expressions are not executed as
          // frequently as regular change detection.
          var fn = $parse(attr[directiveName], /* interceptorFn */ null, /* expensiveChecks */ true);
          return function ngEventHandler(scope, element) {
            element.on(eventName, function(event) {
              var callback = function() {
                fn(scope, {$event:event});
              };
              if (forceAsyncEvents[eventName] && $rootScope.$$phase) {
                scope.$evalAsync(callback);
              } else {
                scope.$apply(callback);
              }
            });
          };
        }
      };
    }];
  }
);

/**
 * @ngdoc directive
 * @name ngDblclick
 *
 * @description
 * The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon
 * a dblclick. (The Event object is available as `$event`)
 *
 * @example
   <example name="ng-dblclick">
     <file name="index.html">
      <button ng-dblclick="count = count + 1" ng-init="count=0">
        Increment (on double click)
      </button>
      count: {{count}}
     </file>
   </example>
 */


/**
 * @ngdoc directive
 * @name ngMousedown
 *
 * @description
 * The ngMousedown directive allows you to specify custom behavior on mousedown event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon
 * mousedown. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-mousedown">
     <file name="index.html">
      <button ng-mousedown="count = count + 1" ng-init="count=0">
        Increment (on mouse down)
      </button>
      count: {{count}}
     </file>
   </example>
 */


/**
 * @ngdoc directive
 * @name ngMouseup
 *
 * @description
 * Specify custom behavior on mouseup event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon
 * mouseup. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-mouseup">
     <file name="index.html">
      <button ng-mouseup="count = count + 1" ng-init="count=0">
        Increment (on mouse up)
      </button>
      count: {{count}}
     </file>
   </example>
 */

/**
 * @ngdoc directive
 * @name ngMouseover
 *
 * @description
 * Specify custom behavior on mouseover event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon
 * mouseover. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-mouseover">
     <file name="index.html">
      <button ng-mouseover="count = count + 1" ng-init="count=0">
        Increment (when mouse is over)
      </button>
      count: {{count}}
     </file>
   </example>
 */


/**
 * @ngdoc directive
 * @name ngMouseenter
 *
 * @description
 * Specify custom behavior on mouseenter event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon
 * mouseenter. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-mouseenter">
     <file name="index.html">
      <button ng-mouseenter="count = count + 1" ng-init="count=0">
        Increment (when mouse enters)
      </button>
      count: {{count}}
     </file>
   </example>
 */


/**
 * @ngdoc directive
 * @name ngMouseleave
 *
 * @description
 * Specify custom behavior on mouseleave event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon
 * mouseleave. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-mouseleave">
     <file name="index.html">
      <button ng-mouseleave="count = count + 1" ng-init="count=0">
        Increment (when mouse leaves)
      </button>
      count: {{count}}
     </file>
   </example>
 */


/**
 * @ngdoc directive
 * @name ngMousemove
 *
 * @description
 * Specify custom behavior on mousemove event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon
 * mousemove. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-mousemove">
     <file name="index.html">
      <button ng-mousemove="count = count + 1" ng-init="count=0">
        Increment (when mouse moves)
      </button>
      count: {{count}}
     </file>
   </example>
 */


/**
 * @ngdoc directive
 * @name ngKeydown
 *
 * @description
 * Specify custom behavior on keydown event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon
 * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)
 *
 * @example
   <example name="ng-keydown">
     <file name="index.html">
      <input ng-keydown="count = count + 1" ng-init="count=0">
      key down count: {{count}}
     </file>
   </example>
 */


/**
 * @ngdoc directive
 * @name ngKeyup
 *
 * @description
 * Specify custom behavior on keyup event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon
 * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)
 *
 * @example
   <example name="ng-keyup">
     <file name="index.html">
       <p>Typing in the input box below updates the key count</p>
       <input ng-keyup="count = count + 1" ng-init="count=0"> key up count: {{count}}

       <p>Typing in the input box below updates the keycode</p>
       <input ng-keyup="event=$event">
       <p>event keyCode: {{ event.keyCode }}</p>
       <p>event altKey: {{ event.altKey }}</p>
     </file>
   </example>
 */


/**
 * @ngdoc directive
 * @name ngKeypress
 *
 * @description
 * Specify custom behavior on keypress event.
 *
 * @element ANY
 * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon
 * keypress. ({@link guide/expression#-event- Event object is available as `$event`}
 * and can be interrogated for keyCode, altKey, etc.)
 *
 * @example
   <example name="ng-keypress">
     <file name="index.html">
      <input ng-keypress="count = count + 1" ng-init="count=0">
      key press count: {{count}}
     </file>
   </example>
 */


/**
 * @ngdoc directive
 * @name ngSubmit
 *
 * @description
 * Enables binding angular expressions to onsubmit events.
 *
 * Additionally it prevents the default action (which for form means sending the request to the
 * server and reloading the current page), but only if the form does not contain `action`,
 * `data-action`, or `x-action` attributes.
 *
 * <div class="alert alert-warning">
 * **Warning:** Be careful not to cause "double-submission" by using both the `ngClick` and
 * `ngSubmit` handlers together. See the
 * {@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}
 * for a detailed discussion of when `ngSubmit` may be triggered.
 * </div>
 *
 * @element form
 * @priority 0
 * @param {expression} ngSubmit {@link guide/expression Expression} to eval.
 * ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example module="submitExample" name="ng-submit">
     <file name="index.html">
      <script>
        angular.module('submitExample', [])
          .controller('ExampleController', ['$scope', function($scope) {
            $scope.list = [];
            $scope.text = 'hello';
            $scope.submit = function() {
              if ($scope.text) {
                $scope.list.push(this.text);
                $scope.text = '';
              }
            };
          }]);
      </script>
      <form ng-submit="submit()" ng-controller="ExampleController">
        Enter text and hit enter:
        <input type="text" ng-model="text" name="text" />
        <input type="submit" id="submit" value="Submit" />
        <pre>list={{list}}</pre>
      </form>
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-submit', function() {
         expect(element(by.binding('list')).getText()).toBe('list=[]');
         element(by.css('#submit')).click();
         expect(element(by.binding('list')).getText()).toContain('hello');
         expect(element(by.model('text')).getAttribute('value')).toBe('');
       });
       it('should ignore empty strings', function() {
         expect(element(by.binding('list')).getText()).toBe('list=[]');
         element(by.css('#submit')).click();
         element(by.css('#submit')).click();
         expect(element(by.binding('list')).getText()).toContain('hello');
        });
     </file>
   </example>
 */

/**
 * @ngdoc directive
 * @name ngFocus
 *
 * @description
 * Specify custom behavior on focus event.
 *
 * Note: As the `focus` event is executed synchronously when calling `input.focus()`
 * AngularJS executes the expression using `scope.$evalAsync` if the event is fired
 * during an `$apply` to ensure a consistent state.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngFocus {@link guide/expression Expression} to evaluate upon
 * focus. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
 * See {@link ng.directive:ngClick ngClick}
 */

/**
 * @ngdoc directive
 * @name ngBlur
 *
 * @description
 * Specify custom behavior on blur event.
 *
 * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when
 * an element has lost focus.
 *
 * Note: As the `blur` event is executed synchronously also during DOM manipulations
 * (e.g. removing a focussed input),
 * AngularJS executes the expression using `scope.$evalAsync` if the event is fired
 * during an `$apply` to ensure a consistent state.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngBlur {@link guide/expression Expression} to evaluate upon
 * blur. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
 * See {@link ng.directive:ngClick ngClick}
 */

/**
 * @ngdoc directive
 * @name ngCopy
 *
 * @description
 * Specify custom behavior on copy event.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngCopy {@link guide/expression Expression} to evaluate upon
 * copy. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-copy">
     <file name="index.html">
      <input ng-copy="copied=true" ng-init="copied=false; value='copy me'" ng-model="value">
      copied: {{copied}}
     </file>
   </example>
 */

/**
 * @ngdoc directive
 * @name ngCut
 *
 * @description
 * Specify custom behavior on cut event.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngCut {@link guide/expression Expression} to evaluate upon
 * cut. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-cut">
     <file name="index.html">
      <input ng-cut="cut=true" ng-init="cut=false; value='cut me'" ng-model="value">
      cut: {{cut}}
     </file>
   </example>
 */

/**
 * @ngdoc directive
 * @name ngPaste
 *
 * @description
 * Specify custom behavior on paste event.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngPaste {@link guide/expression Expression} to evaluate upon
 * paste. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example name="ng-paste">
     <file name="index.html">
      <input ng-paste="paste=true" ng-init="paste=false" placeholder='paste here'>
      pasted: {{paste}}
     </file>
   </example>
 */

/**
 * @ngdoc directive
 * @name ngIf
 * @restrict A
 * @multiElement
 *
 * @description
 * The `ngIf` directive removes or recreates a portion of the DOM tree based on an
 * {expression}. If the expression assigned to `ngIf` evaluates to a false
 * value then the element is removed from the DOM, otherwise a clone of the
 * element is reinserted into the DOM.
 *
 * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the
 * element in the DOM rather than changing its visibility via the `display` css property.  A common
 * case when this difference is significant is when using css selectors that rely on an element's
 * position within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.
 *
 * Note that when an element is removed using `ngIf` its scope is destroyed and a new scope
 * is created when the element is restored.  The scope created within `ngIf` inherits from
 * its parent scope using
 * [prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).
 * An important implication of this is if `ngModel` is used within `ngIf` to bind to
 * a javascript primitive defined in the parent scope. In this case any modifications made to the
 * variable within the child scope will override (hide) the value in the parent scope.
 *
 * Also, `ngIf` recreates elements using their compiled state. An example of this behavior
 * is if an element's class attribute is directly modified after it's compiled, using something like
 * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element
 * the added class will be lost because the original compiled state is used to regenerate the element.
 *
 * Additionally, you can provide animations via the `ngAnimate` module to animate the `enter`
 * and `leave` effects.
 *
 * @animations
 * | Animation                        | Occurs                               |
 * |----------------------------------|-------------------------------------|
 * | {@link ng.$animate#enter enter}  | just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container |
 * | {@link ng.$animate#leave leave}  | just before the `ngIf` contents are removed from the DOM |
 *
 * @element ANY
 * @scope
 * @priority 600
 * @param {expression} ngIf If the {@link guide/expression expression} is falsy then
 *     the element is removed from the DOM tree. If it is truthy a copy of the compiled
 *     element is added to the DOM tree.
 *
 * @example
  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-if">
    <file name="index.html">
      <label>Click me: <input type="checkbox" ng-model="checked" ng-init="checked=true" /></label><br/>
      Show when checked:
      <span ng-if="checked" class="animate-if">
        This is removed when the checkbox is unchecked.
      </span>
    </file>
    <file name="animations.css">
      .animate-if {
        background:white;
        border:1px solid black;
        padding:10px;
      }

      .animate-if.ng-enter, .animate-if.ng-leave {
        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
      }

      .animate-if.ng-enter,
      .animate-if.ng-leave.ng-leave-active {
        opacity:0;
      }

      .animate-if.ng-leave,
      .animate-if.ng-enter.ng-enter-active {
        opacity:1;
      }
    </file>
  </example>
 */
var ngIfDirective = ['$animate', '$compile', function($animate, $compile) {
  return {
    multiElement: true,
    transclude: 'element',
    priority: 600,
    terminal: true,
    restrict: 'A',
    $$tlb: true,
    link: function($scope, $element, $attr, ctrl, $transclude) {
        var block, childScope, previousElements;
        $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {

          if (value) {
            if (!childScope) {
              $transclude(function(clone, newScope) {
                childScope = newScope;
                clone[clone.length++] = $compile.$$createComment('end ngIf', $attr.ngIf);
                // Note: We only need the first/last node of the cloned nodes.
                // However, we need to keep the reference to the jqlite wrapper as it might be changed later
                // by a directive with templateUrl when its template arrives.
                block = {
                  clone: clone
                };
                $animate.enter(clone, $element.parent(), $element);
              });
            }
          } else {
            if (previousElements) {
              previousElements.remove();
              previousElements = null;
            }
            if (childScope) {
              childScope.$destroy();
              childScope = null;
            }
            if (block) {
              previousElements = getBlockNodes(block.clone);
              $animate.leave(previousElements).done(function(response) {
                if (response !== false) previousElements = null;
              });
              block = null;
            }
          }
        });
    }
  };
}];

/**
 * @ngdoc directive
 * @name ngInclude
 * @restrict ECA
 *
 * @description
 * Fetches, compiles and includes an external HTML fragment.
 *
 * By default, the template URL is restricted to the same domain and protocol as the
 * application document. This is done by calling {@link $sce#getTrustedResourceUrl
 * $sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols
 * you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or
 * {@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to Angular's {@link
 * ng.$sce Strict Contextual Escaping}.
 *
 * In addition, the browser's
 * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)
 * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)
 * policy may further restrict whether the template is successfully loaded.
 * For example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`
 * access on some browsers.
 *
 * @animations
 * | Animation                        | Occurs                              |
 * |----------------------------------|-------------------------------------|
 * | {@link ng.$animate#enter enter}  | when the expression changes, on the new include |
 * | {@link ng.$animate#leave leave}  | when the expression changes, on the old include |
 *
 * The enter and leave animation occur concurrently.
 *
 * @scope
 * @priority 400
 *
 * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,
 *                 make sure you wrap it in **single** quotes, e.g. `src="'myPartialTemplate.html'"`.
 * @param {string=} onload Expression to evaluate when a new partial is loaded.
 *                  <div class="alert alert-warning">
 *                  **Note:** When using onload on SVG elements in IE11, the browser will try to call
 *                  a function with the name on the window element, which will usually throw a
 *                  "function is undefined" error. To fix this, you can instead use `data-onload` or a
 *                  different form that {@link guide/directive#normalization matches} `onload`.
 *                  </div>
   *
 * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll
 *                  $anchorScroll} to scroll the viewport after the content is loaded.
 *
 *                  - If the attribute is not set, disable scrolling.
 *                  - If the attribute is set without value, enable scrolling.
 *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.
 *
 * @example
  <example module="includeExample" deps="angular-animate.js" animations="true" name="ng-include">
    <file name="index.html">
     <div ng-controller="ExampleController">
       <select ng-model="template" ng-options="t.name for t in templates">
        <option value="">(blank)</option>
       </select>
       url of the template: <code>{{template.url}}</code>
       <hr/>
       <div class="slide-animate-container">
         <div class="slide-animate" ng-include="template.url"></div>
       </div>
     </div>
    </file>
    <file name="script.js">
      angular.module('includeExample', ['ngAnimate'])
        .controller('ExampleController', ['$scope', function($scope) {
          $scope.templates =
            [{ name: 'template1.html', url: 'template1.html'},
             { name: 'template2.html', url: 'template2.html'}];
          $scope.template = $scope.templates[0];
        }]);
     </file>
    <file name="template1.html">
      Content of template1.html
    </file>
    <file name="template2.html">
      Content of template2.html
    </file>
    <file name="animations.css">
      .slide-animate-container {
        position:relative;
        background:white;
        border:1px solid black;
        height:40px;
        overflow:hidden;
      }

      .slide-animate {
        padding:10px;
      }

      .slide-animate.ng-enter, .slide-animate.ng-leave {
        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;

        position:absolute;
        top:0;
        left:0;
        right:0;
        bottom:0;
        display:block;
        padding:10px;
      }

      .slide-animate.ng-enter {
        top:-50px;
      }
      .slide-animate.ng-enter.ng-enter-active {
        top:0;
      }

      .slide-animate.ng-leave {
        top:0;
      }
      .slide-animate.ng-leave.ng-leave-active {
        top:50px;
      }
    </file>
    <file name="protractor.js" type="protractor">
      var templateSelect = element(by.model('template'));
      var includeElem = element(by.css('[ng-include]'));

      it('should load template1.html', function() {
        expect(includeElem.getText()).toMatch(/Content of template1.html/);
      });

      it('should load template2.html', function() {
        if (browser.params.browser === 'firefox') {
          // Firefox can't handle using selects
          // See https://github.com/angular/protractor/issues/480
          return;
        }
        templateSelect.click();
        templateSelect.all(by.css('option')).get(2).click();
        expect(includeElem.getText()).toMatch(/Content of template2.html/);
      });

      it('should change to blank', function() {
        if (browser.params.browser === 'firefox') {
          // Firefox can't handle using selects
          return;
        }
        templateSelect.click();
        templateSelect.all(by.css('option')).get(0).click();
        expect(includeElem.isPresent()).toBe(false);
      });
    </file>
  </example>
 */


/**
 * @ngdoc event
 * @name ngInclude#$includeContentRequested
 * @eventType emit on the scope ngInclude was declared in
 * @description
 * Emitted every time the ngInclude content is requested.
 *
 * @param {Object} angularEvent Synthetic event object.
 * @param {String} src URL of content to load.
 */


/**
 * @ngdoc event
 * @name ngInclude#$includeContentLoaded
 * @eventType emit on the current ngInclude scope
 * @description
 * Emitted every time the ngInclude content is reloaded.
 *
 * @param {Object} angularEvent Synthetic event object.
 * @param {String} src URL of content to load.
 */


/**
 * @ngdoc event
 * @name ngInclude#$includeContentError
 * @eventType emit on the scope ngInclude was declared in
 * @description
 * Emitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)
 *
 * @param {Object} angularEvent Synthetic event object.
 * @param {String} src URL of content to load.
 */
var ngIncludeDirective = ['$templateRequest', '$anchorScroll', '$animate',
                  function($templateRequest,   $anchorScroll,   $animate) {
  return {
    restrict: 'ECA',
    priority: 400,
    terminal: true,
    transclude: 'element',
    controller: angular.noop,
    compile: function(element, attr) {
      var srcExp = attr.ngInclude || attr.src,
          onloadExp = attr.onload || '',
          autoScrollExp = attr.autoscroll;

      return function(scope, $element, $attr, ctrl, $transclude) {
        var changeCounter = 0,
            currentScope,
            previousElement,
            currentElement;

        var cleanupLastIncludeContent = function() {
          if (previousElement) {
            previousElement.remove();
            previousElement = null;
          }
          if (currentScope) {
            currentScope.$destroy();
            currentScope = null;
          }
          if (currentElement) {
            $animate.leave(currentElement).done(function(response) {
              if (response !== false) previousElement = null;
            });
            previousElement = currentElement;
            currentElement = null;
          }
        };

        scope.$watch(srcExp, function ngIncludeWatchAction(src) {
          var afterAnimation = function(response) {
            if (response !== false && isDefined(autoScrollExp) &&
              (!autoScrollExp || scope.$eval(autoScrollExp))) {
                $anchorScroll();
            }
          };
          var thisChangeId = ++changeCounter;

          if (src) {
            //set the 2nd param to true to ignore the template request error so that the inner
            //contents and scope can be cleaned up.
            $templateRequest(src, true).then(function(response) {
              if (scope.$$destroyed) return;

              if (thisChangeId !== changeCounter) return;
              var newScope = scope.$new();
              ctrl.template = response;

              // Note: This will also link all children of ng-include that were contained in the original
              // html. If that content contains controllers, ... they could pollute/change the scope.
              // However, using ng-include on an element with additional content does not make sense...
              // Note: We can't remove them in the cloneAttchFn of $transclude as that
              // function is called before linking the content, which would apply child
              // directives to non existing elements.
              var clone = $transclude(newScope, function(clone) {
                cleanupLastIncludeContent();
                $animate.enter(clone, null, $element).done(afterAnimation);
              });

              currentScope = newScope;
              currentElement = clone;

              currentScope.$emit('$includeContentLoaded', src);
              scope.$eval(onloadExp);
            }, function() {
              if (scope.$$destroyed) return;

              if (thisChangeId === changeCounter) {
                cleanupLastIncludeContent();
                scope.$emit('$includeContentError', src);
              }
            });
            scope.$emit('$includeContentRequested', src);
          } else {
            cleanupLastIncludeContent();
            ctrl.template = null;
          }
        });
      };
    }
  };
}];

// This directive is called during the $transclude call of the first `ngInclude` directive.
// It will replace and compile the content of the element with the loaded template.
// We need this directive so that the element content is already filled when
// the link function of another directive on the same element as ngInclude
// is called.
var ngIncludeFillContentDirective = ['$compile',
  function($compile) {
    return {
      restrict: 'ECA',
      priority: -400,
      require: 'ngInclude',
      link: function(scope, $element, $attr, ctrl) {
        if (toString.call($element[0]).match(/SVG/)) {
          // WebKit: https://bugs.webkit.org/show_bug.cgi?id=135698 --- SVG elements do not
          // support innerHTML, so detect this here and try to generate the contents
          // specially.
          $element.empty();
          $compile(jqLiteBuildFragment(ctrl.template, window.document).childNodes)(scope,
              function namespaceAdaptedClone(clone) {
            $element.append(clone);
          }, {futureParentElement: $element});
          return;
        }

        $element.html(ctrl.template);
        $compile($element.contents())(scope);
      }
    };
  }];

/**
 * @ngdoc directive
 * @name ngInit
 * @restrict AC
 *
 * @description
 * The `ngInit` directive allows you to evaluate an expression in the
 * current scope.
 *
 * <div class="alert alert-danger">
 * This directive can be abused to add unnecessary amounts of logic into your templates.
 * There are only a few appropriate uses of `ngInit`, such as for aliasing special properties of
 * {@link ng.directive:ngRepeat `ngRepeat`}, as seen in the demo below; and for injecting data via
 * server side scripting. Besides these few cases, you should use {@link guide/controller controllers}
 * rather than `ngInit` to initialize values on a scope.
 * </div>
 *
 * <div class="alert alert-warning">
 * **Note**: If you have assignment in `ngInit` along with a {@link ng.$filter `filter`}, make
 * sure you have parentheses to ensure correct operator precedence:
 * <pre class="prettyprint">
 * `<div ng-init="test1 = ($index | toString)"></div>`
 * </pre>
 * </div>
 *
 * @priority 450
 *
 * @element ANY
 * @param {expression} ngInit {@link guide/expression Expression} to eval.
 *
 * @example
   <example module="initExample" name="ng-init">
     <file name="index.html">
   <script>
     angular.module('initExample', [])
       .controller('ExampleController', ['$scope', function($scope) {
         $scope.list = [['a', 'b'], ['c', 'd']];
       }]);
   </script>
   <div ng-controller="ExampleController">
     <div ng-repeat="innerList in list" ng-init="outerIndex = $index">
       <div ng-repeat="value in innerList" ng-init="innerIndex = $index">
          <span class="example-init">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>
       </div>
     </div>
   </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should alias index positions', function() {
         var elements = element.all(by.css('.example-init'));
         expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');
         expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');
         expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');
         expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');
       });
     </file>
   </example>
 */
var ngInitDirective = ngDirective({
  priority: 450,
  compile: function() {
    return {
      pre: function(scope, element, attrs) {
        scope.$eval(attrs.ngInit);
      }
    };
  }
});

/**
 * @ngdoc directive
 * @name ngList
 *
 * @description
 * Text input that converts between a delimited string and an array of strings. The default
 * delimiter is a comma followed by a space - equivalent to `ng-list=", "`. You can specify a custom
 * delimiter as the value of the `ngList` attribute - for example, `ng-list=" | "`.
 *
 * The behaviour of the directive is affected by the use of the `ngTrim` attribute.
 * * If `ngTrim` is set to `"false"` then whitespace around both the separator and each
 *   list item is respected. This implies that the user of the directive is responsible for
 *   dealing with whitespace but also allows you to use whitespace as a delimiter, such as a
 *   tab or newline character.
 * * Otherwise whitespace around the delimiter is ignored when splitting (although it is respected
 *   when joining the list items back together) and whitespace around each list item is stripped
 *   before it is added to the model.
 *
 * ### Example with Validation
 *
 * <example name="ngList-directive" module="listExample">
 *   <file name="app.js">
 *      angular.module('listExample', [])
 *        .controller('ExampleController', ['$scope', function($scope) {
 *          $scope.names = ['morpheus', 'neo', 'trinity'];
 *        }]);
 *   </file>
 *   <file name="index.html">
 *    <form name="myForm" ng-controller="ExampleController">
 *      <label>List: <input name="namesInput" ng-model="names" ng-list required></label>
 *      <span role="alert">
 *        <span class="error" ng-show="myForm.namesInput.$error.required">
 *        Required!</span>
 *      </span>
 *      <br>
 *      <tt>names = {{names}}</tt><br/>
 *      <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>
 *      <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>
 *      <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
 *      <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
 *     </form>
 *   </file>
 *   <file name="protractor.js" type="protractor">
 *     var listInput = element(by.model('names'));
 *     var names = element(by.exactBinding('names'));
 *     var valid = element(by.binding('myForm.namesInput.$valid'));
 *     var error = element(by.css('span.error'));
 *
 *     it('should initialize to model', function() {
 *       expect(names.getText()).toContain('["morpheus","neo","trinity"]');
 *       expect(valid.getText()).toContain('true');
 *       expect(error.getCssValue('display')).toBe('none');
 *     });
 *
 *     it('should be invalid if empty', function() {
 *       listInput.clear();
 *       listInput.sendKeys('');
 *
 *       expect(names.getText()).toContain('');
 *       expect(valid.getText()).toContain('false');
 *       expect(error.getCssValue('display')).not.toBe('none');
 *     });
 *   </file>
 * </example>
 *
 * ### Example - splitting on newline
 * <example name="ngList-directive-newlines">
 *   <file name="index.html">
 *    <textarea ng-model="list" ng-list="&#10;" ng-trim="false"></textarea>
 *    <pre>{{ list | json }}</pre>
 *   </file>
 *   <file name="protractor.js" type="protractor">
 *     it("should split the text by newlines", function() {
 *       var listInput = element(by.model('list'));
 *       var output = element(by.binding('list | json'));
 *       listInput.sendKeys('abc\ndef\nghi');
 *       expect(output.getText()).toContain('[\n  "abc",\n  "def",\n  "ghi"\n]');
 *     });
 *   </file>
 * </example>
 *
 * @element input
 * @param {string=} ngList optional delimiter that should be used to split the value.
 */
var ngListDirective = function() {
  return {
    restrict: 'A',
    priority: 100,
    require: 'ngModel',
    link: function(scope, element, attr, ctrl) {
      // We want to control whitespace trimming so we use this convoluted approach
      // to access the ngList attribute, which doesn't pre-trim the attribute
      var ngList = element.attr(attr.$attr.ngList) || ', ';
      var trimValues = attr.ngTrim !== 'false';
      var separator = trimValues ? trim(ngList) : ngList;

      var parse = function(viewValue) {
        // If the viewValue is invalid (say required but empty) it will be `undefined`
        if (isUndefined(viewValue)) return;

        var list = [];

        if (viewValue) {
          forEach(viewValue.split(separator), function(value) {
            if (value) list.push(trimValues ? trim(value) : value);
          });
        }

        return list;
      };

      ctrl.$parsers.push(parse);
      ctrl.$formatters.push(function(value) {
        if (isArray(value)) {
          return value.join(ngList);
        }

        return undefined;
      });

      // Override the standard $isEmpty because an empty array means the input is empty.
      ctrl.$isEmpty = function(value) {
        return !value || !value.length;
      };
    }
  };
};

/* global VALID_CLASS: true,
  INVALID_CLASS: true,
  PRISTINE_CLASS: true,
  DIRTY_CLASS: true,
  UNTOUCHED_CLASS: true,
  TOUCHED_CLASS: true
*/

var VALID_CLASS = 'ng-valid',
    INVALID_CLASS = 'ng-invalid',
    PRISTINE_CLASS = 'ng-pristine',
    DIRTY_CLASS = 'ng-dirty',
    UNTOUCHED_CLASS = 'ng-untouched',
    TOUCHED_CLASS = 'ng-touched',
    PENDING_CLASS = 'ng-pending',
    EMPTY_CLASS = 'ng-empty',
    NOT_EMPTY_CLASS = 'ng-not-empty';

var ngModelMinErr = minErr('ngModel');

/**
 * @ngdoc type
 * @name ngModel.NgModelController
 *
 * @property {*} $viewValue The actual value from the control's view. For `input` elements, this is a
 * String. See {@link ngModel.NgModelController#$setViewValue} for information about when the $viewValue
 * is set.
 * @property {*} $modelValue The value in the model that the control is bound to.
 * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever
       the control reads value from the DOM. The functions are called in array order, each passing
       its return value through to the next. The last return value is forwarded to the
       {@link ngModel.NgModelController#$validators `$validators`} collection.

Parsers are used to sanitize / convert the {@link ngModel.NgModelController#$viewValue
`$viewValue`}.

Returning `undefined` from a parser means a parse error occurred. In that case,
no {@link ngModel.NgModelController#$validators `$validators`} will run and the `ngModel`
will be set to `undefined` unless {@link ngModelOptions `ngModelOptions.allowInvalid`}
is set to `true`. The parse error is stored in `ngModel.$error.parse`.

 *
 * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever
       the model value changes. The functions are called in reverse array order, each passing the value through to the
       next. The last return value is used as the actual DOM value.
       Used to format / convert values for display in the control.
 * ```js
 * function formatter(value) {
 *   if (value) {
 *     return value.toUpperCase();
 *   }
 * }
 * ngModel.$formatters.push(formatter);
 * ```
 *
 * @property {Object.<string, function>} $validators A collection of validators that are applied
 *      whenever the model value changes. The key value within the object refers to the name of the
 *      validator while the function refers to the validation operation. The validation operation is
 *      provided with the model value as an argument and must return a true or false value depending
 *      on the response of that validation.
 *
 * ```js
 * ngModel.$validators.validCharacters = function(modelValue, viewValue) {
 *   var value = modelValue || viewValue;
 *   return /[0-9]+/.test(value) &&
 *          /[a-z]+/.test(value) &&
 *          /[A-Z]+/.test(value) &&
 *          /\W+/.test(value);
 * };
 * ```
 *
 * @property {Object.<string, function>} $asyncValidators A collection of validations that are expected to
 *      perform an asynchronous validation (e.g. a HTTP request). The validation function that is provided
 *      is expected to return a promise when it is run during the model validation process. Once the promise
 *      is delivered then the validation status will be set to true when fulfilled and false when rejected.
 *      When the asynchronous validators are triggered, each of the validators will run in parallel and the model
 *      value will only be updated once all validators have been fulfilled. As long as an asynchronous validator
 *      is unfulfilled, its key will be added to the controllers `$pending` property. Also, all asynchronous validators
 *      will only run once all synchronous validators have passed.
 *
 * Please note that if $http is used then it is important that the server returns a success HTTP response code
 * in order to fulfill the validation and a status level of `4xx` in order to reject the validation.
 *
 * ```js
 * ngModel.$asyncValidators.uniqueUsername = function(modelValue, viewValue) {
 *   var value = modelValue || viewValue;
 *
 *   // Lookup user by username
 *   return $http.get('/api/users/' + value).
 *      then(function resolved() {
 *        //username exists, this means validation fails
 *        return $q.reject('exists');
 *      }, function rejected() {
 *        //username does not exist, therefore this validation passes
 *        return true;
 *      });
 * };
 * ```
 *
 * @property {Array.<Function>} $viewChangeListeners Array of functions to execute whenever the
 *     view value has changed. It is called with no arguments, and its return value is ignored.
 *     This can be used in place of additional $watches against the model value.
 *
 * @property {Object} $error An object hash with all failing validator ids as keys.
 * @property {Object} $pending An object hash with all pending validator ids as keys.
 *
 * @property {boolean} $untouched True if control has not lost focus yet.
 * @property {boolean} $touched True if control has lost focus.
 * @property {boolean} $pristine True if user has not interacted with the control yet.
 * @property {boolean} $dirty True if user has already interacted with the control.
 * @property {boolean} $valid True if there is no error.
 * @property {boolean} $invalid True if at least one error on the control.
 * @property {string} $name The name attribute of the control.
 *
 * @description
 *
 * `NgModelController` provides API for the {@link ngModel `ngModel`} directive.
 * The controller contains services for data-binding, validation, CSS updates, and value formatting
 * and parsing. It purposefully does not contain any logic which deals with DOM rendering or
 * listening to DOM events.
 * Such DOM related logic should be provided by other directives which make use of
 * `NgModelController` for data-binding to control elements.
 * Angular provides this DOM logic for most {@link input `input`} elements.
 * At the end of this page you can find a {@link ngModel.NgModelController#custom-control-example
 * custom control example} that uses `ngModelController` to bind to `contenteditable` elements.
 *
 * @example
 * ### Custom Control Example
 * This example shows how to use `NgModelController` with a custom control to achieve
 * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)
 * collaborate together to achieve the desired result.
 *
 * `contenteditable` is an HTML5 attribute, which tells the browser to let the element
 * contents be edited in place by the user.
 *
 * We are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}
 * module to automatically remove "bad" content like inline event listener (e.g. `<span onclick="...">`).
 * However, as we are using `$sce` the model can still decide to provide unsafe content if it marks
 * that content using the `$sce` service.
 *
 * <example name="NgModelController" module="customControl" deps="angular-sanitize.js">
    <file name="style.css">
      [contenteditable] {
        border: 1px solid black;
        background-color: white;
        min-height: 20px;
      }

      .ng-invalid {
        border: 1px solid red;
      }

    </file>
    <file name="script.js">
      angular.module('customControl', ['ngSanitize']).
        directive('contenteditable', ['$sce', function($sce) {
          return {
            restrict: 'A', // only activate on element attribute
            require: '?ngModel', // get a hold of NgModelController
            link: function(scope, element, attrs, ngModel) {
              if (!ngModel) return; // do nothing if no ng-model

              // Specify how UI should be updated
              ngModel.$render = function() {
                element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));
              };

              // Listen for change events to enable binding
              element.on('blur keyup change', function() {
                scope.$evalAsync(read);
              });
              read(); // initialize

              // Write data to the model
              function read() {
                var html = element.html();
                // When we clear the content editable the browser leaves a <br> behind
                // If strip-br attribute is provided then we strip this out
                if (attrs.stripBr && html === '<br>') {
                  html = '';
                }
                ngModel.$setViewValue(html);
              }
            }
          };
        }]);
    </file>
    <file name="index.html">
      <form name="myForm">
       <div contenteditable
            name="myWidget" ng-model="userContent"
            strip-br="true"
            required>Change me!</div>
        <span ng-show="myForm.myWidget.$error.required">Required!</span>
       <hr>
       <textarea ng-model="userContent" aria-label="Dynamic textarea"></textarea>
      </form>
    </file>
    <file name="protractor.js" type="protractor">
    it('should data-bind and become invalid', function() {
      if (browser.params.browser === 'safari' || browser.params.browser === 'firefox') {
        // SafariDriver can't handle contenteditable
        // and Firefox driver can't clear contenteditables very well
        return;
      }
      var contentEditable = element(by.css('[contenteditable]'));
      var content = 'Change me!';

      expect(contentEditable.getText()).toEqual(content);

      contentEditable.clear();
      contentEditable.sendKeys(protractor.Key.BACK_SPACE);
      expect(contentEditable.getText()).toEqual('');
      expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);
    });
    </file>
 * </example>
 *
 *
 */
var NgModelController = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse', '$animate', '$timeout', '$rootScope', '$q', '$interpolate',
    /** @this */ function($scope, $exceptionHandler, $attr, $element, $parse, $animate, $timeout, $rootScope, $q, $interpolate) {
  this.$viewValue = Number.NaN;
  this.$modelValue = Number.NaN;
  this.$$rawModelValue = undefined; // stores the parsed modelValue / model set from scope regardless of validity.
  this.$validators = {};
  this.$asyncValidators = {};
  this.$parsers = [];
  this.$formatters = [];
  this.$viewChangeListeners = [];
  this.$untouched = true;
  this.$touched = false;
  this.$pristine = true;
  this.$dirty = false;
  this.$valid = true;
  this.$invalid = false;
  this.$error = {}; // keep invalid keys here
  this.$$success = {}; // keep valid keys here
  this.$pending = undefined; // keep pending keys here
  this.$name = $interpolate($attr.name || '', false)($scope);
  this.$$parentForm = nullFormCtrl;

  var parsedNgModel = $parse($attr.ngModel),
      parsedNgModelAssign = parsedNgModel.assign,
      ngModelGet = parsedNgModel,
      ngModelSet = parsedNgModelAssign,
      pendingDebounce = null,
      parserValid,
      ctrl = this;

  this.$$setOptions = function(options) {
    ctrl.$options = options;
    if (options && options.getterSetter) {
      var invokeModelGetter = $parse($attr.ngModel + '()'),
          invokeModelSetter = $parse($attr.ngModel + '($$$p)');

      ngModelGet = function($scope) {
        var modelValue = parsedNgModel($scope);
        if (isFunction(modelValue)) {
          modelValue = invokeModelGetter($scope);
        }
        return modelValue;
      };
      ngModelSet = function($scope, newValue) {
        if (isFunction(parsedNgModel($scope))) {
          invokeModelSetter($scope, {$$$p: newValue});
        } else {
          parsedNgModelAssign($scope, newValue);
        }
      };
    } else if (!parsedNgModel.assign) {
      throw ngModelMinErr('nonassign', 'Expression \'{0}\' is non-assignable. Element: {1}',
          $attr.ngModel, startingTag($element));
    }
  };

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$render
   *
   * @description
   * Called when the view needs to be updated. It is expected that the user of the ng-model
   * directive will implement this method.
   *
   * The `$render()` method is invoked in the following situations:
   *
   * * `$rollbackViewValue()` is called.  If we are rolling back the view value to the last
   *   committed value then `$render()` is called to update the input control.
   * * The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and
   *   the `$viewValue` are different from last time.
   *
   * Since `ng-model` does not do a deep watch, `$render()` is only invoked if the values of
   * `$modelValue` and `$viewValue` are actually different from their previous values. If `$modelValue`
   * or `$viewValue` are objects (rather than a string or number) then `$render()` will not be
   * invoked if you only change a property on the objects.
   */
  this.$render = noop;

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$isEmpty
   *
   * @description
   * This is called when we need to determine if the value of an input is empty.
   *
   * For instance, the required directive does this to work out if the input has data or not.
   *
   * The default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.
   *
   * You can override this for input directives whose concept of being empty is different from the
   * default. The `checkboxInputType` directive does this because in its case a value of `false`
   * implies empty.
   *
   * @param {*} value The value of the input to check for emptiness.
   * @returns {boolean} True if `value` is "empty".
   */
  this.$isEmpty = function(value) {
    // eslint-disable-next-line no-self-compare
    return isUndefined(value) || value === '' || value === null || value !== value;
  };

  this.$$updateEmptyClasses = function(value) {
    if (ctrl.$isEmpty(value)) {
      $animate.removeClass($element, NOT_EMPTY_CLASS);
      $animate.addClass($element, EMPTY_CLASS);
    } else {
      $animate.removeClass($element, EMPTY_CLASS);
      $animate.addClass($element, NOT_EMPTY_CLASS);
    }
  };


  var currentValidationRunId = 0;

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$setValidity
   *
   * @description
   * Change the validity state, and notify the form.
   *
   * This method can be called within $parsers/$formatters or a custom validation implementation.
   * However, in most cases it should be sufficient to use the `ngModel.$validators` and
   * `ngModel.$asyncValidators` collections which will call `$setValidity` automatically.
   *
   * @param {string} validationErrorKey Name of the validator. The `validationErrorKey` will be assigned
   *        to either `$error[validationErrorKey]` or `$pending[validationErrorKey]`
   *        (for unfulfilled `$asyncValidators`), so that it is available for data-binding.
   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case
   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`
   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .
   * @param {boolean} isValid Whether the current state is valid (true), invalid (false), pending (undefined),
   *                          or skipped (null). Pending is used for unfulfilled `$asyncValidators`.
   *                          Skipped is used by Angular when validators do not run because of parse errors and
   *                          when `$asyncValidators` do not run because any of the `$validators` failed.
   */
  addSetValidityMethod({
    ctrl: this,
    $element: $element,
    set: function(object, property) {
      object[property] = true;
    },
    unset: function(object, property) {
      delete object[property];
    },
    $animate: $animate
  });

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$setPristine
   *
   * @description
   * Sets the control to its pristine state.
   *
   * This method can be called to remove the `ng-dirty` class and set the control to its pristine
   * state (`ng-pristine` class). A model is considered to be pristine when the control
   * has not been changed from when first compiled.
   */
  this.$setPristine = function() {
    ctrl.$dirty = false;
    ctrl.$pristine = true;
    $animate.removeClass($element, DIRTY_CLASS);
    $animate.addClass($element, PRISTINE_CLASS);
  };

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$setDirty
   *
   * @description
   * Sets the control to its dirty state.
   *
   * This method can be called to remove the `ng-pristine` class and set the control to its dirty
   * state (`ng-dirty` class). A model is considered to be dirty when the control has been changed
   * from when first compiled.
   */
  this.$setDirty = function() {
    ctrl.$dirty = true;
    ctrl.$pristine = false;
    $animate.removeClass($element, PRISTINE_CLASS);
    $animate.addClass($element, DIRTY_CLASS);
    ctrl.$$parentForm.$setDirty();
  };

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$setUntouched
   *
   * @description
   * Sets the control to its untouched state.
   *
   * This method can be called to remove the `ng-touched` class and set the control to its
   * untouched state (`ng-untouched` class). Upon compilation, a model is set as untouched
   * by default, however this function can be used to restore that state if the model has
   * already been touched by the user.
   */
  this.$setUntouched = function() {
    ctrl.$touched = false;
    ctrl.$untouched = true;
    $animate.setClass($element, UNTOUCHED_CLASS, TOUCHED_CLASS);
  };

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$setTouched
   *
   * @description
   * Sets the control to its touched state.
   *
   * This method can be called to remove the `ng-untouched` class and set the control to its
   * touched state (`ng-touched` class). A model is considered to be touched when the user has
   * first focused the control element and then shifted focus away from the control (blur event).
   */
  this.$setTouched = function() {
    ctrl.$touched = true;
    ctrl.$untouched = false;
    $animate.setClass($element, TOUCHED_CLASS, UNTOUCHED_CLASS);
  };

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$rollbackViewValue
   *
   * @description
   * Cancel an update and reset the input element's value to prevent an update to the `$modelValue`,
   * which may be caused by a pending debounced event or because the input is waiting for some
   * future event.
   *
   * If you have an input that uses `ng-model-options` to set up debounced updates or updates that
   * depend on special events such as `blur`, there can be a period when the `$viewValue` is out of
   * sync with the ngModel's `$modelValue`.
   *
   * In this case, you can use `$rollbackViewValue()` to manually cancel the debounced / future update
   * and reset the input to the last committed view value.
   *
   * It is also possible that you run into difficulties if you try to update the ngModel's `$modelValue`
   * programmatically before these debounced/future events have resolved/occurred, because Angular's
   * dirty checking mechanism is not able to tell whether the model has actually changed or not.
   *
   * The `$rollbackViewValue()` method should be called before programmatically changing the model of an
   * input which may have such events pending. This is important in order to make sure that the
   * input field will be updated with the new model value and any pending operations are cancelled.
   *
   * <example name="ng-model-cancel-update" module="cancel-update-example">
   *   <file name="app.js">
   *     angular.module('cancel-update-example', [])
   *
   *     .controller('CancelUpdateController', ['$scope', function($scope) {
   *       $scope.model = {value1: '', value2: ''};
   *
   *       $scope.setEmpty = function(e, value, rollback) {
   *         if (e.keyCode === 27) {
   *           e.preventDefault();
   *           if (rollback) {
   *             $scope.myForm[value].$rollbackViewValue();
   *           }
   *           $scope.model[value] = '';
   *         }
   *       };
   *     }]);
   *   </file>
   *   <file name="index.html">
   *     <div ng-controller="CancelUpdateController">
   *       <p>Both of these inputs are only updated if they are blurred. Hitting escape should
   *       empty them. Follow these steps and observe the difference:</p>
   *       <ol>
   *         <li>Type something in the input. You will see that the model is not yet updated</li>
   *         <li>Press the Escape key.
   *           <ol>
   *             <li> In the first example, nothing happens, because the model is already '', and no
   *             update is detected. If you blur the input, the model will be set to the current view.
   *             </li>
   *             <li> In the second example, the pending update is cancelled, and the input is set back
   *             to the last committed view value (''). Blurring the input does nothing.
   *             </li>
   *           </ol>
   *         </li>
   *       </ol>
   *
   *       <form name="myForm" ng-model-options="{ updateOn: 'blur' }">
   *         <div>
   *           <p id="inputDescription1">Without $rollbackViewValue():</p>
   *           <input name="value1" aria-describedby="inputDescription1" ng-model="model.value1"
   *                  ng-keydown="setEmpty($event, 'value1')">
   *           value1: "{{ model.value1 }}"
   *         </div>
   *
   *         <div>
   *           <p id="inputDescription2">With $rollbackViewValue():</p>
   *           <input name="value2" aria-describedby="inputDescription2" ng-model="model.value2"
   *                  ng-keydown="setEmpty($event, 'value2', true)">
   *           value2: "{{ model.value2 }}"
   *         </div>
   *       </form>
   *     </div>
   *   </file>
       <file name="style.css">
          div {
            display: table-cell;
          }
          div:nth-child(1) {
            padding-right: 30px;
          }

        </file>
   * </example>
   */
  this.$rollbackViewValue = function() {
    $timeout.cancel(pendingDebounce);
    ctrl.$viewValue = ctrl.$$lastCommittedViewValue;
    ctrl.$render();
  };

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$validate
   *
   * @description
   * Runs each of the registered validators (first synchronous validators and then
   * asynchronous validators).
   * If the validity changes to invalid, the model will be set to `undefined`,
   * unless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.
   * If the validity changes to valid, it will set the model to the last available valid
   * `$modelValue`, i.e. either the last parsed value or the last value set from the scope.
   */
  this.$validate = function() {
    // ignore $validate before model is initialized
    if (isNumberNaN(ctrl.$modelValue)) {
      return;
    }

    var viewValue = ctrl.$$lastCommittedViewValue;
    // Note: we use the $$rawModelValue as $modelValue might have been
    // set to undefined during a view -> model update that found validation
    // errors. We can't parse the view here, since that could change
    // the model although neither viewValue nor the model on the scope changed
    var modelValue = ctrl.$$rawModelValue;

    var prevValid = ctrl.$valid;
    var prevModelValue = ctrl.$modelValue;

    var allowInvalid = ctrl.$options && ctrl.$options.allowInvalid;

    ctrl.$$runValidators(modelValue, viewValue, function(allValid) {
      // If there was no change in validity, don't update the model
      // This prevents changing an invalid modelValue to undefined
      if (!allowInvalid && prevValid !== allValid) {
        // Note: Don't check ctrl.$valid here, as we could have
        // external validators (e.g. calculated on the server),
        // that just call $setValidity and need the model value
        // to calculate their validity.
        ctrl.$modelValue = allValid ? modelValue : undefined;

        if (ctrl.$modelValue !== prevModelValue) {
          ctrl.$$writeModelToScope();
        }
      }
    });

  };

  this.$$runValidators = function(modelValue, viewValue, doneCallback) {
    currentValidationRunId++;
    var localValidationRunId = currentValidationRunId;

    // check parser error
    if (!processParseErrors()) {
      validationDone(false);
      return;
    }
    if (!processSyncValidators()) {
      validationDone(false);
      return;
    }
    processAsyncValidators();

    function processParseErrors() {
      var errorKey = ctrl.$$parserName || 'parse';
      if (isUndefined(parserValid)) {
        setValidity(errorKey, null);
      } else {
        if (!parserValid) {
          forEach(ctrl.$validators, function(v, name) {
            setValidity(name, null);
          });
          forEach(ctrl.$asyncValidators, function(v, name) {
            setValidity(name, null);
          });
        }
        // Set the parse error last, to prevent unsetting it, should a $validators key == parserName
        setValidity(errorKey, parserValid);
        return parserValid;
      }
      return true;
    }

    function processSyncValidators() {
      var syncValidatorsValid = true;
      forEach(ctrl.$validators, function(validator, name) {
        var result = validator(modelValue, viewValue);
        syncValidatorsValid = syncValidatorsValid && result;
        setValidity(name, result);
      });
      if (!syncValidatorsValid) {
        forEach(ctrl.$asyncValidators, function(v, name) {
          setValidity(name, null);
        });
        return false;
      }
      return true;
    }

    function processAsyncValidators() {
      var validatorPromises = [];
      var allValid = true;
      forEach(ctrl.$asyncValidators, function(validator, name) {
        var promise = validator(modelValue, viewValue);
        if (!isPromiseLike(promise)) {
          throw ngModelMinErr('nopromise',
            'Expected asynchronous validator to return a promise but got \'{0}\' instead.', promise);
        }
        setValidity(name, undefined);
        validatorPromises.push(promise.then(function() {
          setValidity(name, true);
        }, function() {
          allValid = false;
          setValidity(name, false);
        }));
      });
      if (!validatorPromises.length) {
        validationDone(true);
      } else {
        $q.all(validatorPromises).then(function() {
          validationDone(allValid);
        }, noop);
      }
    }

    function setValidity(name, isValid) {
      if (localValidationRunId === currentValidationRunId) {
        ctrl.$setValidity(name, isValid);
      }
    }

    function validationDone(allValid) {
      if (localValidationRunId === currentValidationRunId) {

        doneCallback(allValid);
      }
    }
  };

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$commitViewValue
   *
   * @description
   * Commit a pending update to the `$modelValue`.
   *
   * Updates may be pending by a debounced event or because the input is waiting for a some future
   * event defined in `ng-model-options`. this method is rarely needed as `NgModelController`
   * usually handles calling this in response to input events.
   */
  this.$commitViewValue = function() {
    var viewValue = ctrl.$viewValue;

    $timeout.cancel(pendingDebounce);

    // If the view value has not changed then we should just exit, except in the case where there is
    // a native validator on the element. In this case the validation state may have changed even though
    // the viewValue has stayed empty.
    if (ctrl.$$lastCommittedViewValue === viewValue && (viewValue !== '' || !ctrl.$$hasNativeValidators)) {
      return;
    }
    ctrl.$$updateEmptyClasses(viewValue);
    ctrl.$$lastCommittedViewValue = viewValue;

    // change to dirty
    if (ctrl.$pristine) {
      this.$setDirty();
    }
    this.$$parseAndValidate();
  };

  this.$$parseAndValidate = function() {
    var viewValue = ctrl.$$lastCommittedViewValue;
    var modelValue = viewValue;
    parserValid = isUndefined(modelValue) ? undefined : true;

    if (parserValid) {
      for (var i = 0; i < ctrl.$parsers.length; i++) {
        modelValue = ctrl.$parsers[i](modelValue);
        if (isUndefined(modelValue)) {
          parserValid = false;
          break;
        }
      }
    }
    if (isNumberNaN(ctrl.$modelValue)) {
      // ctrl.$modelValue has not been touched yet...
      ctrl.$modelValue = ngModelGet($scope);
    }
    var prevModelValue = ctrl.$modelValue;
    var allowInvalid = ctrl.$options && ctrl.$options.allowInvalid;
    ctrl.$$rawModelValue = modelValue;

    if (allowInvalid) {
      ctrl.$modelValue = modelValue;
      writeToModelIfNeeded();
    }

    // Pass the $$lastCommittedViewValue here, because the cached viewValue might be out of date.
    // This can happen if e.g. $setViewValue is called from inside a parser
    ctrl.$$runValidators(modelValue, ctrl.$$lastCommittedViewValue, function(allValid) {
      if (!allowInvalid) {
        // Note: Don't check ctrl.$valid here, as we could have
        // external validators (e.g. calculated on the server),
        // that just call $setValidity and need the model value
        // to calculate their validity.
        ctrl.$modelValue = allValid ? modelValue : undefined;
        writeToModelIfNeeded();
      }
    });

    function writeToModelIfNeeded() {
      if (ctrl.$modelValue !== prevModelValue) {
        ctrl.$$writeModelToScope();
      }
    }
  };

  this.$$writeModelToScope = function() {
    ngModelSet($scope, ctrl.$modelValue);
    forEach(ctrl.$viewChangeListeners, function(listener) {
      try {
        listener();
      } catch (e) {
        $exceptionHandler(e);
      }
    });
  };

  /**
   * @ngdoc method
   * @name ngModel.NgModelController#$setViewValue
   *
   * @description
   * Update the view value.
   *
   * This method should be called when a control wants to change the view value; typically,
   * this is done from within a DOM event handler. For example, the {@link ng.directive:input input}
   * directive calls it when the value of the input changes and {@link ng.directive:select select}
   * calls it when an option is selected.
   *
   * When `$setViewValue` is called, the new `value` will be staged for committing through the `$parsers`
   * and `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged
   * value sent directly for processing, finally to be applied to `$modelValue` and then the
   * **expression** specified in the `ng-model` attribute. Lastly, all the registered change listeners,
   * in the `$viewChangeListeners` list, are called.
   *
   * In case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`
   * and the `default` trigger is not listed, all those actions will remain pending until one of the
   * `updateOn` events is triggered on the DOM element.
   * All these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}
   * directive is used with a custom debounce for this particular event.
   * Note that a `$digest` is only triggered once the `updateOn` events are fired, or if `debounce`
   * is specified, once the timer runs out.
   *
   * When used with standard inputs, the view value will always be a string (which is in some cases
   * parsed into another type, such as a `Date` object for `input[date]`.)
   * However, custom controls might also pass objects to this method. In this case, we should make
   * a copy of the object before passing it to `$setViewValue`. This is because `ngModel` does not
   * perform a deep watch of objects, it only looks for a change of identity. If you only change
   * the property of the object then ngModel will not realize that the object has changed and
   * will not invoke the `$parsers` and `$validators` pipelines. For this reason, you should
   * not change properties of the copy once it has been passed to `$setViewValue`.
   * Otherwise you may cause the model value on the scope to change incorrectly.
   *
   * <div class="alert alert-info">
   * In any case, the value passed to the method should always reflect the current value
   * of the control. For example, if you are calling `$setViewValue` for an input element,
   * you should pass the input DOM value. Otherwise, the control and the scope model become
   * out of sync. It's also important to note that `$setViewValue` does not call `$render` or change
   * the control's DOM value in any way. If we want to change the control's DOM value
   * programmatically, we should update the `ngModel` scope expression. Its new value will be
   * picked up by the model controller, which will run it through the `$formatters`, `$render` it
   * to update the DOM, and finally call `$validate` on it.
   * </div>
   *
   * @param {*} value value from the view.
   * @param {string} trigger Event that triggered the update.
   */
  this.$setViewValue = function(value, trigger) {
    ctrl.$viewValue = value;
    if (!ctrl.$options || ctrl.$options.updateOnDefault) {
      ctrl.$$debounceViewValueCommit(trigger);
    }
  };

  this.$$debounceViewValueCommit = function(trigger) {
    var debounceDelay = 0,
        options = ctrl.$options,
        debounce;

    if (options && isDefined(options.debounce)) {
      debounce = options.debounce;
      if (isNumber(debounce)) {
        debounceDelay = debounce;
      } else if (isNumber(debounce[trigger])) {
        debounceDelay = debounce[trigger];
      } else if (isNumber(debounce['default'])) {
        debounceDelay = debounce['default'];
      }
    }

    $timeout.cancel(pendingDebounce);
    if (debounceDelay) {
      pendingDebounce = $timeout(function() {
        ctrl.$commitViewValue();
      }, debounceDelay);
    } else if ($rootScope.$$phase) {
      ctrl.$commitViewValue();
    } else {
      $scope.$apply(function() {
        ctrl.$commitViewValue();
      });
    }
  };

  // model -> value
  // Note: we cannot use a normal scope.$watch as we want to detect the following:
  // 1. scope value is 'a'
  // 2. user enters 'b'
  // 3. ng-change kicks in and reverts scope value to 'a'
  //    -> scope value did not change since the last digest as
  //       ng-change executes in apply phase
  // 4. view should be changed back to 'a'
  $scope.$watch(function ngModelWatch() {
    var modelValue = ngModelGet($scope);

    // if scope model value and ngModel value are out of sync
    // TODO(perf): why not move this to the action fn?
    if (modelValue !== ctrl.$modelValue &&
       // checks for NaN is needed to allow setting the model to NaN when there's an asyncValidator
        // eslint-disable-next-line no-self-compare
       (ctrl.$modelValue === ctrl.$modelValue || modelValue === modelValue)
    ) {
      ctrl.$modelValue = ctrl.$$rawModelValue = modelValue;
      parserValid = undefined;

      var formatters = ctrl.$formatters,
          idx = formatters.length;

      var viewValue = modelValue;
      while (idx--) {
        viewValue = formatters[idx](viewValue);
      }
      if (ctrl.$viewValue !== viewValue) {
        ctrl.$$updateEmptyClasses(viewValue);
        ctrl.$viewValue = ctrl.$$lastCommittedViewValue = viewValue;
        ctrl.$render();

        // It is possible that model and view value have been updated during render
        ctrl.$$runValidators(ctrl.$modelValue, ctrl.$viewValue, noop);
      }
    }

    return modelValue;
  });
}];


/**
 * @ngdoc directive
 * @name ngModel
 *
 * @element input
 * @priority 1
 *
 * @description
 * The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a
 * property on the scope using {@link ngModel.NgModelController NgModelController},
 * which is created and exposed by this directive.
 *
 * `ngModel` is responsible for:
 *
 * - Binding the view into the model, which other directives such as `input`, `textarea` or `select`
 *   require.
 * - Providing validation behavior (i.e. required, number, email, url).
 * - Keeping the state of the control (valid/invalid, dirty/pristine, touched/untouched, validation errors).
 * - Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`, `ng-touched`,
 *   `ng-untouched`, `ng-empty`, `ng-not-empty`) including animations.
 * - Registering the control with its parent {@link ng.directive:form form}.
 *
 * Note: `ngModel` will try to bind to the property given by evaluating the expression on the
 * current scope. If the property doesn't already exist on this scope, it will be created
 * implicitly and added to the scope.
 *
 * For best practices on using `ngModel`, see:
 *
 *  - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)
 *
 * For basic examples, how to use `ngModel`, see:
 *
 *  - {@link ng.directive:input input}
 *    - {@link input[text] text}
 *    - {@link input[checkbox] checkbox}
 *    - {@link input[radio] radio}
 *    - {@link input[number] number}
 *    - {@link input[email] email}
 *    - {@link input[url] url}
 *    - {@link input[date] date}
 *    - {@link input[datetime-local] datetime-local}
 *    - {@link input[time] time}
 *    - {@link input[month] month}
 *    - {@link input[week] week}
 *  - {@link ng.directive:select select}
 *  - {@link ng.directive:textarea textarea}
 *
 * # Complex Models (objects or collections)
 *
 * By default, `ngModel` watches the model by reference, not value. This is important to know when
 * binding inputs to models that are objects (e.g. `Date`) or collections (e.g. arrays). If only properties of the
 * object or collection change, `ngModel` will not be notified and so the input will not be  re-rendered.
 *
 * The model must be assigned an entirely new object or collection before a re-rendering will occur.
 *
 * Some directives have options that will cause them to use a custom `$watchCollection` on the model expression
 * - for example, `ngOptions` will do so when a `track by` clause is included in the comprehension expression or
 * if the select is given the `multiple` attribute.
 *
 * The `$watchCollection()` method only does a shallow comparison, meaning that changing properties deeper than the
 * first level of the object (or only changing the properties of an item in the collection if it's an array) will still
 * not trigger a re-rendering of the model.
 *
 * # CSS classes
 * The following CSS classes are added and removed on the associated input/select/textarea element
 * depending on the validity of the model.
 *
 *  - `ng-valid`: the model is valid
 *  - `ng-invalid`: the model is invalid
 *  - `ng-valid-[key]`: for each valid key added by `$setValidity`
 *  - `ng-invalid-[key]`: for each invalid key added by `$setValidity`
 *  - `ng-pristine`: the control hasn't been interacted with yet
 *  - `ng-dirty`: the control has been interacted with
 *  - `ng-touched`: the control has been blurred
 *  - `ng-untouched`: the control hasn't been blurred
 *  - `ng-pending`: any `$asyncValidators` are unfulfilled
 *  - `ng-empty`: the view does not contain a value or the value is deemed "empty", as defined
 *     by the {@link ngModel.NgModelController#$isEmpty} method
 *  - `ng-not-empty`: the view contains a non-empty value
 *
 * Keep in mind that ngAnimate can detect each of these classes when added and removed.
 *
 * ## Animation Hooks
 *
 * Animations within models are triggered when any of the associated CSS classes are added and removed
 * on the input element which is attached to the model. These classes include: `.ng-pristine`, `.ng-dirty`,
 * `.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.
 * The animations that are triggered within ngModel are similar to how they work in ngClass and
 * animations can be hooked into using CSS transitions, keyframes as well as JS animations.
 *
 * The following example shows a simple way to utilize CSS transitions to style an input element
 * that has been rendered as invalid after it has been validated:
 *
 * <pre>
 * //be sure to include ngAnimate as a module to hook into more
 * //advanced animations
 * .my-input {
 *   transition:0.5s linear all;
 *   background: white;
 * }
 * .my-input.ng-invalid {
 *   background: red;
 *   color:white;
 * }
 * </pre>
 *
 * @example
 * <example deps="angular-animate.js" animations="true" fixBase="true" module="inputExample" name="ng-model">
     <file name="index.html">
       <script>
        angular.module('inputExample', [])
          .controller('ExampleController', ['$scope', function($scope) {
            $scope.val = '1';
          }]);
       </script>
       <style>
         .my-input {
           transition:all linear 0.5s;
           background: transparent;
         }
         .my-input.ng-invalid {
           color:white;
           background: red;
         }
       </style>
       <p id="inputDescription">
        Update input to see transitions when valid/invalid.
        Integer is a valid value.
       </p>
       <form name="testForm" ng-controller="ExampleController">
         <input ng-model="val" ng-pattern="/^\d+$/" name="anim" class="my-input"
                aria-describedby="inputDescription" />
       </form>
     </file>
 * </example>
 *
 * ## Binding to a getter/setter
 *
 * Sometimes it's helpful to bind `ngModel` to a getter/setter function.  A getter/setter is a
 * function that returns a representation of the model when called with zero arguments, and sets
 * the internal state of a model when called with an argument. It's sometimes useful to use this
 * for models that have an internal representation that's different from what the model exposes
 * to the view.
 *
 * <div class="alert alert-success">
 * **Best Practice:** It's best to keep getters fast because Angular is likely to call them more
 * frequently than other parts of your code.
 * </div>
 *
 * You use this behavior by adding `ng-model-options="{ getterSetter: true }"` to an element that
 * has `ng-model` attached to it. You can also add `ng-model-options="{ getterSetter: true }"` to
 * a `<form>`, which will enable this behavior for all `<input>`s within it. See
 * {@link ng.directive:ngModelOptions `ngModelOptions`} for more.
 *
 * The following example shows how to use `ngModel` with a getter/setter:
 *
 * @example
 * <example name="ngModel-getter-setter" module="getterSetterExample">
     <file name="index.html">
       <div ng-controller="ExampleController">
         <form name="userForm">
           <label>Name:
             <input type="text" name="userName"
                    ng-model="user.name"
                    ng-model-options="{ getterSetter: true }" />
           </label>
         </form>
         <pre>user.name = <span ng-bind="user.name()"></span></pre>
       </div>
     </file>
     <file name="app.js">
       angular.module('getterSetterExample', [])
         .controller('ExampleController', ['$scope', function($scope) {
           var _name = 'Brian';
           $scope.user = {
             name: function(newName) {
              // Note that newName can be undefined for two reasons:
              // 1. Because it is called as a getter and thus called with no arguments
              // 2. Because the property should actually be set to undefined. This happens e.g. if the
              //    input is invalid
              return arguments.length ? (_name = newName) : _name;
             }
           };
         }]);
     </file>
 * </example>
 */
var ngModelDirective = ['$rootScope', function($rootScope) {
  return {
    restrict: 'A',
    require: ['ngModel', '^?form', '^?ngModelOptions'],
    controller: NgModelController,
    // Prelink needs to run before any input directive
    // so that we can set the NgModelOptions in NgModelController
    // before anyone else uses it.
    priority: 1,
    compile: function ngModelCompile(element) {
      // Setup initial state of the control
      element.addClass(PRISTINE_CLASS).addClass(UNTOUCHED_CLASS).addClass(VALID_CLASS);

      return {
        pre: function ngModelPreLink(scope, element, attr, ctrls) {
          var modelCtrl = ctrls[0],
              formCtrl = ctrls[1] || modelCtrl.$$parentForm;

          modelCtrl.$$setOptions(ctrls[2] && ctrls[2].$options);

          // notify others, especially parent forms
          formCtrl.$addControl(modelCtrl);

          attr.$observe('name', function(newValue) {
            if (modelCtrl.$name !== newValue) {
              modelCtrl.$$parentForm.$$renameControl(modelCtrl, newValue);
            }
          });

          scope.$on('$destroy', function() {
            modelCtrl.$$parentForm.$removeControl(modelCtrl);
          });
        },
        post: function ngModelPostLink(scope, element, attr, ctrls) {
          var modelCtrl = ctrls[0];
          if (modelCtrl.$options && modelCtrl.$options.updateOn) {
            element.on(modelCtrl.$options.updateOn, function(ev) {
              modelCtrl.$$debounceViewValueCommit(ev && ev.type);
            });
          }

          element.on('blur', function() {
            if (modelCtrl.$touched) return;

            if ($rootScope.$$phase) {
              scope.$evalAsync(modelCtrl.$setTouched);
            } else {
              scope.$apply(modelCtrl.$setTouched);
            }
          });
        }
      };
    }
  };
}];



var DEFAULT_REGEXP = /(\s+|^)default(\s+|$)/;

/**
 * @ngdoc directive
 * @name ngModelOptions
 *
 * @description
 * Allows tuning how model updates are done. Using `ngModelOptions` you can specify a custom list of
 * events that will trigger a model update and/or a debouncing delay so that the actual update only
 * takes place when a timer expires; this timer will be reset after another change takes place.
 *
 * Given the nature of `ngModelOptions`, the value displayed inside input fields in the view might
 * be different from the value in the actual model. This means that if you update the model you
 * should also invoke {@link ngModel.NgModelController `$rollbackViewValue`} on the relevant input field in
 * order to make sure it is synchronized with the model and that any debounced action is canceled.
 *
 * The easiest way to reference the control's {@link ngModel.NgModelController `$rollbackViewValue`}
 * method is by making sure the input is placed inside a form that has a `name` attribute. This is
 * important because `form` controllers are published to the related scope under the name in their
 * `name` attribute.
 *
 * Any pending changes will take place immediately when an enclosing form is submitted via the
 * `submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`
 * to have access to the updated model.
 *
 * `ngModelOptions` has an effect on the element it's declared on and its descendants.
 *
 * @param {Object} ngModelOptions options to apply to the current model. Valid keys are:
 *   - `updateOn`: string specifying which event should the input be bound to. You can set several
 *     events using an space delimited list. There is a special event called `default` that
 *     matches the default events belonging of the control.
 *   - `debounce`: integer value which contains the debounce model update value in milliseconds. A
 *     value of 0 triggers an immediate update. If an object is supplied instead, you can specify a
 *     custom value for each event. For example:
 *     `ng-model-options="{ updateOn: 'default blur', debounce: { 'default': 500, 'blur': 0 } }"`
 *   - `allowInvalid`: boolean value which indicates that the model can be set with values that did
 *     not validate correctly instead of the default behavior of setting the model to undefined.
 *   - `getterSetter`: boolean value which determines whether or not to treat functions bound to
       `ngModel` as getters/setters.
 *   - `timezone`: Defines the timezone to be used to read/write the `Date` instance in the model for
 *     `<input type="date">`, `<input type="time">`, ... . It understands UTC/GMT and the
 *     continental US time zone abbreviations, but for general use, use a time zone offset, for
 *     example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)
 *     If not specified, the timezone of the browser will be used.
 *
 * @example

  The following example shows how to override immediate updates. Changes on the inputs within the
  form will update the model only when the control loses focus (blur event). If `escape` key is
  pressed while the input field is focused, the value is reset to the value in the current model.

  <example name="ngModelOptions-directive-blur" module="optionsExample">
    <file name="index.html">
      <div ng-controller="ExampleController">
        <form name="userForm">
          <label>Name:
            <input type="text" name="userName"
                   ng-model="user.name"
                   ng-model-options="{ updateOn: 'blur' }"
                   ng-keyup="cancel($event)" />
          </label><br />
          <label>Other data:
            <input type="text" ng-model="user.data" />
          </label><br />
        </form>
        <pre>user.name = <span ng-bind="user.name"></span></pre>
        <pre>user.data = <span ng-bind="user.data"></span></pre>
      </div>
    </file>
    <file name="app.js">
      angular.module('optionsExample', [])
        .controller('ExampleController', ['$scope', function($scope) {
          $scope.user = { name: 'John', data: '' };

          $scope.cancel = function(e) {
            if (e.keyCode === 27) {
              $scope.userForm.userName.$rollbackViewValue();
            }
          };
        }]);
    </file>
    <file name="protractor.js" type="protractor">
      var model = element(by.binding('user.name'));
      var input = element(by.model('user.name'));
      var other = element(by.model('user.data'));

      it('should allow custom events', function() {
        input.sendKeys(' Doe');
        input.click();
        expect(model.getText()).toEqual('John');
        other.click();
        expect(model.getText()).toEqual('John Doe');
      });

      it('should $rollbackViewValue when model changes', function() {
        input.sendKeys(' Doe');
        expect(input.getAttribute('value')).toEqual('John Doe');
        input.sendKeys(protractor.Key.ESCAPE);
        expect(input.getAttribute('value')).toEqual('John');
        other.click();
        expect(model.getText()).toEqual('John');
      });
    </file>
  </example>

  This one shows how to debounce model changes. Model will be updated only 1 sec after last change.
  If the `Clear` button is pressed, any debounced action is canceled and the value becomes empty.

  <example name="ngModelOptions-directive-debounce" module="optionsExample">
    <file name="index.html">
      <div ng-controller="ExampleController">
        <form name="userForm">
          <label>Name:
            <input type="text" name="userName"
                   ng-model="user.name"
                   ng-model-options="{ debounce: 1000 }" />
          </label>
          <button ng-click="userForm.userName.$rollbackViewValue(); user.name=''">Clear</button>
          <br />
        </form>
        <pre>user.name = <span ng-bind="user.name"></span></pre>
      </div>
    </file>
    <file name="app.js">
      angular.module('optionsExample', [])
        .controller('ExampleController', ['$scope', function($scope) {
          $scope.user = { name: 'Igor' };
        }]);
    </file>
  </example>

  This one shows how to bind to getter/setters:

  <example name="ngModelOptions-directive-getter-setter" module="getterSetterExample">
    <file name="index.html">
      <div ng-controller="ExampleController">
        <form name="userForm">
          <label>Name:
            <input type="text" name="userName"
                   ng-model="user.name"
                   ng-model-options="{ getterSetter: true }" />
          </label>
        </form>
        <pre>user.name = <span ng-bind="user.name()"></span></pre>
      </div>
    </file>
    <file name="app.js">
      angular.module('getterSetterExample', [])
        .controller('ExampleController', ['$scope', function($scope) {
          var _name = 'Brian';
          $scope.user = {
            name: function(newName) {
              // Note that newName can be undefined for two reasons:
              // 1. Because it is called as a getter and thus called with no arguments
              // 2. Because the property should actually be set to undefined. This happens e.g. if the
              //    input is invalid
              return arguments.length ? (_name = newName) : _name;
            }
          };
        }]);
    </file>
  </example>
 */
var ngModelOptionsDirective = function() {
  return {
    restrict: 'A',
    controller: ['$scope', '$attrs', function NgModelOptionsController($scope, $attrs) {
      var that = this;
      this.$options = copy($scope.$eval($attrs.ngModelOptions));
      // Allow adding/overriding bound events
      if (isDefined(this.$options.updateOn)) {
        this.$options.updateOnDefault = false;
        // extract "default" pseudo-event from list of events that can trigger a model update
        this.$options.updateOn = trim(this.$options.updateOn.replace(DEFAULT_REGEXP, function() {
          that.$options.updateOnDefault = true;
          return ' ';
        }));
      } else {
        this.$options.updateOnDefault = true;
      }
    }]
  };
};



// helper methods
function addSetValidityMethod(context) {
  var ctrl = context.ctrl,
      $element = context.$element,
      classCache = {},
      set = context.set,
      unset = context.unset,
      $animate = context.$animate;

  classCache[INVALID_CLASS] = !(classCache[VALID_CLASS] = $element.hasClass(VALID_CLASS));

  ctrl.$setValidity = setValidity;

  function setValidity(validationErrorKey, state, controller) {
    if (isUndefined(state)) {
      createAndSet('$pending', validationErrorKey, controller);
    } else {
      unsetAndCleanup('$pending', validationErrorKey, controller);
    }
    if (!isBoolean(state)) {
      unset(ctrl.$error, validationErrorKey, controller);
      unset(ctrl.$$success, validationErrorKey, controller);
    } else {
      if (state) {
        unset(ctrl.$error, validationErrorKey, controller);
        set(ctrl.$$success, validationErrorKey, controller);
      } else {
        set(ctrl.$error, validationErrorKey, controller);
        unset(ctrl.$$success, validationErrorKey, controller);
      }
    }
    if (ctrl.$pending) {
      cachedToggleClass(PENDING_CLASS, true);
      ctrl.$valid = ctrl.$invalid = undefined;
      toggleValidationCss('', null);
    } else {
      cachedToggleClass(PENDING_CLASS, false);
      ctrl.$valid = isObjectEmpty(ctrl.$error);
      ctrl.$invalid = !ctrl.$valid;
      toggleValidationCss('', ctrl.$valid);
    }

    // re-read the state as the set/unset methods could have
    // combined state in ctrl.$error[validationError] (used for forms),
    // where setting/unsetting only increments/decrements the value,
    // and does not replace it.
    var combinedState;
    if (ctrl.$pending && ctrl.$pending[validationErrorKey]) {
      combinedState = undefined;
    } else if (ctrl.$error[validationErrorKey]) {
      combinedState = false;
    } else if (ctrl.$$success[validationErrorKey]) {
      combinedState = true;
    } else {
      combinedState = null;
    }

    toggleValidationCss(validationErrorKey, combinedState);
    ctrl.$$parentForm.$setValidity(validationErrorKey, combinedState, ctrl);
  }

  function createAndSet(name, value, controller) {
    if (!ctrl[name]) {
      ctrl[name] = {};
    }
    set(ctrl[name], value, controller);
  }

  function unsetAndCleanup(name, value, controller) {
    if (ctrl[name]) {
      unset(ctrl[name], value, controller);
    }
    if (isObjectEmpty(ctrl[name])) {
      ctrl[name] = undefined;
    }
  }

  function cachedToggleClass(className, switchValue) {
    if (switchValue && !classCache[className]) {
      $animate.addClass($element, className);
      classCache[className] = true;
    } else if (!switchValue && classCache[className]) {
      $animate.removeClass($element, className);
      classCache[className] = false;
    }
  }

  function toggleValidationCss(validationErrorKey, isValid) {
    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';

    cachedToggleClass(VALID_CLASS + validationErrorKey, isValid === true);
    cachedToggleClass(INVALID_CLASS + validationErrorKey, isValid === false);
  }
}

function isObjectEmpty(obj) {
  if (obj) {
    for (var prop in obj) {
      if (obj.hasOwnProperty(prop)) {
        return false;
      }
    }
  }
  return true;
}

/**
 * @ngdoc directive
 * @name ngNonBindable
 * @restrict AC
 * @priority 1000
 *
 * @description
 * The `ngNonBindable` directive tells Angular not to compile or bind the contents of the current
 * DOM element. This is useful if the element contains what appears to be Angular directives and
 * bindings but which should be ignored by Angular. This could be the case if you have a site that
 * displays snippets of code, for instance.
 *
 * @element ANY
 *
 * @example
 * In this example there are two locations where a simple interpolation binding (`{{}}`) is present,
 * but the one wrapped in `ngNonBindable` is left alone.
 *
 * @example
    <example name="ng-non-bindable">
      <file name="index.html">
        <div>Normal: {{1 + 2}}</div>
        <div ng-non-bindable>Ignored: {{1 + 2}}</div>
      </file>
      <file name="protractor.js" type="protractor">
       it('should check ng-non-bindable', function() {
         expect(element(by.binding('1 + 2')).getText()).toContain('3');
         expect(element.all(by.css('div')).last().getText()).toMatch(/1 \+ 2/);
       });
      </file>
    </example>
 */
var ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });

/* exported ngOptionsDirective */

/* global jqLiteRemove */

var ngOptionsMinErr = minErr('ngOptions');

/**
 * @ngdoc directive
 * @name ngOptions
 * @restrict A
 *
 * @description
 *
 * The `ngOptions` attribute can be used to dynamically generate a list of `<option>`
 * elements for the `<select>` element using the array or object obtained by evaluating the
 * `ngOptions` comprehension expression.
 *
 * In many cases, {@link ng.directive:ngRepeat ngRepeat} can be used on `<option>` elements
 * instead of `ngOptions` to achieve a similar result.
 * However, `ngOptions` provides some benefits such as reducing memory and
 * increasing speed by not creating a new scope for each repeated instance, as well as providing
 * more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the
 * comprehension expression. `ngOptions` should be used when the `<select>` model needs to be bound
 *  to a non-string value. This is because an option element can only be bound to string values at
 * present.
 *
 * When an item in the `<select>` menu is selected, the array element or object property
 * represented by the selected option will be bound to the model identified by the `ngModel`
 * directive.
 *
 * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can
 * be nested into the `<select>` element. This element will then represent the `null` or "not selected"
 * option. See example below for demonstration.
 *
 * ## Complex Models (objects or collections)
 *
 * By default, `ngModel` watches the model by reference, not value. This is important to know when
 * binding the select to a model that is an object or a collection.
 *
 * One issue occurs if you want to preselect an option. For example, if you set
 * the model to an object that is equal to an object in your collection, `ngOptions` won't be able to set the selection,
 * because the objects are not identical. So by default, you should always reference the item in your collection
 * for preselections, e.g.: `$scope.selected = $scope.collection[3]`.
 *
 * Another solution is to use a `track by` clause, because then `ngOptions` will track the identity
 * of the item not by reference, but by the result of the `track by` expression. For example, if your
 * collection items have an id property, you would `track by item.id`.
 *
 * A different issue with objects or collections is that ngModel won't detect if an object property or
 * a collection item changes. For that reason, `ngOptions` additionally watches the model using
 * `$watchCollection`, when the expression contains a `track by` clause or the the select has the `multiple` attribute.
 * This allows ngOptions to trigger a re-rendering of the options even if the actual object/collection
 * has not changed identity, but only a property on the object or an item in the collection changes.
 *
 * Note that `$watchCollection` does a shallow comparison of the properties of the object (or the items in the collection
 * if the model is an array). This means that changing a property deeper than the first level inside the
 * object/collection will not trigger a re-rendering.
 *
 * ## `select` **`as`**
 *
 * Using `select` **`as`** will bind the result of the `select` expression to the model, but
 * the value of the `<select>` and `<option>` html elements will be either the index (for array data sources)
 * or property name (for object data sources) of the value within the collection. If a **`track by`** expression
 * is used, the result of that expression will be set as the value of the `option` and `select` elements.
 *
 *
 * ### `select` **`as`** and **`track by`**
 *
 * <div class="alert alert-warning">
 * Be careful when using `select` **`as`** and **`track by`** in the same expression.
 * </div>
 *
 * Given this array of items on the $scope:
 *
 * ```js
 * $scope.items = [{
 *   id: 1,
 *   label: 'aLabel',
 *   subItem: { name: 'aSubItem' }
 * }, {
 *   id: 2,
 *   label: 'bLabel',
 *   subItem: { name: 'bSubItem' }
 * }];
 * ```
 *
 * This will work:
 *
 * ```html
 * <select ng-options="item as item.label for item in items track by item.id" ng-model="selected"></select>
 * ```
 * ```js
 * $scope.selected = $scope.items[0];
 * ```
 *
 * but this will not work:
 *
 * ```html
 * <select ng-options="item.subItem as item.label for item in items track by item.id" ng-model="selected"></select>
 * ```
 * ```js
 * $scope.selected = $scope.items[0].subItem;
 * ```
 *
 * In both examples, the **`track by`** expression is applied successfully to each `item` in the
 * `items` array. Because the selected option has been set programmatically in the controller, the
 * **`track by`** expression is also applied to the `ngModel` value. In the first example, the
 * `ngModel` value is `items[0]` and the **`track by`** expression evaluates to `items[0].id` with
 * no issue. In the second example, the `ngModel` value is `items[0].subItem` and the **`track by`**
 * expression evaluates to `items[0].subItem.id` (which is undefined). As a result, the model value
 * is not matched against any `<option>` and the `<select>` appears as having no selected value.
 *
 *
 * @param {string} ngModel Assignable angular expression to data-bind to.
 * @param {string=} name Property name of the form under which the control is published.
 * @param {string=} required The control is considered valid only if value is entered.
 * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
 *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
 *    `required` when you want to data-bind to the `required` attribute.
 * @param {comprehension_expression=} ngOptions in one of the following forms:
 *
 *   * for array data sources:
 *     * `label` **`for`** `value` **`in`** `array`
 *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`
 *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array`
 *     * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array`
 *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`
 *     * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`
 *     * `label` **`for`** `value` **`in`** `array` | orderBy:`orderexpr` **`track by`** `trackexpr`
 *        (for including a filter with `track by`)
 *   * for object data sources:
 *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`
 *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`
 *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`
 *     * `label` **`disable when`** `disable` **`for (`**`key`**`,`** `value`**`) in`** `object`
 *     * `select` **`as`** `label` **`group by`** `group`
 *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`
 *     * `select` **`as`** `label` **`disable when`** `disable`
 *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`
 *
 * Where:
 *
 *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.
 *   * `value`: local variable which will refer to each item in the `array` or each property value
 *      of `object` during iteration.
 *   * `key`: local variable which will refer to a property name in `object` during iteration.
 *   * `label`: The result of this expression will be the label for `<option>` element. The
 *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).
 *   * `select`: The result of this expression will be bound to the model of the parent `<select>`
 *      element. If not specified, `select` expression will default to `value`.
 *   * `group`: The result of this expression will be used to group options using the `<optgroup>`
 *      DOM element.
 *   * `disable`: The result of this expression will be used to disable the rendered `<option>`
 *      element. Return `true` to disable.
 *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be
 *      used to identify the objects in the array. The `trackexpr` will most likely refer to the
 *     `value` variable (e.g. `value.propertyName`). With this the selection is preserved
 *      even when the options are recreated (e.g. reloaded from the server).
 *
 * @example
    <example module="selectExample" name="select">
      <file name="index.html">
        <script>
        angular.module('selectExample', [])
          .controller('ExampleController', ['$scope', function($scope) {
            $scope.colors = [
              {name:'black', shade:'dark'},
              {name:'white', shade:'light', notAnOption: true},
              {name:'red', shade:'dark'},
              {name:'blue', shade:'dark', notAnOption: true},
              {name:'yellow', shade:'light', notAnOption: false}
            ];
            $scope.myColor = $scope.colors[2]; // red
          }]);
        </script>
        <div ng-controller="ExampleController">
          <ul>
            <li ng-repeat="color in colors">
              <label>Name: <input ng-model="color.name"></label>
              <label><input type="checkbox" ng-model="color.notAnOption"> Disabled?</label>
              <button ng-click="colors.splice($index, 1)" aria-label="Remove">X</button>
            </li>
            <li>
              <button ng-click="colors.push({})">add</button>
            </li>
          </ul>
          <hr/>
          <label>Color (null not allowed):
            <select ng-model="myColor" ng-options="color.name for color in colors"></select>
          </label><br/>
          <label>Color (null allowed):
          <span  class="nullable">
            <select ng-model="myColor" ng-options="color.name for color in colors">
              <option value="">-- choose color --</option>
            </select>
          </span></label><br/>

          <label>Color grouped by shade:
            <select ng-model="myColor" ng-options="color.name group by color.shade for color in colors">
            </select>
          </label><br/>

          <label>Color grouped by shade, with some disabled:
            <select ng-model="myColor"
                  ng-options="color.name group by color.shade disable when color.notAnOption for color in colors">
            </select>
          </label><br/>



          Select <button ng-click="myColor = { name:'not in list', shade: 'other' }">bogus</button>.
          <br/>
          <hr/>
          Currently selected: {{ {selected_color:myColor} }}
          <div style="border:solid 1px black; height:20px"
               ng-style="{'background-color':myColor.name}">
          </div>
        </div>
      </file>
      <file name="protractor.js" type="protractor">
         it('should check ng-options', function() {
           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');
           element.all(by.model('myColor')).first().click();
           element.all(by.css('select[ng-model="myColor"] option')).first().click();
           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');
           element(by.css('.nullable select[ng-model="myColor"]')).click();
           element.all(by.css('.nullable select[ng-model="myColor"] option')).first().click();
           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');
         });
      </file>
    </example>
 */

/* eslint-disable max-len */
//                     //00001111111111000000000002222222222000000000000000000000333333333300000000000000000000000004444444444400000000000005555555555555000000000666666666666600000007777777777777000000000000000888888888800000000000000000009999999999
var NG_OPTIONS_REGEXP = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([$\w][$\w]*)|(?:\(\s*([$\w][$\w]*)\s*,\s*([$\w][$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/;
                        // 1: value expression (valueFn)
                        // 2: label expression (displayFn)
                        // 3: group by expression (groupByFn)
                        // 4: disable when expression (disableWhenFn)
                        // 5: array item variable name
                        // 6: object item key variable name
                        // 7: object item value variable name
                        // 8: collection expression
                        // 9: track by expression
/* eslint-enable */


var ngOptionsDirective = ['$compile', '$document', '$parse', function($compile, $document, $parse) {

  function parseOptionsExpression(optionsExp, selectElement, scope) {

    var match = optionsExp.match(NG_OPTIONS_REGEXP);
    if (!(match)) {
      throw ngOptionsMinErr('iexp',
        'Expected expression in form of ' +
        '\'_select_ (as _label_)? for (_key_,)?_value_ in _collection_\'' +
        ' but got \'{0}\'. Element: {1}',
        optionsExp, startingTag(selectElement));
    }

    // Extract the parts from the ngOptions expression

    // The variable name for the value of the item in the collection
    var valueName = match[5] || match[7];
    // The variable name for the key of the item in the collection
    var keyName = match[6];

    // An expression that generates the viewValue for an option if there is a label expression
    var selectAs = / as /.test(match[0]) && match[1];
    // An expression that is used to track the id of each object in the options collection
    var trackBy = match[9];
    // An expression that generates the viewValue for an option if there is no label expression
    var valueFn = $parse(match[2] ? match[1] : valueName);
    var selectAsFn = selectAs && $parse(selectAs);
    var viewValueFn = selectAsFn || valueFn;
    var trackByFn = trackBy && $parse(trackBy);

    // Get the value by which we are going to track the option
    // if we have a trackFn then use that (passing scope and locals)
    // otherwise just hash the given viewValue
    var getTrackByValueFn = trackBy ?
                              function(value, locals) { return trackByFn(scope, locals); } :
                              function getHashOfValue(value) { return hashKey(value); };
    var getTrackByValue = function(value, key) {
      return getTrackByValueFn(value, getLocals(value, key));
    };

    var displayFn = $parse(match[2] || match[1]);
    var groupByFn = $parse(match[3] || '');
    var disableWhenFn = $parse(match[4] || '');
    var valuesFn = $parse(match[8]);

    var locals = {};
    var getLocals = keyName ? function(value, key) {
      locals[keyName] = key;
      locals[valueName] = value;
      return locals;
    } : function(value) {
      locals[valueName] = value;
      return locals;
    };


    function Option(selectValue, viewValue, label, group, disabled) {
      this.selectValue = selectValue;
      this.viewValue = viewValue;
      this.label = label;
      this.group = group;
      this.disabled = disabled;
    }

    function getOptionValuesKeys(optionValues) {
      var optionValuesKeys;

      if (!keyName && isArrayLike(optionValues)) {
        optionValuesKeys = optionValues;
      } else {
        // if object, extract keys, in enumeration order, unsorted
        optionValuesKeys = [];
        for (var itemKey in optionValues) {
          if (optionValues.hasOwnProperty(itemKey) && itemKey.charAt(0) !== '$') {
            optionValuesKeys.push(itemKey);
          }
        }
      }
      return optionValuesKeys;
    }

    return {
      trackBy: trackBy,
      getTrackByValue: getTrackByValue,
      getWatchables: $parse(valuesFn, function(optionValues) {
        // Create a collection of things that we would like to watch (watchedArray)
        // so that they can all be watched using a single $watchCollection
        // that only runs the handler once if anything changes
        var watchedArray = [];
        optionValues = optionValues || [];

        var optionValuesKeys = getOptionValuesKeys(optionValues);
        var optionValuesLength = optionValuesKeys.length;
        for (var index = 0; index < optionValuesLength; index++) {
          var key = (optionValues === optionValuesKeys) ? index : optionValuesKeys[index];
          var value = optionValues[key];

          var locals = getLocals(value, key);
          var selectValue = getTrackByValueFn(value, locals);
          watchedArray.push(selectValue);

          // Only need to watch the displayFn if there is a specific label expression
          if (match[2] || match[1]) {
            var label = displayFn(scope, locals);
            watchedArray.push(label);
          }

          // Only need to watch the disableWhenFn if there is a specific disable expression
          if (match[4]) {
            var disableWhen = disableWhenFn(scope, locals);
            watchedArray.push(disableWhen);
          }
        }
        return watchedArray;
      }),

      getOptions: function() {

        var optionItems = [];
        var selectValueMap = {};

        // The option values were already computed in the `getWatchables` fn,
        // which must have been called to trigger `getOptions`
        var optionValues = valuesFn(scope) || [];
        var optionValuesKeys = getOptionValuesKeys(optionValues);
        var optionValuesLength = optionValuesKeys.length;

        for (var index = 0; index < optionValuesLength; index++) {
          var key = (optionValues === optionValuesKeys) ? index : optionValuesKeys[index];
          var value = optionValues[key];
          var locals = getLocals(value, key);
          var viewValue = viewValueFn(scope, locals);
          var selectValue = getTrackByValueFn(viewValue, locals);
          var label = displayFn(scope, locals);
          var group = groupByFn(scope, locals);
          var disabled = disableWhenFn(scope, locals);
          var optionItem = new Option(selectValue, viewValue, label, group, disabled);

          optionItems.push(optionItem);
          selectValueMap[selectValue] = optionItem;
        }

        return {
          items: optionItems,
          selectValueMap: selectValueMap,
          getOptionFromViewValue: function(value) {
            return selectValueMap[getTrackByValue(value)];
          },
          getViewValueFromOption: function(option) {
            // If the viewValue could be an object that may be mutated by the application,
            // we need to make a copy and not return the reference to the value on the option.
            return trackBy ? copy(option.viewValue) : option.viewValue;
          }
        };
      }
    };
  }


  // we can't just jqLite('<option>') since jqLite is not smart enough
  // to create it in <select> and IE barfs otherwise.
  var optionTemplate = window.document.createElement('option'),
      optGroupTemplate = window.document.createElement('optgroup');

    function ngOptionsPostLink(scope, selectElement, attr, ctrls) {

      var selectCtrl = ctrls[0];
      var ngModelCtrl = ctrls[1];
      var multiple = attr.multiple;

      // The emptyOption allows the application developer to provide their own custom "empty"
      // option when the viewValue does not match any of the option values.
      var emptyOption;
      for (var i = 0, children = selectElement.children(), ii = children.length; i < ii; i++) {
        if (children[i].value === '') {
          emptyOption = children.eq(i);
          break;
        }
      }

      var providedEmptyOption = !!emptyOption;
      var emptyOptionRendered = false;

      var unknownOption = jqLite(optionTemplate.cloneNode(false));
      unknownOption.val('?');

      var options;
      var ngOptions = parseOptionsExpression(attr.ngOptions, selectElement, scope);
      // This stores the newly created options before they are appended to the select.
      // Since the contents are removed from the fragment when it is appended,
      // we only need to create it once.
      var listFragment = $document[0].createDocumentFragment();

      var renderEmptyOption = function() {
        if (!providedEmptyOption) {
          selectElement.prepend(emptyOption);
        }
        selectElement.val('');
        if (emptyOptionRendered) {
          emptyOption.prop('selected', true); // needed for IE
          emptyOption.attr('selected', true);
        }
      };

      var removeEmptyOption = function() {
        if (!providedEmptyOption) {
          emptyOption.remove();
        } else if (emptyOptionRendered) {
          emptyOption.removeAttr('selected');
        }
      };

      var renderUnknownOption = function() {
        selectElement.prepend(unknownOption);
        selectElement.val('?');
        unknownOption.prop('selected', true); // needed for IE
        unknownOption.attr('selected', true);
      };

      var removeUnknownOption = function() {
        unknownOption.remove();
      };

      // Update the controller methods for multiple selectable options
      if (!multiple) {

        selectCtrl.writeValue = function writeNgOptionsValue(value) {
          var selectedOption = options.selectValueMap[selectElement.val()];
          var option = options.getOptionFromViewValue(value);

          // Make sure to remove the selected attribute from the previously selected option
          // Otherwise, screen readers might get confused
          if (selectedOption) selectedOption.element.removeAttribute('selected');

          if (option) {
            // Don't update the option when it is already selected.
            // For example, the browser will select the first option by default. In that case,
            // most properties are set automatically - except the `selected` attribute, which we
            // set always

            if (selectElement[0].value !== option.selectValue) {
              removeUnknownOption();
              removeEmptyOption();

              selectElement[0].value = option.selectValue;
              option.element.selected = true;
            }

            option.element.setAttribute('selected', 'selected');
          } else {
            if (value === null || providedEmptyOption) {
              removeUnknownOption();
              renderEmptyOption();
            } else {
              removeEmptyOption();
              renderUnknownOption();
            }
          }
        };

        selectCtrl.readValue = function readNgOptionsValue() {

          var selectedOption = options.selectValueMap[selectElement.val()];

          if (selectedOption && !selectedOption.disabled) {
            removeEmptyOption();
            removeUnknownOption();
            return options.getViewValueFromOption(selectedOption);
          }
          return null;
        };

        // If we are using `track by` then we must watch the tracked value on the model
        // since ngModel only watches for object identity change
        // FIXME: When a user selects an option, this watch will fire needlessly
        if (ngOptions.trackBy) {
          scope.$watch(
            function() { return ngOptions.getTrackByValue(ngModelCtrl.$viewValue); },
            function() { ngModelCtrl.$render(); }
          );
        }

      } else {

        ngModelCtrl.$isEmpty = function(value) {
          return !value || value.length === 0;
        };


        selectCtrl.writeValue = function writeNgOptionsMultiple(value) {
          options.items.forEach(function(option) {
            option.element.selected = false;
          });

          if (value) {
            value.forEach(function(item) {
              var option = options.getOptionFromViewValue(item);
              if (option) option.element.selected = true;
            });
          }
        };


        selectCtrl.readValue = function readNgOptionsMultiple() {
          var selectedValues = selectElement.val() || [],
              selections = [];

          forEach(selectedValues, function(value) {
            var option = options.selectValueMap[value];
            if (option && !option.disabled) selections.push(options.getViewValueFromOption(option));
          });

          return selections;
        };

        // If we are using `track by` then we must watch these tracked values on the model
        // since ngModel only watches for object identity change
        if (ngOptions.trackBy) {

          scope.$watchCollection(function() {
            if (isArray(ngModelCtrl.$viewValue)) {
              return ngModelCtrl.$viewValue.map(function(value) {
                return ngOptions.getTrackByValue(value);
              });
            }
          }, function() {
            ngModelCtrl.$render();
          });

        }
      }


      if (providedEmptyOption) {

        // we need to remove it before calling selectElement.empty() because otherwise IE will
        // remove the label from the element. wtf?
        emptyOption.remove();

        // compile the element since there might be bindings in it
        $compile(emptyOption)(scope);

        if (emptyOption[0].nodeType === NODE_TYPE_COMMENT) {
          // This means the empty option has currently no actual DOM node, probably because
          // it has been modified by a transclusion directive.

          emptyOptionRendered = false;

          // Redefine the registerOption function, which will catch
          // options that are added by ngIf etc. (rendering of the node is async because of
          // lazy transclusion)
          selectCtrl.registerOption = function(optionScope, optionEl) {
            if (optionEl.val() === '') {
              emptyOptionRendered = true;
              emptyOption = optionEl;
              emptyOption.removeClass('ng-scope');
              // This ensures the new empty option is selected if previously no option was selected
              ngModelCtrl.$render();

              optionEl.on('$destroy', function() {
                emptyOption = undefined;
                emptyOptionRendered = false;
              });
            }
          };

        } else {
          emptyOption.removeClass('ng-scope');
          emptyOptionRendered = true;
        }

      } else {
        emptyOption = jqLite(optionTemplate.cloneNode(false));
      }

      selectElement.empty();

      // We need to do this here to ensure that the options object is defined
      // when we first hit it in writeNgOptionsValue
      updateOptions();

      // We will re-render the option elements if the option values or labels change
      scope.$watchCollection(ngOptions.getWatchables, updateOptions);

      // ------------------------------------------------------------------ //

      function addOptionElement(option, parent) {
        var optionElement = optionTemplate.cloneNode(false);
        parent.appendChild(optionElement);
        updateOptionElement(option, optionElement);
      }


      function updateOptionElement(option, element) {
        option.element = element;
        element.disabled = option.disabled;
        // NOTE: The label must be set before the value, otherwise IE10/11/EDGE create unresponsive
        // selects in certain circumstances when multiple selects are next to each other and display
        // the option list in listbox style, i.e. the select is [multiple], or specifies a [size].
        // See https://github.com/angular/angular.js/issues/11314 for more info.
        // This is unfortunately untestable with unit / e2e tests
        if (option.label !== element.label) {
          element.label = option.label;
          element.textContent = option.label;
        }
        element.value = option.selectValue;
      }

      function updateOptions() {
        var previousValue = options && selectCtrl.readValue();

        // We must remove all current options, but cannot simply set innerHTML = null
        // since the providedEmptyOption might have an ngIf on it that inserts comments which we
        // must preserve.
        // Instead, iterate over the current option elements and remove them or their optgroup
        // parents
        if (options) {

          for (var i = options.items.length - 1; i >= 0; i--) {
            var option = options.items[i];
            if (isDefined(option.group)) {
              jqLiteRemove(option.element.parentNode);
            } else {
              jqLiteRemove(option.element);
            }
          }
        }

        options = ngOptions.getOptions();

        var groupElementMap = {};

        // Ensure that the empty option is always there if it was explicitly provided
        if (providedEmptyOption) {
          selectElement.prepend(emptyOption);
        }

        options.items.forEach(function addOption(option) {
          var groupElement;

          if (isDefined(option.group)) {

            // This option is to live in a group
            // See if we have already created this group
            groupElement = groupElementMap[option.group];

            if (!groupElement) {

              groupElement = optGroupTemplate.cloneNode(false);
              listFragment.appendChild(groupElement);

              // Update the label on the group element
              // "null" is special cased because of Safari
              groupElement.label = option.group === null ? 'null' : option.group;

              // Store it for use later
              groupElementMap[option.group] = groupElement;
            }

            addOptionElement(option, groupElement);

          } else {

            // This option is not in a group
            addOptionElement(option, listFragment);
          }
        });

        selectElement[0].appendChild(listFragment);

        ngModelCtrl.$render();

        // Check to see if the value has changed due to the update to the options
        if (!ngModelCtrl.$isEmpty(previousValue)) {
          var nextValue = selectCtrl.readValue();
          var isNotPrimitive = ngOptions.trackBy || multiple;
          if (isNotPrimitive ? !equals(previousValue, nextValue) : previousValue !== nextValue) {
            ngModelCtrl.$setViewValue(nextValue);
            ngModelCtrl.$render();
          }
        }

      }
  }

  return {
    restrict: 'A',
    terminal: true,
    require: ['select', 'ngModel'],
    link: {
      pre: function ngOptionsPreLink(scope, selectElement, attr, ctrls) {
        // Deactivate the SelectController.register method to prevent
        // option directives from accidentally registering themselves
        // (and unwanted $destroy handlers etc.)
        ctrls[0].registerOption = noop;
      },
      post: ngOptionsPostLink
    }
  };
}];

/**
 * @ngdoc directive
 * @name ngPluralize
 * @restrict EA
 *
 * @description
 * `ngPluralize` is a directive that displays messages according to en-US localization rules.
 * These rules are bundled with angular.js, but can be overridden
 * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive
 * by specifying the mappings between
 * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)
 * and the strings to be displayed.
 *
 * # Plural categories and explicit number rules
 * There are two
 * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)
 * in Angular's default en-US locale: "one" and "other".
 *
 * While a plural category may match many numbers (for example, in en-US locale, "other" can match
 * any number that is not 1), an explicit number rule can only match one number. For example, the
 * explicit number rule for "3" matches the number 3. There are examples of plural categories
 * and explicit number rules throughout the rest of this documentation.
 *
 * # Configuring ngPluralize
 * You configure ngPluralize by providing 2 attributes: `count` and `when`.
 * You can also provide an optional attribute, `offset`.
 *
 * The value of the `count` attribute can be either a string or an {@link guide/expression
 * Angular expression}; these are evaluated on the current scope for its bound value.
 *
 * The `when` attribute specifies the mappings between plural categories and the actual
 * string to be displayed. The value of the attribute should be a JSON object.
 *
 * The following example shows how to configure ngPluralize:
 *
 * ```html
 * <ng-pluralize count="personCount"
                 when="{'0': 'Nobody is viewing.',
 *                      'one': '1 person is viewing.',
 *                      'other': '{} people are viewing.'}">
 * </ng-pluralize>
 *```
 *
 * In the example, `"0: Nobody is viewing."` is an explicit number rule. If you did not
 * specify this rule, 0 would be matched to the "other" category and "0 people are viewing"
 * would be shown instead of "Nobody is viewing". You can specify an explicit number rule for
 * other numbers, for example 12, so that instead of showing "12 people are viewing", you can
 * show "a dozen people are viewing".
 *
 * You can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted
 * into pluralized strings. In the previous example, Angular will replace `{}` with
 * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder
 * for <span ng-non-bindable>{{numberExpression}}</span>.
 *
 * If no rule is defined for a category, then an empty string is displayed and a warning is generated.
 * Note that some locales define more categories than `one` and `other`. For example, fr-fr defines `few` and `many`.
 *
 * # Configuring ngPluralize with offset
 * The `offset` attribute allows further customization of pluralized text, which can result in
 * a better user experience. For example, instead of the message "4 people are viewing this document",
 * you might display "John, Kate and 2 others are viewing this document".
 * The offset attribute allows you to offset a number by any desired value.
 * Let's take a look at an example:
 *
 * ```html
 * <ng-pluralize count="personCount" offset=2
 *               when="{'0': 'Nobody is viewing.',
 *                      '1': '{{person1}} is viewing.',
 *                      '2': '{{person1}} and {{person2}} are viewing.',
 *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',
 *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}">
 * </ng-pluralize>
 * ```
 *
 * Notice that we are still using two plural categories(one, other), but we added
 * three explicit number rules 0, 1 and 2.
 * When one person, perhaps John, views the document, "John is viewing" will be shown.
 * When three people view the document, no explicit number rule is found, so
 * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.
 * In this case, plural category 'one' is matched and "John, Mary and one other person are viewing"
 * is shown.
 *
 * Note that when you specify offsets, you must provide explicit number rules for
 * numbers from 0 up to and including the offset. If you use an offset of 3, for example,
 * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for
 * plural categories "one" and "other".
 *
 * @param {string|expression} count The variable to be bound to.
 * @param {string} when The mapping between plural category to its corresponding strings.
 * @param {number=} offset Offset to deduct from the total number.
 *
 * @example
    <example module="pluralizeExample" name="ng-pluralize">
      <file name="index.html">
        <script>
          angular.module('pluralizeExample', [])
            .controller('ExampleController', ['$scope', function($scope) {
              $scope.person1 = 'Igor';
              $scope.person2 = 'Misko';
              $scope.personCount = 1;
            }]);
        </script>
        <div ng-controller="ExampleController">
          <label>Person 1:<input type="text" ng-model="person1" value="Igor" /></label><br/>
          <label>Person 2:<input type="text" ng-model="person2" value="Misko" /></label><br/>
          <label>Number of People:<input type="text" ng-model="personCount" value="1" /></label><br/>

          <!--- Example with simple pluralization rules for en locale --->
          Without Offset:
          <ng-pluralize count="personCount"
                        when="{'0': 'Nobody is viewing.',
                               'one': '1 person is viewing.',
                               'other': '{} people are viewing.'}">
          </ng-pluralize><br>

          <!--- Example with offset --->
          With Offset(2):
          <ng-pluralize count="personCount" offset=2
                        when="{'0': 'Nobody is viewing.',
                               '1': '{{person1}} is viewing.',
                               '2': '{{person1}} and {{person2}} are viewing.',
                               'one': '{{person1}}, {{person2}} and one other person are viewing.',
                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}">
          </ng-pluralize>
        </div>
      </file>
      <file name="protractor.js" type="protractor">
        it('should show correct pluralized string', function() {
          var withoutOffset = element.all(by.css('ng-pluralize')).get(0);
          var withOffset = element.all(by.css('ng-pluralize')).get(1);
          var countInput = element(by.model('personCount'));

          expect(withoutOffset.getText()).toEqual('1 person is viewing.');
          expect(withOffset.getText()).toEqual('Igor is viewing.');

          countInput.clear();
          countInput.sendKeys('0');

          expect(withoutOffset.getText()).toEqual('Nobody is viewing.');
          expect(withOffset.getText()).toEqual('Nobody is viewing.');

          countInput.clear();
          countInput.sendKeys('2');

          expect(withoutOffset.getText()).toEqual('2 people are viewing.');
          expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');

          countInput.clear();
          countInput.sendKeys('3');

          expect(withoutOffset.getText()).toEqual('3 people are viewing.');
          expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');

          countInput.clear();
          countInput.sendKeys('4');

          expect(withoutOffset.getText()).toEqual('4 people are viewing.');
          expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');
        });
        it('should show data-bound names', function() {
          var withOffset = element.all(by.css('ng-pluralize')).get(1);
          var personCount = element(by.model('personCount'));
          var person1 = element(by.model('person1'));
          var person2 = element(by.model('person2'));
          personCount.clear();
          personCount.sendKeys('4');
          person1.clear();
          person1.sendKeys('Di');
          person2.clear();
          person2.sendKeys('Vojta');
          expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');
        });
      </file>
    </example>
 */
var ngPluralizeDirective = ['$locale', '$interpolate', '$log', function($locale, $interpolate, $log) {
  var BRACE = /{}/g,
      IS_WHEN = /^when(Minus)?(.+)$/;

  return {
    link: function(scope, element, attr) {
      var numberExp = attr.count,
          whenExp = attr.$attr.when && element.attr(attr.$attr.when), // we have {{}} in attrs
          offset = attr.offset || 0,
          whens = scope.$eval(whenExp) || {},
          whensExpFns = {},
          startSymbol = $interpolate.startSymbol(),
          endSymbol = $interpolate.endSymbol(),
          braceReplacement = startSymbol + numberExp + '-' + offset + endSymbol,
          watchRemover = angular.noop,
          lastCount;

      forEach(attr, function(expression, attributeName) {
        var tmpMatch = IS_WHEN.exec(attributeName);
        if (tmpMatch) {
          var whenKey = (tmpMatch[1] ? '-' : '') + lowercase(tmpMatch[2]);
          whens[whenKey] = element.attr(attr.$attr[attributeName]);
        }
      });
      forEach(whens, function(expression, key) {
        whensExpFns[key] = $interpolate(expression.replace(BRACE, braceReplacement));

      });

      scope.$watch(numberExp, function ngPluralizeWatchAction(newVal) {
        var count = parseFloat(newVal);
        var countIsNaN = isNumberNaN(count);

        if (!countIsNaN && !(count in whens)) {
          // If an explicit number rule such as 1, 2, 3... is defined, just use it.
          // Otherwise, check it against pluralization rules in $locale service.
          count = $locale.pluralCat(count - offset);
        }

        // If both `count` and `lastCount` are NaN, we don't need to re-register a watch.
        // In JS `NaN !== NaN`, so we have to explicitly check.
        if ((count !== lastCount) && !(countIsNaN && isNumberNaN(lastCount))) {
          watchRemover();
          var whenExpFn = whensExpFns[count];
          if (isUndefined(whenExpFn)) {
            if (newVal != null) {
              $log.debug('ngPluralize: no rule defined for \'' + count + '\' in ' + whenExp);
            }
            watchRemover = noop;
            updateElementText();
          } else {
            watchRemover = scope.$watch(whenExpFn, updateElementText);
          }
          lastCount = count;
        }
      });

      function updateElementText(newText) {
        element.text(newText || '');
      }
    }
  };
}];

/* exported ngRepeatDirective */

/**
 * @ngdoc directive
 * @name ngRepeat
 * @multiElement
 *
 * @description
 * The `ngRepeat` directive instantiates a template once per item from a collection. Each template
 * instance gets its own scope, where the given loop variable is set to the current collection item,
 * and `$index` is set to the item index or key.
 *
 * Special properties are exposed on the local scope of each template instance, including:
 *
 * | Variable  | Type            | Details                                                                     |
 * |-----------|-----------------|-----------------------------------------------------------------------------|
 * | `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |
 * | `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |
 * | `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |
 * | `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |
 * | `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |
 * | `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |
 *
 * <div class="alert alert-info">
 *   Creating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.
 *   This may be useful when, for instance, nesting ngRepeats.
 * </div>
 *
 *
 * # Iterating over object properties
 *
 * It is possible to get `ngRepeat` to iterate over the properties of an object using the following
 * syntax:
 *
 * ```js
 * <div ng-repeat="(key, value) in myObj"> ... </div>
 * ```
 *
 * However, there are a few limitations compared to array iteration:
 *
 * - The JavaScript specification does not define the order of keys
 *   returned for an object, so Angular relies on the order returned by the browser
 *   when running `for key in myObj`. Browsers generally follow the strategy of providing
 *   keys in the order in which they were defined, although there are exceptions when keys are deleted
 *   and reinstated. See the
 *   [MDN page on `delete` for more info](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete#Cross-browser_notes).
 *
 * - `ngRepeat` will silently *ignore* object keys starting with `$`, because
 *   it's a prefix used by Angular for public (`$`) and private (`$$`) properties.
 *
 * - The built-in filters {@link ng.orderBy orderBy} and {@link ng.filter filter} do not work with
 *   objects, and will throw an error if used with one.
 *
 * If you are hitting any of these limitations, the recommended workaround is to convert your object into an array
 * that is sorted into the order that you prefer before providing it to `ngRepeat`. You could
 * do this with a filter such as [toArrayFilter](http://ngmodules.org/modules/angular-toArrayFilter)
 * or implement a `$watch` on the object yourself.
 *
 *
 * # Tracking and Duplicates
 *
 * `ngRepeat` uses {@link $rootScope.Scope#$watchCollection $watchCollection} to detect changes in
 * the collection. When a change happens, `ngRepeat` then makes the corresponding changes to the DOM:
 *
 * * When an item is added, a new instance of the template is added to the DOM.
 * * When an item is removed, its template instance is removed from the DOM.
 * * When items are reordered, their respective templates are reordered in the DOM.
 *
 * To minimize creation of DOM elements, `ngRepeat` uses a function
 * to "keep track" of all items in the collection and their corresponding DOM elements.
 * For example, if an item is added to the collection, `ngRepeat` will know that all other items
 * already have DOM elements, and will not re-render them.
 *
 * The default tracking function (which tracks items by their identity) does not allow
 * duplicate items in arrays. This is because when there are duplicates, it is not possible
 * to maintain a one-to-one mapping between collection items and DOM elements.
 *
 * If you do need to repeat duplicate items, you can substitute the default tracking behavior
 * with your own using the `track by` expression.
 *
 * For example, you may track items by the index of each item in the collection, using the
 * special scope property `$index`:
 * ```html
 *    <div ng-repeat="n in [42, 42, 43, 43] track by $index">
 *      {{n}}
 *    </div>
 * ```
 *
 * You may also use arbitrary expressions in `track by`, including references to custom functions
 * on the scope:
 * ```html
 *    <div ng-repeat="n in [42, 42, 43, 43] track by myTrackingFunction(n)">
 *      {{n}}
 *    </div>
 * ```
 *
 * <div class="alert alert-success">
 * If you are working with objects that have a unique identifier property, you should track
 * by this identifier instead of the object instance. Should you reload your data later, `ngRepeat`
 * will not have to rebuild the DOM elements for items it has already rendered, even if the
 * JavaScript objects in the collection have been substituted for new ones. For large collections,
 * this significantly improves rendering performance. If you don't have a unique identifier,
 * `track by $index` can also provide a performance boost.
 * </div>
 *
 * ```html
 *    <div ng-repeat="model in collection track by model.id">
 *      {{model.name}}
 *    </div>
 * ```
 *
 * <br />
 * <div class="alert alert-warning">
 * Avoid using `track by $index` when the repeated template contains
 * {@link guide/expression#one-time-binding one-time bindings}. In such cases, the `nth` DOM
 * element will always be matched with the `nth` item of the array, so the bindings on that element
 * will not be updated even when the corresponding item changes, essentially causing the view to get
 * out-of-sync with the underlying data.
 * </div>
 *
 * When no `track by` expression is provided, it is equivalent to tracking by the built-in
 * `$id` function, which tracks items by their identity:
 * ```html
 *    <div ng-repeat="obj in collection track by $id(obj)">
 *      {{obj.prop}}
 *    </div>
 * ```
 *
 * <br />
 * <div class="alert alert-warning">
 * **Note:** `track by` must always be the last expression:
 * </div>
 * ```
 *    <div ng-repeat="model in collection | orderBy: 'id' as filtered_result track by model.id">
 *      {{model.name}}
 *    </div>
 * ```
 *
 *
 * # Special repeat start and end points
 * To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending
 * the range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.
 * The **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)
 * up to and including the ending HTML tag where **ng-repeat-end** is placed.
 *
 * The example below makes use of this feature:
 * ```html
 *   <header ng-repeat-start="item in items">
 *     Header {{ item }}
 *   </header>
 *   <div class="body">
 *     Body {{ item }}
 *   </div>
 *   <footer ng-repeat-end>
 *     Footer {{ item }}
 *   </footer>
 * ```
 *
 * And with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:
 * ```html
 *   <header>
 *     Header A
 *   </header>
 *   <div class="body">
 *     Body A
 *   </div>
 *   <footer>
 *     Footer A
 *   </footer>
 *   <header>
 *     Header B
 *   </header>
 *   <div class="body">
 *     Body B
 *   </div>
 *   <footer>
 *     Footer B
 *   </footer>
 * ```
 *
 * The custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such
 * as **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).
 *
 * @animations
 * | Animation                        | Occurs                              |
 * |----------------------------------|-------------------------------------|
 * | {@link ng.$animate#enter enter} | when a new item is added to the list or when an item is revealed after a filter |
 * | {@link ng.$animate#leave leave} | when an item is removed from the list or when an item is filtered out |
 * | {@link ng.$animate#move move } | when an adjacent item is filtered out causing a reorder or when the item contents are reordered |
 *
 * See the example below for defining CSS animations with ngRepeat.
 *
 * @element ANY
 * @scope
 * @priority 1000
 * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These
 *   formats are currently supported:
 *
 *   * `variable in expression` – where variable is the user defined loop variable and `expression`
 *     is a scope expression giving the collection to enumerate.
 *
 *     For example: `album in artist.albums`.
 *
 *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,
 *     and `expression` is the scope expression giving the collection to enumerate.
 *
 *     For example: `(name, age) in {'adam':10, 'amalie':12}`.
 *
 *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking expression
 *     which can be used to associate the objects in the collection with the DOM elements. If no tracking expression
 *     is specified, ng-repeat associates elements by identity. It is an error to have
 *     more than one tracking expression value resolve to the same key. (This would mean that two distinct objects are
 *     mapped to the same DOM element, which is not possible.)
 *
 *     Note that the tracking expression must come last, after any filters, and the alias expression.
 *
 *     For example: `item in items` is equivalent to `item in items track by $id(item)`. This implies that the DOM elements
 *     will be associated by item identity in the array.
 *
 *     For example: `item in items track by $id(item)`. A built in `$id()` function can be used to assign a unique
 *     `$$hashKey` property to each item in the array. This property is then used as a key to associated DOM elements
 *     with the corresponding item in the array by identity. Moving the same object in array would move the DOM
 *     element in the same way in the DOM.
 *
 *     For example: `item in items track by item.id` is a typical pattern when the items come from the database. In this
 *     case the object identity does not matter. Two objects are considered equivalent as long as their `id`
 *     property is same.
 *
 *     For example: `item in items | filter:searchText track by item.id` is a pattern that might be used to apply a filter
 *     to items in conjunction with a tracking expression.
 *
 *   * `variable in expression as alias_expression` – You can also provide an optional alias expression which will then store the
 *     intermediate results of the repeater after the filters have been applied. Typically this is used to render a special message
 *     when a filter is active on the repeater, but the filtered result set is empty.
 *
 *     For example: `item in items | filter:x as results` will store the fragment of the repeated items as `results`, but only after
 *     the items have been processed through the filter.
 *
 *     Please note that `as [variable name] is not an operator but rather a part of ngRepeat micro-syntax so it can be used only at the end
 *     (and not as operator, inside an expression).
 *
 *     For example: `item in items | filter : x | orderBy : order | limitTo : limit as results` .
 *
 * @example
 * This example uses `ngRepeat` to display a list of people. A filter is used to restrict the displayed
 * results by name or by age. New (entering) and removed (leaving) items are animated.
  <example module="ngRepeat" name="ngRepeat" deps="angular-animate.js" animations="true" name="ng-repeat">
    <file name="index.html">
      <div ng-controller="repeatController">
        I have {{friends.length}} friends. They are:
        <input type="search" ng-model="q" placeholder="filter friends..." aria-label="filter friends" />
        <ul class="example-animate-container">
          <li class="animate-repeat" ng-repeat="friend in friends | filter:q as results">
            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.
          </li>
          <li class="animate-repeat" ng-if="results.length === 0">
            <strong>No results found...</strong>
          </li>
        </ul>
      </div>
    </file>
    <file name="script.js">
      angular.module('ngRepeat', ['ngAnimate']).controller('repeatController', function($scope) {
        $scope.friends = [
          {name:'John', age:25, gender:'boy'},
          {name:'Jessie', age:30, gender:'girl'},
          {name:'Johanna', age:28, gender:'girl'},
          {name:'Joy', age:15, gender:'girl'},
          {name:'Mary', age:28, gender:'girl'},
          {name:'Peter', age:95, gender:'boy'},
          {name:'Sebastian', age:50, gender:'boy'},
          {name:'Erika', age:27, gender:'girl'},
          {name:'Patrick', age:40, gender:'boy'},
          {name:'Samantha', age:60, gender:'girl'}
        ];
      });
    </file>
    <file name="animations.css">
      .example-animate-container {
        background:white;
        border:1px solid black;
        list-style:none;
        margin:0;
        padding:0 10px;
      }

      .animate-repeat {
        line-height:30px;
        list-style:none;
        box-sizing:border-box;
      }

      .animate-repeat.ng-move,
      .animate-repeat.ng-enter,
      .animate-repeat.ng-leave {
        transition:all linear 0.5s;
      }

      .animate-repeat.ng-leave.ng-leave-active,
      .animate-repeat.ng-move,
      .animate-repeat.ng-enter {
        opacity:0;
        max-height:0;
      }

      .animate-repeat.ng-leave,
      .animate-repeat.ng-move.ng-move-active,
      .animate-repeat.ng-enter.ng-enter-active {
        opacity:1;
        max-height:30px;
      }
    </file>
    <file name="protractor.js" type="protractor">
      var friends = element.all(by.repeater('friend in friends'));

      it('should render initial data set', function() {
        expect(friends.count()).toBe(10);
        expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');
        expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');
        expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');
        expect(element(by.binding('friends.length')).getText())
            .toMatch("I have 10 friends. They are:");
      });

       it('should update repeater when filter predicate changes', function() {
         expect(friends.count()).toBe(10);

         element(by.model('q')).sendKeys('ma');

         expect(friends.count()).toBe(2);
         expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');
         expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');
       });
      </file>
    </example>
 */
var ngRepeatDirective = ['$parse', '$animate', '$compile', function($parse, $animate, $compile) {
  var NG_REMOVED = '$$NG_REMOVED';
  var ngRepeatMinErr = minErr('ngRepeat');

  var updateScope = function(scope, index, valueIdentifier, value, keyIdentifier, key, arrayLength) {
    // TODO(perf): generate setters to shave off ~40ms or 1-1.5%
    scope[valueIdentifier] = value;
    if (keyIdentifier) scope[keyIdentifier] = key;
    scope.$index = index;
    scope.$first = (index === 0);
    scope.$last = (index === (arrayLength - 1));
    scope.$middle = !(scope.$first || scope.$last);
    // eslint-disable-next-line no-bitwise
    scope.$odd = !(scope.$even = (index & 1) === 0);
  };

  var getBlockStart = function(block) {
    return block.clone[0];
  };

  var getBlockEnd = function(block) {
    return block.clone[block.clone.length - 1];
  };


  return {
    restrict: 'A',
    multiElement: true,
    transclude: 'element',
    priority: 1000,
    terminal: true,
    $$tlb: true,
    compile: function ngRepeatCompile($element, $attr) {
      var expression = $attr.ngRepeat;
      var ngRepeatEndComment = $compile.$$createComment('end ngRepeat', expression);

      var match = expression.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);

      if (!match) {
        throw ngRepeatMinErr('iexp', 'Expected expression in form of \'_item_ in _collection_[ track by _id_]\' but got \'{0}\'.',
            expression);
      }

      var lhs = match[1];
      var rhs = match[2];
      var aliasAs = match[3];
      var trackByExp = match[4];

      match = lhs.match(/^(?:(\s*[$\w]+)|\(\s*([$\w]+)\s*,\s*([$\w]+)\s*\))$/);

      if (!match) {
        throw ngRepeatMinErr('iidexp', '\'_item_\' in \'_item_ in _collection_\' should be an identifier or \'(_key_, _value_)\' expression, but got \'{0}\'.',
            lhs);
      }
      var valueIdentifier = match[3] || match[1];
      var keyIdentifier = match[2];

      if (aliasAs && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs) ||
          /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(aliasAs))) {
        throw ngRepeatMinErr('badident', 'alias \'{0}\' is invalid --- must be a valid JS identifier which is not a reserved name.',
          aliasAs);
      }

      var trackByExpGetter, trackByIdExpFn, trackByIdArrayFn, trackByIdObjFn;
      var hashFnLocals = {$id: hashKey};

      if (trackByExp) {
        trackByExpGetter = $parse(trackByExp);
      } else {
        trackByIdArrayFn = function(key, value) {
          return hashKey(value);
        };
        trackByIdObjFn = function(key) {
          return key;
        };
      }

      return function ngRepeatLink($scope, $element, $attr, ctrl, $transclude) {

        if (trackByExpGetter) {
          trackByIdExpFn = function(key, value, index) {
            // assign key, value, and $index to the locals so that they can be used in hash functions
            if (keyIdentifier) hashFnLocals[keyIdentifier] = key;
            hashFnLocals[valueIdentifier] = value;
            hashFnLocals.$index = index;
            return trackByExpGetter($scope, hashFnLocals);
          };
        }

        // Store a list of elements from previous run. This is a hash where key is the item from the
        // iterator, and the value is objects with following properties.
        //   - scope: bound scope
        //   - element: previous element.
        //   - index: position
        //
        // We are using no-proto object so that we don't need to guard against inherited props via
        // hasOwnProperty.
        var lastBlockMap = createMap();

        //watch props
        $scope.$watchCollection(rhs, function ngRepeatAction(collection) {
          var index, length,
              previousNode = $element[0],     // node that cloned nodes should be inserted after
                                              // initialized to the comment node anchor
              nextNode,
              // Same as lastBlockMap but it has the current state. It will become the
              // lastBlockMap on the next iteration.
              nextBlockMap = createMap(),
              collectionLength,
              key, value, // key/value of iteration
              trackById,
              trackByIdFn,
              collectionKeys,
              block,       // last object information {scope, element, id}
              nextBlockOrder,
              elementsToRemove;

          if (aliasAs) {
            $scope[aliasAs] = collection;
          }

          if (isArrayLike(collection)) {
            collectionKeys = collection;
            trackByIdFn = trackByIdExpFn || trackByIdArrayFn;
          } else {
            trackByIdFn = trackByIdExpFn || trackByIdObjFn;
            // if object, extract keys, in enumeration order, unsorted
            collectionKeys = [];
            for (var itemKey in collection) {
              if (hasOwnProperty.call(collection, itemKey) && itemKey.charAt(0) !== '$') {
                collectionKeys.push(itemKey);
              }
            }
          }

          collectionLength = collectionKeys.length;
          nextBlockOrder = new Array(collectionLength);

          // locate existing items
          for (index = 0; index < collectionLength; index++) {
            key = (collection === collectionKeys) ? index : collectionKeys[index];
            value = collection[key];
            trackById = trackByIdFn(key, value, index);
            if (lastBlockMap[trackById]) {
              // found previously seen block
              block = lastBlockMap[trackById];
              delete lastBlockMap[trackById];
              nextBlockMap[trackById] = block;
              nextBlockOrder[index] = block;
            } else if (nextBlockMap[trackById]) {
              // if collision detected. restore lastBlockMap and throw an error
              forEach(nextBlockOrder, function(block) {
                if (block && block.scope) lastBlockMap[block.id] = block;
              });
              throw ngRepeatMinErr('dupes',
                  'Duplicates in a repeater are not allowed. Use \'track by\' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}',
                  expression, trackById, value);
            } else {
              // new never before seen block
              nextBlockOrder[index] = {id: trackById, scope: undefined, clone: undefined};
              nextBlockMap[trackById] = true;
            }
          }

          // remove leftover items
          for (var blockKey in lastBlockMap) {
            block = lastBlockMap[blockKey];
            elementsToRemove = getBlockNodes(block.clone);
            $animate.leave(elementsToRemove);
            if (elementsToRemove[0].parentNode) {
              // if the element was not removed yet because of pending animation, mark it as deleted
              // so that we can ignore it later
              for (index = 0, length = elementsToRemove.length; index < length; index++) {
                elementsToRemove[index][NG_REMOVED] = true;
              }
            }
            block.scope.$destroy();
          }

          // we are not using forEach for perf reasons (trying to avoid #call)
          for (index = 0; index < collectionLength; index++) {
            key = (collection === collectionKeys) ? index : collectionKeys[index];
            value = collection[key];
            block = nextBlockOrder[index];

            if (block.scope) {
              // if we have already seen this object, then we need to reuse the
              // associated scope/element

              nextNode = previousNode;

              // skip nodes that are already pending removal via leave animation
              do {
                nextNode = nextNode.nextSibling;
              } while (nextNode && nextNode[NG_REMOVED]);

              if (getBlockStart(block) !== nextNode) {
                // existing item which got moved
                $animate.move(getBlockNodes(block.clone), null, previousNode);
              }
              previousNode = getBlockEnd(block);
              updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);
            } else {
              // new item which we don't know about
              $transclude(function ngRepeatTransclude(clone, scope) {
                block.scope = scope;
                // http://jsperf.com/clone-vs-createcomment
                var endNode = ngRepeatEndComment.cloneNode(false);
                clone[clone.length++] = endNode;

                $animate.enter(clone, null, previousNode);
                previousNode = endNode;
                // Note: We only need the first/last node of the cloned nodes.
                // However, we need to keep the reference to the jqlite wrapper as it might be changed later
                // by a directive with templateUrl when its template arrives.
                block.clone = clone;
                nextBlockMap[block.id] = block;
                updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);
              });
            }
          }
          lastBlockMap = nextBlockMap;
        });
      };
    }
  };
}];

var NG_HIDE_CLASS = 'ng-hide';
var NG_HIDE_IN_PROGRESS_CLASS = 'ng-hide-animate';
/**
 * @ngdoc directive
 * @name ngShow
 * @multiElement
 *
 * @description
 * The `ngShow` directive shows or hides the given HTML element based on the expression provided to
 * the `ngShow` attribute.
 *
 * The element is shown or hidden by removing or adding the `.ng-hide` CSS class onto the element.
 * The `.ng-hide` CSS class is predefined in AngularJS and sets the display style to none (using an
 * `!important` flag). For CSP mode please add `angular-csp.css` to your HTML file (see
 * {@link ng.directive:ngCsp ngCsp}).
 *
 * ```html
 * <!-- when $scope.myValue is truthy (element is visible) -->
 * <div ng-show="myValue"></div>
 *
 * <!-- when $scope.myValue is falsy (element is hidden) -->
 * <div ng-show="myValue" class="ng-hide"></div>
 * ```
 *
 * When the `ngShow` expression evaluates to a falsy value then the `.ng-hide` CSS class is added
 * to the class attribute on the element causing it to become hidden. When truthy, the `.ng-hide`
 * CSS class is removed from the element causing the element not to appear hidden.
 *
 * ## Why is `!important` used?
 *
 * You may be wondering why `!important` is used for the `.ng-hide` CSS class. This is because the
 * `.ng-hide` selector can be easily overridden by heavier selectors. For example, something as
 * simple as changing the display style on a HTML list item would make hidden elements appear
 * visible. This also becomes a bigger issue when dealing with CSS frameworks.
 *
 * By using `!important`, the show and hide behavior will work as expected despite any clash between
 * CSS selector specificity (when `!important` isn't used with any conflicting styles). If a
 * developer chooses to override the styling to change how to hide an element then it is just a
 * matter of using `!important` in their own CSS code.
 *
 * ### Overriding `.ng-hide`
 *
 * By default, the `.ng-hide` class will style the element with `display: none !important`. If you
 * wish to change the hide behavior with `ngShow`/`ngHide`, you can simply overwrite the styles for
 * the `.ng-hide` CSS class. Note that the selector that needs to be used is actually
 * `.ng-hide:not(.ng-hide-animate)` to cope with extra animation classes that can be added.
 *
 * ```css
 * .ng-hide:not(.ng-hide-animate) {
 *   /&#42; These are just alternative ways of hiding an element &#42;/
 *   display: block!important;
 *   position: absolute;
 *   top: -9999px;
 *   left: -9999px;
 * }
 * ```
 *
 * By default you don't need to override anything in CSS and the animations will work around the
 * display style.
 *
 * ## A note about animations with `ngShow`
 *
 * Animations in `ngShow`/`ngHide` work with the show and hide events that are triggered when the
 * directive expression is true and false. This system works like the animation system present with
 * `ngClass` except that you must also include the `!important` flag to override the display
 * property so that the elements are not actually hidden during the animation.
 *
 * ```css
 * /&#42; A working example can be found at the bottom of this page. &#42;/
 * .my-element.ng-hide-add, .my-element.ng-hide-remove {
 *   transition: all 0.5s linear;
 * }
 *
 * .my-element.ng-hide-add { ... }
 * .my-element.ng-hide-add.ng-hide-add-active { ... }
 * .my-element.ng-hide-remove { ... }
 * .my-element.ng-hide-remove.ng-hide-remove-active { ... }
 * ```
 *
 * Keep in mind that, as of AngularJS version 1.3, there is no need to change the display property
 * to block during animation states - ngAnimate will automatically handle the style toggling for you.
 *
 * @animations
 * | Animation                                           | Occurs                                                                                                        |
 * |-----------------------------------------------------|---------------------------------------------------------------------------------------------------------------|
 * | {@link $animate#addClass addClass} `.ng-hide`       | After the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden. |
 * | {@link $animate#removeClass removeClass} `.ng-hide` | After the `ngShow` expression evaluates to a truthy value and just before contents are set to visible.        |
 *
 * @element ANY
 * @param {expression} ngShow If the {@link guide/expression expression} is truthy/falsy then the
 *                            element is shown/hidden respectively.
 *
 * @example
 * A simple example, animating the element's opacity:
 *
  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-show-simple">
    <file name="index.html">
      Show: <input type="checkbox" ng-model="checked" aria-label="Toggle ngShow"><br />
      <div class="check-element animate-show-hide" ng-show="checked">
        I show up when your checkbox is checked.
      </div>
    </file>
    <file name="animations.css">
      .animate-show-hide.ng-hide {
        opacity: 0;
      }

      .animate-show-hide.ng-hide-add,
      .animate-show-hide.ng-hide-remove {
        transition: all linear 0.5s;
      }

      .check-element {
        border: 1px solid black;
        opacity: 1;
        padding: 10px;
      }
    </file>
    <file name="protractor.js" type="protractor">
      it('should check ngShow', function() {
        var checkbox = element(by.model('checked'));
        var checkElem = element(by.css('.check-element'));

        expect(checkElem.isDisplayed()).toBe(false);
        checkbox.click();
        expect(checkElem.isDisplayed()).toBe(true);
      });
    </file>
  </example>
 *
 * <hr />
 * @example
 * A more complex example, featuring different show/hide animations:
 *
  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-show-complex">
    <file name="index.html">
      Show: <input type="checkbox" ng-model="checked" aria-label="Toggle ngShow"><br />
      <div class="check-element funky-show-hide" ng-show="checked">
        I show up when your checkbox is checked.
      </div>
    </file>
    <file name="animations.css">
      body {
        overflow: hidden;
        perspective: 1000px;
      }

      .funky-show-hide.ng-hide-add {
        transform: rotateZ(0);
        transform-origin: right;
        transition: all 0.5s ease-in-out;
      }

      .funky-show-hide.ng-hide-add.ng-hide-add-active {
        transform: rotateZ(-135deg);
      }

      .funky-show-hide.ng-hide-remove {
        transform: rotateY(90deg);
        transform-origin: left;
        transition: all 0.5s ease;
      }

      .funky-show-hide.ng-hide-remove.ng-hide-remove-active {
        transform: rotateY(0);
      }

      .check-element {
        border: 1px solid black;
        opacity: 1;
        padding: 10px;
      }
    </file>
    <file name="protractor.js" type="protractor">
      it('should check ngShow', function() {
        var checkbox = element(by.model('checked'));
        var checkElem = element(by.css('.check-element'));

        expect(checkElem.isDisplayed()).toBe(false);
        checkbox.click();
        expect(checkElem.isDisplayed()).toBe(true);
      });
    </file>
  </example>
 */
var ngShowDirective = ['$animate', function($animate) {
  return {
    restrict: 'A',
    multiElement: true,
    link: function(scope, element, attr) {
      scope.$watch(attr.ngShow, function ngShowWatchAction(value) {
        // we're adding a temporary, animation-specific class for ng-hide since this way
        // we can control when the element is actually displayed on screen without having
        // to have a global/greedy CSS selector that breaks when other animations are run.
        // Read: https://github.com/angular/angular.js/issues/9103#issuecomment-58335845
        $animate[value ? 'removeClass' : 'addClass'](element, NG_HIDE_CLASS, {
          tempClasses: NG_HIDE_IN_PROGRESS_CLASS
        });
      });
    }
  };
}];


/**
 * @ngdoc directive
 * @name ngHide
 * @multiElement
 *
 * @description
 * The `ngHide` directive shows or hides the given HTML element based on the expression provided to
 * the `ngHide` attribute.
 *
 * The element is shown or hidden by removing or adding the `.ng-hide` CSS class onto the element.
 * The `.ng-hide` CSS class is predefined in AngularJS and sets the display style to none (using an
 * `!important` flag). For CSP mode please add `angular-csp.css` to your HTML file (see
 * {@link ng.directive:ngCsp ngCsp}).
 *
 * ```html
 * <!-- when $scope.myValue is truthy (element is hidden) -->
 * <div ng-hide="myValue" class="ng-hide"></div>
 *
 * <!-- when $scope.myValue is falsy (element is visible) -->
 * <div ng-hide="myValue"></div>
 * ```
 *
 * When the `ngHide` expression evaluates to a truthy value then the `.ng-hide` CSS class is added
 * to the class attribute on the element causing it to become hidden. When falsy, the `.ng-hide`
 * CSS class is removed from the element causing the element not to appear hidden.
 *
 * ## Why is `!important` used?
 *
 * You may be wondering why `!important` is used for the `.ng-hide` CSS class. This is because the
 * `.ng-hide` selector can be easily overridden by heavier selectors. For example, something as
 * simple as changing the display style on a HTML list item would make hidden elements appear
 * visible. This also becomes a bigger issue when dealing with CSS frameworks.
 *
 * By using `!important`, the show and hide behavior will work as expected despite any clash between
 * CSS selector specificity (when `!important` isn't used with any conflicting styles). If a
 * developer chooses to override the styling to change how to hide an element then it is just a
 * matter of using `!important` in their own CSS code.
 *
 * ### Overriding `.ng-hide`
 *
 * By default, the `.ng-hide` class will style the element with `display: none !important`. If you
 * wish to change the hide behavior with `ngShow`/`ngHide`, you can simply overwrite the styles for
 * the `.ng-hide` CSS class. Note that the selector that needs to be used is actually
 * `.ng-hide:not(.ng-hide-animate)` to cope with extra animation classes that can be added.
 *
 * ```css
 * .ng-hide:not(.ng-hide-animate) {
 *   /&#42; These are just alternative ways of hiding an element &#42;/
 *   display: block!important;
 *   position: absolute;
 *   top: -9999px;
 *   left: -9999px;
 * }
 * ```
 *
 * By default you don't need to override in CSS anything and the animations will work around the
 * display style.
 *
 * ## A note about animations with `ngHide`
 *
 * Animations in `ngShow`/`ngHide` work with the show and hide events that are triggered when the
 * directive expression is true and false. This system works like the animation system present with
 * `ngClass` except that you must also include the `!important` flag to override the display
 * property so that the elements are not actually hidden during the animation.
 *
 * ```css
 * /&#42; A working example can be found at the bottom of this page. &#42;/
 * .my-element.ng-hide-add, .my-element.ng-hide-remove {
 *   transition: all 0.5s linear;
 * }
 *
 * .my-element.ng-hide-add { ... }
 * .my-element.ng-hide-add.ng-hide-add-active { ... }
 * .my-element.ng-hide-remove { ... }
 * .my-element.ng-hide-remove.ng-hide-remove-active { ... }
 * ```
 *
 * Keep in mind that, as of AngularJS version 1.3, there is no need to change the display property
 * to block during animation states - ngAnimate will automatically handle the style toggling for you.
 *
 * @animations
 * | Animation                                           | Occurs                                                                                                     |
 * |-----------------------------------------------------|------------------------------------------------------------------------------------------------------------|
 * | {@link $animate#addClass addClass} `.ng-hide`       | After the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden.  |
 * | {@link $animate#removeClass removeClass} `.ng-hide` | After the `ngHide` expression evaluates to a non truthy value and just before contents are set to visible. |
 *
 *
 * @element ANY
 * @param {expression} ngHide If the {@link guide/expression expression} is truthy/falsy then the
 *                            element is hidden/shown respectively.
 *
 * @example
 * A simple example, animating the element's opacity:
 *
  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-hide-simple">
    <file name="index.html">
      Hide: <input type="checkbox" ng-model="checked" aria-label="Toggle ngHide"><br />
      <div class="check-element animate-show-hide" ng-hide="checked">
        I hide when your checkbox is checked.
      </div>
    </file>
    <file name="animations.css">
      .animate-show-hide.ng-hide {
        opacity: 0;
      }

      .animate-show-hide.ng-hide-add,
      .animate-show-hide.ng-hide-remove {
        transition: all linear 0.5s;
      }

      .check-element {
        border: 1px solid black;
        opacity: 1;
        padding: 10px;
      }
    </file>
    <file name="protractor.js" type="protractor">
      it('should check ngHide', function() {
        var checkbox = element(by.model('checked'));
        var checkElem = element(by.css('.check-element'));

        expect(checkElem.isDisplayed()).toBe(true);
        checkbox.click();
        expect(checkElem.isDisplayed()).toBe(false);
      });
    </file>
  </example>
 *
 * <hr />
 * @example
 * A more complex example, featuring different show/hide animations:
 *
  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-hide-complex">
    <file name="index.html">
      Hide: <input type="checkbox" ng-model="checked" aria-label="Toggle ngHide"><br />
      <div class="check-element funky-show-hide" ng-hide="checked">
        I hide when your checkbox is checked.
      </div>
    </file>
    <file name="animations.css">
      body {
        overflow: hidden;
        perspective: 1000px;
      }

      .funky-show-hide.ng-hide-add {
        transform: rotateZ(0);
        transform-origin: right;
        transition: all 0.5s ease-in-out;
      }

      .funky-show-hide.ng-hide-add.ng-hide-add-active {
        transform: rotateZ(-135deg);
      }

      .funky-show-hide.ng-hide-remove {
        transform: rotateY(90deg);
        transform-origin: left;
        transition: all 0.5s ease;
      }

      .funky-show-hide.ng-hide-remove.ng-hide-remove-active {
        transform: rotateY(0);
      }

      .check-element {
        border: 1px solid black;
        opacity: 1;
        padding: 10px;
      }
    </file>
    <file name="protractor.js" type="protractor">
      it('should check ngHide', function() {
        var checkbox = element(by.model('checked'));
        var checkElem = element(by.css('.check-element'));

        expect(checkElem.isDisplayed()).toBe(true);
        checkbox.click();
        expect(checkElem.isDisplayed()).toBe(false);
      });
    </file>
  </example>
 */
var ngHideDirective = ['$animate', function($animate) {
  return {
    restrict: 'A',
    multiElement: true,
    link: function(scope, element, attr) {
      scope.$watch(attr.ngHide, function ngHideWatchAction(value) {
        // The comment inside of the ngShowDirective explains why we add and
        // remove a temporary class for the show/hide animation
        $animate[value ? 'addClass' : 'removeClass'](element,NG_HIDE_CLASS, {
          tempClasses: NG_HIDE_IN_PROGRESS_CLASS
        });
      });
    }
  };
}];

/**
 * @ngdoc directive
 * @name ngStyle
 * @restrict AC
 *
 * @description
 * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.
 *
 * @knownIssue
 * You should not use {@link guide/interpolation interpolation} in the value of the `style`
 * attribute, when using the `ngStyle` directive on the same element.
 * See {@link guide/interpolation#known-issues here} for more info.
 *
 * @element ANY
 * @param {expression} ngStyle
 *
 * {@link guide/expression Expression} which evals to an
 * object whose keys are CSS style names and values are corresponding values for those CSS
 * keys.
 *
 * Since some CSS style names are not valid keys for an object, they must be quoted.
 * See the 'background-color' style in the example below.
 *
 * @example
   <example name="ng-style">
     <file name="index.html">
        <input type="button" value="set color" ng-click="myStyle={color:'red'}">
        <input type="button" value="set background" ng-click="myStyle={'background-color':'blue'}">
        <input type="button" value="clear" ng-click="myStyle={}">
        <br/>
        <span ng-style="myStyle">Sample Text</span>
        <pre>myStyle={{myStyle}}</pre>
     </file>
     <file name="style.css">
       span {
         color: black;
       }
     </file>
     <file name="protractor.js" type="protractor">
       var colorSpan = element(by.css('span'));

       it('should check ng-style', function() {
         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');
         element(by.css('input[value=\'set color\']')).click();
         expect(colorSpan.getCssValue('color')).toBe('rgba(255, 0, 0, 1)');
         element(by.css('input[value=clear]')).click();
         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');
       });
     </file>
   </example>
 */
var ngStyleDirective = ngDirective(function(scope, element, attr) {
  scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {
    if (oldStyles && (newStyles !== oldStyles)) {
      forEach(oldStyles, function(val, style) { element.css(style, '');});
    }
    if (newStyles) element.css(newStyles);
  }, true);
});

/**
 * @ngdoc directive
 * @name ngSwitch
 * @restrict EA
 *
 * @description
 * The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.
 * Elements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location
 * as specified in the template.
 *
 * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it
 * from the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element
 * matches the value obtained from the evaluated expression. In other words, you define a container element
 * (where you place the directive), place an expression on the **`on="..."` attribute**
 * (or the **`ng-switch="..."` attribute**), define any inner elements inside of the directive and place
 * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on
 * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default
 * attribute is displayed.
 *
 * <div class="alert alert-info">
 * Be aware that the attribute values to match against cannot be expressions. They are interpreted
 * as literal string values to match against.
 * For example, **`ng-switch-when="someVal"`** will match against the string `"someVal"` not against the
 * value of the expression `$scope.someVal`.
 * </div>

 * @animations
 * | Animation                        | Occurs                              |
 * |----------------------------------|-------------------------------------|
 * | {@link ng.$animate#enter enter}  | after the ngSwitch contents change and the matched child element is placed inside the container |
 * | {@link ng.$animate#leave leave}  | after the ngSwitch contents change and just before the former contents are removed from the DOM |
 *
 * @usage
 *
 * ```
 * <ANY ng-switch="expression">
 *   <ANY ng-switch-when="matchValue1">...</ANY>
 *   <ANY ng-switch-when="matchValue2">...</ANY>
 *   <ANY ng-switch-default>...</ANY>
 * </ANY>
 * ```
 *
 *
 * @scope
 * @priority 1200
 * @param {*} ngSwitch|on expression to match against <code>ng-switch-when</code>.
 * On child elements add:
 *
 * * `ngSwitchWhen`: the case statement to match against. If match then this
 *   case will be displayed. If the same match appears multiple times, all the
 *   elements will be displayed. It is possible to associate multiple values to
 *   the same `ngSwitchWhen` by defining the optional attribute
 *   `ngSwitchWhenSeparator`. The separator will be used to split the value of
 *   the `ngSwitchWhen` attribute into multiple tokens, and the element will show
 *   if any of the `ngSwitch` evaluates to any of these tokens.
 * * `ngSwitchDefault`: the default case when no other case match. If there
 *   are multiple default cases, all of them will be displayed when no other
 *   case match.
 *
 *
 * @example
  <example module="switchExample" deps="angular-animate.js" animations="true" name="ng-switch">
    <file name="index.html">
      <div ng-controller="ExampleController">
        <select ng-model="selection" ng-options="item for item in items">
        </select>
        <code>selection={{selection}}</code>
        <hr/>
        <div class="animate-switch-container"
          ng-switch on="selection">
            <div class="animate-switch" ng-switch-when="settings|options" ng-switch-when-separator="|">Settings Div</div>
            <div class="animate-switch" ng-switch-when="home">Home Span</div>
            <div class="animate-switch" ng-switch-default>default</div>
        </div>
      </div>
    </file>
    <file name="script.js">
      angular.module('switchExample', ['ngAnimate'])
        .controller('ExampleController', ['$scope', function($scope) {
          $scope.items = ['settings', 'home', 'options', 'other'];
          $scope.selection = $scope.items[0];
        }]);
    </file>
    <file name="animations.css">
      .animate-switch-container {
        position:relative;
        background:white;
        border:1px solid black;
        height:40px;
        overflow:hidden;
      }

      .animate-switch {
        padding:10px;
      }

      .animate-switch.ng-animate {
        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;

        position:absolute;
        top:0;
        left:0;
        right:0;
        bottom:0;
      }

      .animate-switch.ng-leave.ng-leave-active,
      .animate-switch.ng-enter {
        top:-50px;
      }
      .animate-switch.ng-leave,
      .animate-switch.ng-enter.ng-enter-active {
        top:0;
      }
    </file>
    <file name="protractor.js" type="protractor">
      var switchElem = element(by.css('[ng-switch]'));
      var select = element(by.model('selection'));

      it('should start in settings', function() {
        expect(switchElem.getText()).toMatch(/Settings Div/);
      });
      it('should change to home', function() {
        select.all(by.css('option')).get(1).click();
        expect(switchElem.getText()).toMatch(/Home Span/);
      });
      it('should change to settings via "options"', function() {
        select.all(by.css('option')).get(2).click();
        expect(switchElem.getText()).toMatch(/Settings Div/);
      });
      it('should select default', function() {
        select.all(by.css('option')).get(3).click();
        expect(switchElem.getText()).toMatch(/default/);
      });
    </file>
  </example>
 */
var ngSwitchDirective = ['$animate', '$compile', function($animate, $compile) {
  return {
    require: 'ngSwitch',

    // asks for $scope to fool the BC controller module
    controller: ['$scope', function NgSwitchController() {
     this.cases = {};
    }],
    link: function(scope, element, attr, ngSwitchController) {
      var watchExpr = attr.ngSwitch || attr.on,
          selectedTranscludes = [],
          selectedElements = [],
          previousLeaveAnimations = [],
          selectedScopes = [];

      var spliceFactory = function(array, index) {
          return function(response) {
            if (response !== false) array.splice(index, 1);
          };
      };

      scope.$watch(watchExpr, function ngSwitchWatchAction(value) {
        var i, ii;

        // Start with the last, in case the array is modified during the loop
        while (previousLeaveAnimations.length) {
          $animate.cancel(previousLeaveAnimations.pop());
        }

        for (i = 0, ii = selectedScopes.length; i < ii; ++i) {
          var selected = getBlockNodes(selectedElements[i].clone);
          selectedScopes[i].$destroy();
          var runner = previousLeaveAnimations[i] = $animate.leave(selected);
          runner.done(spliceFactory(previousLeaveAnimations, i));
        }

        selectedElements.length = 0;
        selectedScopes.length = 0;

        if ((selectedTranscludes = ngSwitchController.cases['!' + value] || ngSwitchController.cases['?'])) {
          forEach(selectedTranscludes, function(selectedTransclude) {
            selectedTransclude.transclude(function(caseElement, selectedScope) {
              selectedScopes.push(selectedScope);
              var anchor = selectedTransclude.element;
              caseElement[caseElement.length++] = $compile.$$createComment('end ngSwitchWhen');
              var block = { clone: caseElement };

              selectedElements.push(block);
              $animate.enter(caseElement, anchor.parent(), anchor);
            });
          });
        }
      });
    }
  };
}];

var ngSwitchWhenDirective = ngDirective({
  transclude: 'element',
  priority: 1200,
  require: '^ngSwitch',
  multiElement: true,
  link: function(scope, element, attrs, ctrl, $transclude) {

    var cases = attrs.ngSwitchWhen.split(attrs.ngSwitchWhenSeparator).sort().filter(
      // Filter duplicate cases
      function(element, index, array) { return array[index - 1] !== element; }
    );

    forEach(cases, function(whenCase) {
      ctrl.cases['!' + whenCase] = (ctrl.cases['!' + whenCase] || []);
      ctrl.cases['!' + whenCase].push({ transclude: $transclude, element: element });
    });
  }
});

var ngSwitchDefaultDirective = ngDirective({
  transclude: 'element',
  priority: 1200,
  require: '^ngSwitch',
  multiElement: true,
  link: function(scope, element, attr, ctrl, $transclude) {
    ctrl.cases['?'] = (ctrl.cases['?'] || []);
    ctrl.cases['?'].push({ transclude: $transclude, element: element });
   }
});

/**
 * @ngdoc directive
 * @name ngTransclude
 * @restrict EAC
 *
 * @description
 * Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.
 *
 * You can specify that you want to insert a named transclusion slot, instead of the default slot, by providing the slot name
 * as the value of the `ng-transclude` or `ng-transclude-slot` attribute.
 *
 * If the transcluded content is not empty (i.e. contains one or more DOM nodes, including whitespace text nodes), any existing
 * content of this element will be removed before the transcluded content is inserted.
 * If the transcluded content is empty, the existing content is left intact. This lets you provide fallback content in the case
 * that no transcluded content is provided.
 *
 * @element ANY
 *
 * @param {string} ngTransclude|ngTranscludeSlot the name of the slot to insert at this point. If this is not provided, is empty
 *                                               or its value is the same as the name of the attribute then the default slot is used.
 *
 * @example
 * ### Basic transclusion
 * This example demonstrates basic transclusion of content into a component directive.
 * <example name="simpleTranscludeExample" module="transcludeExample">
 *   <file name="index.html">
 *     <script>
 *       angular.module('transcludeExample', [])
 *        .directive('pane', function(){
 *           return {
 *             restrict: 'E',
 *             transclude: true,
 *             scope: { title:'@' },
 *             template: '<div style="border: 1px solid black;">' +
 *                         '<div style="background-color: gray">{{title}}</div>' +
 *                         '<ng-transclude></ng-transclude>' +
 *                       '</div>'
 *           };
 *       })
 *       .controller('ExampleController', ['$scope', function($scope) {
 *         $scope.title = 'Lorem Ipsum';
 *         $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';
 *       }]);
 *     </script>
 *     <div ng-controller="ExampleController">
 *       <input ng-model="title" aria-label="title"> <br/>
 *       <textarea ng-model="text" aria-label="text"></textarea> <br/>
 *       <pane title="{{title}}">{{text}}</pane>
 *     </div>
 *   </file>
 *   <file name="protractor.js" type="protractor">
 *      it('should have transcluded', function() {
 *        var titleElement = element(by.model('title'));
 *        titleElement.clear();
 *        titleElement.sendKeys('TITLE');
 *        var textElement = element(by.model('text'));
 *        textElement.clear();
 *        textElement.sendKeys('TEXT');
 *        expect(element(by.binding('title')).getText()).toEqual('TITLE');
 *        expect(element(by.binding('text')).getText()).toEqual('TEXT');
 *      });
 *   </file>
 * </example>
 *
 * @example
 * ### Transclude fallback content
 * This example shows how to use `NgTransclude` with fallback content, that
 * is displayed if no transcluded content is provided.
 *
 * <example module="transcludeFallbackContentExample" name="ng-transclude">
 * <file name="index.html">
 * <script>
 * angular.module('transcludeFallbackContentExample', [])
 * .directive('myButton', function(){
 *             return {
 *               restrict: 'E',
 *               transclude: true,
 *               scope: true,
 *               template: '<button style="cursor: pointer;">' +
 *                           '<ng-transclude>' +
 *                             '<b style="color: red;">Button1</b>' +
 *                           '</ng-transclude>' +
 *                         '</button>'
 *             };
 *         });
 * </script>
 * <!-- fallback button content -->
 * <my-button id="fallback"></my-button>
 * <!-- modified button content -->
 * <my-button id="modified">
 *   <i style="color: green;">Button2</i>
 * </my-button>
 * </file>
 * <file name="protractor.js" type="protractor">
 * it('should have different transclude element content', function() {
 *          expect(element(by.id('fallback')).getText()).toBe('Button1');
 *          expect(element(by.id('modified')).getText()).toBe('Button2');
 *        });
 * </file>
 * </example>
 *
 * @example
 * ### Multi-slot transclusion
 * This example demonstrates using multi-slot transclusion in a component directive.
 * <example name="multiSlotTranscludeExample" module="multiSlotTranscludeExample">
 *   <file name="index.html">
 *    <style>
 *      .title, .footer {
 *        background-color: gray
 *      }
 *    </style>
 *    <div ng-controller="ExampleController">
 *      <input ng-model="title" aria-label="title"> <br/>
 *      <textarea ng-model="text" aria-label="text"></textarea> <br/>
 *      <pane>
 *        <pane-title><a ng-href="{{link}}">{{title}}</a></pane-title>
 *        <pane-body><p>{{text}}</p></pane-body>
 *      </pane>
 *    </div>
 *   </file>
 *   <file name="app.js">
 *    angular.module('multiSlotTranscludeExample', [])
 *     .directive('pane', function() {
 *        return {
 *          restrict: 'E',
 *          transclude: {
 *            'title': '?paneTitle',
 *            'body': 'paneBody',
 *            'footer': '?paneFooter'
 *          },
 *          template: '<div style="border: 1px solid black;">' +
 *                      '<div class="title" ng-transclude="title">Fallback Title</div>' +
 *                      '<div ng-transclude="body"></div>' +
 *                      '<div class="footer" ng-transclude="footer">Fallback Footer</div>' +
 *                    '</div>'
 *        };
 *    })
 *    .controller('ExampleController', ['$scope', function($scope) {
 *      $scope.title = 'Lorem Ipsum';
 *      $scope.link = 'https://google.com';
 *      $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';
 *    }]);
 *   </file>
 *   <file name="protractor.js" type="protractor">
 *      it('should have transcluded the title and the body', function() {
 *        var titleElement = element(by.model('title'));
 *        titleElement.clear();
 *        titleElement.sendKeys('TITLE');
 *        var textElement = element(by.model('text'));
 *        textElement.clear();
 *        textElement.sendKeys('TEXT');
 *        expect(element(by.css('.title')).getText()).toEqual('TITLE');
 *        expect(element(by.binding('text')).getText()).toEqual('TEXT');
 *        expect(element(by.css('.footer')).getText()).toEqual('Fallback Footer');
 *      });
 *   </file>
 * </example>
 */
var ngTranscludeMinErr = minErr('ngTransclude');
var ngTranscludeDirective = ['$compile', function($compile) {
  return {
    restrict: 'EAC',
    terminal: true,
    compile: function ngTranscludeCompile(tElement) {

      // Remove and cache any original content to act as a fallback
      var fallbackLinkFn = $compile(tElement.contents());
      tElement.empty();

      return function ngTranscludePostLink($scope, $element, $attrs, controller, $transclude) {

        if (!$transclude) {
          throw ngTranscludeMinErr('orphan',
          'Illegal use of ngTransclude directive in the template! ' +
          'No parent directive that requires a transclusion found. ' +
          'Element: {0}',
          startingTag($element));
        }


        // If the attribute is of the form: `ng-transclude="ng-transclude"` then treat it like the default
        if ($attrs.ngTransclude === $attrs.$attr.ngTransclude) {
          $attrs.ngTransclude = '';
        }
        var slotName = $attrs.ngTransclude || $attrs.ngTranscludeSlot;

        // If the slot is required and no transclusion content is provided then this call will throw an error
        $transclude(ngTranscludeCloneAttachFn, null, slotName);

        // If the slot is optional and no transclusion content is provided then use the fallback content
        if (slotName && !$transclude.isSlotFilled(slotName)) {
          useFallbackContent();
        }

        function ngTranscludeCloneAttachFn(clone, transcludedScope) {
          if (clone.length) {
            $element.append(clone);
          } else {
            useFallbackContent();
            // There is nothing linked against the transcluded scope since no content was available,
            // so it should be safe to clean up the generated scope.
            transcludedScope.$destroy();
          }
        }

        function useFallbackContent() {
          // Since this is the fallback content rather than the transcluded content,
          // we link against the scope of this directive rather than the transcluded scope
          fallbackLinkFn($scope, function(clone) {
            $element.append(clone);
          });
        }
      };
    }
  };
}];

/**
 * @ngdoc directive
 * @name script
 * @restrict E
 *
 * @description
 * Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the
 * template can be used by {@link ng.directive:ngInclude `ngInclude`},
 * {@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the
 * `<script>` element must be specified as `text/ng-template`, and a cache name for the template must be
 * assigned through the element's `id`, which can then be used as a directive's `templateUrl`.
 *
 * @param {string} type Must be set to `'text/ng-template'`.
 * @param {string} id Cache name of the template.
 *
 * @example
  <example  name="script-tag">
    <file name="index.html">
      <script type="text/ng-template" id="/tpl.html">
        Content of the template.
      </script>

      <a ng-click="currentTpl='/tpl.html'" id="tpl-link">Load inlined template</a>
      <div id="tpl-content" ng-include src="currentTpl"></div>
    </file>
    <file name="protractor.js" type="protractor">
      it('should load template defined inside script tag', function() {
        element(by.css('#tpl-link')).click();
        expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);
      });
    </file>
  </example>
 */
var scriptDirective = ['$templateCache', function($templateCache) {
  return {
    restrict: 'E',
    terminal: true,
    compile: function(element, attr) {
      if (attr.type === 'text/ng-template') {
        var templateUrl = attr.id,
            text = element[0].text;

        $templateCache.put(templateUrl, text);
      }
    }
  };
}];

/* exported selectDirective, optionDirective */

var noopNgModelController = { $setViewValue: noop, $render: noop };

function chromeHack(optionElement) {
  // Workaround for https://code.google.com/p/chromium/issues/detail?id=381459
  // Adding an <option selected="selected"> element to a <select required="required"> should
  // automatically select the new element
  if (optionElement[0].hasAttribute('selected')) {
    optionElement[0].selected = true;
  }
}

/**
 * @ngdoc type
 * @name  select.SelectController
 * @description
 * The controller for the `<select>` directive. This provides support for reading
 * and writing the selected value(s) of the control and also coordinates dynamically
 * added `<option>` elements, perhaps by an `ngRepeat` directive.
 */
var SelectController =
        ['$element', '$scope', /** @this */ function($element, $scope) {

  var self = this,
      optionsMap = new HashMap();

  // If the ngModel doesn't get provided then provide a dummy noop version to prevent errors
  self.ngModelCtrl = noopNgModelController;

  // The "unknown" option is one that is prepended to the list if the viewValue
  // does not match any of the options. When it is rendered the value of the unknown
  // option is '? XXX ?' where XXX is the hashKey of the value that is not known.
  //
  // We can't just jqLite('<option>') since jqLite is not smart enough
  // to create it in <select> and IE barfs otherwise.
  self.unknownOption = jqLite(window.document.createElement('option'));
  self.renderUnknownOption = function(val) {
    var unknownVal = '? ' + hashKey(val) + ' ?';
    self.unknownOption.val(unknownVal);
    $element.prepend(self.unknownOption);
    $element.val(unknownVal);
  };

  $scope.$on('$destroy', function() {
    // disable unknown option so that we don't do work when the whole select is being destroyed
    self.renderUnknownOption = noop;
  });

  self.removeUnknownOption = function() {
    if (self.unknownOption.parent()) self.unknownOption.remove();
  };


  // Read the value of the select control, the implementation of this changes depending
  // upon whether the select can have multiple values and whether ngOptions is at work.
  self.readValue = function readSingleValue() {
    self.removeUnknownOption();
    return $element.val();
  };


  // Write the value to the select control, the implementation of this changes depending
  // upon whether the select can have multiple values and whether ngOptions is at work.
  self.writeValue = function writeSingleValue(value) {
    if (self.hasOption(value)) {
      self.removeUnknownOption();
      $element.val(value);
      if (value === '') self.emptyOption.prop('selected', true); // to make IE9 happy
    } else {
      if (value == null && self.emptyOption) {
        self.removeUnknownOption();
        $element.val('');
      } else {
        self.renderUnknownOption(value);
      }
    }
  };


  // Tell the select control that an option, with the given value, has been added
  self.addOption = function(value, element) {
    // Skip comment nodes, as they only pollute the `optionsMap`
    if (element[0].nodeType === NODE_TYPE_COMMENT) return;

    assertNotHasOwnProperty(value, '"option value"');
    if (value === '') {
      self.emptyOption = element;
    }
    var count = optionsMap.get(value) || 0;
    optionsMap.put(value, count + 1);
    self.ngModelCtrl.$render();
    chromeHack(element);
  };

  // Tell the select control that an option, with the given value, has been removed
  self.removeOption = function(value) {
    var count = optionsMap.get(value);
    if (count) {
      if (count === 1) {
        optionsMap.remove(value);
        if (value === '') {
          self.emptyOption = undefined;
        }
      } else {
        optionsMap.put(value, count - 1);
      }
    }
  };

  // Check whether the select control has an option matching the given value
  self.hasOption = function(value) {
    return !!optionsMap.get(value);
  };


  self.registerOption = function(optionScope, optionElement, optionAttrs, hasDynamicValueAttr, interpolateTextFn) {

    if (hasDynamicValueAttr) {
      // either "value" is interpolated directly, or set by ngValue
      var oldVal;
      optionAttrs.$observe('value', function valueAttributeObserveAction(newVal) {
        if (isDefined(oldVal)) {
          self.removeOption(oldVal);
        }
        oldVal = newVal;
        self.addOption(newVal, optionElement);
      });
    } else if (interpolateTextFn) {
      // The text content is interpolated
      optionScope.$watch(interpolateTextFn, function interpolateWatchAction(newVal, oldVal) {
        optionAttrs.$set('value', newVal);
        if (oldVal !== newVal) {
          self.removeOption(oldVal);
        }
        self.addOption(newVal, optionElement);
      });
    } else {
      // The value attribute is static
      self.addOption(optionAttrs.value, optionElement);
    }

    optionElement.on('$destroy', function() {
      self.removeOption(optionAttrs.value);
      self.ngModelCtrl.$render();
    });
  };
}];

/**
 * @ngdoc directive
 * @name select
 * @restrict E
 *
 * @description
 * HTML `SELECT` element with angular data-binding.
 *
 * The `select` directive is used together with {@link ngModel `ngModel`} to provide data-binding
 * between the scope and the `<select>` control (including setting default values).
 * It also handles dynamic `<option>` elements, which can be added using the {@link ngRepeat `ngRepeat}` or
 * {@link ngOptions `ngOptions`} directives.
 *
 * When an item in the `<select>` menu is selected, the value of the selected option will be bound
 * to the model identified by the `ngModel` directive. With static or repeated options, this is
 * the content of the `value` attribute or the textContent of the `<option>`, if the value attribute is missing.
 * For dynamic options, use interpolation inside the `value` attribute or the `textContent`. Using
 * {@link ngValue ngValue} is also possible (as it sets the `value` attribute), and will take
 * precedence over `value` and `textContent`.
 *
 * <div class="alert alert-warning">
 * Note that the value of a `select` directive used without `ngOptions` is always a string.
 * When the model needs to be bound to a non-string value, you must either explicitly convert it
 * using a directive (see example below) or use `ngOptions` to specify the set of options.
 * This is because an option element can only be bound to string values at present.
 * </div>
 *
 * If the viewValue of `ngModel` does not match any of the options, then the control
 * will automatically add an "unknown" option, which it then removes when the mismatch is resolved.
 *
 * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can
 * be nested into the `<select>` element. This element will then represent the `null` or "not selected"
 * option. See example below for demonstration.
 *
 * <div class="alert alert-info">
 * In many cases, `ngRepeat` can be used on `<option>` elements instead of {@link ng.directive:ngOptions
 * ngOptions} to achieve a similar result. However, `ngOptions` provides some benefits, such as
 * more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the
 * comprehension expression, and additionally in reducing memory and increasing speed by not creating
 * a new scope for each repeated instance.
 * </div>
 *
 *
 * @param {string} ngModel Assignable angular expression to data-bind to.
 * @param {string=} name Property name of the form under which the control is published.
 * @param {string=} multiple Allows multiple options to be selected. The selected values will be
 *     bound to the model as an array.
 * @param {string=} required Sets `required` validation error key if the value is not entered.
 * @param {string=} ngRequired Adds required attribute and required validation constraint to
 * the element when the ngRequired expression evaluates to true. Use ngRequired instead of required
 * when you want to data-bind to the required attribute.
 * @param {string=} ngChange Angular expression to be executed when selected option(s) changes due to user
 *    interaction with the select element.
 * @param {string=} ngOptions sets the options that the select is populated with and defines what is
 * set on the model on selection. See {@link ngOptions `ngOptions`}.
 *
 * @example
 * ### Simple `select` elements with static options
 *
 * <example name="static-select" module="staticSelect">
 * <file name="index.html">
 * <div ng-controller="ExampleController">
 *   <form name="myForm">
 *     <label for="singleSelect"> Single select: </label><br>
 *     <select name="singleSelect" ng-model="data.singleSelect">
 *       <option value="option-1">Option 1</option>
 *       <option value="option-2">Option 2</option>
 *     </select><br>
 *
 *     <label for="singleSelect"> Single select with "not selected" option and dynamic option values: </label><br>
 *     <select name="singleSelect" id="singleSelect" ng-model="data.singleSelect">
 *       <option value="">---Please select---</option> <!-- not selected / blank option -->
 *       <option value="{{data.option1}}">Option 1</option> <!-- interpolation -->
 *       <option value="option-2">Option 2</option>
 *     </select><br>
 *     <button ng-click="forceUnknownOption()">Force unknown option</button><br>
 *     <tt>singleSelect = {{data.singleSelect}}</tt>
 *
 *     <hr>
 *     <label for="multipleSelect"> Multiple select: </label><br>
 *     <select name="multipleSelect" id="multipleSelect" ng-model="data.multipleSelect" multiple>
 *       <option value="option-1">Option 1</option>
 *       <option value="option-2">Option 2</option>
 *       <option value="option-3">Option 3</option>
 *     </select><br>
 *     <tt>multipleSelect = {{data.multipleSelect}}</tt><br/>
 *   </form>
 * </div>
 * </file>
 * <file name="app.js">
 *  angular.module('staticSelect', [])
 *    .controller('ExampleController', ['$scope', function($scope) {
 *      $scope.data = {
 *       singleSelect: null,
 *       multipleSelect: [],
 *       option1: 'option-1'
 *      };
 *
 *      $scope.forceUnknownOption = function() {
 *        $scope.data.singleSelect = 'nonsense';
 *      };
 *   }]);
 * </file>
 *</example>
 *
 * ### Using `ngRepeat` to generate `select` options
 * <example name="ngrepeat-select" module="ngrepeatSelect">
 * <file name="index.html">
 * <div ng-controller="ExampleController">
 *   <form name="myForm">
 *     <label for="repeatSelect"> Repeat select: </label>
 *     <select name="repeatSelect" id="repeatSelect" ng-model="data.repeatSelect">
 *       <option ng-repeat="option in data.availableOptions" value="{{option.id}}">{{option.name}}</option>
 *     </select>
 *   </form>
 *   <hr>
 *   <tt>repeatSelect = {{data.repeatSelect}}</tt><br/>
 * </div>
 * </file>
 * <file name="app.js">
 *  angular.module('ngrepeatSelect', [])
 *    .controller('ExampleController', ['$scope', function($scope) {
 *      $scope.data = {
 *       repeatSelect: null,
 *       availableOptions: [
 *         {id: '1', name: 'Option A'},
 *         {id: '2', name: 'Option B'},
 *         {id: '3', name: 'Option C'}
 *       ]
 *      };
 *   }]);
 * </file>
 *</example>
 *
 *
 * ### Using `select` with `ngOptions` and setting a default value
 * See the {@link ngOptions ngOptions documentation} for more `ngOptions` usage examples.
 *
 * <example name="select-with-default-values" module="defaultValueSelect">
 * <file name="index.html">
 * <div ng-controller="ExampleController">
 *   <form name="myForm">
 *     <label for="mySelect">Make a choice:</label>
 *     <select name="mySelect" id="mySelect"
 *       ng-options="option.name for option in data.availableOptions track by option.id"
 *       ng-model="data.selectedOption"></select>
 *   </form>
 *   <hr>
 *   <tt>option = {{data.selectedOption}}</tt><br/>
 * </div>
 * </file>
 * <file name="app.js">
 *  angular.module('defaultValueSelect', [])
 *    .controller('ExampleController', ['$scope', function($scope) {
 *      $scope.data = {
 *       availableOptions: [
 *         {id: '1', name: 'Option A'},
 *         {id: '2', name: 'Option B'},
 *         {id: '3', name: 'Option C'}
 *       ],
 *       selectedOption: {id: '3', name: 'Option C'} //This sets the default value of the select in the ui
 *       };
 *   }]);
 * </file>
 *</example>
 *
 *
 * ### Binding `select` to a non-string value via `ngModel` parsing / formatting
 *
 * <example name="select-with-non-string-options" module="nonStringSelect">
 *   <file name="index.html">
 *     <select ng-model="model.id" convert-to-number>
 *       <option value="0">Zero</option>
 *       <option value="1">One</option>
 *       <option value="2">Two</option>
 *     </select>
 *     {{ model }}
 *   </file>
 *   <file name="app.js">
 *     angular.module('nonStringSelect', [])
 *       .run(function($rootScope) {
 *         $rootScope.model = { id: 2 };
 *       })
 *       .directive('convertToNumber', function() {
 *         return {
 *           require: 'ngModel',
 *           link: function(scope, element, attrs, ngModel) {
 *             ngModel.$parsers.push(function(val) {
 *               return parseInt(val, 10);
 *             });
 *             ngModel.$formatters.push(function(val) {
 *               return '' + val;
 *             });
 *           }
 *         };
 *       });
 *   </file>
 *   <file name="protractor.js" type="protractor">
 *     it('should initialize to model', function() {
 *       expect(element(by.model('model.id')).$('option:checked').getText()).toEqual('Two');
 *     });
 *   </file>
 * </example>
 *
 */
var selectDirective = function() {

  return {
    restrict: 'E',
    require: ['select', '?ngModel'],
    controller: SelectController,
    priority: 1,
    link: {
      pre: selectPreLink,
      post: selectPostLink
    }
  };

  function selectPreLink(scope, element, attr, ctrls) {

      // if ngModel is not defined, we don't need to do anything
      var ngModelCtrl = ctrls[1];
      if (!ngModelCtrl) return;

      var selectCtrl = ctrls[0];

      selectCtrl.ngModelCtrl = ngModelCtrl;

      // When the selected item(s) changes we delegate getting the value of the select control
      // to the `readValue` method, which can be changed if the select can have multiple
      // selected values or if the options are being generated by `ngOptions`
      element.on('change', function() {
        scope.$apply(function() {
          ngModelCtrl.$setViewValue(selectCtrl.readValue());
        });
      });

      // If the select allows multiple values then we need to modify how we read and write
      // values from and to the control; also what it means for the value to be empty and
      // we have to add an extra watch since ngModel doesn't work well with arrays - it
      // doesn't trigger rendering if only an item in the array changes.
      if (attr.multiple) {

        // Read value now needs to check each option to see if it is selected
        selectCtrl.readValue = function readMultipleValue() {
          var array = [];
          forEach(element.find('option'), function(option) {
            if (option.selected) {
              array.push(option.value);
            }
          });
          return array;
        };

        // Write value now needs to set the selected property of each matching option
        selectCtrl.writeValue = function writeMultipleValue(value) {
          var items = new HashMap(value);
          forEach(element.find('option'), function(option) {
            option.selected = isDefined(items.get(option.value));
          });
        };

        // we have to do it on each watch since ngModel watches reference, but
        // we need to work of an array, so we need to see if anything was inserted/removed
        var lastView, lastViewRef = NaN;
        scope.$watch(function selectMultipleWatch() {
          if (lastViewRef === ngModelCtrl.$viewValue && !equals(lastView, ngModelCtrl.$viewValue)) {
            lastView = shallowCopy(ngModelCtrl.$viewValue);
            ngModelCtrl.$render();
          }
          lastViewRef = ngModelCtrl.$viewValue;
        });

        // If we are a multiple select then value is now a collection
        // so the meaning of $isEmpty changes
        ngModelCtrl.$isEmpty = function(value) {
          return !value || value.length === 0;
        };

      }
    }

    function selectPostLink(scope, element, attrs, ctrls) {
      // if ngModel is not defined, we don't need to do anything
      var ngModelCtrl = ctrls[1];
      if (!ngModelCtrl) return;

      var selectCtrl = ctrls[0];

      // We delegate rendering to the `writeValue` method, which can be changed
      // if the select can have multiple selected values or if the options are being
      // generated by `ngOptions`.
      // This must be done in the postLink fn to prevent $render to be called before
      // all nodes have been linked correctly.
      ngModelCtrl.$render = function() {
        selectCtrl.writeValue(ngModelCtrl.$viewValue);
      };
    }
};


// The option directive is purely designed to communicate the existence (or lack of)
// of dynamically created (and destroyed) option elements to their containing select
// directive via its controller.
var optionDirective = ['$interpolate', function($interpolate) {
  return {
    restrict: 'E',
    priority: 100,
    compile: function(element, attr) {
      var hasDynamicValueAttr, interpolateTextFn;

      if (isDefined(attr.ngValue)) {
        // If ngValue is defined, then the value attr will be set to the result of the expression,
        // and the selectCtrl must set up an observer
        hasDynamicValueAttr = true;
      } else if (isDefined(attr.value)) {
        // If the value attr contains an interpolation, the selectCtrl must set up an observer
        hasDynamicValueAttr = $interpolate(attr.value, true);
      } else {
        // If the value attribute is not defined then we fall back to the
        // text content of the option element, which may be interpolated
        interpolateTextFn = $interpolate(element.text(), true);
        if (!interpolateTextFn) {
          attr.$set('value', element.text());
        }
      }

      return function(scope, element, attr) {
        // This is an optimization over using ^^ since we don't want to have to search
        // all the way to the root of the DOM for every single option element
        var selectCtrlName = '$selectController',
            parent = element.parent(),
            selectCtrl = parent.data(selectCtrlName) ||
              parent.parent().data(selectCtrlName); // in case we are in optgroup

        if (selectCtrl) {
          selectCtrl.registerOption(scope, element, attr, hasDynamicValueAttr, interpolateTextFn);
        }
      };
    }
  };
}];

/**
 * @ngdoc directive
 * @name ngRequired
 * @restrict A
 *
 * @description
 *
 * ngRequired adds the required {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
 * It is most often used for {@link input `input`} and {@link select `select`} controls, but can also be
 * applied to custom controls.
 *
 * The directive sets the `required` attribute on the element if the Angular expression inside
 * `ngRequired` evaluates to true. A special directive for setting `required` is necessary because we
 * cannot use interpolation inside `required`. See the {@link guide/interpolation interpolation guide}
 * for more info.
 *
 * The validator will set the `required` error key to true if the `required` attribute is set and
 * calling {@link ngModel.NgModelController#$isEmpty `NgModelController.$isEmpty`} with the
 * {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`} returns `true`. For example, the
 * `$isEmpty()` implementation for `input[text]` checks the length of the `$viewValue`. When developing
 * custom controls, `$isEmpty()` can be overwritten to account for a $viewValue that is not string-based.
 *
 * @example
 * <example name="ngRequiredDirective" module="ngRequiredExample">
 *   <file name="index.html">
 *     <script>
 *       angular.module('ngRequiredExample', [])
 *         .controller('ExampleController', ['$scope', function($scope) {
 *           $scope.required = true;
 *         }]);
 *     </script>
 *     <div ng-controller="ExampleController">
 *       <form name="form">
 *         <label for="required">Toggle required: </label>
 *         <input type="checkbox" ng-model="required" id="required" />
 *         <br>
 *         <label for="input">This input must be filled if `required` is true: </label>
 *         <input type="text" ng-model="model" id="input" name="input" ng-required="required" /><br>
 *         <hr>
 *         required error set? = <code>{{form.input.$error.required}}</code><br>
 *         model = <code>{{model}}</code>
 *       </form>
 *     </div>
 *   </file>
 *   <file name="protractor.js" type="protractor">
       var required = element(by.binding('form.input.$error.required'));
       var model = element(by.binding('model'));
       var input = element(by.id('input'));

       it('should set the required error', function() {
         expect(required.getText()).toContain('true');

         input.sendKeys('123');
         expect(required.getText()).not.toContain('true');
         expect(model.getText()).toContain('123');
       });
 *   </file>
 * </example>
 */
var requiredDirective = function() {
  return {
    restrict: 'A',
    require: '?ngModel',
    link: function(scope, elm, attr, ctrl) {
      if (!ctrl) return;
      attr.required = true; // force truthy in case we are on non input element

      ctrl.$validators.required = function(modelValue, viewValue) {
        return !attr.required || !ctrl.$isEmpty(viewValue);
      };

      attr.$observe('required', function() {
        ctrl.$validate();
      });
    }
  };
};

/**
 * @ngdoc directive
 * @name ngPattern
 *
 * @description
 *
 * ngPattern adds the pattern {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
 * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.
 *
 * The validator sets the `pattern` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}
 * does not match a RegExp which is obtained by evaluating the Angular expression given in the
 * `ngPattern` attribute value:
 * * If the expression evaluates to a RegExp object, then this is used directly.
 * * If the expression evaluates to a string, then it will be converted to a RegExp after wrapping it
 * in `^` and `$` characters. For instance, `"abc"` will be converted to `new RegExp('^abc$')`.
 *
 * <div class="alert alert-info">
 * **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
 * start at the index of the last search's match, thus not taking the whole input value into
 * account.
 * </div>
 *
 * <div class="alert alert-info">
 * **Note:** This directive is also added when the plain `pattern` attribute is used, with two
 * differences:
 * <ol>
 *   <li>
 *     `ngPattern` does not set the `pattern` attribute and therefore HTML5 constraint validation is
 *     not available.
 *   </li>
 *   <li>
 *     The `ngPattern` attribute must be an expression, while the `pattern` value must be
 *     interpolated.
 *   </li>
 * </ol>
 * </div>
 *
 * @example
 * <example name="ngPatternDirective" module="ngPatternExample">
 *   <file name="index.html">
 *     <script>
 *       angular.module('ngPatternExample', [])
 *         .controller('ExampleController', ['$scope', function($scope) {
 *           $scope.regex = '\\d+';
 *         }]);
 *     </script>
 *     <div ng-controller="ExampleController">
 *       <form name="form">
 *         <label for="regex">Set a pattern (regex string): </label>
 *         <input type="text" ng-model="regex" id="regex" />
 *         <br>
 *         <label for="input">This input is restricted by the current pattern: </label>
 *         <input type="text" ng-model="model" id="input" name="input" ng-pattern="regex" /><br>
 *         <hr>
 *         input valid? = <code>{{form.input.$valid}}</code><br>
 *         model = <code>{{model}}</code>
 *       </form>
 *     </div>
 *   </file>
 *   <file name="protractor.js" type="protractor">
       var model = element(by.binding('model'));
       var input = element(by.id('input'));

       it('should validate the input with the default pattern', function() {
         input.sendKeys('aaa');
         expect(model.getText()).not.toContain('aaa');

         input.clear().then(function() {
           input.sendKeys('123');
           expect(model.getText()).toContain('123');
         });
       });
 *   </file>
 * </example>
 */
var patternDirective = function() {
  return {
    restrict: 'A',
    require: '?ngModel',
    link: function(scope, elm, attr, ctrl) {
      if (!ctrl) return;

      var regexp, patternExp = attr.ngPattern || attr.pattern;
      attr.$observe('pattern', function(regex) {
        if (isString(regex) && regex.length > 0) {
          regex = new RegExp('^' + regex + '$');
        }

        if (regex && !regex.test) {
          throw minErr('ngPattern')('noregexp',
            'Expected {0} to be a RegExp but was {1}. Element: {2}', patternExp,
            regex, startingTag(elm));
        }

        regexp = regex || undefined;
        ctrl.$validate();
      });

      ctrl.$validators.pattern = function(modelValue, viewValue) {
        // HTML5 pattern constraint validates the input value, so we validate the viewValue
        return ctrl.$isEmpty(viewValue) || isUndefined(regexp) || regexp.test(viewValue);
      };
    }
  };
};

/**
 * @ngdoc directive
 * @name ngMaxlength
 *
 * @description
 *
 * ngMaxlength adds the maxlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
 * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.
 *
 * The validator sets the `maxlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}
 * is longer than the integer obtained by evaluating the Angular expression given in the
 * `ngMaxlength` attribute value.
 *
 * <div class="alert alert-info">
 * **Note:** This directive is also added when the plain `maxlength` attribute is used, with two
 * differences:
 * <ol>
 *   <li>
 *     `ngMaxlength` does not set the `maxlength` attribute and therefore HTML5 constraint
 *     validation is not available.
 *   </li>
 *   <li>
 *     The `ngMaxlength` attribute must be an expression, while the `maxlength` value must be
 *     interpolated.
 *   </li>
 * </ol>
 * </div>
 *
 * @example
 * <example name="ngMaxlengthDirective" module="ngMaxlengthExample">
 *   <file name="index.html">
 *     <script>
 *       angular.module('ngMaxlengthExample', [])
 *         .controller('ExampleController', ['$scope', function($scope) {
 *           $scope.maxlength = 5;
 *         }]);
 *     </script>
 *     <div ng-controller="ExampleController">
 *       <form name="form">
 *         <label for="maxlength">Set a maxlength: </label>
 *         <input type="number" ng-model="maxlength" id="maxlength" />
 *         <br>
 *         <label for="input">This input is restricted by the current maxlength: </label>
 *         <input type="text" ng-model="model" id="input" name="input" ng-maxlength="maxlength" /><br>
 *         <hr>
 *         input valid? = <code>{{form.input.$valid}}</code><br>
 *         model = <code>{{model}}</code>
 *       </form>
 *     </div>
 *   </file>
 *   <file name="protractor.js" type="protractor">
       var model = element(by.binding('model'));
       var input = element(by.id('input'));

       it('should validate the input with the default maxlength', function() {
         input.sendKeys('abcdef');
         expect(model.getText()).not.toContain('abcdef');

         input.clear().then(function() {
           input.sendKeys('abcde');
           expect(model.getText()).toContain('abcde');
         });
       });
 *   </file>
 * </example>
 */
var maxlengthDirective = function() {
  return {
    restrict: 'A',
    require: '?ngModel',
    link: function(scope, elm, attr, ctrl) {
      if (!ctrl) return;

      var maxlength = -1;
      attr.$observe('maxlength', function(value) {
        var intVal = toInt(value);
        maxlength = isNumberNaN(intVal) ? -1 : intVal;
        ctrl.$validate();
      });
      ctrl.$validators.maxlength = function(modelValue, viewValue) {
        return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxlength);
      };
    }
  };
};

/**
 * @ngdoc directive
 * @name ngMinlength
 *
 * @description
 *
 * ngMinlength adds the minlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
 * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.
 *
 * The validator sets the `minlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}
 * is shorter than the integer obtained by evaluating the Angular expression given in the
 * `ngMinlength` attribute value.
 *
 * <div class="alert alert-info">
 * **Note:** This directive is also added when the plain `minlength` attribute is used, with two
 * differences:
 * <ol>
 *   <li>
 *     `ngMinlength` does not set the `minlength` attribute and therefore HTML5 constraint
 *     validation is not available.
 *   </li>
 *   <li>
 *     The `ngMinlength` value must be an expression, while the `minlength` value must be
 *     interpolated.
 *   </li>
 * </ol>
 * </div>
 *
 * @example
 * <example name="ngMinlengthDirective" module="ngMinlengthExample">
 *   <file name="index.html">
 *     <script>
 *       angular.module('ngMinlengthExample', [])
 *         .controller('ExampleController', ['$scope', function($scope) {
 *           $scope.minlength = 3;
 *         }]);
 *     </script>
 *     <div ng-controller="ExampleController">
 *       <form name="form">
 *         <label for="minlength">Set a minlength: </label>
 *         <input type="number" ng-model="minlength" id="minlength" />
 *         <br>
 *         <label for="input">This input is restricted by the current minlength: </label>
 *         <input type="text" ng-model="model" id="input" name="input" ng-minlength="minlength" /><br>
 *         <hr>
 *         input valid? = <code>{{form.input.$valid}}</code><br>
 *         model = <code>{{model}}</code>
 *       </form>
 *     </div>
 *   </file>
 *   <file name="protractor.js" type="protractor">
       var model = element(by.binding('model'));
       var input = element(by.id('input'));

       it('should validate the input with the default minlength', function() {
         input.sendKeys('ab');
         expect(model.getText()).not.toContain('ab');

         input.sendKeys('abc');
         expect(model.getText()).toContain('abc');
       });
 *   </file>
 * </example>
 */
var minlengthDirective = function() {
  return {
    restrict: 'A',
    require: '?ngModel',
    link: function(scope, elm, attr, ctrl) {
      if (!ctrl) return;

      var minlength = 0;
      attr.$observe('minlength', function(value) {
        minlength = toInt(value) || 0;
        ctrl.$validate();
      });
      ctrl.$validators.minlength = function(modelValue, viewValue) {
        return ctrl.$isEmpty(viewValue) || viewValue.length >= minlength;
      };
    }
  };
};

if (window.angular.bootstrap) {
  //AngularJS is already loaded, so we can return here...
  if (window.console) {
    console.log('WARNING: Tried to load angular more than once.');
  }
  return;
}

//try to bind to jquery now so that one can write jqLite(document).ready()
//but we will rebind on bootstrap again.
bindJQuery();

publishExternalAPI(angular);

angular.module("ngLocale", [], ["$provide", function($provide) {
var PLURAL_CATEGORY = {ZERO: "zero", ONE: "one", TWO: "two", FEW: "few", MANY: "many", OTHER: "other"};
function getDecimals(n) {
  n = n + '';
  var i = n.indexOf('.');
  return (i == -1) ? 0 : n.length - i - 1;
}

function getVF(n, opt_precision) {
  var v = opt_precision;

  if (undefined === v) {
    v = Math.min(getDecimals(n), 3);
  }

  var base = Math.pow(10, v);
  var f = ((n * base) | 0) % base;
  return {v: v, f: f};
}

$provide.value("$locale", {
  "DATETIME_FORMATS": {
    "AMPMS": [
      "AM",
      "PM"
    ],
    "DAY": [
      "Sunday",
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday"
    ],
    "ERANAMES": [
      "Before Christ",
      "Anno Domini"
    ],
    "ERAS": [
      "BC",
      "AD"
    ],
    "FIRSTDAYOFWEEK": 6,
    "MONTH": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December"
    ],
    "SHORTDAY": [
      "Sun",
      "Mon",
      "Tue",
      "Wed",
      "Thu",
      "Fri",
      "Sat"
    ],
    "SHORTMONTH": [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec"
    ],
    "STANDALONEMONTH": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December"
    ],
    "WEEKENDRANGE": [
      5,
      6
    ],
    "fullDate": "EEEE, MMMM d, y",
    "longDate": "MMMM d, y",
    "medium": "MMM d, y h:mm:ss a",
    "mediumDate": "MMM d, y",
    "mediumTime": "h:mm:ss a",
    "short": "M/d/yy h:mm a",
    "shortDate": "M/d/yy",
    "shortTime": "h:mm a"
  },
  "NUMBER_FORMATS": {
    "CURRENCY_SYM": "$",
    "DECIMAL_SEP": ".",
    "GROUP_SEP": ",",
    "PATTERNS": [
      {
        "gSize": 3,
        "lgSize": 3,
        "maxFrac": 3,
        "minFrac": 0,
        "minInt": 1,
        "negPre": "-",
        "negSuf": "",
        "posPre": "",
        "posSuf": ""
      },
      {
        "gSize": 3,
        "lgSize": 3,
        "maxFrac": 2,
        "minFrac": 2,
        "minInt": 1,
        "negPre": "-\u00a4",
        "negSuf": "",
        "posPre": "\u00a4",
        "posSuf": ""
      }
    ]
  },
  "id": "en-us",
  "localeID": "en_US",
  "pluralCat": function(n, opt_precision) {  var i = n | 0;  var vf = getVF(n, opt_precision);  if (i == 1 && vf.v == 0) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}
});
}]);

  jqLite(window.document).ready(function() {
    angularInit(window.document, bootstrap);
  });

})(window);

!window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
},{}],6:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: affix.js v3.3.7
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)

    this.$target = $(this.options.target)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element     = $(element)
    this.affixed      = null
    this.unpin        = null
    this.pinnedOffset = null

    this.checkPosition()
  }

  Affix.VERSION  = '3.3.7'

  Affix.RESET    = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0,
    target: window
  }

  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop    = this.$target.scrollTop()
    var position     = this.$element.offset()
    var targetHeight = this.$target.height()

    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false

    if (this.affixed == 'bottom') {
      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'
      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'
    }

    var initializing   = this.affixed == null
    var colliderTop    = initializing ? scrollTop : position.top
    var colliderHeight = initializing ? targetHeight : height

    if (offsetTop != null && scrollTop <= offsetTop) return 'top'
    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'

    return false
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('affix')
    var scrollTop = this.$target.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var height       = this.$element.height()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom
    var scrollHeight = Math.max($(document).height(), $(document.body).height())

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css('top', '')

      var affixType = 'affix' + (affix ? '-' + affix : '')
      var e         = $.Event(affixType + '.bs.affix')

      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      this.affixed = affix
      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

      this.$element
        .removeClass(Affix.RESET)
        .addClass(affixType)
        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')
    }

    if (affix == 'bottom') {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom
      })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.affix

  $.fn.affix             = Plugin
  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom
      if (data.offsetTop    != null) data.offset.top    = data.offsetTop

      Plugin.call($spy, data)
    })
  })

}(jQuery);

},{}],7:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: alert.js v3.3.7
 * http://getbootstrap.com/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.VERSION = '3.3.7'

  Alert.TRANSITION_DURATION = 150

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = $(selector === '#' ? [] : selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.closest('.alert')
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one('bsTransitionEnd', removeElement)
        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.alert

  $.fn.alert             = Plugin
  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(jQuery);

},{}],8:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: button.js v3.3.7
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element  = $(element)
    this.options   = $.extend({}, Button.DEFAULTS, options)
    this.isLoading = false
  }

  Button.VERSION  = '3.3.7'

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state += 'Text'

    if (data.resetText == null) $el.data('resetText', $el[val]())

    // push to event loop to allow forms to submit
    setTimeout($.proxy(function () {
      $el[val](data[state] == null ? this.options[state] : data[state])

      if (state == 'loadingText') {
        this.isLoading = true
        $el.addClass(d).attr(d, d).prop(d, true)
      } else if (this.isLoading) {
        this.isLoading = false
        $el.removeClass(d).removeAttr(d).prop(d, false)
      }
    }, this), 0)
  }

  Button.prototype.toggle = function () {
    var changed = true
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
      if ($input.prop('type') == 'radio') {
        if ($input.prop('checked')) changed = false
        $parent.find('.active').removeClass('active')
        this.$element.addClass('active')
      } else if ($input.prop('type') == 'checkbox') {
        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false
        this.$element.toggleClass('active')
      }
      $input.prop('checked', this.$element.hasClass('active'))
      if (changed) $input.trigger('change')
    } else {
      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))
      this.$element.toggleClass('active')
    }
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  var old = $.fn.button

  $.fn.button             = Plugin
  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document)
    .on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      var $btn = $(e.target).closest('.btn')
      Plugin.call($btn, 'toggle')
      if (!($(e.target).is('input[type="radio"], input[type="checkbox"]'))) {
        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes
        e.preventDefault()
        // The target component still receive the focus
        if ($btn.is('input,button')) $btn.trigger('focus')
        else $btn.find('input:visible,button:visible').first().trigger('focus')
      }
    })
    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))
    })

}(jQuery);

},{}],9:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: carousel.js v3.3.7
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      = null
    this.sliding     = null
    this.interval    = null
    this.$active     = null
    this.$items      = null

    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))

    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element
      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))
      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
  }

  Carousel.VERSION  = '3.3.7'

  Carousel.TRANSITION_DURATION = 600

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true,
    keyboard: true
  }

  Carousel.prototype.keydown = function (e) {
    if (/input|textarea/i.test(e.target.tagName)) return
    switch (e.which) {
      case 37: this.prev(); break
      case 39: this.next(); break
      default: return
    }

    e.preventDefault()
  }

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children('.item')
    return this.$items.index(item || this.$active)
  }

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active)
    var willWrap = (direction == 'prev' && activeIndex === 0)
                || (direction == 'next' && activeIndex == (this.$items.length - 1))
    if (willWrap && !this.options.wrap) return active
    var delta = direction == 'prev' ? -1 : 1
    var itemIndex = (activeIndex + delta) % this.$items.length
    return this.$items.eq(itemIndex)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || this.getItemForDirection(type, $active)
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var that      = this

    if ($next.hasClass('active')) return (this.sliding = false)

    var relatedTarget = $next[0]
    var slideEvent = $.Event('slide.bs.carousel', {
      relatedTarget: relatedTarget,
      direction: direction
    })
    this.$element.trigger(slideEvent)
    if (slideEvent.isDefaultPrevented()) return

    this.sliding = true

    isCycling && this.pause()

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])
      $nextIndicator && $nextIndicator.addClass('active')
    }

    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, "slid"
    if ($.support.transition && this.$element.hasClass('slide')) {
      $next.addClass(type)
      $next[0].offsetWidth // force reflow
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one('bsTransitionEnd', function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () {
            that.$element.trigger(slidEvent)
          }, 0)
        })
        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)
    } else {
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger(slidEvent)
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  var old = $.fn.carousel

  $.fn.carousel             = Plugin
  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  var clickHandler = function (e) {
    var href
    var $this   = $(this)
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) // strip for ie7
    if (!$target.hasClass('carousel')) return
    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    Plugin.call($target, options)

    if (slideIndex) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  }

  $(document)
    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)
    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      Plugin.call($carousel, $carousel.data())
    })
  })

}(jQuery);

},{}],10:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: collapse.js v3.3.7
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+function ($) {
  'use strict';

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $('[data-toggle="collapse"][href="#' + element.id + '"],' +
                           '[data-toggle="collapse"][data-target="#' + element.id + '"]')
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = '3.3.7'

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var activesData
    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')

    if (actives && actives.length) {
      activesData = actives.data('bs.collapse')
      if (activesData && activesData.transitioning) return
    }

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives && actives.length) {
      Plugin.call(actives, 'hide')
      activesData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')[dimension](0)
      .attr('aria-expanded', true)

    this.$trigger
      .removeClass('collapsed')
      .attr('aria-expanded', true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('collapse in')[dimension]('')
      this.transitioning = 0
      this.$element
        .trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse in')
      .attr('aria-expanded', false)

    this.$trigger
      .addClass('collapsed')
      .attr('aria-expanded', false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass('collapsing')
        .addClass('collapse')
        .trigger('hidden.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }

  Collapse.prototype.getParent = function () {
    return $(this.options.parent)
      .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass('in')

    $element.attr('aria-expanded', isOpen)
    $trigger
      .toggleClass('collapsed', !isOpen)
      .attr('aria-expanded', isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr('data-target')
      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7

    return $(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false
      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
    var $this   = $(this)

    if (!$this.attr('data-target')) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()

    Plugin.call($target, option)
  })

}(jQuery);

},{}],11:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: dropdown.js v3.3.7
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle="dropdown"]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.VERSION = '3.3.7'

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }

  function clearMenus(e) {
    if (e && e.which === 3) return
    $(backdrop).remove()
    $(toggle).each(function () {
      var $this         = $(this)
      var $parent       = getParent($this)
      var relatedTarget = { relatedTarget: this }

      if (!$parent.hasClass('open')) return

      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return

      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this.attr('aria-expanded', 'false')
      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))
    })
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $(document.createElement('div'))
          .addClass('dropdown-backdrop')
          .insertAfter($(this))
          .on('click', clearMenus)
      }

      var relatedTarget = { relatedTarget: this }
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this
        .trigger('focus')
        .attr('aria-expanded', 'true')

      $parent
        .toggleClass('open')
        .trigger($.Event('shown.bs.dropdown', relatedTarget))
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive && e.which != 27 || isActive && e.which == 27) {
      if (e.which == 27) $parent.find(toggle).trigger('focus')
      return $this.trigger('click')
    }

    var desc = ' li:not(.disabled):visible a'
    var $items = $parent.find('.dropdown-menu' + desc)

    if (!$items.length) return

    var index = $items.index(e.target)

    if (e.which == 38 && index > 0)                 index--         // up
    if (e.which == 40 && index < $items.length - 1) index++         // down
    if (!~index)                                    index = 0

    $items.eq(index).trigger('focus')
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.dropdown

  $.fn.dropdown             = Plugin
  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)
    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)

}(jQuery);

},{}],12:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: modal.js v3.3.7
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options             = options
    this.$body               = $(document.body)
    this.$element            = $(element)
    this.$dialog             = this.$element.find('.modal-dialog')
    this.$backdrop           = null
    this.isShown             = null
    this.originalBodyPad     = null
    this.scrollbarWidth      = 0
    this.ignoreBackdropClick = false

    if (this.options.remote) {
      this.$element
        .find('.modal-content')
        .load(this.options.remote, $.proxy(function () {
          this.$element.trigger('loaded.bs.modal')
        }, this))
    }
  }

  Modal.VERSION  = '3.3.7'

  Modal.TRANSITION_DURATION = 300
  Modal.BACKDROP_TRANSITION_DURATION = 150

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.checkScrollbar()
    this.setScrollbar()
    this.$body.addClass('modal-open')

    this.escape()
    this.resize()

    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.$dialog.on('mousedown.dismiss.bs.modal', function () {
      that.$element.one('mouseup.dismiss.bs.modal', function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
      })
    })

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body) // don't move modals dom position
      }

      that.$element
        .show()
        .scrollTop(0)

      that.adjustDialog()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element.addClass('in')

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$dialog // wait for modal to slide in
          .one('bsTransitionEnd', function () {
            that.$element.trigger('focus').trigger(e)
          })
          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
        that.$element.trigger('focus').trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()
    this.resize()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .off('click.dismiss.bs.modal')
      .off('mouseup.dismiss.bs.modal')

    this.$dialog.off('mousedown.dismiss.bs.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one('bsTransitionEnd', $.proxy(this.hideModal, this))
        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (document !== e.target &&
            this.$element[0] !== e.target &&
            !this.$element.has(e.target).length) {
          this.$element.trigger('focus')
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keydown.dismiss.bs.modal')
    }
  }

  Modal.prototype.resize = function () {
    if (this.isShown) {
      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
    } else {
      $(window).off('resize.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.$body.removeClass('modal-open')
      that.resetAdjustments()
      that.resetScrollbar()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $(document.createElement('div'))
        .addClass('modal-backdrop ' + animate)
        .appendTo(this.$body)

      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
        if (this.ignoreBackdropClick) {
          this.ignoreBackdropClick = false
          return
        }
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus()
          : this.hide()
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one('bsTransitionEnd', callback)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      var callbackRemove = function () {
        that.removeBackdrop()
        callback && callback()
      }
      $.support.transition && this.$element.hasClass('fade') ?
        this.$backdrop
          .one('bsTransitionEnd', callbackRemove)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callbackRemove()

    } else if (callback) {
      callback()
    }
  }

  // these following methods are used to handle overflowing modals

  Modal.prototype.handleUpdate = function () {
    this.adjustDialog()
  }

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

    this.$element.css({
      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
    })
  }

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: '',
      paddingRight: ''
    })
  }

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth
    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect()
      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
    this.scrollbarWidth = this.measureScrollbar()
  }

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
    this.originalBodyPad = document.body.style.paddingRight || ''
    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
  }

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', this.originalBodyPad)
  }

  Modal.prototype.measureScrollbar = function () { // thx walsh
    var scrollDiv = document.createElement('div')
    scrollDiv.className = 'modal-scrollbar-measure'
    this.$body.append(scrollDiv)
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
    this.$body[0].removeChild(scrollDiv)
    return scrollbarWidth
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  var old = $.fn.modal

  $.fn.modal             = Plugin
  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) // strip for ie7
    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    if ($this.is('a')) e.preventDefault()

    $target.one('show.bs.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
      $target.one('hidden.bs.modal', function () {
        $this.is(':visible') && $this.trigger('focus')
      })
    })
    Plugin.call($target, option, this)
  })

}(jQuery);

},{}],13:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: popover.js v3.3.7
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.VERSION  = '3.3.7'

  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events
      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'
    ](content)

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.popover

  $.fn.popover             = Plugin
  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(jQuery);

},{}],14:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: scrollspy.js v3.3.7
 * http://getbootstrap.com/javascript/#scrollspy
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    this.$body          = $(document.body)
    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)
    this.selector       = (this.options.target || '') + ' .nav li > a'
    this.offsets        = []
    this.targets        = []
    this.activeTarget   = null
    this.scrollHeight   = 0

    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))
    this.refresh()
    this.process()
  }

  ScrollSpy.VERSION  = '3.3.7'

  ScrollSpy.DEFAULTS = {
    offset: 10
  }

  ScrollSpy.prototype.getScrollHeight = function () {
    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
  }

  ScrollSpy.prototype.refresh = function () {
    var that          = this
    var offsetMethod  = 'offset'
    var offsetBase    = 0

    this.offsets      = []
    this.targets      = []
    this.scrollHeight = this.getScrollHeight()

    if (!$.isWindow(this.$scrollElement[0])) {
      offsetMethod = 'position'
      offsetBase   = this.$scrollElement.scrollTop()
    }

    this.$body
      .find(this.selector)
      .map(function () {
        var $el   = $(this)
        var href  = $el.data('target') || $el.attr('href')
        var $href = /^#./.test(href) && $(href)

        return ($href
          && $href.length
          && $href.is(':visible')
          && [[$href[offsetMethod]().top + offsetBase, href]]) || null
      })
      .sort(function (a, b) { return a[0] - b[0] })
      .each(function () {
        that.offsets.push(this[0])
        that.targets.push(this[1])
      })
  }

  ScrollSpy.prototype.process = function () {
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset
    var scrollHeight = this.getScrollHeight()
    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()
    var offsets      = this.offsets
    var targets      = this.targets
    var activeTarget = this.activeTarget
    var i

    if (this.scrollHeight != scrollHeight) {
      this.refresh()
    }

    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)
    }

    if (activeTarget && scrollTop < offsets[0]) {
      this.activeTarget = null
      return this.clear()
    }

    for (i = offsets.length; i--;) {
      activeTarget != targets[i]
        && scrollTop >= offsets[i]
        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])
        && this.activate(targets[i])
    }
  }

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target

    this.clear()

    var selector = this.selector +
      '[data-target="' + target + '"],' +
      this.selector + '[href="' + target + '"]'

    var active = $(selector)
      .parents('li')
      .addClass('active')

    if (active.parent('.dropdown-menu').length) {
      active = active
        .closest('li.dropdown')
        .addClass('active')
    }

    active.trigger('activate.bs.scrollspy')
  }

  ScrollSpy.prototype.clear = function () {
    $(this.selector)
      .parentsUntil(this.options.target, '.active')
      .removeClass('active')
  }


  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.scrollspy')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.scrollspy

  $.fn.scrollspy             = Plugin
  $.fn.scrollspy.Constructor = ScrollSpy


  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


  // SCROLLSPY DATA-API
  // ==================

  $(window).on('load.bs.scrollspy.data-api', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      Plugin.call($spy, $spy.data())
    })
  })

}(jQuery);

},{}],15:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: tab.js v3.3.7
 * http://getbootstrap.com/javascript/#tabs
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    // jscs:disable requireDollarBeforejQueryAssignment
    this.element = $(element)
    // jscs:enable requireDollarBeforejQueryAssignment
  }

  Tab.VERSION = '3.3.7'

  Tab.TRANSITION_DURATION = 150

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.data('target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var $previous = $ul.find('.active:last a')
    var hideEvent = $.Event('hide.bs.tab', {
      relatedTarget: $this[0]
    })
    var showEvent = $.Event('show.bs.tab', {
      relatedTarget: $previous[0]
    })

    $previous.trigger(hideEvent)
    $this.trigger(showEvent)

    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return

    var $target = $(selector)

    this.activate($this.closest('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $previous.trigger({
        type: 'hidden.bs.tab',
        relatedTarget: $this[0]
      })
      $this.trigger({
        type: 'shown.bs.tab',
        relatedTarget: $previous[0]
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
          .removeClass('active')
        .end()
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', false)

      element
        .addClass('active')
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', true)

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu').length) {
        element
          .closest('li.dropdown')
            .addClass('active')
          .end()
          .find('[data-toggle="tab"]')
            .attr('aria-expanded', true)
      }

      callback && callback()
    }

    $active.length && transition ?
      $active
        .one('bsTransitionEnd', next)
        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tab

  $.fn.tab             = Plugin
  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  var clickHandler = function (e) {
    e.preventDefault()
    Plugin.call($(this), 'show')
  }

  $(document)
    .on('click.bs.tab.data-api', '[data-toggle="tab"]', clickHandler)
    .on('click.bs.tab.data-api', '[data-toggle="pill"]', clickHandler)

}(jQuery);

},{}],16:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: tooltip.js v3.3.7
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       = null
    this.options    = null
    this.enabled    = null
    this.timeout    = null
    this.hoverState = null
    this.$element   = null
    this.inState    = null

    this.init('tooltip', element, options)
  }

  Tooltip.VERSION  = '3.3.7'

  Tooltip.TRANSITION_DURATION = 150

  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: 'body',
      padding: 0
    }
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled   = true
    this.type      = type
    this.$element  = $(element)
    this.options   = this.getOptions(options)
    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))
    this.inState   = { click: false, hover: false, focus: false }

    if (this.$element[0] instanceof document.constructor && !this.options.selector) {
      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')
    }

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true
    }

    if (self.tip().hasClass('in') || self.hoverState == 'in') {
      self.hoverState = 'in'
      return
    }

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) {
      if (this.inState[key]) return true
    }

    return false
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false
    }

    if (self.isInStateTrue()) return

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])
      if (e.isDefaultPrevented() || !inDom) return
      var that = this

      var $tip = this.tip()

      var tipId = this.getUID(this.type)

      this.setContent()
      $tip.attr('id', tipId)
      this.$element.attr('aria-describedby', tipId)

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)
        .data('bs.' + this.type, this)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)
      this.$element.trigger('inserted.bs.' + this.type)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var orgPlacement = placement
        var viewportDim = this.getPosition(this.$viewport)

        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :
                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :
                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :
                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)

      var complete = function () {
        var prevHoverState = that.hoverState
        that.$element.trigger('shown.bs.' + that.type)
        that.hoverState = null

        if (prevHoverState == 'out') that.leave(that)
      }

      $.support.transition && this.$tip.hasClass('fade') ?
        $tip
          .one('bsTransitionEnd', complete)
          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
        complete()
    }
  }

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  += marginTop
    offset.left += marginLeft

    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        })
      }
    }, offset), 0)

    $tip.addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      offset.top = offset.top + height - actualHeight
    }

    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)

    if (delta.left) offset.left += delta.left
    else offset.top += delta.top

    var isVertical          = /top|bottom/.test(placement)
    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight
    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'

    $tip.offset(offset)
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)
  }

  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow()
      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')
      .css(isVertical ? 'top' : 'left', '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function (callback) {
    var that = this
    var $tip = $(this.$tip)
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.
        that.$element
          .removeAttr('aria-describedby')
          .trigger('hidden.bs.' + that.type)
      }
      callback && callback()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && $tip.hasClass('fade') ?
      $tip
        .one('bsTransitionEnd', complete)
        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
      complete()

    this.hoverState = null

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function ($element) {
    $element   = $element || this.$element

    var el     = $element[0]
    var isBody = el.tagName == 'BODY'

    var elRect    = el.getBoundingClientRect()
    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })
    }
    var isSvg = window.SVGElement && el instanceof window.SVGElement
    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
    // See https://github.com/twbs/bootstrap/issues/20280
    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())
    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }
    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null

    return $.extend({}, elRect, scroll, outerDims, elOffset)
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }

  }

  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = { top: 0, left: 0 }
    if (!this.$viewport) return delta

    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0
    var viewportDimensions = this.getPosition(this.$viewport)

    if (/right|left/.test(placement)) {
      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll
      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight
      if (topEdgeOffset < viewportDimensions.top) { // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset
      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow
        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset
      }
    } else {
      var leftEdgeOffset  = pos.left - viewportPadding
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth
      if (leftEdgeOffset < viewportDimensions.left) { // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset
      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow
        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset
      }
    }

    return delta
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.getUID = function (prefix) {
    do prefix += ~~(Math.random() * 1000000)
    while (document.getElementById(prefix))
    return prefix
  }

  Tooltip.prototype.tip = function () {
    if (!this.$tip) {
      this.$tip = $(this.options.template)
      if (this.$tip.length != 1) {
        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')
      }
    }
    return this.$tip
  }

  Tooltip.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = this
    if (e) {
      self = $(e.currentTarget).data('bs.' + this.type)
      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions())
        $(e.currentTarget).data('bs.' + this.type, self)
      }
    }

    if (e) {
      self.inState.click = !self.inState.click
      if (self.isInStateTrue()) self.enter(self)
      else self.leave(self)
    } else {
      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
    }
  }

  Tooltip.prototype.destroy = function () {
    var that = this
    clearTimeout(this.timeout)
    this.hide(function () {
      that.$element.off('.' + that.type).removeData('bs.' + that.type)
      if (that.$tip) {
        that.$tip.detach()
      }
      that.$tip = null
      that.$arrow = null
      that.$viewport = null
      that.$element = null
    })
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tooltip

  $.fn.tooltip             = Plugin
  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

},{}],17:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: transition.js v3.3.7
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one('bsTransitionEnd', function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);

},{}],18:[function(require,module,exports){
// Source: .tmp/udb3-angular.modules.js
(function () {
'use strict';

/**
 * @ngdoc module
 * @name udb.core
 * @description
 * The udb core module
 */
angular
    .module('udb.core', [
        'ngCookies',
        'ngSanitize',
        'ui.bootstrap',
        'ui.select',
        'udb.config',
        'udb.search',
        'udb.entry',
        'udb.event-form',
        'udb.offer-translate',
        'udb.export',
        'udb.event-detail',
        'udb.place-detail',
        'udb.dashboard',
        'udb.saved-searches',
        'udb.media',
        'udb.management',
        'udb.uitpas',
        'udb.cultuurkuur',
        'btford.socket-io',
        'pascalprecht.translate',
        'angular.filter',
    ])
    .constant('Levenshtein', window.Levenshtein);

'use strict';

/**
 * @ngdoc module
 * @name udb.router
 * @description
 * The udb routing module
 */
angular
  .module('udb.router', [
    'udb.core'
  ]);

angular.module('udb.config', [])

.constant('appConfig', {})

.constant('taxonomyTerms', [{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.0.0.0',label:'Plattelandsbeleving',labelnl:'Plattelandsbeleving',labelfr:'Expérience campagnarde',labelen:'countryside Experience',labelde:'Land Experience',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.1.0',label:'Buurtraad',labelnl:'Buurtraad',labelfr:'Conseil du quartier',labelen:'Neighbourhood Council',labelde:'District Council',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.2.0',label:'Communicatieraad',labelnl:'Communicatieraad',labelfr:'Conseil des communications',labelen:'Communications Council',labelde:'Rat für Kommunikation',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.3.0',label:'Fietsregistratie',labelnl:'Fietsregistratie',labelfr:'Enregistrement des vélos',labelen:'Bicycle Registration',labelde:'Fahrrad-Registrierung',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.4.0',label:'Gemeenteraad',labelnl:'Gemeenteraad',labelfr:'Conseil municipal',labelen:'Town Council',labelde:'Stadtrat',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.5.0',label:'Gezondheidsraad',labelnl:'Gezondheidsraad',labelfr:'Conseil de la santé',labelen:'Health Council',labelde:'Gesundheit',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.6.0',label:'Hoorzitting',labelnl:'Hoorzitting',labelfr:'Audition',labelen:'hearing',labelde:'Hören',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.7.0',label:'Infovergadering',labelnl:'Infovergadering',labelfr:'Séance d\'information',labelen:'Information Meeting',labelde:'Info Meeting',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.8.0',label:'Jumelage activiteit',labelnl:'Jumelage activiteit',labelfr:'Activité de jumelage',labelen:'Town-twinning activity',labelde:'Twinning-Aktivität',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.9.0',label:'Middenstandsraad',labelnl:'Middenstandsraad',labelfr:'Conseil des classes moyennes',labelen:'Middle Board',labelde:'Mittleren Brett',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.10.0',label:'Mondiale raad',labelnl:'Mondiale raad',labelfr:'Conseil mondial',labelen:'Global Board',labelde:'Global Board',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.11.0',label:'OCMW raad',labelnl:'OCMW raad',labelfr:'Conseil du CPAS',labelen:'Public Centre for Social Welfare',labelde:'CPAS Bord',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.12.0',label:'Ontvangst',labelnl:'Ontvangst',labelfr:'Réception / acceuil',labelen:'Reception',labelde:'Empfang',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.13.0',label:'Plechtigheid',labelnl:'Plechtigheid',labelfr:'Cérémonie',labelen:'Ceremony',labelde:'Zeremonie',show:'true',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'municipal',enabled:'false',id:'0.50.15.14.0',label:'Seniorenraad',labelnl:'Seniorenraad',labelfr:'Conseil du troisième âge',labelen:'Seniors Council',labelde:'Senioren Rat',show:'true',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.1.0.0',label:'Verblijfslocaties',labelnl:'Verblijfslocaties',labelfr:'Lieux de séjours',labelen:'stay Locations',labelde:'Bleiben Standorte',parentid:'1.60.0.0.0',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.1.1.0',label:'Verblijf op een actieve hoeve',labelnl:'Verblijf op een actieve hoeve',labelfr:'Séjour dans une ferme active',labelen:'Stay on an active farm',labelde:'Bleiben Sie auf einem aktiven Bauernhof',parentid:'1.60.1.0.0',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.1.2.0',label:'Verblijf op het platteland',labelnl:'Verblijf op het platteland',labelfr:'Séjour en campagne',labelen:'Stay in the countryside',labelde:'Bleiben Sie auf dem Land',parentid:'1.60.1.0.0',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.1.3.0',label:'Verblijf in het dorp',labelnl:'Verblijf in het dorp',labelfr:'Séjour Villageois',labelen:'Stay in the village',labelde:'Bleiben Sie auf dem Dorf',parentid:'1.60.1.0.0',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.2.0.0',label:'Bezoekerslocatie/bezienswaardigheid',labelnl:'Bezoekerslocatie/bezienswaardigheid',labelfr:'Lieu visiteurs / point de repère',labelen:'Visitors Location / landmark',labelde:'Besucher Lage / Wahrzeichen',parentid:'1.60.0.0.0',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.2.1.0',label:'Kijkboerderij/bezoekersboerderij',labelnl:'Kijkboerderij/bezoekersboerderij',labelfr:'Ferme d\'observation / ferme visiteurs',labelen:'Petting Farm',labelde:'Schauen Sie auf dem Bauernhof / Farm Besucher',parentid:'1.60.2.0.0',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.2.2.0',label:'Museum rond landbouw en platteland',labelnl:'Museum rond landbouw en platteland',labelfr:'Musée de l\'agriculture et campagne',labelen:'Museum of agriculture and rural life',labelde:'Museum für Landwirtschaft und ländliche',parentid:'1.60.2.0.0',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.2.3.0',label:'Educatief centrum rond landbouw en platteland',labelnl:'Educatief centrum rond landbouw en platteland',labelfr:'Centre éducatif d\'agriculture et campagne',labelen:'Education center for agriculture and the countryside',labelde:'Pädagogische Zentrum rund um Landwirtschaft und der ländlichen',parentid:'1.60.2.0.0',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.2.4.0',label:'Verkoopspunt hoeve- en streekproducten',labelnl:'Verkoopspunt hoeve- en streekproducten',labelfr:'Ferme de vente de produits fermiers et régionaux',labelen:'Point of sale for farm and regional products',labelde:'Point of sale Betriebe und Regionen',parentid:'1.60.2.0.0',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.2.5.0',label:'Open tuin',labelnl:'Open tuin',labelfr:'Jardin ouvert',labelen:'Open garden',labelde:'Offener Garten',parentid:'1.60.2.0.0',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.2.6.0',label:'Andere bezienswaardigheden',labelnl:'Andere bezienswaardigheden',labelfr:'Autres curiosités',labelen:'Other attractions',labelde:'Weitere Attraktionen',parentid:'1.60.2.0.0',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.2.7.0',label:'Hoeve- en streekproducenten',labelnl:'Hoeve- en streekproducenten',labelfr:'Produits fermiers et régionaux',labelen:'Farm and regional producers',labelde:'Bauernhof und regionale Produzenten',parentid:'1.60.0.0.0',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.3.0.0',label:'Routes',labelnl:'Routes',labelfr:'Routes',labelen:'Routes',labelde:'Routen',parentid:'1.60.0.0.0',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.4.0.0',label:'Arrangementen',labelnl:'Arrangementen',labelfr:'Dispositions',labelen:'Arrangements',labelde:'Arrangements',parentid:'1.60.0.0.0',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.4.1.0',label:'Plattelandsklas',labelnl:'Plattelandsklas',labelfr:'Classe campagnarde',labelen:'Countryside Classroom',labelde:'Land Klassenzimmer',parentid:'1.60.4.0.0',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.4.2.0',label:'Schoolreis',labelnl:'Schoolreis',labelfr:'Voyage scolaire',labelen:'School Trip',labelde:'Schule',parentid:'1.60.4.0.0',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.4.3.0',label:'Groepsuitstap vereniging',labelnl:'Groepsuitstap vereniging',labelfr:'Excursion en groupe',labelen:'Group Excursion',labelde:'Gruppenausflug Verein',parentid:'1.60.4.0.0',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.4.4.0',label:'Familie-uitstap',labelnl:'Familie-uitstap',labelfr:'Excursion familiale',labelen:'Family Trip',labelde:'Familienausflug',parentid:'1.60.4.0.0',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.4.5.0',label:'Bedrijfsuitstap',labelnl:'Bedrijfsuitstap',labelfr:'Excursion d\'entreprise',labelen:'Company Trip',labelde:'Betriebsausflug',parentid:'1.60.4.0.0',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.4.6.0',label:'Individuele activiteit',labelnl:'Individuele activiteit',labelfr:'Activité individuelle',labelen:'Individual activity',labelde:'Individuelle Grund für Aktivität',parentid:'1.60.4.0.0',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'IPE',enabled:'false',id:'1.60.4.7.0',label:'Andere arrangementen',labelnl:'Andere arrangementen',labelfr:'Autres dispositions',labelen:'Other arrangements / Other deals',labelde:'Andere Pakete',parentid:'1.60.4.0.0',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.50.4.0.0',label:'Concert',labelnl:'Concert',labelfr:'Concert',labelen:'Concert',labelde:'Konzert',parentid:'0.100.0.0.0',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'0.52.0.0.0',label:'Circus',labelnl:'Circus',labelfr:'Cirque',labelen:'Circus',labelde:'Zirkus',show:'true',sort:'73'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.54.0.0.0',label:'Dansvoorstelling',labelnl:'Dansvoorstelling',labelfr:'Spectacle de danse',labelen:'Dance performance',labelde:'Tanz-Performance',parentid:'0.100.0.0.0',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.5.0.0.0',label:'Festival',labelnl:'Festival',labelfr:'Festival',labelen:'Festival',labelde:'Festival',parentid:'0.100.0.0.0',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.50.6.0.0',label:'Film',labelnl:'Film',labelfr:'Cinéma',labelen:'Film',labelde:'Film',parentid:'0.100.0.0.0',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.3.2.0.0',label:'Lezing of congres',labelnl:'Lezing of congres',labelfr:'Conférence ou congrès',labelen:'Lecture or conference',labelde:'Vortrag oder Gespräch',parentid:'0.100.0.0.0',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.55.0.0.0',label:'Theatervoorstelling',labelnl:'Theatervoorstelling',labelfr:'Théâtre',labelen:'Theatre',labelde:'Theater',parentid:'0.100.0.0.0',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'false',id:'0.56.0.0.0',label:'Toeristisch evenement',labelnl:'Toeristisch evenement',labelfr:'Événement touristique',labelen:'Tourism events',labelde:'Touristische Veranstaltung',parentid:'0.100.0.0.0',show:'false',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.19.0.0.0',label:'Sportwedstrijd bekijken',labelnl:'Sportwedstrijd bekijken',labelfr:'Assister à une compétition sportive',labelen:'Sports Viewing',labelde:'Sport Antzeigen',parentid:'0.100.0.0.0',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.37.0.0.0',label:'Markt of braderie',labelnl:'Markt of braderie',labelfr:'Marché ou braderie',labelen:'Market or bazaar',labelde:'Markt oder Messe',parentid:'0.100.2.0.0',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.15.0.0.0',label:'Natuurgebied of park',labelnl:'Natuurgebied of park',labelfr:'Zone naturel ou parc',labelen:'Landscape or nature reserve',labelde:'Landschaft oder Natur',parentid:'0.100.2.0.0',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.14.0.0.0',label:'Monument',labelnl:'Monument',labelfr:'Monument',labelen:'Monument',labelde:'Denkmal',parentid:'0.100.2.0.0',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.12.0.0.0',label:'Opendeurdag',labelnl:'Opendeurdag',labelfr:'Journée portes ouvertes',labelen:'Open house',labelde:'Tag der offenen Tür',parentid:'0.100.2.0.0',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.16.0.0.0',label:'Park of tuin',labelnl:'Park of tuin',labelfr:'Jardin ou parc',labelen:'Garden or park',labelde:'Park oder Garten',parentid:'0.100.2.0.0',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.6.0.0.0',label:'Beurs',labelnl:'Beurs',labelfr:'Foire / exposition',labelen:'Fair',labelde:'Messe',parentid:'0.100.2.0.0',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.0.0.0.0',label:'Tentoonstelling',labelnl:'Tentoonstelling',labelfr:'Exposition',labelen:'Exhibition',labelde:'Ausstellung',parentid:'0.100.2.0.0',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.7.0.0.0',label:'Begeleide uitstap of rondleiding',labelnl:'Begeleide uitstap of rondleiding',labelfr:'Tour ou excursion guidé',labelen:'Guided tour',labelde:'Geführte Wanderung oder Tour',parentid:'0.100.1.0.0',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.3.1.0.0',label:'Cursus of workshop',labelnl:'Cursus of workshop',labelfr:'Cours ou atelier',labelen:'Course or workshop',labelde:'Kurs oder Workshop',parentid:'0.100.1.0.0',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'false',id:'0.3.3.0.0',label:'Congres of studiedag',labelnl:'Congres of studiedag',labelfr:'Congrès ou journée d\'étude',labelen:'Congress, conference',labelde:'Konferenz oder Seminar',parentid:'0.100.1.0.0',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.57.0.0.0',label:'Kamp of vakantie',labelnl:'Kamp of vakantie',labelfr:'Camp de vacance',labelen:'Camping',labelde:'Camp oder Urlaub',parentid:'0.100.1.0.0',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.28.0.0.0',label:'Kermis of feestelijkheid',labelnl:'Kermis of feestelijkheid',labelfr:'Foire ou festivité',labelen:'Fair or celebration',labelde:'Karneval oder Festlichkeit',parentid:'0.100.1.0.0',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.53.0.0.0',label:'Recreatiedomein of centrum',labelnl:'Recreatiedomein of centrum',labelfr:'Centre de loisirs ou centre de récréation',labelen:'Recreation center',labelde:'Recreation Area oder ûcentrum',parentid:'0.100.2.0.0',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.17.0.0.0',label:'Fiets- of wandelroute',labelnl:'Fiets- of wandelroute',labelfr:'Randonnée pédestre ou cycliste',labelen:'Cycling or hiking tour',labelde:'Route',parentid:'0.100.1.0.0',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.49.0.0.0',label:'Party of fuif',labelnl:'Party of fuif',labelfr:'Soirée',labelen:'Party or nightlife',labelde:'Ausgehen',parentid:'0.100.1.0.0',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'1.50.0.0.0',label:'Eten en drinken',labelnl:'Eten en drinken',labelfr:'Manger et boire',labelen:'Food and drinks',labelde:'Essen und Trinken',parentid:'0.100.1.0.0',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.50.21.0.0',label:'Spel of quiz',labelnl:'Spel of quiz',labelfr:'Jeu ou quiz',labelen:'Game or quiz',labelde:'Spiel oder Quiz',parentid:'0.100.1.0.0',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.41.0.0.0',label:'Thema of pretpark',labelnl:'Thema of pretpark',labelfr:'Parc à thème ou parc d\'attractions',labelen:'Theme park',labelde:'Unterhaltungspark',parentid:'0.100.1.0.0',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.59.0.0.0',label:'Sportactiviteit',labelnl:'Sportactiviteit',labelfr:'Activité sportive',labelen:'Sports activity',labelde:'Geben Wettbewerb',parentid:'0.100.1.0.0',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.17.0.0.0',label:'Antiek en brocante',labelnl:'Antiek en brocante',labelfr:'Antiquités ou brocantes',labelen:'Antiques',labelde:'Antik-und Flohmarkt',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.2.1.0.0',label:'Architectuur',labelnl:'Architectuur',labelfr:'Architecture',labelen:'Architecture',labelde:'Architektur',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.1.0.0.0',label:'Audiovisuele kunst',labelnl:'Audiovisuele kunst',labelfr:'Arts audiovisuels',labelen:'Audiovisual arts',labelde:'Audiovisuelle Kunst',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.0.2.0.0',label:'Beeldhouwkunst',labelnl:'Beeldhouwkunst',labelfr:'Sculpture',labelen:'Sculpture',labelde:'Skulptur',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.0.6.0.0',label:'Fotografie',labelnl:'Fotografie',labelfr:'Photographie',labelen:'Photography',labelde:'Fotografie',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.0.4.0.0',label:'Grafiek',labelnl:'Grafiek',labelfr:'Art grafique',labelen:'Graphics',labelde:'Grafik',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.0.3.0.0',label:'Installatiekunst',labelnl:'Installatiekunst',labelfr:'Art d\'installation',labelen:'Installation art',labelde:'Installation Art',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.0.1.0.0',label:'Schilderkunst',labelnl:'Schilderkunst',labelfr:'Peinture',labelen:'Painting',labelde:'Malerei',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.0.5.0.0',label:'Decoratieve kunst',labelnl:'Decoratieve kunst',labelfr:'Arts décoratives',labelen:'Decorative arts',labelde:'Angewandte Kunst',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.2.2.0.0',label:'Design',labelnl:'Design',labelfr:'Design',labelen:'Design',labelde:'Design',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.49.0.0.0',label:'Mode',labelnl:'Mode',labelfr:'Mode',labelen:'Fashion',labelde:'Mode',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.9.1.0.0',label:'Ballet en klassieke dans',labelnl:'Ballet en klassieke dans',labelfr:'Ballet et danse classique',labelen:'Classical dance and ballet',labelde:'Ballett und klassischer Tanz',show:'true',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.9.3.0.0',label:'Volksdans en werelddans',labelnl:'Volksdans en werelddans',labelfr:'Danse folklorique et mondiale',labelen:'Folk dance',labelde:'Folk-und World Dance',show:'true',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.9.5.0.0',label:'Stijl en salondansen',labelnl:'Stijl en salondansen',labelfr:'Danse de salon et stylée',labelen:'Ballroom dancing',labelde:'Stil-und Gesellschaftstanz',show:'true',sort:'15'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.9.2.0.0',label:'Moderne dans',labelnl:'Moderne dans',labelfr:'Danse moderne',labelen:'Mordern dance',labelde:'Modern Dance',show:'true',sort:'16'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.40.0.0.0',label:'Erfgoed',labelnl:'Erfgoed',labelfr:'Patrimoine',labelen:'Heritage',labelde:'Kulturerben',show:'true',sort:'17'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.2.0.0',label:'Actie en avontuur',labelnl:'Actie en avontuur',labelfr:'Action et aventure',labelen:'Action and adventure',labelde:'Action und Abenteuer',show:'true',sort:'18'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.12.0.0',label:'Animatie en kinderfilms',labelnl:'Animatie en kinderfilms',labelfr:'Films animés et films pour enfants',labelen:'Animation and children\'s films',labelde:'Animations-und Kinderfilme',show:'true',sort:'19'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.1.0.0',label:'Documentaires en reportages',labelnl:'Documentaires en reportages',labelfr:'Documentaires et reportages',labelen:'Documentary',labelde:'Dokumentationen und Reportagen',show:'true',sort:'20'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.6.0.0',label:'Griezelfilm of horror',labelnl:'Griezelfilm of horror',labelfr:'Films d\'épouvantes ou orreurs',labelen:'Horror',labelde:'Horror',show:'true',sort:'21'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.8.0.0',label:'Historische film',labelnl:'Historische film',labelfr:'Films historiques',labelen:'Historical film',labelde:'Historische Film',show:'true',sort:'22'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.3.0.0',label:'Komedie',labelnl:'Komedie',labelfr:'Comédie',labelen:'Comedy',labelde:'Komödie',show:'true',sort:'23'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.13.0.0',label:'Kortfilm',labelnl:'Kortfilm',labelfr:'Court métrage',labelen:'Short film',labelde:'Kurzfilm',show:'true',sort:'24'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.10.0.0',label:'Filmmusical',labelnl:'Filmmusical',labelfr:'Comédie musicale',labelen:'Musical',labelde:'Musical',show:'true',sort:'25'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.4.0.0',label:'Drama',labelnl:'Drama',labelfr:'Films dramatiques',labelen:'Drama',labelde:'Drama',show:'true',sort:'26'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.7.0.0',label:'Science fiction',labelnl:'Science fiction',labelfr:'Science fiction',labelen:'Science fiction',labelde:'Science-Fiction',show:'true',sort:'27'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.11.0.0',label:'Cinefiel',labelnl:'Cinefiel',labelfr:'Cinéphile',labelen:'Independent',labelde:'Cinephile',show:'true',sort:'28'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.11.0.0.0',label:'Geschiedenis',labelnl:'Geschiedenis',labelfr:'Histoire',labelen:'History',labelde:'Geschichte',show:'true',sort:'31'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.62.0.0.0',label:'Gezondheid en wellness',labelnl:'Gezondheid en wellness',labelfr:'Santé et bien-être',labelen:'Health and wellness',labelde:'Gesundheit und Wellness',show:'true',sort:'32'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.63.0.0.0',label:'Landbouw en platteland',labelnl:'Landbouw en platteland',labelfr:'Agriculture et campagne',labelen:'Agriculture',labelde:'Landwirtschaft ',show:'true',sort:'33'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.10.0.0.0',label:'Literatuur',labelnl:'Literatuur',labelfr:'Litérature',labelen:'Literature',labelde:'Literatur',show:'true',sort:'35'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.10.5.0.0',label:'Poezie',labelnl:'Poezie',labelfr:'Poésie',labelen:'Poetry',labelde:'Poesie',show:'true',sort:'36'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.10.11.0.0',label:'Fictie',labelnl:'Fictie',labelfr:'Fiction',labelen:'Fiction',labelde:'Fiktion',show:'true',sort:'37'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.10.12.0.0',label:'Non fictie',labelnl:'Non fictie',labelfr:'Non fiction',labelen:'Non fiction',labelde:'Sachbücher',show:'true',sort:'38'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.10.8.0.0',label:'Strips',labelnl:'Strips',labelfr:'Bandes dessinés',labelen:'Comic books',labelde:'Comics',show:'true',sort:'39'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.64.0.0.0',label:'Milieu en natuur',labelnl:'Milieu en natuur',labelfr:'Environnement et nature',labelen:'Environment and nature',labelde:'Umwelt und Natur',show:'true',sort:'34'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.8.1.0.0',label:'Klassieke muziek',labelnl:'Klassieke muziek',labelfr:'Musique classique',labelen:'Classical music',labelde:'Klassische Musik',show:'true',sort:'40'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.8.2.0.0',label:'Jazz en blues',labelnl:'Jazz en blues',labelfr:'Jazz et blues',labelen:'Jazz and blues',labelde:'Jazz und Blues',show:'true',sort:'41'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.8.3.1.0',label:'Pop en rock',labelnl:'Pop en rock',labelfr:'Pop et rock',labelen:'Pop and rock',labelde:'Pop und Rock',show:'true',sort:'42'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.8.3.2.0',label:'Hip hop, rnb en rap',labelnl:'Hip hop, rnb en rap',labelfr:'Hip hop, rnb et rap',labelen:'Hip hop, rnb and rap',labelde:'Hip-Hop, R und B und Rap',show:'true',sort:'43'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.8.3.3.0',label:'Dance',labelnl:'Dance',labelfr:'Dance',labelen:'Dance',labelde:'Tanzen',show:'true',sort:'44'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.8.4.0.0',label:'Folk en wereldmuziek',labelnl:'Folk en wereldmuziek',labelfr:'Musique folklorique et mondiale',labelen:'Folk and world music',labelde:'Folk und World',show:'true',sort:'45'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.8.3.5.0',label:'Amusementsmuziek',labelnl:'Amusementsmuziek',labelfr:'Cabaret',labelen:'Cabaret music',labelde:'Schlager',show:'true',sort:'46'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.52.0.0.0',label:'Politiek en maatschappij',labelnl:'Politiek en maatschappij',labelfr:'Politique et société',labelen:'Politics and society',labelde:'Politik und Gesellschaft',show:'true',sort:'47'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.42.0.0.0',label:'Creativiteit',labelnl:'Creativiteit',labelfr:'Créativité',labelen:'Creativity',labelde:'Kreativität',show:'true',sort:'48'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.21.0.0.0',label:'Computer en techniek',labelnl:'Computer en techniek',labelfr:'Ordinateurs et technologie',labelen:'Computer and technology',labelde:'Computer-und Technik',show:'true',sort:'49'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.37.0.0.0',label:'Opvoeding',labelnl:'Opvoeding',labelfr:'Éducation',labelen:'Education',labelde:'Bildung',show:'true',sort:'50'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.61.0.0.0',label:'Persoon en relaties',labelnl:'Persoon en relaties',labelfr:'Hommes et relations',labelen:'People and society',labelde:'Person und Gesellschaft',show:'true',sort:'51'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.43.0.0.0',label:'Interculturele vorming',labelnl:'Interculturele vorming',labelfr:'Formation interculturelle',labelen:'Cross-cultural education',labelde:'Interkulturelle Erziehung',show:'true',sort:'52'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.41.0.0.0',label:'Kunst en kunsteducatie',labelnl:'Kunst en kunsteducatie',labelfr:'Arts et formation artistique',labelen:'Arts education',labelde:'Kunst und Kunsterziehung',show:'true',sort:'53'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.51.13.0.0',label:'Bal en racketsport',labelnl:'Bal en racketsport',labelfr:'Sports au ballons et raquettes',labelen:'Ball and racket sports',labelde:'Ball und Schläger',show:'true',sort:'56'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.51.14.0.0',label:'Atletiek, wandelen en fietsen',labelnl:'Atletiek, wandelen en fietsen',labelfr:'Athlétisme, marche et cyclisme',labelen:'Athletics, running and cycling',labelde:'Leichtathletik, Wandern und Radfahren',show:'true',sort:'57'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.51.3.0.0',label:'Zwemmen en watersport',labelnl:'Zwemmen en watersport',labelfr:'Natation et sports nautiques',labelen:'Swimming and water sports',labelde:'Schwimmen und Wassersport',show:'true',sort:'58'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.51.6.0.0',label:'Fitness, gymnastiek, dans en vechtsport',labelnl:'Fitness, gymnastiek, dans en vechtsport',labelfr:'Fitness, gymnastique, danse et arts martiaux',labelen:'Fitness, gymnastics, dance and martial arts',labelde:'Fitness, Tanz und Kampfkunst',show:'true',sort:'59'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.51.11.0.0',label:'Outdoor en adventure',labelnl:'Outdoor en adventure',labelfr:'Plein air et aventure',labelen:'Outdoor and adventure',labelde:'Outdoor und Adventure',show:'true',sort:'60'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.58.8.0.0',label:'Lucht en motorsport',labelnl:'Lucht en motorsport',labelfr:'Sports aero et moteurs',labelen:'Air and motorsports',labelde:'Luft-und Motorsport',show:'true',sort:'61'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.51.10.0.0',label:'Volkssporten',labelnl:'Volkssporten',labelfr:'Sports folkloriques',labelen:'Folklore sports',labelde:'Sport Menschen',show:'true',sort:'62'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.51.12.0.0',label:'Omnisport en andere',labelnl:'Omnisport en andere',labelfr:'Omnisports et autres',labelen:'Other sports',labelde:'Omnisport und andere',show:'true',sort:'63'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.3.1.0.0',label:'Tekst en muziektheater',labelnl:'Tekst en muziektheater',labelfr:'Théâtre dramatique et musical',labelen:'Theatre and Musical theatre',labelde:'Text und Musik',show:'true',sort:'64'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.3.10.0.0',label:'Humor comedy',labelnl:'Humor comedy',labelfr:'Comédie',labelen:'Comedy',labelde:'Humor / Comedy',show:'true',sort:'65'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.4.0.0.0',label:'Musical',labelnl:'Musical',labelfr:'Comédie musicale',labelen:'Musical',labelde:'Musical',show:'true',sort:'66'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.3.5.0.0',label:'Figuren en poppentheater',labelnl:'Figuren en poppentheater',labelfr:'Théâtre de marionnettes',labelen:'Puppetry',labelde:'Figuren und Marionetten',show:'true',sort:'67'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.5.0.0.0',label:'Opera en operette',labelnl:'Opera en operette',labelfr:'Opéra et opérette',labelen:'Opera and operetta',labelde:'Oper und Operette',show:'true',sort:'68'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.3.4.0.0',label:'Mime en bewegingstheater',labelnl:'Mime en bewegingstheater',labelfr:'Mime et theéâtre de mouvements',labelen:'Mime ',labelde:'Mime und Bewegungstheater',show:'true',sort:'69'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.25.0.0.0',label:'Wetenschap',labelnl:'Wetenschap',labelfr:'Science',labelen:'Science',labelde:'Wissenschaft',show:'true',sort:'70'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.44.0.0.0',label:'Zingeving, filosofie en religie',labelnl:'Zingeving, filosofie en religie',labelfr:'Sense de la vie, philosophie et religion',labelen:'Philosophy and religion',labelde:'Philosophie und Religion',show:'true',sort:'71'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.58.0.0.0',label:'Thema onbepaald',labelnl:'Thema onbepaald',labelfr:'Thème non défini',labelen:'Theme undefined',labelde:'unbestimmt',show:'true',sort:'72'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'false',id:'3.0.0.0.0',label:'Giftshop',labelnl:'Giftshop',labelfr:'Boutique de cadeaux',labelen:'Giftshop',labelde:'Geschenkboutique',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'false',id:'3.1.0.0.0',label:'Bibliotheek, archief of documentatiecentrum',labelnl:'Bibliotheek, archief of documentatiecentrum',labelfr:'Bibliothèque, archives et centre de documentation',labelen:'Library, archive or documentation center',labelde:'Bibliothek, Archiv und Dokumentation',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'false',id:'3.3.0.0.0',label:'Eetgelegenheid',labelnl:'Eetgelegenheid',labelfr:'Restaurant',labelen:'Restaurant',labelde:'Restaurant',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'false',id:'3.4.0.0.0',label:'Drankgelegenheid',labelnl:'Drankgelegenheid',labelfr:'Café',labelen:'Cafe',labelde:'Café',show:'false',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'false',id:'3.5.0.0.0',label:'Autoparking',labelnl:'Autoparking',labelfr:'Parking automobiles',labelen:'Car parking',labelde:'Parkplatz',show:'false',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'false',id:'3.6.0.0.0',label:'Busparking',labelnl:'Busparking',labelfr:'Parking autobus',labelen:'Bus parking',labelde:'Busparkplatz',show:'false',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'false',id:'3.8.0.0.0',label:'Baby of luierhoek',labelnl:'Baby of luierhoek',labelfr:'Coin de toilette pour bébés',labelen:'Baby or diaper corner',labelde:'Baby-Windel Ecke',show:'false',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'false',id:'3.9.0.0.0',label:'Kinderopvang',labelnl:'Kinderopvang',labelfr:'Garderie d\'enfants',labelen:'Kindergarten',labelde:'Kindergarten',show:'false',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.14.0.0.0',label:'Educatieve dienstverlening',labelnl:'Educatieve dienstverlening',labelfr:'Services éducatifs',labelen:'Educational service',labelde:'Bildungsleistungen',show:'true',sort:'20'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.15.0.0.0',label:'Audiogids',labelnl:'Audiogids',labelfr:'Guide audio',labelen:'Audioguide',labelde:'Audioguide',show:'true',sort:'21'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.16.0.0.0',label:'Gids',labelnl:'Gids',labelfr:'Guide',labelen:'Guide',labelde:'Führung',show:'true',sort:'22'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'5.0.0.0.0',label:'Open',labelnl:'Open',labelfr:'Ouvert',labelen:'Open',labelde:'Geöffnet',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'5.1.0.0.0',label:'Gesloten',labelnl:'Gesloten',labelfr:'Fermé',labelen:'Closed',labelde:'Geschlossen',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'5.2.0.0.0',label:'Toegankelijk zonder afspraak',labelnl:'Toegankelijk zonder afspraak',labelfr:'Accesible sans rendez-vous',labelen:'No appointment needed',labelde:'Ohne Termin',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'5.3.0.0.0',label:'Enkel toegankelijk mits afspraak',labelnl:'Enkel toegankelijk mits afspraak',labelfr:'Seulement accessible sur rendez-vous',labelen:'Only by appointment',labelde:'Nur nach Vereinbarung geöffnet',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'publicscope',enabled:'true',id:'6.0.0.0.0',label:'Wijk of buurt',labelnl:'Wijk of buurt',labelfr:'Quartier ou voisinage',labelen:'Neighbourhood',labelde:'Nachbarschaft',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'publicscope',enabled:'true',id:'6.1.0.0.0',label:'Lokaal',labelnl:'Lokaal',labelfr:'Locale',labelen:'Local',labelde:'Lokal',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'publicscope',enabled:'true',id:'6.2.0.0.0',label:'Regionaal',labelnl:'Regionaal',labelfr:'Régional',labelen:'Regional',labelde:'Regional',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'publicscope',enabled:'true',id:'6.3.0.0.0',label:'Nationaal',labelnl:'Nationaal',labelfr:'National',labelen:'National',labelde:'National',show:'false',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'publicscope',enabled:'true',id:'6.4.0.0.0',label:'Internationaal',labelnl:'Internationaal',labelfr:'International',labelen:'International',labelde:'International',show:'false',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.2.1.0.0',label:'Vanaf kleuterleeftijd (3+)',labelnl:'Vanaf kleuterleeftijd (3+)',labelfr:'Enfants dès 3+',labelen:'Children 3+',labelde:'Vom Kindergartenalter (3 +)',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.2.2.0.0',label:'Kinderen vanaf 6 jaar (6+)',labelnl:'Kinderen vanaf 6 jaar (6+)',labelfr:'Enfants dès 6+',labelen:'Children 6+',labelde:'Kinder (6 +)',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.2.3.0.0',label:'Jongeren vanaf 12 jaar (12+)',labelnl:'Jongeren vanaf 12 jaar (12+)',labelfr:'Adolescents dès 12+',labelen:'Adolescents 12+',labelde:'Junge Menschen ab 12 Jahren (12 +)',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.2.4.0.0',label:'Jongeren vanaf 15 jaar (15+)',labelnl:'Jongeren vanaf 15 jaar (15+)',labelfr:'Adolescents dès 15+',labelen:'Adolescents 15+',labelde:'Junge Menschen ab 15 Jahren (15 +)',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.2.5.0.0',label:'Volwassenen (18+)',labelnl:'Volwassenen (18+)',labelfr:'Adultes 18+',labelen:'Adults 18+',labelde:'Erwachsene (18 +)',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.5.0.0',label:'Senioren',labelnl:'Senioren',labelfr:'Troisième âge',labelen:'Elderly',labelde:'Senioren',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.9.0.0',label:'Etnisch-culturele minderheden',labelnl:'Etnisch-culturele minderheden',labelfr:'Minorités ethniques et culturelles',labelen:'Ethnic and cultural minorities',labelde:'Ethnischen und kulturellen Minderheiten',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.10.0.0',label:'Holebi',labelnl:'Holebi',labelfr:'Gay',labelen:'Gay',labelde:'Gay',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.2.0.0',label:'Mannen',labelnl:'Mannen',labelfr:'Hommes',labelen:'Men',labelde:'Männer',show:'true',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.11.0.0',label:'Personen met een mentale handicap',labelnl:'Personen met een mentale handicap',labelfr:'Personnes avec déficience mentale',labelen:'Mentally impaired',labelde:'Menschen mit geistiger Behinderung',show:'true',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.3.0.0',label:'Scholen',labelnl:'Scholen',labelfr:'Écoles',labelen:'Schools',labelde:'Schule',show:'true',sort:'15'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.6.0.0',label:'Singles',labelnl:'Singles',labelfr:'Célibataires',labelen:'Singles',labelde:'Einzel',show:'true',sort:'16'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.4.0.0',label:'Studenten',labelnl:'Studenten',labelfr:'Étudiants',labelen:'Students',labelde:'Studierenden',show:'true',sort:'17'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.7.0.0',label:'Vrouwen',labelnl:'Vrouwen',labelfr:'Femmes',labelen:'Women',labelde:'Frauen',show:'true',sort:'18'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.12.0.0',label:'Groepen (verenigingen)',labelnl:'Groepen (verenigingen)',labelfr:'Groupes et associations',labelen:'Groups',labelde:'Gruppen (Vereine)',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'11.0.0.0.0',label:'Hedendaags',labelnl:'Hedendaags',labelfr:'Contemporain',labelen:'Contemporary',labelde:'Moderne',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'11.1.0.0.0',label:'Niet-hedendaags',labelnl:'Niet-hedendaags',labelfr:'Non contemporain',labelen:'Non-contemporary',labelde:'Nicht zeitgenössischen',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.15.0.0.0',label:'Locatie',labelnl:'Locatie',labelfr:'Emplacement',labelen:'Location',labelde:'Lage',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.9.1.0.0',label:'Bioscoop',labelnl:'Bioscoop',labelfr:'Cinéma',labelen:'Cinema / Movie theatres',labelde:'Kino',parentid:'8.15.0.0.0',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.46.0.0.0',label:'Historisch waardevol gebouw',labelnl:'Historisch waardevol gebouw',labelfr:'Bâtiment historique précieux',labelen:'Historically important building',labelde:'Historisch wertvolle Gebäude',parentid:'8.15.0.0.0',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.9.2.0.0',label:'Filmmuseum',labelnl:'Filmmuseum',labelfr:'Musée de cinéma',labelen:'Filmmuseum',labelde:'Film',parentid:'8.15.0.0.0',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.2.0.0.0',label:'Archief of documentatiecentrum',labelnl:'Archief of documentatiecentrum',labelfr:'Archives ou centre de documentation',labelen:'Archive or documentation centre',labelde:'Archiv ',parentid:'8.15.0.0.0',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.47.0.0.0',label:'Logies',labelnl:'Logies',labelfr:'Logement',labelen:'Lodging',labelde:'Unterkunft',parentid:'8.15.0.0.0',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.3.0.0.0',label:'Museum',labelnl:'Museum',labelfr:'Musée',labelen:'Museum',labelde:'Museum',parentid:'8.15.0.0.0',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.4.0.0.0',label:'Galerie',labelnl:'Galerie',labelfr:'Galerie',labelen:'Gallery',labelde:'Galerie',parentid:'8.15.0.0.0',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.48.0.0.0',label:'Concertzaal',labelnl:'Concertzaal',labelfr:'Salle de concerts',labelen:'Concert hall',labelde:'Konzert',parentid:'8.15.0.0.0',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.6.0.0.0',label:'Cultuur, gemeenschaps of ontmoetingscentrum',labelnl:'Cultuur, gemeenschaps of ontmoetingscentrum',labelfr:'Centre culturelle, communale ou de rencontres',labelen:'Culture, community or meeting center',labelde:'Kultur, Gemeinschaft oder Gemeindezentrum',parentid:'8.15.0.0.0',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.5.0.0.0',label:'Kunstencentrum',labelnl:'Kunstencentrum',labelfr:'Centre d\'arts',labelen:'Arts center',labelde:'Arts Centre',parentid:'8.15.0.0.0',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.21.1.0.0',label:'Jeugdhuis of jeugdcentrum',labelnl:'Jeugdhuis of jeugdcentrum',labelfr:'Maison de jeunes ou centre de jeunesse',labelen:'Youth center',labelde:'Jugendzentrum',parentid:'8.15.0.0.0',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.32.0.0.0',label:'Discotheek',labelnl:'Discotheek',labelfr:'Discothèque',labelen:'Disco / club',labelde:'Disko',parentid:'8.15.0.0.0',show:'true',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.49.0.0.0',label:'Cafe',labelnl:'Cafe',labelfr:'Café',labelen:'Cafe',labelde:'Café',parentid:'8.15.0.0.0',show:'true',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.1.0.0.0',label:'Bibliotheek',labelnl:'Bibliotheek',labelfr:'Bibliothèque',labelen:'Library',labelde:'Bibliothek',parentid:'8.15.0.0.0',show:'true',sort:'15'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.44.0.0.0',label:'Restaurant',labelnl:'Restaurant',labelfr:'Restaurant',labelen:'Restaurant',labelde:'Restaurant',parentid:'8.15.0.0.0',show:'true',sort:'16'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.10.0.0.0',label:'School of onderwijscentrum',labelnl:'School of onderwijscentrum',labelfr:'École ou centre éducatif',labelen:'School or education centre',labelde:'Schule',parentid:'8.15.0.0.0',show:'true',sort:'17'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.50.0.0.0',label:'Sportcentrum',labelnl:'Sportcentrum',labelfr:'Centre de sports',labelen:'Sports Centre',labelde:'Sport',parentid:'8.15.0.0.0',show:'true',sort:'18'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.51.0.0.0',label:'Recreatiedomein of centrum',labelnl:'Recreatiedomein of centrum',labelfr:'Centre de loisirs ou centre de récréation',labelen:'Recreation center',labelde:'Recreation Area ',parentid:'8.15.0.0.0',show:'true',sort:'19'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.52.0.0.0',label:'Polyvalente zaal of expohal',labelnl:'Polyvalente zaal of expohal',labelfr:'Salle polyvalente ou d\'exposition',labelen:'Multipurpose hall or exhibition hall',labelde:'Mehrzweckhalle oder Ausstellungsraum',parentid:'8.15.0.0.0',show:'true',sort:'20'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.53.0.0.0',label:'Openbare ruimte',labelnl:'Openbare ruimte',labelfr:'Espace public',labelen:'Public space',labelde:'Der öffentliche Raum',parentid:'8.15.0.0.0',show:'true',sort:'21'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.40.0.0.0',label:'Winkel',labelnl:'Winkel',labelfr:'Magasin',labelen:'Shop',labelde:'Shop',parentid:'8.15.0.0.0',show:'true',sort:'22'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.0.0.0.0',label:'Uitvoerder(s)',labelnl:'Uitvoerder(s)',labelfr:'Exécutant(s)',labelen:'Performer(s)',labelde:'Interpret(s)',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'actortype',enabled:'true',id:'8.11.0.0.0',label:'Organisator(en)',labelnl:'Organisator(en)',labelfr:'Organisateur(s)',labelen:'Organiser(s)',labelde:'Organisator',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.51.0.0.0',label:'Type onbepaald',labelnl:'Type onbepaald',labelfr:'Catégorie non déterminé',labelen:'Type undefined',labelde:'unbestimmt',show:'false',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.0.9.0.0',label:'Meerdere kunstvormen',labelnl:'Meerdere kunstvormen',labelfr:'Arts multiples',labelen:'Multiple art forms',labelde:'Mehrere Formen der Kunst',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.14.0.0',label:'Meerdere filmgenres',labelnl:'Meerdere filmgenres',labelfr:'Films de tous genres',labelen:'Multiple film genres',labelde:'Mehrere Filmgenres',show:'true',sort:'30'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.37.1.0.0',label:'Gezondheid en zorg',labelnl:'Gezondheid en zorg',labelfr:'Santé et soins',labelen:'Health and care',labelde:'Gesundheit und Pflege',show:'true',sort:'54'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.37.2.0.0',label:'Samenleving',labelnl:'Samenleving',labelfr:'Vivre en société',labelen:'Society',labelde:'Gesellschaft',show:'true',sort:'55'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.2.6.0.0',label:'Vanaf peuterleeftijd (0+)',labelnl:'Vanaf peuterleeftijd (0+)',labelfr:'Enfants 0+',labelen:'Toddlers 0+',labelde:'Vom Kleinkindalter (0 +)',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.2.7.0.0',label:'Kinderen vanaf 9 jaar (9+)',labelnl:'Kinderen vanaf 9 jaar (9+)',labelfr:'Enfants dès 9+',labelen:'Children 9+',labelde:'Kinder ab 9 Jahren (9 +)',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.23.1.0.0',label:'Voorzieningen voor rolstoelgebruikers',labelnl:'Voorzieningen voor rolstoelgebruikers',labelfr:'Facilités pour fauteuils roulants',labelen:'Wheelchair facilities',labelde:'EInrichtung für Rollstuhlfahrer',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.23.2.0.0',label:'Assistentie',labelnl:'Assistentie',labelfr:'Assistance',labelen:'Assistance',labelde:'Hilfe',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.23.3.0.0',label:'Rolstoel ter beschikking',labelnl:'Rolstoel ter beschikking',labelfr:'Disponibilité de fauteuils roulants',labelen:'Wheelchair available',labelde:'Rollstuhl verfügbar',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.13.1.0.0',label:'Voorzieningen voor assistentiehonden',labelnl:'Voorzieningen voor assistentiehonden',labelfr:'Facilités de chiens d\'assistance',labelen:'Facilities for guide dogs',labelde:'Einrichtung für Begleithunden',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.13.2.0.0',label:'Audiodescriptie',labelnl:'Audiodescriptie',labelfr:'Audiodéscription',labelen:'Audiodescription',labelde:'Audio-Beschreibung',show:'true',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.13.3.0.0',label:'Brochure beschikbaar in braille',labelnl:'Brochure beschikbaar in braille',labelfr:'Disponibilité de brochure en braille',labelen:'Brochure available in braille',labelde:'Broschüre in Blindenschrift',show:'true',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.13.4.0.0',label:'Brochure beschikbaar in grootletterschrift',labelnl:'Brochure beschikbaar in grootletterschrift',labelfr:'Disponibilité de brochure en gros caractères',labelen:'Brochure available in large print',labelde:'Broschüre in Großdruck Skript',show:'true',sort:'15'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.13.5.0.0',label:'Brochure beschikbaar in gesproken vorm',labelnl:'Brochure beschikbaar in gesproken vorm',labelfr:'Disponibilité de brochure orale',labelen:'Brochure available in spoken form',labelde:'Broschüre in gesprochener Form',show:'true',sort:'16'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.17.1.0.0',label:'Ringleiding',labelnl:'Ringleiding',labelfr:'Boucle auditive',labelen:'Audio induction loop',labelde:'Audio Induktionsschleife',show:'true',sort:'17'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.17.2.0.0',label:'Voelstoelen',labelnl:'Voelstoelen',labelfr:'Chaise sonores',labelen:'Feel chairs',labelde:'AudioStühle',show:'true',sort:'18'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'facility',enabled:'true',id:'3.17.3.0.0',label:'Boven- of ondertiteling',labelnl:'Boven- of ondertiteling',labelfr:'Soustitrages',labelen:'Subtitles',labelde:'Untertitel',show:'true',sort:'19'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.7.15.0.0',label:'Thriller',labelnl:'Thriller',labelfr:'Films à suspense',labelen:'Thriller',labelde:'',show:'true',sort:'29'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'theme',enabled:'true',id:'1.65.0.0.0',label:'Voeding',labelnl:'Voeding',labelfr:'Nutrition',labelen:'Nutrition',labelde:'',show:'true',sort:'74'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.1.0.0.0',label:'Kleuter',labelnl:'Kleuter',labelfr:'',labelen:'',labelde:'',show:'false',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.2.0.0.0',label:'Gewoon lager onderwijs',labelnl:'Gewoon lager onderwijs',labelfr:'',labelen:'',labelde:'',show:'false',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.3.0.0.0',label:'Buitengewoon lager onderwijs',labelnl:'Buitengewoon lager onderwijs',labelfr:'',labelen:'',labelde:'',show:'false',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.4.0.0.0',label:'ASO',labelnl:'ASO',labelfr:'',labelen:'',labelde:'',show:'false',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.5.0.0.0',label:'TSO',labelnl:'TSO',labelfr:'',labelen:'',labelde:'',show:'false',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.6.0.0.0',label:'BSO',labelnl:'BSO',labelfr:'',labelen:'',labelde:'',show:'false',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.7.0.0.0',label:'KSO',labelnl:'KSO',labelfr:'',labelen:'',labelde:'',show:'false',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.8.0.0.0',label:'BUSO',labelnl:'BUSO',labelfr:'',labelen:'',labelde:'',show:'false',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.9.0.0.0',label:'DKO - MWD',labelnl:'DKO - MWD',labelfr:'',labelen:'',labelde:'',show:'false',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.10.0.0.0',label:'DKO - beeld',labelnl:'DKO - beeld',labelfr:'',labelen:'',labelde:'',show:'false',sort:'15'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.11.0.0.0',label:'DKO - andere',labelnl:'DKO - andere',labelfr:'',labelen:'',labelde:'',show:'false',sort:'16'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.12.0.0.0',label:'CVO / CDO / Basiseducatie',labelnl:'CVO / CDO / Basiseducatie',labelfr:'',labelen:'',labelde:'',show:'false',sort:'17'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.13.0.0.0',label:'Lerarenopleiding',labelnl:'Lerarenopleiding',labelfr:'',labelen:'',labelde:'',show:'false',sort:'18'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.14.0.0.0',label:'Hogeschool',labelnl:'Hogeschool',labelfr:'',labelen:'',labelde:'',show:'false',sort:'19'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.1.0.0.0',label:'Actief Burgerschap',labelnl:'Actief Burgerschap',labelfr:'',labelen:'',labelde:'',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.2.0.0.0',label:'Filosofie-religie',labelnl:'Filosofie-religie',labelfr:'',labelen:'',labelde:'',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.3.0.0.0',label:'Kunst en cultuur',labelnl:'Kunst en cultuur',labelfr:'',labelen:'',labelde:'',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.4.0.0.0',label:'Lichamelijke, sociale en mentale gezondheid',labelnl:'Lichamelijke, sociale en mentale gezondheid',labelfr:'',labelen:'',labelde:'',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.5.0.0.0',label:'Mobiliteit',labelnl:'Mobiliteit',labelfr:'',labelen:'',labelde:'',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.6.0.0.0',label:'Taal',labelnl:'Taal',labelfr:'',labelen:'',labelde:'',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.7.0.0.0',label:'Wetenschappen',labelnl:'Wetenschappen',labelfr:'',labelen:'',labelde:'',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.8.0.0.0',label:'Duurzaamheid, natuur en milieu',labelnl:'Duurzaamheid, natuur en milieu',labelfr:'',labelen:'',labelde:'',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.9.0.0.0',label:'Internationale / Europese thema\'s',labelnl:'Internationale / Europese thema\'s',labelfr:'',labelen:'',labelde:'',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.10.0.0.0',label:'Leren leren',labelnl:'Leren leren',labelfr:'',labelen:'',labelde:'',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.11.0.0.0',label:'Media',labelnl:'Media',labelfr:'',labelen:'',labelde:'',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.12.0.0.0',label:'Ondernemingszin',labelnl:'Ondernemingszin',labelfr:'',labelen:'',labelde:'',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.13.0.0.0',label:'Techniek',labelnl:'Techniek',labelfr:'',labelen:'',labelde:'',show:'true',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationfield',enabled:'true',id:'14.14.0.0.0',label:'Wiskunde',labelnl:'Wiskunde',labelfr:'',labelen:'',labelde:'',show:'true',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.100.0.0.0',label:'Kijken en luisteren',labelnl:'Kijken en luisteren',labelfr:'Événements',labelen:'Events',labelde:'Events',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.100.1.0.0',label:'Doen',labelnl:'Doen',labelfr:'Activités',labelen:'Activities',labelde:'Aktivitäter',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'eventtype',enabled:'true',id:'0.100.2.0.0',label:'Bezoeken',labelnl:'Bezoeken',labelfr:'Visites',labelen:'Visits',labelde:'Besuchen',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'11.2.0.0.0',label:'Uitverkocht',labelnl:'Uitverkocht',labelfr:'Complet',labelen:'Sold out',labelde:'Ausverkauft',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'11.3.0.0.0',label:'Geannuleerd',labelnl:'Geannuleerd',labelfr:'Annullé',labelen:'Cancelled',labelde:'Storniert',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'11.4.0.0.0',label:'Werkt op maat',labelnl:'Werkt op maat',labelfr:'Travail sur mesure',labelen:'Custom made',labelde:'',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'targetaudience',enabled:'true',id:'2.1.13.0.0',label:'Leerkrachten',labelnl:'Leerkrachten',labelfr:'',labelen:'',labelde:'',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.1.1.0.0',label:'Kleuter 2 - 3 jaar',labelnl:'Kleuter 2 - 3 jaar',labelfr:'',labelen:'',labelde:'',parentid:'12.1.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.1.2.0.0',label:'Kleuter 3 - 4 jaar',labelnl:'Kleuter 3 - 4 jaar',labelfr:'',labelen:'',labelde:'',parentid:'12.1.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.1.3.0.0',label:'Kleuter 4 - 5 jaar',labelnl:'Kleuter 4 - 5 jaar',labelfr:'',labelen:'',labelde:'',parentid:'12.1.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.2.1.0.0',label:'Gewoon lager onderwijs - eerste graad',labelnl:'Gewoon lager onderwijs - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.2.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.2.2.0.0',label:'Gewoon lager onderwijs - tweede graad',labelnl:'Gewoon lager onderwijs - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.2.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.2.3.0.0',label:'Gewoon lager onderwijs - derde graad',labelnl:'Gewoon lager onderwijs - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.2.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.3.1.0.0',label:'Buitengewoon lager onderwijs - eerste graad',labelnl:'Buitengewoon lager onderwijs - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.3.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.3.2.0.0',label:'Buitengewoon lager onderwijs - tweede graad',labelnl:'Buitengewoon lager onderwijs - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.3.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.3.3.0.0',label:'Buitengewoon lager onderwijs - derde graad',labelnl:'Buitengewoon lager onderwijs - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.3.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.4.1.0.0',label:'ASO - eerste graad',labelnl:'ASO - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.4.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.4.2.0.0',label:'ASO - tweede graad',labelnl:'ASO - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.4.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.4.3.0.0',label:'ASO - derde graad',labelnl:'ASO - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.4.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.5.1.0.0',label:'TSO - eerste graad',labelnl:'TSO - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.5.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.5.2.0.0',label:'TSO - tweede graad',labelnl:'TSO - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.5.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.5.3.0.0',label:'TSO - derde graad',labelnl:'TSO - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.5.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.5.4.0.0',label:'TSO - vierde graad',labelnl:'TSO - vierde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.5.0.0.0',show:'false',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.6.1.0.0',label:'BSO - eerste graad',labelnl:'BSO - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.6.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.6.2.0.0',label:'BSO - tweede graad',labelnl:'BSO - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.6.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.6.3.0.0',label:'BSO - derde graad',labelnl:'BSO - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.6.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.6.4.0.0',label:'BSO - vierde graad',labelnl:'BSO - vierde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.6.0.0.0',show:'false',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.7.1.0.0',label:'KSO - eerste graad',labelnl:'KSO - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.7.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.7.2.0.0',label:'KSO - tweede graad',labelnl:'KSO - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.7.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.7.3.0.0',label:'KSO - derde graad',labelnl:'KSO - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.7.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.7.4.0.0',label:'KSO - vierde graad',labelnl:'KSO - vierde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.7.0.0.0',show:'false',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.8.1.0.0',label:'BUSO - eerste graad',labelnl:'BUSO - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.8.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.8.2.0.0',label:'BUSO - tweede graad',labelnl:'BUSO - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.8.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.8.3.0.0',label:'BUSO - derde graad',labelnl:'BUSO - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.8.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.8.4.0.0',label:'BUSO - vierde graad',labelnl:'BUSO - vierde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.8.0.0.0',show:'false',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.9.1.0.0',label:'DKO - MWD - eerste graad',labelnl:'DKO - MWD - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.9.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.9.2.0.0',label:'DKO - MWD - tweede graad',labelnl:'DKO - MWD - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.9.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.9.3.0.0',label:'DKO - MWD - derde graad',labelnl:'DKO - MWD - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.9.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.10.1.0.0',label:'DKO - beeld - eerste graad',labelnl:'DKO - beeld - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.10.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.10.2.0.0',label:'DKO - beeld - tweede graad',labelnl:'DKO - beeld - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.10.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.10.3.0.0',label:'DKO - beeld - derde graad',labelnl:'DKO - beeld - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.10.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.11.1.0.0',label:'DKO - andere - eerste graad',labelnl:'DKO - andere - eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.11.0.0.0',show:'false',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.11.2.0.0',label:'DKO - andere - tweede graad',labelnl:'DKO - andere - tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.11.0.0.0',show:'false',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'educationlevel',enabled:'true',id:'12.11.3.0.0',label:'DKO - andere - derde graad',labelnl:'DKO - andere - derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.11.0.0.0',show:'false',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.31',label:'Provincie Vlaams-Brabant',labelnl:'Provincie Vlaams-Brabant',labelfr:'Province du Brabant Flamand',labelen:'Province of Flemish Brabant',labelde:'Provinz Flämisch-Brabant',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.32',label:'Provincie West-Vlaanderen',labelnl:'Provincie West-Vlaanderen',labelfr:'Province de Flandre Occidentale',labelen:'Province of West Flanders',labelde:'Provinz Westflandern',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.5',label:'Brussels Hoofdstedelijk Gewest',labelnl:'Brussels Hoofdstedelijk Gewest',labelfr:'Région Bruxelles-Capitale',labelen:'Brussels Capital Region',labelde:'Region Brüssel-Hauptstadt',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.22',label:'Provincie Oost-Vlaanderen',labelnl:'Provincie Oost-Vlaanderen',labelfr:'Province de Flandre Orientale',labelen:'Province of East Flanders',labelde:'Provinz Ostflandern',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.18',label:'Provincie Limburg',labelnl:'Provincie Limburg',labelfr:'Province du Limbourg',labelen:'Province of Limburg',labelde:'Provinz Limburg',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.2',label:'Provincie Antwerpen',labelnl:'Provincie Antwerpen',labelfr:'Province d\'Anvers',labelen:'Province of Antwerp',labelde:'Provinz Antwerpen',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.3',label:'Regio Antwerpen',labelnl:'Regio Antwerpen',labelfr:'Région Anvers',labelen:'Region Antwerp',labelde:'Region Antwerpen',parentid:'reg.2',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.4',label:'Regio Brugge',labelnl:'Regio Brugge',labelfr:'Région Bruges',labelen:'Region Bruges',labelde:'Region Brügge',parentid:'reg.32',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.1',label:'Regio Aalst',labelnl:'Regio Aalst',labelfr:'Région Alost',labelen:'Region Aalst',labelde:'Region Aalst',parentid:'reg.22',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.19',label:'Regio Maaseik - Lommel',labelnl:'Regio Maaseik - Lommel',labelfr:'Région Maaseik - Lommel',labelen:'Region Maaseik - Lommel',labelde:'Region Maaseik - Lommel',parentid:'reg.18',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.20',label:'Regio Mechelen',labelnl:'Regio Mechelen',labelfr:'Région Malines',labelen:'Region Mechelen',labelde:'Region Mechelen',parentid:'reg.2',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.21',label:'Regio Oostende',labelnl:'Regio Oostende',labelfr:'Région Ostende',labelen:'Region Ostend',labelde:'Region Ostende',parentid:'reg.32',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.23',label:'Regio Oudenaarde',labelnl:'Regio Oudenaarde',labelfr:'Région Audenarde',labelen:'Region Oudenaarde',labelde:'Region Oudenaarde',parentid:'reg.22',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.24',label:'Regio Roeselare',labelnl:'Regio Roeselare',labelfr:'Région Roulers',labelen:'Region Roeselare',labelde:'Region Roeselare',parentid:'reg.32',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.25',label:'Regio Sint-Niklaas- Lokeren',labelnl:'Regio Sint-Niklaas- Lokeren',labelfr:'Région Saint-Nicolas - Lokeren',labelen:'Region Sint-Niklaas - Lokeren',labelde:'Region Sint-Niklaas - Lokeren',parentid:'reg.22',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.26',label:'Regio Tielt',labelnl:'Regio Tielt',labelfr:'Région Tielt',labelen:'Region Tielt',labelde:'Region Tielt',parentid:'reg.32',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.27',label:'Regio Tongeren - Sint-Truiden',labelnl:'Regio Tongeren - Sint-Truiden',labelfr:'Région Tongres - Saint-Trond',labelen:'Region Tongeren - Sint-Truiden',labelde:'Region Tongern - Sint-Truiden',parentid:'reg.18',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.28',label:'Regio Turnhout - Geel',labelnl:'Regio Turnhout - Geel',labelfr:'Région Turnhout - Geel',labelen:'Region Turnhout - Geel',labelde:'Region Turnhout - Geel',parentid:'reg.2',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.29',label:'Regio Veurne',labelnl:'Regio Veurne',labelfr:'Région Furnes',labelen:'Region Veurne',labelde:'Region Veurne',parentid:'reg.32',show:'true',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.30',label:'Regio Vilvoorde',labelnl:'Regio Vilvoorde',labelfr:'Région Vilvorde',labelen:'Region Vilvoorde',labelde:'Region Vilvoorde',parentid:'reg.31',show:'true',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.6',label:'Regio Brussel',labelnl:'Regio Brussel',labelfr:'Région Bruxelles',labelen:'Region Brussels',labelde:'Region Brüssel',parentid:'reg.5',show:'true',sort:'15'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.7',label:'Regio Dendermonde',labelnl:'Regio Dendermonde',labelfr:'Région Termonde',labelen:'Region Dendermonde',labelde:'Region Dendermonde',parentid:'reg.22',show:'true',sort:'16'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.8',label:'Regio Diest - Aarschot - Tienen',labelnl:'Regio Diest - Aarschot - Tienen',labelfr:'Région Diest - Aarschot - Tirlemont',labelen:'Region Diest - Aarschot - Tienen',labelde:'Region Diest - Aarschot - Tienen',parentid:'reg.31',show:'true',sort:'17'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.9',label:'Regio Diksmuide',labelnl:'Regio Diksmuide',labelfr:'Région Dixmude',labelen:'Region Diksmuide',labelde:'Region Diksmuide',parentid:'reg.32',show:'true',sort:'18'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.10',label:'Regio Eeklo',labelnl:'Regio Eeklo',labelfr:'Région Eeklo',labelen:'Region Eeklo',labelde:'Region Eeklo',parentid:'reg.22',show:'true',sort:'19'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.11',label:'Regio Gent',labelnl:'Regio Gent',labelfr:'Région Gand',labelen:'Region Ghent',labelde:'Region Gent',parentid:'reg.22',show:'true',sort:'20'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.12',label:'Regio Halle - Dilbeek',labelnl:'Regio Halle - Dilbeek',labelfr:'Région Hal - Dilbeek',labelen:'Region Halle - Dilbeek',labelde:'Region Halle - Dilbeek',parentid:'reg.31',show:'true',sort:'21'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.13',label:'Regio Hasselt - Genk',labelnl:'Regio Hasselt - Genk',labelfr:'Région Hasselt - Genk',labelen:'Region Hasselt - Genk',labelde:'Region Hasselt - Genk',parentid:'reg.18',show:'true',sort:'22'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.14',label:'Regio Ieper',labelnl:'Regio Ieper',labelfr:'Région Ypres',labelen:'Region Ypres',labelde:'Region Ypern',parentid:'reg.32',show:'true',sort:'23'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.15',label:'Regio Kortrijk',labelnl:'Regio Kortrijk',labelfr:'Région Courtrai',labelen:'Region Kortrijk',labelde:'Region Kortrijk',parentid:'reg.32',show:'true',sort:'24'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.16',label:'Regio Leuven',labelnl:'Regio Leuven',labelfr:'Région Louvain',labelen:'Region Leuven',labelde:'Region Löwen',parentid:'reg.31',show:'true',sort:'25'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.17',label:'Regio Lier - Heist-op-den-Berg',labelnl:'Regio Lier - Heist-op-den-Berg',labelfr:'Région Lierre - Heist-op-den-Berg',labelen:'Region Lier - Heist-op-den-Berg',labelde:'Region Lier - Heist-op-den-Berg',parentid:'reg.2',show:'true',sort:'26'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.33',label:'Regio De Kust',labelnl:'Regio De Kust',labelfr:'Le Littoral',labelen:'The Belgian coast',labelde:'Die Belgische Küste',parentid:'reg.32',show:'true',sort:'27'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.350',label:'Kunststad Antwerpen',labelnl:'Kunststad Antwerpen',labelfr:'Ville d\'Arts Anvers',labelen:'City of Arts Antwerp',labelde:'Kunst Stadt Antwerpen',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.351',label:'Waasland',labelnl:'Waasland',labelfr:'Pays de Waes',labelen:'Waasland',labelde:'Waasland',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.354',label:'Antwerpse Kempen',labelnl:'Antwerpse Kempen',labelfr:'Campine',labelen:'Campine',labelde:'Kempen',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.353',label:'Voerstreek',labelnl:'Voerstreek',labelfr:'La Région Fouron',labelen:'Voer Region',labelde:'Die Voerregion',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.363',label:'Kunststad Brugge',labelnl:'Kunststad Brugge',labelfr:'Ville d\'Arts Bruges',labelen:'City of Arts Bruges',labelde:'Kunst Stadt Brügge',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.355',label:'Leiestreek',labelnl:'Leiestreek',labelfr:'Pays du Lys',labelen:'Around the Leie',labelde:'Um die Leie',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.360',label:'Hageland',labelnl:'Hageland',labelfr:'Hageland',labelen:'Hageland',labelde:'Hageland',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.352',label:'Meetjesland',labelnl:'Meetjesland',labelfr:'Meetjesland',labelen:'Meetjesland',labelde:'Meetjesland',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.357',label:'Kunststad Brussel',labelnl:'Kunststad Brussel',labelfr:'Ville d\'Arts de Bruxelles',labelen:'City of Arts Brussels',labelde:'Kunst Stadt Brüssel',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.356',label:'Kust',labelnl:'Kust',labelfr:'Le Littoral',labelen:'The Belgian coast',labelde:'Die Belgische Küste',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.362',label:'Limburgse Kempen',labelnl:'Limburgse Kempen',labelfr:'Limburg Kempen',labelen:'Limbourg Campine',labelde:'',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.369',label:'Brugse Ommeland',labelnl:'Brugse Ommeland',labelfr:'L\'Arrière-Pays de Bruges',labelen:'The Bruges woodland and wetland',labelde:'Das Brügger Umland',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.359',label:'Kunststad Gent',labelnl:'Kunststad Gent',labelfr:'Ville d\'Arts de Gand',labelen:'City of Arts Ghent',labelde:'Kunst Stadt Gent',show:'true',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.361',label:'Maasland',labelnl:'Maasland',labelfr:'Pays de la Meuse',labelen:'Around the Meuse',labelde:'Um die Maas',show:'true',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.364',label:'Groene Gordel',labelnl:'Groene Gordel',labelfr:'La Ceinture Verte',labelen:'Green Belt',labelde:'Grünen Gürtel',show:'true',sort:'15'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.349',label:'Westhoek',labelnl:'Westhoek',labelfr:'Westhoek',labelen:'Westhoek',labelde:'Westhoek',show:'true',sort:'16'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.367',label:'Kunststad Leuven',labelnl:'Kunststad Leuven',labelfr:'Ville d\'Arts Louvain',labelen:'City of Arts Leuven',labelde:'Kunst Stadt Leuven',show:'true',sort:'17'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.366',label:'Scheldeland',labelnl:'Scheldeland',labelfr:'Pays de l\'Escaut',labelen:'Around the Scheldt',labelde:'Um die Schelde',show:'true',sort:'18'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.365',label:'Vlaamse Ardennen',labelnl:'Vlaamse Ardennen',labelfr:'Ardennes flamandes',labelen:'Flemish Ardennes',labelde:'Flämischen Ardennen',show:'true',sort:'19'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.358',label:'Haspengouw',labelnl:'Haspengouw',labelfr:'Hesbaye',labelen:'Hesbaye',labelde:'Hespengau',show:'true',sort:'20'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flanderstouristregion',enabled:'true',id:'reg.368',label:'Kunststad Mechelen',labelnl:'Kunststad Mechelen',labelfr:'Ville d\'Arts Malines',labelen:'City of Arts Mechelen',labelde:'Kunst Stadt Mechelen',show:'true',sort:'21'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.34',label:'Brussel',labelnl:'Brussel',labelfr:'Bruxelles',labelen:'Brussels',labelde:'Brüssel',parentid:'reg.6',show:'true',sort:'22'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.35',label:'Halle',labelnl:'Halle',labelfr:'Hal',labelen:'Halle',labelde:'Halle',parentid:'reg.12',show:'true',sort:'23'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.36',label:'Herne',labelnl:'Herne',labelfr:'Hérinnes',labelen:'Herne',labelde:'Herne',parentid:'reg.12',show:'true',sort:'24'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.37',label:'Bever',labelnl:'Bever',labelfr:'Biévène',labelen:'Bever',labelde:'Bever',parentid:'reg.12',show:'true',sort:'25'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.38',label:'Biévène',labelnl:'Biévène',labelfr:'Biévène',labelen:'Bever',labelde:'Bever',parentid:'reg.12',show:'true',sort:'26'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.39',label:'Hoeilaart',labelnl:'Hoeilaart',labelfr:'Hoeilaart',labelen:'Hoeilaart',labelde:'Hoeilaart',parentid:'reg.12',show:'true',sort:'27'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.40',label:'Galmaarden',labelnl:'Galmaarden',labelfr:'Gammerages',labelen:'Galmaarden',labelde:'Galmaarden',parentid:'reg.12',show:'true',sort:'28'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.41',label:'Sint-Pieters-Leeuw',labelnl:'Sint-Pieters-Leeuw',labelfr:'Leeuw-Saint-Pierre',labelen:'Sint-Pieters-Leeuw',labelde:'Sint-Pieters-Leeuw',parentid:'reg.12',show:'true',sort:'29'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.42',label:'Drogenbos',labelnl:'Drogenbos',labelfr:'Drogenbos',labelen:'Drogenbos',labelde:'Drogenbos',parentid:'reg.12',show:'true',sort:'30'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.43',label:'Linkebeek',labelnl:'Linkebeek',labelfr:'Linkebeek',labelen:'Linkebeek',labelde:'Linkebeek',parentid:'reg.12',show:'true',sort:'31'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.44',label:'Sint-Genesius-Rode',labelnl:'Sint-Genesius-Rode',labelfr:'Rhode-Saint-Genèse',labelen:'Sint-Genesius-Rode',labelde:'Sint-Genesius-Rode',parentid:'reg.12',show:'true',sort:'32'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.45',label:'Beersel',labelnl:'Beersel',labelfr:'Beersel',labelen:'Beersel',labelde:'Beersel',parentid:'reg.12',show:'true',sort:'33'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.46',label:'Pepingen',labelnl:'Pepingen',labelfr:'Pepingen',labelen:'Pepingen',labelde:'Pepingen',parentid:'reg.12',show:'true',sort:'34'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.47',label:'Dilbeek',labelnl:'Dilbeek',labelfr:'Dilbeek',labelen:'Dilbeek',labelde:'Dilbeek',parentid:'reg.12',show:'true',sort:'35'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.48',label:'Asse',labelnl:'Asse',labelfr:'Asse',labelen:'Asse',labelde:'Asse',parentid:'reg.12',show:'true',sort:'36'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.49',label:'Ternat',labelnl:'Ternat',labelfr:'Ternat',labelen:'Ternat',labelde:'Ternat',parentid:'reg.12',show:'true',sort:'37'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.50',label:'Opwijk',labelnl:'Opwijk',labelfr:'Opwijk',labelen:'Opwijk',labelde:'Opwijk',parentid:'reg.12',show:'true',sort:'38'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.51',label:'Lennik',labelnl:'Lennik',labelfr:'Lennik',labelen:'Lennik',labelde:'Lennik',parentid:'reg.12',show:'true',sort:'39'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.52',label:'Gooik',labelnl:'Gooik',labelfr:'Gooik',labelen:'Gooik',labelde:'Gooik',parentid:'reg.12',show:'true',sort:'40'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.53',label:'Roosdaal',labelnl:'Roosdaal',labelfr:'Roosdaal',labelen:'Roosdaal',labelde:'Roosdaal',parentid:'reg.12',show:'true',sort:'41'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.54',label:'Liedekerke',labelnl:'Liedekerke',labelfr:'Liedekerke',labelen:'Liedekerke',labelde:'Liedekerke',parentid:'reg.12',show:'true',sort:'42'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.55',label:'Wemmel',labelnl:'Wemmel',labelfr:'Wemmel',labelen:'Wemmel',labelde:'Wemmel',parentid:'reg.12',show:'true',sort:'43'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.56',label:'Merchtem',labelnl:'Merchtem',labelfr:'Merchtem',labelen:'Merchtem',labelde:'Merchtem',parentid:'reg.12',show:'true',sort:'44'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.57',label:'Affligem',labelnl:'Affligem',labelfr:'Affligem',labelen:'Affligem',labelde:'Affligem',parentid:'reg.12',show:'true',sort:'45'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.61',label:'Londerzeel',labelnl:'Londerzeel',labelfr:'Londerzeel',labelen:'Londerzeel',labelde:'Londerzeel',parentid:'reg.12',show:'true',sort:'46'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.58',label:'Vilvoorde',labelnl:'Vilvoorde',labelfr:'Vilvorde',labelen:'Vilvoorde',labelde:'Vilvoorde',parentid:'reg.30',show:'true',sort:'47'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.59',label:'Steenokkerzeel',labelnl:'Steenokkerzeel',labelfr:'Steenokkerzeel',labelen:'Steenokkerzeel',labelde:'Steenokkerzeel',parentid:'reg.30',show:'true',sort:'48'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.60',label:'Machelen',labelnl:'Machelen',labelfr:'Machelen',labelen:'Machelen',labelde:'Machelen',parentid:'reg.30',show:'true',sort:'49'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.62',label:'Grimbergen',labelnl:'Grimbergen',labelfr:'Grimbergen',labelen:'Grimbergen',labelde:'Grimbergen',parentid:'reg.30',show:'true',sort:'50'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.63',label:'Meise',labelnl:'Meise',labelfr:'Meise',labelen:'Meise',labelde:'Meise',parentid:'reg.30',show:'true',sort:'51'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.64',label:'Kapelle-Op-Den-Bos',labelnl:'Kapelle-Op-Den-Bos',labelfr:'Kapelle-op-den-Bos',labelen:'Kapelle-op-den-Bos',labelde:'Kapelle-op-den-Bos',parentid:'reg.30',show:'true',sort:'52'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.65',label:'Kampenhout',labelnl:'Kampenhout',labelfr:'Kampenhout',labelen:'Kampenhout',labelde:'Kampenhout',parentid:'reg.30',show:'true',sort:'53'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.66',label:'Zaventem',labelnl:'Zaventem',labelfr:'Zaventem',labelen:'Zaventem',labelde:'Zaventem',parentid:'reg.30',show:'true',sort:'54'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.67',label:'Kraainem',labelnl:'Kraainem',labelfr:'Crainhem',labelen:'Kraainem',labelde:'Kraainem',parentid:'reg.30',show:'true',sort:'55'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.68',label:'Wezembeek-Oppem',labelnl:'Wezembeek-Oppem',labelfr:'Wezembeek-Oppem',labelen:'Wezembeek-Oppem',labelde:'Wezembeek-Oppem',parentid:'reg.30',show:'true',sort:'56'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.69',label:'Zemst',labelnl:'Zemst',labelfr:'Zemst',labelen:'Zemst',labelde:'Zemst',parentid:'reg.30',show:'true',sort:'57'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.70',label:'Antwerpen',labelnl:'Antwerpen',labelfr:'Anvers',labelen:'Antwerp',labelde:'Antwerpen',parentid:'reg.3',show:'true',sort:'58'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.71',label:'Zwijndrecht',labelnl:'Zwijndrecht',labelfr:'Zwijndrecht',labelen:'Zwijndrecht',labelde:'Zwijndrecht',parentid:'reg.3',show:'true',sort:'59'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.72',label:'Wijnegem',labelnl:'Wijnegem',labelfr:'Wijnegem',labelen:'Wijnegem',labelde:'Wijnegem',parentid:'reg.3',show:'true',sort:'60'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.73',label:'Borsbeek',labelnl:'Borsbeek',labelfr:'Borsbeek',labelen:'Borsbeek',labelde:'Borsbeek',parentid:'reg.3',show:'true',sort:'61'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.74',label:'Wommelgem',labelnl:'Wommelgem',labelfr:'Wommelgem',labelen:'Wommelgem',labelde:'Wommelgem',parentid:'reg.3',show:'true',sort:'62'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.79',label:'Zandhoven',labelnl:'Zandhoven',labelfr:'Zandhoven',labelen:'Zandhoven',labelde:'Zandhoven',parentid:'reg.3',show:'true',sort:'63'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.96',label:'Malle',labelnl:'Malle',labelfr:'Malle',labelen:'Malle',labelde:'Malle',parentid:'reg.3',show:'true',sort:'64'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.106',label:'Ranst',labelnl:'Ranst',labelfr:'Ranst',labelen:'Ranst',labelde:'Ranst',parentid:'reg.3',show:'true',sort:'65'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.107',label:'Boechout',labelnl:'Boechout',labelfr:'Boechout',labelen:'Boechout',labelde:'Boechout',parentid:'reg.3',show:'true',sort:'66'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.108',label:'Hove',labelnl:'Hove',labelfr:'Hove',labelen:'Hove',labelde:'Hove',parentid:'reg.3',show:'true',sort:'67'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.109',label:'Lint',labelnl:'Lint',labelfr:'Lint',labelen:'Lint',labelde:'Lint',parentid:'reg.3',show:'true',sort:'68'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.110',label:'Kontich',labelnl:'Kontich',labelfr:'Kontich',labelen:'Kontich',labelde:'Kontich',parentid:'reg.3',show:'true',sort:'69'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.75',label:'Herentals',labelnl:'Herentals',labelfr:'Herentals',labelen:'Herentals',labelde:'Herentals',parentid:'reg.28',show:'true',sort:'70'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.77',label:'Herselt',labelnl:'Herselt',labelfr:'Herselt',labelen:'Herselt',labelde:'Herselt',parentid:'reg.28',show:'true',sort:'71'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.78',label:'Hulshout',labelnl:'Hulshout',labelfr:'Hulshout',labelen:'Hulshout',labelde:'Hulshout',parentid:'reg.28',show:'true',sort:'72'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.80',label:'Olen',labelnl:'Olen',labelfr:'Olen',labelen:'Olen',labelde:'Olen',parentid:'reg.28',show:'true',sort:'73'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.81',label:'Westerlo',labelnl:'Westerlo',labelfr:'Westerlo',labelen:'Westerlo',labelde:'Westerlo',parentid:'reg.28',show:'true',sort:'74'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.82',label:'Herenthout',labelnl:'Herenthout',labelfr:'Herenthout',labelen:'Herenthout',labelde:'Herenthout',parentid:'reg.28',show:'true',sort:'75'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.83',label:'Lille',labelnl:'Lille',labelfr:'Lille',labelen:'Lille',labelde:'Lille',parentid:'reg.28',show:'true',sort:'76'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.84',label:'Grobbendonk',labelnl:'Grobbendonk',labelfr:'Grobbendonk',labelen:'Grobbendonk',labelde:'Grobbendonk',parentid:'reg.28',show:'true',sort:'77'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.85',label:'Vorselaar',labelnl:'Vorselaar',labelfr:'Vorselaar',labelen:'Vorselaar',labelde:'Vorselaar',parentid:'reg.28',show:'true',sort:'78'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.86',label:'Turnhout',labelnl:'Turnhout',labelfr:'Turnhout',labelen:'Turnhout',labelde:'Turnhout',parentid:'reg.28',show:'true',sort:'79'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.87',label:'Rijkevorsel',labelnl:'Rijkevorsel',labelfr:'Rijkevorsel',labelen:'Rijkevorsel',labelde:'Rijkevorsel',parentid:'reg.28',show:'true',sort:'80'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.88',label:'Hoogstraten',labelnl:'Hoogstraten',labelfr:'Hoogstraten',labelen:'Hoogstraten',labelde:'Hoogstraten',parentid:'reg.28',show:'true',sort:'81'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.89',label:'Merksplas',labelnl:'Merksplas',labelfr:'Merksplas',labelen:'Merksplas',labelde:'Merksplas',parentid:'reg.28',show:'true',sort:'82'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.90',label:'Beerse',labelnl:'Beerse',labelfr:'Beerse',labelen:'Beerse',labelde:'Beerse',parentid:'reg.28',show:'true',sort:'83'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.91',label:'Vosselaar',labelnl:'Vosselaar',labelfr:'Vosselaar',labelen:'Vosselaar',labelde:'Vosselaar',parentid:'reg.28',show:'true',sort:'84'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.92',label:'Oud-Turnhout',labelnl:'Oud-Turnhout',labelfr:'Oud-Turnhout',labelen:'Oud-Turnhout',labelde:'Oud-Turnhout',parentid:'reg.28',show:'true',sort:'85'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.93',label:'Arendonk',labelnl:'Arendonk',labelfr:'Arendonk',labelen:'Arendonk',labelde:'Arendonk',parentid:'reg.28',show:'true',sort:'86'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.94',label:'Ravels',labelnl:'Ravels',labelfr:'Ravels',labelen:'Ravels',labelde:'Ravels',parentid:'reg.28',show:'true',sort:'87'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.95',label:'Baarle-Hertog',labelnl:'Baarle-Hertog',labelfr:'Baerle-Duc',labelen:'Baarle-Hertog',labelde:'Baarle-Hertog',parentid:'reg.28',show:'true',sort:'88'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.97',label:'Mol',labelnl:'Mol',labelfr:'Mol',labelen:'Mol',labelde:'Mol',parentid:'reg.28',show:'true',sort:'89'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.98',label:'Laakdal',labelnl:'Laakdal',labelfr:'Laakdal',labelen:'Laakdal',labelde:'Laakdal',parentid:'reg.28',show:'true',sort:'90'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.99',label:'Geel',labelnl:'Geel',labelfr:'Geel',labelen:'Geel',labelde:'Geel',parentid:'reg.28',show:'true',sort:'91'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.100',label:'Meerhout',labelnl:'Meerhout',labelfr:'Meerhout',labelen:'Meerhout',labelde:'Meerhout',parentid:'reg.28',show:'true',sort:'92'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.101',label:'Kasterlee',labelnl:'Kasterlee',labelfr:'Kasterlee',labelen:'Kasterlee',labelde:'Kasterlee',parentid:'reg.28',show:'true',sort:'93'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.102',label:'Retie',labelnl:'Retie',labelfr:'Retie',labelen:'Retie',labelde:'Retie',parentid:'reg.28',show:'true',sort:'94'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.103',label:'Dessel',labelnl:'Dessel',labelfr:'Dessel',labelen:'Dessel',labelde:'Dessel',parentid:'reg.28',show:'true',sort:'95'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.104',label:'Balen',labelnl:'Balen',labelfr:'Balen',labelen:'Balen',labelde:'Balen',parentid:'reg.28',show:'true',sort:'96'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.76',label:'Heist-Op-Den-Berg',labelnl:'Heist-Op-Den-Berg',labelfr:'Heist-op-den-Berg',labelen:'Heist-op-den-Berg',labelde:'Heist-op-den-Berg',parentid:'reg.17',show:'true',sort:'97'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.105',label:'Lier',labelnl:'Lier',labelfr:'Lierre',labelen:'Lier',labelde:'Lier',parentid:'reg.17',show:'true',sort:'98'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.111',label:'Nijlen',labelnl:'Nijlen',labelfr:'Nijlen',labelen:'Nijlen',labelde:'Nijlen',parentid:'reg.17',show:'true',sort:'99'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.112',label:'Duffel',labelnl:'Duffel',labelfr:'Duffel',labelen:'Duffel',labelde:'Duffel',parentid:'reg.20',show:'true',sort:'100'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.113',label:'Putte',labelnl:'Putte',labelfr:'Putte',labelen:'Putte',labelde:'Putte',parentid:'reg.17',show:'true',sort:'101'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.114',label:'Berlaar',labelnl:'Berlaar',labelfr:'Berlaar',labelen:'Berlaar',labelde:'Berlaar',parentid:'reg.17',show:'true',sort:'102'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.115',label:'Hemiksem',labelnl:'Hemiksem',labelfr:'Hemiksem',labelen:'Hemiksem',labelde:'Hemiksem',parentid:'reg.3',show:'true',sort:'103'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.116',label:'Schelle',labelnl:'Schelle',labelfr:'Schelle',labelen:'Schelle',labelde:'Schelle',parentid:'reg.3',show:'true',sort:'104'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.117',label:'Aartselaar',labelnl:'Aartselaar',labelfr:'Aartselaar',labelen:'Aartselaar',labelde:'Aartselaar',parentid:'reg.3',show:'true',sort:'105'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.118',label:'Mortsel',labelnl:'Mortsel',labelfr:'Mortsel',labelen:'Mortsel',labelde:'Mortsel',parentid:'reg.3',show:'true',sort:'106'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.119',label:'Edegem',labelnl:'Edegem',labelfr:'Edegem',labelen:'Edegem',labelde:'Edegem',parentid:'reg.3',show:'true',sort:'107'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.120',label:'Mechelen',labelnl:'Mechelen',labelfr:'Malines',labelen:'Mechelen',labelde:'Mechelen',parentid:'reg.20',show:'true',sort:'108'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.121',label:'Bonheiden',labelnl:'Bonheiden',labelfr:'Bonheiden',labelen:'Bonheiden',labelde:'Bonheiden',parentid:'reg.20',show:'true',sort:'109'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.122',label:'Willebroek',labelnl:'Willebroek',labelfr:'Willebroek',labelen:'Willebroek',labelde:'Willebroek',parentid:'reg.20',show:'true',sort:'110'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.123',label:'Rumst',labelnl:'Rumst',labelfr:'Rumst',labelen:'Rumst',labelde:'Rumst',parentid:'reg.3',show:'true',sort:'111'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.124',label:'Niel',labelnl:'Niel',labelfr:'Niel',labelen:'Niel',labelde:'Niel',parentid:'reg.3',show:'true',sort:'112'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.125',label:'Boom',labelnl:'Boom',labelfr:'Boom',labelen:'Boom',labelde:'Boom',parentid:'reg.3',show:'true',sort:'113'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.126',label:'Sint-Katelijne-Waver',labelnl:'Sint-Katelijne-Waver',labelfr:'Wavre-Sainte-Catherine',labelen:'Sint-Katelijne-Waver',labelde:'Sint-Katelijne-Waver',parentid:'reg.20',show:'true',sort:'114'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.128',label:'Puurs',labelnl:'Puurs',labelfr:'Puurs',labelen:'Puurs',labelde:'Puurs',parentid:'reg.20',show:'true',sort:'115'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.129',label:'Bornem',labelnl:'Bornem',labelfr:'Bornem',labelen:'Bornem',labelde:'Bornem',parentid:'reg.20',show:'true',sort:'116'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.130',label:'Sint-Amands',labelnl:'Sint-Amands',labelfr:'Saint-Amand',labelen:'Sint-Amands',labelde:'Sint-Amands',parentid:'reg.20',show:'true',sort:'117'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.131',label:'Schoten',labelnl:'Schoten',labelfr:'Schoten',labelen:'Schoten',labelde:'Schoten',parentid:'reg.3',show:'true',sort:'118'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.132',label:'Essen',labelnl:'Essen',labelfr:'Essen',labelen:'Essen',labelde:'Essen',parentid:'reg.3',show:'true',sort:'119'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.133',label:'Kalmthout',labelnl:'Kalmthout',labelfr:'Kalmthout',labelen:'Kalmthout',labelde:'Kalmthout',parentid:'reg.3',show:'true',sort:'120'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.134',label:'Brasschaat',labelnl:'Brasschaat',labelfr:'Brasschaat',labelen:'Brasschaat',labelde:'Brasschaat',parentid:'reg.3',show:'true',sort:'121'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.135',label:'Stabroek',labelnl:'Stabroek',labelfr:'Stabroek',labelen:'Stabroek',labelde:'Stabroek',parentid:'reg.3',show:'true',sort:'122'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.136',label:'Kapellen',labelnl:'Kapellen',labelfr:'Kapellen',labelen:'Kapellen',labelde:'Kapellen',parentid:'reg.3',show:'true',sort:'123'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.137',label:'Brecht',labelnl:'Brecht',labelfr:'Brecht',labelen:'Brecht',labelde:'Brecht',parentid:'reg.3',show:'true',sort:'124'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.138',label:'Schilde',labelnl:'Schilde',labelfr:'Schilde',labelen:'Schilde',labelde:'Schilde',parentid:'reg.3',show:'true',sort:'125'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.139',label:'Zoersel',labelnl:'Zoersel',labelfr:'Zoersel',labelen:'Zoersel',labelde:'Zoersel',parentid:'reg.3',show:'true',sort:'126'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.140',label:'Wuustwezel',labelnl:'Wuustwezel',labelfr:'Wuustwezel',labelen:'Wuustwezel',labelde:'Wuustwezel',parentid:'reg.3',show:'true',sort:'127'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.141',label:'Leuven',labelnl:'Leuven',labelfr:'Louvain',labelen:'Leuven',labelde:'Löwen',parentid:'reg.16',show:'true',sort:'128'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.142',label:'Herent',labelnl:'Herent',labelfr:'Herent',labelen:'Herent',labelde:'Herent',parentid:'reg.16',show:'true',sort:'129'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.143',label:'Huldenberg',labelnl:'Huldenberg',labelfr:'Huldenberg',labelen:'Huldenberg',labelde:'Huldenberg',parentid:'reg.16',show:'true',sort:'130'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.144',label:'Oud-Heverlee',labelnl:'Oud-Heverlee',labelfr:'Oud-Heverlee',labelen:'Oud-Heverlee',labelde:'Oud-Heverlee',parentid:'reg.16',show:'true',sort:'131'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.145',label:'Bertem',labelnl:'Bertem',labelfr:'Bertem',labelen:'Bertem',labelde:'Bertem',parentid:'reg.16',show:'true',sort:'132'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.146',label:'Kortenberg',labelnl:'Kortenberg',labelfr:'Kortenberg',labelen:'Kortenberg',labelde:'Kortenberg',parentid:'reg.16',show:'true',sort:'133'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.147',label:'Tervuren',labelnl:'Tervuren',labelfr:'Tervuren',labelen:'Tervuren',labelde:'Tervuren',parentid:'reg.16',show:'true',sort:'134'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.148',label:'Overijse',labelnl:'Overijse',labelfr:'Overijse',labelen:'Overijse',labelde:'Overijse',parentid:'reg.16',show:'true',sort:'135'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.149',label:'Rotselaar',labelnl:'Rotselaar',labelfr:'Rotselaar',labelen:'Rotselaar',labelde:'Rotselaar',parentid:'reg.16',show:'true',sort:'136'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.150',label:'Tremelo',labelnl:'Tremelo',labelfr:'Tremelo',labelen:'Tremelo',labelde:'Tremelo',parentid:'reg.16',show:'true',sort:'137'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.151',label:'Begijnendijk',labelnl:'Begijnendijk',labelfr:'Begijnendijk',labelen:'Begijnendijk',labelde:'Begijnendijk',parentid:'reg.16',show:'true',sort:'138'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.152',label:'Keerbergen',labelnl:'Keerbergen',labelfr:'Keerbergen',labelen:'Keerbergen',labelde:'Keerbergen',parentid:'reg.16',show:'true',sort:'139'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.153',label:'Haacht',labelnl:'Haacht',labelfr:'Haacht',labelen:'Haacht',labelde:'Haacht',parentid:'reg.16',show:'true',sort:'140'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.154',label:'Boortmeerbeek',labelnl:'Boortmeerbeek',labelfr:'Boortmeerbeek',labelen:'Boortmeerbeek',labelde:'Boortmeerbeek',parentid:'reg.16',show:'true',sort:'141'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.155',label:'Aarschot',labelnl:'Aarschot',labelfr:'Aarschot',labelen:'Aarschot',labelde:'Aarschot',parentid:'reg.8',show:'true',sort:'142'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.156',label:'Lubbeek',labelnl:'Lubbeek',labelfr:'Lubbeek',labelen:'Lubbeek',labelde:'Lubbeek',parentid:'reg.16',show:'true',sort:'143'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.157',label:'Holsbeek',labelnl:'Holsbeek',labelfr:'Holsbeek',labelen:'Holsbeek',labelde:'Holsbeek',parentid:'reg.16',show:'true',sort:'144'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.158',label:'Scherpenheuvel-Zichem',labelnl:'Scherpenheuvel-Zichem',labelfr:'Montaigu-Zichem',labelen:'Scherpenheuvel-Zichem',labelde:'Scherpenheuvel-Zichem',parentid:'reg.8',show:'true',sort:'145'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.159',label:'Diest',labelnl:'Diest',labelfr:'Diest',labelen:'Diest',labelde:'Diest',parentid:'reg.8',show:'true',sort:'146'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.160',label:'Tienen',labelnl:'Tienen',labelfr:'Tirlemont',labelen:'Tienen',labelde:'Tienen',parentid:'reg.8',show:'true',sort:'147'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.161',label:'Hoegaarden',labelnl:'Hoegaarden',labelfr:'Hoegaarden',labelen:'Hoegaarden',labelde:'Hoegaarden',parentid:'reg.8',show:'true',sort:'148'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.163',label:'Linter',labelnl:'Linter',labelfr:'Linter',labelen:'Linter',labelde:'Linter',parentid:'reg.8',show:'true',sort:'149'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.164',label:'Bierbeek',labelnl:'Bierbeek',labelfr:'Bierbeek',labelen:'Bierbeek',labelde:'Bierbeek',parentid:'reg.16',show:'true',sort:'150'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.165',label:'Boutersem',labelnl:'Boutersem',labelfr:'Boutersem',labelen:'Boutersem',labelde:'Boutersem',parentid:'reg.16',show:'true',sort:'151'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.166',label:'Glabbeek',labelnl:'Glabbeek',labelfr:'Glabbeek',labelen:'Glabbeek',labelde:'Glabbeek',parentid:'reg.8',show:'true',sort:'152'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.167',label:'Tielt-Winge',labelnl:'Tielt-Winge',labelfr:'Tielt-Winge',labelen:'Tielt-Winge',labelde:'Tielt-Winge',parentid:'reg.8',show:'true',sort:'153'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.168',label:'Landen',labelnl:'Landen',labelfr:'Landen',labelen:'Landen',labelde:'Landen',parentid:'reg.8',show:'true',sort:'154'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.169',label:'Zoutleeuw',labelnl:'Zoutleeuw',labelfr:'Léau',labelen:'Zoutleeuw',labelde:'Zoutleeuw',parentid:'reg.8',show:'true',sort:'155'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.170',label:'Geetbets',labelnl:'Geetbets',labelfr:'Geetbets',labelen:'Geetbets',labelde:'Geetbets',parentid:'reg.8',show:'true',sort:'156'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.171',label:'Bekkevoort',labelnl:'Bekkevoort',labelfr:'Bekkevoort',labelen:'Bekkevoort',labelde:'Bekkevoort',parentid:'reg.8',show:'true',sort:'157'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.172',label:'Kortenaken',labelnl:'Kortenaken',labelfr:'Kortenaken',labelen:'Kortenaken',labelde:'Kortenaken',parentid:'reg.8',show:'true',sort:'158'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.173',label:'Hasselt',labelnl:'Hasselt',labelfr:'Hasselt',labelen:'Hasselt',labelde:'Hasselt',parentid:'reg.13',show:'true',sort:'159'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.174',label:'Zonhoven',labelnl:'Zonhoven',labelfr:'Zonhoven',labelen:'Zonhoven',labelde:'Zonhoven',parentid:'reg.13',show:'true',sort:'160'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.175',label:'Houthalen-Helchteren',labelnl:'Houthalen-Helchteren',labelfr:'Houthalen-Helchteren',labelen:'Houthalen-Helchteren',labelde:'Houthalen-Helchteren',parentid:'reg.19',show:'true',sort:'161'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.176',label:'Herk-De-Stad',labelnl:'Herk-De-Stad',labelfr:'Herck-la-Ville',labelen:'Herk-de-Stad',labelde:'Herk-de-Stad',parentid:'reg.13',show:'true',sort:'162'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.177',label:'Halen',labelnl:'Halen',labelfr:'Halen',labelen:'Halen',labelde:'Halen',parentid:'reg.13',show:'true',sort:'163'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.178',label:'Heusden-Zolder',labelnl:'Heusden-Zolder',labelfr:'Heusden-Zolder',labelen:'Heusden-Zolder',labelde:'Heusden-Zolder',parentid:'reg.13',show:'true',sort:'164'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.179',label:'Lummen',labelnl:'Lummen',labelfr:'Lummen',labelen:'Lummen',labelde:'Lummen',parentid:'reg.13',show:'true',sort:'165'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.180',label:'Alken',labelnl:'Alken',labelfr:'Alken',labelen:'Alken',labelde:'Alken',parentid:'reg.27',show:'true',sort:'166'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.181',label:'Beringen',labelnl:'Beringen',labelfr:'Beringen',labelen:'Beringen',labelde:'Beringen',parentid:'reg.13',show:'true',sort:'167'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.182',label:'Diepenbeek',labelnl:'Diepenbeek',labelfr:'Diepenbeek',labelen:'Diepenbeek',labelde:'Diepenbeek',parentid:'reg.13',show:'true',sort:'168'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.183',label:'Genk',labelnl:'Genk',labelfr:'Genk',labelen:'Genk',labelde:'Genk',parentid:'reg.13',show:'true',sort:'169'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.184',label:'Lanaken',labelnl:'Lanaken',labelfr:'Lanaken',labelen:'Lanaken',labelde:'Lanaken',parentid:'reg.27',show:'true',sort:'170'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.185',label:'Maasmechelen',labelnl:'Maasmechelen',labelfr:'Maasmechelen',labelen:'Maasmechelen',labelde:'Maasmechelen',parentid:'reg.27',show:'true',sort:'171'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.186',label:'Kinrooi',labelnl:'Kinrooi',labelfr:'Kinrooi',labelen:'Kinrooi',labelde:'Kinrooi',parentid:'reg.19',show:'true',sort:'172'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.187',label:'Dilsen-Stokkem',labelnl:'Dilsen-Stokkem',labelfr:'Dilsen-Stokkem',labelen:'Dilsen-Stokkem',labelde:'Dilsen-Stokkem',parentid:'reg.19',show:'true',sort:'173'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.188',label:'Opglabbeek',labelnl:'Opglabbeek',labelfr:'Opglabbeek',labelen:'Opglabbeek',labelde:'Opglabbeek',parentid:'reg.13',show:'true',sort:'174'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.189',label:'As',labelnl:'As',labelfr:'As',labelen:'As',labelde:'As',parentid:'reg.13',show:'true',sort:'175'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.190',label:'Meeuwen-Gruitrode',labelnl:'Meeuwen-Gruitrode',labelfr:'Meeuwen-Gruitrode',labelen:'Meeuwen-Gruitrode',labelde:'Meeuwen-Gruitrode',parentid:'reg.19',show:'true',sort:'176'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.191',label:'Maaseik',labelnl:'Maaseik',labelfr:'Maaseik',labelen:'Maaseik',labelde:'Maaseik',parentid:'reg.19',show:'true',sort:'177'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.192',label:'Zutendaal',labelnl:'Zutendaal',labelfr:'Zutendaal',labelen:'Zutendaal',labelde:'Zutendaal',parentid:'reg.13',show:'true',sort:'178'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.193',label:'Tongeren',labelnl:'Tongeren',labelfr:'Tongres',labelen:'Tongeren',labelde:'Tongern',parentid:'reg.27',show:'true',sort:'179'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.194',label:'Herstappe',labelnl:'Herstappe',labelfr:'Herstappe',labelen:'Herstappe',labelde:'Herstappe',parentid:'reg.27',show:'true',sort:'180'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.195',label:'Kortessem',labelnl:'Kortessem',labelfr:'Kortessem',labelen:'Kortessem',labelde:'Kortessem',parentid:'reg.27',show:'true',sort:'181'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.196',label:'Hoeselt',labelnl:'Hoeselt',labelfr:'Hoeselt',labelen:'Hoeselt',labelde:'Hoeselt',parentid:'reg.27',show:'true',sort:'182'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.197',label:'Bilzen',labelnl:'Bilzen',labelfr:'Bilzen',labelen:'Bilzen',labelde:'Bilzen',parentid:'reg.27',show:'true',sort:'183'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.198',label:'Riemst',labelnl:'Riemst',labelfr:'Riemst',labelen:'Riemst',labelde:'Riemst',parentid:'reg.27',show:'true',sort:'184'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.199',label:'Voeren',labelnl:'Voeren',labelfr:'Fourons',labelen:'Voeren',labelde:'Voeren',parentid:'reg.27',show:'true',sort:'185'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.200',label:'Sint-Truiden',labelnl:'Sint-Truiden',labelfr:'Saint-Trond',labelen:'Sint-Truiden',labelde:'Sint-Truiden',parentid:'reg.27',show:'true',sort:'186'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.201',label:'Wellen',labelnl:'Wellen',labelfr:'Wellen',labelen:'Wellen',labelde:'Wellen',parentid:'reg.27',show:'true',sort:'187'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.202',label:'Borgloon',labelnl:'Borgloon',labelfr:'Looz',labelen:'Borgloon',labelde:'Borgloon',parentid:'reg.27',show:'true',sort:'188'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.203',label:'Nieuwerkerken',labelnl:'Nieuwerkerken',labelfr:'Nieuwerkerken',labelen:'Nieuwerkerken',labelde:'Nieuwerkerken',parentid:'reg.13',show:'true',sort:'189'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.204',label:'Heers',labelnl:'Heers',labelfr:'Heers',labelen:'Heers',labelde:'Heers',parentid:'reg.27',show:'true',sort:'190'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.205',label:'Gingelom',labelnl:'Gingelom',labelfr:'Gingelom',labelen:'Gingelom',labelde:'Gingelom',parentid:'reg.27',show:'true',sort:'191'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.206',label:'Overpelt',labelnl:'Overpelt',labelfr:'Overpelt',labelen:'Overpelt',labelde:'Overpelt',parentid:'reg.19',show:'true',sort:'192'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.207',label:'Neerpelt',labelnl:'Neerpelt',labelfr:'Neerpelt',labelen:'Neerpelt',labelde:'Neerpelt',parentid:'reg.19',show:'true',sort:'193'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.208',label:'Lommel',labelnl:'Lommel',labelfr:'Lommel',labelen:'Lommel',labelde:'Lommel',parentid:'reg.19',show:'true',sort:'194'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.209',label:'Hamont-Achel',labelnl:'Hamont-Achel',labelfr:'Hamont-Achel',labelen:'Hamont-Achel',labelde:'Hamont-Achel',parentid:'reg.19',show:'true',sort:'195'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.210',label:'Hechtel-Eksel',labelnl:'Hechtel-Eksel',labelfr:'Hechtel-Eksel',labelen:'Hechtel-Eksel',labelde:'Hechtel-Eksel',parentid:'reg.19',show:'true',sort:'196'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.211',label:'Ham',labelnl:'Ham',labelfr:'Ham',labelen:'Ham',labelde:'Ham',parentid:'reg.13',show:'true',sort:'197'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.212',label:'Bocholt',labelnl:'Bocholt',labelfr:'Bocholt',labelen:'Bocholt',labelde:'Bocholt',parentid:'reg.19',show:'true',sort:'198'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.213',label:'Bree',labelnl:'Bree',labelfr:'Brée',labelen:'Bree',labelde:'Bree',parentid:'reg.19',show:'true',sort:'199'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.214',label:'Leopoldsburg',labelnl:'Leopoldsburg',labelfr:'Bourg-Léopold',labelen:'Leopoldsburg',labelde:'Leopoldsburg',parentid:'reg.13',show:'true',sort:'200'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.215',label:'Tessenderlo',labelnl:'Tessenderlo',labelfr:'Tessenderlo',labelen:'Tessenderlo',labelde:'Tessenderlo',parentid:'reg.13',show:'true',sort:'201'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.216',label:'Peer',labelnl:'Peer',labelfr:'Peer',labelen:'Peer',labelde:'Peer',parentid:'reg.19',show:'true',sort:'202'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.217',label:'Brugge',labelnl:'Brugge',labelfr:'Bruges',labelen:'Bruges',labelde:'Brügge',parentid:'reg.4',show:'true',sort:'203'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.218',label:'Oostkamp',labelnl:'Oostkamp',labelfr:'Oostkamp',labelen:'Oostkamp',labelde:'Oostkamp',parentid:'reg.4',show:'true',sort:'204'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.219',label:'Zedelgem',labelnl:'Zedelgem',labelfr:'Zedelgem',labelen:'Zedelgem',labelde:'Zedelgem',parentid:'reg.4',show:'true',sort:'205'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.220',label:'Knokke-Heist',labelnl:'Knokke-Heist',labelfr:'Knokke-Heist',labelen:'Knokke-Heist',labelde:'Knokke-Heist',parentid:'reg.4',show:'true',sort:'206'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.221',label:'Damme',labelnl:'Damme',labelfr:'Damme',labelen:'Damme',labelde:'Damme',parentid:'reg.4',show:'true',sort:'207'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.222',label:'Blankenberge',labelnl:'Blankenberge',labelfr:'Blankenberge',labelen:'Blankenberge',labelde:'Blankenberge',parentid:'reg.4',show:'true',sort:'208'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.223',label:'Zuienkerke',labelnl:'Zuienkerke',labelfr:'Zuienkerke',labelen:'Zuienkerke',labelde:'Zuienkerke',parentid:'reg.4',show:'true',sort:'209'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.224',label:'Oostende',labelnl:'Oostende',labelfr:'Ostende',labelen:'Ostend',labelde:'Ostende',parentid:'reg.33',show:'true',sort:'210'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.225',label:'De Haan',labelnl:'De Haan',labelfr:'Le Coq',labelen:'De Haan',labelde:'De Haan',parentid:'reg.21',show:'true',sort:'211'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.226',label:'Middelkerke',labelnl:'Middelkerke',labelfr:'Middelkerke',labelen:'Middelkerke',labelde:'Middelkerke',parentid:'reg.33',show:'true',sort:'212'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.227',label:'Bredene',labelnl:'Bredene',labelfr:'Bredene',labelen:'Bredene',labelde:'Bredene',parentid:'reg.21',show:'true',sort:'213'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.228',label:'Oudenburg',labelnl:'Oudenburg',labelfr:'Oudenburg',labelen:'Oudenburg',labelde:'Oudenburg',parentid:'reg.21',show:'true',sort:'214'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.229',label:'Gistel',labelnl:'Gistel',labelfr:'Gistel',labelen:'Gistel',labelde:'Gistel',parentid:'reg.21',show:'true',sort:'215'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.230',label:'Ichtegem',labelnl:'Ichtegem',labelfr:'Ichtegem',labelen:'Ichtegem',labelde:'Ichtegem',parentid:'reg.4',show:'true',sort:'216'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.231',label:'Jabbeke',labelnl:'Jabbeke',labelfr:'Jabbeke',labelen:'Jabbeke',labelde:'Jabbeke',parentid:'reg.4',show:'true',sort:'217'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.232',label:'Kortrijk',labelnl:'Kortrijk',labelfr:'Courtrai',labelen:'Kortrijk',labelde:'Kortrijk',parentid:'reg.15',show:'true',sort:'218'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.233',label:'Kuurne',labelnl:'Kuurne',labelfr:'Cuerne',labelen:'Kuurne',labelde:'Kuurne',parentid:'reg.15',show:'true',sort:'219'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.234',label:'Harelbeke',labelnl:'Harelbeke',labelfr:'Harelbeke',labelen:'Harelbeke',labelde:'Harelbeke',parentid:'reg.15',show:'true',sort:'220'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.235',label:'Deerlijk',labelnl:'Deerlijk',labelfr:'Deerlijk',labelen:'Deerlijk',labelde:'Deerlijk',parentid:'reg.15',show:'true',sort:'221'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.236',label:'Zwevegem',labelnl:'Zwevegem',labelfr:'Zwevegem',labelen:'Zwevegem',labelde:'Zwevegem',parentid:'reg.15',show:'true',sort:'222'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.237',label:'Wevelgem',labelnl:'Wevelgem',labelfr:'Wevelgem',labelen:'Wevelgem',labelde:'Wevelgem',parentid:'reg.15',show:'true',sort:'223'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.238',label:'Anzegem',labelnl:'Anzegem',labelfr:'Anzegem',labelen:'Anzegem',labelde:'Anzegem',parentid:'reg.15',show:'true',sort:'224'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.239',label:'Avelgem',labelnl:'Avelgem',labelfr:'Avelgem',labelen:'Avelgem',labelde:'Avelgem',parentid:'reg.15',show:'true',sort:'225'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.240',label:'Spiere-Helkijn',labelnl:'Spiere-Helkijn',labelfr:'Espierres-Helchin',labelen:'Spiere-Helkijn',labelde:'Spiere-Helkijn',parentid:'reg.15',show:'true',sort:'226'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.241',label:'Diksmuide',labelnl:'Diksmuide',labelfr:'Dixmude',labelen:'Diksmuide',labelde:'Diksmuide',parentid:'reg.9',show:'true',sort:'227'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.242',label:'Kortemark',labelnl:'Kortemark',labelfr:'Kortemark',labelen:'Kortemark',labelde:'Kortemark',parentid:'reg.9',show:'true',sort:'228'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.243',label:'Nieuwpoort',labelnl:'Nieuwpoort',labelfr:'Nieuport',labelen:'Nieuwpoort',labelde:'Nieuwpoort',parentid:'reg.33',show:'true',sort:'229'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.244',label:'Veurne',labelnl:'Veurne',labelfr:'Furnes',labelen:'Veurne',labelde:'Veurne',parentid:'reg.29',show:'true',sort:'230'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.245',label:'Vleteren',labelnl:'Vleteren',labelfr:'Vleteren',labelen:'Vleteren',labelde:'Vleteren',parentid:'reg.14',show:'true',sort:'231'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.246',label:'Lo-Reninge',labelnl:'Lo-Reninge',labelfr:'Lo-Reninge',labelen:'Lo-Reninge',labelde:'Lo-Reninge',parentid:'reg.9',show:'true',sort:'232'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.247',label:'Houthulst',labelnl:'Houthulst',labelfr:'Houthulst',labelen:'Houthulst',labelde:'Houthulst',parentid:'reg.9',show:'true',sort:'233'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.248',label:'De Panne',labelnl:'De Panne',labelfr:'La Panne',labelen:'De Panne',labelde:'De Panne',parentid:'reg.29',show:'true',sort:'234'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.249',label:'Koksijde',labelnl:'Koksijde',labelfr:'Coxyde',labelen:'Koksijde',labelde:'Koksijde',parentid:'reg.33',show:'true',sort:'235'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.250',label:'Koekelare',labelnl:'Koekelare',labelfr:'Koekelare',labelen:'Koekelare',labelde:'Koekelare',parentid:'reg.9',show:'true',sort:'236'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.251',label:'Alveringem',labelnl:'Alveringem',labelfr:'Alveringem',labelen:'Alveringem',labelde:'Alveringem',parentid:'reg.29',show:'true',sort:'237'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.252',label:'Tielt',labelnl:'Tielt',labelfr:'Tielt',labelen:'Tielt',labelde:'Tielt',parentid:'reg.26',show:'true',sort:'238'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.253',label:'Wielsbeke',labelnl:'Wielsbeke',labelfr:'Wielsbeke',labelen:'Wielsbeke',labelde:'Wielsbeke',parentid:'reg.26',show:'true',sort:'239'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.254',label:'Dentergem',labelnl:'Dentergem',labelfr:'Dentergem',labelen:'Dentergem',labelde:'Dentergem',parentid:'reg.26',show:'true',sort:'240'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.255',label:'Beernem',labelnl:'Beernem',labelfr:'Beernem',labelen:'Beernem',labelde:'Beernem',parentid:'reg.4',show:'true',sort:'241'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.256',label:'Pittem',labelnl:'Pittem',labelfr:'Pittem',labelen:'Pittem',labelde:'Pittem',parentid:'reg.26',show:'true',sort:'242'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.257',label:'Wingene',labelnl:'Wingene',labelfr:'Wingene',labelen:'Wingene',labelde:'Wingene',parentid:'reg.26',show:'true',sort:'243'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.258',label:'Ruiselede',labelnl:'Ruiselede',labelfr:'Ruiselede',labelen:'Ruiselede',labelde:'Ruiselede',parentid:'reg.26',show:'true',sort:'244'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.259',label:'Meulebeke',labelnl:'Meulebeke',labelfr:'Meulebeke',labelen:'Meulebeke',labelde:'Meulebeke',parentid:'reg.26',show:'true',sort:'245'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.260',label:'Ingelmunster',labelnl:'Ingelmunster',labelfr:'Ingelmunster',labelen:'Ingelmunster',labelde:'Ingelmunster',parentid:'reg.24',show:'true',sort:'246'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.261',label:'Oostrozebeke',labelnl:'Oostrozebeke',labelfr:'Oostrozebeke',labelen:'Oostrozebeke',labelde:'Oostrozebeke',parentid:'reg.26',show:'true',sort:'247'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.262',label:'Waregem',labelnl:'Waregem',labelfr:'Waregem',labelen:'Waregem',labelde:'Waregem',parentid:'reg.15',show:'true',sort:'248'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.263',label:'Roeselare',labelnl:'Roeselare',labelfr:'Roulers',labelen:'Roeselare',labelde:'Roeselare',parentid:'reg.24',show:'true',sort:'249'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.264',label:'Lichtervelde',labelnl:'Lichtervelde',labelfr:'Lichtervelde',labelen:'Lichtervelde',labelde:'Lichtervelde',parentid:'reg.24',show:'true',sort:'250'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.265',label:'Torhout',labelnl:'Torhout',labelfr:'Torhout',labelen:'Torhout',labelde:'Torhout',parentid:'reg.4',show:'true',sort:'251'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.266',label:'Hooglede',labelnl:'Hooglede',labelfr:'Hooglede',labelen:'Hooglede',labelde:'Hooglede',parentid:'reg.24',show:'true',sort:'252'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.267',label:'Staden',labelnl:'Staden',labelfr:'Staden',labelen:'Staden',labelde:'Staden',parentid:'reg.24',show:'true',sort:'253'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.268',label:'Ardooie',labelnl:'Ardooie',labelfr:'Ardooie',labelen:'Ardooie',labelde:'Ardooie',parentid:'reg.26',show:'true',sort:'254'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.269',label:'Lendelede',labelnl:'Lendelede',labelfr:'Lendelede',labelen:'Lendelede',labelde:'Lendelede',parentid:'reg.15',show:'true',sort:'255'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.270',label:'Izegem',labelnl:'Izegem',labelfr:'Izegem',labelen:'Izegem',labelde:'Izegem',parentid:'reg.24',show:'true',sort:'256'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.271',label:'Ledegem',labelnl:'Ledegem',labelfr:'Ledegem',labelen:'Ledegem',labelde:'Ledegem',parentid:'reg.24',show:'true',sort:'257'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.272',label:'Moorslede',labelnl:'Moorslede',labelfr:'Moorslede',labelen:'Moorslede',labelde:'Moorslede',parentid:'reg.24',show:'true',sort:'258'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.273',label:'Ieper',labelnl:'Ieper',labelfr:'Ypres',labelen:'Ypres',labelde:'Ypern',parentid:'reg.14',show:'true',sort:'259'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.274',label:'Langemark-Poelkapelle',labelnl:'Langemark-Poelkapelle',labelfr:'Langemark-Poelkapelle',labelen:'Langemark-Poelkapelle',labelde:'Langemark-Poelkapelle',parentid:'reg.14',show:'true',sort:'260'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.275',label:'Menen',labelnl:'Menen',labelfr:'Menin',labelen:'Menen',labelde:'Menen',parentid:'reg.15',show:'true',sort:'261'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.276',label:'Wervik',labelnl:'Wervik',labelfr:'Wervik',labelen:'Wervik',labelde:'Wervik',parentid:'reg.15',show:'true',sort:'262'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.277',label:'Heuvelland',labelnl:'Heuvelland',labelfr:'Heuvelland',labelen:'Heuvelland',labelde:'Heuvelland',parentid:'reg.14',show:'true',sort:'263'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.278',label:'Mesen',labelnl:'Mesen',labelfr:'Messines',labelen:'Mesen',labelde:'Mesen',parentid:'reg.14',show:'true',sort:'264'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.279',label:'Messines',labelnl:'Messines',labelfr:'Messines',labelen:'Mesen',labelde:'Mesen',parentid:'reg.14',show:'true',sort:'265'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.280',label:'Poperinge',labelnl:'Poperinge',labelfr:'Poperinghe',labelen:'Poperinge',labelde:'Poperinge',parentid:'reg.14',show:'true',sort:'266'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.281',label:'Zonnebeke',labelnl:'Zonnebeke',labelfr:'Zonnebeke',labelen:'Zonnebeke',labelde:'Zonnebeke',parentid:'reg.14',show:'true',sort:'267'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.282',label:'Gent',labelnl:'Gent',labelfr:'Gand',labelen:'Ghent',labelde:'Gent',parentid:'reg.11',show:'true',sort:'268'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.283',label:'Zelzate',labelnl:'Zelzate',labelfr:'Zelzate',labelen:'Zelzate',labelde:'Zelzate',parentid:'reg.10',show:'true',sort:'269'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.284',label:'Destelbergen',labelnl:'Destelbergen',labelfr:'Destelbergen',labelen:'Destelbergen',labelde:'Destelbergen',parentid:'reg.11',show:'true',sort:'270'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.285',label:'Lochristi',labelnl:'Lochristi',labelfr:'Lochristi',labelen:'Lochristi',labelde:'Lochristi',parentid:'reg.11',show:'true',sort:'271'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.286',label:'Melle',labelnl:'Melle',labelfr:'Melle',labelen:'Melle',labelde:'Melle',parentid:'reg.11',show:'true',sort:'272'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.287',label:'Sint-Niklaas',labelnl:'Sint-Niklaas',labelfr:'Saint-Nicolas',labelen:'Sint-Niklaas',labelde:'Sint-Niklaas',parentid:'reg.25',show:'true',sort:'273'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.288',label:'Beveren-Waas',labelnl:'Beveren-Waas',labelfr:'Beveren',labelen:'Beveren',labelde:'Beveren',parentid:'reg.25',show:'true',sort:'274'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.289',label:'Temse',labelnl:'Temse',labelfr:'Tamise',labelen:'Temse',labelde:'Temse',parentid:'reg.25',show:'true',sort:'275'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.290',label:'Kruibeke',labelnl:'Kruibeke',labelfr:'Kruibeke',labelen:'Kruibeke',labelde:'Kruibeke',parentid:'reg.25',show:'true',sort:'276'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.291',label:'Lokeren',labelnl:'Lokeren',labelfr:'Lokeren',labelen:'Lokeren',labelde:'Lokeren',parentid:'reg.25',show:'true',sort:'277'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.292',label:'Sint-Gillis-Waas',labelnl:'Sint-Gillis-Waas',labelfr:'Saint-Gilles-Waes',labelen:'Sint-Gillis-Waas',labelde:'Sint-Gillis-Waas',parentid:'reg.25',show:'true',sort:'278'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.293',label:'Moerbeke-Waas',labelnl:'Moerbeke-Waas',labelfr:'Moerbeke-Waas',labelen:'Moerbeke-Waas',labelde:'Moerbeke-Waas',parentid:'reg.11',show:'true',sort:'279'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.294',label:'Wachtebeke',labelnl:'Wachtebeke',labelfr:'Wachtebeke',labelen:'Wachtebeke',labelde:'Wachtebeke',parentid:'reg.11',show:'true',sort:'280'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.295',label:'Stekene',labelnl:'Stekene',labelfr:'Stekene',labelen:'Stekene',labelde:'Stekene',parentid:'reg.25',show:'true',sort:'281'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.296',label:'Dendermonde',labelnl:'Dendermonde',labelfr:'Termonde',labelen:'Dendermonde',labelde:'Dendermonde',parentid:'reg.7',show:'true',sort:'282'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.297',label:'Hamme',labelnl:'Hamme',labelfr:'Hamme',labelen:'Hamme',labelde:'Hamme',parentid:'reg.7',show:'true',sort:'283'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.298',label:'Wetteren',labelnl:'Wetteren',labelfr:'Wetteren',labelen:'Wetteren',labelde:'Wetteren',parentid:'reg.7',show:'true',sort:'284'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.299',label:'Zele',labelnl:'Zele',labelfr:'Zele',labelen:'Zele',labelde:'Zele',parentid:'reg.7',show:'true',sort:'285'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.300',label:'Waasmunster',labelnl:'Waasmunster',labelfr:'Waasmunster',labelen:'Waasmunster',labelde:'Waasmunster',parentid:'reg.7',show:'true',sort:'286'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.301',label:'Buggenhout',labelnl:'Buggenhout',labelfr:'Buggenhout',labelen:'Buggenhout',labelde:'Buggenhout',parentid:'reg.7',show:'true',sort:'287'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.302',label:'Wichelen',labelnl:'Wichelen',labelfr:'Wichelen',labelen:'Wichelen',labelde:'Wichelen',parentid:'reg.7',show:'true',sort:'288'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.303',label:'Laarne',labelnl:'Laarne',labelfr:'Laarne',labelen:'Laarne',labelde:'Laarne',parentid:'reg.7',show:'true',sort:'289'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.304',label:'Lebbeke',labelnl:'Lebbeke',labelfr:'Lebbeke',labelen:'Lebbeke',labelde:'Lebbeke',parentid:'reg.7',show:'true',sort:'290'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.305',label:'Berlare',labelnl:'Berlare',labelfr:'Berlare',labelen:'Berlare',labelde:'Berlare',parentid:'reg.7',show:'true',sort:'291'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.306',label:'Aalst',labelnl:'Aalst',labelfr:'Alost',labelen:'Aalst',labelde:'Aalst',parentid:'reg.1',show:'true',sort:'292'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.307',label:'Lede',labelnl:'Lede',labelfr:'Lede',labelen:'Lede',labelde:'Lede',parentid:'reg.1',show:'true',sort:'293'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.309',label:'Ninove',labelnl:'Ninove',labelfr:'Ninove',labelen:'Ninove',labelde:'Ninove',parentid:'reg.1',show:'true',sort:'294'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.310',label:'Erpe-Mere',labelnl:'Erpe-Mere',labelfr:'Erpe-Mere',labelen:'Erpe-Mere',labelde:'Erpe-Mere',parentid:'reg.1',show:'true',sort:'295'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.311',label:'Haaltert',labelnl:'Haaltert',labelfr:'Haaltert',labelen:'Haaltert',labelde:'Haaltert',parentid:'reg.1',show:'true',sort:'296'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.312',label:'Denderleeuw',labelnl:'Denderleeuw',labelfr:'Denderleeuw',labelen:'Denderleeuw',labelde:'Denderleeuw',parentid:'reg.1',show:'true',sort:'297'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.313',label:'Geraardsbergen',labelnl:'Geraardsbergen',labelfr:'Grammont',labelen:'Geraardsbergen',labelde:'Geraardsbergen',parentid:'reg.1',show:'true',sort:'298'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.314',label:'Sint-Lievens-Houtem',labelnl:'Sint-Lievens-Houtem',labelfr:'Hautem-Saint-Liévin',labelen:'Sint-Lievens-Houtem',labelde:'Sint-Lievens-Houtem',parentid:'reg.1',show:'true',sort:'299'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.315',label:'Herzele',labelnl:'Herzele',labelfr:'Herzele',labelen:'Herzele',labelde:'Herzele',parentid:'reg.1',show:'true',sort:'300'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.316',label:'Lierde',labelnl:'Lierde',labelfr:'Lierde',labelen:'Lierde',labelde:'Lierde',parentid:'reg.23',show:'true',sort:'301'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.318',label:'Ronse',labelnl:'Ronse',labelfr:'Renaix',labelen:'Ronse',labelde:'Ronse',parentid:'reg.23',show:'true',sort:'303'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.319',label:'Zottegem',labelnl:'Zottegem',labelfr:'Zottegem',labelen:'Zottegem',labelde:'Zottegem',parentid:'reg.1',show:'true',sort:'304'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.320',label:'Zwalm',labelnl:'Zwalm',labelfr:'Zwalin',labelen:'Zwalm',labelde:'Zwalm',parentid:'reg.23',show:'true',sort:'305'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.321',label:'Brakel',labelnl:'Brakel',labelfr:'Bracle',labelen:'Brakel',labelde:'Brakel',parentid:'reg.23',show:'true',sort:'306'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.322',label:'Horebeke',labelnl:'Horebeke',labelfr:'Horebeke',labelen:'Horebeke',labelde:'Horebeke',parentid:'reg.23',show:'true',sort:'307'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.323',label:'Maarkedal',labelnl:'Maarkedal',labelfr:'Maarkedal',labelen:'Maarkedal',labelde:'Maarkedal',parentid:'reg.23',show:'true',sort:'308'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.324',label:'Kluisbergen',labelnl:'Kluisbergen',labelfr:'Kluisbergen',labelen:'Kluisbergen',labelde:'Kluisbergen',parentid:'reg.23',show:'true',sort:'309'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.325',label:'Oudenaarde',labelnl:'Oudenaarde',labelfr:'Audenarde',labelen:'Oudenaarde',labelde:'Oudenaarde',parentid:'reg.23',show:'true',sort:'310'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.326',label:'Zingem',labelnl:'Zingem',labelfr:'Zingem',labelen:'Zingem',labelde:'Zingem',parentid:'reg.23',show:'true',sort:'311'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.327',label:'Kruishoutem',labelnl:'Kruishoutem',labelfr:'Kruishoutem',labelen:'Kruishoutem',labelde:'Kruishoutem',parentid:'reg.23',show:'true',sort:'312'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.328',label:'Wortegem-Petegem',labelnl:'Wortegem-Petegem',labelfr:'Wortegem-Petegem',labelen:'Wortegem-Petegem',labelde:'Wortegem-Petegem',parentid:'reg.23',show:'true',sort:'313'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.329',label:'Deinze',labelnl:'Deinze',labelfr:'Deinze',labelen:'Deinze',labelde:'Deinze',parentid:'reg.11',show:'true',sort:'314'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.330',label:'Nazareth',labelnl:'Nazareth',labelfr:'Nazareth',labelen:'Nazareth',labelde:'Nazareth',parentid:'reg.11',show:'true',sort:'315'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.331',label:'Merelbeke',labelnl:'Merelbeke',labelfr:'Merelbeke',labelen:'Merelbeke',labelde:'Merelbeke',parentid:'reg.11',show:'true',sort:'316'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.332',label:'Sint-Martens-Latem',labelnl:'Sint-Martens-Latem',labelfr:'Laethem-Saint-Martin',labelen:'Sint-Martens-Latem',labelde:'Sint-Martens-Latem',parentid:'reg.11',show:'true',sort:'317'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.333',label:'De Pinte',labelnl:'De Pinte',labelfr:'De Pinte',labelen:'De Pinte',labelde:'De Pinte',parentid:'reg.11',show:'true',sort:'318'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.334',label:'Nevele',labelnl:'Nevele',labelfr:'Nevele',labelen:'Nevele',labelde:'Nevele',parentid:'reg.11',show:'true',sort:'319'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.335',label:'Oosterzele',labelnl:'Oosterzele',labelfr:'Oosterzele',labelen:'Oosterzele',labelde:'Oosterzele',parentid:'reg.11',show:'true',sort:'320'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.336',label:'Zulte',labelnl:'Zulte',labelfr:'Zulte',labelen:'Zulte',labelde:'Zulte',parentid:'reg.11',show:'true',sort:'321'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.337',label:'Aalter',labelnl:'Aalter',labelfr:'Aalter',labelen:'Aalter',labelde:'Aalter',parentid:'reg.11',show:'true',sort:'322'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.338',label:'Gavere',labelnl:'Gavere',labelfr:'Gavere',labelen:'Gavere',labelde:'Gavere',parentid:'reg.11',show:'true',sort:'323'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.339',label:'Eeklo',labelnl:'Eeklo',labelfr:'Eeklo',labelen:'Eeklo',labelde:'Eeklo',parentid:'reg.10',show:'true',sort:'324'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.340',label:'Knesselare',labelnl:'Knesselare',labelfr:'Knesselare',labelen:'Knesselare',labelde:'Knesselare',parentid:'reg.11',show:'true',sort:'325'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.341',label:'Lovendegem',labelnl:'Lovendegem',labelfr:'Lovendegem',labelen:'Lovendegem',labelde:'Lovendegem',parentid:'reg.11',show:'true',sort:'326'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.342',label:'Zomergem',labelnl:'Zomergem',labelfr:'Zomergem',labelen:'Zomergem',labelde:'Zomergem',parentid:'reg.11',show:'true',sort:'327'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.343',label:'Evergem',labelnl:'Evergem',labelfr:'Evergem',labelen:'Evergem',labelde:'Evergem',parentid:'reg.11',show:'true',sort:'328'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.344',label:'Waarschoot',labelnl:'Waarschoot',labelfr:'Waarschoot',labelen:'Waarschoot',labelde:'Waarschoot',parentid:'reg.11',show:'true',sort:'329'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.345',label:'Assenede',labelnl:'Assenede',labelfr:'Assenede',labelen:'Assenede',labelde:'Assenede',parentid:'reg.10',show:'true',sort:'330'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.346',label:'Kaprijke',labelnl:'Kaprijke',labelfr:'Kaprijke',labelen:'Kaprijke',labelde:'Kaprijke',parentid:'reg.10',show:'true',sort:'331'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.347',label:'Sint-Laureins',labelnl:'Sint-Laureins',labelfr:'Saint-Laurent',labelen:'Sint-Laureins',labelde:'Sint-Laureins',parentid:'reg.10',show:'true',sort:'332'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'flandersregion',enabled:'true',id:'reg.348',label:'Maldegem',labelnl:'Maldegem',labelfr:'Maldegem',labelen:'Maldegem',labelde:'Maldegem',parentid:'reg.10',show:'true',sort:'333'},{createdby:'CultuurNet',creationdate:'2013-03-26T20:53:07',domain:'misc',enabled:'true',id:'11.5.0.0.0',label:'Tijdstippen in overleg',labelnl:'Tijdstippen in overleg',labelfr:'Horaires en négociation',labelen:'Time to be agreed upon',labelde:'',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'',domain:'actortype',enabled:'true',id:'8.60.0.0.0',label:'Groep',labelnl:'Groep',labelfr:'Groupe',labelen:'Group',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'',domain:'misc',enabled:'true',id:'11.6.0.0.0',label:'Ook op verplaatsing',labelnl:'Ook op verplaatsing',labelfr:'Egalement en déplacement',labelen:'Also on location',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'',domain:'misc',enabled:'true',id:'11.7.0.0.0',label:'Specifiek voor scholen',labelnl:'Specifiek voor scholen',labelfr:'Spécifique pour écoles',labelen:'For schools only',show:'true',sort:'0'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1565',label:'1000 Brussel',labelnl:'1000 Brussel',labelfr:'1000 Bruxelles',labelen:'1000 Brussels',labelde:'1000 Brüssel',parentid:'reg.34',show:'true',sort:'334'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1566',label:'1020 Laken (Brussel)',labelnl:'1020 Laken (Brussel)',labelfr:'1020 Laeken',labelen:'1020 Laeken',labelde:'1020 Laken',parentid:'reg.34',show:'true',sort:'335'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1567',label:'1030 Schaarbeek (Brussel)',labelnl:'1030 Schaarbeek (Brussel)',labelfr:'1030 Schaerbeek',labelen:'1030 Schaerbeek',labelde:'1030 Schaarbeek',parentid:'reg.34',show:'true',sort:'336'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1568',label:'1040 Etterbeek (Brussel)',labelnl:'1040 Etterbeek (Brussel)',labelfr:'1040 Etterbeek',labelen:'1040 Etterbeek',labelde:'1040 Etterbeek',parentid:'reg.34',show:'true',sort:'337'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1569',label:'1050 Elsene (Brussel)',labelnl:'1050 Elsene (Brussel)',labelfr:'1050 Ixelles',labelen:'1050 Ixelles',labelde:'1050 Elsene',parentid:'reg.34',show:'true',sort:'338'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1570',label:'1060 Sint-Gillis (Brussel)',labelnl:'1060 Sint-Gillis (Brussel)',labelfr:'1060 Saint-Gilles',labelen:'1060 Saint-Gilles',labelde:'1060 Sint-Gillis',parentid:'reg.34',show:'true',sort:'339'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1571',label:'1070 Anderlecht (Brussel)',labelnl:'1070 Anderlecht (Brussel)',labelfr:'1070 Anderlecht',labelen:'1070 Anderlecht',labelde:'1070 Anderlecht',parentid:'reg.34',show:'true',sort:'340'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1572',label:'1080 Sint-Jans-Molenbeek (Brussel)',labelnl:'1080 Sint-Jans-Molenbeek (Brussel)',labelfr:'1080 Molenbeek-Saint-Jean',labelen:'1080 Sint-Jans-Molenbeek',labelde:'1080 Sint-Jans-Molenbeek',parentid:'reg.34',show:'true',sort:'341'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1573',label:'1081 Koekelberg (Brussel)',labelnl:'1081 Koekelberg (Brussel)',labelfr:'1081 Koekelberg',labelen:'1081 Koekelberg',labelde:'1081 Koekelberg',parentid:'reg.34',show:'true',sort:'342'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1574',label:'1082 Sint-Agatha-Berchem (Brussel)',labelnl:'1082 Sint-Agatha-Berchem (Brussel)',labelfr:'1082 Berchem-Sainte-Agathe',labelen:'1082 Sint-Agatha-Berchem',labelde:'1082 Sint-Agatha-Berchem',parentid:'reg.34',show:'true',sort:'343'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1575',label:'1083 Ganshoren (Brussel)',labelnl:'1083 Ganshoren (Brussel)',labelfr:'1083 Ganshoren',labelen:'1083 Ganshoren',labelde:'1083 Ganshoren',parentid:'reg.34',show:'true',sort:'344'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1576',label:'1090 Jette (Brussel)',labelnl:'1090 Jette (Brussel)',labelfr:'1090 Jette',labelen:'1090 Jette',labelde:'1090 Jette',parentid:'reg.34',show:'true',sort:'345'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1577',label:'1120 Neder-Over-Heembeek (Brussel)',labelnl:'1120 Neder-Over-Heembeek (Brussel)',labelfr:'1120 Neder-Over-Heembeek',labelen:'1120 Neder-Over-Heembeek',labelde:'1120 Neder-Over-Heembeek',parentid:'reg.34',show:'true',sort:'346'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1578',label:'1130 Haren (Brussel)',labelnl:'1130 Haren (Brussel)',labelfr:'1130 Haren',labelen:'1130 Haren',labelde:'1130 Haren',parentid:'reg.34',show:'true',sort:'347'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1579',label:'1140 Evere (Brussel)',labelnl:'1140 Evere (Brussel)',labelfr:'1140 Evere',labelen:'1140 Evere',labelde:'1140 Evere',parentid:'reg.34',show:'true',sort:'348'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1580',label:'1150 Sint-Pieters-Woluwe (Brussel)',labelnl:'1150 Sint-Pieters-Woluwe (Brussel)',labelfr:'1150 Woluwe-Saint-Pierre',labelen:'1150 Woluwe-Saint-Pierre',labelde:'1150 Sint-Pieters-Woluwe',parentid:'reg.34',show:'true',sort:'349'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1581',label:'1160 Oudergem (Brussel)',labelnl:'1160 Oudergem (Brussel)',labelfr:'1160 Auderghem',labelen:'1160 Auderghem',labelde:'1160 Oudergem',parentid:'reg.34',show:'true',sort:'350'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1582',label:'1170 Watermaal-Bosvoorde (Brussel)',labelnl:'1170 Watermaal-Bosvoorde (Brussel)',labelfr:'1170 Watermael-Boitsfort',labelen:'1170 Watermael-Boitsfort',labelde:'1170 Watermaal-Bosvoorde',parentid:'reg.34',show:'true',sort:'351'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1583',label:'1180 Ukkel (Brussel)',labelnl:'1180 Ukkel (Brussel)',labelfr:'1180 Uccle',labelen:'1180 Uccle',labelde:'1180 Ukkel',parentid:'reg.34',show:'true',sort:'352'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1584',label:'1190 Vorst (Brussel)',labelnl:'1190 Vorst (Brussel)',labelfr:'1190 Forest',labelen:'1190 Forest',labelde:'1190 Vorst',parentid:'reg.34',show:'true',sort:'353'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1585',label:'1200 Sint-Lambrechts-Woluwe (Brussel)',labelnl:'1200 Sint-Lambrechts-Woluwe (Brussel)',labelfr:'1200 Woluwe-Saint-Lambert',labelen:'1200 Woluwe-Saint-Lambert',labelde:'1200 Sint-Lambrechts-Woluwe',parentid:'reg.34',show:'true',sort:'354'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1586',label:'1210 Sint-Joost-Ten-Node (Brussel)',labelnl:'1210 Sint-Joost-Ten-Node (Brussel)',labelfr:'1210 Saint-Josse-ten-Noode',labelen:'1210 Saint-Josse-ten-Noode',labelde:'1210 Sint-Joost-ten-Noode',parentid:'reg.34',show:'true',sort:'355'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.371',label:'1500 Halle',labelnl:'1500 Halle',labelfr:'1500 Hal',labelen:'1500 Halle',labelde:'1500 Halle',parentid:'reg.35',show:'true',sort:'356'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.372',label:'1501 Buizingen (Halle)',labelnl:'1501 Buizingen (Halle)',labelfr:'1501 Buizingen',labelen:'1501 Buizingen',labelde:'1501 Buizingen',parentid:'reg.35',show:'true',sort:'357'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.373',label:'1502 Lembeek (Halle)',labelnl:'1502 Lembeek (Halle)',labelfr:'1502 Lembeek',labelen:'1502 Lembeek',labelde:'1502 Lembeek',parentid:'reg.35',show:'true',sort:'358'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.374',label:'1540 Herne',labelnl:'1540 Herne',labelfr:'1540 Hérinnes',labelen:'1540 Herne',labelde:'1540 Herne',parentid:'reg.36',show:'true',sort:'359'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.375',label:'1540 Herfelingen (Herne)',labelnl:'1540 Herfelingen (Herne)',labelfr:'1540 Herfelingen',labelen:'1540 Herfelingen',labelde:'1540 Herfelingen',parentid:'reg.36',show:'true',sort:'360'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.376',label:'1541 Sint-Pieters-Kapelle (Herne)',labelnl:'1541 Sint-Pieters-Kapelle (Herne)',labelfr:'1541 Chapelle-Saint-Pierre',labelen:'1541 Sint-Pieters-Kapelle',labelde:'1541 Sint-Pieters-Kapelle',parentid:'reg.36',show:'true',sort:'361'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.377',label:'1547 Bever',labelnl:'1547 Bever',labelfr:'1547 Biévène',labelen:'1547 Bever',labelde:'1547 Bever',parentid:'reg.37',show:'true',sort:'362'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.378',label:'1547 Biévène',labelnl:'1547 Biévène',labelfr:'1547 Biévène',labelen:'1547 Bever',labelde:'1547 Bever',parentid:'reg.38',show:'true',sort:'363'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.379',label:'1560 Hoeilaart',labelnl:'1560 Hoeilaart',labelfr:'1560 Hoeilaart',labelen:'1560 Hoeilaart',labelde:'1560 Hoeilaart',parentid:'reg.39',show:'true',sort:'364'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.380',label:'1570 Galmaarden',labelnl:'1570 Galmaarden',labelfr:'1570 Gammerages',labelen:'1570 Galmaarden',labelde:'1570 Galmaarden',parentid:'reg.40',show:'true',sort:'365'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.381',label:'1570 Tollembeek (Galmaarden)',labelnl:'1570 Tollembeek (Galmaarden)',labelfr:'1570 Tollembeek',labelen:'1570 Tollembeek',labelde:'1570 Tollembeek',parentid:'reg.40',show:'true',sort:'366'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.382',label:'1570 Vollezele (Galmaarden)',labelnl:'1570 Vollezele (Galmaarden)',labelfr:'1570 Vollezele',labelen:'1570 Vollezele',labelde:'1570 Vollezele',parentid:'reg.40',show:'true',sort:'367'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.383',label:'1600 Sint-Pieters-Leeuw',labelnl:'1600 Sint-Pieters-Leeuw',labelfr:'1600 Leeuw-Saint-Pierre',labelen:'1600 Sint-Pieters-Leeuw',labelde:'1600 Sint-Pieters-Leeuw',parentid:'reg.41',show:'true',sort:'368'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.384',label:'1600 Oudenaken (Sint-Pieters-Leeuw)',labelnl:'1600 Oudenaken (Sint-Pieters-Leeuw)',labelfr:'1600 Oudenaken',labelen:'1600 Oudenaken',labelde:'1600 Oudenaken',parentid:'reg.41',show:'true',sort:'369'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.385',label:'1600 Sint-Laureins-Berchem (Sint-Pieters-Leeuw)',labelnl:'1600 Sint-Laureins-Berchem (Sint-Pieters-Leeuw)',labelfr:'1600 Sint-Laureins-Berchem',labelen:'1600 Sint-Laureins-Berchem',labelde:'1600 Sint-Laureins-Berchem',parentid:'reg.41',show:'true',sort:'370'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.386',label:'1601 Ruisbroek (Sint-Pieters-Leeuw)',labelnl:'1601 Ruisbroek (Sint-Pieters-Leeuw)',labelfr:'1601 Ruisbroek',labelen:'1601 Ruisbroek',labelde:'1601 Ruisbroek',parentid:'reg.41',show:'true',sort:'371'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.387',label:'1602 Vlezenbeek (Sint-Pieters-Leeuw)',labelnl:'1602 Vlezenbeek (Sint-Pieters-Leeuw)',labelfr:'1602 Vlezenbeek',labelen:'1602 Vlezenbeek',labelde:'1602 Vlezenbeek',parentid:'reg.41',show:'true',sort:'372'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.388',label:'1620 Drogenbos',labelnl:'1620 Drogenbos',labelfr:'1620 Drogenbos',labelen:'1620 Drogenbos',labelde:'1620 Drogenbos',parentid:'reg.42',show:'true',sort:'373'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.389',label:'1630 Linkebeek',labelnl:'1630 Linkebeek',labelfr:'1630 Linkebeek',labelen:'1630 Linkebeek',labelde:'1630 Linkebeek',parentid:'reg.43',show:'true',sort:'374'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.390',label:'1640 Sint-Genesius-Rode',labelnl:'1640 Sint-Genesius-Rode',labelfr:'1640 Rhode-Saint-Genèse',labelen:'1640 Sint-Genesius-Rode',labelde:'1640 Sint-Genesius-Rode',parentid:'reg.44',show:'true',sort:'375'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.391',label:'1650 Beersel',labelnl:'1650 Beersel',labelfr:'1650 Beersel',labelen:'1650 Beersel',labelde:'1650 Beersel',parentid:'reg.45',show:'true',sort:'376'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.392',label:'1651 Lot (Beersel)',labelnl:'1651 Lot (Beersel)',labelfr:'1651 Lot',labelen:'1651 Lot',labelde:'1651 Lot',parentid:'reg.45',show:'true',sort:'377'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.393',label:'1652 Alsemberg (Beersel)',labelnl:'1652 Alsemberg (Beersel)',labelfr:'1652 Alsemberg',labelen:'1652 Alsemberg',labelde:'1652 Alsemberg',parentid:'reg.45',show:'true',sort:'378'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.394',label:'1653 Dworp (Beersel)',labelnl:'1653 Dworp (Beersel)',labelfr:'1653 Tourneppe',labelen:'1653 Dworp',labelde:'1653 Dworp',parentid:'reg.45',show:'true',sort:'379'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.395',label:'1654 Huizingen (Beersel)',labelnl:'1654 Huizingen (Beersel)',labelfr:'1654 Huizingen',labelen:'1654 Huizingen',labelde:'1654 Huizingen',parentid:'reg.45',show:'true',sort:'380'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.396',label:'1670 Pepingen',labelnl:'1670 Pepingen',labelfr:'1670 Pepingen',labelen:'1670 Pepingen',labelde:'1670 Pepingen',parentid:'reg.46',show:'true',sort:'381'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.397',label:'1670 Bogaarden (Pepingen)',labelnl:'1670 Bogaarden (Pepingen)',labelfr:'1670 Bogaarden',labelen:'1670 Bogaarden',labelde:'1670 Bogaarden',parentid:'reg.46',show:'true',sort:'382'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.398',label:'1670 Heikruis (Pepingen)',labelnl:'1670 Heikruis (Pepingen)',labelfr:'1670 Haute-Croix',labelen:'1670 Heikruis',labelde:'1670 Heikruis',parentid:'reg.46',show:'true',sort:'383'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.399',label:'1671 Elingen (Pepingen)',labelnl:'1671 Elingen (Pepingen)',labelfr:'1671 Elingen',labelen:'1671 Elingen',labelde:'1671 Elingen',parentid:'reg.46',show:'true',sort:'384'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.400',label:'1673 Beert (Pepingen)',labelnl:'1673 Beert (Pepingen)',labelfr:'1673 Beert',labelen:'1673 Beert',labelde:'1673 Beert',parentid:'reg.46',show:'true',sort:'385'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.401',label:'1674 Bellingen (Pepingen)',labelnl:'1674 Bellingen (Pepingen)',labelfr:'1674 Bellingen',labelen:'1674 Bellingen',labelde:'1674 Bellingen',parentid:'reg.46',show:'true',sort:'386'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.402',label:'1700 Dilbeek',labelnl:'1700 Dilbeek',labelfr:'1700 Dilbeek',labelen:'1700 Dilbeek',labelde:'1700 Dilbeek',parentid:'reg.47',show:'true',sort:'387'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.403',label:'1700 Sint-Martens-Bodegem (Dilbeek)',labelnl:'1700 Sint-Martens-Bodegem (Dilbeek)',labelfr:'1700 Bodeghem-Saint-Martin',labelen:'1700 Sint-Martens-Bodegem',labelde:'1700 Sint-Martens-Bodegem',parentid:'reg.47',show:'true',sort:'388'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.404',label:'1700 Sint-Ulriks-Kapelle (Dilbeek)',labelnl:'1700 Sint-Ulriks-Kapelle (Dilbeek)',labelfr:'1700 Sint-Ulriks-Kapelle',labelen:'1700 Sint-Ulriks-Kapelle',labelde:'1700 Sint-Ulriks-Kapelle',parentid:'reg.47',show:'true',sort:'389'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.405',label:'1701 Itterbeek (Dilbeek)',labelnl:'1701 Itterbeek (Dilbeek)',labelfr:'1701 Itterbeek',labelen:'1701 Itterbeek',labelde:'1701 Itterbeek',parentid:'reg.47',show:'true',sort:'390'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.406',label:'1702 Groot-Bijgaarden (Dilbeek)',labelnl:'1702 Groot-Bijgaarden (Dilbeek)',labelfr:'1702 Grand-Bigard',labelen:'1702 Groot-Bijgaarden',labelde:'1702 Groot-Bijgaarden',parentid:'reg.47',show:'true',sort:'391'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.407',label:'1703 Schepdaal (Dilbeek)',labelnl:'1703 Schepdaal (Dilbeek)',labelfr:'1703 Schepdaal',labelen:'1703 Schepdaal',labelde:'1703 Schepdaal',parentid:'reg.47',show:'true',sort:'392'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.408',label:'1730 Asse',labelnl:'1730 Asse',labelfr:'1730 Asse',labelen:'1730 Asse',labelde:'1730 Asse',parentid:'reg.48',show:'true',sort:'393'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.409',label:'1730 Bekkerzeel (Asse)',labelnl:'1730 Bekkerzeel (Asse)',labelfr:'1730 Bekkerzeel',labelen:'1730 Bekkerzeel',labelde:'1730 Bekkerzeel',parentid:'reg.48',show:'true',sort:'394'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.410',label:'1730 Kobbegem (Asse)',labelnl:'1730 Kobbegem (Asse)',labelfr:'1730 Kobbeghem',labelen:'1730 Kobbegem',labelde:'1730 Kobbegem',parentid:'reg.48',show:'true',sort:'395'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.411',label:'1730 Mollem (Asse)',labelnl:'1730 Mollem (Asse)',labelfr:'1730 Mollem',labelen:'1730 Mollem',labelde:'1730 Mollem',parentid:'reg.48',show:'true',sort:'396'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.412',label:'1731 Relegem (Asse)',labelnl:'1731 Relegem (Asse)',labelfr:'1731 Releghem',labelen:'1731 Relegem',labelde:'1731 Relegem',parentid:'reg.48',show:'true',sort:'397'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.413',label:'1731 Zellik (Asse)',labelnl:'1731 Zellik (Asse)',labelfr:'1731 Zellik',labelen:'1731 Zellik',labelde:'1731 Zellik',parentid:'reg.48',show:'true',sort:'398'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.414',label:'1740 Ternat',labelnl:'1740 Ternat',labelfr:'1740 Ternat',labelen:'1740 Ternat',labelde:'1740 Ternat',parentid:'reg.49',show:'true',sort:'399'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.415',label:'1741 Wambeek (Ternat)',labelnl:'1741 Wambeek (Ternat)',labelfr:'1741 Wambeek',labelen:'1741 Wambeek',labelde:'1741 Wambeek',parentid:'reg.49',show:'true',sort:'400'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.416',label:'1742 Sint-Katherina-Lombeek (Ternat)',labelnl:'1742 Sint-Katherina-Lombeek (Ternat)',labelfr:'1742 Sint-Katherina-Lombeek',labelen:'1742 Sint-Katherina-Lombeek',labelde:'1742 Sint-Katherina-Lombeek',parentid:'reg.49',show:'true',sort:'401'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.417',label:'1745 Opwijk',labelnl:'1745 Opwijk',labelfr:'1745 Opwijk',labelen:'1745 Opwijk',labelde:'1745 Opwijk',parentid:'reg.50',show:'true',sort:'402'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.418',label:'1745 Mazenzele (Opwijk)',labelnl:'1745 Mazenzele (Opwijk)',labelfr:'1745 Mazenzele',labelen:'1745 Mazenzele',labelde:'1745 Mazenzele',parentid:'reg.50',show:'true',sort:'403'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.419',label:'1750 Lennik',labelnl:'1750 Lennik',labelfr:'1750 Lennik',labelen:'1750 Lennik',labelde:'1750 Lennik',parentid:'reg.51',show:'true',sort:'404'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.420',label:'1750 Gaasbeek (Lennik)',labelnl:'1750 Gaasbeek (Lennik)',labelfr:'1750 Gaasbeek',labelen:'1750 Gaasbeek',labelde:'1750 Gaasbeek',parentid:'reg.51',show:'true',sort:'405'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.421',label:'1750 Sint-Kwintens-Lennik (Lennik)',labelnl:'1750 Sint-Kwintens-Lennik (Lennik)',labelfr:'1750 Sint-Kwintens-Lennik',labelen:'1750 Sint-Kwintens-Lennik',labelde:'1750 Sint-Kwintens-Lennik',parentid:'reg.51',show:'true',sort:'406'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.422',label:'1750 Sint-Martens-Lennik (Lennik)',labelnl:'1750 Sint-Martens-Lennik (Lennik)',labelfr:'1750 Sint-Martens-Lennik',labelen:'1750 Sint-Martens-Lennik',labelde:'1750 Sint-Martens-Lennik',parentid:'reg.51',show:'true',sort:'407'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.423',label:'1755 Gooik',labelnl:'1755 Gooik',labelfr:'1755 Gooik',labelen:'1755 Gooik',labelde:'1755 Gooik',parentid:'reg.52',show:'true',sort:'408'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.424',label:'1755 Kester (Gooik)',labelnl:'1755 Kester (Gooik)',labelfr:'1755 Kester',labelen:'1755 Kester',labelde:'1755 Kester',parentid:'reg.52',show:'true',sort:'409'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.425',label:'1755 Leerbeek (Gooik)',labelnl:'1755 Leerbeek (Gooik)',labelfr:'1755 Leerbeek',labelen:'1755 Leerbeek',labelde:'1755 Leerbeek',parentid:'reg.52',show:'true',sort:'410'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.426',label:'1755 Oetingen (Gooik)',labelnl:'1755 Oetingen (Gooik)',labelfr:'1755 Oetingen',labelen:'1755 Oetingen',labelde:'1755 Oetingen',parentid:'reg.52',show:'true',sort:'411'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.427',label:'1760 Roosdaal',labelnl:'1760 Roosdaal',labelfr:'1760 Roosdaal',labelen:'1760 Roosdaal',labelde:'1760 Roosdaal',parentid:'reg.53',show:'true',sort:'412'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.428',label:'1760 Onze-Lieve-Vrouw-Lombeek (Roosdaal)',labelnl:'1760 Onze-Lieve-Vrouw-Lombeek (Roosdaal)',labelfr:'1760 Lombeek-Notre-Dame',labelen:'1760 Onze-Lieve-Vrouw-Lombeek',labelde:'1760 Onze-Lieve-Vrouw-Lombeek',parentid:'reg.53',show:'true',sort:'413'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.429',label:'1760 Pamel (Roosdaal)',labelnl:'1760 Pamel (Roosdaal)',labelfr:'1760 Pamel',labelen:'1760 Pamel',labelde:'1760 Pamel',parentid:'reg.53',show:'true',sort:'414'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.430',label:'1760 Strijtem (Roosdaal)',labelnl:'1760 Strijtem (Roosdaal)',labelfr:'1760 Strijtem',labelen:'1760 Strijtem',labelde:'1760 Strijtem',parentid:'reg.53',show:'true',sort:'415'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.431',label:'1761 Borchtlombeek (Roosdaal)',labelnl:'1761 Borchtlombeek (Roosdaal)',labelfr:'1761 Borchtlombeek',labelen:'1761 Borchtlombeek',labelde:'1761 Borchtlombeek',parentid:'reg.53',show:'true',sort:'416'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.432',label:'1770 Liedekerke',labelnl:'1770 Liedekerke',labelfr:'1770 Liedekerke',labelen:'1770 Liedekerke',labelde:'1770 Liedekerke',parentid:'reg.54',show:'true',sort:'417'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.433',label:'1780 Wemmel',labelnl:'1780 Wemmel',labelfr:'1780 Wemmel',labelen:'1780 Wemmel',labelde:'1780 Wemmel',parentid:'reg.55',show:'true',sort:'418'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.434',label:'1785 Merchtem',labelnl:'1785 Merchtem',labelfr:'1785 Merchtem',labelen:'1785 Merchtem',labelde:'1785 Merchtem',parentid:'reg.56',show:'true',sort:'419'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.435',label:'1785 Brussegem (Merchtem)',labelnl:'1785 Brussegem (Merchtem)',labelfr:'1785 Brussegem',labelen:'1785 Brussegem',labelde:'1785 Brussegem',parentid:'reg.56',show:'true',sort:'420'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.436',label:'1785 Hamme (Merchtem)',labelnl:'1785 Hamme (Merchtem)',labelfr:'1785 Hamme',labelen:'1785 Hamme',labelde:'1785 Hamme',parentid:'reg.56',show:'true',sort:'421'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.437',label:'1790 Affligem',labelnl:'1790 Affligem',labelfr:'1790 Affligem',labelen:'1790 Affligem',labelde:'1790 Affligem',parentid:'reg.57',show:'true',sort:'422'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.438',label:'1790 Essene (Affligem)',labelnl:'1790 Essene (Affligem)',labelfr:'1790 Essene',labelen:'1790 Essene',labelde:'1790 Essene',parentid:'reg.57',show:'true',sort:'423'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.439',label:'1790 Hekelgem (Affligem)',labelnl:'1790 Hekelgem (Affligem)',labelfr:'1790 Hekelgem',labelen:'1790 Hekelgem',labelde:'1790 Hekelgem',parentid:'reg.57',show:'true',sort:'424'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.440',label:'1790 Teralfene (Affligem)',labelnl:'1790 Teralfene (Affligem)',labelfr:'1790 Teralfene',labelen:'1790 Teralfene',labelde:'1790 Teralfene',parentid:'reg.57',show:'true',sort:'425'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.441',label:'1800 Vilvoorde',labelnl:'1800 Vilvoorde',labelfr:'1800 Vilvorde',labelen:'1800 Vilvoorde',labelde:'1800 Vilvoorde',parentid:'reg.58',show:'true',sort:'426'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.442',label:'1800 Peutie (Vilvoorde)',labelnl:'1800 Peutie (Vilvoorde)',labelfr:'1800 Peutie',labelen:'1800 Peutie',labelde:'1800 Peutie',parentid:'reg.58',show:'true',sort:'427'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.443',label:'1820 Steenokkerzeel',labelnl:'1820 Steenokkerzeel',labelfr:'1820 Steenokkerzeel',labelen:'1820 Steenokkerzeel',labelde:'1820 Steenokkerzeel',parentid:'reg.59',show:'true',sort:'428'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.444',label:'1820 Melsbroek (Steenokkerzeel)',labelnl:'1820 Melsbroek (Steenokkerzeel)',labelfr:'1820 Melsbroek',labelen:'1820 Melsbroek',labelde:'1820 Melsbroek',parentid:'reg.59',show:'true',sort:'429'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.445',label:'1820 Perk (Steenokkerzeel)',labelnl:'1820 Perk (Steenokkerzeel)',labelfr:'1820 Perk',labelen:'1820 Perk',labelde:'1820 Perk',parentid:'reg.59',show:'true',sort:'430'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.446',label:'1830 Machelen',labelnl:'1830 Machelen',labelfr:'1830 Machelen',labelen:'1830 Machelen',labelde:'1830 Machelen',parentid:'reg.60',show:'true',sort:'431'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.447',label:'1831 Diegem (Machelen)',labelnl:'1831 Diegem (Machelen)',labelfr:'1831 Diegem',labelen:'1831 Diegem',labelde:'1831 Diegem',parentid:'reg.60',show:'true',sort:'432'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.448',label:'1840 Londerzeel',labelnl:'1840 Londerzeel',labelfr:'1840 Londerzeel',labelen:'1840 Londerzeel',labelde:'1840 Londerzeel',parentid:'reg.61',show:'true',sort:'433'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.449',label:'1840 Malderen (Londerzeel)',labelnl:'1840 Malderen (Londerzeel)',labelfr:'1840 Malderen',labelen:'1840 Malderen',labelde:'1840 Malderen',parentid:'reg.61',show:'true',sort:'434'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.450',label:'1840 Steenhuffel (Londerzeel)',labelnl:'1840 Steenhuffel (Londerzeel)',labelfr:'1840 Steenhuffel',labelen:'1840 Steenhuffel',labelde:'1840 Steenhuffel',parentid:'reg.61',show:'true',sort:'435'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.451',label:'1850 Grimbergen',labelnl:'1850 Grimbergen',labelfr:'1850 Grimbergen',labelen:'1850 Grimbergen',labelde:'1850 Grimbergen',parentid:'reg.62',show:'true',sort:'436'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.452',label:'1851 Humbeek (Grimbergen)',labelnl:'1851 Humbeek (Grimbergen)',labelfr:'1851 Humbeek',labelen:'1851 Humbeek',labelde:'1851 Humbeek',parentid:'reg.62',show:'true',sort:'437'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.453',label:'1852 Beigem (Grimbergen)',labelnl:'1852 Beigem (Grimbergen)',labelfr:'1852 Beigem',labelen:'1852 Beigem',labelde:'1852 Beigem',parentid:'reg.62',show:'true',sort:'438'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.454',label:'1853 Strombeek-Bever (Grimbergen)',labelnl:'1853 Strombeek-Bever (Grimbergen)',labelfr:'1853 Strombeek-Bever',labelen:'1853 Strombeek-Bever',labelde:'1853 Strombeek-Bever',parentid:'reg.62',show:'true',sort:'439'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.455',label:'1860 Meise',labelnl:'1860 Meise',labelfr:'1860 Meise',labelen:'1860 Meise',labelde:'1860 Meise',parentid:'reg.63',show:'true',sort:'440'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.456',label:'1861 Wolvertem (Meise)',labelnl:'1861 Wolvertem (Meise)',labelfr:'1861 Wolvertem',labelen:'1861 Wolvertem',labelde:'1861 Wolvertem',parentid:'reg.63',show:'true',sort:'441'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.457',label:'1880 Kapelle-Op-Den-Bos',labelnl:'1880 Kapelle-Op-Den-Bos',labelfr:'1880 Kapelle-op-den-Bos',labelen:'1880 Kapelle-op-den-Bos',labelde:'1880 Kapelle-op-den-Bos',parentid:'reg.64',show:'true',sort:'442'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.458',label:'1880 Nieuwenrode (Kapelle-Op-Den-Bos)',labelnl:'1880 Nieuwenrode (Kapelle-Op-Den-Bos)',labelfr:'1880 Nieuwenrode',labelen:'1880 Nieuwenrode',labelde:'1880 Nieuwenrode',parentid:'reg.64',show:'true',sort:'443'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.459',label:'1880 Ramsdonk (Kapelle-Op-Den-Bos)',labelnl:'1880 Ramsdonk (Kapelle-Op-Den-Bos)',labelfr:'1880 Ramsdonk',labelen:'1880 Ramsdonk',labelde:'1880 Ramsdonk',parentid:'reg.64',show:'true',sort:'444'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.460',label:'1910 Kampenhout',labelnl:'1910 Kampenhout',labelfr:'1910 Kampenhout',labelen:'1910 Kampenhout',labelde:'1910 Kampenhout',parentid:'reg.65',show:'true',sort:'445'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.461',label:'1910 Berg (Kampenhout)',labelnl:'1910 Berg (Kampenhout)',labelfr:'1910 Berg',labelen:'1910 Berg',labelde:'1910 Berg',parentid:'reg.65',show:'true',sort:'446'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.462',label:'1910 Buken (Kampenhout)',labelnl:'1910 Buken (Kampenhout)',labelfr:'1910 Buken',labelen:'1910 Buken',labelde:'1910 Buken',parentid:'reg.65',show:'true',sort:'447'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.463',label:'1910 Nederokkerzeel (Kampenhout)',labelnl:'1910 Nederokkerzeel (Kampenhout)',labelfr:'1910 Nederokkerzeel',labelen:'1910 Nederokkerzeel',labelde:'1910 Nederokkerzeel',parentid:'reg.65',show:'true',sort:'448'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.464',label:'1930 Zaventem',labelnl:'1930 Zaventem',labelfr:'1930 Zaventem',labelen:'1930 Zaventem',labelde:'1930 Zaventem',parentid:'reg.66',show:'true',sort:'449'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.465',label:'1930 Nossegem (Zaventem)',labelnl:'1930 Nossegem (Zaventem)',labelfr:'1930 Nossegem',labelen:'1930 Nossegem',labelde:'1930 Nossegem',parentid:'reg.66',show:'true',sort:'450'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.466',label:'1932 Sint-Stevens-Woluwe (Zaventem)',labelnl:'1932 Sint-Stevens-Woluwe (Zaventem)',labelfr:'1932 Woluwe-Saint-Étienne',labelen:'1932 Sint-Stevens-Woluwe',labelde:'1932 Sint-Stevens-Woluwe',parentid:'reg.66',show:'true',sort:'451'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.467',label:'1933 Sterrebeek (Zaventem)',labelnl:'1933 Sterrebeek (Zaventem)',labelfr:'1933 Sterrebeek',labelen:'1933 Sterrebeek',labelde:'1933 Sterrebeek',parentid:'reg.66',show:'true',sort:'452'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.468',label:'1950 Kraainem',labelnl:'1950 Kraainem',labelfr:'1950 Crainhem',labelen:'1950 Kraainem',labelde:'1950 Kraainem',parentid:'reg.67',show:'true',sort:'453'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.469',label:'1970 Wezembeek-Oppem',labelnl:'1970 Wezembeek-Oppem',labelfr:'1970 Wezembeek-Oppem',labelen:'1970 Wezembeek-Oppem',labelde:'1970 Wezembeek-Oppem',parentid:'reg.68',show:'true',sort:'454'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.470',label:'1980 Zemst',labelnl:'1980 Zemst',labelfr:'1980 Zemst',labelen:'1980 Zemst',labelde:'1980 Zemst',parentid:'reg.69',show:'true',sort:'455'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.471',label:'1980 Eppegem (Zemst)',labelnl:'1980 Eppegem (Zemst)',labelfr:'1980 Eppegem',labelen:'1980 Eppegem',labelde:'1980 Eppegem',parentid:'reg.69',show:'true',sort:'456'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.472',label:'1981 Hofstade (Zemst)',labelnl:'1981 Hofstade (Zemst)',labelfr:'1981 Hofstade',labelen:'1981 Hofstade',labelde:'1981 Hofstade',parentid:'reg.69',show:'true',sort:'457'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.473',label:'1982 Elewijt (Zemst)',labelnl:'1982 Elewijt (Zemst)',labelfr:'1982 Elewijt',labelen:'1982 Elewijt',labelde:'1982 Elewijt',parentid:'reg.69',show:'true',sort:'458'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.474',label:'1982 Weerde (Zemst)',labelnl:'1982 Weerde (Zemst)',labelfr:'1982 Weerde',labelen:'1982 Weerde',labelde:'1982 Weerde',parentid:'reg.69',show:'true',sort:'459'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.475',label:'2000 Antwerpen',labelnl:'2000 Antwerpen',labelfr:'2000 Anvers',labelen:'2000 Antwerp',labelde:'2000 Antwerpen',parentid:'reg.70',show:'true',sort:'460'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.476',label:'2018 Antwerpen 18 (Antwerpen)',labelnl:'2018 Antwerpen 18 (Antwerpen)',labelfr:'2018 Anvers 18',labelen:'2018 Antwerp 18',labelde:'2018 Antwerpen 18',parentid:'reg.70',show:'true',sort:'461'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.477',label:'2020 Antwerpen 2 (Antwerpen)',labelnl:'2020 Antwerpen 2 (Antwerpen)',labelfr:'2020 Anvers 2',labelen:'2020 Antwerp 2',labelde:'2020 Antwerpen 2',parentid:'reg.70',show:'true',sort:'462'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.478',label:'2030 Antwerpen 3 (Antwerpen)',labelnl:'2030 Antwerpen 3 (Antwerpen)',labelfr:'2030 Anvers 3',labelen:'2030 Antwerp 3',labelde:'2030 Antwerpen 3',parentid:'reg.70',show:'true',sort:'463'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.480',label:'2040 Berendrecht (Antwerpen)',labelnl:'2040 Berendrecht (Antwerpen)',labelfr:'2040 Berendrecht',labelen:'2040 Berendrecht',labelde:'2040 Berendrecht',parentid:'reg.70',show:'true',sort:'465'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.481',label:'2040 Lillo (Antwerpen)',labelnl:'2040 Lillo (Antwerpen)',labelfr:'2040 Lillo',labelen:'2040 Lillo',labelde:'2040 Lillo',parentid:'reg.70',show:'true',sort:'466'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.482',label:'2040 Zandvliet (Antwerpen)',labelnl:'2040 Zandvliet (Antwerpen)',labelfr:'2040 Zandvliet',labelen:'2040 Zandvliet',labelde:'2040 Zandvliet',parentid:'reg.70',show:'true',sort:'467'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.483',label:'2050 Antwerpen 5 (Antwerpen)',labelnl:'2050 Antwerpen 5 (Antwerpen)',labelfr:'2050 Anvers 5',labelen:'2050 Antwerp 5',labelde:'2050 Antwerpen 5',parentid:'reg.70',show:'true',sort:'468'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.484',label:'2060 Antwerpen 6 (Antwerpen)',labelnl:'2060 Antwerpen 6 (Antwerpen)',labelfr:'2060 Anvers 6',labelen:'2060 Antwerp 6',labelde:'2060 Antwerpen 6',parentid:'reg.70',show:'true',sort:'469'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.485',label:'2100 Deurne (Antwerpen)',labelnl:'2100 Deurne (Antwerpen)',labelfr:'2100 Deurne',labelen:'2100 Deurne',labelde:'2100 Deurne',parentid:'reg.70',show:'true',sort:'470'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.486',label:'2140 Borgerhout (Antwerpen)',labelnl:'2140 Borgerhout (Antwerpen)',labelfr:'2140 Borgerhout',labelen:'2140 Borgerhout',labelde:'2140 Borgerhout',parentid:'reg.70',show:'true',sort:'471'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.487',label:'2170 Merksem (Antwerpen)',labelnl:'2170 Merksem (Antwerpen)',labelfr:'2170 Merksem',labelen:'2170 Merksem',labelde:'2170 Merksem',parentid:'reg.70',show:'true',sort:'472'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.488',label:'2180 Ekeren (Antwerpen)',labelnl:'2180 Ekeren (Antwerpen)',labelfr:'2180 Ekeren',labelen:'2180 Ekeren',labelde:'2180 Ekeren',parentid:'reg.70',show:'true',sort:'473'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.489',label:'2600 Berchem (Antwerpen)',labelnl:'2600 Berchem (Antwerpen)',labelfr:'2600 Berchem',labelen:'2600 Berchem',labelde:'2600 Berchem',parentid:'reg.70',show:'true',sort:'474'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.490',label:'2610 Wilrijk (Antwerpen)',labelnl:'2610 Wilrijk (Antwerpen)',labelfr:'2610 Wilrijk',labelen:'2610 Wilrijk',labelde:'2610 Wilrijk',parentid:'reg.70',show:'true',sort:'475'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.491',label:'2660 Hoboken (Antwerpen)',labelnl:'2660 Hoboken (Antwerpen)',labelfr:'2660 Hoboken',labelen:'2660 Hoboken',labelde:'2660 Hoboken',parentid:'reg.70',show:'true',sort:'476'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.492',label:'2070 Zwijndrecht',labelnl:'2070 Zwijndrecht',labelfr:'2070 Zwijndrecht',labelen:'2070 Zwijndrecht',labelde:'2070 Zwijndrecht',parentid:'reg.71',show:'true',sort:'477'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.493',label:'2070 Burcht (Zwijndrecht)',labelnl:'2070 Burcht (Zwijndrecht)',labelfr:'2070 Burcht',labelen:'2070 Burcht',labelde:'2070 Burcht',parentid:'reg.71',show:'true',sort:'478'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.494',label:'2110 Wijnegem',labelnl:'2110 Wijnegem',labelfr:'2110 Wijnegem',labelen:'2110 Wijnegem',labelde:'2110 Wijnegem',parentid:'reg.72',show:'true',sort:'479'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.495',label:'2150 Borsbeek',labelnl:'2150 Borsbeek',labelfr:'2150 Borsbeek',labelen:'2150 Borsbeek',labelde:'2150 Borsbeek',parentid:'reg.73',show:'true',sort:'480'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.496',label:'2160 Wommelgem',labelnl:'2160 Wommelgem',labelfr:'2160 Wommelgem',labelen:'2160 Wommelgem',labelde:'2160 Wommelgem',parentid:'reg.74',show:'true',sort:'481'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.497',label:'2200 Herentals',labelnl:'2200 Herentals',labelfr:'2200 Herentals',labelen:'2200 Herentals',labelde:'2200 Herentals',parentid:'reg.75',show:'true',sort:'482'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.498',label:'2200 Morkhoven (Herentals)',labelnl:'2200 Morkhoven (Herentals)',labelfr:'2200 Morkhoven',labelen:'2200 Morkhoven',labelde:'2200 Morkhoven',parentid:'reg.75',show:'true',sort:'483'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.499',label:'2200 Noorderwijk (Herentals)',labelnl:'2200 Noorderwijk (Herentals)',labelfr:'2200 Noorderwijk',labelen:'2200 Noorderwijk',labelde:'2200 Noorderwijk',parentid:'reg.75',show:'true',sort:'484'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.500',label:'2220 Heist-Op-Den-Berg',labelnl:'2220 Heist-Op-Den-Berg',labelfr:'2220 Heist-op-den-Berg',labelen:'2220 Heist-op-den-Berg',labelde:'2220 Heist-op-den-Berg',parentid:'reg.76',show:'true',sort:'485'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.501',label:'2220 Hallaar (Heist-Op-Den-Berg)',labelnl:'2220 Hallaar (Heist-Op-Den-Berg)',labelfr:'2220 Hallaer',labelen:'2220 Hallaar',labelde:'2220 Hallaar',parentid:'reg.76',show:'true',sort:'486'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.502',label:'2221 Booischot (Heist-Op-Den-Berg)',labelnl:'2221 Booischot (Heist-Op-Den-Berg)',labelfr:'2221 Booischot',labelen:'2221 Booischot',labelde:'2221 Booischot',parentid:'reg.76',show:'true',sort:'487'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.503',label:'2222 Itegem (Heist-Op-Den-Berg)',labelnl:'2222 Itegem (Heist-Op-Den-Berg)',labelfr:'2222 Iteghem',labelen:'2222 Itegem',labelde:'2222 Itegem',parentid:'reg.76',show:'true',sort:'488'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.504',label:'2222 Wiekevorst (Heist-Op-Den-Berg)',labelnl:'2222 Wiekevorst (Heist-Op-Den-Berg)',labelfr:'2222 Wiekevorst',labelen:'2222 Wiekevorst',labelde:'2222 Wiekevorst',parentid:'reg.76',show:'true',sort:'489'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.505',label:'2223 Schriek (Heist-Op-Den-Berg)',labelnl:'2223 Schriek (Heist-Op-Den-Berg)',labelfr:'2223 Schriek',labelen:'2223 Schriek',labelde:'2223 Schriek',parentid:'reg.76',show:'true',sort:'490'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.506',label:'2230 Herselt',labelnl:'2230 Herselt',labelfr:'2230 Herselt',labelen:'2230 Herselt',labelde:'2230 Herselt',parentid:'reg.77',show:'true',sort:'491'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.507',label:'2230 Ramsel (Herselt)',labelnl:'2230 Ramsel (Herselt)',labelfr:'2230 Ramsel',labelen:'2230 Ramsel',labelde:'2230 Ramsel',parentid:'reg.77',show:'true',sort:'492'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.508',label:'2235 Hulshout',labelnl:'2235 Hulshout',labelfr:'2235 Hulshout',labelen:'2235 Hulshout',labelde:'2235 Hulshout',parentid:'reg.78',show:'true',sort:'493'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.509',label:'2235 Houtvenne (Hulshout)',labelnl:'2235 Houtvenne (Hulshout)',labelfr:'2235 Houtvenne',labelen:'2235 Houtvenne',labelde:'2235 Houtvenne',parentid:'reg.78',show:'true',sort:'494'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.510',label:'2235 Westmeerbeek (Hulshout)',labelnl:'2235 Westmeerbeek (Hulshout)',labelfr:'2235 Westmeerbeek',labelen:'2235 Westmeerbeek',labelde:'2235 Westmeerbeek',parentid:'reg.78',show:'true',sort:'495'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.511',label:'2240 Zandhoven',labelnl:'2240 Zandhoven',labelfr:'2240 Zandhoven',labelen:'2240 Zandhoven',labelde:'2240 Zandhoven',parentid:'reg.79',show:'true',sort:'496'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.512',label:'2240 Massenhoven (Zandhoven)',labelnl:'2240 Massenhoven (Zandhoven)',labelfr:'2240 Massenhoven',labelen:'2240 Massenhoven',labelde:'2240 Massenhoven',parentid:'reg.79',show:'true',sort:'497'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.513',label:'2240 Viersel (Zandhoven)',labelnl:'2240 Viersel (Zandhoven)',labelfr:'2240 Viersel',labelen:'2240 Viersel',labelde:'2240 Viersel',parentid:'reg.79',show:'true',sort:'498'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.514',label:'2242 Pulderbos (Zandhoven)',labelnl:'2242 Pulderbos (Zandhoven)',labelfr:'2242 Pulderbos',labelen:'2242 Pulderbos',labelde:'2242 Pulderbos',parentid:'reg.79',show:'true',sort:'499'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.515',label:'2243 Pulle (Zandhoven)',labelnl:'2243 Pulle (Zandhoven)',labelfr:'2243 Pulle',labelen:'2243 Pulle',labelde:'2243 Pulle',parentid:'reg.79',show:'true',sort:'500'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.516',label:'2250 Olen',labelnl:'2250 Olen',labelfr:'2250 Olen',labelen:'2250 Olen',labelde:'2250 Olen',parentid:'reg.80',show:'true',sort:'501'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.517',label:'2260 Westerlo',labelnl:'2260 Westerlo',labelfr:'2260 Westerlo',labelen:'2260 Westerlo',labelde:'2260 Westerlo',parentid:'reg.81',show:'true',sort:'502'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.518',label:'2260 Heultje (Westerlo)',labelnl:'2260 Heultje (Westerlo)',labelfr:'2260 Heultje',labelen:'2260 Heultje',labelde:'2260 Heultje',parentid:'reg.81',show:'true',sort:'503'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.519',label:'2260 Oevel (Westerlo)',labelnl:'2260 Oevel (Westerlo)',labelfr:'2260 Oevel',labelen:'2260 Oevel',labelde:'2260 Oevel',parentid:'reg.81',show:'true',sort:'504'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.520',label:'2260 Oosterwijk (Westerlo)',labelnl:'2260 Oosterwijk (Westerlo)',labelfr:'2260 Oosterwijk',labelen:'2260 Oosterwijk',labelde:'2260 Oosterwijk',parentid:'reg.81',show:'true',sort:'505'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.521',label:'2260 Tongerlo (Westerlo)',labelnl:'2260 Tongerlo (Westerlo)',labelfr:'2260 Tongerlo',labelen:'2260 Tongerlo',labelde:'2260 Tongerlo',parentid:'reg.81',show:'true',sort:'506'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.522',label:'2260 Voortkapel (Westerlo)',labelnl:'2260 Voortkapel (Westerlo)',labelfr:'2260 Voortkapel',labelen:'2260 Voortkapel',labelde:'2260 Voortkapel',parentid:'reg.81',show:'true',sort:'507'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.523',label:'2260 Zoerle-Parwijs (Westerlo)',labelnl:'2260 Zoerle-Parwijs (Westerlo)',labelfr:'2260 Zoerle-Parwijs',labelen:'2260 Zoerle-Parwijs',labelde:'2260 Zoerle-Parwijs',parentid:'reg.81',show:'true',sort:'508'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.524',label:'2270 Herenthout',labelnl:'2270 Herenthout',labelfr:'2270 Herenthout',labelen:'2270 Herenthout',labelde:'2270 Herenthout',parentid:'reg.82',show:'true',sort:'509'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.525',label:'2275 Lille',labelnl:'2275 Lille',labelfr:'2275 Lille',labelen:'2275 Lille',labelde:'2275 Lille',parentid:'reg.83',show:'true',sort:'510'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.526',label:'2275 Gierle (Lille)',labelnl:'2275 Gierle (Lille)',labelfr:'2275 Gierle',labelen:'2275 Gierle',labelde:'2275 Gierle',parentid:'reg.83',show:'true',sort:'511'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.527',label:'2275 Poederlee (Lille)',labelnl:'2275 Poederlee (Lille)',labelfr:'2275 Poederlee',labelen:'2275 Poederlee',labelde:'2275 Poederlee',parentid:'reg.83',show:'true',sort:'512'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.528',label:'2275 Wechelderzande (Lille)',labelnl:'2275 Wechelderzande (Lille)',labelfr:'2275 Wechelderzande',labelen:'2275 Wechelderzande',labelde:'2275 Wechelderzande',parentid:'reg.83',show:'true',sort:'513'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.529',label:'2280 Grobbendonk',labelnl:'2280 Grobbendonk',labelfr:'2280 Grobbendonk',labelen:'2280 Grobbendonk',labelde:'2280 Grobbendonk',parentid:'reg.84',show:'true',sort:'514'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.530',label:'2288 Bouwel (Grobbendonk)',labelnl:'2288 Bouwel (Grobbendonk)',labelfr:'2288 Bouwel',labelen:'2288 Bouwel',labelde:'2288 Bouwel',parentid:'reg.84',show:'true',sort:'515'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.531',label:'2290 Vorselaar',labelnl:'2290 Vorselaar',labelfr:'2290 Vorselaar',labelen:'2290 Vorselaar',labelde:'2290 Vorselaar',parentid:'reg.85',show:'true',sort:'516'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.532',label:'2300 Turnhout',labelnl:'2300 Turnhout',labelfr:'2300 Turnhout',labelen:'2300 Turnhout',labelde:'2300 Turnhout',parentid:'reg.86',show:'true',sort:'517'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.533',label:'2310 Rijkevorsel',labelnl:'2310 Rijkevorsel',labelfr:'2310 Rijkevorsel',labelen:'2310 Rijkevorsel',labelde:'2310 Rijkevorsel',parentid:'reg.87',show:'true',sort:'518'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.534',label:'2320 Hoogstraten',labelnl:'2320 Hoogstraten',labelfr:'2320 Hoogstraten',labelen:'2320 Hoogstraten',labelde:'2320 Hoogstraten',parentid:'reg.88',show:'true',sort:'519'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.535',label:'2321 Meer (Hoogstraten)',labelnl:'2321 Meer (Hoogstraten)',labelfr:'2321 Meer',labelen:'2321 Meer',labelde:'2321 Meer',parentid:'reg.88',show:'true',sort:'520'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.536',label:'2322 Minderhout (Hoogstraten)',labelnl:'2322 Minderhout (Hoogstraten)',labelfr:'2322 Minderhout',labelen:'2322 Minderhout',labelde:'2322 Minderhout',parentid:'reg.88',show:'true',sort:'521'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.537',label:'2323 Wortel (Hoogstraten)',labelnl:'2323 Wortel (Hoogstraten)',labelfr:'2323 Wortel',labelen:'2323 Wortel',labelde:'2323 Wortel',parentid:'reg.88',show:'true',sort:'522'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.538',label:'2328 Meerle (Hoogstraten)',labelnl:'2328 Meerle (Hoogstraten)',labelfr:'2328 Meerle',labelen:'2328 Meerle',labelde:'2328 Meerle',parentid:'reg.88',show:'true',sort:'523'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.539',label:'2330 Merksplas',labelnl:'2330 Merksplas',labelfr:'2330 Merksplas',labelen:'2330 Merksplas',labelde:'2330 Merksplas',parentid:'reg.89',show:'true',sort:'524'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.540',label:'2340 Beerse',labelnl:'2340 Beerse',labelfr:'2340 Beerse',labelen:'2340 Beerse',labelde:'2340 Beerse',parentid:'reg.90',show:'true',sort:'525'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.541',label:'2340 Vlimmeren (Beerse)',labelnl:'2340 Vlimmeren (Beerse)',labelfr:'2340 Vlimmeren',labelen:'2340 Vlimmeren',labelde:'2340 Vlimmeren',parentid:'reg.90',show:'true',sort:'526'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.542',label:'2350 Vosselaar',labelnl:'2350 Vosselaar',labelfr:'2350 Vosselaar',labelen:'2350 Vosselaar',labelde:'2350 Vosselaar',parentid:'reg.91',show:'true',sort:'527'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.543',label:'2360 Oud-Turnhout',labelnl:'2360 Oud-Turnhout',labelfr:'2360 Oud-Turnhout',labelen:'2360 Oud-Turnhout',labelde:'2360 Oud-Turnhout',parentid:'reg.92',show:'true',sort:'528'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.544',label:'2370 Arendonk',labelnl:'2370 Arendonk',labelfr:'2370 Arendonk',labelen:'2370 Arendonk',labelde:'2370 Arendonk',parentid:'reg.93',show:'true',sort:'529'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.545',label:'2380 Ravels',labelnl:'2380 Ravels',labelfr:'2380 Ravels',labelen:'2380 Ravels',labelde:'2380 Ravels',parentid:'reg.94',show:'true',sort:'530'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.546',label:'2381 Weelde (Ravels)',labelnl:'2381 Weelde (Ravels)',labelfr:'2381 Weelde',labelen:'2381 Weelde',labelde:'2381 Weelde',parentid:'reg.94',show:'true',sort:'531'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.547',label:'2382 Poppel (Ravels)',labelnl:'2382 Poppel (Ravels)',labelfr:'2382 Poppel',labelen:'2382 Poppel',labelde:'2382 Poppel',parentid:'reg.94',show:'true',sort:'532'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.548',label:'2387 Baarle-Hertog',labelnl:'2387 Baarle-Hertog',labelfr:'2387 Baerle-Duc',labelen:'2387 Baarle-Hertog',labelde:'2387 Baarle-Hertog',parentid:'reg.95',show:'true',sort:'533'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.549',label:'2390 Malle',labelnl:'2390 Malle',labelfr:'2390 Malle',labelen:'2390 Malle',labelde:'2390 Malle',parentid:'reg.96',show:'true',sort:'534'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.550',label:'2390 Oostmalle (Malle)',labelnl:'2390 Oostmalle (Malle)',labelfr:'2390 Oostmalle',labelen:'2390 Oostmalle',labelde:'2390 Oostmalle',parentid:'reg.96',show:'true',sort:'535'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.551',label:'2390 Westmalle (Malle)',labelnl:'2390 Westmalle (Malle)',labelfr:'2390 Westmalle',labelen:'2390 Westmalle',labelde:'2390 Westmalle',parentid:'reg.96',show:'true',sort:'536'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.552',label:'2400 Mol',labelnl:'2400 Mol',labelfr:'2400 Mol',labelen:'2400 Mol',labelde:'2400 Mol',parentid:'reg.97',show:'true',sort:'537'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.553',label:'2430 Laakdal',labelnl:'2430 Laakdal',labelfr:'2430 Laakdal',labelen:'2430 Laakdal',labelde:'2430 Laakdal',parentid:'reg.98',show:'true',sort:'538'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.554',label:'2430 Eindhout (Laakdal)',labelnl:'2430 Eindhout (Laakdal)',labelfr:'2430 Eindhout',labelen:'2430 Eindhout',labelde:'2430 Eindhout',parentid:'reg.98',show:'true',sort:'539'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.555',label:'2430 Vorst (Laakdal)',labelnl:'2430 Vorst (Laakdal)',labelfr:'2430 Vorst',labelen:'2430 Vorst',labelde:'2430 Vorst',parentid:'reg.98',show:'true',sort:'540'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.556',label:'2431 Varendonk (Laakdal)',labelnl:'2431 Varendonk (Laakdal)',labelfr:'2431 Varendonk',labelen:'2431 Varendonk',labelde:'2431 Varendonk',parentid:'reg.98',show:'true',sort:'541'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.557',label:'2431 Veerle (Laakdal)',labelnl:'2431 Veerle (Laakdal)',labelfr:'2431 Veerle',labelen:'2431 Veerle',labelde:'2431 Veerle',parentid:'reg.98',show:'true',sort:'542'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.558',label:'2440 Geel',labelnl:'2440 Geel',labelfr:'2440 Geel',labelen:'2440 Geel',labelde:'2440 Geel',parentid:'reg.99',show:'true',sort:'543'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.559',label:'2450 Meerhout',labelnl:'2450 Meerhout',labelfr:'2450 Meerhout',labelen:'2450 Meerhout',labelde:'2450 Meerhout',parentid:'reg.100',show:'true',sort:'544'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.560',label:'2460 Kasterlee',labelnl:'2460 Kasterlee',labelfr:'2460 Kasterlee',labelen:'2460 Kasterlee',labelde:'2460 Kasterlee',parentid:'reg.101',show:'true',sort:'545'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.561',label:'2460 Lichtaart (Kasterlee)',labelnl:'2460 Lichtaart (Kasterlee)',labelfr:'2460 Lichtaert',labelen:'2460 Lichtaart',labelde:'2460 Lichtaart',parentid:'reg.101',show:'true',sort:'546'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.562',label:'2460 Tielen (Kasterlee)',labelnl:'2460 Tielen (Kasterlee)',labelfr:'2460 Tielen',labelen:'2460 Tielen',labelde:'2460 Tielen',parentid:'reg.101',show:'true',sort:'547'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.563',label:'2470 Retie',labelnl:'2470 Retie',labelfr:'2470 Retie',labelen:'2470 Retie',labelde:'2470 Retie',parentid:'reg.102',show:'true',sort:'548'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.564',label:'2480 Dessel',labelnl:'2480 Dessel',labelfr:'2480 Dessel',labelen:'2480 Dessel',labelde:'2480 Dessel',parentid:'reg.103',show:'true',sort:'549'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.565',label:'2490 Balen',labelnl:'2490 Balen',labelfr:'2490 Balen',labelen:'2490 Balen',labelde:'2490 Balen',parentid:'reg.104',show:'true',sort:'550'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.566',label:'2491 Olmen (Balen)',labelnl:'2491 Olmen (Balen)',labelfr:'2491 Olmen',labelen:'2491 Olmen',labelde:'2491 Olmen',parentid:'reg.104',show:'true',sort:'551'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.567',label:'2500 Lier',labelnl:'2500 Lier',labelfr:'2500 Lierre',labelen:'2500 Lier',labelde:'2500 Lier',parentid:'reg.105',show:'true',sort:'552'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.568',label:'2500 Koningshooikt (Lier)',labelnl:'2500 Koningshooikt (Lier)',labelfr:'2500 Koningshooikt',labelen:'2500 Koningshooikt',labelde:'2500 Koningshooikt',parentid:'reg.105',show:'true',sort:'553'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.569',label:'2520 Ranst',labelnl:'2520 Ranst',labelfr:'2520 Ranst',labelen:'2520 Ranst',labelde:'2520 Ranst',parentid:'reg.106',show:'true',sort:'554'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.570',label:'2520 Broechem (Ranst)',labelnl:'2520 Broechem (Ranst)',labelfr:'2520 Broechem',labelen:'2520 Broechem',labelde:'2520 Broechem',parentid:'reg.106',show:'true',sort:'555'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.571',label:'2520 Emblem (Ranst)',labelnl:'2520 Emblem (Ranst)',labelfr:'2520 Emblem',labelen:'2520 Emblem',labelde:'2520 Emblem',parentid:'reg.106',show:'true',sort:'556'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.572',label:'2520 Oelegem (Ranst)',labelnl:'2520 Oelegem (Ranst)',labelfr:'2520 Oeleghem',labelen:'2520 Oelegem',labelde:'2520 Oelegem',parentid:'reg.106',show:'true',sort:'557'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.573',label:'2530 Boechout',labelnl:'2530 Boechout',labelfr:'2530 Boechout',labelen:'2530 Boechout',labelde:'2530 Boechout',parentid:'reg.107',show:'true',sort:'558'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.574',label:'2531 Vremde (Boechout)',labelnl:'2531 Vremde (Boechout)',labelfr:'2531 Vremde',labelen:'2531 Vremde',labelde:'2531 Vremde',parentid:'reg.107',show:'true',sort:'559'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.575',label:'2540 Hove',labelnl:'2540 Hove',labelfr:'2540 Hove',labelen:'2540 Hove',labelde:'2540 Hove',parentid:'reg.108',show:'true',sort:'560'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.576',label:'2547 Lint',labelnl:'2547 Lint',labelfr:'2547 Lint',labelen:'2547 Lint',labelde:'2547 Lint',parentid:'reg.109',show:'true',sort:'561'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.577',label:'2550 Kontich',labelnl:'2550 Kontich',labelfr:'2550 Kontich',labelen:'2550 Kontich',labelde:'2550 Kontich',parentid:'reg.110',show:'true',sort:'562'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.578',label:'2550 Waarloos (Kontich)',labelnl:'2550 Waarloos (Kontich)',labelfr:'2550 Waerloos',labelen:'2550 Waarloos',labelde:'2550 Waarloos',parentid:'reg.110',show:'true',sort:'563'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.579',label:'2560 Nijlen',labelnl:'2560 Nijlen',labelfr:'2560 Nijlen',labelen:'2560 Nijlen',labelde:'2560 Nijlen',parentid:'reg.111',show:'true',sort:'564'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.580',label:'2560 Bevel (Nijlen)',labelnl:'2560 Bevel (Nijlen)',labelfr:'2560 Bevel',labelen:'2560 Bevel',labelde:'2560 Bevel',parentid:'reg.111',show:'true',sort:'565'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.581',label:'2560 Kessel (Nijlen)',labelnl:'2560 Kessel (Nijlen)',labelfr:'2560 Kessel',labelen:'2560 Kessel',labelde:'2560 Kessel',parentid:'reg.111',show:'true',sort:'566'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.582',label:'2570 Duffel',labelnl:'2570 Duffel',labelfr:'2570 Duffel',labelen:'2570 Duffel',labelde:'2570 Duffel',parentid:'reg.112',show:'true',sort:'567'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.583',label:'2580 Putte',labelnl:'2580 Putte',labelfr:'2580 Putte',labelen:'2580 Putte',labelde:'2580 Putte',parentid:'reg.113',show:'true',sort:'568'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.584',label:'2580 Beerzel (Putte)',labelnl:'2580 Beerzel (Putte)',labelfr:'2580 Beerzel',labelen:'2580 Beerzel',labelde:'2580 Beerzel',parentid:'reg.113',show:'true',sort:'569'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.585',label:'2590 Berlaar',labelnl:'2590 Berlaar',labelfr:'2590 Berlaar',labelen:'2590 Berlaar',labelde:'2590 Berlaar',parentid:'reg.114',show:'true',sort:'570'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.586',label:'2590 Gestel (Berlaar)',labelnl:'2590 Gestel (Berlaar)',labelfr:'2590 Gestel',labelen:'2590 Gestel',labelde:'2590 Gestel',parentid:'reg.114',show:'true',sort:'571'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.587',label:'2620 Hemiksem',labelnl:'2620 Hemiksem',labelfr:'2620 Hemiksem',labelen:'2620 Hemiksem',labelde:'2620 Hemiksem',parentid:'reg.115',show:'true',sort:'572'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.588',label:'2627 Schelle',labelnl:'2627 Schelle',labelfr:'2627 Schelle',labelen:'2627 Schelle',labelde:'2627 Schelle',parentid:'reg.116',show:'true',sort:'573'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.589',label:'2630 Aartselaar',labelnl:'2630 Aartselaar',labelfr:'2630 Aartselaar',labelen:'2630 Aartselaar',labelde:'2630 Aartselaar',parentid:'reg.117',show:'true',sort:'574'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.590',label:'2640 Mortsel',labelnl:'2640 Mortsel',labelfr:'2640 Mortsel',labelen:'2640 Mortsel',labelde:'2640 Mortsel',parentid:'reg.118',show:'true',sort:'575'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.591',label:'2650 Edegem',labelnl:'2650 Edegem',labelfr:'2650 Edegem',labelen:'2650 Edegem',labelde:'2650 Edegem',parentid:'reg.119',show:'true',sort:'576'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.592',label:'2800 Mechelen',labelnl:'2800 Mechelen',labelfr:'2800 Malines',labelen:'2800 Mechelen',labelde:'2800 Mechelen',parentid:'reg.120',show:'true',sort:'577'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.593',label:'2800 Walem (Mechelen)',labelnl:'2800 Walem (Mechelen)',labelfr:'2800 Walem',labelen:'2800 Walem',labelde:'2800 Walem',parentid:'reg.120',show:'true',sort:'578'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.594',label:'2801 Heffen (Mechelen)',labelnl:'2801 Heffen (Mechelen)',labelfr:'2801 Heffen',labelen:'2801 Heffen',labelde:'2801 Heffen',parentid:'reg.120',show:'true',sort:'579'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.595',label:'2811 Hombeek (Mechelen)',labelnl:'2811 Hombeek (Mechelen)',labelfr:'2811 Hombeek',labelen:'2811 Hombeek',labelde:'2811 Hombeek',parentid:'reg.120',show:'true',sort:'580'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.596',label:'2811 Leest (Mechelen)',labelnl:'2811 Leest (Mechelen)',labelfr:'2811 Leest',labelen:'2811 Leest',labelde:'2811 Leest',parentid:'reg.120',show:'true',sort:'581'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.597',label:'2812 Muizen (Mechelen)',labelnl:'2812 Muizen (Mechelen)',labelfr:'2812 Muizen',labelen:'2812 Muizen',labelde:'2812 Muizen',parentid:'reg.120',show:'true',sort:'582'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.598',label:'2820 Bonheiden',labelnl:'2820 Bonheiden',labelfr:'2820 Bonheiden',labelen:'2820 Bonheiden',labelde:'2820 Bonheiden',parentid:'reg.121',show:'true',sort:'583'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.599',label:'2820 Rijmenam (Bonheiden)',labelnl:'2820 Rijmenam (Bonheiden)',labelfr:'2820 Rijmenam',labelen:'2820 Rijmenam',labelde:'2820 Rijmenam',parentid:'reg.121',show:'true',sort:'584'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.600',label:'2830 Willebroek',labelnl:'2830 Willebroek',labelfr:'2830 Willebroek',labelen:'2830 Willebroek',labelde:'2830 Willebroek',parentid:'reg.122',show:'true',sort:'585'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.601',label:'2830 Blaasveld (Willebroek)',labelnl:'2830 Blaasveld (Willebroek)',labelfr:'2830 Blaasveld',labelen:'2830 Blaasveld',labelde:'2830 Blaasveld',parentid:'reg.122',show:'true',sort:'586'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.602',label:'2830 Heindonk (Willebroek)',labelnl:'2830 Heindonk (Willebroek)',labelfr:'2830 Heindonk',labelen:'2830 Heindonk',labelde:'2830 Heindonk',parentid:'reg.122',show:'true',sort:'587'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.603',label:'2830 Tisselt (Willebroek)',labelnl:'2830 Tisselt (Willebroek)',labelfr:'2830 Tisselt',labelen:'2830 Tisselt',labelde:'2830 Tisselt',parentid:'reg.122',show:'true',sort:'588'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.604',label:'2840 Rumst',labelnl:'2840 Rumst',labelfr:'2840 Rumst',labelen:'2840 Rumst',labelde:'2840 Rumst',parentid:'reg.123',show:'true',sort:'589'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.605',label:'2840 Reet (Rumst)',labelnl:'2840 Reet (Rumst)',labelfr:'2840 Reet',labelen:'2840 Reet',labelde:'2840 Reet',parentid:'reg.123',show:'true',sort:'590'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.606',label:'2840 Terhagen (Rumst)',labelnl:'2840 Terhagen (Rumst)',labelfr:'2840 Terhagen',labelen:'2840 Terhagen',labelde:'2840 Terhagen',parentid:'reg.123',show:'true',sort:'591'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.607',label:'2845 Niel',labelnl:'2845 Niel',labelfr:'2845 Niel',labelen:'2845 Niel',labelde:'2845 Niel',parentid:'reg.124',show:'true',sort:'592'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.608',label:'2850 Boom',labelnl:'2850 Boom',labelfr:'2850 Boom',labelen:'2850 Boom',labelde:'2850 Boom',parentid:'reg.125',show:'true',sort:'593'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.609',label:'2860 Sint-Katelijne-Waver',labelnl:'2860 Sint-Katelijne-Waver',labelfr:'2860 Wavre-Sainte-Catherine',labelen:'2860 Sint-Katelijne-Waver',labelde:'2860 Sint-Katelijne-Waver',parentid:'reg.126',show:'true',sort:'594'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.610',label:'2861 Onze-Lieve-Vrouw-Waver (Sint-Katelijne-Waver)',labelnl:'2861 Onze-Lieve-Vrouw-Waver (Sint-Katelijne-Waver)',labelfr:'2861 Wavre-Notre-Dame',labelen:'2861 Onze-Lieve-Vrouw-Waver',labelde:'2861 Onze-Lieve-Vrouw-Waver',parentid:'reg.126',show:'true',sort:'595'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.611',label:'2870 Puurs',labelnl:'2870 Puurs',labelfr:'2870 Puurs',labelen:'2870 Puurs',labelde:'2870 Puurs',parentid:'reg.128',show:'true',sort:'596'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.612',label:'2870 Breendonk (Puurs)',labelnl:'2870 Breendonk (Puurs)',labelfr:'2870 Breendonk',labelen:'2870 Breendonk',labelde:'2870 Breendonk',parentid:'reg.128',show:'true',sort:'597'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.613',label:'2870 Liezele (Puurs)',labelnl:'2870 Liezele (Puurs)',labelfr:'2870 Liezele',labelen:'2870 Liezele',labelde:'2870 Liezele',parentid:'reg.128',show:'true',sort:'598'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.614',label:'2870 Ruisbroek (Puurs)',labelnl:'2870 Ruisbroek (Puurs)',labelfr:'2870 Ruisbroek',labelen:'2870 Ruisbroek',labelde:'2870 Ruisbroek',parentid:'reg.128',show:'true',sort:'599'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.615',label:'2880 Bornem',labelnl:'2880 Bornem',labelfr:'2880 Bornem',labelen:'2880 Bornem',labelde:'2880 Bornem',parentid:'reg.129',show:'true',sort:'600'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.616',label:'2880 Hingene (Bornem)',labelnl:'2880 Hingene (Bornem)',labelfr:'2880 Hingene',labelen:'2880 Hingene',labelde:'2880 Hingene',parentid:'reg.129',show:'true',sort:'601'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.617',label:'2880 Mariekerke (Bornem)',labelnl:'2880 Mariekerke (Bornem)',labelfr:'2880 Mariekerke',labelen:'2880 Mariekerke',labelde:'2880 Mariekerke',parentid:'reg.129',show:'true',sort:'602'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.618',label:'2880 Weert (Bornem)',labelnl:'2880 Weert (Bornem)',labelfr:'2880 Weert',labelen:'2880 Weert',labelde:'2880 Weert',parentid:'reg.129',show:'true',sort:'603'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.619',label:'2890 Sint-Amands',labelnl:'2890 Sint-Amands',labelfr:'2890 Saint-Amand',labelen:'2890 Sint-Amands',labelde:'2890 Sint-Amands',parentid:'reg.130',show:'true',sort:'604'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.620',label:'2890 Lippelo (Sint-Amands)',labelnl:'2890 Lippelo (Sint-Amands)',labelfr:'2890 Lippelo',labelen:'2890 Lippelo',labelde:'2890 Lippelo',parentid:'reg.130',show:'true',sort:'605'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.621',label:'2890 Oppuurs (Sint-Amands)',labelnl:'2890 Oppuurs (Sint-Amands)',labelfr:'2890 Oppuurs',labelen:'2890 Oppuurs',labelde:'2890 Oppuurs',parentid:'reg.130',show:'true',sort:'606'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.622',label:'2900 Schoten',labelnl:'2900 Schoten',labelfr:'2900 Schoten',labelen:'2900 Schoten',labelde:'2900 Schoten',parentid:'reg.131',show:'true',sort:'607'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.623',label:'2910 Essen',labelnl:'2910 Essen',labelfr:'2910 Essen',labelen:'2910 Essen',labelde:'2910 Essen',parentid:'reg.132',show:'true',sort:'608'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.624',label:'2920 Kalmthout',labelnl:'2920 Kalmthout',labelfr:'2920 Kalmthout',labelen:'2920 Kalmthout',labelde:'2920 Kalmthout',parentid:'reg.133',show:'true',sort:'609'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.625',label:'2930 Brasschaat',labelnl:'2930 Brasschaat',labelfr:'2930 Brasschaat',labelen:'2930 Brasschaat',labelde:'2930 Brasschaat',parentid:'reg.134',show:'true',sort:'610'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.626',label:'2940 Stabroek',labelnl:'2940 Stabroek',labelfr:'2940 Stabroek',labelen:'2940 Stabroek',labelde:'2940 Stabroek',parentid:'reg.135',show:'true',sort:'611'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.627',label:'2940 Hoevenen (Stabroek)',labelnl:'2940 Hoevenen (Stabroek)',labelfr:'2940 Hoevenen',labelen:'2940 Hoevenen',labelde:'2940 Hoevenen',parentid:'reg.135',show:'true',sort:'612'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.628',label:'2950 Kapellen',labelnl:'2950 Kapellen',labelfr:'2950 Kapellen',labelen:'2950 Kapellen',labelde:'2950 Kapellen',parentid:'reg.136',show:'true',sort:'613'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.629',label:'2960 Brecht',labelnl:'2960 Brecht',labelfr:'2960 Brecht',labelen:'2960 Brecht',labelde:'2960 Brecht',parentid:'reg.137',show:'true',sort:'614'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.630',label:'2960 Sint-Job-In-\'t-Goor (Brecht)',labelnl:'2960 Sint-Job-In-\'t-Goor (Brecht)',labelfr:'2960 Sint-Job-In-\'t-Goor',labelen:'2960 Sint-Job-In-\'t-Goor',labelde:'2960 Sint-Job-In-\'t-Goor',parentid:'reg.137',show:'true',sort:'615'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.631',label:'2960 Sint-Lenaarts (Brecht)',labelnl:'2960 Sint-Lenaarts (Brecht)',labelfr:'2960 Saint-Léonard',labelen:'2960 Sint-Lenaarts',labelde:'2960 Sint-Lenaarts',parentid:'reg.137',show:'true',sort:'616'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.632',label:'2970 Schilde',labelnl:'2970 Schilde',labelfr:'2970 Schilde',labelen:'2970 Schilde',labelde:'2970 Schilde',parentid:'reg.138',show:'true',sort:'617'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.633',label:'2970 \'s Gravenwezel (Schilde)',labelnl:'2970 \'s Gravenwezel (Schilde)',labelfr:'2970 \'s-Gravenwezel',labelen:'2970 \'s-Gravenwezel',labelde:'2970 \'s-Gravenwezel',parentid:'reg.138',show:'true',sort:'618'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.634',label:'2980 Zoersel',labelnl:'2980 Zoersel',labelfr:'2980 Zoersel',labelen:'2980 Zoersel',labelde:'2980 Zoersel',parentid:'reg.139',show:'true',sort:'619'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.635',label:'2980 Halle (Zoersel)',labelnl:'2980 Halle (Zoersel)',labelfr:'2980 Halle',labelen:'2980 Halle',labelde:'2980 Halle',parentid:'reg.139',show:'true',sort:'620'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.636',label:'2990 Wuustwezel',labelnl:'2990 Wuustwezel',labelfr:'2990 Wuustwezel',labelen:'2990 Wuustwezel',labelde:'2990 Wuustwezel',parentid:'reg.140',show:'true',sort:'621'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.637',label:'2990 Loenhout (Wuustwezel)',labelnl:'2990 Loenhout (Wuustwezel)',labelfr:'2990 Loenhout',labelen:'2990 Loenhout',labelde:'2990 Loenhout',parentid:'reg.140',show:'true',sort:'622'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.638',label:'3000 Leuven',labelnl:'3000 Leuven',labelfr:'3000 Louvain',labelen:'3000 Leuven',labelde:'3000 Löwen',parentid:'reg.141',show:'true',sort:'623'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.639',label:'3001 Heverlee (Leuven)',labelnl:'3001 Heverlee (Leuven)',labelfr:'3001 Heverlee',labelen:'3001 Heverlee',labelde:'3001 Heverlee',parentid:'reg.141',show:'true',sort:'624'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.640',label:'3010 Kessel-Lo (Leuven)',labelnl:'3010 Kessel-Lo (Leuven)',labelfr:'3010 Kessel-Lo',labelen:'3010 Kessel-Lo',labelde:'3010 Kessel-Lo',parentid:'reg.141',show:'true',sort:'625'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.641',label:'3012 Wilsele (Leuven)',labelnl:'3012 Wilsele (Leuven)',labelfr:'3012 Wilsele',labelen:'3012 Wilsele',labelde:'3012 Wilsele',parentid:'reg.141',show:'true',sort:'626'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.642',label:'3018 Wijgmaal (Leuven)',labelnl:'3018 Wijgmaal (Leuven)',labelfr:'3018 Wijgmaal',labelen:'3018 Wijgmaal',labelde:'3018 Wijgmaal',parentid:'reg.141',show:'true',sort:'627'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.643',label:'3020 Herent',labelnl:'3020 Herent',labelfr:'3020 Herent',labelen:'3020 Herent',labelde:'3020 Herent',parentid:'reg.142',show:'true',sort:'628'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.644',label:'3020 Veltem-Beisem (Herent)',labelnl:'3020 Veltem-Beisem (Herent)',labelfr:'3020 Veltem-Beisem',labelen:'3020 Veltem-Beisem',labelde:'3020 Veltem-Beisem',parentid:'reg.142',show:'true',sort:'629'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.645',label:'3020 Winksele (Herent)',labelnl:'3020 Winksele (Herent)',labelfr:'3020 Winksele',labelen:'3020 Winksele',labelde:'3020 Winksele',parentid:'reg.142',show:'true',sort:'630'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.646',label:'3040 Huldenberg',labelnl:'3040 Huldenberg',labelfr:'3040 Huldenberg',labelen:'3040 Huldenberg',labelde:'3040 Huldenberg',parentid:'reg.143',show:'true',sort:'631'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.647',label:'3040 Loonbeek (Huldenberg)',labelnl:'3040 Loonbeek (Huldenberg)',labelfr:'3040 Loonbeek',labelen:'3040 Loonbeek',labelde:'3040 Loonbeek',parentid:'reg.143',show:'true',sort:'632'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.648',label:'3040 Neerijse (Huldenberg)',labelnl:'3040 Neerijse (Huldenberg)',labelfr:'3040 Neerijse',labelen:'3040 Neerijse',labelde:'3040 Neerijse',parentid:'reg.143',show:'true',sort:'633'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.649',label:'3040 Ottenburg (Huldenberg)',labelnl:'3040 Ottenburg (Huldenberg)',labelfr:'3040 Ottenburg',labelen:'3040 Ottenburg',labelde:'3040 Ottenburg',parentid:'reg.143',show:'true',sort:'634'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.650',label:'3040 Sint-Agatha-Rode (Huldenberg)',labelnl:'3040 Sint-Agatha-Rode (Huldenberg)',labelfr:'3040 Rhode-Sainte-Agathe',labelen:'3040 Sint-Agatha-Rode',labelde:'3040 Sint-Agatha-Rode',parentid:'reg.143',show:'true',sort:'635'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.651',label:'3050 Oud-Heverlee',labelnl:'3050 Oud-Heverlee',labelfr:'3050 Oud-Heverlee',labelen:'3050 Oud-Heverlee',labelde:'3050 Oud-Heverlee',parentid:'reg.144',show:'true',sort:'636'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.652',label:'3051 Sint-Joris-Weert (Oud-Heverlee)',labelnl:'3051 Sint-Joris-Weert (Oud-Heverlee)',labelfr:'3051 Sint-Joris-Weert',labelen:'3051 Sint-Joris-Weert',labelde:'3051 Sint-Joris-Weert',parentid:'reg.144',show:'true',sort:'637'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.653',label:'3052 Blanden (Oud-Heverlee)',labelnl:'3052 Blanden (Oud-Heverlee)',labelfr:'3052 Blanden',labelen:'3052 Blanden',labelde:'3052 Blanden',parentid:'reg.144',show:'true',sort:'638'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.654',label:'3053 Haasrode (Oud-Heverlee)',labelnl:'3053 Haasrode (Oud-Heverlee)',labelfr:'3053 Haasrode',labelen:'3053 Haasrode',labelde:'3053 Haasrode',parentid:'reg.144',show:'true',sort:'639'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.655',label:'3054 Vaalbeek (Oud-Heverlee)',labelnl:'3054 Vaalbeek (Oud-Heverlee)',labelfr:'3054 Vaalbeek',labelen:'3054 Vaalbeek',labelde:'3054 Vaalbeek',parentid:'reg.144',show:'true',sort:'640'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.656',label:'3060 Bertem',labelnl:'3060 Bertem',labelfr:'3060 Bertem',labelen:'3060 Bertem',labelde:'3060 Bertem',parentid:'reg.145',show:'true',sort:'641'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.657',label:'3060 Korbeek-Dijle (Bertem)',labelnl:'3060 Korbeek-Dijle (Bertem)',labelfr:'3060 Korbeek-Dijle',labelen:'3060 Korbeek-Dijle',labelde:'3060 Korbeek-Dijle',parentid:'reg.145',show:'true',sort:'642'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.658',label:'3061 Leefdaal (Bertem)',labelnl:'3061 Leefdaal (Bertem)',labelfr:'3061 Leefdaal',labelen:'3061 Leefdaal',labelde:'3061 Leefdaal',parentid:'reg.145',show:'true',sort:'643'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.659',label:'3070 Kortenberg',labelnl:'3070 Kortenberg',labelfr:'3070 Kortenberg',labelen:'3070 Kortenberg',labelde:'3070 Kortenberg',parentid:'reg.146',show:'true',sort:'644'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.660',label:'3071 Erps-Kwerps (Kortenberg)',labelnl:'3071 Erps-Kwerps (Kortenberg)',labelfr:'3071 Erps-Kwerps',labelen:'3071 Erps-Kwerps',labelde:'3071 Erps-Kwerps',parentid:'reg.146',show:'true',sort:'645'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.661',label:'3078 Everberg (Kortenberg)',labelnl:'3078 Everberg (Kortenberg)',labelfr:'3078 Everberg',labelen:'3078 Everberg',labelde:'3078 Everberg',parentid:'reg.146',show:'true',sort:'646'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.662',label:'3078 Meerbeek (Kortenberg)',labelnl:'3078 Meerbeek (Kortenberg)',labelfr:'3078 Meerbeek',labelen:'3078 Meerbeek',labelde:'3078 Meerbeek',parentid:'reg.146',show:'true',sort:'647'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.663',label:'3080 Tervuren',labelnl:'3080 Tervuren',labelfr:'3080 Tervuren',labelen:'3080 Tervuren',labelde:'3080 Tervuren',parentid:'reg.147',show:'true',sort:'648'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.664',label:'3080 Duisburg (Tervuren)',labelnl:'3080 Duisburg (Tervuren)',labelfr:'3080 Duisburg',labelen:'3080 Duisburg',labelde:'3080 Duisburg',parentid:'reg.147',show:'true',sort:'649'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.665',label:'3080 Vossem (Tervuren)',labelnl:'3080 Vossem (Tervuren)',labelfr:'3080 Vossem',labelen:'3080 Vossem',labelde:'3080 Vossem',parentid:'reg.147',show:'true',sort:'650'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.666',label:'3090 Overijse',labelnl:'3090 Overijse',labelfr:'3090 Overijse',labelen:'3090 Overijse',labelde:'3090 Overijse',parentid:'reg.148',show:'true',sort:'651'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.667',label:'3110 Rotselaar',labelnl:'3110 Rotselaar',labelfr:'3110 Rotselaar',labelen:'3110 Rotselaar',labelde:'3110 Rotselaar',parentid:'reg.149',show:'true',sort:'652'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.668',label:'3111 Wezemaal (Rotselaar)',labelnl:'3111 Wezemaal (Rotselaar)',labelfr:'3111 Wezemaal',labelen:'3111 Wezemaal',labelde:'3111 Wezemaal',parentid:'reg.149',show:'true',sort:'653'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.669',label:'3118 Werchter (Rotselaar)',labelnl:'3118 Werchter (Rotselaar)',labelfr:'3118 Werchter',labelen:'3118 Werchter',labelde:'3118 Werchter',parentid:'reg.149',show:'true',sort:'654'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.670',label:'3120 Tremelo',labelnl:'3120 Tremelo',labelfr:'3120 Tremelo',labelen:'3120 Tremelo',labelde:'3120 Tremelo',parentid:'reg.150',show:'true',sort:'655'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.671',label:'3128 Baal (Tremelo)',labelnl:'3128 Baal (Tremelo)',labelfr:'3128 Baal',labelen:'3128 Baal',labelde:'3128 Baal',parentid:'reg.150',show:'true',sort:'656'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.672',label:'3130 Begijnendijk',labelnl:'3130 Begijnendijk',labelfr:'3130 Begijnendijk',labelen:'3130 Begijnendijk',labelde:'3130 Begijnendijk',parentid:'reg.151',show:'true',sort:'657'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.673',label:'3130 Betekom (Begijnendijk)',labelnl:'3130 Betekom (Begijnendijk)',labelfr:'3130 Betekom',labelen:'3130 Betekom',labelde:'3130 Betekom',parentid:'reg.151',show:'true',sort:'658'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.674',label:'3140 Keerbergen',labelnl:'3140 Keerbergen',labelfr:'3140 Keerbergen',labelen:'3140 Keerbergen',labelde:'3140 Keerbergen',parentid:'reg.152',show:'true',sort:'659'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.675',label:'3150 Haacht',labelnl:'3150 Haacht',labelfr:'3150 Haacht',labelen:'3150 Haacht',labelde:'3150 Haacht',parentid:'reg.153',show:'true',sort:'660'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.676',label:'3150 Tildonk (Haacht)',labelnl:'3150 Tildonk (Haacht)',labelfr:'3150 Tildonk',labelen:'3150 Tildonk',labelde:'3150 Tildonk',parentid:'reg.153',show:'true',sort:'661'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.677',label:'3150 Wespelaar (Haacht)',labelnl:'3150 Wespelaar (Haacht)',labelfr:'3150 Wespelaar',labelen:'3150 Wespelaar',labelde:'3150 Wespelaar',parentid:'reg.153',show:'true',sort:'662'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.678',label:'3190 Boortmeerbeek',labelnl:'3190 Boortmeerbeek',labelfr:'3190 Boortmeerbeek',labelen:'3190 Boortmeerbeek',labelde:'3190 Boortmeerbeek',parentid:'reg.154',show:'true',sort:'663'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.679',label:'3191 Hever (Boortmeerbeek)',labelnl:'3191 Hever (Boortmeerbeek)',labelfr:'3191 Hever',labelen:'3191 Hever',labelde:'3191 Hever',parentid:'reg.154',show:'true',sort:'664'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.680',label:'3200 Aarschot',labelnl:'3200 Aarschot',labelfr:'3200 Aarschot',labelen:'3200 Aarschot',labelde:'3200 Aarschot',parentid:'reg.155',show:'true',sort:'665'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.681',label:'3200 Gelrode (Aarschot)',labelnl:'3200 Gelrode (Aarschot)',labelfr:'3200 Gelrode',labelen:'3200 Gelrode',labelde:'3200 Gelrode',parentid:'reg.155',show:'true',sort:'666'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.682',label:'3201 Langdorp (Aarschot)',labelnl:'3201 Langdorp (Aarschot)',labelfr:'3201 Langdorp',labelen:'3201 Langdorp',labelde:'3201 Langdorp',parentid:'reg.155',show:'true',sort:'667'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.683',label:'3202 Rillaar (Aarschot)',labelnl:'3202 Rillaar (Aarschot)',labelfr:'3202 Rillaar',labelen:'3202 Rillaar',labelde:'3202 Rillaar',parentid:'reg.155',show:'true',sort:'668'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.684',label:'3210 Lubbeek',labelnl:'3210 Lubbeek',labelfr:'3210 Lubbeek',labelen:'3210 Lubbeek',labelde:'3210 Lubbeek',parentid:'reg.156',show:'true',sort:'669'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.685',label:'3210 Linden (Lubbeek)',labelnl:'3210 Linden (Lubbeek)',labelfr:'3210 Linden',labelen:'3210 Linden',labelde:'3210 Linden',parentid:'reg.156',show:'true',sort:'670'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.686',label:'3211 Binkom (Lubbeek)',labelnl:'3211 Binkom (Lubbeek)',labelfr:'3211 Binkom',labelen:'3211 Binkom',labelde:'3211 Binkom',parentid:'reg.156',show:'true',sort:'671'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.687',label:'3212 Pellenberg (Lubbeek)',labelnl:'3212 Pellenberg (Lubbeek)',labelfr:'3212 Pellenberg',labelen:'3212 Pellenberg',labelde:'3212 Pellenberg',parentid:'reg.156',show:'true',sort:'672'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.689',label:'3220 Kortrijk-Dutsel (Holsbeek)',labelnl:'3220 Kortrijk-Dutsel (Holsbeek)',labelfr:'3220 Courtrai-Dutsel',labelen:'3220 Kortrijk-Dutsel',labelde:'3220 Kortrijk-Dutsel',parentid:'reg.157',show:'true',sort:'674'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.688',label:'3220 Holsbeek',labelnl:'3220 Holsbeek',labelfr:'3220 Holsbeek',labelen:'3220 Holsbeek',labelde:'3220 Holsbeek',parentid:'reg.157',show:'true',sort:'673'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.690',label:'3220 Sint-Pieters-Rode (Holsbeek)',labelnl:'3220 Sint-Pieters-Rode (Holsbeek)',labelfr:'3220 Rhode-Saint-Pierre',labelen:'3220 Sint-Pieters-Rode',labelde:'3220 Sint-Pieters-Rode',parentid:'reg.157',show:'true',sort:'675'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.691',label:'3221 Nieuwrode (Holsbeek)',labelnl:'3221 Nieuwrode (Holsbeek)',labelfr:'3221 Nieuwrode',labelen:'3221 Nieuwrode',labelde:'3221 Nieuwrode',parentid:'reg.157',show:'true',sort:'676'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.692',label:'3270 Scherpenheuvel-Zichem',labelnl:'3270 Scherpenheuvel-Zichem',labelfr:'3270 Montaigu-Zichem',labelen:'3270 Scherpenheuvel-Zichem',labelde:'3270 Scherpenheuvel-Zichem',parentid:'reg.158',show:'true',sort:'677'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.693',label:'3270 Scherpenheuvel (Scherpenheuvel-Zichem)',labelnl:'3270 Scherpenheuvel (Scherpenheuvel-Zichem)',labelfr:'3270 Montaigu',labelen:'3270 Scherpenheuvel',labelde:'3270 Scherpenheuvel',parentid:'reg.158',show:'true',sort:'678'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.694',label:'3271 Averbode (Scherpenheuvel-Zichem)',labelnl:'3271 Averbode (Scherpenheuvel-Zichem)',labelfr:'3271 Averbode',labelen:'3271 Averbode',labelde:'3271 Averbode',parentid:'reg.158',show:'true',sort:'679'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.695',label:'3271 Zichem (Scherpenheuvel-Zichem)',labelnl:'3271 Zichem (Scherpenheuvel-Zichem)',labelfr:'3271 Zichem',labelen:'3271 Zichem',labelde:'3271 Zichem',parentid:'reg.158',show:'true',sort:'680'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.696',label:'3272 Messelbroek (Scherpenheuvel-Zichem)',labelnl:'3272 Messelbroek (Scherpenheuvel-Zichem)',labelfr:'3272 Messelbroek',labelen:'3272 Messelbroek',labelde:'3272 Messelbroek',parentid:'reg.158',show:'true',sort:'681'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.697',label:'3272 Testelt (Scherpenheuvel-Zichem)',labelnl:'3272 Testelt (Scherpenheuvel-Zichem)',labelfr:'3272 Testelt',labelen:'3272 Testelt',labelde:'3272 Testelt',parentid:'reg.158',show:'true',sort:'682'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.698',label:'3290 Diest',labelnl:'3290 Diest',labelfr:'3290 Diest',labelen:'3290 Diest',labelde:'3290 Diest',parentid:'reg.159',show:'true',sort:'683'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.699',label:'3290 Deurne (Diest)',labelnl:'3290 Deurne (Diest)',labelfr:'3290 Deurne',labelen:'3290 Deurne',labelde:'3290 Deurne',parentid:'reg.159',show:'true',sort:'684'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.700',label:'3290 Schaffen (Diest)',labelnl:'3290 Schaffen (Diest)',labelfr:'3290 Schaffen',labelen:'3290 Schaffen',labelde:'3290 Schaffen',parentid:'reg.159',show:'true',sort:'685'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.701',label:'3290 Webbekom (Diest)',labelnl:'3290 Webbekom (Diest)',labelfr:'3290 Webbekom',labelen:'3290 Webbekom',labelde:'3290 Webbekom',parentid:'reg.159',show:'true',sort:'686'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.702',label:'3293 Kaggevinne (Diest)',labelnl:'3293 Kaggevinne (Diest)',labelfr:'3293 Kaggevinne',labelen:'3293 Kaggevinne',labelde:'3293 Kaggevinne',parentid:'reg.159',show:'true',sort:'687'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.703',label:'3294 Molenstede (Diest)',labelnl:'3294 Molenstede (Diest)',labelfr:'3294 Molenstede',labelen:'3294 Molenstede',labelde:'3294 Molenstede',parentid:'reg.159',show:'true',sort:'688'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.704',label:'3300 Tienen',labelnl:'3300 Tienen',labelfr:'3300 Tirlemont',labelen:'3300 Tienen',labelde:'3300 Tienen',parentid:'reg.160',show:'true',sort:'689'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.705',label:'3300 Bost (Tienen)',labelnl:'3300 Bost (Tienen)',labelfr:'3300 Bost',labelen:'3300 Bost',labelde:'3300 Bost',parentid:'reg.160',show:'true',sort:'690'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.706',label:'3300 Goetsenhoven (Tienen)',labelnl:'3300 Goetsenhoven (Tienen)',labelfr:'3300 Gossoncourt',labelen:'3300 Goetsenhoven',labelde:'3300 Goetsenhoven',parentid:'reg.160',show:'true',sort:'691'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.707',label:'3300 Hakendover (Tienen)',labelnl:'3300 Hakendover (Tienen)',labelfr:'3300 Hakendover',labelen:'3300 Hakendover',labelde:'3300 Hakendover',parentid:'reg.160',show:'true',sort:'692'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.708',label:'3300 Kumtich (Tienen)',labelnl:'3300 Kumtich (Tienen)',labelfr:'3300 Kumtich',labelen:'3300 Kumtich',labelde:'3300 Kumtich',parentid:'reg.160',show:'true',sort:'693'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.709',label:'3300 Oorbeek (Tienen)',labelnl:'3300 Oorbeek (Tienen)',labelfr:'3300 Oorbeek',labelen:'3300 Oorbeek',labelde:'3300 Oorbeek',parentid:'reg.160',show:'true',sort:'694'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.710',label:'3300 Oplinter (Tienen)',labelnl:'3300 Oplinter (Tienen)',labelfr:'3300 Oplinter',labelen:'3300 Oplinter',labelde:'3300 Oplinter',parentid:'reg.160',show:'true',sort:'695'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.711',label:'3300 Sint-Margriete-Houtem (Tienen)',labelnl:'3300 Sint-Margriete-Houtem (Tienen)',labelfr:'3300 Hautem-Sainte-Marguerite',labelen:'3300 Sint-Margriete-Houtem',labelde:'3300 Sint-Margriete-Houtem',parentid:'reg.160',show:'true',sort:'696'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.712',label:'3300 Vissenaken (Tienen)',labelnl:'3300 Vissenaken (Tienen)',labelfr:'3300 Vissenaken',labelen:'3300 Vissenaken',labelde:'3300 Vissenaken',parentid:'reg.160',show:'true',sort:'697'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.713',label:'3320 Hoegaarden',labelnl:'3320 Hoegaarden',labelfr:'3320 Hoegaarden',labelen:'3320 Hoegaarden',labelde:'3320 Hoegaarden',parentid:'reg.161',show:'true',sort:'698'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.714',label:'3320 Meldert (Hoegaarden)',labelnl:'3320 Meldert (Hoegaarden)',labelfr:'3320 Meldert',labelen:'3320 Meldert',labelde:'3320 Meldert',parentid:'reg.161',show:'true',sort:'699'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.715',label:'3321 Outgaarden (Hoegaarden)',labelnl:'3321 Outgaarden (Hoegaarden)',labelfr:'3321 Outgaarden',labelen:'3321 Outgaarden',labelde:'3321 Outgaarden',parentid:'reg.161',show:'true',sort:'700'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.716',label:'3350 Linter',labelnl:'3350 Linter',labelfr:'3350 Linter',labelen:'3350 Linter',labelde:'3350 Linter',parentid:'reg.163',show:'true',sort:'701'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.717',label:'3350 Drieslinter (Linter)',labelnl:'3350 Drieslinter (Linter)',labelfr:'3350 Drieslinter',labelen:'3350 Drieslinter',labelde:'3350 Drieslinter',parentid:'reg.163',show:'true',sort:'702'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.718',label:'3350 Melkwezer (Linter)',labelnl:'3350 Melkwezer (Linter)',labelfr:'3350 Melkwezer',labelen:'3350 Melkwezer',labelde:'3350 Melkwezer',parentid:'reg.163',show:'true',sort:'703'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.719',label:'3350 Neerhespen (Linter)',labelnl:'3350 Neerhespen (Linter)',labelfr:'3350 Neerhespen',labelen:'3350 Neerhespen',labelde:'3350 Neerhespen',parentid:'reg.163',show:'true',sort:'704'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.720',label:'3350 Neerlinter (Linter)',labelnl:'3350 Neerlinter (Linter)',labelfr:'3350 Neerlinter',labelen:'3350 Neerlinter',labelde:'3350 Neerlinter',parentid:'reg.163',show:'true',sort:'705'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.721',label:'3350 Orsmaal-Gussenhoven (Linter)',labelnl:'3350 Orsmaal-Gussenhoven (Linter)',labelfr:'3350 Orsmaal-Gussenhoven',labelen:'3350 Orsmaal-Gussenhoven',labelde:'3350 Orsmaal-Gussenhoven',parentid:'reg.163',show:'true',sort:'706'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.722',label:'3350 Overhespen (Linter)',labelnl:'3350 Overhespen (Linter)',labelfr:'3350 Overhespen',labelen:'3350 Overhespen',labelde:'3350 Overhespen',parentid:'reg.163',show:'true',sort:'707'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.723',label:'3350 Wommersom (Linter)',labelnl:'3350 Wommersom (Linter)',labelfr:'3350 Wommersom',labelen:'3350 Wommersom',labelde:'3350 Wommersom',parentid:'reg.163',show:'true',sort:'708'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.724',label:'3360 Bierbeek',labelnl:'3360 Bierbeek',labelfr:'3360 Bierbeek',labelen:'3360 Bierbeek',labelde:'3360 Bierbeek',parentid:'reg.164',show:'true',sort:'709'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.725',label:'3360 Korbeek-Lo (Bierbeek)',labelnl:'3360 Korbeek-Lo (Bierbeek)',labelfr:'3360 Korbeek-Lo',labelen:'3360 Korbeek-Lo',labelde:'3360 Korbeek-Lo',parentid:'reg.164',show:'true',sort:'710'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.726',label:'3360 Lovenjoel (Bierbeek)',labelnl:'3360 Lovenjoel (Bierbeek)',labelfr:'3360 Lovenjoel',labelen:'3360 Lovenjoel',labelde:'3360 Lovenjoel',parentid:'reg.164',show:'true',sort:'711'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.727',label:'3360 Opvelp (Bierbeek)',labelnl:'3360 Opvelp (Bierbeek)',labelfr:'3360 Opvelp',labelen:'3360 Opvelp',labelde:'3360 Opvelp',parentid:'reg.164',show:'true',sort:'712'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.728',label:'3370 Boutersem',labelnl:'3370 Boutersem',labelfr:'3370 Boutersem',labelen:'3370 Boutersem',labelde:'3370 Boutersem',parentid:'reg.165',show:'true',sort:'713'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.729',label:'3370 Kerkom (Boutersem)',labelnl:'3370 Kerkom (Boutersem)',labelfr:'3370 Kerkom',labelen:'3370 Kerkom',labelde:'3370 Kerkom',parentid:'reg.165',show:'true',sort:'714'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.730',label:'3370 Neervelp (Boutersem)',labelnl:'3370 Neervelp (Boutersem)',labelfr:'3370 Neervelp',labelen:'3370 Neervelp',labelde:'3370 Neervelp',parentid:'reg.165',show:'true',sort:'715'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.731',label:'3370 Roosbeek (Boutersem)',labelnl:'3370 Roosbeek (Boutersem)',labelfr:'3370 Roosbeek',labelen:'3370 Roosbeek',labelde:'3370 Roosbeek',parentid:'reg.165',show:'true',sort:'716'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.732',label:'3370 Vertrijk (Boutersem)',labelnl:'3370 Vertrijk (Boutersem)',labelfr:'3370 Vertrijk',labelen:'3370 Vertrijk',labelde:'3370 Vertrijk',parentid:'reg.165',show:'true',sort:'717'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.733',label:'3370 Willebringen (Boutersem)',labelnl:'3370 Willebringen (Boutersem)',labelfr:'3370 Willebringen',labelen:'3370 Willebringen',labelde:'3370 Willebringen',parentid:'reg.165',show:'true',sort:'718'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.734',label:'3380 Glabbeek',labelnl:'3380 Glabbeek',labelfr:'3380 Glabbeek',labelen:'3380 Glabbeek',labelde:'3380 Glabbeek',parentid:'reg.166',show:'true',sort:'719'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.735',label:'3380 Bunsbeek (Glabbeek)',labelnl:'3380 Bunsbeek (Glabbeek)',labelfr:'3380 Bunsbeek',labelen:'3380 Bunsbeek',labelde:'3380 Bunsbeek',parentid:'reg.166',show:'true',sort:'720'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.736',label:'3381 Kapellen (Glabbeek)',labelnl:'3381 Kapellen (Glabbeek)',labelfr:'3381 Kapellen',labelen:'3381 Kapellen',labelde:'3381 Kapellen',parentid:'reg.166',show:'true',sort:'721'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.737',label:'3384 Attenrode (Glabbeek)',labelnl:'3384 Attenrode (Glabbeek)',labelfr:'3384 Attenrode-Wever',labelen:'3384 Attenrode',labelde:'3384 Attenrode',parentid:'reg.166',show:'true',sort:'722'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.738',label:'3390 Tielt-Winge',labelnl:'3390 Tielt-Winge',labelfr:'3390 Tielt-Winge',labelen:'3390 Tielt-Winge',labelde:'3390 Tielt-Winge',parentid:'reg.167',show:'true',sort:'723'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.739',label:'3390 Houwaart (Tielt-Winge)',labelnl:'3390 Houwaart (Tielt-Winge)',labelfr:'3390 Houwaart',labelen:'3390 Houwaart',labelde:'3390 Houwaart',parentid:'reg.167',show:'true',sort:'724'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.740',label:'3390 Sint-Joris-Winge (Tielt-Winge)',labelnl:'3390 Sint-Joris-Winge (Tielt-Winge)',labelfr:'3390 Winghe-Saint-Georges',labelen:'3390 Sint-Joris-Winge',labelde:'3390 Sint-Joris-Winge',parentid:'reg.167',show:'true',sort:'725'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.741',label:'3390 Tielt (Tielt-Winge)',labelnl:'3390 Tielt (Tielt-Winge)',labelfr:'3390 Tielt',labelen:'3390 Tielt',labelde:'3390 Tielt',parentid:'reg.167',show:'true',sort:'726'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.742',label:'3391 Meensel-Kiezegem (Tielt-Winge)',labelnl:'3391 Meensel-Kiezegem (Tielt-Winge)',labelfr:'3391 Meensel-Kiezegem',labelen:'3391 Meensel-Kiezegem',labelde:'3391 Meensel-Kiezegem',parentid:'reg.167',show:'true',sort:'727'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.743',label:'3400 Landen',labelnl:'3400 Landen',labelfr:'3400 Landen',labelen:'3400 Landen',labelde:'3400 Landen',parentid:'reg.168',show:'true',sort:'728'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.744',label:'3400 Eliksem (Landen)',labelnl:'3400 Eliksem (Landen)',labelfr:'3400 Eliksem',labelen:'3400 Eliksem',labelde:'3400 Eliksem',parentid:'reg.168',show:'true',sort:'729'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.745',label:'3400 Ezemaal (Landen)',labelnl:'3400 Ezemaal (Landen)',labelfr:'3400 Ezemaal',labelen:'3400 Ezemaal',labelde:'3400 Ezemaal',parentid:'reg.168',show:'true',sort:'730'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.746',label:'3400 Laar (Landen)',labelnl:'3400 Laar (Landen)',labelfr:'3400 Laar',labelen:'3400 Laar',labelde:'3400 Laar',parentid:'reg.168',show:'true',sort:'731'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.747',label:'3400 Neerwinden (Landen)',labelnl:'3400 Neerwinden (Landen)',labelfr:'3400 Neerwinden',labelen:'3400 Neerwinden',labelde:'3400 Neerwinden',parentid:'reg.168',show:'true',sort:'732'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.748',label:'3400 Overwinden (Landen)',labelnl:'3400 Overwinden (Landen)',labelfr:'3400 Overwinden',labelen:'3400 Overwinden',labelde:'3400 Overwinden',parentid:'reg.168',show:'true',sort:'733'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.749',label:'3400 Rumsdorp (Landen)',labelnl:'3400 Rumsdorp (Landen)',labelfr:'3400 Rumsdorp',labelen:'3400 Rumsdorp',labelde:'3400 Rumsdorp',parentid:'reg.168',show:'true',sort:'734'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.750',label:'3400 Wange (Landen)',labelnl:'3400 Wange (Landen)',labelfr:'3400 Wange',labelen:'3400 Wange',labelde:'3400 Wange',parentid:'reg.168',show:'true',sort:'735'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.751',label:'3401 Waasmont (Landen)',labelnl:'3401 Waasmont (Landen)',labelfr:'3401 Wamont',labelen:'3401 Waasmont',labelde:'3401 Waasmont',parentid:'reg.168',show:'true',sort:'736'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.752',label:'3401 Walsbets (Landen)',labelnl:'3401 Walsbets (Landen)',labelfr:'3401 Walsbets',labelen:'3401 Walsbets',labelde:'3401 Walsbets',parentid:'reg.168',show:'true',sort:'737'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.753',label:'3401 Walshoutem (Landen)',labelnl:'3401 Walshoutem (Landen)',labelfr:'3401 Houtain l\'Évêque',labelen:'3401 Walshoutem',labelde:'3401 Walshoutem',parentid:'reg.168',show:'true',sort:'738'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.754',label:'3401 Wezeren (Landen)',labelnl:'3401 Wezeren (Landen)',labelfr:'3401 Wezeren',labelen:'3401 Wezeren',labelde:'3401 Wezeren',parentid:'reg.168',show:'true',sort:'739'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.755',label:'3404 Attenhoven (Landen)',labelnl:'3404 Attenhoven (Landen)',labelfr:'3404 Attenhoven',labelen:'3404 Attenhoven',labelde:'3404 Attenhoven',parentid:'reg.168',show:'true',sort:'740'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.756',label:'3404 Neerlanden (Landen)',labelnl:'3404 Neerlanden (Landen)',labelfr:'3404 Neerlanden',labelen:'3404 Neerlanden',labelde:'3404 Neerlanden',parentid:'reg.168',show:'true',sort:'741'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.757',label:'3440 Zoutleeuw',labelnl:'3440 Zoutleeuw',labelfr:'3440 Léau',labelen:'3440 Zoutleeuw',labelde:'3440 Zoutleeuw',parentid:'reg.169',show:'true',sort:'742'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.758',label:'3440 Budingen (Zoutleeuw)',labelnl:'3440 Budingen (Zoutleeuw)',labelfr:'3440 Budingen',labelen:'3440 Budingen',labelde:'3440 Budingen',parentid:'reg.169',show:'true',sort:'743'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.759',label:'3440 Dormaal (Zoutleeuw)',labelnl:'3440 Dormaal (Zoutleeuw)',labelfr:'3440 Dormaal',labelen:'3440 Dormaal',labelde:'3440 Dormaal',parentid:'reg.169',show:'true',sort:'744'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.760',label:'3440 Halle-Booienhoven (Zoutleeuw)',labelnl:'3440 Halle-Booienhoven (Zoutleeuw)',labelfr:'3440 Halle-Booienhoven',labelen:'3440 Halle-Booienhoven',labelde:'3440 Halle-Booienhoven',parentid:'reg.169',show:'true',sort:'745'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.761',label:'3440 Helen-Bos (Zoutleeuw)',labelnl:'3440 Helen-Bos (Zoutleeuw)',labelfr:'3440 Helen-Bos',labelen:'3440 Helen-Bos',labelde:'3440 Helen-Bos',parentid:'reg.169',show:'true',sort:'746'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.762',label:'3450 Geetbets',labelnl:'3450 Geetbets',labelfr:'3450 Geetbets',labelen:'3450 Geetbets',labelde:'3450 Geetbets',parentid:'reg.170',show:'true',sort:'747'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.763',label:'3450 Grazen (Geetbets)',labelnl:'3450 Grazen (Geetbets)',labelfr:'3450 Grazen',labelen:'3450 Grazen',labelde:'3450 Grazen',parentid:'reg.170',show:'true',sort:'748'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.764',label:'3454 Rummen (Geetbets)',labelnl:'3454 Rummen (Geetbets)',labelfr:'3454 Rumigny',labelen:'3454 Rummen',labelde:'3454 Rummen',parentid:'reg.170',show:'true',sort:'749'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.765',label:'3460 Bekkevoort',labelnl:'3460 Bekkevoort',labelfr:'3460 Bekkevoort',labelen:'3460 Bekkevoort',labelde:'3460 Bekkevoort',parentid:'reg.171',show:'true',sort:'750'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.766',label:'3460 Assent (Bekkevoort)',labelnl:'3460 Assent (Bekkevoort)',labelfr:'3460 Assent',labelen:'3460 Assent',labelde:'3460 Assent',parentid:'reg.171',show:'true',sort:'751'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.767',label:'3461 Molenbeek-Wersbeek (Bekkevoort)',labelnl:'3461 Molenbeek-Wersbeek (Bekkevoort)',labelfr:'3461 Molenbeek-Wersbeek',labelen:'3461 Molenbeek-Wersbeek',labelde:'3461 Molenbeek-Wersbeek',parentid:'reg.171',show:'true',sort:'752'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.768',label:'3470 Kortenaken',labelnl:'3470 Kortenaken',labelfr:'3470 Kortenaken',labelen:'3470 Kortenaken',labelde:'3470 Kortenaken',parentid:'reg.172',show:'true',sort:'753'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.769',label:'3470 Ransberg (Kortenaken)',labelnl:'3470 Ransberg (Kortenaken)',labelfr:'3470 Ransberg',labelen:'3470 Ransberg',labelde:'3470 Ransberg',parentid:'reg.172',show:'true',sort:'754'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.770',label:'3470 Sint-Margriete (Kortenaken)',labelnl:'3470 Sint-Margriete (Kortenaken)',labelfr:'3470 Sint-Margriete',labelen:'3470 Sint-Margriete',labelde:'3470 Sint-Margriete',parentid:'reg.172',show:'true',sort:'755'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.771',label:'3471 Hoeleden (Kortenaken)',labelnl:'3471 Hoeleden (Kortenaken)',labelfr:'3471 Hoeleden',labelen:'3471 Hoeleden',labelde:'3471 Hoeleden',parentid:'reg.172',show:'true',sort:'756'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.772',label:'3472 Kersbeek-Miskom (Kortenaken)',labelnl:'3472 Kersbeek-Miskom (Kortenaken)',labelfr:'3472 Kersbeek-Miskom',labelen:'3472 Kersbeek-Miskom',labelde:'3472 Kersbeek-Miskom',parentid:'reg.172',show:'true',sort:'757'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.773',label:'3473 Waanrode (Kortenaken)',labelnl:'3473 Waanrode (Kortenaken)',labelfr:'3473 Waanrode',labelen:'3473 Waanrode',labelde:'3473 Waanrode',parentid:'reg.172',show:'true',sort:'758'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.774',label:'3500 Hasselt',labelnl:'3500 Hasselt',labelfr:'3500 Hasselt',labelen:'3500 Hasselt',labelde:'3500 Hasselt',parentid:'reg.173',show:'true',sort:'759'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.775',label:'3500 Sint-Lambrechts-Herk (Hasselt)',labelnl:'3500 Sint-Lambrechts-Herk (Hasselt)',labelfr:'3500 Herck-Saint-Lambert',labelen:'3500 Sint-Lambrechts-Herk',labelde:'3500 Sint-Lambrechts-Herk',parentid:'reg.173',show:'true',sort:'760'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.776',label:'3501 Wimmertingen (Hasselt)',labelnl:'3501 Wimmertingen (Hasselt)',labelfr:'3501 Wimmertingen',labelen:'3501 Wimmertingen',labelde:'3501 Wimmertingen',parentid:'reg.173',show:'true',sort:'761'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.777',label:'3510 Kermt (Hasselt)',labelnl:'3510 Kermt (Hasselt)',labelfr:'3510 Kermt',labelen:'3510 Kermt',labelde:'3510 Kermt',parentid:'reg.173',show:'true',sort:'762'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.778',label:'3510 Spalbeek (Hasselt)',labelnl:'3510 Spalbeek (Hasselt)',labelfr:'3510 Spalbeek',labelen:'3510 Spalbeek',labelde:'3510 Spalbeek',parentid:'reg.173',show:'true',sort:'763'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.779',label:'3511 Kuringen (Hasselt)',labelnl:'3511 Kuringen (Hasselt)',labelfr:'3511 Kuringen',labelen:'3511 Kuringen',labelde:'3511 Kuringen',parentid:'reg.173',show:'true',sort:'764'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.780',label:'3511 Stokrooie (Hasselt)',labelnl:'3511 Stokrooie (Hasselt)',labelfr:'3511 Stokrooie',labelen:'3511 Stokrooie',labelde:'3511 Stokrooie',parentid:'reg.173',show:'true',sort:'765'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.781',label:'3512 Stevoort (Hasselt)',labelnl:'3512 Stevoort (Hasselt)',labelfr:'3512 Stevoort',labelen:'3512 Stevoort',labelde:'3512 Stevoort',parentid:'reg.173',show:'true',sort:'766'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.782',label:'3520 Zonhoven',labelnl:'3520 Zonhoven',labelfr:'3520 Zonhoven',labelen:'3520 Zonhoven',labelde:'3520 Zonhoven',parentid:'reg.174',show:'true',sort:'767'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.783',label:'3530 Houthalen-Helchteren',labelnl:'3530 Houthalen-Helchteren',labelfr:'3530 Houthalen-Helchteren',labelen:'3530 Houthalen-Helchteren',labelde:'3530 Houthalen-Helchteren',parentid:'reg.175',show:'true',sort:'768'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.784',label:'3530 Helchteren (Houthalen-Helchteren)',labelnl:'3530 Helchteren (Houthalen-Helchteren)',labelfr:'3530 Helchteren',labelen:'3530 Helchteren',labelde:'3530 Helchteren',parentid:'reg.175',show:'true',sort:'769'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.785',label:'3530 Houthalen (Houthalen-Helchteren)',labelnl:'3530 Houthalen (Houthalen-Helchteren)',labelfr:'3530 Houthalen',labelen:'3530 Houthalen',labelde:'3530 Houthalen',parentid:'reg.175',show:'true',sort:'770'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.786',label:'3540 Herk-De-Stad',labelnl:'3540 Herk-De-Stad',labelfr:'3540 Herck-la-Ville',labelen:'3540 Herk-de-Stad',labelde:'3540 Herk-de-Stad',parentid:'reg.176',show:'true',sort:'771'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.787',label:'3540 Berbroek (Herk-De-Stad)',labelnl:'3540 Berbroek (Herk-De-Stad)',labelfr:'3540 Berbroek',labelen:'3540 Berbroek',labelde:'3540 Berbroek',parentid:'reg.176',show:'true',sort:'772'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.788',label:'3540 Donk (Herk-De-Stad)',labelnl:'3540 Donk (Herk-De-Stad)',labelfr:'3540 Donk',labelen:'3540 Donk',labelde:'3540 Donk',parentid:'reg.176',show:'true',sort:'773'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.789',label:'3540 Schulen (Herk-De-Stad)',labelnl:'3540 Schulen (Herk-De-Stad)',labelfr:'3540 Schulen',labelen:'3540 Schulen',labelde:'3540 Schulen',parentid:'reg.176',show:'true',sort:'774'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.790',label:'3545 Halen',labelnl:'3545 Halen',labelfr:'3545 Halen',labelen:'3545 Halen',labelde:'3545 Halen',parentid:'reg.177',show:'true',sort:'775'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.791',label:'3545 Loksbergen (Halen)',labelnl:'3545 Loksbergen (Halen)',labelfr:'3545 Loksbergen',labelen:'3545 Loksbergen',labelde:'3545 Loksbergen',parentid:'reg.177',show:'true',sort:'776'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.792',label:'3545 Zelem (Halen)',labelnl:'3545 Zelem (Halen)',labelfr:'3545 Zelem',labelen:'3545 Zelem',labelde:'3545 Zelem',parentid:'reg.177',show:'true',sort:'777'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.793',label:'3550 Heusden-Zolder',labelnl:'3550 Heusden-Zolder',labelfr:'3550 Heusden-Zolder',labelen:'3550 Heusden-Zolder',labelde:'3550 Heusden-Zolder',parentid:'reg.178',show:'true',sort:'778'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.794',label:'3550 Heusden (Heusden-Zolder)',labelnl:'3550 Heusden (Heusden-Zolder)',labelfr:'3550 Heusden',labelen:'3550 Heusden',labelde:'3550 Heusden',parentid:'reg.178',show:'true',sort:'779'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.795',label:'3550 Zolder (Heusden-Zolder)',labelnl:'3550 Zolder (Heusden-Zolder)',labelfr:'3550 Zolder',labelen:'3550 Zolder',labelde:'3550 Zolder',parentid:'reg.178',show:'true',sort:'780'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.796',label:'3560 Lummen',labelnl:'3560 Lummen',labelfr:'3560 Lummen',labelen:'3560 Lummen',labelde:'3560 Lummen',parentid:'reg.179',show:'true',sort:'781'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.797',label:'3560 Linkhout (Lummen)',labelnl:'3560 Linkhout (Lummen)',labelfr:'3560 Linkhout',labelen:'3560 Linkhout',labelde:'3560 Linkhout',parentid:'reg.179',show:'true',sort:'782'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.798',label:'3560 Meldert (Lummen)',labelnl:'3560 Meldert (Lummen)',labelfr:'3560 Meldert',labelen:'3560 Meldert',labelde:'3560 Meldert',parentid:'reg.179',show:'true',sort:'783'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.799',label:'3570 Alken',labelnl:'3570 Alken',labelfr:'3570 Alken',labelen:'3570 Alken',labelde:'3570 Alken',parentid:'reg.180',show:'true',sort:'784'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.800',label:'3580 Beringen',labelnl:'3580 Beringen',labelfr:'3580 Beringen',labelen:'3580 Beringen',labelde:'3580 Beringen',parentid:'reg.181',show:'true',sort:'785'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.801',label:'3581 Beverlo (Beringen)',labelnl:'3581 Beverlo (Beringen)',labelfr:'3581 Beverlo',labelen:'3581 Beverlo',labelde:'3581 Beverlo',parentid:'reg.181',show:'true',sort:'786'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.802',label:'3582 Koersel (Beringen)',labelnl:'3582 Koersel (Beringen)',labelfr:'3582 Koersel',labelen:'3582 Koersel',labelde:'3582 Koersel',parentid:'reg.181',show:'true',sort:'787'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.803',label:'3583 Paal (Beringen)',labelnl:'3583 Paal (Beringen)',labelfr:'3583 Paal',labelen:'3583 Paal',labelde:'3583 Paal',parentid:'reg.181',show:'true',sort:'788'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.804',label:'3590 Diepenbeek',labelnl:'3590 Diepenbeek',labelfr:'3590 Diepenbeek',labelen:'3590 Diepenbeek',labelde:'3590 Diepenbeek',parentid:'reg.182',show:'true',sort:'789'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.805',label:'3600 Genk',labelnl:'3600 Genk',labelfr:'3600 Genk',labelen:'3600 Genk',labelde:'3600 Genk',parentid:'reg.183',show:'true',sort:'790'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.806',label:'3620 Lanaken',labelnl:'3620 Lanaken',labelfr:'3620 Lanaken',labelen:'3620 Lanaken',labelde:'3620 Lanaken',parentid:'reg.184',show:'true',sort:'791'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.807',label:'3620 Gellik (Lanaken)',labelnl:'3620 Gellik (Lanaken)',labelfr:'3620 Gellik',labelen:'3620 Gellik',labelde:'3620 Gellik',parentid:'reg.184',show:'true',sort:'792'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.808',label:'3620 Neerharen (Lanaken)',labelnl:'3620 Neerharen (Lanaken)',labelfr:'3620 Neerharen',labelen:'3620 Neerharen',labelde:'3620 Neerharen',parentid:'reg.184',show:'true',sort:'793'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.809',label:'3620 Veldwezelt (Lanaken)',labelnl:'3620 Veldwezelt (Lanaken)',labelfr:'3620 Veldwezelt',labelen:'3620 Veldwezelt',labelde:'3620 Veldwezelt',parentid:'reg.184',show:'true',sort:'794'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.810',label:'3621 Rekem (Lanaken)',labelnl:'3621 Rekem (Lanaken)',labelfr:'3621 Rekem',labelen:'3621 Rekem',labelde:'3621 Rekem',parentid:'reg.184',show:'true',sort:'795'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.811',label:'3630 Maasmechelen',labelnl:'3630 Maasmechelen',labelfr:'3630 Maasmechelen',labelen:'3630 Maasmechelen',labelde:'3630 Maasmechelen',parentid:'reg.185',show:'true',sort:'796'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.812',label:'3630 Eisden (Maasmechelen)',labelnl:'3630 Eisden (Maasmechelen)',labelfr:'3630 Eisden',labelen:'3630 Eisden',labelde:'3630 Eisden',parentid:'reg.185',show:'true',sort:'797'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.813',label:'3630 Leut (Maasmechelen)',labelnl:'3630 Leut (Maasmechelen)',labelfr:'3630 Leut',labelen:'3630 Leut',labelde:'3630 Leut',parentid:'reg.185',show:'true',sort:'798'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.814',label:'3630 Mechelen-Aan-De-Maas (Maasmechelen)',labelnl:'3630 Mechelen-Aan-De-Maas (Maasmechelen)',labelfr:'3630 Malines-sur-Meuse',labelen:'3630 Mechelen-aan-de-Maas',labelde:'3630 Mechelen-aan-de-Maas',parentid:'reg.185',show:'true',sort:'799'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.815',label:'3630 Meeswijk (Maasmechelen)',labelnl:'3630 Meeswijk (Maasmechelen)',labelfr:'3630 Meeswijk',labelen:'3630 Meeswijk',labelde:'3630 Meeswijk',parentid:'reg.185',show:'true',sort:'800'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.816',label:'3630 Opgrimbie (Maasmechelen)',labelnl:'3630 Opgrimbie (Maasmechelen)',labelfr:'3630 Opgrimbie',labelen:'3630 Opgrimbie',labelde:'3630 Opgrimbie',parentid:'reg.185',show:'true',sort:'801'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.817',label:'3630 Vucht (Maasmechelen)',labelnl:'3630 Vucht (Maasmechelen)',labelfr:'3630 Vucht',labelen:'3630 Vucht',labelde:'3630 Vucht',parentid:'reg.185',show:'true',sort:'802'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.818',label:'3631 Boorsem (Maasmechelen)',labelnl:'3631 Boorsem (Maasmechelen)',labelfr:'3631 Boorsem',labelen:'3631 Boorsem',labelde:'3631 Boorsem',parentid:'reg.185',show:'true',sort:'803'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.819',label:'3631 Uikhoven (Maasmechelen)',labelnl:'3631 Uikhoven (Maasmechelen)',labelfr:'3631 Uikhoven',labelen:'3631 Uikhoven',labelde:'3631 Uikhoven',parentid:'reg.185',show:'true',sort:'804'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.820',label:'3640 Kinrooi',labelnl:'3640 Kinrooi',labelfr:'3640 Kinrooi',labelen:'3640 Kinrooi',labelde:'3640 Kinrooi',parentid:'reg.186',show:'true',sort:'805'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.821',label:'3640 Kessenich (Kinrooi)',labelnl:'3640 Kessenich (Kinrooi)',labelfr:'3640 Kessenich',labelen:'3640 Kessenich',labelde:'3640 Kessenich',parentid:'reg.186',show:'true',sort:'806'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.822',label:'3640 Molenbeersel (Kinrooi)',labelnl:'3640 Molenbeersel (Kinrooi)',labelfr:'3640 Molenbeersel',labelen:'3640 Molenbeersel',labelde:'3640 Molenbeersel',parentid:'reg.186',show:'true',sort:'807'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.823',label:'3640 Ophoven (Kinrooi)',labelnl:'3640 Ophoven (Kinrooi)',labelfr:'3640 Ophoven',labelen:'3640 Ophoven',labelde:'3640 Ophoven',parentid:'reg.186',show:'true',sort:'808'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.824',label:'3650 Dilsen-Stokkem',labelnl:'3650 Dilsen-Stokkem',labelfr:'3650 Dilsen-Stokkem',labelen:'3650 Dilsen-Stokkem',labelde:'3650 Dilsen-Stokkem',parentid:'reg.187',show:'true',sort:'809'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.825',label:'3650 Dilsen (Dilsen-Stokkem)',labelnl:'3650 Dilsen (Dilsen-Stokkem)',labelfr:'3650 Dilsen',labelen:'3650 Dilsen',labelde:'3650 Dilsen',parentid:'reg.187',show:'true',sort:'810'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.826',label:'3650 Elen (Dilsen-Stokkem)',labelnl:'3650 Elen (Dilsen-Stokkem)',labelfr:'3650 Elen',labelen:'3650 Elen',labelde:'3650 Elen',parentid:'reg.187',show:'true',sort:'811'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.827',label:'3650 Lanklaar (Dilsen-Stokkem)',labelnl:'3650 Lanklaar (Dilsen-Stokkem)',labelfr:'3650 Lanklaar',labelen:'3650 Lanklaar',labelde:'3650 Lanklaar',parentid:'reg.187',show:'true',sort:'812'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.828',label:'3650 Rotem (Dilsen-Stokkem)',labelnl:'3650 Rotem (Dilsen-Stokkem)',labelfr:'3650 Rotem',labelen:'3650 Rotem',labelde:'3650 Rotem',parentid:'reg.187',show:'true',sort:'813'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.829',label:'3650 Stokkem (Dilsen-Stokkem)',labelnl:'3650 Stokkem (Dilsen-Stokkem)',labelfr:'3650 Stokkem',labelen:'3650 Stokkem',labelde:'3650 Stokkem',parentid:'reg.824',show:'true',sort:'814'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.830',label:'3660 Opglabbeek',labelnl:'3660 Opglabbeek',labelfr:'3660 Opglabbeek',labelen:'3660 Opglabbeek',labelde:'3660 Opglabbeek',parentid:'reg.188',show:'true',sort:'815'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.831',label:'3665 As',labelnl:'3665 As',labelfr:'3665 As',labelen:'3665 As',labelde:'3665 As',parentid:'reg.189',show:'true',sort:'816'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.832',label:'3668 Niel-Bij-As (As)',labelnl:'3668 Niel-Bij-As (As)',labelfr:'3668 Niel-bij-As',labelen:'3668 Niel-bij-As',labelde:'3668 Niel-bij-As',parentid:'reg.189',show:'true',sort:'817'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.833',label:'3670 Meeuwen-Gruitrode',labelnl:'3670 Meeuwen-Gruitrode',labelfr:'3670 Meeuwen-Gruitrode',labelen:'3670 Meeuwen-Gruitrode',labelde:'3670 Meeuwen-Gruitrode',parentid:'reg.190',show:'true',sort:'818'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.834',label:'3670 Ellikom (Meeuwen-Gruitrode)',labelnl:'3670 Ellikom (Meeuwen-Gruitrode)',labelfr:'3670 Ellikom',labelen:'3670 Ellikom',labelde:'3670 Ellikom',parentid:'reg.190',show:'true',sort:'819'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.835',label:'3670 Gruitrode (Meeuwen-Gruitrode)',labelnl:'3670 Gruitrode (Meeuwen-Gruitrode)',labelfr:'3670 Gruitrode',labelen:'3670 Gruitrode',labelde:'3670 Gruitrode',parentid:'reg.190',show:'true',sort:'820'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.836',label:'3670 Meeuwen (Meeuwen-Gruitrode)',labelnl:'3670 Meeuwen (Meeuwen-Gruitrode)',labelfr:'3670 Meeuwen',labelen:'3670 Meeuwen',labelde:'3670 Meeuwen',parentid:'reg.190',show:'true',sort:'821'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.837',label:'3670 Neerglabbeek (Meeuwen-Gruitrode)',labelnl:'3670 Neerglabbeek (Meeuwen-Gruitrode)',labelfr:'3670 Neerglabbeek',labelen:'3670 Neerglabbeek',labelde:'3670 Neerglabbeek',parentid:'reg.190',show:'true',sort:'822'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.838',label:'3670 Wijshagen (Meeuwen-Gruitrode)',labelnl:'3670 Wijshagen (Meeuwen-Gruitrode)',labelfr:'3670 Wijshagen',labelen:'3670 Wijshagen',labelde:'3670 Wijshagen',parentid:'reg.190',show:'true',sort:'823'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.839',label:'3680 Maaseik',labelnl:'3680 Maaseik',labelfr:'3680 Maaseik',labelen:'3680 Maaseik',labelde:'3680 Maaseik',parentid:'reg.191',show:'true',sort:'824'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.840',label:'3680 Neeroeteren (Maaseik)',labelnl:'3680 Neeroeteren (Maaseik)',labelfr:'3680 Neeroeteren',labelen:'3680 Neeroeteren',labelde:'3680 Neeroeteren',parentid:'reg.191',show:'true',sort:'825'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.841',label:'3680 Opoeteren (Maaseik)',labelnl:'3680 Opoeteren (Maaseik)',labelfr:'3680 Opoeteren',labelen:'3680 Opoeteren',labelde:'3680 Opoeteren',parentid:'reg.191',show:'true',sort:'826'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.842',label:'3690 Zutendaal',labelnl:'3690 Zutendaal',labelfr:'3690 Zutendaal',labelen:'3690 Zutendaal',labelde:'3690 Zutendaal',parentid:'reg.192',show:'true',sort:'827'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.843',label:'3700 Tongeren',labelnl:'3700 Tongeren',labelfr:'3700 Tongres',labelen:'3700 Tongeren',labelde:'3700 Tongern',parentid:'reg.193',show:'true',sort:'828'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.844',label:'3700 Berg (Tongeren)',labelnl:'3700 Berg (Tongeren)',labelfr:'3700 Berg',labelen:'3700 Berg',labelde:'3700 Berg',parentid:'reg.193',show:'true',sort:'829'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.845',label:'3700 Diets-Heur (Tongeren)',labelnl:'3700 Diets-Heur (Tongeren)',labelfr:'3700 Heure-le-Tixhe',labelen:'3700 Diets-Heur',labelde:'3700 Diets-Heur',parentid:'reg.193',show:'true',sort:'830'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.846',label:'3700 Haren (Tongeren)',labelnl:'3700 Haren (Tongeren)',labelfr:'3700 Haren',labelen:'3700 Haren',labelde:'3700 Haren',parentid:'reg.193',show:'true',sort:'831'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.847',label:'3700 Henis (Tongeren)',labelnl:'3700 Henis (Tongeren)',labelfr:'3700 Henis',labelen:'3700 Henis',labelde:'3700 Henis',parentid:'reg.193',show:'true',sort:'832'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.848',label:'3700 Kolmont (Tongeren)',labelnl:'3700 Kolmont (Tongeren)',labelfr:'3700 Kolmont',labelen:'3700 Kolmont',labelde:'3700 Kolmont',parentid:'reg.193',show:'true',sort:'833'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.849',label:'3700 Koninksem (Tongeren)',labelnl:'3700 Koninksem (Tongeren)',labelfr:'3700 Koninksem',labelen:'3700 Koninksem',labelde:'3700 Koninksem',parentid:'reg.193',show:'true',sort:'834'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.850',label:'3700 Lauw (Tongeren)',labelnl:'3700 Lauw (Tongeren)',labelfr:'3700 Lowaige',labelen:'3700 Lauw',labelde:'3700 Lauw',parentid:'reg.193',show:'true',sort:'835'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.851',label:'3700 Mal (Tongeren)',labelnl:'3700 Mal (Tongeren)',labelfr:'3700 Mal',labelen:'3700 Mal',labelde:'3700 Mal',parentid:'reg.193',show:'true',sort:'836'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.852',label:'3700 Neerrepen (Tongeren)',labelnl:'3700 Neerrepen (Tongeren)',labelfr:'3700 Neerrepen',labelen:'3700 Neerrepen',labelde:'3700 Neerrepen',parentid:'reg.193',show:'true',sort:'837'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.853',label:'3700 Nerem (Tongeren)',labelnl:'3700 Nerem (Tongeren)',labelfr:'3700 Nerem',labelen:'3700 Nerem',labelde:'3700 Nerem',parentid:'reg.193',show:'true',sort:'838'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.854',label:'3700 Overrepen (Tongeren)',labelnl:'3700 Overrepen (Tongeren)',labelfr:'3700 Overrepen',labelen:'3700 Overrepen',labelde:'3700 Overrepen',parentid:'reg.193',show:'true',sort:'839'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.855',label:'3700 Piringen (Tongeren)',labelnl:'3700 Piringen (Tongeren)',labelfr:'3700 Pirange',labelen:'3700 Piringen',labelde:'3700 Piringen',parentid:'reg.193',show:'true',sort:'840'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.856',label:'3700 Riksingen (Tongeren)',labelnl:'3700 Riksingen (Tongeren)',labelfr:'3700 Riksingen',labelen:'3700 Riksingen',labelde:'3700 Riksingen',parentid:'reg.193',show:'true',sort:'841'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.857',label:'3700 Rutten (Tongeren)',labelnl:'3700 Rutten (Tongeren)',labelfr:'3700 Russon',labelen:'3700 Rutten',labelde:'3700 Rutten',parentid:'reg.193',show:'true',sort:'842'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.858',label:'3700 \'s Herenelderen (Tongeren)',labelnl:'3700 \'s Herenelderen (Tongeren)',labelfr:'3700 \'s-Herenelderen',labelen:'3700 \'s-Herenelderen',labelde:'3700 \'s-Herenelderen',parentid:'reg.193',show:'true',sort:'843'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.859',label:'3700 Sluizen (Tongeren)',labelnl:'3700 Sluizen (Tongeren)',labelfr:'3700 Sluse',labelen:'3700 Sluizen',labelde:'3700 Sluizen',parentid:'reg.193',show:'true',sort:'844'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.860',label:'3700 Vreren (Tongeren)',labelnl:'3700 Vreren (Tongeren)',labelfr:'3700 Frères',labelen:'3700 Vreren',labelde:'3700 Vreren',parentid:'reg.193',show:'true',sort:'845'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.861',label:'3700 Widooie (Tongeren)',labelnl:'3700 Widooie (Tongeren)',labelfr:'3700 Bidoye',labelen:'3700 Widooie',labelde:'3700 Widooie',parentid:'reg.193',show:'true',sort:'846'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.862',label:'3717 Herstappe',labelnl:'3717 Herstappe',labelfr:'3717 Herstappe',labelen:'3717 Herstappe',labelde:'3717 Herstappe',parentid:'reg.194',show:'true',sort:'847'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.863',label:'3720 Kortessem',labelnl:'3720 Kortessem',labelfr:'3720 Kortessem',labelen:'3720 Kortessem',labelde:'3720 Kortessem',parentid:'reg.195',show:'true',sort:'848'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.864',label:'3721 Vliermaalroot (Kortessem)',labelnl:'3721 Vliermaalroot (Kortessem)',labelfr:'3721 Vliermaalroot',labelen:'3721 Vliermaalroot',labelde:'3721 Vliermaalroot',parentid:'reg.195',show:'true',sort:'849'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.865',label:'3722 Wintershoven (Kortessem)',labelnl:'3722 Wintershoven (Kortessem)',labelfr:'3722 Wintershoven',labelen:'3722 Wintershoven',labelde:'3722 Wintershoven',parentid:'reg.195',show:'true',sort:'850'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.866',label:'3723 Guigoven (Kortessem)',labelnl:'3723 Guigoven (Kortessem)',labelfr:'3723 Guigoven',labelen:'3723 Guigoven',labelde:'3723 Guigoven',parentid:'reg.195',show:'true',sort:'851'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.867',label:'3724 Vliermaal (Kortessem)',labelnl:'3724 Vliermaal (Kortessem)',labelfr:'3724 Vliermaal',labelen:'3724 Vliermaal',labelde:'3724 Vliermaal',parentid:'reg.195',show:'true',sort:'852'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.868',label:'3730 Hoeselt',labelnl:'3730 Hoeselt',labelfr:'3730 Hoeselt',labelen:'3730 Hoeselt',labelde:'3730 Hoeselt',parentid:'reg.196',show:'true',sort:'853'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.869',label:'3730 Romershoven (Hoeselt)',labelnl:'3730 Romershoven (Hoeselt)',labelfr:'3730 Romershoven',labelen:'3730 Romershoven',labelde:'3730 Romershoven',parentid:'reg.196',show:'true',sort:'854'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.870',label:'3730 Sint-Huibrechts-Hern (Hoeselt)',labelnl:'3730 Sint-Huibrechts-Hern (Hoeselt)',labelfr:'3730 Sint-Huibrechts-Hern',labelen:'3730 Sint-Huibrechts-Hern',labelde:'3730 Sint-Huibrechts-Hern',parentid:'reg.196',show:'true',sort:'855'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.871',label:'3730 Werm (Hoeselt)',labelnl:'3730 Werm (Hoeselt)',labelfr:'3730 Werm',labelen:'3730 Werm',labelde:'3730 Werm',parentid:'reg.196',show:'true',sort:'856'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.872',label:'3732 Schalkhoven (Hoeselt)',labelnl:'3732 Schalkhoven (Hoeselt)',labelfr:'3732 Schalkhoven',labelen:'3732 Schalkhoven',labelde:'3732 Schalkhoven',parentid:'reg.196',show:'true',sort:'857'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.873',label:'3740 Bilzen',labelnl:'3740 Bilzen',labelfr:'3740 Bilzen',labelen:'3740 Bilzen',labelde:'3740 Bilzen',parentid:'reg.197',show:'true',sort:'858'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.874',label:'3740 Beverst (Bilzen)',labelnl:'3740 Beverst (Bilzen)',labelfr:'3740 Beverst',labelen:'3740 Beverst',labelde:'3740 Beverst',parentid:'reg.197',show:'true',sort:'859'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.875',label:'3740 Eigenbilzen (Bilzen)',labelnl:'3740 Eigenbilzen (Bilzen)',labelfr:'3740 Eigenbilzen',labelen:'3740 Eigenbilzen',labelde:'3740 Eigenbilzen',parentid:'reg.197',show:'true',sort:'860'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.876',label:'3740 Grote-Spouwen (Bilzen)',labelnl:'3740 Grote-Spouwen (Bilzen)',labelfr:'3740 Grote-Spouwen',labelen:'3740 Grote-Spouwen',labelde:'3740 Grote-Spouwen',parentid:'reg.197',show:'true',sort:'861'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.877',label:'3740 Hees (Bilzen)',labelnl:'3740 Hees (Bilzen)',labelfr:'3740 Hees',labelen:'3740 Hees',labelde:'3740 Hees',parentid:'reg.197',show:'true',sort:'862'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.878',label:'3740 Kleine-Spouwen (Bilzen)',labelnl:'3740 Kleine-Spouwen (Bilzen)',labelfr:'3740 Kleine-Spouwen',labelen:'3740 Kleine-Spouwen',labelde:'3740 Kleine-Spouwen',parentid:'reg.197',show:'true',sort:'863'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.879',label:'3740 Mopertingen (Bilzen)',labelnl:'3740 Mopertingen (Bilzen)',labelfr:'3740 Mopertingen',labelen:'3740 Mopertingen',labelde:'3740 Mopertingen',parentid:'reg.197',show:'true',sort:'864'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.880',label:'3740 Munsterbilzen (Bilzen)',labelnl:'3740 Munsterbilzen (Bilzen)',labelfr:'3740 Munsterbilzen',labelen:'3740 Munsterbilzen',labelde:'3740 Munsterbilzen',parentid:'reg.197',show:'true',sort:'865'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.881',label:'3740 Rijkhoven (Bilzen)',labelnl:'3740 Rijkhoven (Bilzen)',labelfr:'3740 Rijkhoven',labelen:'3740 Rijkhoven',labelde:'3740 Rijkhoven',parentid:'reg.197',show:'true',sort:'866'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.882',label:'3740 Rosmeer (Bilzen)',labelnl:'3740 Rosmeer (Bilzen)',labelfr:'3740 Rosmeer',labelen:'3740 Rosmeer',labelde:'3740 Rosmeer',parentid:'reg.197',show:'true',sort:'867'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.883',label:'3740 Spouwen (Bilzen)',labelnl:'3740 Spouwen (Bilzen)',labelfr:'3740 Spouwen',labelen:'3740 Spouwen',labelde:'3740 Spouwen',parentid:'reg.197',show:'true',sort:'868'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.884',label:'3740 Waltwilder (Bilzen)',labelnl:'3740 Waltwilder (Bilzen)',labelfr:'3740 Waltwilder',labelen:'3740 Waltwilder',labelde:'3740 Waltwilder',parentid:'reg.197',show:'true',sort:'869'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.885',label:'3742 Martenslinde (Bilzen)',labelnl:'3742 Martenslinde (Bilzen)',labelfr:'3742 Martenslinde',labelen:'3742 Martenslinde',labelde:'3742 Martenslinde',parentid:'reg.197',show:'true',sort:'870'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.886',label:'3746 Hoelbeek (Bilzen)',labelnl:'3746 Hoelbeek (Bilzen)',labelfr:'3746 Hoelbeek',labelen:'3746 Hoelbeek',labelde:'3746 Hoelbeek',parentid:'reg.197',show:'true',sort:'871'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.887',label:'3770 Riemst',labelnl:'3770 Riemst',labelfr:'3770 Riemst',labelen:'3770 Riemst',labelde:'3770 Riemst',parentid:'reg.198',show:'true',sort:'872'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.888',label:'3770 Genoelselderen (Riemst)',labelnl:'3770 Genoelselderen (Riemst)',labelfr:'3770 Genoelselderen',labelen:'3770 Genoelselderen',labelde:'3770 Genoelselderen',parentid:'reg.198',show:'true',sort:'873'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.889',label:'3770 Herderen (Riemst)',labelnl:'3770 Herderen (Riemst)',labelfr:'3770 Herderen',labelen:'3770 Herderen',labelde:'3770 Herderen',parentid:'reg.198',show:'true',sort:'874'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.890',label:'3770 Kanne (Riemst)',labelnl:'3770 Kanne (Riemst)',labelfr:'3770 Kanne',labelen:'3770 Kanne',labelde:'3770 Kanne',parentid:'reg.198',show:'true',sort:'875'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.891',label:'3770 Membruggen (Riemst)',labelnl:'3770 Membruggen (Riemst)',labelfr:'3770 Membruggen',labelen:'3770 Membruggen',labelde:'3770 Membruggen',parentid:'reg.198',show:'true',sort:'876'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.892',label:'3770 Millen (Riemst)',labelnl:'3770 Millen (Riemst)',labelfr:'3770 Millen',labelen:'3770 Millen',labelde:'3770 Millen',parentid:'reg.198',show:'true',sort:'877'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.893',label:'3770 Val-Meer (Riemst)',labelnl:'3770 Val-Meer (Riemst)',labelfr:'3770 Val-Meer',labelen:'3770 Val-Meer',labelde:'3770 Val-Meer',parentid:'reg.198',show:'true',sort:'878'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.894',label:'3770 Vlijtingen (Riemst)',labelnl:'3770 Vlijtingen (Riemst)',labelfr:'3770 Vlijtingen',labelen:'3770 Vlijtingen',labelde:'3770 Vlijtingen',parentid:'reg.198',show:'true',sort:'879'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.895',label:'3770 Vroenhoven (Riemst)',labelnl:'3770 Vroenhoven (Riemst)',labelfr:'3770 Vroenhoven',labelen:'3770 Vroenhoven',labelde:'3770 Vroenhoven',parentid:'reg.198',show:'true',sort:'880'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.896',label:'3770 Zichen-Zussen-Bolder (Riemst)',labelnl:'3770 Zichen-Zussen-Bolder (Riemst)',labelfr:'3770 Zichen-Zussen-Bolder',labelen:'3770 Zichen-Zussen-Bolder',labelde:'3770 Zichen-Zussen-Bolder',parentid:'reg.198',show:'true',sort:'881'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.897',label:'3790 Voeren',labelnl:'3790 Voeren',labelfr:'3790 Fourons',labelen:'3790 Voeren',labelde:'3790 Voeren',parentid:'reg.199',show:'true',sort:'882'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.898',label:'3790 Fouron-Saint-Martin (Voeren)',labelnl:'3790 Fouron-Saint-Martin (Voeren)',labelfr:'3790 Fouron-Saint-Martin',labelen:'3790 Sint-Martens-Voeren',labelde:'3790 Sint-Martens-Voeren',parentid:'reg.199',show:'true',sort:'883'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.899',label:'3790 Fourons (Voeren)',labelnl:'3790 Fourons (Voeren)',labelfr:'3790 Fourons',labelen:'3790 Voeren',labelde:'3790 Voeren',parentid:'reg.199',show:'true',sort:'884'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.900',label:'3790 Moelingen (Voeren)',labelnl:'3790 Moelingen (Voeren)',labelfr:'3790 Mouland',labelen:'3790 Moelingen',labelde:'3790 Moelingen',parentid:'reg.199',show:'true',sort:'885'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.901',label:'3790 Mouland (Voeren)',labelnl:'3790 Mouland (Voeren)',labelfr:'3790 Mouland',labelen:'3790 Moelingen',labelde:'3790 Moelingen',parentid:'reg.199',show:'true',sort:'886'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.902',label:'3790 Sint-Martens-Voeren (Voeren)',labelnl:'3790 Sint-Martens-Voeren (Voeren)',labelfr:'3790 Fouron-Saint-Martin',labelen:'3790 Sint-Martens-Voeren',labelde:'3790 Sint-Martens-Voeren',parentid:'reg.199',show:'true',sort:'887'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.903',label:'3791 Remersdaal (Voeren)',labelnl:'3791 Remersdaal (Voeren)',labelfr:'3791 Rémersdael',labelen:'3791 Remersdaal',labelde:'3791 Remersdaal',parentid:'reg.199',show:'true',sort:'888'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.904',label:'3792 Fouron-Saint-Pierre (Voeren)',labelnl:'3792 Fouron-Saint-Pierre (Voeren)',labelfr:'3792 Fouron-Saint-Pierre',labelen:'3792 Sint-Pieters-Voeren',labelde:'3792 Sint-Pieters-Voeren',parentid:'reg.199',show:'true',sort:'889'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.905',label:'3792 Sint-Pieters-Voeren (Voeren)',labelnl:'3792 Sint-Pieters-Voeren (Voeren)',labelfr:'3792 Fouron-Saint-Pierre',labelen:'3792 Sint-Pieters-Voeren',labelde:'3792 Sint-Pieters-Voeren',parentid:'reg.199',show:'true',sort:'890'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.906',label:'3793 Teuven (Voeren)',labelnl:'3793 Teuven (Voeren)',labelfr:'3793 Teuven',labelen:'3793 Teuven',labelde:'3793 Teuven',parentid:'reg.199',show:'true',sort:'891'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.907',label:'3798 Fouron-Le-Comte (Voeren)',labelnl:'3798 Fouron-Le-Comte (Voeren)',labelfr:'3798 Fouron-Le-Comte',labelen:'3798 \'s-Gravenvoeren',labelde:'3798 \'s-Gravenvoeren',parentid:'reg.199',show:'true',sort:'892'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.908',label:'3798 \'s Gravenvoeren (Voeren)',labelnl:'3798 \'s Gravenvoeren (Voeren)',labelfr:'3798 Fouron-Le-Comte',labelen:'3798 \'s-Gravenvoeren',labelde:'3798 \'s-Gravenvoeren',parentid:'reg.199',show:'true',sort:'893'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.909',label:'3800 Sint-Truiden',labelnl:'3800 Sint-Truiden',labelfr:'3800 Saint-Trond',labelen:'3800 Sint-Truiden',labelde:'3800 Sint-Truiden',parentid:'reg.200',show:'true',sort:'894'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.910',label:'3800 Aalst (Sint-Truiden)',labelnl:'3800 Aalst (Sint-Truiden)',labelfr:'3800 Alost',labelen:'3800 Aalst',labelde:'3800 Aalst',parentid:'reg.200',show:'true',sort:'895'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.911',label:'3800 Brustem (Sint-Truiden)',labelnl:'3800 Brustem (Sint-Truiden)',labelfr:'3800 Brustem',labelen:'3800 Brustem',labelde:'3800 Brustem',parentid:'reg.200',show:'true',sort:'896'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.912',label:'3800 Engelmanshoven (Sint-Truiden)',labelnl:'3800 Engelmanshoven (Sint-Truiden)',labelfr:'3800 Engelmanshoven',labelen:'3800 Engelmanshoven',labelde:'3800 Engelmanshoven',parentid:'reg.200',show:'true',sort:'897'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.913',label:'3800 Gelinden (Sint-Truiden)',labelnl:'3800 Gelinden (Sint-Truiden)',labelfr:'3800 Gelinden',labelen:'3800 Gelinden',labelde:'3800 Gelinden',parentid:'reg.200',show:'true',sort:'898'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.914',label:'3800 Groot-Gelmen (Sint-Truiden)',labelnl:'3800 Groot-Gelmen (Sint-Truiden)',labelfr:'3800 Grande-Jamine',labelen:'3800 Groot-Gelmen',labelde:'3800 Groot-Gelmen',parentid:'reg.200',show:'true',sort:'899'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.915',label:'3800 Halmaal (Sint-Truiden)',labelnl:'3800 Halmaal (Sint-Truiden)',labelfr:'3800 Halmaal',labelen:'3800 Halmaal',labelde:'3800 Halmaal',parentid:'reg.200',show:'true',sort:'900'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.916',label:'3800 Kerkom-Bij-Sint-Truiden (Sint-Truiden)',labelnl:'3800 Kerkom-Bij-Sint-Truiden (Sint-Truiden)',labelfr:'3800 Kerckom-lez-Saint-Trond',labelen:'3800 Kerkom-bij-Sint-Truiden',labelde:'3800 Kerkom-bij-Sint-Truiden',parentid:'reg.200',show:'true',sort:'901'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.917',label:'3800 Ordingen (Sint-Truiden)',labelnl:'3800 Ordingen (Sint-Truiden)',labelfr:'3800 Ordingen',labelen:'3800 Ordingen',labelde:'3800 Ordingen',parentid:'reg.200',show:'true',sort:'902'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.918',label:'3800 Zepperen (Sint-Truiden)',labelnl:'3800 Zepperen (Sint-Truiden)',labelfr:'3800 Zepperen',labelen:'3800 Zepperen',labelde:'3800 Zepperen',parentid:'reg.200',show:'true',sort:'903'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.919',label:'3803 Duras (Sint-Truiden)',labelnl:'3803 Duras (Sint-Truiden)',labelfr:'3803 Duras',labelen:'3803 Duras',labelde:'3803 Duras',parentid:'reg.200',show:'true',sort:'904'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.920',label:'3803 Gorsem (Sint-Truiden)',labelnl:'3803 Gorsem (Sint-Truiden)',labelfr:'3803 Gorsem',labelen:'3803 Gorsem',labelde:'3803 Gorsem',parentid:'reg.200',show:'true',sort:'905'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.921',label:'3803 Runkelen (Sint-Truiden)',labelnl:'3803 Runkelen (Sint-Truiden)',labelfr:'3803 Runkelen',labelen:'3803 Runkelen',labelde:'3803 Runkelen',parentid:'reg.200',show:'true',sort:'906'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.922',label:'3803 Wilderen (Sint-Truiden)',labelnl:'3803 Wilderen (Sint-Truiden)',labelfr:'3803 Wilderen',labelen:'3803 Wilderen',labelde:'3803 Wilderen',parentid:'reg.200',show:'true',sort:'907'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.923',label:'3806 Velm (Sint-Truiden)',labelnl:'3806 Velm (Sint-Truiden)',labelfr:'3806 Velm',labelen:'3806 Velm',labelde:'3806 Velm',parentid:'reg.200',show:'true',sort:'908'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.924',label:'3830 Wellen',labelnl:'3830 Wellen',labelfr:'3830 Wellen',labelen:'3830 Wellen',labelde:'3830 Wellen',parentid:'reg.201',show:'true',sort:'909'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.925',label:'3830 Berlingen (Wellen)',labelnl:'3830 Berlingen (Wellen)',labelfr:'3830 Berlingen',labelen:'3830 Berlingen',labelde:'3830 Berlingen',parentid:'reg.201',show:'true',sort:'910'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.926',label:'3831 Herten (Wellen)',labelnl:'3831 Herten (Wellen)',labelfr:'3831 Herten',labelen:'3831 Herten',labelde:'3831 Herten',parentid:'reg.201',show:'true',sort:'911'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.927',label:'3832 Ulbeek (Wellen)',labelnl:'3832 Ulbeek (Wellen)',labelfr:'3832 Ulbeek',labelen:'3832 Ulbeek',labelde:'3832 Ulbeek',parentid:'reg.201',show:'true',sort:'912'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.928',label:'3840 Borgloon',labelnl:'3840 Borgloon',labelfr:'3840 Looz',labelen:'3840 Borgloon',labelde:'3840 Borgloon',parentid:'reg.202',show:'true',sort:'913'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.929',label:'3840 Bommershoven (Borgloon)',labelnl:'3840 Bommershoven (Borgloon)',labelfr:'3840 Bommershoven',labelen:'3840 Bommershoven',labelde:'3840 Bommershoven',parentid:'reg.202',show:'true',sort:'914'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.930',label:'3840 Broekom (Borgloon)',labelnl:'3840 Broekom (Borgloon)',labelfr:'3840 Broekom',labelen:'3840 Broekom',labelde:'3840 Broekom',parentid:'reg.202',show:'true',sort:'915'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.931',label:'3840 Gors-Opleeuw (Borgloon)',labelnl:'3840 Gors-Opleeuw (Borgloon)',labelfr:'3840 Gors-Opleeuw',labelen:'3840 Gors-Opleeuw',labelde:'3840 Gors-Opleeuw',parentid:'reg.202',show:'true',sort:'916'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.932',label:'3840 Gotem (Borgloon)',labelnl:'3840 Gotem (Borgloon)',labelfr:'3840 Gotem',labelen:'3840 Gotem',labelde:'3840 Gotem',parentid:'reg.202',show:'true',sort:'917'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.933',label:'3840 Groot-Loon (Borgloon)',labelnl:'3840 Groot-Loon (Borgloon)',labelfr:'3840 Groot-Loon',labelen:'3840 Groot-Loon',labelde:'3840 Groot-Loon',parentid:'reg.202',show:'true',sort:'918'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.934',label:'3840 Haren (Borgloon)',labelnl:'3840 Haren (Borgloon)',labelfr:'3840 Haren',labelen:'3840 Haren',labelde:'3840 Haren',parentid:'reg.202',show:'true',sort:'919'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.935',label:'3840 Hendrieken (Borgloon)',labelnl:'3840 Hendrieken (Borgloon)',labelfr:'3840 Hendrieken',labelen:'3840 Hendrieken',labelde:'3840 Hendrieken',parentid:'reg.202',show:'true',sort:'920'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.936',label:'3840 Hoepertingen (Borgloon)',labelnl:'3840 Hoepertingen (Borgloon)',labelfr:'3840 Hoepertingen',labelen:'3840 Hoepertingen',labelde:'3840 Hoepertingen',parentid:'reg.202',show:'true',sort:'921'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.937',label:'3840 Jesseren (Borgloon)',labelnl:'3840 Jesseren (Borgloon)',labelfr:'3840 Jesseren',labelen:'3840 Jesseren',labelde:'3840 Jesseren',parentid:'reg.202',show:'true',sort:'922'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.938',label:'3840 Kerniel (Borgloon)',labelnl:'3840 Kerniel (Borgloon)',labelfr:'3840 Kerniel',labelen:'3840 Kerniel',labelde:'3840 Kerniel',parentid:'reg.202',show:'true',sort:'923'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.939',label:'3840 Kolmont (Borgloon)',labelnl:'3840 Kolmont (Borgloon)',labelfr:'3840 Kolmont',labelen:'3840 Kolmont',labelde:'3840 Kolmont',parentid:'reg.202',show:'true',sort:'924'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.940',label:'3840 Kuttekoven (Borgloon)',labelnl:'3840 Kuttekoven (Borgloon)',labelfr:'3840 Kuttekoven',labelen:'3840 Kuttekoven',labelde:'3840 Kuttekoven',parentid:'reg.202',show:'true',sort:'925'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.941',label:'3840 Rijkel (Borgloon)',labelnl:'3840 Rijkel (Borgloon)',labelfr:'3840 Ryckel',labelen:'3840 Rijkel',labelde:'3840 Rijkel',parentid:'reg.202',show:'true',sort:'926'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.942',label:'3840 Voort (Borgloon)',labelnl:'3840 Voort (Borgloon)',labelfr:'3840 Voort',labelen:'3840 Voort',labelde:'3840 Voort',parentid:'reg.202',show:'true',sort:'927'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.943',label:'3850 Nieuwerkerken',labelnl:'3850 Nieuwerkerken',labelfr:'3850 Nieuwerkerken',labelen:'3850 Nieuwerkerken',labelde:'3850 Nieuwerkerken',parentid:'reg.203',show:'true',sort:'928'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.944',label:'3850 Binderveld (Nieuwerkerken)',labelnl:'3850 Binderveld (Nieuwerkerken)',labelfr:'3850 Binderveld',labelen:'3850 Binderveld',labelde:'3850 Binderveld',parentid:'reg.203',show:'true',sort:'929'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.945',label:'3850 Kozen (Nieuwerkerken)',labelnl:'3850 Kozen (Nieuwerkerken)',labelfr:'3850 Kozen',labelen:'3850 Kozen',labelde:'3850 Kozen',parentid:'reg.203',show:'true',sort:'930'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.946',label:'3850 Wijer (Nieuwerkerken)',labelnl:'3850 Wijer (Nieuwerkerken)',labelfr:'3850 Wijer',labelen:'3850 Wijer',labelde:'3850 Wijer',parentid:'reg.203',show:'true',sort:'931'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.947',label:'3870 Heers',labelnl:'3870 Heers',labelfr:'3870 Heers',labelen:'3870 Heers',labelde:'3870 Heers',parentid:'reg.204',show:'true',sort:'932'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.948',label:'3870 Batsheers (Heers)',labelnl:'3870 Batsheers (Heers)',labelfr:'3870 Batsheers',labelen:'3870 Batsheers',labelde:'3870 Batsheers',parentid:'reg.204',show:'true',sort:'933'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.949',label:'3870 Bovelingen (Heers)',labelnl:'3870 Bovelingen (Heers)',labelfr:'3870 Bovelingen',labelen:'3870 Bovelingen',labelde:'3870 Bovelingen',parentid:'reg.204',show:'true',sort:'934'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.950',label:'3870 Gutschoven (Heers)',labelnl:'3870 Gutschoven (Heers)',labelfr:'3870 Gutschoven',labelen:'3870 Gutschoven',labelde:'3870 Gutschoven',parentid:'reg.204',show:'true',sort:'935'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.951',label:'3870 Heks (Heers)',labelnl:'3870 Heks (Heers)',labelfr:'3870 Heks',labelen:'3870 Heks',labelde:'3870 Heks',parentid:'reg.204',show:'true',sort:'936'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.952',label:'3870 Horpmaal (Heers)',labelnl:'3870 Horpmaal (Heers)',labelfr:'3870 Horpmaal',labelen:'3870 Horpmaal',labelde:'3870 Horpmaal',parentid:'reg.204',show:'true',sort:'937'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.953',label:'3870 Klein-Gelmen (Heers)',labelnl:'3870 Klein-Gelmen (Heers)',labelfr:'3870 Petite-Jamine',labelen:'3870 Klein-Gelmen',labelde:'3870 Klein-Gelmen',parentid:'reg.204',show:'true',sort:'938'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.954',label:'3870 Mechelen-Bovelingen (Heers)',labelnl:'3870 Mechelen-Bovelingen (Heers)',labelfr:'3870 Marlinne',labelen:'3870 Mechelen-Bovelingen',labelde:'3870 Mechelen-Bovelingen',parentid:'reg.204',show:'true',sort:'939'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.955',label:'3870 Mettekoven (Heers)',labelnl:'3870 Mettekoven (Heers)',labelfr:'3870 Matincourt',labelen:'3870 Mettekoven',labelde:'3870 Mettekoven',parentid:'reg.204',show:'true',sort:'940'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.956',label:'3870 Opheers (Heers)',labelnl:'3870 Opheers (Heers)',labelfr:'3870 Opheers',labelen:'3870 Opheers',labelde:'3870 Opheers',parentid:'reg.204',show:'true',sort:'941'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.957',label:'3870 Rukkelingen-Loon (Heers)',labelnl:'3870 Rukkelingen-Loon (Heers)',labelfr:'3870 Roclenge-Looz',labelen:'3870 Rukkelingen-Loon',labelde:'3870 Rukkelingen-Loon',parentid:'reg.204',show:'true',sort:'942'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.958',label:'3870 Vechmaal (Heers)',labelnl:'3870 Vechmaal (Heers)',labelfr:'3870 Vechmaal',labelen:'3870 Vechmaal',labelde:'3870 Vechmaal',parentid:'reg.204',show:'true',sort:'943'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.959',label:'3870 Veulen (Heers)',labelnl:'3870 Veulen (Heers)',labelfr:'3870 Fologne',labelen:'3870 Veulen',labelde:'3870 Veulen',parentid:'reg.204',show:'true',sort:'944'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.960',label:'3890 Gingelom',labelnl:'3890 Gingelom',labelfr:'3890 Gingelom',labelen:'3890 Gingelom',labelde:'3890 Gingelom',parentid:'reg.205',show:'true',sort:'945'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.961',label:'3890 Boekhout (Gingelom)',labelnl:'3890 Boekhout (Gingelom)',labelfr:'3890 Boekhout',labelen:'3890 Boekhout',labelde:'3890 Boekhout',parentid:'reg.205',show:'true',sort:'946'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.962',label:'3890 Jeuk (Gingelom)',labelnl:'3890 Jeuk (Gingelom)',labelfr:'3890 Goyer',labelen:'3890 Jeuk',labelde:'3890 Jeuk',parentid:'reg.205',show:'true',sort:'947'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.963',label:'3890 Kortijs (Gingelom)',labelnl:'3890 Kortijs (Gingelom)',labelfr:'3890 Cortis',labelen:'3890 Kortijs',labelde:'3890 Kortijs',parentid:'reg.205',show:'true',sort:'948'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.964',label:'3890 Montenaken (Gingelom)',labelnl:'3890 Montenaken (Gingelom)',labelfr:'3890 Montenaken',labelen:'3890 Montenaken',labelde:'3890 Montenaken',parentid:'reg.205',show:'true',sort:'949'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.965',label:'3890 Niel-Bij-Sint-Truiden (Gingelom)',labelnl:'3890 Niel-Bij-Sint-Truiden (Gingelom)',labelfr:'3890 Niel-bij-Sint-Truiden',labelen:'3890 Niel-bij-Sint-Truiden',labelde:'3890 Niel-bij-Sint-Truiden',parentid:'reg.205',show:'true',sort:'950'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.966',label:'3890 Vorsen (Gingelom)',labelnl:'3890 Vorsen (Gingelom)',labelfr:'3890 Fresin',labelen:'3890 Vorsen',labelde:'3890 Vorsen',parentid:'reg.205',show:'true',sort:'951'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.967',label:'3891 Borlo (Gingelom)',labelnl:'3891 Borlo (Gingelom)',labelfr:'3891 Borlo',labelen:'3891 Borlo',labelde:'3891 Borlo',parentid:'reg.205',show:'true',sort:'952'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.968',label:'3891 Buvingen (Gingelom)',labelnl:'3891 Buvingen (Gingelom)',labelfr:'3891 Buvingen',labelen:'3891 Buvingen',labelde:'3891 Buvingen',parentid:'reg.205',show:'true',sort:'953'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.969',label:'3891 Mielen-Boven-Aalst (Gingelom)',labelnl:'3891 Mielen-Boven-Aalst (Gingelom)',labelfr:'3891 Mielen-boven-Aalst',labelen:'3891 Mielen-boven-Aalst',labelde:'3891 Mielen-boven-Aalst',parentid:'reg.205',show:'true',sort:'954'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.970',label:'3891 Muizen (Gingelom)',labelnl:'3891 Muizen (Gingelom)',labelfr:'3891 Muizen',labelen:'3891 Muizen',labelde:'3891 Muizen',parentid:'reg.205',show:'true',sort:'955'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.971',label:'3900 Overpelt',labelnl:'3900 Overpelt',labelfr:'3900 Overpelt',labelen:'3900 Overpelt',labelde:'3900 Overpelt',parentid:'reg.206',show:'true',sort:'956'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.972',label:'3910 Neerpelt',labelnl:'3910 Neerpelt',labelfr:'3910 Neerpelt',labelen:'3910 Neerpelt',labelde:'3910 Neerpelt',parentid:'reg.207',show:'true',sort:'957'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.973',label:'3910 Sint-Huibrechts-Lille (Neerpelt)',labelnl:'3910 Sint-Huibrechts-Lille (Neerpelt)',labelfr:'3910 Sint-Huibrechts-Lille',labelen:'3910 Sint-Huibrechts-Lille',labelde:'3910 Sint-Huibrechts-Lille',parentid:'reg.207',show:'true',sort:'958'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.974',label:'3920 Lommel',labelnl:'3920 Lommel',labelfr:'3920 Lommel',labelen:'3920 Lommel',labelde:'3920 Lommel',parentid:'reg.208',show:'true',sort:'959'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.975',label:'3930 Hamont-Achel',labelnl:'3930 Hamont-Achel',labelfr:'3930 Hamont-Achel',labelen:'3930 Hamont-Achel',labelde:'3930 Hamont-Achel',parentid:'reg.209',show:'true',sort:'960'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.976',label:'3930 Achel (Hamont-Achel)',labelnl:'3930 Achel (Hamont-Achel)',labelfr:'3930 Achel',labelen:'3930 Achel',labelde:'3930 Achel',parentid:'reg.209',show:'true',sort:'961'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.977',label:'3930 Hamont (Hamont-Achel)',labelnl:'3930 Hamont (Hamont-Achel)',labelfr:'3930 Hamont',labelen:'3930 Hamont',labelde:'3930 Hamont',parentid:'reg.209',show:'true',sort:'962'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.978',label:'3940 Hechtel-Eksel',labelnl:'3940 Hechtel-Eksel',labelfr:'3940 Hechtel-Eksel',labelen:'3940 Hechtel-Eksel',labelde:'3940 Hechtel-Eksel',parentid:'reg.210',show:'true',sort:'963'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.979',label:'3940 Hechtel (Hechtel-Eksel)',labelnl:'3940 Hechtel (Hechtel-Eksel)',labelfr:'3940 Hechtel',labelen:'3940 Hechtel',labelde:'3940 Hechtel',parentid:'reg.210',show:'true',sort:'964'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.980',label:'3941 Eksel (Hechtel-Eksel)',labelnl:'3941 Eksel (Hechtel-Eksel)',labelfr:'3941 Eksel',labelen:'3941 Eksel',labelde:'3941 Eksel',parentid:'reg.210',show:'true',sort:'965'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.981',label:'3945 Ham',labelnl:'3945 Ham',labelfr:'3945 Ham',labelen:'3945 Ham',labelde:'3945 Ham',parentid:'reg.211',show:'true',sort:'966'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.982',label:'3945 Kwaadmechelen (Ham)',labelnl:'3945 Kwaadmechelen (Ham)',labelfr:'3945 Kwaadmechelen',labelen:'3945 Kwaadmechelen',labelde:'3945 Kwaadmechelen',parentid:'reg.211',show:'true',sort:'967'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.983',label:'3945 Oostham (Ham)',labelnl:'3945 Oostham (Ham)',labelfr:'3945 Oostham',labelen:'3945 Oostham',labelde:'3945 Oostham',parentid:'reg.211',show:'true',sort:'968'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.984',label:'3950 Bocholt',labelnl:'3950 Bocholt',labelfr:'3950 Bocholt',labelen:'3950 Bocholt',labelde:'3950 Bocholt',parentid:'reg.212',show:'true',sort:'969'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.985',label:'3950 Kaulille (Bocholt)',labelnl:'3950 Kaulille (Bocholt)',labelfr:'3950 Kaulille',labelen:'3950 Kaulille',labelde:'3950 Kaulille',parentid:'reg.212',show:'true',sort:'970'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.986',label:'3950 Reppel (Bocholt)',labelnl:'3950 Reppel (Bocholt)',labelfr:'3950 Reppel',labelen:'3950 Reppel',labelde:'3950 Reppel',parentid:'reg.212',show:'true',sort:'971'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.987',label:'3960 Bree',labelnl:'3960 Bree',labelfr:'3960 Brée',labelen:'3960 Bree',labelde:'3960 Bree',parentid:'reg.213',show:'true',sort:'972'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.988',label:'3960 Beek (Bree)',labelnl:'3960 Beek (Bree)',labelfr:'3960 Beek',labelen:'3960 Beek',labelde:'3960 Beek',parentid:'reg.213',show:'true',sort:'973'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.989',label:'3960 Gerdingen (Bree)',labelnl:'3960 Gerdingen (Bree)',labelfr:'3960 Gerdingen',labelen:'3960 Gerdingen',labelde:'3960 Gerdingen',parentid:'reg.213',show:'true',sort:'974'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.990',label:'3960 Opitter (Bree)',labelnl:'3960 Opitter (Bree)',labelfr:'3960 Opitter',labelen:'3960 Opitter',labelde:'3960 Opitter',parentid:'reg.213',show:'true',sort:'975'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.991',label:'3960 Tongerlo (Bree)',labelnl:'3960 Tongerlo (Bree)',labelfr:'3960 Tongerlo',labelen:'3960 Tongerlo',labelde:'3960 Tongerlo',parentid:'reg.213',show:'true',sort:'976'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.992',label:'3970 Leopoldsburg',labelnl:'3970 Leopoldsburg',labelfr:'3970 Bourg-Léopold',labelen:'3970 Leopoldsburg',labelde:'3970 Leopoldsburg',parentid:'reg.214',show:'true',sort:'977'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.993',label:'3971 Heppen (Leopoldsburg)',labelnl:'3971 Heppen (Leopoldsburg)',labelfr:'3971 Heppen',labelen:'3971 Heppen',labelde:'3971 Heppen',parentid:'reg.214',show:'true',sort:'978'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.994',label:'3980 Tessenderlo',labelnl:'3980 Tessenderlo',labelfr:'3980 Tessenderlo',labelen:'3980 Tessenderlo',labelde:'3980 Tessenderlo',parentid:'reg.215',show:'true',sort:'979'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.995',label:'3990 Peer',labelnl:'3990 Peer',labelfr:'3990 Peer',labelen:'3990 Peer',labelde:'3990 Peer',parentid:'reg.216',show:'true',sort:'980'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.996',label:'3990 Grote-Brogel (Peer)',labelnl:'3990 Grote-Brogel (Peer)',labelfr:'3990 Grote-Brogel',labelen:'3990 Grote-Brogel',labelde:'3990 Grote-Brogel',parentid:'reg.216',show:'true',sort:'981'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.997',label:'3990 Kleine-Brogel (Peer)',labelnl:'3990 Kleine-Brogel (Peer)',labelfr:'3990 Kleine-Brogel',labelen:'3990 Kleine-Brogel',labelde:'3990 Kleine-Brogel',parentid:'reg.216',show:'true',sort:'982'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.998',label:'3990 Wijchmaal (Peer)',labelnl:'3990 Wijchmaal (Peer)',labelfr:'3990 Wijchmaal',labelen:'3990 Wijchmaal',labelde:'3990 Wijchmaal',parentid:'reg.216',show:'true',sort:'983'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.999',label:'8000 Brugge',labelnl:'8000 Brugge',labelfr:'8000 Bruges',labelen:'8000 Bruges',labelde:'8000 Brügge',parentid:'reg.217',show:'true',sort:'984'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1000',label:'8000 Koolkerke (Brugge)',labelnl:'8000 Koolkerke (Brugge)',labelfr:'8000 Koolkerke',labelen:'8000 Koolkerke',labelde:'8000 Koolkerke',parentid:'reg.217',show:'true',sort:'985'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1001',label:'8200 Brugge 2 (Brugge)',labelnl:'8200 Brugge 2 (Brugge)',labelfr:'8200 Bruges 2',labelen:'8200 Bruges 2',labelde:'8200 Brügge 2',parentid:'reg.217',show:'true',sort:'986'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1002',label:'8200 Sint-Andries (Brugge)',labelnl:'8200 Sint-Andries (Brugge)',labelfr:'8200 Sint-Andries',labelen:'8200 Sint-Andries',labelde:'8200 Sint-Andries',parentid:'reg.217',show:'true',sort:'987'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1003',label:'8200 Sint-Michiels (Brugge)',labelnl:'8200 Sint-Michiels (Brugge)',labelfr:'8200 Sint-Michiels',labelen:'8200 Sint-Michiels',labelde:'8200 Sint-Michiels',parentid:'reg.217',show:'true',sort:'988'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1004',label:'8310 Assebroek (Brugge)',labelnl:'8310 Assebroek (Brugge)',labelfr:'8310 Assebroek',labelen:'8310 Assebroek',labelde:'8310 Assebroek',parentid:'reg.217',show:'true',sort:'989'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1005',label:'8310 Sint-Kruis (Brugge)',labelnl:'8310 Sint-Kruis (Brugge)',labelfr:'8310 Sint-Kruis',labelen:'8310 Sint-Kruis',labelde:'8310 Sint-Kruis',parentid:'reg.217',show:'true',sort:'990'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1006',label:'8380 Dudzele (Brugge)',labelnl:'8380 Dudzele (Brugge)',labelfr:'8380 Dudzele',labelen:'8380 Dudzele',labelde:'8380 Dudzele',parentid:'reg.217',show:'true',sort:'991'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1007',label:'8380 Lissewege (Brugge)',labelnl:'8380 Lissewege (Brugge)',labelfr:'8380 Lissewege',labelen:'8380 Lissewege',labelde:'8380 Lissewege',parentid:'reg.217',show:'true',sort:'992'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1008',label:'8380 Zeebrugge (Brugge)',labelnl:'8380 Zeebrugge (Brugge)',labelfr:'8380 Zeebrugge',labelen:'8380 Zeebrugge',labelde:'8380 Zeebrugge',parentid:'reg.217',show:'true',sort:'993'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1009',label:'8020 Oostkamp',labelnl:'8020 Oostkamp',labelfr:'8020 Oostkamp',labelen:'8020 Oostkamp',labelde:'8020 Oostkamp',parentid:'reg.218',show:'true',sort:'994'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1010',label:'8020 Hertsberge (Oostkamp)',labelnl:'8020 Hertsberge (Oostkamp)',labelfr:'8020 Hertsberge',labelen:'8020 Hertsberge',labelde:'8020 Hertsberge',parentid:'reg.218',show:'true',sort:'995'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1011',label:'8020 Ruddervoorde (Oostkamp)',labelnl:'8020 Ruddervoorde (Oostkamp)',labelfr:'8020 Ruddervoorde',labelen:'8020 Ruddervoorde',labelde:'8020 Ruddervoorde',parentid:'reg.218',show:'true',sort:'996'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1012',label:'8020 Waardamme (Oostkamp)',labelnl:'8020 Waardamme (Oostkamp)',labelfr:'8020 Waardamme',labelen:'8020 Waardamme',labelde:'8020 Waardamme',parentid:'reg.218',show:'true',sort:'997'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1013',label:'8210 Zedelgem',labelnl:'8210 Zedelgem',labelfr:'8210 Zedelgem',labelen:'8210 Zedelgem',labelde:'8210 Zedelgem',parentid:'reg.219',show:'true',sort:'998'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1014',label:'8210 Loppem (Zedelgem)',labelnl:'8210 Loppem (Zedelgem)',labelfr:'8210 Loppem',labelen:'8210 Loppem',labelde:'8210 Loppem',parentid:'reg.219',show:'true',sort:'999'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1015',label:'8210 Veldegem (Zedelgem)',labelnl:'8210 Veldegem (Zedelgem)',labelfr:'8210 Veldegem',labelen:'8210 Veldegem',labelde:'8210 Veldegem',parentid:'reg.219',show:'true',sort:'1000'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1016',label:'8211 Aartrijke (Zedelgem)',labelnl:'8211 Aartrijke (Zedelgem)',labelfr:'8211 Aartrijke',labelen:'8211 Aartrijke',labelde:'8211 Aartrijke',parentid:'reg.219',show:'true',sort:'1001'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1017',label:'8300 Knokke-Heist',labelnl:'8300 Knokke-Heist',labelfr:'8300 Knokke-Heist',labelen:'8300 Knokke-Heist',labelde:'8300 Knokke-Heist',parentid:'reg.220',show:'true',sort:'1002'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1018',label:'8300 Knokke (Knokke-Heist)',labelnl:'8300 Knokke (Knokke-Heist)',labelfr:'8300 Knokke',labelen:'8300 Knokke',labelde:'8300 Knokke',parentid:'reg.220',show:'true',sort:'1003'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1019',label:'8300 Westkapelle (Knokke-Heist)',labelnl:'8300 Westkapelle (Knokke-Heist)',labelfr:'8300 Westkapelle',labelen:'8300 Westkapelle',labelde:'8300 Westkapelle',parentid:'reg.220',show:'true',sort:'1004'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1020',label:'8301 Heist-Aan-Zee (Knokke-Heist)',labelnl:'8301 Heist-Aan-Zee (Knokke-Heist)',labelfr:'8301 Heist',labelen:'8301 Heist-aan-Zee',labelde:'8301 Heist-aan-Zee',parentid:'reg.220',show:'true',sort:'1005'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1021',label:'8301 Ramskapelle (Knokke-Heist)',labelnl:'8301 Ramskapelle (Knokke-Heist)',labelfr:'8301 Ramskapelle',labelen:'8301 Ramskapelle',labelde:'8301 Ramskapelle',parentid:'reg.220',show:'true',sort:'1006'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1022',label:'8340 Damme',labelnl:'8340 Damme',labelfr:'8340 Damme',labelen:'8340 Damme',labelde:'8340 Damme',parentid:'reg.221',show:'true',sort:'1007'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1023',label:'8340 Hoeke (Damme)',labelnl:'8340 Hoeke (Damme)',labelfr:'8340 Hoeke',labelen:'8340 Hoeke',labelde:'8340 Hoeke',parentid:'reg.221',show:'true',sort:'1008'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1024',label:'8340 Lapscheure (Damme)',labelnl:'8340 Lapscheure (Damme)',labelfr:'8340 Lapscheure',labelen:'8340 Lapscheure',labelde:'8340 Lapscheure',parentid:'reg.221',show:'true',sort:'1009'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1025',label:'8340 Moerkerke (Damme)',labelnl:'8340 Moerkerke (Damme)',labelfr:'8340 Moerkerke',labelen:'8340 Moerkerke',labelde:'8340 Moerkerke',parentid:'reg.221',show:'true',sort:'1010'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1026',label:'8340 Oostkerke (Damme)',labelnl:'8340 Oostkerke (Damme)',labelfr:'8340 Oostkerke',labelen:'8340 Oostkerke',labelde:'8340 Oostkerke',parentid:'reg.221',show:'true',sort:'1011'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1027',label:'8340 Sijsele (Damme)',labelnl:'8340 Sijsele (Damme)',labelfr:'8340 Sijsele',labelen:'8340 Sijsele',labelde:'8340 Sijsele',parentid:'reg.221',show:'true',sort:'1012'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1028',label:'8370 Blankenberge',labelnl:'8370 Blankenberge',labelfr:'8370 Blankenberge',labelen:'8370 Blankenberge',labelde:'8370 Blankenberge',parentid:'reg.222',show:'true',sort:'1013'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1029',label:'8370 Uitkerke (Blankenberge)',labelnl:'8370 Uitkerke (Blankenberge)',labelfr:'8370 Uitkerke',labelen:'8370 Uitkerke',labelde:'8370 Uitkerke',parentid:'reg.222',show:'true',sort:'1014'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1030',label:'8377 Zuienkerke',labelnl:'8377 Zuienkerke',labelfr:'8377 Zuienkerke',labelen:'8377 Zuienkerke',labelde:'8377 Zuienkerke',parentid:'reg.223',show:'true',sort:'1015'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1031',label:'8377 Houtave (Zuienkerke)',labelnl:'8377 Houtave (Zuienkerke)',labelfr:'8377 Houtave',labelen:'8377 Houtave',labelde:'8377 Houtave',parentid:'reg.223',show:'true',sort:'1016'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1032',label:'8377 Meetkerke (Zuienkerke)',labelnl:'8377 Meetkerke (Zuienkerke)',labelfr:'8377 Meetkerke',labelen:'8377 Meetkerke',labelde:'8377 Meetkerke',parentid:'reg.223',show:'true',sort:'1017'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1033',label:'8377 Nieuwmunster (Zuienkerke)',labelnl:'8377 Nieuwmunster (Zuienkerke)',labelfr:'8377 Nieuwmunster',labelen:'8377 Nieuwmunster',labelde:'8377 Nieuwmunster',parentid:'reg.223',show:'true',sort:'1018'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1034',label:'8400 Oostende',labelnl:'8400 Oostende',labelfr:'8400 Ostende',labelen:'8400 Ostend',labelde:'8400 Ostende',parentid:'reg.224',show:'true',sort:'1019'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1035',label:'8400 Stene (Oostende)',labelnl:'8400 Stene (Oostende)',labelfr:'8400 Stene',labelen:'8400 Stene',labelde:'8400 Stene',parentid:'reg.224',show:'true',sort:'1020'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1036',label:'8400 Zandvoorde (Oostende)',labelnl:'8400 Zandvoorde (Oostende)',labelfr:'8400 Zandvoorde',labelen:'8400 Zandvoorde',labelde:'8400 Zandvoorde',parentid:'reg.224',show:'true',sort:'1021'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1037',label:'8420 De Haan',labelnl:'8420 De Haan',labelfr:'8420 Le Coq',labelen:'8420 De Haan',labelde:'8420 De Haan',parentid:'reg.225',show:'true',sort:'1022'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1038',label:'8420 Klemskerke (De Haan)',labelnl:'8420 Klemskerke (De Haan)',labelfr:'8420 Klemskerke',labelen:'8420 Klemskerke',labelde:'8420 Klemskerke',parentid:'reg.225',show:'true',sort:'1023'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1039',label:'8420 Wenduine (De Haan)',labelnl:'8420 Wenduine (De Haan)',labelfr:'8420 Wenduine',labelen:'8420 Wenduine',labelde:'8420 Wenduine',parentid:'reg.225',show:'true',sort:'1024'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1040',label:'8421 Vlissegem (De Haan)',labelnl:'8421 Vlissegem (De Haan)',labelfr:'8421 Vlissegem',labelen:'8421 Vlissegem',labelde:'8421 Vlissegem',parentid:'reg.225',show:'true',sort:'1025'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1041',label:'8430 Middelkerke',labelnl:'8430 Middelkerke',labelfr:'8430 Middelkerke',labelen:'8430 Middelkerke',labelde:'8430 Middelkerke',parentid:'reg.226',show:'true',sort:'1026'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1042',label:'8431 Wilskerke (Middelkerke)',labelnl:'8431 Wilskerke (Middelkerke)',labelfr:'8431 Wilskerke',labelen:'8431 Wilskerke',labelde:'8431 Wilskerke',parentid:'reg.226',show:'true',sort:'1027'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1043',label:'8432 Leffinge (Middelkerke)',labelnl:'8432 Leffinge (Middelkerke)',labelfr:'8432 Leffinge',labelen:'8432 Leffinge',labelde:'8432 Leffinge',parentid:'reg.226',show:'true',sort:'1028'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1044',label:'8433 Mannekensvere (Middelkerke)',labelnl:'8433 Mannekensvere (Middelkerke)',labelfr:'8433 Mannekensvere',labelen:'8433 Mannekensvere',labelde:'8433 Mannekensvere',parentid:'reg.226',show:'true',sort:'1029'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1045',label:'8433 Schore (Middelkerke)',labelnl:'8433 Schore (Middelkerke)',labelfr:'8433 Schore',labelen:'8433 Schore',labelde:'8433 Schore',parentid:'reg.226',show:'true',sort:'1030'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1046',label:'8433 Slijpe (Middelkerke)',labelnl:'8433 Slijpe (Middelkerke)',labelfr:'8433 Slijpe',labelen:'8433 Slijpe',labelde:'8433 Slijpe',parentid:'reg.226',show:'true',sort:'1031'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1047',label:'8433 Spermalie (Middelkerke)',labelnl:'8433 Spermalie (Middelkerke)',labelfr:'8433 Spermalie',labelen:'8433 Spermalie',labelde:'8433 Spermalie',parentid:'reg.226',show:'true',sort:'1032'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1048',label:'8433 Sint-Pieters-Kapelle (Middelkerke)',labelnl:'8433 Sint-Pieters-Kapelle (Middelkerke)',labelfr:'8433 Sint-Pieters-Kapelle',labelen:'8433 Sint-Pieters-Kapelle',labelde:'8433 Sint-Pieters-Kapelle',parentid:'reg.226',show:'true',sort:'1033'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1049',label:'8434 Lombardsijde (Middelkerke)',labelnl:'8434 Lombardsijde (Middelkerke)',labelfr:'8434 Lombardsijde',labelen:'8434 Lombardsijde',labelde:'8434 Lombardsijde',parentid:'reg.226',show:'true',sort:'1034'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1050',label:'8434 Westende (Middelkerke)',labelnl:'8434 Westende (Middelkerke)',labelfr:'8434 Westende',labelen:'8434 Westende',labelde:'8434 Westende',parentid:'reg.226',show:'true',sort:'1035'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1051',label:'8450 Bredene',labelnl:'8450 Bredene',labelfr:'8450 Bredene',labelen:'8450 Bredene',labelde:'8450 Bredene',parentid:'reg.227',show:'true',sort:'1036'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1052',label:'8460 Oudenburg',labelnl:'8460 Oudenburg',labelfr:'8460 Oudenburg',labelen:'8460 Oudenburg',labelde:'8460 Oudenburg',parentid:'reg.228',show:'true',sort:'1037'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1053',label:'8460 Ettelgem (Oudenburg)',labelnl:'8460 Ettelgem (Oudenburg)',labelfr:'8460 Ettelgem',labelen:'8460 Ettelgem',labelde:'8460 Ettelgem',parentid:'reg.228',show:'true',sort:'1038'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1054',label:'8460 Roksem (Oudenburg)',labelnl:'8460 Roksem (Oudenburg)',labelfr:'8460 Roksem',labelen:'8460 Roksem',labelde:'8460 Roksem',parentid:'reg.228',show:'true',sort:'1039'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1055',label:'8460 Westkerke (Oudenburg)',labelnl:'8460 Westkerke (Oudenburg)',labelfr:'8460 Westkerke',labelen:'8460 Westkerke',labelde:'8460 Westkerke',parentid:'reg.228',show:'true',sort:'1040'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1056',label:'8470 Gistel',labelnl:'8470 Gistel',labelfr:'8470 Gistel',labelen:'8470 Gistel',labelde:'8470 Gistel',parentid:'reg.229',show:'true',sort:'1041'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1057',label:'8470 Moere (Gistel)',labelnl:'8470 Moere (Gistel)',labelfr:'8470 Moere',labelen:'8470 Moere',labelde:'8470 Moere',parentid:'reg.229',show:'true',sort:'1042'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1058',label:'8470 Snaaskerke (Gistel)',labelnl:'8470 Snaaskerke (Gistel)',labelfr:'8470 Snaaskerke',labelen:'8470 Snaaskerke',labelde:'8470 Snaaskerke',parentid:'reg.229',show:'true',sort:'1043'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1059',label:'8470 Zevekote (Gistel)',labelnl:'8470 Zevekote (Gistel)',labelfr:'8470 Zevekote',labelen:'8470 Zevekote',labelde:'8470 Zevekote',parentid:'reg.229',show:'true',sort:'1044'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1060',label:'8480 Ichtegem',labelnl:'8480 Ichtegem',labelfr:'8480 Ichtegem',labelen:'8480 Ichtegem',labelde:'8480 Ichtegem',parentid:'reg.230',show:'true',sort:'1045'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1061',label:'8480 Bekegem (Ichtegem)',labelnl:'8480 Bekegem (Ichtegem)',labelfr:'8480 Bekegem',labelen:'8480 Bekegem',labelde:'8480 Bekegem',parentid:'reg.230',show:'true',sort:'1046'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1062',label:'8480 Eernegem (Ichtegem)',labelnl:'8480 Eernegem (Ichtegem)',labelfr:'8480 Eernegem',labelen:'8480 Eernegem',labelde:'8480 Eernegem',parentid:'reg.230',show:'true',sort:'1047'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1063',label:'8490 Jabbeke',labelnl:'8490 Jabbeke',labelfr:'8490 Jabbeke',labelen:'8490 Jabbeke',labelde:'8490 Jabbeke',parentid:'reg.231',show:'true',sort:'1048'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1064',label:'8490 Snellegem (Jabbeke)',labelnl:'8490 Snellegem (Jabbeke)',labelfr:'8490 Snellegem',labelen:'8490 Snellegem',labelde:'8490 Snellegem',parentid:'reg.231',show:'true',sort:'1049'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1065',label:'8490 Stalhille (Jabbeke)',labelnl:'8490 Stalhille (Jabbeke)',labelfr:'8490 Stalhille',labelen:'8490 Stalhille',labelde:'8490 Stalhille',parentid:'reg.231',show:'true',sort:'1050'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1066',label:'8490 Varsenare (Jabbeke)',labelnl:'8490 Varsenare (Jabbeke)',labelfr:'8490 Varsenare',labelen:'8490 Varsenare',labelde:'8490 Varsenare',parentid:'reg.231',show:'true',sort:'1051'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1067',label:'8490 Zerkegem (Jabbeke)',labelnl:'8490 Zerkegem (Jabbeke)',labelfr:'8490 Zerkegem',labelen:'8490 Zerkegem',labelde:'8490 Zerkegem',parentid:'reg.231',show:'true',sort:'1052'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1068',label:'8500 Kortrijk',labelnl:'8500 Kortrijk',labelfr:'8500 Courtrai',labelen:'8500 Kortrijk',labelde:'8500 Kortrijk',parentid:'reg.232',show:'true',sort:'1053'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1069',label:'8501 Bissegem (Kortrijk)',labelnl:'8501 Bissegem (Kortrijk)',labelfr:'8501 Bissegem',labelen:'8501 Bissegem',labelde:'8501 Bissegem',parentid:'reg.232',show:'true',sort:'1054'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1070',label:'8501 Heule (Kortrijk)',labelnl:'8501 Heule (Kortrijk)',labelfr:'8501 Heule',labelen:'8501 Heule',labelde:'8501 Heule',parentid:'reg.232',show:'true',sort:'1055'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1071',label:'8510 Bellegem (Kortrijk)',labelnl:'8510 Bellegem (Kortrijk)',labelfr:'8510 Bellegem',labelen:'8510 Bellegem',labelde:'8510 Bellegem',parentid:'reg.232',show:'true',sort:'1056'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1072',label:'8510 Kooigem (Kortrijk)',labelnl:'8510 Kooigem (Kortrijk)',labelfr:'8510 Kooigem',labelen:'8510 Kooigem',labelde:'8510 Kooigem',parentid:'reg.232',show:'true',sort:'1057'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1073',label:'8510 Marke (Kortrijk)',labelnl:'8510 Marke (Kortrijk)',labelfr:'8510 Marke',labelen:'8510 Marke',labelde:'8510 Marke',parentid:'reg.232',show:'true',sort:'1058'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1074',label:'8510 Rollegem (Kortrijk)',labelnl:'8510 Rollegem (Kortrijk)',labelfr:'8510 Rollegem',labelen:'8510 Rollegem',labelde:'8510 Rollegem',parentid:'reg.232',show:'true',sort:'1059'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1075',label:'8511 Aalbeke (Kortrijk)',labelnl:'8511 Aalbeke (Kortrijk)',labelfr:'8511 Aalbeke',labelen:'8511 Aalbeke',labelde:'8511 Aalbeke',parentid:'reg.232',show:'true',sort:'1060'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1076',label:'8520 Kuurne',labelnl:'8520 Kuurne',labelfr:'8520 Cuerne',labelen:'8520 Kuurne',labelde:'8520 Kuurne',parentid:'reg.233',show:'true',sort:'1061'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1077',label:'8530 Harelbeke',labelnl:'8530 Harelbeke',labelfr:'8530 Harelbeke',labelen:'8530 Harelbeke',labelde:'8530 Harelbeke',parentid:'reg.234',show:'true',sort:'1062'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1078',label:'8531 Bavikhove (Harelbeke)',labelnl:'8531 Bavikhove (Harelbeke)',labelfr:'8531 Bavikhove',labelen:'8531 Bavikhove',labelde:'8531 Bavikhove',parentid:'reg.234',show:'true',sort:'1063'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1079',label:'8531 Hulste (Harelbeke)',labelnl:'8531 Hulste (Harelbeke)',labelfr:'8531 Hulste',labelen:'8531 Hulste',labelde:'8531 Hulste',parentid:'reg.234',show:'true',sort:'1064'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1080',label:'8540 Deerlijk',labelnl:'8540 Deerlijk',labelfr:'8540 Deerlijk',labelen:'8540 Deerlijk',labelde:'8540 Deerlijk',parentid:'reg.235',show:'true',sort:'1065'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1081',label:'8550 Zwevegem',labelnl:'8550 Zwevegem',labelfr:'8550 Zwevegem',labelen:'8550 Zwevegem',labelde:'8550 Zwevegem',parentid:'reg.236',show:'true',sort:'1066'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1082',label:'8551 Heestert (Zwevegem)',labelnl:'8551 Heestert (Zwevegem)',labelfr:'8551 Heestert',labelen:'8551 Heestert',labelde:'8551 Heestert',parentid:'reg.236',show:'true',sort:'1067'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1083',label:'8552 Moen (Zwevegem)',labelnl:'8552 Moen (Zwevegem)',labelfr:'8552 Moen',labelen:'8552 Moen',labelde:'8552 Moen',parentid:'reg.236',show:'true',sort:'1068'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1084',label:'8553 Otegem (Zwevegem)',labelnl:'8553 Otegem (Zwevegem)',labelfr:'8553 Otegem',labelen:'8553 Otegem',labelde:'8553 Otegem',parentid:'reg.236',show:'true',sort:'1069'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1085',label:'8554 Sint-Denijs (Zwevegem)',labelnl:'8554 Sint-Denijs (Zwevegem)',labelfr:'8554 Sint-Denijs',labelen:'8554 Sint-Denijs',labelde:'8554 Sint-Denijs',parentid:'reg.236',show:'true',sort:'1070'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1086',label:'8560 Wevelgem',labelnl:'8560 Wevelgem',labelfr:'8560 Wevelgem',labelen:'8560 Wevelgem',labelde:'8560 Wevelgem',parentid:'reg.237',show:'true',sort:'1071'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1087',label:'8560 Gullegem (Wevelgem)',labelnl:'8560 Gullegem (Wevelgem)',labelfr:'8560 Gullegem',labelen:'8560 Gullegem',labelde:'8560 Gullegem',parentid:'reg.237',show:'true',sort:'1072'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1088',label:'8560 Moorsele (Wevelgem)',labelnl:'8560 Moorsele (Wevelgem)',labelfr:'8560 Moorsele',labelen:'8560 Moorsele',labelde:'8560 Moorsele',parentid:'reg.237',show:'true',sort:'1073'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1089',label:'8570 Anzegem',labelnl:'8570 Anzegem',labelfr:'8570 Anzegem',labelen:'8570 Anzegem',labelde:'8570 Anzegem',parentid:'reg.238',show:'true',sort:'1074'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1090',label:'8570 Gijzelbrechtegem (Anzegem)',labelnl:'8570 Gijzelbrechtegem (Anzegem)',labelfr:'8570 Gijzelbrechtegem',labelen:'8570 Gijzelbrechtegem',labelde:'8570 Gijzelbrechtegem',parentid:'reg.238',show:'true',sort:'1075'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1091',label:'8570 Ingooigem (Anzegem)',labelnl:'8570 Ingooigem (Anzegem)',labelfr:'8570 Ingooigem',labelen:'8570 Ingooigem',labelde:'8570 Ingooigem',parentid:'reg.238',show:'true',sort:'1076'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1092',label:'8570 Vichte (Anzegem)',labelnl:'8570 Vichte (Anzegem)',labelfr:'8570 Vichte',labelen:'8570 Vichte',labelde:'8570 Vichte',parentid:'reg.238',show:'true',sort:'1077'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1093',label:'8572 Kaster (Anzegem)',labelnl:'8572 Kaster (Anzegem)',labelfr:'8572 Kaster',labelen:'8572 Kaster',labelde:'8572 Kaster',parentid:'reg.238',show:'true',sort:'1078'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1094',label:'8573 Tiegem (Anzegem)',labelnl:'8573 Tiegem (Anzegem)',labelfr:'8573 Tiegem',labelen:'8573 Tiegem',labelde:'8573 Tiegem',parentid:'reg.238',show:'true',sort:'1079'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1095',label:'8580 Avelgem',labelnl:'8580 Avelgem',labelfr:'8580 Avelgem',labelen:'8580 Avelgem',labelde:'8580 Avelgem',parentid:'reg.239',show:'true',sort:'1080'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1096',label:'8581 Kerkhove (Avelgem)',labelnl:'8581 Kerkhove (Avelgem)',labelfr:'8581 Kerkhove',labelen:'8581 Kerkhove',labelde:'8581 Kerkhove',parentid:'reg.239',show:'true',sort:'1081'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1097',label:'8581 Waarmaarde (Avelgem)',labelnl:'8581 Waarmaarde (Avelgem)',labelfr:'8581 Waarmaarde',labelen:'8581 Waarmaarde',labelde:'8581 Waarmaarde',parentid:'reg.239',show:'true',sort:'1082'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1098',label:'8582 Outrijve (Avelgem)',labelnl:'8582 Outrijve (Avelgem)',labelfr:'8582 Outrijve',labelen:'8582 Outrijve',labelde:'8582 Outrijve',parentid:'reg.239',show:'true',sort:'1083'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1099',label:'8583 Bossuit (Avelgem)',labelnl:'8583 Bossuit (Avelgem)',labelfr:'8583 Bossuit',labelen:'8583 Bossuit',labelde:'8583 Bossuit',parentid:'reg.239',show:'true',sort:'1084'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1100',label:'8587 Spiere-Helkijn',labelnl:'8587 Spiere-Helkijn',labelfr:'8587 Espierres-Helchin',labelen:'8587 Spiere-Helkijn',labelde:'8587 Spiere-Helkijn',parentid:'reg.240',show:'true',sort:'1085'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1101',label:'8587 Espierres (Spiere-Helkijn)',labelnl:'8587 Espierres (Spiere-Helkijn)',labelfr:'8587 Espierres',labelen:'8587 Spiere',labelde:'8587 Spiere',parentid:'reg.240',show:'true',sort:'1086'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1102',label:'8587 Espierres-Helchin (Spiere-Helkijn)',labelnl:'8587 Espierres-Helchin (Spiere-Helkijn)',labelfr:'8587 Espierres-Helchin',labelen:'8587 Spiere-Helkijn',labelde:'8587 Spiere-Helkijn',parentid:'reg.240',show:'true',sort:'1087'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1103',label:'8587 Helchin (Spiere-Helkijn)',labelnl:'8587 Helchin (Spiere-Helkijn)',labelfr:'8587 Helchin',labelen:'8587 Helkijn',labelde:'8587 Helkijn',parentid:'reg.240',show:'true',sort:'1088'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1104',label:'8587 Helkijn (Spiere-Helkijn)',labelnl:'8587 Helkijn (Spiere-Helkijn)',labelfr:'8587 Helchin',labelen:'8587 Helkijn',labelde:'8587 Helkijn',parentid:'reg.240',show:'true',sort:'1089'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1105',label:'8587 Spiere (Spiere-Helkijn)',labelnl:'8587 Spiere (Spiere-Helkijn)',labelfr:'8587 Espierres',labelen:'8587 Spiere',labelde:'8587 Spiere',parentid:'reg.240',show:'true',sort:'1090'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1106',label:'8600 Diksmuide',labelnl:'8600 Diksmuide',labelfr:'8600 Dixmude',labelen:'8600 Diksmuide',labelde:'8600 Diksmuide',parentid:'reg.241',show:'true',sort:'1091'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1107',label:'8600 Beerst (Diksmuide)',labelnl:'8600 Beerst (Diksmuide)',labelfr:'8600 Beerst',labelen:'8600 Beerst',labelde:'8600 Beerst',parentid:'reg.241',show:'true',sort:'1092'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1108',label:'8600 Driekapellen (Diksmuide)',labelnl:'8600 Driekapellen (Diksmuide)',labelfr:'8600 Driekapellen',labelen:'8600 Driekapellen',labelde:'8600 Driekapellen',parentid:'reg.241',show:'true',sort:'1093'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1109',label:'8600 Esen (Diksmuide)',labelnl:'8600 Esen (Diksmuide)',labelfr:'8600 Esen',labelen:'8600 Esen',labelde:'8600 Esen',parentid:'reg.241',show:'true',sort:'1094'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1110',label:'8600 Kaaskerke (Diksmuide)',labelnl:'8600 Kaaskerke (Diksmuide)',labelfr:'8600 Kaaskerke',labelen:'8600 Kaaskerke',labelde:'8600 Kaaskerke',parentid:'reg.241',show:'true',sort:'1095'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1111',label:'8600 Keiem (Diksmuide)',labelnl:'8600 Keiem (Diksmuide)',labelfr:'8600 Keiem',labelen:'8600 Keiem',labelde:'8600 Keiem',parentid:'reg.241',show:'true',sort:'1096'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1112',label:'8600 Lampernisse (Diksmuide)',labelnl:'8600 Lampernisse (Diksmuide)',labelfr:'8600 Lampernisse',labelen:'8600 Lampernisse',labelde:'8600 Lampernisse',parentid:'reg.241',show:'true',sort:'1097'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1113',label:'8600 Leke (Diksmuide)',labelnl:'8600 Leke (Diksmuide)',labelfr:'8600 Leke',labelen:'8600 Leke',labelde:'8600 Leke',parentid:'reg.241',show:'true',sort:'1098'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1114',label:'8600 Nieuwkapelle (Diksmuide)',labelnl:'8600 Nieuwkapelle (Diksmuide)',labelfr:'8600 Nieuwkapelle',labelen:'8600 Nieuwkapelle',labelde:'8600 Nieuwkapelle',parentid:'reg.241',show:'true',sort:'1099'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1115',label:'8600 Oostkerke (Diksmuide)',labelnl:'8600 Oostkerke (Diksmuide)',labelfr:'8600 Oostkerke',labelen:'8600 Oostkerke',labelde:'8600 Oostkerke',parentid:'reg.241',show:'true',sort:'1100'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1116',label:'8600 Oudekapelle (Diksmuide)',labelnl:'8600 Oudekapelle (Diksmuide)',labelfr:'8600 Oudekapelle',labelen:'8600 Oudekapelle',labelde:'8600 Oudekapelle',parentid:'reg.241',show:'true',sort:'1101'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1117',label:'8600 Pervijze (Diksmuide)',labelnl:'8600 Pervijze (Diksmuide)',labelfr:'8600 Pervijze',labelen:'8600 Pervijze',labelde:'8600 Pervijze',parentid:'reg.241',show:'true',sort:'1102'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1118',label:'8600 Sint-Jacobs-Kapelle (Diksmuide)',labelnl:'8600 Sint-Jacobs-Kapelle (Diksmuide)',labelfr:'8600 Sint-Jacobs-Kapelle',labelen:'8600 Sint-Jacobs-Kapelle',labelde:'8600 Sint-Jacobs-Kapelle',parentid:'reg.241',show:'true',sort:'1103'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1119',label:'8600 Stuivekenskerke (Diksmuide)',labelnl:'8600 Stuivekenskerke (Diksmuide)',labelfr:'8600 Stuivekenskerke',labelen:'8600 Stuivekenskerke',labelde:'8600 Stuivekenskerke',parentid:'reg.241',show:'true',sort:'1104'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1120',label:'8600 Vladslo (Diksmuide)',labelnl:'8600 Vladslo (Diksmuide)',labelfr:'8600 Vladslo',labelen:'8600 Vladslo',labelde:'8600 Vladslo',parentid:'reg.241',show:'true',sort:'1105'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1121',label:'8600 Woumen (Diksmuide)',labelnl:'8600 Woumen (Diksmuide)',labelfr:'8600 Woumen',labelen:'8600 Woumen',labelde:'8600 Woumen',parentid:'reg.241',show:'true',sort:'1106'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1122',label:'8610 Kortemark',labelnl:'8610 Kortemark',labelfr:'8610 Kortemark',labelen:'8610 Kortemark',labelde:'8610 Kortemark',parentid:'reg.242',show:'true',sort:'1107'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1123',label:'8610 Handzame (Kortemark)',labelnl:'8610 Handzame (Kortemark)',labelfr:'8610 Handzame',labelen:'8610 Handzame',labelde:'8610 Handzame',parentid:'reg.242',show:'true',sort:'1108'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1124',label:'8610 Werken (Kortemark)',labelnl:'8610 Werken (Kortemark)',labelfr:'8610 Werken',labelen:'8610 Werken',labelde:'8610 Werken',parentid:'reg.242',show:'true',sort:'1109'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1125',label:'8610 Zarren (Kortemark)',labelnl:'8610 Zarren (Kortemark)',labelfr:'8610 Zarren',labelen:'8610 Zarren',labelde:'8610 Zarren',parentid:'reg.242',show:'true',sort:'1110'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1126',label:'8620 Nieuwpoort',labelnl:'8620 Nieuwpoort',labelfr:'8620 Nieuport',labelen:'8620 Nieuwpoort',labelde:'8620 Nieuwpoort',parentid:'reg.243',show:'true',sort:'1111'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1127',label:'8620 Ramskapelle (Nieuwpoort)',labelnl:'8620 Ramskapelle (Nieuwpoort)',labelfr:'8620 Ramskapelle',labelen:'8620 Ramskapelle',labelde:'8620 Ramskapelle',parentid:'reg.243',show:'true',sort:'1112'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1128',label:'8620 Sint-Joris (Nieuwpoort)',labelnl:'8620 Sint-Joris (Nieuwpoort)',labelfr:'8620 Sint-Joris',labelen:'8620 Sint-Joris',labelde:'8620 Sint-Joris',parentid:'reg.243',show:'true',sort:'1113'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1129',label:'8630 Veurne',labelnl:'8630 Veurne',labelfr:'8630 Furnes',labelen:'8630 Veurne',labelde:'8630 Veurne',parentid:'reg.244',show:'true',sort:'1114'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1130',label:'8630 Avekapelle (Veurne)',labelnl:'8630 Avekapelle (Veurne)',labelfr:'8630 Avekapelle',labelen:'8630 Avekapelle',labelde:'8630 Avekapelle',parentid:'reg.244',show:'true',sort:'1115'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1131',label:'8630 Booitshoeke (Veurne)',labelnl:'8630 Booitshoeke (Veurne)',labelfr:'8630 Booitshoeke',labelen:'8630 Booitshoeke',labelde:'8630 Booitshoeke',parentid:'reg.244',show:'true',sort:'1116'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1132',label:'8630 Bulskamp (Veurne)',labelnl:'8630 Bulskamp (Veurne)',labelfr:'8630 Bulskamp',labelen:'8630 Bulskamp',labelde:'8630 Bulskamp',parentid:'reg.244',show:'true',sort:'1117'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1133',label:'8630 De Moeren (Veurne)',labelnl:'8630 De Moeren (Veurne)',labelfr:'8630 Les Moëres',labelen:'8630 De Moeren',labelde:'8630 De Moeren',parentid:'reg.244',show:'true',sort:'1118'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1134',label:'8630 Eggewaartskapelle (Veurne)',labelnl:'8630 Eggewaartskapelle (Veurne)',labelfr:'8630 Eggewaartskapelle',labelen:'8630 Eggewaartskapelle',labelde:'8630 Eggewaartskapelle',parentid:'reg.244',show:'true',sort:'1119'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1135',label:'8630 Houtem (Veurne)',labelnl:'8630 Houtem (Veurne)',labelfr:'8630 Houthem',labelen:'8630 Houtem',labelde:'8630 Houtem',parentid:'reg.244',show:'true',sort:'1120'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1136',label:'8630 Steenkerke (Veurne)',labelnl:'8630 Steenkerke (Veurne)',labelfr:'8630 Steenkerke',labelen:'8630 Steenkerke',labelde:'8630 Steenkerke',parentid:'reg.244',show:'true',sort:'1121'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1137',label:'8630 Vinkem (Veurne)',labelnl:'8630 Vinkem (Veurne)',labelfr:'8630 Vinkem',labelen:'8630 Vinkem',labelde:'8630 Vinkem',parentid:'reg.244',show:'true',sort:'1122'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1138',label:'8630 Wulveringem (Veurne)',labelnl:'8630 Wulveringem (Veurne)',labelfr:'8630 Wulveringem',labelen:'8630 Wulveringem',labelde:'8630 Wulveringem',parentid:'reg.244',show:'true',sort:'1123'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1139',label:'8630 Zoutenaaie (Veurne)',labelnl:'8630 Zoutenaaie (Veurne)',labelfr:'8630 Zoutenaaie',labelen:'8630 Zoutenaaie',labelde:'8630 Zoutenaaie',parentid:'reg.244',show:'true',sort:'1124'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1140',label:'8640 Vleteren',labelnl:'8640 Vleteren',labelfr:'8640 Vleteren',labelen:'8640 Vleteren',labelde:'8640 Vleteren',parentid:'reg.245',show:'true',sort:'1125'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1141',label:'8640 Oostvleteren (Vleteren)',labelnl:'8640 Oostvleteren (Vleteren)',labelfr:'8640 Oostvleteren',labelen:'8640 Oostvleteren',labelde:'8640 Oostvleteren',parentid:'reg.245',show:'true',sort:'1126'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1142',label:'8640 Westvleteren (Vleteren)',labelnl:'8640 Westvleteren (Vleteren)',labelfr:'8640 Westvleteren',labelen:'8640 Westvleteren',labelde:'8640 Westvleteren',parentid:'reg.245',show:'true',sort:'1127'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1143',label:'8640 Woesten (Vleteren)',labelnl:'8640 Woesten (Vleteren)',labelfr:'8640 Woesten',labelen:'8640 Woesten',labelde:'8640 Woesten',parentid:'reg.245',show:'true',sort:'1128'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1144',label:'8647 Lo-Reninge',labelnl:'8647 Lo-Reninge',labelfr:'8647 Lo-Reninge',labelen:'8647 Lo-Reninge',labelde:'8647 Lo-Reninge',parentid:'reg.246',show:'true',sort:'1129'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1145',label:'8647 Lo (Lo-Reninge)',labelnl:'8647 Lo (Lo-Reninge)',labelfr:'8647 Lo',labelen:'8647 Lo',labelde:'8647 Lo',parentid:'reg.246',show:'true',sort:'1130'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1146',label:'8647 Noordschote (Lo-Reninge)',labelnl:'8647 Noordschote (Lo-Reninge)',labelfr:'8647 Noordschote',labelen:'8647 Noordschote',labelde:'8647 Noordschote',parentid:'reg.246',show:'true',sort:'1131'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1147',label:'8647 Pollinkhove (Lo-Reninge)',labelnl:'8647 Pollinkhove (Lo-Reninge)',labelfr:'8647 Pollinkhove',labelen:'8647 Pollinkhove',labelde:'8647 Pollinkhove',parentid:'reg.246',show:'true',sort:'1132'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1148',label:'8647 Reninge (Lo-Reninge)',labelnl:'8647 Reninge (Lo-Reninge)',labelfr:'8647 Reninge',labelen:'8647 Reninge',labelde:'8647 Reninge',parentid:'reg.246',show:'true',sort:'1133'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1149',label:'8650 Houthulst',labelnl:'8650 Houthulst',labelfr:'8650 Houthulst',labelen:'8650 Houthulst',labelde:'8650 Houthulst',parentid:'reg.247',show:'true',sort:'1134'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1150',label:'8650 Klerken (Houthulst)',labelnl:'8650 Klerken (Houthulst)',labelfr:'8650 Klerken',labelen:'8650 Klerken',labelde:'8650 Klerken',parentid:'reg.247',show:'true',sort:'1135'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1151',label:'8650 Merkem (Houthulst)',labelnl:'8650 Merkem (Houthulst)',labelfr:'8650 Merkem',labelen:'8650 Merkem',labelde:'8650 Merkem',parentid:'reg.247',show:'true',sort:'1136'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1152',label:'8660 De Panne',labelnl:'8660 De Panne',labelfr:'8660 La Panne',labelen:'8660 De Panne',labelde:'8660 De Panne',parentid:'reg.248',show:'true',sort:'1137'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1153',label:'8660 Adinkerke (De Panne)',labelnl:'8660 Adinkerke (De Panne)',labelfr:'8660 Adinkerke',labelen:'8660 Adinkerke',labelde:'8660 Adinkerke',parentid:'reg.248',show:'true',sort:'1138'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1154',label:'8670 Koksijde',labelnl:'8670 Koksijde',labelfr:'8670 Coxyde',labelen:'8670 Koksijde',labelde:'8670 Koksijde',parentid:'reg.249',show:'true',sort:'1139'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1155',label:'8670 Oostduinkerke (Koksijde)',labelnl:'8670 Oostduinkerke (Koksijde)',labelfr:'8670 Oostduinkerke',labelen:'8670 Oostduinkerke',labelde:'8670 Oostduinkerke',parentid:'reg.249',show:'true',sort:'1140'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1156',label:'8670 Wulpen (Koksijde)',labelnl:'8670 Wulpen (Koksijde)',labelfr:'8670 Wulpen',labelen:'8670 Wulpen',labelde:'8670 Wulpen',parentid:'reg.249',show:'true',sort:'1141'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1157',label:'8680 Koekelare',labelnl:'8680 Koekelare',labelfr:'8680 Koekelare',labelen:'8680 Koekelare',labelde:'8680 Koekelare',parentid:'reg.250',show:'true',sort:'1142'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1158',label:'8680 Bovekerke (Koekelare)',labelnl:'8680 Bovekerke (Koekelare)',labelfr:'8680 Bovekerke',labelen:'8680 Bovekerke',labelde:'8680 Bovekerke',parentid:'reg.250',show:'true',sort:'1143'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1159',label:'8680 Zande (Koekelare)',labelnl:'8680 Zande (Koekelare)',labelfr:'8680 Zande',labelen:'8680 Zande',labelde:'8680 Zande',parentid:'reg.250',show:'true',sort:'1144'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1160',label:'8690 Alveringem',labelnl:'8690 Alveringem',labelfr:'8690 Alveringem',labelen:'8690 Alveringem',labelde:'8690 Alveringem',parentid:'reg.251',show:'true',sort:'1145'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1161',label:'8690 Hoogstade (Alveringem)',labelnl:'8690 Hoogstade (Alveringem)',labelfr:'8690 Hoogstade',labelen:'8690 Hoogstade',labelde:'8690 Hoogstade',parentid:'reg.251',show:'true',sort:'1146'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1162',label:'8690 Oeren (Alveringem)',labelnl:'8690 Oeren (Alveringem)',labelfr:'8690 Oeren',labelen:'8690 Oeren',labelde:'8690 Oeren',parentid:'reg.251',show:'true',sort:'1147'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1163',label:'8690 Sint-Rijkers (Alveringem)',labelnl:'8690 Sint-Rijkers (Alveringem)',labelfr:'8690 Sint-Rijkers',labelen:'8690 Sint-Rijkers',labelde:'8690 Sint-Rijkers',parentid:'reg.251',show:'true',sort:'1148'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1164',label:'8691 Beveren-Aan-Den-Ijzer (Alveringem)',labelnl:'8691 Beveren-Aan-Den-Ijzer (Alveringem)',labelfr:'8691 Beveren',labelen:'8691 Beveren',labelde:'8691 Beveren',parentid:'reg.251',show:'true',sort:'1149'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1165',label:'8691 Gijverinkhove (Alveringem)',labelnl:'8691 Gijverinkhove (Alveringem)',labelfr:'8691 Gijverinkhove',labelen:'8691 Gijverinkhove',labelde:'8691 Gijverinkhove',parentid:'reg.251',show:'true',sort:'1150'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1166',label:'8691 Izenberge (Alveringem)',labelnl:'8691 Izenberge (Alveringem)',labelfr:'8691 Izenberge',labelen:'8691 Izenberge',labelde:'8691 Izenberge',parentid:'reg.251',show:'true',sort:'1151'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1167',label:'8691 Leisele (Alveringem)',labelnl:'8691 Leisele (Alveringem)',labelfr:'8691 Leisele',labelen:'8691 Leisele',labelde:'8691 Leisele',parentid:'reg.251',show:'true',sort:'1152'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1168',label:'8691 Stavele (Alveringem)',labelnl:'8691 Stavele (Alveringem)',labelfr:'8691 Stavele',labelen:'8691 Stavele',labelde:'8691 Stavele',parentid:'reg.251',show:'true',sort:'1153'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1169',label:'8700 Tielt',labelnl:'8700 Tielt',labelfr:'8700 Tielt',labelen:'8700 Tielt',labelde:'8700 Tielt',parentid:'reg.252',show:'true',sort:'1154'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1170',label:'8700 Aarsele (Tielt)',labelnl:'8700 Aarsele (Tielt)',labelfr:'8700 Aarsele',labelen:'8700 Aarsele',labelde:'8700 Aarsele',parentid:'reg.252',show:'true',sort:'1155'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1171',label:'8700 Kanegem (Tielt)',labelnl:'8700 Kanegem (Tielt)',labelfr:'8700 Kanegem',labelen:'8700 Kanegem',labelde:'8700 Kanegem',parentid:'reg.252',show:'true',sort:'1156'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1172',label:'8700 Schuiferskapelle (Tielt)',labelnl:'8700 Schuiferskapelle (Tielt)',labelfr:'8700 Schuiferskapelle',labelen:'8700 Schuiferskapelle',labelde:'8700 Schuiferskapelle',parentid:'reg.252',show:'true',sort:'1157'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1173',label:'8710 Wielsbeke',labelnl:'8710 Wielsbeke',labelfr:'8710 Wielsbeke',labelen:'8710 Wielsbeke',labelde:'8710 Wielsbeke',parentid:'reg.253',show:'true',sort:'1158'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1174',label:'8710 Ooigem (Wielsbeke)',labelnl:'8710 Ooigem (Wielsbeke)',labelfr:'8710 Ooigem',labelen:'8710 Ooigem',labelde:'8710 Ooigem',parentid:'reg.253',show:'true',sort:'1159'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1175',label:'8710 Sint-Baafs-Vijve (Wielsbeke)',labelnl:'8710 Sint-Baafs-Vijve (Wielsbeke)',labelfr:'8710 Vive-Saint-Bavon',labelen:'8710 Sint-Baafs-Vijve',labelde:'8710 Sint-Baafs-Vijve',parentid:'reg.253',show:'true',sort:'1160'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1176',label:'8720 Dentergem',labelnl:'8720 Dentergem',labelfr:'8720 Dentergem',labelen:'8720 Dentergem',labelde:'8720 Dentergem',parentid:'reg.254',show:'true',sort:'1161'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1177',label:'8720 Markegem (Dentergem)',labelnl:'8720 Markegem (Dentergem)',labelfr:'8720 Markegem',labelen:'8720 Markegem',labelde:'8720 Markegem',parentid:'reg.254',show:'true',sort:'1162'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1178',label:'8720 Oeselgem (Dentergem)',labelnl:'8720 Oeselgem (Dentergem)',labelfr:'8720 Oeselgem',labelen:'8720 Oeselgem',labelde:'8720 Oeselgem',parentid:'reg.254',show:'true',sort:'1163'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1179',label:'8720 Wakken (Dentergem)',labelnl:'8720 Wakken (Dentergem)',labelfr:'8720 Wakken',labelen:'8720 Wakken',labelde:'8720 Wakken',parentid:'reg.254',show:'true',sort:'1164'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1180',label:'8730 Beernem',labelnl:'8730 Beernem',labelfr:'8730 Beernem',labelen:'8730 Beernem',labelde:'8730 Beernem',parentid:'reg.255',show:'true',sort:'1165'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1181',label:'8730 Oedelem (Beernem)',labelnl:'8730 Oedelem (Beernem)',labelfr:'8730 Oedelem',labelen:'8730 Oedelem',labelde:'8730 Oedelem',parentid:'reg.255',show:'true',sort:'1166'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1182',label:'8730 Sint-Joris (Beernem)',labelnl:'8730 Sint-Joris (Beernem)',labelfr:'8730 Saint-Georges',labelen:'8730 Sint-Joris',labelde:'8730 Sint-Joris',parentid:'reg.255',show:'true',sort:'1167'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1183',label:'8740 Pittem',labelnl:'8740 Pittem',labelfr:'8740 Pittem',labelen:'8740 Pittem',labelde:'8740 Pittem',parentid:'reg.256',show:'true',sort:'1168'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1184',label:'8740 Egem (Pittem)',labelnl:'8740 Egem (Pittem)',labelfr:'8740 Egem',labelen:'8740 Egem',labelde:'8740 Egem',parentid:'reg.256',show:'true',sort:'1169'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1185',label:'8750 Wingene',labelnl:'8750 Wingene',labelfr:'8750 Wingene',labelen:'8750 Wingene',labelde:'8750 Wingene',parentid:'reg.257',show:'true',sort:'1170'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1186',label:'8750 Zwevezele (Wingene)',labelnl:'8750 Zwevezele (Wingene)',labelfr:'8750 Zwevezele',labelen:'8750 Zwevezele',labelde:'8750 Zwevezele',parentid:'reg.257',show:'true',sort:'1171'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1187',label:'8755 Ruiselede',labelnl:'8755 Ruiselede',labelfr:'8755 Ruiselede',labelen:'8755 Ruiselede',labelde:'8755 Ruiselede',parentid:'reg.258',show:'true',sort:'1172'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1188',label:'8760 Meulebeke',labelnl:'8760 Meulebeke',labelfr:'8760 Meulebeke',labelen:'8760 Meulebeke',labelde:'8760 Meulebeke',parentid:'reg.259',show:'true',sort:'1173'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1189',label:'8770 Ingelmunster',labelnl:'8770 Ingelmunster',labelfr:'8770 Ingelmunster',labelen:'8770 Ingelmunster',labelde:'8770 Ingelmunster',parentid:'reg.260',show:'true',sort:'1174'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1190',label:'8780 Oostrozebeke',labelnl:'8780 Oostrozebeke',labelfr:'8780 Oostrozebeke',labelen:'8780 Oostrozebeke',labelde:'8780 Oostrozebeke',parentid:'reg.261',show:'true',sort:'1175'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1191',label:'8790 Waregem',labelnl:'8790 Waregem',labelfr:'8790 Waregem',labelen:'8790 Waregem',labelde:'8790 Waregem',parentid:'reg.262',show:'true',sort:'1176'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1192',label:'8791 Beveren-Leie (Waregem)',labelnl:'8791 Beveren-Leie (Waregem)',labelfr:'8791 Beveren',labelen:'8791 Beveren',labelde:'8791 Beveren',parentid:'reg.262',show:'true',sort:'1177'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1193',label:'8792 Desselgem (Waregem)',labelnl:'8792 Desselgem (Waregem)',labelfr:'8792 Desselgem',labelen:'8792 Desselgem',labelde:'8792 Desselgem',parentid:'reg.262',show:'true',sort:'1178'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1194',label:'8793 Sint-Eloois-Vijve (Waregem)',labelnl:'8793 Sint-Eloois-Vijve (Waregem)',labelfr:'8793 Vive-Saint-Éloi',labelen:'8793 Sint-Eloois-Vijve',labelde:'8793 Sint-Eloois-Vijve',parentid:'reg.262',show:'true',sort:'1179'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1195',label:'8800 Roeselare',labelnl:'8800 Roeselare',labelfr:'8800 Roulers',labelen:'8800 Roeselare',labelde:'8800 Roeselare',parentid:'reg.263',show:'true',sort:'1180'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1196',label:'8800 Beveren (Roeselare)',labelnl:'8800 Beveren (Roeselare)',labelfr:'8800 Beveren',labelen:'8800 Beveren',labelde:'8800 Beveren',parentid:'reg.263',show:'true',sort:'1181'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1197',label:'8800 Oekene (Roeselare)',labelnl:'8800 Oekene (Roeselare)',labelfr:'8800 Oekene',labelen:'8800 Oekene',labelde:'8800 Oekene',parentid:'reg.263',show:'true',sort:'1182'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1198',label:'8800 Rumbeke (Roeselare)',labelnl:'8800 Rumbeke (Roeselare)',labelfr:'8800 Rumbeke',labelen:'8800 Rumbeke',labelde:'8800 Rumbeke',parentid:'reg.263',show:'true',sort:'1183'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1199',label:'8810 Lichtervelde',labelnl:'8810 Lichtervelde',labelfr:'8810 Lichtervelde',labelen:'8810 Lichtervelde',labelde:'8810 Lichtervelde',parentid:'reg.264',show:'true',sort:'1184'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1200',label:'8820 Torhout',labelnl:'8820 Torhout',labelfr:'8820 Torhout',labelen:'8820 Torhout',labelde:'8820 Torhout',parentid:'reg.265',show:'true',sort:'1185'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1201',label:'8830 Hooglede',labelnl:'8830 Hooglede',labelfr:'8830 Hooglede',labelen:'8830 Hooglede',labelde:'8830 Hooglede',parentid:'reg.266',show:'true',sort:'1186'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1202',label:'8830 Gits (Hooglede)',labelnl:'8830 Gits (Hooglede)',labelfr:'8830 Gits',labelen:'8830 Gits',labelde:'8830 Gits',parentid:'reg.266',show:'true',sort:'1187'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1203',label:'8840 Staden',labelnl:'8840 Staden',labelfr:'8840 Staden',labelen:'8840 Staden',labelde:'8840 Staden',parentid:'reg.267',show:'true',sort:'1188'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1204',label:'8840 Oostnieuwkerke (Staden)',labelnl:'8840 Oostnieuwkerke (Staden)',labelfr:'8840 Oostnieuwkerke',labelen:'8840 Oostnieuwkerke',labelde:'8840 Oostnieuwkerke',parentid:'reg.267',show:'true',sort:'1189'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1205',label:'8840 Westrozebeke (Staden)',labelnl:'8840 Westrozebeke (Staden)',labelfr:'8840 Westrozebeke',labelen:'8840 Westrozebeke',labelde:'8840 Westrozebeke',parentid:'reg.267',show:'true',sort:'1190'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1206',label:'8850 Ardooie',labelnl:'8850 Ardooie',labelfr:'8850 Ardooie',labelen:'8850 Ardooie',labelde:'8850 Ardooie',parentid:'reg.268',show:'true',sort:'1191'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1207',label:'8851 Koolskamp (Ardooie)',labelnl:'8851 Koolskamp (Ardooie)',labelfr:'8851 Koolskamp',labelen:'8851 Koolskamp',labelde:'8851 Koolskamp',parentid:'reg.268',show:'true',sort:'1192'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1208',label:'8860 Lendelede',labelnl:'8860 Lendelede',labelfr:'8860 Lendelede',labelen:'8860 Lendelede',labelde:'8860 Lendelede',parentid:'reg.269',show:'true',sort:'1193'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1209',label:'8870 Izegem',labelnl:'8870 Izegem',labelfr:'8870 Izegem',labelen:'8870 Izegem',labelde:'8870 Izegem',parentid:'reg.270',show:'true',sort:'1194'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1210',label:'8870 Emelgem (Izegem)',labelnl:'8870 Emelgem (Izegem)',labelfr:'8870 Emelgem',labelen:'8870 Emelgem',labelde:'8870 Emelgem',parentid:'reg.270',show:'true',sort:'1195'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1211',label:'8870 Kachtem (Izegem)',labelnl:'8870 Kachtem (Izegem)',labelfr:'8870 Kachtem',labelen:'8870 Kachtem',labelde:'8870 Kachtem',parentid:'reg.270',show:'true',sort:'1196'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1212',label:'8880 Ledegem',labelnl:'8880 Ledegem',labelfr:'8880 Ledegem',labelen:'8880 Ledegem',labelde:'8880 Ledegem',parentid:'reg.271',show:'true',sort:'1197'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1213',label:'8880 Rollegem-Kapelle (Ledegem)',labelnl:'8880 Rollegem-Kapelle (Ledegem)',labelfr:'8880 Rollegem-Kapelle',labelen:'8880 Rollegem-Kapelle',labelde:'8880 Rollegem-Kapelle',parentid:'reg.271',show:'true',sort:'1198'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1214',label:'8880 Sint-Eloois-Winkel (Ledegem)',labelnl:'8880 Sint-Eloois-Winkel (Ledegem)',labelfr:'8880 Sint-Eloois-Winkel',labelen:'8880 Sint-Eloois-Winkel',labelde:'8880 Sint-Eloois-Winkel',parentid:'reg.271',show:'true',sort:'1199'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1215',label:'8890 Moorslede',labelnl:'8890 Moorslede',labelfr:'8890 Moorslede',labelen:'8890 Moorslede',labelde:'8890 Moorslede',parentid:'reg.272',show:'true',sort:'1200'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1216',label:'8890 Dadizele (Moorslede)',labelnl:'8890 Dadizele (Moorslede)',labelfr:'8890 Dadizele',labelen:'8890 Dadizele',labelde:'8890 Dadizele',parentid:'reg.272',show:'true',sort:'1201'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1217',label:'8900 Ieper',labelnl:'8900 Ieper',labelfr:'8900 Ypres',labelen:'8900 Ypres',labelde:'8900 Ypern',parentid:'reg.273',show:'true',sort:'1202'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1218',label:'8900 Brielen (Ieper)',labelnl:'8900 Brielen (Ieper)',labelfr:'8900 Brielen',labelen:'8900 Brielen',labelde:'8900 Brielen',parentid:'reg.273',show:'true',sort:'1203'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1219',label:'8900 Dikkebus (Ieper)',labelnl:'8900 Dikkebus (Ieper)',labelfr:'8900 Dikkebus',labelen:'8900 Dikkebus',labelde:'8900 Dikkebus',parentid:'reg.273',show:'true',sort:'1204'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1220',label:'8900 Sint-Jan (Ieper)',labelnl:'8900 Sint-Jan (Ieper)',labelfr:'8900 Sint-Jan',labelen:'8900 Sint-Jan',labelde:'8900 Sint-Jan',parentid:'reg.273',show:'true',sort:'1205'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1221',label:'8902 Hollebeke (Ieper)',labelnl:'8902 Hollebeke (Ieper)',labelfr:'8902 Hollebeke',labelen:'8902 Hollebeke',labelde:'8902 Hollebeke',parentid:'reg.273',show:'true',sort:'1206'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1222',label:'8902 Voormezele (Ieper)',labelnl:'8902 Voormezele (Ieper)',labelfr:'8902 Voormezele',labelen:'8902 Voormezele',labelde:'8902 Voormezele',parentid:'reg.273',show:'true',sort:'1207'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1223',label:'8902 Zillebeke (Ieper)',labelnl:'8902 Zillebeke (Ieper)',labelfr:'8902 Zillebeke',labelen:'8902 Zillebeke',labelde:'8902 Zillebeke',parentid:'reg.273',show:'true',sort:'1208'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1224',label:'8904 Boezinge (Ieper)',labelnl:'8904 Boezinge (Ieper)',labelfr:'8904 Boezinge',labelen:'8904 Boezinge',labelde:'8904 Boezinge',parentid:'reg.273',show:'true',sort:'1209'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1225',label:'8904 Zuidschote (Ieper)',labelnl:'8904 Zuidschote (Ieper)',labelfr:'8904 Zuidschote',labelen:'8904 Zuidschote',labelde:'8904 Zuidschote',parentid:'reg.273',show:'true',sort:'1210'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1226',label:'8906 Elverdinge (Ieper)',labelnl:'8906 Elverdinge (Ieper)',labelfr:'8906 Elverdinge',labelen:'8906 Elverdinge',labelde:'8906 Elverdinge',parentid:'reg.273',show:'true',sort:'1211'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1227',label:'8908 Vlamertinge (Ieper)',labelnl:'8908 Vlamertinge (Ieper)',labelfr:'8908 Vlamertinge',labelen:'8908 Vlamertinge',labelde:'8908 Vlamertinge',parentid:'reg.273',show:'true',sort:'1212'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1228',label:'8920 Langemark-Poelkapelle',labelnl:'8920 Langemark-Poelkapelle',labelfr:'8920 Langemark-Poelkapelle',labelen:'8920 Langemark-Poelkapelle',labelde:'8920 Langemark-Poelkapelle',parentid:'reg.274',show:'true',sort:'1213'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1229',label:'8920 Bikschote (Langemark-Poelkapelle)',labelnl:'8920 Bikschote (Langemark-Poelkapelle)',labelfr:'8920 Bikschote',labelen:'8920 Bikschote',labelde:'8920 Bikschote',parentid:'reg.274',show:'true',sort:'1214'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1230',label:'8920 Langemark (Langemark-Poelkapelle)',labelnl:'8920 Langemark (Langemark-Poelkapelle)',labelfr:'8920 Langemark',labelen:'8920 Langemark',labelde:'8920 Langemark',parentid:'reg.274',show:'true',sort:'1215'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1231',label:'8920 Poelkapelle (Langemark-Poelkapelle)',labelnl:'8920 Poelkapelle (Langemark-Poelkapelle)',labelfr:'8920 Poelkapelle',labelen:'8920 Poelkapelle',labelde:'8920 Poelkapelle',parentid:'reg.274',show:'true',sort:'1216'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1232',label:'8930 Menen',labelnl:'8930 Menen',labelfr:'8930 Menin',labelen:'8930 Menen',labelde:'8930 Menen',parentid:'reg.275',show:'true',sort:'1217'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1233',label:'8930 Lauwe (Menen)',labelnl:'8930 Lauwe (Menen)',labelfr:'8930 Lauwe',labelen:'8930 Lauwe',labelde:'8930 Lauwe',parentid:'reg.275',show:'true',sort:'1218'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1234',label:'8930 Rekkem (Menen)',labelnl:'8930 Rekkem (Menen)',labelfr:'8930 Rekkem',labelen:'8930 Rekkem',labelde:'8930 Rekkem',parentid:'reg.275',show:'true',sort:'1219'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1235',label:'8940 Wervik',labelnl:'8940 Wervik',labelfr:'8940 Wervik',labelen:'8940 Wervik',labelde:'8940 Wervik',parentid:'reg.276',show:'true',sort:'1220'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1236',label:'8940 Geluwe (Wervik)',labelnl:'8940 Geluwe (Wervik)',labelfr:'8940 Geluwe',labelen:'8940 Geluwe',labelde:'8940 Geluwe',parentid:'reg.276',show:'true',sort:'1221'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1237',label:'8950 Heuvelland',labelnl:'8950 Heuvelland',labelfr:'8950 Heuvelland',labelen:'8950 Heuvelland',labelde:'8950 Heuvelland',parentid:'reg.277',show:'true',sort:'1222'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1238',label:'8950 Nieuwkerke (Heuvelland)',labelnl:'8950 Nieuwkerke (Heuvelland)',labelfr:'8950 Neuve-Église',labelen:'8950 Nieuwkerke',labelde:'8950 Nieuwkerke',parentid:'reg.277',show:'true',sort:'1223'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1239',label:'8951 Dranouter (Heuvelland)',labelnl:'8951 Dranouter (Heuvelland)',labelfr:'8951 Dranoutre',labelen:'8951 Dranouter',labelde:'8951 Dranouter',parentid:'reg.277',show:'true',sort:'1224'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1240',label:'8952 Wulvergem (Heuvelland)',labelnl:'8952 Wulvergem (Heuvelland)',labelfr:'8952 Wulvergem',labelen:'8952 Wulvergem',labelde:'8952 Wulvergem',parentid:'reg.277',show:'true',sort:'1225'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1241',label:'8953 Wijtschate (Heuvelland)',labelnl:'8953 Wijtschate (Heuvelland)',labelfr:'8953 Wijtschate',labelen:'8953 Wijtschate',labelde:'8953 Wijtschate',parentid:'reg.277',show:'true',sort:'1226'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1242',label:'8954 Westouter (Heuvelland)',labelnl:'8954 Westouter (Heuvelland)',labelfr:'8954 Westoutre',labelen:'8954 Westouter',labelde:'8954 Westouter',parentid:'reg.277',show:'true',sort:'1227'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1243',label:'8956 Kemmel (Heuvelland)',labelnl:'8956 Kemmel (Heuvelland)',labelfr:'8956 Kemmel',labelen:'8956 Kemmel',labelde:'8956 Kemmel',parentid:'reg.277',show:'true',sort:'1228'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1244',label:'8958 Loker (Heuvelland)',labelnl:'8958 Loker (Heuvelland)',labelfr:'8958 Locre',labelen:'8958 Loker',labelde:'8958 Loker',parentid:'reg.277',show:'true',sort:'1229'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1245',label:'8957 Mesen',labelnl:'8957 Mesen',labelfr:'8957 Messines',labelen:'8957 Mesen',labelde:'8957 Mesen',parentid:'reg.278',show:'true',sort:'1230'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1246',label:'8957 Messines',labelnl:'8957 Messines',labelfr:'8957 Messines',labelen:'8957 Mesen',labelde:'8957 Mesen',parentid:'reg.279',show:'true',sort:'1231'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1247',label:'8970 Poperinge',labelnl:'8970 Poperinge',labelfr:'8970 Poperinghe',labelen:'8970 Poperinge',labelde:'8970 Poperinge',parentid:'reg.280',show:'true',sort:'1232'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1248',label:'8970 Reningelst (Poperinge)',labelnl:'8970 Reningelst (Poperinge)',labelfr:'8970 Reningelst',labelen:'8970 Reningelst',labelde:'8970 Reningelst',parentid:'reg.280',show:'true',sort:'1233'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1249',label:'8972 Krombeke (Poperinge)',labelnl:'8972 Krombeke (Poperinge)',labelfr:'8972 Krombeke',labelen:'8972 Krombeke',labelde:'8972 Krombeke',parentid:'reg.280',show:'true',sort:'1234'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1250',label:'8972 Proven (Poperinge)',labelnl:'8972 Proven (Poperinge)',labelfr:'8972 Proven',labelen:'8972 Proven',labelde:'8972 Proven',parentid:'reg.280',show:'true',sort:'1235'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1251',label:'8972 Roesbrugge-Haringe (Poperinge)',labelnl:'8972 Roesbrugge-Haringe (Poperinge)',labelfr:'8972 Roesbrugge-Haringe',labelen:'8972 Roesbrugge-Haringe',labelde:'8972 Roesbrugge-Haringe',parentid:'reg.280',show:'true',sort:'1236'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1252',label:'8978 Watou (Poperinge)',labelnl:'8978 Watou (Poperinge)',labelfr:'8978 Watou',labelen:'8978 Watou',labelde:'8978 Watou',parentid:'reg.280',show:'true',sort:'1237'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1253',label:'8980 Zonnebeke',labelnl:'8980 Zonnebeke',labelfr:'8980 Zonnebeke',labelen:'8980 Zonnebeke',labelde:'8980 Zonnebeke',parentid:'reg.281',show:'true',sort:'1238'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1254',label:'8980 Beselare (Zonnebeke)',labelnl:'8980 Beselare (Zonnebeke)',labelfr:'8980 Beselare',labelen:'8980 Beselare',labelde:'8980 Beselare',parentid:'reg.281',show:'true',sort:'1239'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1255',label:'8980 Geluveld (Zonnebeke)',labelnl:'8980 Geluveld (Zonnebeke)',labelfr:'8980 Geluveld',labelen:'8980 Geluveld',labelde:'8980 Geluveld',parentid:'reg.281',show:'true',sort:'1240'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1256',label:'8980 Passendale (Zonnebeke)',labelnl:'8980 Passendale (Zonnebeke)',labelfr:'8980 Passendale',labelen:'8980 Passendale',labelde:'8980 Passendale',parentid:'reg.281',show:'true',sort:'1241'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1257',label:'8980 Zandvoorde (Zonnebeke)',labelnl:'8980 Zandvoorde (Zonnebeke)',labelfr:'8980 Zandvoorde',labelen:'8980 Zandvoorde',labelde:'8980 Zandvoorde',parentid:'reg.281',show:'true',sort:'1242'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1258',label:'9000 Gent',labelnl:'9000 Gent',labelfr:'9000 Gand',labelen:'9000 Ghent',labelde:'9000 Gent',parentid:'reg.282',show:'true',sort:'1243'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1259',label:'9030 Mariakerke (Gent)',labelnl:'9030 Mariakerke (Gent)',labelfr:'9030 Mariakerke',labelen:'9030 Mariakerke',labelde:'9030 Mariakerke',parentid:'reg.282',show:'true',sort:'1244'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1260',label:'9031 Drongen (Gent)',labelnl:'9031 Drongen (Gent)',labelfr:'9031 Tronchiennes',labelen:'9031 Drongen',labelde:'9031 Drongen',parentid:'reg.282',show:'true',sort:'1245'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1261',label:'9032 Wondelgem (Gent)',labelnl:'9032 Wondelgem (Gent)',labelfr:'9032 Wondelgem',labelen:'9032 Wondelgem',labelde:'9032 Wondelgem',parentid:'reg.282',show:'true',sort:'1246'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1262',label:'9040 Sint-Amandsberg (Gent)',labelnl:'9040 Sint-Amandsberg (Gent)',labelfr:'9040 Sint-Amandsberg',labelen:'9040 Sint-Amandsberg',labelde:'9040 Sint-Amandsberg',parentid:'reg.282',show:'true',sort:'1247'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1263',label:'9041 Oostakker (Gent)',labelnl:'9041 Oostakker (Gent)',labelfr:'9041 Oostakker',labelen:'9041 Oostakker',labelde:'9041 Oostakker',parentid:'reg.282',show:'true',sort:'1248'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1264',label:'9042 Desteldonk (Gent)',labelnl:'9042 Desteldonk (Gent)',labelfr:'9042 Desteldonk',labelen:'9042 Desteldonk',labelde:'9042 Desteldonk',parentid:'reg.282',show:'true',sort:'1249'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1265',label:'9042 Mendonk (Gent)',labelnl:'9042 Mendonk (Gent)',labelfr:'9042 Mendonk',labelen:'9042 Mendonk',labelde:'9042 Mendonk',parentid:'reg.282',show:'true',sort:'1250'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1266',label:'9042 Sint-Kruis-Winkel (Gent)',labelnl:'9042 Sint-Kruis-Winkel (Gent)',labelfr:'9042 Winkel-Sainte-Croix',labelen:'9042 Sint-Kruis-Winkel',labelde:'9042 Sint-Kruis-Winkel',parentid:'reg.282',show:'true',sort:'1251'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1267',label:'9050 Gentbrugge (Gent)',labelnl:'9050 Gentbrugge (Gent)',labelfr:'9050 Gentbrugge',labelen:'9050 Gentbrugge',labelde:'9050 Gentbrugge',parentid:'reg.282',show:'true',sort:'1252'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1268',label:'9050 Ledeberg (Gent)',labelnl:'9050 Ledeberg (Gent)',labelfr:'9050 Ledeberg',labelen:'9050 Ledeberg',labelde:'9050 Ledeberg',parentid:'reg.282',show:'true',sort:'1253'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1269',label:'9051 Afsnee (Gent)',labelnl:'9051 Afsnee (Gent)',labelfr:'9051 Afsnee',labelen:'9051 Afsnee',labelde:'9051 Afsnee',parentid:'reg.282',show:'true',sort:'1254'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1270',label:'9051 Sint-Denijs-Westrem (Gent)',labelnl:'9051 Sint-Denijs-Westrem (Gent)',labelfr:'9051 Saint-Denis-Westrem',labelen:'9051 Sint-Denijs-Westrem',labelde:'9051 Sint-Denijs-Westrem',parentid:'reg.282',show:'true',sort:'1255'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1271',label:'9052 Zwijnaarde (Gent)',labelnl:'9052 Zwijnaarde (Gent)',labelfr:'9052 Zwijnaarde',labelen:'9052 Zwijnaarde',labelde:'9052 Zwijnaarde',parentid:'reg.282',show:'true',sort:'1256'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1272',label:'9060 Zelzate',labelnl:'9060 Zelzate',labelfr:'9060 Zelzate',labelen:'9060 Zelzate',labelde:'9060 Zelzate',parentid:'reg.283',show:'true',sort:'1257'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1273',label:'9070 Destelbergen',labelnl:'9070 Destelbergen',labelfr:'9070 Destelbergen',labelen:'9070 Destelbergen',labelde:'9070 Destelbergen',parentid:'reg.284',show:'true',sort:'1258'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1274',label:'9070 Heusden (Destelbergen)',labelnl:'9070 Heusden (Destelbergen)',labelfr:'9070 Heusden',labelen:'9070 Heusden',labelde:'9070 Heusden',parentid:'reg.284',show:'true',sort:'1259'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1275',label:'9080 Lochristi',labelnl:'9080 Lochristi',labelfr:'9080 Lochristi',labelen:'9080 Lochristi',labelde:'9080 Lochristi',parentid:'reg.285',show:'true',sort:'1260'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1276',label:'9080 Beervelde (Lochristi)',labelnl:'9080 Beervelde (Lochristi)',labelfr:'9080 Beervelde',labelen:'9080 Beervelde',labelde:'9080 Beervelde',parentid:'reg.285',show:'true',sort:'1261'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1277',label:'9080 Zaffelare (Lochristi)',labelnl:'9080 Zaffelare (Lochristi)',labelfr:'9080 Zaffelare',labelen:'9080 Zaffelare',labelde:'9080 Zaffelare',parentid:'reg.285',show:'true',sort:'1262'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1278',label:'9080 Zeveneken (Lochristi)',labelnl:'9080 Zeveneken (Lochristi)',labelfr:'9080 Zeveneken',labelen:'9080 Zeveneken',labelde:'9080 Zeveneken',parentid:'reg.285',show:'true',sort:'1263'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1279',label:'9090 Melle',labelnl:'9090 Melle',labelfr:'9090 Melle',labelen:'9090 Melle',labelde:'9090 Melle',parentid:'reg.286',show:'true',sort:'1264'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1280',label:'9090 Gontrode (Melle)',labelnl:'9090 Gontrode (Melle)',labelfr:'9090 Gontrode',labelen:'9090 Gontrode',labelde:'9090 Gontrode',parentid:'reg.286',show:'true',sort:'1265'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1281',label:'9100 Sint-Niklaas',labelnl:'9100 Sint-Niklaas',labelfr:'9100 Saint-Nicolas',labelen:'9100 Sint-Niklaas',labelde:'9100 Sint-Niklaas',parentid:'reg.287',show:'true',sort:'1266'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1282',label:'9100 Nieuwkerken-Waas (Sint-Niklaas)',labelnl:'9100 Nieuwkerken-Waas (Sint-Niklaas)',labelfr:'9100 Nieuwkerken-Waas',labelen:'9100 Niewkerken-Waas',labelde:'9100 Nieuwkerken-Waas',parentid:'reg.287',show:'true',sort:'1267'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1283',label:'9111 Belsele (Sint-Niklaas)',labelnl:'9111 Belsele (Sint-Niklaas)',labelfr:'9111 Belsele',labelen:'9111 Belsele',labelde:'9111 Belsele',parentid:'reg.287',show:'true',sort:'1268'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1284',label:'9112 Sinaai-Waas (Sint-Niklaas)',labelnl:'9112 Sinaai-Waas (Sint-Niklaas)',labelfr:'9112 Sinaai-Waas',labelen:'9112 Sinaai-Waas',labelde:'9112 Sinaai-Waas',parentid:'reg.287',show:'true',sort:'1269'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1285',label:'9120 Beveren-Waas',labelnl:'9120 Beveren-Waas',labelfr:'9120 Beveren',labelen:'9120 Beveren',labelde:'9120 Beveren',parentid:'reg.288',show:'true',sort:'1270'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1286',label:'9120 Haasdonk (Beveren)',labelnl:'9120 Haasdonk (Beveren)',labelfr:'9120 Haasdonk',labelen:'9120 Haasdonk',labelde:'9120 Haasdonk',parentid:'reg.288',show:'true',sort:'1271'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1287',label:'9120 Kallo (Beveren-Waas)',labelnl:'9120 Kallo (Beveren-Waas)',labelfr:'9120 Kallo',labelen:'9120 Kallo',labelde:'9120 Kallo',parentid:'reg.288',show:'true',sort:'1272'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1288',label:'9120 Melsele (Beveren)',labelnl:'9120 Melsele (Beveren)',labelfr:'9120 Melsele',labelen:'9120 Melsele',labelde:'9120 Melsele',parentid:'reg.288',show:'true',sort:'1273'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1289',label:'9120 Vrasene (Beveren)',labelnl:'9120 Vrasene (Beveren)',labelfr:'9120 Vrasene',labelen:'9120 Vrasene',labelde:'9120 Vrasene',parentid:'reg.288',show:'true',sort:'1274'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1290',label:'9130 Doel (Beveren)',labelnl:'9130 Doel (Beveren)',labelfr:'9130 Doel',labelen:'9130 Doel',labelde:'9130 Doel',parentid:'reg.288',show:'true',sort:'1275'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1291',label:'9130 Kallo (Kieldrecht - Beveren-Waas)',labelnl:'9130 Kallo (Kieldrecht - Beveren-Waas)',labelfr:'9130 Kallo',labelen:'9130 Kallo',labelde:'9130 Kallo',parentid:'reg.288',show:'true',sort:'1276'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1292',label:'9130 Kieldrecht (Beveren)',labelnl:'9130 Kieldrecht (Beveren)',labelfr:'9130 Kieldrecht',labelen:'9130 Kieldrecht',labelde:'9130 Kieldrecht',parentid:'reg.288',show:'true',sort:'1277'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1293',label:'9130 Verrebroek (Beveren)',labelnl:'9130 Verrebroek (Beveren)',labelfr:'9130 Verrebroek',labelen:'9130 Verrebroek',labelde:'9130 Verrebroek',parentid:'reg.288',show:'true',sort:'1278'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1294',label:'9140 Temse',labelnl:'9140 Temse',labelfr:'9140 Tamise',labelen:'9140 Temse',labelde:'9140 Temse',parentid:'reg.289',show:'true',sort:'1279'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1295',label:'9140 Elversele (Temse)',labelnl:'9140 Elversele (Temse)',labelfr:'9140 Elversele',labelen:'9140 Elversele',labelde:'9140 Elversele',parentid:'reg.289',show:'true',sort:'1280'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1296',label:'9140 Steendorp (Temse)',labelnl:'9140 Steendorp (Temse)',labelfr:'9140 Steendorp',labelen:'9140 Steendorp',labelde:'9140 Steendorp',parentid:'reg.289',show:'true',sort:'1281'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1297',label:'9140 Tielrode (Temse)',labelnl:'9140 Tielrode (Temse)',labelfr:'9140 Tielrode',labelen:'9140 Tielrode',labelde:'9140 Tielrode',parentid:'reg.289',show:'true',sort:'1282'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1298',label:'9150 Kruibeke',labelnl:'9150 Kruibeke',labelfr:'9150 Kruibeke',labelen:'9150 Kruibeke',labelde:'9150 Kruibeke',parentid:'reg.290',show:'true',sort:'1283'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1299',label:'9150 Bazel (Kruibeke)',labelnl:'9150 Bazel (Kruibeke)',labelfr:'9150 Bazel',labelen:'9150 Bazel',labelde:'9150 Bazel',parentid:'reg.290',show:'true',sort:'1284'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1300',label:'9150 Rupelmonde (Kruibeke)',labelnl:'9150 Rupelmonde (Kruibeke)',labelfr:'9150 Rupelmonde',labelen:'9150 Rupelmonde',labelde:'9150 Rupelmonde',parentid:'reg.290',show:'true',sort:'1285'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1301',label:'9160 Lokeren',labelnl:'9160 Lokeren',labelfr:'9160 Lokeren',labelen:'9160 Lokeren',labelde:'9160 Lokeren',parentid:'reg.291',show:'true',sort:'1286'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1302',label:'9160 Daknam (Lokeren)',labelnl:'9160 Daknam (Lokeren)',labelfr:'9160 Daknam',labelen:'9160 Daknam',labelde:'9160 Daknam',parentid:'reg.291',show:'true',sort:'1287'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1303',label:'9160 Eksaarde (Lokeren)',labelnl:'9160 Eksaarde (Lokeren)',labelfr:'9160 Eksaarde',labelen:'9160 Eksaarde',labelde:'9160 Eksaarde',parentid:'reg.291',show:'true',sort:'1288'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1304',label:'9170 Sint-Gillis-Waas',labelnl:'9170 Sint-Gillis-Waas',labelfr:'9170 Saint-Gilles-Waes',labelen:'9170 Sint-Gillis-Waas',labelde:'9170 Sint-Gillis-Waas',parentid:'reg.292',show:'true',sort:'1289'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1305',label:'9170 De Klinge (Sint-Gillis-Waas)',labelnl:'9170 De Klinge (Sint-Gillis-Waas)',labelfr:'9170 De Klinge',labelen:'9170 De Klinge',labelde:'9170 De Klinge',parentid:'reg.292',show:'true',sort:'1290'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1306',label:'9170 Meerdonk (Sint-Gillis-Waas)',labelnl:'9170 Meerdonk (Sint-Gillis-Waas)',labelfr:'9170 Meerdonk',labelen:'9170 Meerdonk',labelde:'9170 Meerdonk',parentid:'reg.292',show:'true',sort:'1291'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1307',label:'9170 Sint-Pauwels (Sint-Gillis-Waas)',labelnl:'9170 Sint-Pauwels (Sint-Gillis-Waas)',labelfr:'9170 Saint-Paul',labelen:'9170 Sint-Pauwels',labelde:'9170 Sint-Pauwels',parentid:'reg.292',show:'true',sort:'1292'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1308',label:'9180 Moerbeke-Waas',labelnl:'9180 Moerbeke-Waas',labelfr:'9180 Moerbeke-Waas',labelen:'9180 Moerbeke-Waas',labelde:'9180 Moerbeke-Waas',parentid:'reg.293',show:'true',sort:'1293'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1309',label:'9185 Wachtebeke',labelnl:'9185 Wachtebeke',labelfr:'9185 Wachtebeke',labelen:'9185 Wachtebeke',labelde:'9185 Wachtebeke',parentid:'reg.294',show:'true',sort:'1294'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1310',label:'9190 Stekene',labelnl:'9190 Stekene',labelfr:'9190 Stekene',labelen:'9190 Stekene',labelde:'9190 Stekene',parentid:'reg.295',show:'true',sort:'1295'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1311',label:'9190 Kemzeke (Stekene)',labelnl:'9190 Kemzeke (Stekene)',labelfr:'9190 Kemzeke',labelen:'9190 Kemzeke',labelde:'9190 Kemzeke',parentid:'reg.295',show:'true',sort:'1296'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1312',label:'9200 Dendermonde',labelnl:'9200 Dendermonde',labelfr:'9200 Termonde',labelen:'9200 Dendermonde',labelde:'9200 Dendermonde',parentid:'reg.296',show:'true',sort:'1297'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1313',label:'9200 Appels (Dendermonde)',labelnl:'9200 Appels (Dendermonde)',labelfr:'9200 Appels',labelen:'9200 Appels',labelde:'9200 Appels',parentid:'reg.296',show:'true',sort:'1298'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1314',label:'9200 Baasrode (Dendermonde)',labelnl:'9200 Baasrode (Dendermonde)',labelfr:'9200 Baesrode',labelen:'9200 Baasrode',labelde:'9200 Baasrode',parentid:'reg.296',show:'true',sort:'1299'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1315',label:'9200 Grembergen (Dendermonde)',labelnl:'9200 Grembergen (Dendermonde)',labelfr:'9200 Grembergen',labelen:'9200 Grembergen',labelde:'9200 Grembergen',parentid:'reg.296',show:'true',sort:'1300'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1316',label:'9200 Mespelare (Dendermonde)',labelnl:'9200 Mespelare (Dendermonde)',labelfr:'9200 Mespelare',labelen:'9200 Mespelare',labelde:'9200 Mespelare',parentid:'reg.296',show:'true',sort:'1301'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1317',label:'9200 Oudegem (Dendermonde)',labelnl:'9200 Oudegem (Dendermonde)',labelfr:'9200 Audeghem',labelen:'9200 Oudegem',labelde:'9200 Oudegem',parentid:'reg.296',show:'true',sort:'1302'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1318',label:'9200 Schoonaarde (Dendermonde)',labelnl:'9200 Schoonaarde (Dendermonde)',labelfr:'9200 Schoonaarde',labelen:'9200 Schoonaarde',labelde:'9200 Schoonaarde',parentid:'reg.296',show:'true',sort:'1303'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1319',label:'9200 Sint-Gillis-Bij-Dendermonde (Dendermonde)',labelnl:'9200 Sint-Gillis-Bij-Dendermonde (Dendermonde)',labelfr:'9200 Sint-Gillis-bij-Dendermonde',labelen:'9200 Sint-Gillis-bij-Dendermonde',labelde:'9200 Sint-Gillis-bij-Dendermonde',parentid:'reg.296',show:'true',sort:'1304'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1320',label:'9220 Hamme',labelnl:'9220 Hamme',labelfr:'9220 Hamme',labelen:'9220 Hamme',labelde:'9220 Hamme',parentid:'reg.297',show:'true',sort:'1305'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1321',label:'9220 Moerzeke (Hamme)',labelnl:'9220 Moerzeke (Hamme)',labelfr:'9220 Moerzeke',labelen:'9220 Moerzeke',labelde:'9220 Moerzeke',parentid:'reg.297',show:'true',sort:'1306'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1322',label:'9230 Wetteren',labelnl:'9230 Wetteren',labelfr:'9230 Wetteren',labelen:'9230 Wetteren',labelde:'9230 Wetteren',parentid:'reg.298',show:'true',sort:'1307'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1323',label:'9230 Massemen (Wetteren)',labelnl:'9230 Massemen (Wetteren)',labelfr:'9230 Massemen',labelen:'9230 Massemen',labelde:'9230 Massemen',parentid:'reg.298',show:'true',sort:'1308'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1324',label:'9230 Westrem (Wetteren)',labelnl:'9230 Westrem (Wetteren)',labelfr:'9230 Westrem',labelen:'9230 Westrem',labelde:'9230 Westrem',parentid:'reg.298',show:'true',sort:'1309'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1325',label:'9240 Zele',labelnl:'9240 Zele',labelfr:'9240 Zele',labelen:'9240 Zele',labelde:'9240 Zele',parentid:'reg.299',show:'true',sort:'1310'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1326',label:'9250 Waasmunster',labelnl:'9250 Waasmunster',labelfr:'9250 Waasmunster',labelen:'9250 Waasmunster',labelde:'9250 Waasmunster',parentid:'reg.300',show:'true',sort:'1311'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1327',label:'9255 Buggenhout',labelnl:'9255 Buggenhout',labelfr:'9255 Buggenhout',labelen:'9255 Buggenhout',labelde:'9255 Buggenhout',parentid:'reg.301',show:'true',sort:'1312'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1328',label:'9255 Opdorp (Buggenhout)',labelnl:'9255 Opdorp (Buggenhout)',labelfr:'9255 Opdorp',labelen:'9255 Opdorp',labelde:'9255 Opdorp',parentid:'reg.301',show:'true',sort:'1313'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1329',label:'9260 Wichelen',labelnl:'9260 Wichelen',labelfr:'9260 Wichelen',labelen:'9260 Wichelen',labelde:'9260 Wichelen',parentid:'reg.302',show:'true',sort:'1314'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1330',label:'9260 Schellebelle (Wichelen)',labelnl:'9260 Schellebelle (Wichelen)',labelfr:'9260 Schellebelle',labelen:'9260 Schellebelle',labelde:'9260 Schellebelle',parentid:'reg.302',show:'true',sort:'1315'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1331',label:'9260 Serskamp (Wichelen)',labelnl:'9260 Serskamp (Wichelen)',labelfr:'9260 Serskamp',labelen:'9260 Serskamp',labelde:'9260 Serskamp',parentid:'reg.302',show:'true',sort:'1316'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1332',label:'9270 Laarne',labelnl:'9270 Laarne',labelfr:'9270 Laarne',labelen:'9270 Laarne',labelde:'9270 Laarne',parentid:'reg.303',show:'true',sort:'1317'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1333',label:'9270 Kalken (Laarne)',labelnl:'9270 Kalken (Laarne)',labelfr:'9270 Kalken',labelen:'9270 Kalken',labelde:'9270 Kalken',parentid:'reg.303',show:'true',sort:'1318'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1334',label:'9280 Lebbeke',labelnl:'9280 Lebbeke',labelfr:'9280 Lebbeke',labelen:'9280 Lebbeke',labelde:'9280 Lebbeke',parentid:'reg.304',show:'true',sort:'1319'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1335',label:'9280 Denderbelle (Lebbeke)',labelnl:'9280 Denderbelle (Lebbeke)',labelfr:'9280 Denderbelle',labelen:'9280 Denderbelle',labelde:'9280 Denderbelle',parentid:'reg.304',show:'true',sort:'1320'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1336',label:'9280 Wieze (Lebbeke)',labelnl:'9280 Wieze (Lebbeke)',labelfr:'9280 Wieze',labelen:'9280 Wieze',labelde:'9280 Wieze',parentid:'reg.304',show:'true',sort:'1321'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1337',label:'9290 Berlare',labelnl:'9290 Berlare',labelfr:'9290 Berlare',labelen:'9290 Berlare',labelde:'9290 Berlare',parentid:'reg.305',show:'true',sort:'1322'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1338',label:'9290 Overmere (Berlare)',labelnl:'9290 Overmere (Berlare)',labelfr:'9290 Overmere',labelen:'9290 Overmere',labelde:'9290 Overmere',parentid:'reg.305',show:'true',sort:'1323'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1339',label:'9290 Uitbergen (Berlare)',labelnl:'9290 Uitbergen (Berlare)',labelfr:'9290 Uitbergen',labelen:'9290 Uitbergen',labelde:'9290 Uitbergen',parentid:'reg.305',show:'true',sort:'1324'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1340',label:'9300 Aalst',labelnl:'9300 Aalst',labelfr:'9300 Alost',labelen:'9300 Aalst',labelde:'9300 Aalst',parentid:'reg.306',show:'true',sort:'1325'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1341',label:'9308 Gijzegem (Aalst)',labelnl:'9308 Gijzegem (Aalst)',labelfr:'9308 Gijzegem',labelen:'9308 Gijzegem',labelde:'9308 Gijzegem',parentid:'reg.306',show:'true',sort:'1326'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1342',label:'9308 Hofstade (Aalst)',labelnl:'9308 Hofstade (Aalst)',labelfr:'9308 Hofstade',labelen:'9308 Hofstade',labelde:'9308 Hofstade',parentid:'reg.306',show:'true',sort:'1327'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1343',label:'9310 Baardegem (Aalst)',labelnl:'9310 Baardegem (Aalst)',labelfr:'9310 Baardegem',labelen:'9310 Baardegem',labelde:'9310 Baardegem',parentid:'reg.306',show:'true',sort:'1328'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1344',label:'9310 Herdersem (Aalst)',labelnl:'9310 Herdersem (Aalst)',labelfr:'9310 Herdersem',labelen:'9310 Herdersem',labelde:'9310 Herdersem',parentid:'reg.306',show:'true',sort:'1329'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1345',label:'9310 Meldert (Aalst)',labelnl:'9310 Meldert (Aalst)',labelfr:'9310 Meldert',labelen:'9310 Meldert',labelde:'9310 Meldert',parentid:'reg.306',show:'true',sort:'1330'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1346',label:'9310 Moorsel (Aalst)',labelnl:'9310 Moorsel (Aalst)',labelfr:'9310 Moorsel',labelen:'9310 Moorsel',labelde:'9310 Moorsel',parentid:'reg.306',show:'true',sort:'1331'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1347',label:'9320 Erembodegem (Aalst)',labelnl:'9320 Erembodegem (Aalst)',labelfr:'9320 Erembodegem',labelen:'9320 Erembodegem',labelde:'9320 Erembodegem',parentid:'reg.306',show:'true',sort:'1332'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1348',label:'9320 Nieuwerkerken (Aalst)',labelnl:'9320 Nieuwerkerken (Aalst)',labelfr:'9320 Nieuwerkerken',labelen:'9320 Nieuwerkerken',labelde:'9320 Nieuwerkerken',parentid:'reg.306',show:'true',sort:'1333'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1349',label:'9340 Lede',labelnl:'9340 Lede',labelfr:'9340 Lede',labelen:'9340 Lede',labelde:'9340 Lede',parentid:'reg.307',show:'true',sort:'1334'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1350',label:'9340 Impe (Lede)',labelnl:'9340 Impe (Lede)',labelfr:'9340 Impe',labelen:'9340 Impe',labelde:'9340 Impe',parentid:'reg.307',show:'true',sort:'1335'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1351',label:'9340 Oordegem (Lede)',labelnl:'9340 Oordegem (Lede)',labelfr:'9340 Oordegem',labelen:'9340 Oordegem',labelde:'9340 Oordegem',parentid:'reg.307',show:'true',sort:'1336'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1352',label:'9340 Smetlede (Lede)',labelnl:'9340 Smetlede (Lede)',labelfr:'9340 Smetlede',labelen:'9340 Smetlede',labelde:'9340 Smetlede',parentid:'reg.307',show:'true',sort:'1337'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1353',label:'9340 Wanzele (Lede)',labelnl:'9340 Wanzele (Lede)',labelfr:'9340 Wanzele',labelen:'9340 Wanzele',labelde:'9340 Wanzele',parentid:'reg.307',show:'true',sort:'1338'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1354',label:'9400 Ninove',labelnl:'9400 Ninove',labelfr:'9400 Ninove',labelen:'9400 Ninove',labelde:'9400 Ninove',parentid:'reg.309',show:'true',sort:'1339'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1355',label:'9400 Appelterre-Eichem (Ninove)',labelnl:'9400 Appelterre-Eichem (Ninove)',labelfr:'9400 Appelterre-Eichem',labelen:'9400 Appelterre-Eichem',labelde:'9400 Appelterre-Eichem',parentid:'reg.309',show:'true',sort:'1340'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1356',label:'9400 Denderwindeke (Ninove)',labelnl:'9400 Denderwindeke (Ninove)',labelfr:'9400 Denderwindeke',labelen:'9400 Denderwindeke',labelde:'9400 Denderwindeke',parentid:'reg.309',show:'true',sort:'1341'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1357',label:'9400 Lieferinge (Ninove)',labelnl:'9400 Lieferinge (Ninove)',labelfr:'9400 Lieferinge',labelen:'9400 Lieferinge',labelde:'9400 Lieferinge',parentid:'reg.309',show:'true',sort:'1342'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1358',label:'9400 Nederhasselt (Ninove)',labelnl:'9400 Nederhasselt (Ninove)',labelfr:'9400 Nederhasselt',labelen:'9400 Nederhasselt',labelde:'9400 Nederhasselt',parentid:'reg.309',show:'true',sort:'1343'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1359',label:'9400 Okegem (Ninove)',labelnl:'9400 Okegem (Ninove)',labelfr:'9400 Okegem',labelen:'9400 Okegem',labelde:'9400 Okegem',parentid:'reg.309',show:'true',sort:'1344'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1360',label:'9400 Voorde (Ninove)',labelnl:'9400 Voorde (Ninove)',labelfr:'9400 Voorde',labelen:'9400 Voorde',labelde:'9400 Voorde',parentid:'reg.309',show:'true',sort:'1345'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1361',label:'9401 Pollare (Ninove)',labelnl:'9401 Pollare (Ninove)',labelfr:'9401 Pollare',labelen:'9401 Pollare',labelde:'9401 Pollare',parentid:'reg.309',show:'true',sort:'1346'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1362',label:'9402 Meerbeke (Ninove)',labelnl:'9402 Meerbeke (Ninove)',labelfr:'9402 Meerbeke',labelen:'9402 Meerbeke',labelde:'9402 Meerbeke',parentid:'reg.309',show:'true',sort:'1347'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1363',label:'9403 Neigem (Ninove)',labelnl:'9403 Neigem (Ninove)',labelfr:'9403 Neigem',labelen:'9403 Neigem',labelde:'9403 Neigem',parentid:'reg.309',show:'true',sort:'1348'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1364',label:'9404 Aspelare (Ninove)',labelnl:'9404 Aspelare (Ninove)',labelfr:'9404 Aspelare',labelen:'9404 Aspelare',labelde:'9404 Aspelare',parentid:'reg.309',show:'true',sort:'1349'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1365',label:'9406 Outer (Ninove)',labelnl:'9406 Outer (Ninove)',labelfr:'9406 Outer',labelen:'9406 Outer',labelde:'9406 Outer',parentid:'reg.309',show:'true',sort:'1350'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1366',label:'9420 Erpe-Mere',labelnl:'9420 Erpe-Mere',labelfr:'9420 Erpe-Mere',labelen:'9420 Erpe-Mere',labelde:'9420 Erpe-Mere',parentid:'reg.310',show:'true',sort:'1351'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1367',label:'9420 Aaigem (Erpe-Mere)',labelnl:'9420 Aaigem (Erpe-Mere)',labelfr:'9420 Aaigem',labelen:'9420 Aaigem',labelde:'9420 Aaigem',parentid:'reg.310',show:'true',sort:'1352'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1368',label:'9420 Bambrugge (Erpe-Mere)',labelnl:'9420 Bambrugge (Erpe-Mere)',labelfr:'9420 Bambrugge',labelen:'9420 Bambrugge',labelde:'9420 Bambrugge',parentid:'reg.310',show:'true',sort:'1353'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1369',label:'9420 Burst (Erpe-Mere)',labelnl:'9420 Burst (Erpe-Mere)',labelfr:'9420 Burst',labelen:'9420 Burst',labelde:'9420 Burst',parentid:'reg.310',show:'true',sort:'1354'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1370',label:'9420 Erondegem (Erpe-Mere)',labelnl:'9420 Erondegem (Erpe-Mere)',labelfr:'9420 Erondegem',labelen:'9420 Erondegem',labelde:'9420 Erondegem',parentid:'reg.310',show:'true',sort:'1355'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1371',label:'9420 Erpe (Erpe-Mere)',labelnl:'9420 Erpe (Erpe-Mere)',labelfr:'9420 Erpe',labelen:'9420 Erpe',labelde:'9420 Erpe',parentid:'reg.310',show:'true',sort:'1356'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1372',label:'9420 Mere (Erpe-Mere)',labelnl:'9420 Mere (Erpe-Mere)',labelfr:'9420 Mere',labelen:'9420 Mere',labelde:'9420 Mere',parentid:'reg.310',show:'true',sort:'1357'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1373',label:'9420 Ottergem (Erpe-Mere)',labelnl:'9420 Ottergem (Erpe-Mere)',labelfr:'9420 Ottergem',labelen:'9420 Ottergem',labelde:'9420 Ottergem',parentid:'reg.310',show:'true',sort:'1358'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1374',label:'9420 Vlekkem (Erpe-Mere)',labelnl:'9420 Vlekkem (Erpe-Mere)',labelfr:'9420 Vlekkem',labelen:'9420 Vlekkem',labelde:'9420 Vlekkem',parentid:'reg.310',show:'true',sort:'1359'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1375',label:'9450 Haaltert',labelnl:'9450 Haaltert',labelfr:'9450 Haaltert',labelen:'9450 Haaltert',labelde:'9450 Haaltert',parentid:'reg.311',show:'true',sort:'1360'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1376',label:'9450 Denderhoutem (Haaltert)',labelnl:'9450 Denderhoutem (Haaltert)',labelfr:'9450 Denderhautem',labelen:'9450 Denderhoutem',labelde:'9450 Denderhoutem',parentid:'reg.311',show:'true',sort:'1361'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1377',label:'9450 Heldergem (Haaltert)',labelnl:'9450 Heldergem (Haaltert)',labelfr:'9450 Heldergem',labelen:'9450 Heldergem',labelde:'9450 Heldergem',parentid:'reg.311',show:'true',sort:'1362'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1378',label:'9451 Kerksken (Haaltert)',labelnl:'9451 Kerksken (Haaltert)',labelfr:'9451 Kerksken',labelen:'9451 Kerksken',labelde:'9451 Kerksken',parentid:'reg.311',show:'true',sort:'1363'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1379',label:'9470 Denderleeuw',labelnl:'9470 Denderleeuw',labelfr:'9470 Denderleeuw',labelen:'9470 Denderleeuw',labelde:'9470 Denderleeuw',parentid:'reg.312',show:'true',sort:'1364'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1380',label:'9472 Iddergem (Denderleeuw)',labelnl:'9472 Iddergem (Denderleeuw)',labelfr:'9472 Iddergem',labelen:'9472 Iddergem',labelde:'9472 Iddergem',parentid:'reg.312',show:'true',sort:'1365'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1381',label:'9473 Welle (Denderleeuw)',labelnl:'9473 Welle (Denderleeuw)',labelfr:'9473 Welle',labelen:'9473 Welle',labelde:'9473 Welle',parentid:'reg.312',show:'true',sort:'1366'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1382',label:'9500 Geraardsbergen',labelnl:'9500 Geraardsbergen',labelfr:'9500 Grammont',labelen:'9500 Geraardsbergen',labelde:'9500 Geraardsbergen',parentid:'reg.313',show:'true',sort:'1367'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1383',label:'9500 Goeferdinge (Geraardsbergen)',labelnl:'9500 Goeferdinge (Geraardsbergen)',labelfr:'9500 Goeferdinge',labelen:'9500 Goeferdinge',labelde:'9500 Goeferdinge',parentid:'reg.313',show:'true',sort:'1368'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1384',label:'9500 Moerbeke (Geraardsbergen)',labelnl:'9500 Moerbeke (Geraardsbergen)',labelfr:'9500 Moerbeke',labelen:'9500 Moerbeke',labelde:'9500 Moerbeke',parentid:'reg.313',show:'true',sort:'1369'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1385',label:'9500 Nederboelare (Geraardsbergen)',labelnl:'9500 Nederboelare (Geraardsbergen)',labelfr:'9500 Nederboelare',labelen:'9500 Nederboelare',labelde:'9500 Nederboelare',parentid:'reg.313',show:'true',sort:'1370'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1386',label:'9500 Onkerzele (Geraardsbergen)',labelnl:'9500 Onkerzele (Geraardsbergen)',labelfr:'9500 Onkerzele',labelen:'9500 Onkerzele',labelde:'9500 Onkerzele',parentid:'reg.313',show:'true',sort:'1371'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1387',label:'9500 Ophasselt (Geraardsbergen)',labelnl:'9500 Ophasselt (Geraardsbergen)',labelfr:'9500 Ophasselt',labelen:'9500 Ophasselt',labelde:'9500 Ophasselt',parentid:'reg.313',show:'true',sort:'1372'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1388',label:'9500 Overboelare (Geraardsbergen)',labelnl:'9500 Overboelare (Geraardsbergen)',labelfr:'9500 Overboelare',labelen:'9500 Overboelare',labelde:'9500 Overboelare',parentid:'reg.313',show:'true',sort:'1373'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1389',label:'9500 Viane (Geraardsbergen)',labelnl:'9500 Viane (Geraardsbergen)',labelfr:'9500 Viane',labelen:'9500 Viane',labelde:'9500 Viane',parentid:'reg.313',show:'true',sort:'1374'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1390',label:'9500 Zarlardinge (Geraardsbergen)',labelnl:'9500 Zarlardinge (Geraardsbergen)',labelfr:'9500 Zarlardinge',labelen:'9500 Zarlardinge',labelde:'9500 Zarlardinge',parentid:'reg.313',show:'true',sort:'1375'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1391',label:'9506 Grimminge (Geraardsbergen)',labelnl:'9506 Grimminge (Geraardsbergen)',labelfr:'9506 Grimminge',labelen:'9506 Grimminge',labelde:'9506 Grimminge',parentid:'reg.313',show:'true',sort:'1376'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1392',label:'9506 Idegem (Geraardsbergen)',labelnl:'9506 Idegem (Geraardsbergen)',labelfr:'9506 Idegem',labelen:'9506 Idegem',labelde:'9506 Idegem',parentid:'reg.313',show:'true',sort:'1377'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1393',label:'9506 Nieuwenhove (Geraardsbergen)',labelnl:'9506 Nieuwenhove (Geraardsbergen)',labelfr:'9506 Nieuwenhove',labelen:'9506 Nieuwenhove',labelde:'9506 Nieuwenhove',parentid:'reg.313',show:'true',sort:'1378'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1394',label:'9506 Schendelbeke (Geraardsbergen)',labelnl:'9506 Schendelbeke (Geraardsbergen)',labelfr:'9506 Schendelbeke',labelen:'9506 Schendelbeke',labelde:'9506 Schendelbeke',parentid:'reg.313',show:'true',sort:'1379'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1395',label:'9506 Smeerebbe-Vloerzegem (Geraardsbergen)',labelnl:'9506 Smeerebbe-Vloerzegem (Geraardsbergen)',labelfr:'9506 Smeerebbe-Vloerzegem',labelen:'9506 Smeerebbe-Vloerzegem',labelde:'9506 Smeerebbe-Vloerzegem',parentid:'reg.313',show:'true',sort:'1380'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1396',label:'9506 Waarbeke (Geraardsbergen)',labelnl:'9506 Waarbeke (Geraardsbergen)',labelfr:'9506 Waarbeke',labelen:'9506 Waarbeke',labelde:'9506 Waarbeke',parentid:'reg.313',show:'true',sort:'1381'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1397',label:'9506 Zandbergen (Geraardsbergen)',labelnl:'9506 Zandbergen (Geraardsbergen)',labelfr:'9506 Zandbergen',labelen:'9506 Zandbergen',labelde:'9506 Zandbergen',parentid:'reg.313',show:'true',sort:'1382'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1398',label:'9520 Sint-Lievens-Houtem',labelnl:'9520 Sint-Lievens-Houtem',labelfr:'9520 Hautem-Saint-Liévin',labelen:'9520 Sint-Lievens-Houtem',labelde:'9520 Sint-Lievens-Houtem',parentid:'reg.314',show:'true',sort:'1383'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1399',label:'9520 Bavegem (Sint-Lievens-Houtem)',labelnl:'9520 Bavegem (Sint-Lievens-Houtem)',labelfr:'9520 Bavegem',labelen:'9520 Bavegem',labelde:'9520 Bavegem',parentid:'reg.314',show:'true',sort:'1384'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1400',label:'9520 Vlierzele (Sint-Lievens-Houtem)',labelnl:'9520 Vlierzele (Sint-Lievens-Houtem)',labelfr:'9520 Vlierzele',labelen:'9520 Vlierzele',labelde:'9520 Vlierzele',parentid:'reg.314',show:'true',sort:'1385'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1401',label:'9520 Zonnegem (Sint-Lievens-Houtem)',labelnl:'9520 Zonnegem (Sint-Lievens-Houtem)',labelfr:'9520 Zonnegem',labelen:'9520 Zonnegem',labelde:'9520 Zonnegem',parentid:'reg.314',show:'true',sort:'1386'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1402',label:'9521 Letterhoutem (Sint-Lievens-Houtem)',labelnl:'9521 Letterhoutem (Sint-Lievens-Houtem)',labelfr:'9521 Letterhoutem',labelen:'9521 Letterhoutem',labelde:'9521 Letterhoutem',parentid:'reg.314',show:'true',sort:'1387'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1403',label:'9550 Herzele',labelnl:'9550 Herzele',labelfr:'9550 Herzele',labelen:'9550 Herzele',labelde:'9550 Herzele',parentid:'reg.315',show:'true',sort:'1388'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1404',label:'9550 Hillegem (Herzele)',labelnl:'9550 Hillegem (Herzele)',labelfr:'9550 Hillegem',labelen:'9550 Hillegem',labelde:'9550 Hillegem',parentid:'reg.315',show:'true',sort:'1389'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1405',label:'9550 Sint-Antelinks (Herzele)',labelnl:'9550 Sint-Antelinks (Herzele)',labelfr:'9550 Saint-Antelinx',labelen:'9550 Sint-Antelinks',labelde:'9550 Sint-Antelinks',parentid:'reg.315',show:'true',sort:'1390'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1406',label:'9550 Sint-Lievens-Esse (Herzele)',labelnl:'9550 Sint-Lievens-Esse (Herzele)',labelfr:'9550 Essche-Saint-Liévin',labelen:'9550 Sint-Lievens-Esse',labelde:'9550 Sint-Lievens-Esse',parentid:'reg.315',show:'true',sort:'1391'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1407',label:'9550 Steenhuize-Wijnhuize (Herzele)',labelnl:'9550 Steenhuize-Wijnhuize (Herzele)',labelfr:'9550 Steenhuize-Wijnhuize',labelen:'9550 Steenhuize-Wijnhuize',labelde:'9550 Steenhuize-Wijnhuize',parentid:'reg.315',show:'true',sort:'1392'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1408',label:'9550 Woubrechtegem (Herzele)',labelnl:'9550 Woubrechtegem (Herzele)',labelfr:'9550 Woubrechtegem',labelen:'9550 Woubrechtegem',labelde:'9550 Woubrechtegem',parentid:'reg.315',show:'true',sort:'1393'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1409',label:'9551 Ressegem (Herzele)',labelnl:'9551 Ressegem (Herzele)',labelfr:'9551 Ressegem',labelen:'9551 Ressegem',labelde:'9551 Ressegem',parentid:'reg.315',show:'true',sort:'1394'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1410',label:'9552 Borsbeke (Herzele)',labelnl:'9552 Borsbeke (Herzele)',labelfr:'9552 Borsbeke',labelen:'9552 Borsbeke',labelde:'9552 Borsbeke',parentid:'reg.315',show:'true',sort:'1395'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1411',label:'9570 Lierde',labelnl:'9570 Lierde',labelfr:'9570 Lierde',labelen:'9570 Lierde',labelde:'9570 Lierde',parentid:'reg.316',show:'true',sort:'1396'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1412',label:'9570 Deftinge (Lierde)',labelnl:'9570 Deftinge (Lierde)',labelfr:'9570 Deftinge',labelen:'9570 Deftinge',labelde:'9570 Deftinge',parentid:'reg.316',show:'true',sort:'1397'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1413',label:'9570 Sint-Maria-Lierde (Lierde)',labelnl:'9570 Sint-Maria-Lierde (Lierde)',labelfr:'9570 Lierde-Sainte-Marie',labelen:'9570 Sint-Maria-Lierde',labelde:'9570 Sint-Maria-Lierde',parentid:'reg.316',show:'true',sort:'1398'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1414',label:'9571 Hemelveerdegem (Lierde)',labelnl:'9571 Hemelveerdegem (Lierde)',labelfr:'9571 Hemelveerdegem',labelen:'9571 Hemelveerdegem',labelde:'9571 Hemelveerdegem',parentid:'reg.316',show:'true',sort:'1399'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1415',label:'9572 Sint-Martens-Lierde (Lierde)',labelnl:'9572 Sint-Martens-Lierde (Lierde)',labelfr:'9572 Lierde-Saint-Martin',labelen:'9572 Sint-Martens-Lierde',labelde:'9572 Sint-Martens-Lierde',parentid:'reg.316',show:'true',sort:'1400'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1417',label:'9600 Ronse',labelnl:'9600 Ronse',labelfr:'9600 Renaix',labelen:'9600 Ronse',labelde:'9600 Ronse',parentid:'reg.318',show:'true',sort:'1402'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1418',label:'9620 Zottegem',labelnl:'9620 Zottegem',labelfr:'9620 Zottegem',labelen:'9620 Zottegem',labelde:'9620 Zottegem',parentid:'reg.319',show:'true',sort:'1403'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1419',label:'9620 Elene (Zottegem)',labelnl:'9620 Elene (Zottegem)',labelfr:'9620 Elene',labelen:'9620 Elene',labelde:'9620 Elene',parentid:'reg.319',show:'true',sort:'1404'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1420',label:'9620 Erwetegem (Zottegem)',labelnl:'9620 Erwetegem (Zottegem)',labelfr:'9620 Erwetegem',labelen:'9620 Erwetegem',labelde:'9620 Erwetegem',parentid:'reg.319',show:'true',sort:'1405'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1421',label:'9620 Godveerdegem (Zottegem)',labelnl:'9620 Godveerdegem (Zottegem)',labelfr:'9620 Godveerdegem',labelen:'9620 Godveerdegem',labelde:'9620 Godveerdegem',parentid:'reg.319',show:'true',sort:'1406'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1422',label:'9620 Grotenberge (Zottegem)',labelnl:'9620 Grotenberge (Zottegem)',labelfr:'9620 Grotenberge',labelen:'9620 Grotenberge',labelde:'9620 Grotenberge',parentid:'reg.319',show:'true',sort:'1407'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1423',label:'9620 Leeuwergem (Zottegem)',labelnl:'9620 Leeuwergem (Zottegem)',labelfr:'9620 Leeuwergem',labelen:'9620 Leeuwergem',labelde:'9620 Leeuwergem',parentid:'reg.319',show:'true',sort:'1408'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1424',label:'9620 Oombergen (Zottegem)',labelnl:'9620 Oombergen (Zottegem)',labelfr:'9620 Oombergen',labelen:'9620 Oombergen',labelde:'9620 Oombergen',parentid:'reg.319',show:'true',sort:'1409'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1425',label:'9620 Sint-Goriks-Oudenhove (Zottegem)',labelnl:'9620 Sint-Goriks-Oudenhove (Zottegem)',labelfr:'9620 Audenhove-Saint-Géry',labelen:'9620 Sint-Goriks-Oudenhove',labelde:'9620 Sint-Goriks-Oudenhove',parentid:'reg.319',show:'true',sort:'1410'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1426',label:'9620 Sint-Maria-Oudenhove (Zottegem)',labelnl:'9620 Sint-Maria-Oudenhove (Zottegem)',labelfr:'9620 Audenhove-Sainte-Marie',labelen:'9620 Sint-Maria-Oudenhove',labelde:'9620 Sint-Maria-Oudenhove',parentid:'reg.319',show:'true',sort:'1411'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1427',label:'9620 Strijpen (Zottegem)',labelnl:'9620 Strijpen (Zottegem)',labelfr:'9620 Strijpen',labelen:'9620 Strijpen',labelde:'9620 Strijpen',parentid:'reg.319',show:'true',sort:'1412'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1428',label:'9620 Velzeke-Ruddershove (Zottegem)',labelnl:'9620 Velzeke-Ruddershove (Zottegem)',labelfr:'9620 Velzeke-Ruddershove',labelen:'9620 Velzeke-Ruddershove',labelde:'9620 Velzeke-Ruddershove',parentid:'reg.319',show:'true',sort:'1413'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1429',label:'9630 Zwalm',labelnl:'9630 Zwalm',labelfr:'9630 Zwalin',labelen:'9630 Zwalm',labelde:'9630 Zwalm',parentid:'reg.320',show:'true',sort:'1414'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1430',label:'9630 Beerlegem (Zwalm)',labelnl:'9630 Beerlegem (Zwalm)',labelfr:'9630 Beerlegem',labelen:'9630 Beerlegem',labelde:'9630 Beerlegem',parentid:'reg.320',show:'true',sort:'1415'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1431',label:'9630 Dikkele (Zwalm)',labelnl:'9630 Dikkele (Zwalm)',labelfr:'9630 Dikkele',labelen:'9630 Dikkele',labelde:'9630 Dikkele',parentid:'reg.320',show:'true',sort:'1416'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1432',label:'9630 Hundelgem (Zwalm)',labelnl:'9630 Hundelgem (Zwalm)',labelfr:'9630 Hundelgem',labelen:'9630 Hundelgem',labelde:'9630 Hundelgem',parentid:'reg.320',show:'true',sort:'1417'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1433',label:'9630 Meilegem (Zwalm)',labelnl:'9630 Meilegem (Zwalm)',labelfr:'9630 Meilegem',labelen:'9630 Meilegem',labelde:'9630 Meilegem',parentid:'reg.320',show:'true',sort:'1418'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1434',label:'9630 Munkzwalm (Zwalm)',labelnl:'9630 Munkzwalm (Zwalm)',labelfr:'9630 Munkzwalm',labelen:'9630 Munkzwalm',labelde:'9630 Munkzwalm',parentid:'reg.320',show:'true',sort:'1419'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1435',label:'9630 Paulatem (Zwalm)',labelnl:'9630 Paulatem (Zwalm)',labelfr:'9630 Paulaethem',labelen:'9630 Paulatem',labelde:'9630 Paulatem',parentid:'reg.320',show:'true',sort:'1420'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1436',label:'9630 Roborst (Zwalm)',labelnl:'9630 Roborst (Zwalm)',labelfr:'9630 Roborst',labelen:'9630 Roborst',labelde:'9630 Roborst',parentid:'reg.320',show:'true',sort:'1421'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1437',label:'9630 Rozebeke (Zwalm)',labelnl:'9630 Rozebeke (Zwalm)',labelfr:'9630 Rozebeke',labelen:'9630 Rozebeke',labelde:'9630 Rozebeke',parentid:'reg.320',show:'true',sort:'1422'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1438',label:'9630 Sint-Blasius-Boekel (Zwalm)',labelnl:'9630 Sint-Blasius-Boekel (Zwalm)',labelfr:'9630 Boucle-Saint-Blaise',labelen:'9630 Sint-Blasius-Boekel',labelde:'9630 Sint-Blasius-Boekel',parentid:'reg.320',show:'true',sort:'1423'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1439',label:'9630 Sint-Denijs-Boekel (Zwalm)',labelnl:'9630 Sint-Denijs-Boekel (Zwalm)',labelfr:'9630 Boucle-Saint-Denis',labelen:'9630 Sint-Denijs-Boekel',labelde:'9630 Sint-Denijs-Boekel',parentid:'reg.320',show:'true',sort:'1424'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1440',label:'9630 Sint-Maria-Latem (Zwalm)',labelnl:'9630 Sint-Maria-Latem (Zwalm)',labelfr:'9630 Laethem-Sainte-Marie',labelen:'9630 Sint-Maria-Latem',labelde:'9630 Sint-Maria-Latem',parentid:'reg.320',show:'true',sort:'1425'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1441',label:'9636 Nederzwalm-Hermelgem (Zwalm)',labelnl:'9636 Nederzwalm-Hermelgem (Zwalm)',labelfr:'9636 Nederzwalm-Hermelgem',labelen:'9636 Nederzwalm-Hermelgem',labelde:'9636 Nederzwalm-Hermelgem',parentid:'reg.320',show:'true',sort:'1426'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1442',label:'9660 Brakel',labelnl:'9660 Brakel',labelfr:'9660 Bracle',labelen:'9660 Brakel',labelde:'9660 Brakel',parentid:'reg.321',show:'true',sort:'1427'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1443',label:'9660 Elst (Brakel)',labelnl:'9660 Elst (Brakel)',labelfr:'9660 Elst',labelen:'9660 Elst',labelde:'9660 Elst',parentid:'reg.321',show:'true',sort:'1428'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1444',label:'9660 Everbeek (Brakel)',labelnl:'9660 Everbeek (Brakel)',labelfr:'9660 Everbecq',labelen:'9660 Everbeek',labelde:'9660 Everbeek',parentid:'reg.321',show:'true',sort:'1429'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1445',label:'9660 Michelbeke (Brakel)',labelnl:'9660 Michelbeke (Brakel)',labelfr:'9660 Michelbeke',labelen:'9660 Michelbeke',labelde:'9660 Michelbeke',parentid:'reg.321',show:'true',sort:'1430'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1446',label:'9660 Nederbrakel (Brakel)',labelnl:'9660 Nederbrakel (Brakel)',labelfr:'9660 Nederbrakel',labelen:'9660 Nederbrakel',labelde:'9660 Nederbrakel',parentid:'reg.321',show:'true',sort:'1431'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1447',label:'9660 Opbrakel (Brakel)',labelnl:'9660 Opbrakel (Brakel)',labelfr:'9660 Opbrakel',labelen:'9660 Opbrakel',labelde:'9660 Opbrakel',parentid:'reg.321',show:'true',sort:'1432'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1448',label:'9660 Sint-Maria-Oudenhove (Brakel)',labelnl:'9660 Sint-Maria-Oudenhove (Brakel)',labelfr:'9660 Audenhoven-Sainte-Marie',labelen:'9660 Sint-Maria-Oudenhove',labelde:'9660 Sint-Maria-Oudenhove',parentid:'reg.321',show:'true',sort:'1433'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1449',label:'9660 Zegelsem (Brakel)',labelnl:'9660 Zegelsem (Brakel)',labelfr:'9660 Zegelsem',labelen:'9660 Zegelsem',labelde:'9660 Zegelsem',parentid:'reg.321',show:'true',sort:'1434'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1450',label:'9661 Parike (Brakel)',labelnl:'9661 Parike (Brakel)',labelfr:'9661 Parike',labelen:'9661 Parike',labelde:'9661 Parike',parentid:'reg.321',show:'true',sort:'1435'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1451',label:'9667 Horebeke',labelnl:'9667 Horebeke',labelfr:'9667 Horebeke',labelen:'9667 Horebeke',labelde:'9667 Horebeke',parentid:'reg.322',show:'true',sort:'1436'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1452',label:'9667 Sint-Kornelis-Horebeke (Horebeke)',labelnl:'9667 Sint-Kornelis-Horebeke (Horebeke)',labelfr:'9667 Hoorebeke-Saint-Corneille',labelen:'9667 Sint-Kornelis-Horebeke',labelde:'9667 Sint-Kornelis-Horebeke',parentid:'reg.322',show:'true',sort:'1437'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1453',label:'9667 Sint-Maria-Horebeke (Horebeke)',labelnl:'9667 Sint-Maria-Horebeke (Horebeke)',labelfr:'9667 Hoorebeke-Sainte-Marie',labelen:'9667 Sint-Maria-Horebeke',labelde:'9667 Sint-Maria-Horebeke',parentid:'reg.322',show:'true',sort:'1438'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1454',label:'9680 Maarkedal',labelnl:'9680 Maarkedal',labelfr:'9680 Maarkedal',labelen:'9680 Maarkedal',labelde:'9680 Maarkedal',parentid:'reg.323',show:'true',sort:'1439'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1455',label:'9680 Etikhove (Maarkedal)',labelnl:'9680 Etikhove (Maarkedal)',labelfr:'9680 Etikhove',labelen:'9680 Etikhove',labelde:'9680 Etikhove',parentid:'reg.323',show:'true',sort:'1440'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1456',label:'9680 Maarke-Kerkem (Maarkedal)',labelnl:'9680 Maarke-Kerkem (Maarkedal)',labelfr:'9680 Maarke-Kerkem',labelen:'9680 Maarke-Kerkem',labelde:'9680 Maarke-Kerkem',parentid:'reg.323',show:'true',sort:'1441'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1457',label:'9681 Nukerke (Maarkedal)',labelnl:'9681 Nukerke (Maarkedal)',labelfr:'9681 Nukerke',labelen:'9681 Nukerke',labelde:'9681 Nukerke',parentid:'reg.323',show:'true',sort:'1442'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1458',label:'9688 Schorisse (Maarkedal)',labelnl:'9688 Schorisse (Maarkedal)',labelfr:'9688 Schorisse',labelen:'9688 Schorisse',labelde:'9688 Schorisse',parentid:'reg.323',show:'true',sort:'1443'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1459',label:'9690 Kluisbergen',labelnl:'9690 Kluisbergen',labelfr:'9690 Kluisbergen',labelen:'9690 Kluisbergen',labelde:'9690 Kluisbergen',parentid:'reg.324',show:'true',sort:'1444'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1460',label:'9690 Berchem (Kluisbergen)',labelnl:'9690 Berchem (Kluisbergen)',labelfr:'9690 Berchem',labelen:'9690 Berchem',labelde:'9690 Berchem',parentid:'reg.324',show:'true',sort:'1445'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1461',label:'9690 Kwaremont (Kluisbergen)',labelnl:'9690 Kwaremont (Kluisbergen)',labelfr:'9690 Kwaremont',labelen:'9690 Kwaremont',labelde:'9690 Kwaremont',parentid:'reg.324',show:'true',sort:'1446'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1462',label:'9690 Ruien (Kluisbergen)',labelnl:'9690 Ruien (Kluisbergen)',labelfr:'9690 Ruien',labelen:'9690 Ruien',labelde:'9690 Ruien',parentid:'reg.324',show:'true',sort:'1447'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1463',label:'9690 Zulzeke (Kluisbergen)',labelnl:'9690 Zulzeke (Kluisbergen)',labelfr:'9690 Zulzeke',labelen:'9690 Zulzeke',labelde:'9690 Zulzeke',parentid:'reg.324',show:'true',sort:'1448'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1464',label:'9700 Oudenaarde',labelnl:'9700 Oudenaarde',labelfr:'9700 Audenarde',labelen:'9700 Oudenaarde',labelde:'9700 Oudenaarde',parentid:'reg.325',show:'true',sort:'1449'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1465',label:'9700 Bevere (Oudenaarde)',labelnl:'9700 Bevere (Oudenaarde)',labelfr:'9700 Bevere',labelen:'9700 Bevere',labelde:'9700 Bevere',parentid:'reg.325',show:'true',sort:'1450'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1466',label:'9700 Edelare (Oudenaarde)',labelnl:'9700 Edelare (Oudenaarde)',labelfr:'9700 Edelare',labelen:'9700 Edelare',labelde:'9700 Edelare',parentid:'reg.325',show:'true',sort:'1451'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1467',label:'9700 Eine (Oudenaarde)',labelnl:'9700 Eine (Oudenaarde)',labelfr:'9700 Eine',labelen:'9700 Eine',labelde:'9700 Eine',parentid:'reg.325',show:'true',sort:'1452'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1468',label:'9700 Ename (Oudenaarde)',labelnl:'9700 Ename (Oudenaarde)',labelfr:'9700 Ename',labelen:'9700 Ename',labelde:'9700 Ename',parentid:'reg.325',show:'true',sort:'1453'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1469',label:'9700 Heurne (Oudenaarde)',labelnl:'9700 Heurne (Oudenaarde)',labelfr:'9700 Heurne',labelen:'9700 Heurne',labelde:'9700 Heurne',parentid:'reg.325',show:'true',sort:'1454'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1470',label:'9700 Leupegem (Oudenaarde)',labelnl:'9700 Leupegem (Oudenaarde)',labelfr:'9700 Leupegem',labelen:'9700 Leupegem',labelde:'9700 Leupegem',parentid:'reg.325',show:'true',sort:'1455'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1471',label:'9700 Mater (Oudenaarde)',labelnl:'9700 Mater (Oudenaarde)',labelfr:'9700 Mater',labelen:'9700 Mater',labelde:'9700 Mater',parentid:'reg.325',show:'true',sort:'1456'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1472',label:'9700 Melden (Oudenaarde)',labelnl:'9700 Melden (Oudenaarde)',labelfr:'9700 Melden',labelen:'9700 Melden',labelde:'9700 Melden',parentid:'reg.325',show:'true',sort:'1457'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1473',label:'9700 Mullem (Oudenaarde)',labelnl:'9700 Mullem (Oudenaarde)',labelfr:'9700 Mullem',labelen:'9700 Mullem',labelde:'9700 Mullem',parentid:'reg.325',show:'true',sort:'1458'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1474',label:'9700 Nederename (Oudenaarde)',labelnl:'9700 Nederename (Oudenaarde)',labelfr:'9700 Nederename',labelen:'9700 Nederename',labelde:'9700 Nederename',parentid:'reg.325',show:'true',sort:'1459'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1475',label:'9700 Ooike (Oudenaarde)',labelnl:'9700 Ooike (Oudenaarde)',labelfr:'9700 Ooike',labelen:'9700 Ooike',labelde:'9700 Ooike',parentid:'reg.325',show:'true',sort:'1460'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1476',label:'9700 Volkegem (Oudenaarde)',labelnl:'9700 Volkegem (Oudenaarde)',labelfr:'9700 Volkegem',labelen:'9700 Volkegem',labelde:'9700 Volkegem',parentid:'reg.325',show:'true',sort:'1461'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1477',label:'9700 Welden (Oudenaarde)',labelnl:'9700 Welden (Oudenaarde)',labelfr:'9700 Welden',labelen:'9700 Welden',labelde:'9700 Welden',parentid:'reg.325',show:'true',sort:'1462'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1478',label:'9750 Zingem',labelnl:'9750 Zingem',labelfr:'9750 Zingem',labelen:'9750 Zingem',labelde:'9750 Zingem',parentid:'reg.326',show:'true',sort:'1463'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1479',label:'9750 Huise (Zingem)',labelnl:'9750 Huise (Zingem)',labelfr:'9750 Huise',labelen:'9750 Huise',labelde:'9750 Huise',parentid:'reg.326',show:'true',sort:'1464'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1480',label:'9750 Ouwegem (Zingem)',labelnl:'9750 Ouwegem (Zingem)',labelfr:'9750 Ouwegem',labelen:'9750 Ouwegem',labelde:'9750 Ouwegem',parentid:'reg.326',show:'true',sort:'1465'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1481',label:'9770 Kruishoutem',labelnl:'9770 Kruishoutem',labelfr:'9770 Kruishoutem',labelen:'9770 Kruishoutem',labelde:'9770 Kruishoutem',parentid:'reg.327',show:'true',sort:'1466'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1482',label:'9771 Nokere (Kruishoutem)',labelnl:'9771 Nokere (Kruishoutem)',labelfr:'9771 Nokere',labelen:'9771 Nokere',labelde:'9771 Nokere',parentid:'reg.327',show:'true',sort:'1467'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1483',label:'9772 Wannegem-Lede (Kruishoutem)',labelnl:'9772 Wannegem-Lede (Kruishoutem)',labelfr:'9772 Wannegem-Lede',labelen:'9772 Wannegem-Lede',labelde:'9772 Wannegem-Lede',parentid:'reg.327',show:'true',sort:'1468'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1484',label:'9790 Wortegem-Petegem',labelnl:'9790 Wortegem-Petegem',labelfr:'9790 Wortegem-Petegem',labelen:'9790 Wortegem-Petegem',labelde:'9790 Wortegem-Petegem',parentid:'reg.328',show:'true',sort:'1469'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1485',label:'9790 Elsegem (Wortegem-Petegem)',labelnl:'9790 Elsegem (Wortegem-Petegem)',labelfr:'9790 Elsegem',labelen:'9790 Elsegem',labelde:'9790 Elsegem',parentid:'reg.328',show:'true',sort:'1470'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1486',label:'9790 Moregem (Wortegem-Petegem)',labelnl:'9790 Moregem (Wortegem-Petegem)',labelfr:'9790 Moregem',labelen:'9790 Moregem',labelde:'9790 Moregem',parentid:'reg.328',show:'true',sort:'1471'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1487',label:'9790 Ooike (Wortegem-Petegem)',labelnl:'9790 Ooike (Wortegem-Petegem)',labelfr:'9790 Ooike',labelen:'9790 Ooike',labelde:'9790 Ooike',parentid:'reg.328',show:'true',sort:'1472'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1488',label:'9790 Petegem-Aan-De-Schelde (Wortegem-Petegem)',labelnl:'9790 Petegem-Aan-De-Schelde (Wortegem-Petegem)',labelfr:'9790 Petegem-aan-de-Schelde',labelen:'9790 Petegem-aan-de-Schelde',labelde:'9790 Petegem-aan-de-Schelde',parentid:'reg.328',show:'true',sort:'1473'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1489',label:'9790 Wortegem (Wortegem-Petegem)',labelnl:'9790 Wortegem (Wortegem-Petegem)',labelfr:'9790 Wortegem',labelen:'9790 Wortegem',labelde:'9790 Wortegem',parentid:'reg.328',show:'true',sort:'1474'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1490',label:'9800 Deinze',labelnl:'9800 Deinze',labelfr:'9800 Deinze',labelen:'9800 Deinze',labelde:'9800 Deinze',parentid:'reg.329',show:'true',sort:'1475'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1491',label:'9800 Astene (Deinze)',labelnl:'9800 Astene (Deinze)',labelfr:'9800 Astene',labelen:'9800 Astene',labelde:'9800 Astene',parentid:'reg.329',show:'true',sort:'1476'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1492',label:'9800 Bachte-Maria-Leerne (Deinze)',labelnl:'9800 Bachte-Maria-Leerne (Deinze)',labelfr:'9800 Bachte-Maria-Leerne',labelen:'9800 Bachte-Maria-Leerne',labelde:'9800 Bachte-Maria-Leerne',parentid:'reg.329',show:'true',sort:'1477'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1493',label:'9800 Gottem (Deinze)',labelnl:'9800 Gottem (Deinze)',labelfr:'9800 Gottem',labelen:'9800 Gottem',labelde:'9800 Gottem',parentid:'reg.329',show:'true',sort:'1478'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1494',label:'9800 Grammene (Deinze)',labelnl:'9800 Grammene (Deinze)',labelfr:'9800 Grammene',labelen:'9800 Grammene',labelde:'9800 Grammene',parentid:'reg.329',show:'true',sort:'1479'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1495',label:'9800 Meigem (Deinze)',labelnl:'9800 Meigem (Deinze)',labelfr:'9800 Meigem',labelen:'9800 Meigem',labelde:'9800 Meigem',parentid:'reg.329',show:'true',sort:'1480'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1496',label:'9800 Petegem-Aan-De-Leie (Deinze)',labelnl:'9800 Petegem-Aan-De-Leie (Deinze)',labelfr:'9800 Petegem-aan-de-Leie',labelen:'9800 Petegem-aan-de-Leie',labelde:'9800 Petegem-aan-de-Leie',parentid:'reg.329',show:'true',sort:'1481'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1497',label:'9800 Sint-Martens-Leerne (Deinze)',labelnl:'9800 Sint-Martens-Leerne (Deinze)',labelfr:'9800 Sint-Martens-Leerne',labelen:'9800 Sint-Martens-Leerne',labelde:'9800 Sint-Martens-Leerne',parentid:'reg.329',show:'true',sort:'1482'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1498',label:'9800 Vinkt (Deinze)',labelnl:'9800 Vinkt (Deinze)',labelfr:'9800 Vinkt',labelen:'9800 Vinkt',labelde:'9800 Vinkt',parentid:'reg.329',show:'true',sort:'1483'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1499',label:'9800 Wontergem (Deinze)',labelnl:'9800 Wontergem (Deinze)',labelfr:'9800 Wontergem',labelen:'9800 Wontergem',labelde:'9800 Wontergem',parentid:'reg.329',show:'true',sort:'1484'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1500',label:'9800 Zeveren (Deinze)',labelnl:'9800 Zeveren (Deinze)',labelfr:'9800 Zeveren',labelen:'9800 Zeveren',labelde:'9800 Zeveren',parentid:'reg.329',show:'true',sort:'1485'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1501',label:'9810 Nazareth',labelnl:'9810 Nazareth',labelfr:'9810 Nazareth',labelen:'9810 Nazareth',labelde:'9810 Nazareth',parentid:'reg.330',show:'true',sort:'1486'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1502',label:'9810 Eke (Nazareth)',labelnl:'9810 Eke (Nazareth)',labelfr:'9810 Eke',labelen:'9810 Eke',labelde:'9810 Eke',parentid:'reg.330',show:'true',sort:'1487'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1503',label:'9820 Merelbeke',labelnl:'9820 Merelbeke',labelfr:'9820 Merelbeke',labelen:'9820 Merelbeke',labelde:'9820 Merelbeke',parentid:'reg.331',show:'true',sort:'1488'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1504',label:'9820 Bottelare (Merelbeke)',labelnl:'9820 Bottelare (Merelbeke)',labelfr:'9820 Bottelare',labelen:'9820 Bottelare',labelde:'9820 Bottelare',parentid:'reg.331',show:'true',sort:'1489'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1505',label:'9820 Lemberge (Merelbeke)',labelnl:'9820 Lemberge (Merelbeke)',labelfr:'9820 Lemberge',labelen:'9820 Lemberge',labelde:'9820 Lemberge',parentid:'reg.331',show:'true',sort:'1490'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1506',label:'9820 Melsen (Merelbeke)',labelnl:'9820 Melsen (Merelbeke)',labelfr:'9820 Melsen',labelen:'9820 Melsen',labelde:'9820 Melsen',parentid:'reg.331',show:'true',sort:'1491'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1507',label:'9820 Munte (Merelbeke)',labelnl:'9820 Munte (Merelbeke)',labelfr:'9820 Munte',labelen:'9820 Munte',labelde:'9820 Munte',parentid:'reg.331',show:'true',sort:'1492'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1508',label:'9820 Schelderode (Merelbeke)',labelnl:'9820 Schelderode (Merelbeke)',labelfr:'9820 Schelderode',labelen:'9820 Schelderode',labelde:'9820 Schelderode',parentid:'reg.331',show:'true',sort:'1493'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1509',label:'9830 Sint-Martens-Latem',labelnl:'9830 Sint-Martens-Latem',labelfr:'9830 Laethem-Saint-Martin',labelen:'9830 Sint-Martens-Latem',labelde:'9830 Sint-Martens-Latem',parentid:'reg.332',show:'true',sort:'1494'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1510',label:'9831 Deurle (Sint-Martens-Latem)',labelnl:'9831 Deurle (Sint-Martens-Latem)',labelfr:'9831 Deurle',labelen:'9831 Deurle',labelde:'9831 Deurle',parentid:'reg.332',show:'true',sort:'1495'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1511',label:'9840 De Pinte',labelnl:'9840 De Pinte',labelfr:'9840 De Pinte',labelen:'9840 De Pinte',labelde:'9840 De Pinte',parentid:'reg.333',show:'true',sort:'1496'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1512',label:'9840 Zevergem (De Pinte)',labelnl:'9840 Zevergem (De Pinte)',labelfr:'9840 Zevergem',labelen:'9840 Zevergem',labelde:'9840 Zevergem',parentid:'reg.333',show:'true',sort:'1497'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1513',label:'9850 Nevele',labelnl:'9850 Nevele',labelfr:'9850 Nevele',labelen:'9850 Nevele',labelde:'9850 Nevele',parentid:'reg.334',show:'true',sort:'1498'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1514',label:'9850 Hansbeke (Nevele)',labelnl:'9850 Hansbeke (Nevele)',labelfr:'9850 Hansbeke',labelen:'9850 Hansbeke',labelde:'9850 Hansbeke',parentid:'reg.334',show:'true',sort:'1499'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1515',label:'9850 Landegem (Nevele)',labelnl:'9850 Landegem (Nevele)',labelfr:'9850 Landegem',labelen:'9850 Landegem',labelde:'9850 Landegem',parentid:'reg.334',show:'true',sort:'1500'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1516',label:'9850 Merendree (Nevele)',labelnl:'9850 Merendree (Nevele)',labelfr:'9850 Merendree',labelen:'9850 Merendree',labelde:'9850 Merendree',parentid:'reg.334',show:'true',sort:'1501'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1517',label:'9850 Poesele (Nevele)',labelnl:'9850 Poesele (Nevele)',labelfr:'9850 Poesele',labelen:'9850 Poesele',labelde:'9850 Poesele',parentid:'reg.334',show:'true',sort:'1502'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1518',label:'9850 Vosselare (Nevele)',labelnl:'9850 Vosselare (Nevele)',labelfr:'9850 Vosselare',labelen:'9850 Vosselare',labelde:'9850 Vosselare',parentid:'reg.334',show:'true',sort:'1503'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1519',label:'9860 Oosterzele',labelnl:'9860 Oosterzele',labelfr:'9860 Oosterzele',labelen:'9860 Oosterzele',labelde:'9860 Oosterzele',parentid:'reg.335',show:'true',sort:'1504'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1520',label:'9860 Balegem (Oosterzele)',labelnl:'9860 Balegem (Oosterzele)',labelfr:'9860 Balegem',labelen:'9860 Balegem',labelde:'9860 Balegem',parentid:'reg.335',show:'true',sort:'1505'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1521',label:'9860 Gijzenzele (Oosterzele)',labelnl:'9860 Gijzenzele (Oosterzele)',labelfr:'9860 Gijzenzele',labelen:'9860 Gijzenzele',labelde:'9860 Gijzenzele',parentid:'reg.335',show:'true',sort:'1506'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1522',label:'9860 Landskouter (Oosterzele)',labelnl:'9860 Landskouter (Oosterzele)',labelfr:'9860 Landskouter',labelen:'9860 Landskouter',labelde:'9860 Landskouter',parentid:'reg.335',show:'true',sort:'1507'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1523',label:'9860 Moortsele (Oosterzele)',labelnl:'9860 Moortsele (Oosterzele)',labelfr:'9860 Moortsele',labelen:'9860 Moortsele',labelde:'9860 Moortsele',parentid:'reg.335',show:'true',sort:'1508'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1524',label:'9860 Scheldewindeke (Oosterzele)',labelnl:'9860 Scheldewindeke (Oosterzele)',labelfr:'9860 Scheldewindeke',labelen:'9860 Scheldewindeke',labelde:'9860 Scheldewindeke',parentid:'reg.335',show:'true',sort:'1509'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1525',label:'9870 Zulte',labelnl:'9870 Zulte',labelfr:'9870 Zulte',labelen:'9870 Zulte',labelde:'9870 Zulte',parentid:'reg.336',show:'true',sort:'1510'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1526',label:'9870 Machelen (Zulte)',labelnl:'9870 Machelen (Zulte)',labelfr:'9870 Machelen',labelen:'9870 Machelen',labelde:'9870 Machelen',parentid:'reg.336',show:'true',sort:'1511'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1527',label:'9870 Olsene (Zulte)',labelnl:'9870 Olsene (Zulte)',labelfr:'9870 Olsene',labelen:'9870 Olsene',labelde:'9870 Olsene',parentid:'reg.336',show:'true',sort:'1512'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1528',label:'9880 Aalter',labelnl:'9880 Aalter',labelfr:'9880 Aalter',labelen:'9880 Aalter',labelde:'9880 Aalter',parentid:'reg.337',show:'true',sort:'1513'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1529',label:'9880 Lotenhulle (Aalter)',labelnl:'9880 Lotenhulle (Aalter)',labelfr:'9880 Lotenhulle',labelen:'9880 Lotenhulle',labelde:'9880 Lotenhulle',parentid:'reg.337',show:'true',sort:'1514'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1530',label:'9880 Poeke (Aalter)',labelnl:'9880 Poeke (Aalter)',labelfr:'9880 Poeke',labelen:'9880 Poeke',labelde:'9880 Poeke',parentid:'reg.337',show:'true',sort:'1515'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1531',label:'9881 Bellem (Aalter)',labelnl:'9881 Bellem (Aalter)',labelfr:'9881 Bellem',labelen:'9881 Bellem',labelde:'9881 Bellem',parentid:'reg.337',show:'true',sort:'1516'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1532',label:'9890 Gavere',labelnl:'9890 Gavere',labelfr:'9890 Gavere',labelen:'9890 Gavere',labelde:'9890 Gavere',parentid:'reg.338',show:'true',sort:'1517'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1533',label:'9890 Asper (Gavere)',labelnl:'9890 Asper (Gavere)',labelfr:'9890 Asper',labelen:'9890 Asper',labelde:'9890 Asper',parentid:'reg.338',show:'true',sort:'1518'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1534',label:'9890 Baaigem (Gavere)',labelnl:'9890 Baaigem (Gavere)',labelfr:'9890 Baaigem',labelen:'9890 Baaigem',labelde:'9890 Baaigem',parentid:'reg.338',show:'true',sort:'1519'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1535',label:'9890 Dikkelvenne (Gavere)',labelnl:'9890 Dikkelvenne (Gavere)',labelfr:'9890 Dikkelvenne',labelen:'9890 Dikkelvenne',labelde:'9890 Dikkelvenne',parentid:'reg.338',show:'true',sort:'1520'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1536',label:'9890 Semmerzake (Gavere)',labelnl:'9890 Semmerzake (Gavere)',labelfr:'9890 Semmerzake',labelen:'9890 Semmerzake',labelde:'9890 Semmerzake',parentid:'reg.338',show:'true',sort:'1521'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1537',label:'9890 Vurste (Gavere)',labelnl:'9890 Vurste (Gavere)',labelfr:'9890 Vurste',labelen:'9890 Vurste',labelde:'9890 Vurste',parentid:'reg.338',show:'true',sort:'1522'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1538',label:'9900 Eeklo',labelnl:'9900 Eeklo',labelfr:'9900 Eeklo',labelen:'9900 Eeklo',labelde:'9900 Eeklo',parentid:'reg.339',show:'true',sort:'1523'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1539',label:'9910 Knesselare',labelnl:'9910 Knesselare',labelfr:'9910 Knesselare',labelen:'9910 Knesselare',labelde:'9910 Knesselare',parentid:'reg.340',show:'true',sort:'1524'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1540',label:'9910 Ursel (Knesselare)',labelnl:'9910 Ursel (Knesselare)',labelfr:'9910 Ursel',labelen:'9910 Ursel',labelde:'9910 Ursel',parentid:'reg.340',show:'true',sort:'1525'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1541',label:'9920 Lovendegem',labelnl:'9920 Lovendegem',labelfr:'9920 Lovendegem',labelen:'9920 Lovendegem',labelde:'9920 Lovendegem',parentid:'reg.341',show:'true',sort:'1526'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1542',label:'9921 Vinderhoute (Lovendegem)',labelnl:'9921 Vinderhoute (Lovendegem)',labelfr:'9921 Vinderhoute',labelen:'9921 Vinderhoute',labelde:'9921 Vinderhoute',parentid:'reg.341',show:'true',sort:'1527'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1543',label:'9930 Zomergem',labelnl:'9930 Zomergem',labelfr:'9930 Zomergem',labelen:'9930 Zomergem',labelde:'9930 Zomergem',parentid:'reg.342',show:'true',sort:'1528'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1544',label:'9931 Oostwinkel (Zomergem)',labelnl:'9931 Oostwinkel (Zomergem)',labelfr:'9931 Oostwinkel',labelen:'9931 Oostwinkel',labelde:'9931 Oostwinkel',parentid:'reg.342',show:'true',sort:'1529'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1545',label:'9932 Ronsele (Zomergem)',labelnl:'9932 Ronsele (Zomergem)',labelfr:'9932 Ronsele',labelen:'9932 Ronsele',labelde:'9932 Ronsele',parentid:'reg.342',show:'true',sort:'1530'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1546',label:'9940 Evergem',labelnl:'9940 Evergem',labelfr:'9940 Evergem',labelen:'9940 Evergem',labelde:'9940 Evergem',parentid:'reg.343',show:'true',sort:'1531'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1547',label:'9940 Ertvelde (Evergem)',labelnl:'9940 Ertvelde (Evergem)',labelfr:'9940 Ertvelde',labelen:'9940 Ertvelde',labelde:'9940 Ertvelde',parentid:'reg.343',show:'true',sort:'1532'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1548',label:'9940 Kluizen (Evergem)',labelnl:'9940 Kluizen (Evergem)',labelfr:'9940 Kluizen',labelen:'9940 Kluizen',labelde:'9940 Kluizen',parentid:'reg.343',show:'true',sort:'1533'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1549',label:'9940 Sleidinge (Evergem)',labelnl:'9940 Sleidinge (Evergem)',labelfr:'9940 Sleidinge',labelen:'9940 Sleidinge',labelde:'9940 Sleidinge',parentid:'reg.343',show:'true',sort:'1534'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1550',label:'9950 Waarschoot',labelnl:'9950 Waarschoot',labelfr:'9950 Waarschoot',labelen:'9950 Waarschoot',labelde:'9950 Waarschoot',parentid:'reg.344',show:'true',sort:'1535'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1551',label:'9960 Assenede',labelnl:'9960 Assenede',labelfr:'9960 Assenede',labelen:'9960 Assenede',labelde:'9960 Assenede',parentid:'reg.345',show:'true',sort:'1536'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1552',label:'9961 Boekhoute (Assenede)',labelnl:'9961 Boekhoute (Assenede)',labelfr:'9961 Boekhoute',labelen:'9961 Boekhoute',labelde:'9961 Boekhoute',parentid:'reg.345',show:'true',sort:'1537'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1553',label:'9968 Bassevelde (Assenede)',labelnl:'9968 Bassevelde (Assenede)',labelfr:'9968 Bassevelde',labelen:'9968 Bassevelde',labelde:'9968 Bassevelde',parentid:'reg.345',show:'true',sort:'1538'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1554',label:'9968 Oosteeklo (Assenede)',labelnl:'9968 Oosteeklo (Assenede)',labelfr:'9968 Oosteeklo',labelen:'9968 Oosteeklo',labelde:'9968 Oosteeklo',parentid:'reg.345',show:'true',sort:'1539'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1555',label:'9970 Kaprijke',labelnl:'9970 Kaprijke',labelfr:'9970 Kaprijke',labelen:'9970 Kaprijke',labelde:'9970 Kaprijke',parentid:'reg.346',show:'true',sort:'1540'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1556',label:'9971 Lembeke (Kaprijke)',labelnl:'9971 Lembeke (Kaprijke)',labelfr:'9971 Lembeke',labelen:'9971 Lembeke',labelde:'9971 Lembeke',parentid:'reg.346',show:'true',sort:'1541'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1557',label:'9980 Sint-Laureins',labelnl:'9980 Sint-Laureins',labelfr:'9980 Saint-Laurent',labelen:'9980 Sint-Laureins',labelde:'9980 Sint-Laureins',parentid:'reg.347',show:'true',sort:'1542'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1558',label:'9981 Sint-Margriete (Sint-Laureins)',labelnl:'9981 Sint-Margriete (Sint-Laureins)',labelfr:'9981 Sainte-Marguerite',labelen:'9981 Sint-Margriete',labelde:'9981 Sint-Margriete',parentid:'reg.347',show:'true',sort:'1543'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1559',label:'9982 Sint-Jan-In-Eremo (Sint-Laureins)',labelnl:'9982 Sint-Jan-In-Eremo (Sint-Laureins)',labelfr:'9982 Saint-Jean-in-Eremo',labelen:'9982 Sint-Jan-in-Eremo',labelde:'9982 Sint-Jan-in-Eremo',parentid:'reg.347',show:'true',sort:'1544'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1560',label:'9988 Waterland-Oudeman (Sint-Laureins)',labelnl:'9988 Waterland-Oudeman (Sint-Laureins)',labelfr:'9988 Waterland-Oudeman',labelen:'9988 Waterland-Oudeman',labelde:'9988 Waterland-Oudeman',parentid:'reg.347',show:'true',sort:'1545'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1561',label:'9988 Watervliet (Sint-Laureins)',labelnl:'9988 Watervliet (Sint-Laureins)',labelfr:'9988 Watervliet',labelen:'9988 Watervliet',labelde:'9988 Watervliet',parentid:'reg.347',show:'true',sort:'1546'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1562',label:'9990 Maldegem',labelnl:'9990 Maldegem',labelfr:'9990 Maldegem',labelen:'9990 Maldegem',labelde:'9990 Maldegem',parentid:'reg.348',show:'true',sort:'1547'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1563',label:'9991 Adegem (Maldegem)',labelnl:'9991 Adegem (Maldegem)',labelfr:'9991 Adegem',labelen:'9991 Adegem',labelde:'9991 Adegem',parentid:'reg.348',show:'true',sort:'1548'},{createdby:'CultuurNet',creationdate:'',domain:'flandersregion',enabled:'true',id:'reg.1564',label:'9992 Middelburg (Maldegem)',labelnl:'9992 Middelburg (Maldegem)',labelfr:'9992 Middelburg',labelen:'9992 Middelburg',labelde:'9992 Middelburg',parentid:'reg.348',show:'true',sort:'1549'},{createdby:'CultuurNet',creationdate:'',domain:'umv',enabled:'true',id:'umv.1',label:'Museum',labelnl:'Museum',labelfr:'Musée',labelen:'Museum',labelde:'Museen',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'',domain:'umv',enabled:'true',id:'umv.2',label:'Zelf doen',labelnl:'Zelf doen',labelfr:'À faire soi-même',labelen:'DIY',labelde:'Selbst tun',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'',domain:'umv',enabled:'true',id:'umv.3',label:'Kamp of vakantie',labelnl:'Kamp of vakantie',labelfr:'Camp de vacance',labelen:'Camp or holiday',labelde:'Ferienlager oder Urlaub',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'',domain:'umv',enabled:'true',id:'umv.4',label:'Lezen en voorlezen',labelnl:'Lezen en voorlezen',labelfr:'Lire et lire à haute voix',labelen:'Reading & storytelling',labelde:'Lesen und vorlesen',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'',domain:'umv',enabled:'true',id:'umv.5',label:'Buiten',labelnl:'Buiten',labelfr:'À l\'extérieur',labelen:'Outdoors',labelde:'Outdoor',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'',domain:'umv',enabled:'true',id:'umv.6',label:'Toneel, muziek en dans',labelnl:'Toneel, muziek en dans',labelfr:'Théâtre, musique et danse',labelen:'Drama, music & dance',labelde:'Theater, Musik und Tanz',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'',domain:'umv',enabled:'true',id:'umv.7',label:'Film',labelnl:'Film',labelfr:'Cinéma',labelen:'Movies',labelde:'Kino',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'',domain:'umv',enabled:'true',id:'umv.8',label:'Sport',labelnl:'Sport',labelfr:'Sport',labelen:'Sports',labelde:'Sport',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'',domain:'umv',enabled:'true',id:'umv.9',label:'Circus en kermis',labelnl:'Circus en kermis',labelfr:'Cirque et foire',labelen:'Circus & fairs',labelde:'Zirkus und Kirmes',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'',domain:'targetaudience',enabled:'true',id:'2.1.14.0.0',label:'Leerlingen',labelnl:'Leerlingen',labelfr:'Élèves',labelen:'Pupils',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.31',label:'Provincie Vlaams-Brabant',labelnl:'Provincie Vlaams-Brabant',labelfr:'Province du Brabant Flamand',labelen:'Province of Flemish Brabant',labelde:'Provinz Flämisch-Brabant',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.32',label:'Provincie West-Vlaanderen',labelnl:'Provincie West-Vlaanderen',labelfr:'Province de Flandre Occidentale',labelen:'Province of West Flanders',labelde:'Provinz Westflandern',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.5',label:'Brussels Hoofdstedelijk Gewest',labelnl:'Brussels Hoofdstedelijk Gewest',labelfr:'Région Bruxelles-Capitale',labelen:'Brussels Capital Region',labelde:'Region Brüssel-Hauptstadt',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.22',label:'Provincie Oost-Vlaanderen',labelnl:'Provincie Oost-Vlaanderen',labelfr:'Province de Flandre Orientale',labelen:'Province of East Flanders',labelde:'Provinz Ostflandern',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.18',label:'Provincie Limburg',labelnl:'Provincie Limburg',labelfr:'Province du Limbourg',labelen:'Province of Limburg',labelde:'Provinz Limburg',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.2',label:'Provincie Antwerpen',labelnl:'Provincie Antwerpen',labelfr:'Province d\'Anvers',labelen:'Province of Antwerp',labelde:'Provinz Antwerpen',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.3',label:'Regio Antwerpen',labelnl:'Regio Antwerpen',labelfr:'Région Anvers',labelen:'Region Antwerp',labelde:'Region Antwerpen',parentid:'wreg.2',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.4',label:'Regio Brugge',labelnl:'Regio Brugge',labelfr:'Région Bruges',labelen:'Region Bruges',labelde:'Region Brügge',parentid:'wreg.32',show:'true',sort:'2'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1',label:'Regio Aalst',labelnl:'Regio Aalst',labelfr:'Région Alost',labelen:'Region Aalst',labelde:'Region Aalst',parentid:'wreg.22',show:'true',sort:'3'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.19',label:'Regio Maaseik - Lommel',labelnl:'Regio Maaseik - Lommel',labelfr:'Région Maaseik - Lommel',labelen:'Region Maaseik - Lommel',labelde:'Region Maaseik - Lommel',parentid:'wreg.18',show:'true',sort:'4'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.20',label:'Regio Mechelen',labelnl:'Regio Mechelen',labelfr:'Région Malines',labelen:'Region Mechelen',labelde:'Region Mechelen',parentid:'wreg.2',show:'true',sort:'5'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.21',label:'Regio Oostende',labelnl:'Regio Oostende',labelfr:'Région Ostende',labelen:'Region Ostend',labelde:'Region Ostende',parentid:'wreg.32',show:'true',sort:'6'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.23',label:'Regio Oudenaarde',labelnl:'Regio Oudenaarde',labelfr:'Région Audenarde',labelen:'Region Oudenaarde',labelde:'Region Oudenaarde',parentid:'wreg.22',show:'true',sort:'7'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.24',label:'Regio Roeselare',labelnl:'Regio Roeselare',labelfr:'Région Roulers',labelen:'Region Roeselare',labelde:'Region Roeselare',parentid:'wreg.32',show:'true',sort:'8'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.25',label:'Regio Sint-Niklaas- Lokeren',labelnl:'Regio Sint-Niklaas- Lokeren',labelfr:'Région Saint-Nicolas - Lokeren',labelen:'Region Sint-Niklaas - Lokeren',labelde:'Region Sint-Niklaas - Lokeren',parentid:'wreg.22',show:'true',sort:'9'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.26',label:'Regio Tielt',labelnl:'Regio Tielt',labelfr:'Région Tielt',labelen:'Region Tielt',labelde:'Region Tielt',parentid:'wreg.32',show:'true',sort:'10'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.27',label:'Regio Tongeren - Sint-Truiden',labelnl:'Regio Tongeren - Sint-Truiden',labelfr:'Région Tongres - Saint-Trond',labelen:'Region Tongeren - Sint-Truiden',labelde:'Region Tongern - Sint-Truiden',parentid:'wreg.18',show:'true',sort:'11'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.28',label:'Regio Turnhout - Geel',labelnl:'Regio Turnhout - Geel',labelfr:'Région Turnhout - Geel',labelen:'Region Turnhout - Geel',labelde:'Region Turnhout - Geel',parentid:'wreg.2',show:'true',sort:'12'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.29',label:'Regio Veurne',labelnl:'Regio Veurne',labelfr:'Région Furnes',labelen:'Region Veurne',labelde:'Region Veurne',parentid:'wreg.32',show:'true',sort:'13'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.30',label:'Regio Vilvoorde',labelnl:'Regio Vilvoorde',labelfr:'Région Vilvorde',labelen:'Region Vilvoorde',labelde:'Region Vilvoorde',parentid:'wreg.31',show:'true',sort:'14'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.6',label:'Regio Brussel',labelnl:'Regio Brussel',labelfr:'Région Bruxelles',labelen:'Region Brussels',labelde:'Region Brüssel',parentid:'wreg.5',show:'true',sort:'15'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.7',label:'Regio Dendermonde',labelnl:'Regio Dendermonde',labelfr:'Région Termonde',labelen:'Region Dendermonde',labelde:'Region Dendermonde',parentid:'wreg.22',show:'true',sort:'16'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.8',label:'Regio Diest - Aarschot - Tienen',labelnl:'Regio Diest - Aarschot - Tienen',labelfr:'Région Diest - Aarschot - Tirlemont',labelen:'Region Diest - Aarschot - Tienen',labelde:'Region Diest - Aarschot - Tienen',parentid:'wreg.31',show:'true',sort:'17'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.9',label:'Regio Diksmuide',labelnl:'Regio Diksmuide',labelfr:'Région Dixmude',labelen:'Region Diksmuide',labelde:'Region Diksmuide',parentid:'wreg.32',show:'true',sort:'18'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.10',label:'Regio Eeklo',labelnl:'Regio Eeklo',labelfr:'Région Eeklo',labelen:'Region Eeklo',labelde:'Region Eeklo',parentid:'wreg.22',show:'true',sort:'19'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.11',label:'Regio Gent',labelnl:'Regio Gent',labelfr:'Région Gand',labelen:'Region Ghent',labelde:'Region Gent',parentid:'wreg.22',show:'true',sort:'20'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.12',label:'Regio Halle - Dilbeek',labelnl:'Regio Halle - Dilbeek',labelfr:'Région Hal - Dilbeek',labelen:'Region Halle - Dilbeek',labelde:'Region Halle - Dilbeek',parentid:'wreg.31',show:'true',sort:'21'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.13',label:'Regio Hasselt - Genk',labelnl:'Regio Hasselt - Genk',labelfr:'Région Hasselt - Genk',labelen:'Region Hasselt - Genk',labelde:'Region Hasselt - Genk',parentid:'wreg.18',show:'true',sort:'22'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.14',label:'Regio Ieper',labelnl:'Regio Ieper',labelfr:'Région Ypres',labelen:'Region Ypres',labelde:'Region Ypern',parentid:'wreg.32',show:'true',sort:'23'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.15',label:'Regio Kortrijk',labelnl:'Regio Kortrijk',labelfr:'Région Courtrai',labelen:'Region Kortrijk',labelde:'Region Kortrijk',parentid:'wreg.32',show:'true',sort:'24'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.16',label:'Regio Leuven',labelnl:'Regio Leuven',labelfr:'Région Louvain',labelen:'Region Leuven',labelde:'Region Löwen',parentid:'wreg.31',show:'true',sort:'25'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.17',label:'Regio Lier - Heist-op-den-Berg',labelnl:'Regio Lier - Heist-op-den-Berg',labelfr:'Région Lierre - Heist-op-den-Berg',labelen:'Region Lier - Heist-op-den-Berg',labelde:'Region Lier - Heist-op-den-Berg',parentid:'wreg.2',show:'true',sort:'26'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.33',label:'Regio De Kust',labelnl:'Regio De Kust',labelfr:'Le Littoral',labelen:'The Belgian coast',labelde:'Die Belgische Küste',parentid:'wreg.32',show:'true',sort:'27'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.34',label:'Brussel',labelnl:'Brussel',labelfr:'Bruxelles',labelen:'Brussels',labelde:'Brüssel',parentid:'wreg.6',show:'true',sort:'22'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.35',label:'Halle',labelnl:'Halle',labelfr:'Hal',labelen:'Halle',labelde:'Halle',parentid:'wreg.12',show:'true',sort:'23'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.36',label:'Herne',labelnl:'Herne',labelfr:'Hérinnes',labelen:'Herne',labelde:'Herne',parentid:'wreg.12',show:'true',sort:'24'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.37',label:'Bever',labelnl:'Bever',labelfr:'Biévène',labelen:'Bever',labelde:'Bever',parentid:'wreg.12',show:'true',sort:'25'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.38',label:'Biévène',labelnl:'Biévène',labelfr:'Biévène',labelen:'Bever',labelde:'Bever',parentid:'wreg.12',show:'true',sort:'26'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.39',label:'Hoeilaart',labelnl:'Hoeilaart',labelfr:'Hoeilaart',labelen:'Hoeilaart',labelde:'Hoeilaart',parentid:'wreg.12',show:'true',sort:'27'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.40',label:'Galmaarden',labelnl:'Galmaarden',labelfr:'Gammerages',labelen:'Galmaarden',labelde:'Galmaarden',parentid:'wreg.12',show:'true',sort:'28'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.41',label:'Sint-Pieters-Leeuw',labelnl:'Sint-Pieters-Leeuw',labelfr:'Leeuw-Saint-Pierre',labelen:'Sint-Pieters-Leeuw',labelde:'Sint-Pieters-Leeuw',parentid:'wreg.12',show:'true',sort:'29'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.42',label:'Drogenbos',labelnl:'Drogenbos',labelfr:'Drogenbos',labelen:'Drogenbos',labelde:'Drogenbos',parentid:'wreg.12',show:'true',sort:'30'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.43',label:'Linkebeek',labelnl:'Linkebeek',labelfr:'Linkebeek',labelen:'Linkebeek',labelde:'Linkebeek',parentid:'wreg.12',show:'true',sort:'31'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.44',label:'Sint-Genesius-Rode',labelnl:'Sint-Genesius-Rode',labelfr:'Rhode-Saint-Genèse',labelen:'Sint-Genesius-Rode',labelde:'Sint-Genesius-Rode',parentid:'wreg.12',show:'true',sort:'32'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.45',label:'Beersel',labelnl:'Beersel',labelfr:'Beersel',labelen:'Beersel',labelde:'Beersel',parentid:'wreg.12',show:'true',sort:'33'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.46',label:'Pepingen',labelnl:'Pepingen',labelfr:'Pepingen',labelen:'Pepingen',labelde:'Pepingen',parentid:'wreg.12',show:'true',sort:'34'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.47',label:'Dilbeek',labelnl:'Dilbeek',labelfr:'Dilbeek',labelen:'Dilbeek',labelde:'Dilbeek',parentid:'wreg.12',show:'true',sort:'35'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.48',label:'Asse',labelnl:'Asse',labelfr:'Asse',labelen:'Asse',labelde:'Asse',parentid:'wreg.12',show:'true',sort:'36'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.49',label:'Ternat',labelnl:'Ternat',labelfr:'Ternat',labelen:'Ternat',labelde:'Ternat',parentid:'wreg.12',show:'true',sort:'37'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.50',label:'Opwijk',labelnl:'Opwijk',labelfr:'Opwijk',labelen:'Opwijk',labelde:'Opwijk',parentid:'wreg.12',show:'true',sort:'38'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.51',label:'Lennik',labelnl:'Lennik',labelfr:'Lennik',labelen:'Lennik',labelde:'Lennik',parentid:'wreg.12',show:'true',sort:'39'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.52',label:'Gooik',labelnl:'Gooik',labelfr:'Gooik',labelen:'Gooik',labelde:'Gooik',parentid:'wreg.12',show:'true',sort:'40'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.53',label:'Roosdaal',labelnl:'Roosdaal',labelfr:'Roosdaal',labelen:'Roosdaal',labelde:'Roosdaal',parentid:'wreg.12',show:'true',sort:'41'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.54',label:'Liedekerke',labelnl:'Liedekerke',labelfr:'Liedekerke',labelen:'Liedekerke',labelde:'Liedekerke',parentid:'wreg.12',show:'true',sort:'42'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.55',label:'Wemmel',labelnl:'Wemmel',labelfr:'Wemmel',labelen:'Wemmel',labelde:'Wemmel',parentid:'wreg.12',show:'true',sort:'43'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.56',label:'Merchtem',labelnl:'Merchtem',labelfr:'Merchtem',labelen:'Merchtem',labelde:'Merchtem',parentid:'wreg.12',show:'true',sort:'44'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.57',label:'Affligem',labelnl:'Affligem',labelfr:'Affligem',labelen:'Affligem',labelde:'Affligem',parentid:'wreg.12',show:'true',sort:'45'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.61',label:'Londerzeel',labelnl:'Londerzeel',labelfr:'Londerzeel',labelen:'Londerzeel',labelde:'Londerzeel',parentid:'wreg.12',show:'true',sort:'46'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.58',label:'Vilvoorde',labelnl:'Vilvoorde',labelfr:'Vilvorde',labelen:'Vilvoorde',labelde:'Vilvoorde',parentid:'wreg.30',show:'true',sort:'47'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.59',label:'Steenokkerzeel',labelnl:'Steenokkerzeel',labelfr:'Steenokkerzeel',labelen:'Steenokkerzeel',labelde:'Steenokkerzeel',parentid:'wreg.30',show:'true',sort:'48'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.60',label:'Machelen',labelnl:'Machelen',labelfr:'Machelen',labelen:'Machelen',labelde:'Machelen',parentid:'wreg.30',show:'true',sort:'49'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.62',label:'Grimbergen',labelnl:'Grimbergen',labelfr:'Grimbergen',labelen:'Grimbergen',labelde:'Grimbergen',parentid:'wreg.30',show:'true',sort:'50'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.63',label:'Meise',labelnl:'Meise',labelfr:'Meise',labelen:'Meise',labelde:'Meise',parentid:'wreg.30',show:'true',sort:'51'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.64',label:'Kapelle-Op-Den-Bos',labelnl:'Kapelle-Op-Den-Bos',labelfr:'Kapelle-op-den-Bos',labelen:'Kapelle-op-den-Bos',labelde:'Kapelle-op-den-Bos',parentid:'wreg.30',show:'true',sort:'52'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.65',label:'Kampenhout',labelnl:'Kampenhout',labelfr:'Kampenhout',labelen:'Kampenhout',labelde:'Kampenhout',parentid:'wreg.30',show:'true',sort:'53'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.66',label:'Zaventem',labelnl:'Zaventem',labelfr:'Zaventem',labelen:'Zaventem',labelde:'Zaventem',parentid:'wreg.30',show:'true',sort:'54'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.67',label:'Kraainem',labelnl:'Kraainem',labelfr:'Crainhem',labelen:'Kraainem',labelde:'Kraainem',parentid:'wreg.30',show:'true',sort:'55'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.68',label:'Wezembeek-Oppem',labelnl:'Wezembeek-Oppem',labelfr:'Wezembeek-Oppem',labelen:'Wezembeek-Oppem',labelde:'Wezembeek-Oppem',parentid:'wreg.30',show:'true',sort:'56'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.69',label:'Zemst',labelnl:'Zemst',labelfr:'Zemst',labelen:'Zemst',labelde:'Zemst',parentid:'wreg.30',show:'true',sort:'57'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.70',label:'Antwerpen',labelnl:'Antwerpen',labelfr:'Anvers',labelen:'Antwerp',labelde:'Antwerpen',parentid:'wreg.3',show:'true',sort:'58'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.71',label:'Zwijndrecht',labelnl:'Zwijndrecht',labelfr:'Zwijndrecht',labelen:'Zwijndrecht',labelde:'Zwijndrecht',parentid:'wreg.3',show:'true',sort:'59'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.72',label:'Wijnegem',labelnl:'Wijnegem',labelfr:'Wijnegem',labelen:'Wijnegem',labelde:'Wijnegem',parentid:'wreg.3',show:'true',sort:'60'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.73',label:'Borsbeek',labelnl:'Borsbeek',labelfr:'Borsbeek',labelen:'Borsbeek',labelde:'Borsbeek',parentid:'wreg.3',show:'true',sort:'61'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.74',label:'Wommelgem',labelnl:'Wommelgem',labelfr:'Wommelgem',labelen:'Wommelgem',labelde:'Wommelgem',parentid:'wreg.3',show:'true',sort:'62'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.79',label:'Zandhoven',labelnl:'Zandhoven',labelfr:'Zandhoven',labelen:'Zandhoven',labelde:'Zandhoven',parentid:'wreg.3',show:'true',sort:'63'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.96',label:'Malle',labelnl:'Malle',labelfr:'Malle',labelen:'Malle',labelde:'Malle',parentid:'wreg.3',show:'true',sort:'64'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.106',label:'Ranst',labelnl:'Ranst',labelfr:'Ranst',labelen:'Ranst',labelde:'Ranst',parentid:'wreg.3',show:'true',sort:'65'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.107',label:'Boechout',labelnl:'Boechout',labelfr:'Boechout',labelen:'Boechout',labelde:'Boechout',parentid:'wreg.3',show:'true',sort:'66'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.108',label:'Hove',labelnl:'Hove',labelfr:'Hove',labelen:'Hove',labelde:'Hove',parentid:'wreg.3',show:'true',sort:'67'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.109',label:'Lint',labelnl:'Lint',labelfr:'Lint',labelen:'Lint',labelde:'Lint',parentid:'wreg.3',show:'true',sort:'68'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.110',label:'Kontich',labelnl:'Kontich',labelfr:'Kontich',labelen:'Kontich',labelde:'Kontich',parentid:'wreg.3',show:'true',sort:'69'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.75',label:'Herentals',labelnl:'Herentals',labelfr:'Herentals',labelen:'Herentals',labelde:'Herentals',parentid:'wreg.28',show:'true',sort:'70'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.77',label:'Herselt',labelnl:'Herselt',labelfr:'Herselt',labelen:'Herselt',labelde:'Herselt',parentid:'wreg.28',show:'true',sort:'71'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.78',label:'Hulshout',labelnl:'Hulshout',labelfr:'Hulshout',labelen:'Hulshout',labelde:'Hulshout',parentid:'wreg.28',show:'true',sort:'72'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.80',label:'Olen',labelnl:'Olen',labelfr:'Olen',labelen:'Olen',labelde:'Olen',parentid:'wreg.28',show:'true',sort:'73'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.81',label:'Westerlo',labelnl:'Westerlo',labelfr:'Westerlo',labelen:'Westerlo',labelde:'Westerlo',parentid:'wreg.28',show:'true',sort:'74'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.82',label:'Herenthout',labelnl:'Herenthout',labelfr:'Herenthout',labelen:'Herenthout',labelde:'Herenthout',parentid:'wreg.28',show:'true',sort:'75'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.83',label:'Lille',labelnl:'Lille',labelfr:'Lille',labelen:'Lille',labelde:'Lille',parentid:'wreg.28',show:'true',sort:'76'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.84',label:'Grobbendonk',labelnl:'Grobbendonk',labelfr:'Grobbendonk',labelen:'Grobbendonk',labelde:'Grobbendonk',parentid:'wreg.28',show:'true',sort:'77'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.85',label:'Vorselaar',labelnl:'Vorselaar',labelfr:'Vorselaar',labelen:'Vorselaar',labelde:'Vorselaar',parentid:'wreg.28',show:'true',sort:'78'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.86',label:'Turnhout',labelnl:'Turnhout',labelfr:'Turnhout',labelen:'Turnhout',labelde:'Turnhout',parentid:'wreg.28',show:'true',sort:'79'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.87',label:'Rijkevorsel',labelnl:'Rijkevorsel',labelfr:'Rijkevorsel',labelen:'Rijkevorsel',labelde:'Rijkevorsel',parentid:'wreg.28',show:'true',sort:'80'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.88',label:'Hoogstraten',labelnl:'Hoogstraten',labelfr:'Hoogstraten',labelen:'Hoogstraten',labelde:'Hoogstraten',parentid:'wreg.28',show:'true',sort:'81'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.89',label:'Merksplas',labelnl:'Merksplas',labelfr:'Merksplas',labelen:'Merksplas',labelde:'Merksplas',parentid:'wreg.28',show:'true',sort:'82'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.90',label:'Beerse',labelnl:'Beerse',labelfr:'Beerse',labelen:'Beerse',labelde:'Beerse',parentid:'wreg.28',show:'true',sort:'83'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.91',label:'Vosselaar',labelnl:'Vosselaar',labelfr:'Vosselaar',labelen:'Vosselaar',labelde:'Vosselaar',parentid:'wreg.28',show:'true',sort:'84'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.92',label:'Oud-Turnhout',labelnl:'Oud-Turnhout',labelfr:'Oud-Turnhout',labelen:'Oud-Turnhout',labelde:'Oud-Turnhout',parentid:'wreg.28',show:'true',sort:'85'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.93',label:'Arendonk',labelnl:'Arendonk',labelfr:'Arendonk',labelen:'Arendonk',labelde:'Arendonk',parentid:'wreg.28',show:'true',sort:'86'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.94',label:'Ravels',labelnl:'Ravels',labelfr:'Ravels',labelen:'Ravels',labelde:'Ravels',parentid:'wreg.28',show:'true',sort:'87'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.95',label:'Baarle-Hertog',labelnl:'Baarle-Hertog',labelfr:'Baerle-Duc',labelen:'Baarle-Hertog',labelde:'Baarle-Hertog',parentid:'wreg.28',show:'true',sort:'88'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.97',label:'Mol',labelnl:'Mol',labelfr:'Mol',labelen:'Mol',labelde:'Mol',parentid:'wreg.28',show:'true',sort:'89'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.98',label:'Laakdal',labelnl:'Laakdal',labelfr:'Laakdal',labelen:'Laakdal',labelde:'Laakdal',parentid:'wreg.28',show:'true',sort:'90'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.99',label:'Geel',labelnl:'Geel',labelfr:'Geel',labelen:'Geel',labelde:'Geel',parentid:'wreg.28',show:'true',sort:'91'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.100',label:'Meerhout',labelnl:'Meerhout',labelfr:'Meerhout',labelen:'Meerhout',labelde:'Meerhout',parentid:'wreg.28',show:'true',sort:'92'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.101',label:'Kasterlee',labelnl:'Kasterlee',labelfr:'Kasterlee',labelen:'Kasterlee',labelde:'Kasterlee',parentid:'wreg.28',show:'true',sort:'93'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.102',label:'Retie',labelnl:'Retie',labelfr:'Retie',labelen:'Retie',labelde:'Retie',parentid:'wreg.28',show:'true',sort:'94'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.103',label:'Dessel',labelnl:'Dessel',labelfr:'Dessel',labelen:'Dessel',labelde:'Dessel',parentid:'wreg.28',show:'true',sort:'95'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.104',label:'Balen',labelnl:'Balen',labelfr:'Balen',labelen:'Balen',labelde:'Balen',parentid:'wreg.28',show:'true',sort:'96'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.76',label:'Heist-Op-Den-Berg',labelnl:'Heist-Op-Den-Berg',labelfr:'Heist-op-den-Berg',labelen:'Heist-op-den-Berg',labelde:'Heist-op-den-Berg',parentid:'wreg.17',show:'true',sort:'97'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.105',label:'Lier',labelnl:'Lier',labelfr:'Lierre',labelen:'Lier',labelde:'Lier',parentid:'wreg.17',show:'true',sort:'98'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.111',label:'Nijlen',labelnl:'Nijlen',labelfr:'Nijlen',labelen:'Nijlen',labelde:'Nijlen',parentid:'wreg.17',show:'true',sort:'99'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.112',label:'Duffel',labelnl:'Duffel',labelfr:'Duffel',labelen:'Duffel',labelde:'Duffel',parentid:'wreg.20',show:'true',sort:'100'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.113',label:'Putte',labelnl:'Putte',labelfr:'Putte',labelen:'Putte',labelde:'Putte',parentid:'wreg.17',show:'true',sort:'101'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.114',label:'Berlaar',labelnl:'Berlaar',labelfr:'Berlaar',labelen:'Berlaar',labelde:'Berlaar',parentid:'wreg.17',show:'true',sort:'102'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.115',label:'Hemiksem',labelnl:'Hemiksem',labelfr:'Hemiksem',labelen:'Hemiksem',labelde:'Hemiksem',parentid:'wreg.3',show:'true',sort:'103'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.116',label:'Schelle',labelnl:'Schelle',labelfr:'Schelle',labelen:'Schelle',labelde:'Schelle',parentid:'wreg.3',show:'true',sort:'104'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.117',label:'Aartselaar',labelnl:'Aartselaar',labelfr:'Aartselaar',labelen:'Aartselaar',labelde:'Aartselaar',parentid:'wreg.3',show:'true',sort:'105'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.118',label:'Mortsel',labelnl:'Mortsel',labelfr:'Mortsel',labelen:'Mortsel',labelde:'Mortsel',parentid:'wreg.3',show:'true',sort:'106'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.119',label:'Edegem',labelnl:'Edegem',labelfr:'Edegem',labelen:'Edegem',labelde:'Edegem',parentid:'wreg.3',show:'true',sort:'107'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.120',label:'Mechelen',labelnl:'Mechelen',labelfr:'Malines',labelen:'Mechelen',labelde:'Mechelen',parentid:'wreg.20',show:'true',sort:'108'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.121',label:'Bonheiden',labelnl:'Bonheiden',labelfr:'Bonheiden',labelen:'Bonheiden',labelde:'Bonheiden',parentid:'wreg.20',show:'true',sort:'109'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.122',label:'Willebroek',labelnl:'Willebroek',labelfr:'Willebroek',labelen:'Willebroek',labelde:'Willebroek',parentid:'wreg.20',show:'true',sort:'110'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.123',label:'Rumst',labelnl:'Rumst',labelfr:'Rumst',labelen:'Rumst',labelde:'Rumst',parentid:'wreg.3',show:'true',sort:'111'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.124',label:'Niel',labelnl:'Niel',labelfr:'Niel',labelen:'Niel',labelde:'Niel',parentid:'wreg.3',show:'true',sort:'112'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.125',label:'Boom',labelnl:'Boom',labelfr:'Boom',labelen:'Boom',labelde:'Boom',parentid:'wreg.3',show:'true',sort:'113'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.126',label:'Sint-Katelijne-Waver',labelnl:'Sint-Katelijne-Waver',labelfr:'Wavre-Sainte-Catherine',labelen:'Sint-Katelijne-Waver',labelde:'Sint-Katelijne-Waver',parentid:'wreg.20',show:'true',sort:'114'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.128',label:'Puurs',labelnl:'Puurs',labelfr:'Puurs',labelen:'Puurs',labelde:'Puurs',parentid:'wreg.20',show:'true',sort:'115'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.129',label:'Bornem',labelnl:'Bornem',labelfr:'Bornem',labelen:'Bornem',labelde:'Bornem',parentid:'wreg.20',show:'true',sort:'116'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.130',label:'Sint-Amands',labelnl:'Sint-Amands',labelfr:'Saint-Amand',labelen:'Sint-Amands',labelde:'Sint-Amands',parentid:'wreg.20',show:'true',sort:'117'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.131',label:'Schoten',labelnl:'Schoten',labelfr:'Schoten',labelen:'Schoten',labelde:'Schoten',parentid:'wreg.3',show:'true',sort:'118'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.132',label:'Essen',labelnl:'Essen',labelfr:'Essen',labelen:'Essen',labelde:'Essen',parentid:'wreg.3',show:'true',sort:'119'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.133',label:'Kalmthout',labelnl:'Kalmthout',labelfr:'Kalmthout',labelen:'Kalmthout',labelde:'Kalmthout',parentid:'wreg.3',show:'true',sort:'120'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.134',label:'Brasschaat',labelnl:'Brasschaat',labelfr:'Brasschaat',labelen:'Brasschaat',labelde:'Brasschaat',parentid:'wreg.3',show:'true',sort:'121'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.135',label:'Stabroek',labelnl:'Stabroek',labelfr:'Stabroek',labelen:'Stabroek',labelde:'Stabroek',parentid:'wreg.3',show:'true',sort:'122'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.136',label:'Kapellen',labelnl:'Kapellen',labelfr:'Kapellen',labelen:'Kapellen',labelde:'Kapellen',parentid:'wreg.3',show:'true',sort:'123'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.137',label:'Brecht',labelnl:'Brecht',labelfr:'Brecht',labelen:'Brecht',labelde:'Brecht',parentid:'wreg.3',show:'true',sort:'124'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.138',label:'Schilde',labelnl:'Schilde',labelfr:'Schilde',labelen:'Schilde',labelde:'Schilde',parentid:'wreg.3',show:'true',sort:'125'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.139',label:'Zoersel',labelnl:'Zoersel',labelfr:'Zoersel',labelen:'Zoersel',labelde:'Zoersel',parentid:'wreg.3',show:'true',sort:'126'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.140',label:'Wuustwezel',labelnl:'Wuustwezel',labelfr:'Wuustwezel',labelen:'Wuustwezel',labelde:'Wuustwezel',parentid:'wreg.3',show:'true',sort:'127'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.141',label:'Leuven',labelnl:'Leuven',labelfr:'Louvain',labelen:'Leuven',labelde:'Löwen',parentid:'wreg.16',show:'true',sort:'128'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.142',label:'Herent',labelnl:'Herent',labelfr:'Herent',labelen:'Herent',labelde:'Herent',parentid:'wreg.16',show:'true',sort:'129'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.143',label:'Huldenberg',labelnl:'Huldenberg',labelfr:'Huldenberg',labelen:'Huldenberg',labelde:'Huldenberg',parentid:'wreg.16',show:'true',sort:'130'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.144',label:'Oud-Heverlee',labelnl:'Oud-Heverlee',labelfr:'Oud-Heverlee',labelen:'Oud-Heverlee',labelde:'Oud-Heverlee',parentid:'wreg.16',show:'true',sort:'131'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.145',label:'Bertem',labelnl:'Bertem',labelfr:'Bertem',labelen:'Bertem',labelde:'Bertem',parentid:'wreg.16',show:'true',sort:'132'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.146',label:'Kortenberg',labelnl:'Kortenberg',labelfr:'Kortenberg',labelen:'Kortenberg',labelde:'Kortenberg',parentid:'wreg.16',show:'true',sort:'133'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.147',label:'Tervuren',labelnl:'Tervuren',labelfr:'Tervuren',labelen:'Tervuren',labelde:'Tervuren',parentid:'wreg.16',show:'true',sort:'134'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.148',label:'Overijse',labelnl:'Overijse',labelfr:'Overijse',labelen:'Overijse',labelde:'Overijse',parentid:'wreg.16',show:'true',sort:'135'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.149',label:'Rotselaar',labelnl:'Rotselaar',labelfr:'Rotselaar',labelen:'Rotselaar',labelde:'Rotselaar',parentid:'wreg.16',show:'true',sort:'136'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.150',label:'Tremelo',labelnl:'Tremelo',labelfr:'Tremelo',labelen:'Tremelo',labelde:'Tremelo',parentid:'wreg.16',show:'true',sort:'137'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.151',label:'Begijnendijk',labelnl:'Begijnendijk',labelfr:'Begijnendijk',labelen:'Begijnendijk',labelde:'Begijnendijk',parentid:'wreg.16',show:'true',sort:'138'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.152',label:'Keerbergen',labelnl:'Keerbergen',labelfr:'Keerbergen',labelen:'Keerbergen',labelde:'Keerbergen',parentid:'wreg.16',show:'true',sort:'139'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.153',label:'Haacht',labelnl:'Haacht',labelfr:'Haacht',labelen:'Haacht',labelde:'Haacht',parentid:'wreg.16',show:'true',sort:'140'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.154',label:'Boortmeerbeek',labelnl:'Boortmeerbeek',labelfr:'Boortmeerbeek',labelen:'Boortmeerbeek',labelde:'Boortmeerbeek',parentid:'wreg.16',show:'true',sort:'141'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.155',label:'Aarschot',labelnl:'Aarschot',labelfr:'Aarschot',labelen:'Aarschot',labelde:'Aarschot',parentid:'wreg.8',show:'true',sort:'142'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.156',label:'Lubbeek',labelnl:'Lubbeek',labelfr:'Lubbeek',labelen:'Lubbeek',labelde:'Lubbeek',parentid:'wreg.16',show:'true',sort:'143'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.157',label:'Holsbeek',labelnl:'Holsbeek',labelfr:'Holsbeek',labelen:'Holsbeek',labelde:'Holsbeek',parentid:'wreg.16',show:'true',sort:'144'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.158',label:'Scherpenheuvel-Zichem',labelnl:'Scherpenheuvel-Zichem',labelfr:'Montaigu-Zichem',labelen:'Scherpenheuvel-Zichem',labelde:'Scherpenheuvel-Zichem',parentid:'wreg.8',show:'true',sort:'145'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.159',label:'Diest',labelnl:'Diest',labelfr:'Diest',labelen:'Diest',labelde:'Diest',parentid:'wreg.8',show:'true',sort:'146'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.160',label:'Tienen',labelnl:'Tienen',labelfr:'Tirlemont',labelen:'Tienen',labelde:'Tienen',parentid:'wreg.8',show:'true',sort:'147'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.161',label:'Hoegaarden',labelnl:'Hoegaarden',labelfr:'Hoegaarden',labelen:'Hoegaarden',labelde:'Hoegaarden',parentid:'wreg.8',show:'true',sort:'148'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.163',label:'Linter',labelnl:'Linter',labelfr:'Linter',labelen:'Linter',labelde:'Linter',parentid:'wreg.8',show:'true',sort:'149'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.164',label:'Bierbeek',labelnl:'Bierbeek',labelfr:'Bierbeek',labelen:'Bierbeek',labelde:'Bierbeek',parentid:'wreg.16',show:'true',sort:'150'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.165',label:'Boutersem',labelnl:'Boutersem',labelfr:'Boutersem',labelen:'Boutersem',labelde:'Boutersem',parentid:'wreg.16',show:'true',sort:'151'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.166',label:'Glabbeek',labelnl:'Glabbeek',labelfr:'Glabbeek',labelen:'Glabbeek',labelde:'Glabbeek',parentid:'wreg.8',show:'true',sort:'152'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.167',label:'Tielt-Winge',labelnl:'Tielt-Winge',labelfr:'Tielt-Winge',labelen:'Tielt-Winge',labelde:'Tielt-Winge',parentid:'wreg.8',show:'true',sort:'153'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.168',label:'Landen',labelnl:'Landen',labelfr:'Landen',labelen:'Landen',labelde:'Landen',parentid:'wreg.8',show:'true',sort:'154'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.169',label:'Zoutleeuw',labelnl:'Zoutleeuw',labelfr:'Léau',labelen:'Zoutleeuw',labelde:'Zoutleeuw',parentid:'wreg.8',show:'true',sort:'155'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.170',label:'Geetbets',labelnl:'Geetbets',labelfr:'Geetbets',labelen:'Geetbets',labelde:'Geetbets',parentid:'wreg.8',show:'true',sort:'156'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.171',label:'Bekkevoort',labelnl:'Bekkevoort',labelfr:'Bekkevoort',labelen:'Bekkevoort',labelde:'Bekkevoort',parentid:'wreg.8',show:'true',sort:'157'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.172',label:'Kortenaken',labelnl:'Kortenaken',labelfr:'Kortenaken',labelen:'Kortenaken',labelde:'Kortenaken',parentid:'wreg.8',show:'true',sort:'158'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.173',label:'Hasselt',labelnl:'Hasselt',labelfr:'Hasselt',labelen:'Hasselt',labelde:'Hasselt',parentid:'wreg.13',show:'true',sort:'159'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.174',label:'Zonhoven',labelnl:'Zonhoven',labelfr:'Zonhoven',labelen:'Zonhoven',labelde:'Zonhoven',parentid:'wreg.13',show:'true',sort:'160'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.175',label:'Houthalen-Helchteren',labelnl:'Houthalen-Helchteren',labelfr:'Houthalen-Helchteren',labelen:'Houthalen-Helchteren',labelde:'Houthalen-Helchteren',parentid:'wreg.19',show:'true',sort:'161'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.176',label:'Herk-De-Stad',labelnl:'Herk-De-Stad',labelfr:'Herck-la-Ville',labelen:'Herk-de-Stad',labelde:'Herk-de-Stad',parentid:'wreg.13',show:'true',sort:'162'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.177',label:'Halen',labelnl:'Halen',labelfr:'Halen',labelen:'Halen',labelde:'Halen',parentid:'wreg.13',show:'true',sort:'163'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.178',label:'Heusden-Zolder',labelnl:'Heusden-Zolder',labelfr:'Heusden-Zolder',labelen:'Heusden-Zolder',labelde:'Heusden-Zolder',parentid:'wreg.13',show:'true',sort:'164'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.179',label:'Lummen',labelnl:'Lummen',labelfr:'Lummen',labelen:'Lummen',labelde:'Lummen',parentid:'wreg.13',show:'true',sort:'165'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.180',label:'Alken',labelnl:'Alken',labelfr:'Alken',labelen:'Alken',labelde:'Alken',parentid:'wreg.27',show:'true',sort:'166'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.181',label:'Beringen',labelnl:'Beringen',labelfr:'Beringen',labelen:'Beringen',labelde:'Beringen',parentid:'wreg.13',show:'true',sort:'167'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.182',label:'Diepenbeek',labelnl:'Diepenbeek',labelfr:'Diepenbeek',labelen:'Diepenbeek',labelde:'Diepenbeek',parentid:'wreg.13',show:'true',sort:'168'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.183',label:'Genk',labelnl:'Genk',labelfr:'Genk',labelen:'Genk',labelde:'Genk',parentid:'wreg.13',show:'true',sort:'169'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.184',label:'Lanaken',labelnl:'Lanaken',labelfr:'Lanaken',labelen:'Lanaken',labelde:'Lanaken',parentid:'wreg.27',show:'true',sort:'170'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.185',label:'Maasmechelen',labelnl:'Maasmechelen',labelfr:'Maasmechelen',labelen:'Maasmechelen',labelde:'Maasmechelen',parentid:'wreg.27',show:'true',sort:'171'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.186',label:'Kinrooi',labelnl:'Kinrooi',labelfr:'Kinrooi',labelen:'Kinrooi',labelde:'Kinrooi',parentid:'wreg.19',show:'true',sort:'172'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.187',label:'Dilsen-Stokkem',labelnl:'Dilsen-Stokkem',labelfr:'Dilsen-Stokkem',labelen:'Dilsen-Stokkem',labelde:'Dilsen-Stokkem',parentid:'wreg.19',show:'true',sort:'173'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.188',label:'Opglabbeek',labelnl:'Opglabbeek',labelfr:'Opglabbeek',labelen:'Opglabbeek',labelde:'Opglabbeek',parentid:'wreg.13',show:'true',sort:'174'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.189',label:'As',labelnl:'As',labelfr:'As',labelen:'As',labelde:'As',parentid:'wreg.13',show:'true',sort:'175'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.190',label:'Meeuwen-Gruitrode',labelnl:'Meeuwen-Gruitrode',labelfr:'Meeuwen-Gruitrode',labelen:'Meeuwen-Gruitrode',labelde:'Meeuwen-Gruitrode',parentid:'wreg.19',show:'true',sort:'176'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.191',label:'Maaseik',labelnl:'Maaseik',labelfr:'Maaseik',labelen:'Maaseik',labelde:'Maaseik',parentid:'wreg.19',show:'true',sort:'177'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.192',label:'Zutendaal',labelnl:'Zutendaal',labelfr:'Zutendaal',labelen:'Zutendaal',labelde:'Zutendaal',parentid:'wreg.13',show:'true',sort:'178'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.193',label:'Tongeren',labelnl:'Tongeren',labelfr:'Tongres',labelen:'Tongeren',labelde:'Tongern',parentid:'wreg.27',show:'true',sort:'179'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.194',label:'Herstappe',labelnl:'Herstappe',labelfr:'Herstappe',labelen:'Herstappe',labelde:'Herstappe',parentid:'wreg.27',show:'true',sort:'180'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.195',label:'Kortessem',labelnl:'Kortessem',labelfr:'Kortessem',labelen:'Kortessem',labelde:'Kortessem',parentid:'wreg.27',show:'true',sort:'181'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.196',label:'Hoeselt',labelnl:'Hoeselt',labelfr:'Hoeselt',labelen:'Hoeselt',labelde:'Hoeselt',parentid:'wreg.27',show:'true',sort:'182'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.197',label:'Bilzen',labelnl:'Bilzen',labelfr:'Bilzen',labelen:'Bilzen',labelde:'Bilzen',parentid:'wreg.27',show:'true',sort:'183'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.198',label:'Riemst',labelnl:'Riemst',labelfr:'Riemst',labelen:'Riemst',labelde:'Riemst',parentid:'wreg.27',show:'true',sort:'184'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.199',label:'Voeren',labelnl:'Voeren',labelfr:'Fourons',labelen:'Voeren',labelde:'Voeren',parentid:'wreg.27',show:'true',sort:'185'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.200',label:'Sint-Truiden',labelnl:'Sint-Truiden',labelfr:'Saint-Trond',labelen:'Sint-Truiden',labelde:'Sint-Truiden',parentid:'wreg.27',show:'true',sort:'186'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.201',label:'Wellen',labelnl:'Wellen',labelfr:'Wellen',labelen:'Wellen',labelde:'Wellen',parentid:'wreg.27',show:'true',sort:'187'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.202',label:'Borgloon',labelnl:'Borgloon',labelfr:'Looz',labelen:'Borgloon',labelde:'Borgloon',parentid:'wreg.27',show:'true',sort:'188'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.203',label:'Nieuwerkerken',labelnl:'Nieuwerkerken',labelfr:'Nieuwerkerken',labelen:'Nieuwerkerken',labelde:'Nieuwerkerken',parentid:'wreg.13',show:'true',sort:'189'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.204',label:'Heers',labelnl:'Heers',labelfr:'Heers',labelen:'Heers',labelde:'Heers',parentid:'wreg.27',show:'true',sort:'190'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.205',label:'Gingelom',labelnl:'Gingelom',labelfr:'Gingelom',labelen:'Gingelom',labelde:'Gingelom',parentid:'wreg.27',show:'true',sort:'191'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.206',label:'Overpelt',labelnl:'Overpelt',labelfr:'Overpelt',labelen:'Overpelt',labelde:'Overpelt',parentid:'wreg.19',show:'true',sort:'192'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.207',label:'Neerpelt',labelnl:'Neerpelt',labelfr:'Neerpelt',labelen:'Neerpelt',labelde:'Neerpelt',parentid:'wreg.19',show:'true',sort:'193'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.208',label:'Lommel',labelnl:'Lommel',labelfr:'Lommel',labelen:'Lommel',labelde:'Lommel',parentid:'wreg.19',show:'true',sort:'194'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.209',label:'Hamont-Achel',labelnl:'Hamont-Achel',labelfr:'Hamont-Achel',labelen:'Hamont-Achel',labelde:'Hamont-Achel',parentid:'wreg.19',show:'true',sort:'195'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.210',label:'Hechtel-Eksel',labelnl:'Hechtel-Eksel',labelfr:'Hechtel-Eksel',labelen:'Hechtel-Eksel',labelde:'Hechtel-Eksel',parentid:'wreg.19',show:'true',sort:'196'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.211',label:'Ham',labelnl:'Ham',labelfr:'Ham',labelen:'Ham',labelde:'Ham',parentid:'wreg.13',show:'true',sort:'197'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.212',label:'Bocholt',labelnl:'Bocholt',labelfr:'Bocholt',labelen:'Bocholt',labelde:'Bocholt',parentid:'wreg.19',show:'true',sort:'198'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.213',label:'Bree',labelnl:'Bree',labelfr:'Brée',labelen:'Bree',labelde:'Bree',parentid:'wreg.19',show:'true',sort:'199'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.214',label:'Leopoldsburg',labelnl:'Leopoldsburg',labelfr:'Bourg-Léopold',labelen:'Leopoldsburg',labelde:'Leopoldsburg',parentid:'wreg.13',show:'true',sort:'200'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.215',label:'Tessenderlo',labelnl:'Tessenderlo',labelfr:'Tessenderlo',labelen:'Tessenderlo',labelde:'Tessenderlo',parentid:'wreg.13',show:'true',sort:'201'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.216',label:'Peer',labelnl:'Peer',labelfr:'Peer',labelen:'Peer',labelde:'Peer',parentid:'wreg.19',show:'true',sort:'202'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.217',label:'Brugge',labelnl:'Brugge',labelfr:'Bruges',labelen:'Bruges',labelde:'Brügge',parentid:'wreg.4',show:'true',sort:'203'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.218',label:'Oostkamp',labelnl:'Oostkamp',labelfr:'Oostkamp',labelen:'Oostkamp',labelde:'Oostkamp',parentid:'wreg.4',show:'true',sort:'204'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.219',label:'Zedelgem',labelnl:'Zedelgem',labelfr:'Zedelgem',labelen:'Zedelgem',labelde:'Zedelgem',parentid:'wreg.4',show:'true',sort:'205'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.220',label:'Knokke-Heist',labelnl:'Knokke-Heist',labelfr:'Knokke-Heist',labelen:'Knokke-Heist',labelde:'Knokke-Heist',parentid:'wreg.4',show:'true',sort:'206'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.221',label:'Damme',labelnl:'Damme',labelfr:'Damme',labelen:'Damme',labelde:'Damme',parentid:'wreg.4',show:'true',sort:'207'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.222',label:'Blankenberge',labelnl:'Blankenberge',labelfr:'Blankenberge',labelen:'Blankenberge',labelde:'Blankenberge',parentid:'wreg.4',show:'true',sort:'208'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.223',label:'Zuienkerke',labelnl:'Zuienkerke',labelfr:'Zuienkerke',labelen:'Zuienkerke',labelde:'Zuienkerke',parentid:'wreg.4',show:'true',sort:'209'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.224',label:'Oostende',labelnl:'Oostende',labelfr:'Ostende',labelen:'Ostend',labelde:'Ostende',parentid:'wreg.33',show:'true',sort:'210'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.225',label:'De Haan',labelnl:'De Haan',labelfr:'Le Coq',labelen:'De Haan',labelde:'De Haan',parentid:'wreg.21',show:'true',sort:'211'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.226',label:'Middelkerke',labelnl:'Middelkerke',labelfr:'Middelkerke',labelen:'Middelkerke',labelde:'Middelkerke',parentid:'wreg.33',show:'true',sort:'212'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.227',label:'Bredene',labelnl:'Bredene',labelfr:'Bredene',labelen:'Bredene',labelde:'Bredene',parentid:'wreg.21',show:'true',sort:'213'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.228',label:'Oudenburg',labelnl:'Oudenburg',labelfr:'Oudenburg',labelen:'Oudenburg',labelde:'Oudenburg',parentid:'wreg.21',show:'true',sort:'214'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.229',label:'Gistel',labelnl:'Gistel',labelfr:'Gistel',labelen:'Gistel',labelde:'Gistel',parentid:'wreg.21',show:'true',sort:'215'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.230',label:'Ichtegem',labelnl:'Ichtegem',labelfr:'Ichtegem',labelen:'Ichtegem',labelde:'Ichtegem',parentid:'wreg.4',show:'true',sort:'216'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.231',label:'Jabbeke',labelnl:'Jabbeke',labelfr:'Jabbeke',labelen:'Jabbeke',labelde:'Jabbeke',parentid:'wreg.4',show:'true',sort:'217'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.232',label:'Kortrijk',labelnl:'Kortrijk',labelfr:'Courtrai',labelen:'Kortrijk',labelde:'Kortrijk',parentid:'wreg.15',show:'true',sort:'218'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.233',label:'Kuurne',labelnl:'Kuurne',labelfr:'Cuerne',labelen:'Kuurne',labelde:'Kuurne',parentid:'wreg.15',show:'true',sort:'219'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.234',label:'Harelbeke',labelnl:'Harelbeke',labelfr:'Harelbeke',labelen:'Harelbeke',labelde:'Harelbeke',parentid:'wreg.15',show:'true',sort:'220'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.235',label:'Deerlijk',labelnl:'Deerlijk',labelfr:'Deerlijk',labelen:'Deerlijk',labelde:'Deerlijk',parentid:'wreg.15',show:'true',sort:'221'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.236',label:'Zwevegem',labelnl:'Zwevegem',labelfr:'Zwevegem',labelen:'Zwevegem',labelde:'Zwevegem',parentid:'wreg.15',show:'true',sort:'222'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.237',label:'Wevelgem',labelnl:'Wevelgem',labelfr:'Wevelgem',labelen:'Wevelgem',labelde:'Wevelgem',parentid:'wreg.15',show:'true',sort:'223'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.238',label:'Anzegem',labelnl:'Anzegem',labelfr:'Anzegem',labelen:'Anzegem',labelde:'Anzegem',parentid:'wreg.15',show:'true',sort:'224'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.239',label:'Avelgem',labelnl:'Avelgem',labelfr:'Avelgem',labelen:'Avelgem',labelde:'Avelgem',parentid:'wreg.15',show:'true',sort:'225'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.240',label:'Spiere-Helkijn',labelnl:'Spiere-Helkijn',labelfr:'Espierres-Helchin',labelen:'Spiere-Helkijn',labelde:'Spiere-Helkijn',parentid:'wreg.15',show:'true',sort:'226'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.241',label:'Diksmuide',labelnl:'Diksmuide',labelfr:'Dixmude',labelen:'Diksmuide',labelde:'Diksmuide',parentid:'wreg.9',show:'true',sort:'227'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.242',label:'Kortemark',labelnl:'Kortemark',labelfr:'Kortemark',labelen:'Kortemark',labelde:'Kortemark',parentid:'wreg.9',show:'true',sort:'228'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.243',label:'Nieuwpoort',labelnl:'Nieuwpoort',labelfr:'Nieuport',labelen:'Nieuwpoort',labelde:'Nieuwpoort',parentid:'wreg.33',show:'true',sort:'229'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.244',label:'Veurne',labelnl:'Veurne',labelfr:'Furnes',labelen:'Veurne',labelde:'Veurne',parentid:'wreg.29',show:'true',sort:'230'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.245',label:'Vleteren',labelnl:'Vleteren',labelfr:'Vleteren',labelen:'Vleteren',labelde:'Vleteren',parentid:'wreg.14',show:'true',sort:'231'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.246',label:'Lo-Reninge',labelnl:'Lo-Reninge',labelfr:'Lo-Reninge',labelen:'Lo-Reninge',labelde:'Lo-Reninge',parentid:'wreg.9',show:'true',sort:'232'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.247',label:'Houthulst',labelnl:'Houthulst',labelfr:'Houthulst',labelen:'Houthulst',labelde:'Houthulst',parentid:'wreg.9',show:'true',sort:'233'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.248',label:'De Panne',labelnl:'De Panne',labelfr:'La Panne',labelen:'De Panne',labelde:'De Panne',parentid:'wreg.29',show:'true',sort:'234'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.249',label:'Koksijde',labelnl:'Koksijde',labelfr:'Coxyde',labelen:'Koksijde',labelde:'Koksijde',parentid:'wreg.33',show:'true',sort:'235'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.250',label:'Koekelare',labelnl:'Koekelare',labelfr:'Koekelare',labelen:'Koekelare',labelde:'Koekelare',parentid:'wreg.9',show:'true',sort:'236'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.251',label:'Alveringem',labelnl:'Alveringem',labelfr:'Alveringem',labelen:'Alveringem',labelde:'Alveringem',parentid:'wreg.29',show:'true',sort:'237'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.252',label:'Tielt',labelnl:'Tielt',labelfr:'Tielt',labelen:'Tielt',labelde:'Tielt',parentid:'wreg.26',show:'true',sort:'238'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.253',label:'Wielsbeke',labelnl:'Wielsbeke',labelfr:'Wielsbeke',labelen:'Wielsbeke',labelde:'Wielsbeke',parentid:'wreg.26',show:'true',sort:'239'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.254',label:'Dentergem',labelnl:'Dentergem',labelfr:'Dentergem',labelen:'Dentergem',labelde:'Dentergem',parentid:'wreg.26',show:'true',sort:'240'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.255',label:'Beernem',labelnl:'Beernem',labelfr:'Beernem',labelen:'Beernem',labelde:'Beernem',parentid:'wreg.4',show:'true',sort:'241'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.256',label:'Pittem',labelnl:'Pittem',labelfr:'Pittem',labelen:'Pittem',labelde:'Pittem',parentid:'wreg.26',show:'true',sort:'242'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.257',label:'Wingene',labelnl:'Wingene',labelfr:'Wingene',labelen:'Wingene',labelde:'Wingene',parentid:'wreg.26',show:'true',sort:'243'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.258',label:'Ruiselede',labelnl:'Ruiselede',labelfr:'Ruiselede',labelen:'Ruiselede',labelde:'Ruiselede',parentid:'wreg.26',show:'true',sort:'244'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.259',label:'Meulebeke',labelnl:'Meulebeke',labelfr:'Meulebeke',labelen:'Meulebeke',labelde:'Meulebeke',parentid:'wreg.26',show:'true',sort:'245'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.260',label:'Ingelmunster',labelnl:'Ingelmunster',labelfr:'Ingelmunster',labelen:'Ingelmunster',labelde:'Ingelmunster',parentid:'wreg.24',show:'true',sort:'246'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.261',label:'Oostrozebeke',labelnl:'Oostrozebeke',labelfr:'Oostrozebeke',labelen:'Oostrozebeke',labelde:'Oostrozebeke',parentid:'wreg.26',show:'true',sort:'247'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.262',label:'Waregem',labelnl:'Waregem',labelfr:'Waregem',labelen:'Waregem',labelde:'Waregem',parentid:'wreg.15',show:'true',sort:'248'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.263',label:'Roeselare',labelnl:'Roeselare',labelfr:'Roulers',labelen:'Roeselare',labelde:'Roeselare',parentid:'wreg.24',show:'true',sort:'249'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.264',label:'Lichtervelde',labelnl:'Lichtervelde',labelfr:'Lichtervelde',labelen:'Lichtervelde',labelde:'Lichtervelde',parentid:'wreg.24',show:'true',sort:'250'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.265',label:'Torhout',labelnl:'Torhout',labelfr:'Torhout',labelen:'Torhout',labelde:'Torhout',parentid:'wreg.4',show:'true',sort:'251'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.266',label:'Hooglede',labelnl:'Hooglede',labelfr:'Hooglede',labelen:'Hooglede',labelde:'Hooglede',parentid:'wreg.24',show:'true',sort:'252'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.267',label:'Staden',labelnl:'Staden',labelfr:'Staden',labelen:'Staden',labelde:'Staden',parentid:'wreg.24',show:'true',sort:'253'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.268',label:'Ardooie',labelnl:'Ardooie',labelfr:'Ardooie',labelen:'Ardooie',labelde:'Ardooie',parentid:'wreg.26',show:'true',sort:'254'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.269',label:'Lendelede',labelnl:'Lendelede',labelfr:'Lendelede',labelen:'Lendelede',labelde:'Lendelede',parentid:'wreg.15',show:'true',sort:'255'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.270',label:'Izegem',labelnl:'Izegem',labelfr:'Izegem',labelen:'Izegem',labelde:'Izegem',parentid:'wreg.24',show:'true',sort:'256'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.271',label:'Ledegem',labelnl:'Ledegem',labelfr:'Ledegem',labelen:'Ledegem',labelde:'Ledegem',parentid:'wreg.24',show:'true',sort:'257'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.272',label:'Moorslede',labelnl:'Moorslede',labelfr:'Moorslede',labelen:'Moorslede',labelde:'Moorslede',parentid:'wreg.24',show:'true',sort:'258'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.273',label:'Ieper',labelnl:'Ieper',labelfr:'Ypres',labelen:'Ypres',labelde:'Ypern',parentid:'wreg.14',show:'true',sort:'259'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.274',label:'Langemark-Poelkapelle',labelnl:'Langemark-Poelkapelle',labelfr:'Langemark-Poelkapelle',labelen:'Langemark-Poelkapelle',labelde:'Langemark-Poelkapelle',parentid:'wreg.14',show:'true',sort:'260'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.275',label:'Menen',labelnl:'Menen',labelfr:'Menin',labelen:'Menen',labelde:'Menen',parentid:'wreg.15',show:'true',sort:'261'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.276',label:'Wervik',labelnl:'Wervik',labelfr:'Wervik',labelen:'Wervik',labelde:'Wervik',parentid:'wreg.15',show:'true',sort:'262'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.277',label:'Heuvelland',labelnl:'Heuvelland',labelfr:'Heuvelland',labelen:'Heuvelland',labelde:'Heuvelland',parentid:'wreg.14',show:'true',sort:'263'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.278',label:'Mesen',labelnl:'Mesen',labelfr:'Messines',labelen:'Mesen',labelde:'Mesen',parentid:'wreg.14',show:'true',sort:'264'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.279',label:'Messines',labelnl:'Messines',labelfr:'Messines',labelen:'Mesen',labelde:'Mesen',parentid:'wreg.14',show:'true',sort:'265'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.280',label:'Poperinge',labelnl:'Poperinge',labelfr:'Poperinghe',labelen:'Poperinge',labelde:'Poperinge',parentid:'wreg.14',show:'true',sort:'266'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.281',label:'Zonnebeke',labelnl:'Zonnebeke',labelfr:'Zonnebeke',labelen:'Zonnebeke',labelde:'Zonnebeke',parentid:'wreg.14',show:'true',sort:'267'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.282',label:'Gent',labelnl:'Gent',labelfr:'Gand',labelen:'Ghent',labelde:'Gent',parentid:'wreg.11',show:'true',sort:'268'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.283',label:'Zelzate',labelnl:'Zelzate',labelfr:'Zelzate',labelen:'Zelzate',labelde:'Zelzate',parentid:'wreg.10',show:'true',sort:'269'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.284',label:'Destelbergen',labelnl:'Destelbergen',labelfr:'Destelbergen',labelen:'Destelbergen',labelde:'Destelbergen',parentid:'wreg.11',show:'true',sort:'270'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.285',label:'Lochristi',labelnl:'Lochristi',labelfr:'Lochristi',labelen:'Lochristi',labelde:'Lochristi',parentid:'wreg.11',show:'true',sort:'271'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.286',label:'Melle',labelnl:'Melle',labelfr:'Melle',labelen:'Melle',labelde:'Melle',parentid:'wreg.11',show:'true',sort:'272'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.287',label:'Sint-Niklaas',labelnl:'Sint-Niklaas',labelfr:'Saint-Nicolas',labelen:'Sint-Niklaas',labelde:'Sint-Niklaas',parentid:'wreg.25',show:'true',sort:'273'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.288',label:'Beveren-Waas',labelnl:'Beveren-Waas',labelfr:'Beveren',labelen:'Beveren',labelde:'Beveren',parentid:'wreg.25',show:'true',sort:'274'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.289',label:'Temse',labelnl:'Temse',labelfr:'Tamise',labelen:'Temse',labelde:'Temse',parentid:'wreg.25',show:'true',sort:'275'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.290',label:'Kruibeke',labelnl:'Kruibeke',labelfr:'Kruibeke',labelen:'Kruibeke',labelde:'Kruibeke',parentid:'wreg.25',show:'true',sort:'276'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.291',label:'Lokeren',labelnl:'Lokeren',labelfr:'Lokeren',labelen:'Lokeren',labelde:'Lokeren',parentid:'wreg.25',show:'true',sort:'277'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.292',label:'Sint-Gillis-Waas',labelnl:'Sint-Gillis-Waas',labelfr:'Saint-Gilles-Waes',labelen:'Sint-Gillis-Waas',labelde:'Sint-Gillis-Waas',parentid:'wreg.25',show:'true',sort:'278'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.293',label:'Moerbeke-Waas',labelnl:'Moerbeke-Waas',labelfr:'Moerbeke-Waas',labelen:'Moerbeke-Waas',labelde:'Moerbeke-Waas',parentid:'wreg.11',show:'true',sort:'279'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.294',label:'Wachtebeke',labelnl:'Wachtebeke',labelfr:'Wachtebeke',labelen:'Wachtebeke',labelde:'Wachtebeke',parentid:'wreg.11',show:'true',sort:'280'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.295',label:'Stekene',labelnl:'Stekene',labelfr:'Stekene',labelen:'Stekene',labelde:'Stekene',parentid:'wreg.25',show:'true',sort:'281'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.296',label:'Dendermonde',labelnl:'Dendermonde',labelfr:'Termonde',labelen:'Dendermonde',labelde:'Dendermonde',parentid:'wreg.7',show:'true',sort:'282'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.297',label:'Hamme',labelnl:'Hamme',labelfr:'Hamme',labelen:'Hamme',labelde:'Hamme',parentid:'wreg.7',show:'true',sort:'283'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.298',label:'Wetteren',labelnl:'Wetteren',labelfr:'Wetteren',labelen:'Wetteren',labelde:'Wetteren',parentid:'wreg.7',show:'true',sort:'284'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.299',label:'Zele',labelnl:'Zele',labelfr:'Zele',labelen:'Zele',labelde:'Zele',parentid:'wreg.7',show:'true',sort:'285'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.300',label:'Waasmunster',labelnl:'Waasmunster',labelfr:'Waasmunster',labelen:'Waasmunster',labelde:'Waasmunster',parentid:'wreg.7',show:'true',sort:'286'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.301',label:'Buggenhout',labelnl:'Buggenhout',labelfr:'Buggenhout',labelen:'Buggenhout',labelde:'Buggenhout',parentid:'wreg.7',show:'true',sort:'287'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.302',label:'Wichelen',labelnl:'Wichelen',labelfr:'Wichelen',labelen:'Wichelen',labelde:'Wichelen',parentid:'wreg.7',show:'true',sort:'288'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.303',label:'Laarne',labelnl:'Laarne',labelfr:'Laarne',labelen:'Laarne',labelde:'Laarne',parentid:'wreg.7',show:'true',sort:'289'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.304',label:'Lebbeke',labelnl:'Lebbeke',labelfr:'Lebbeke',labelen:'Lebbeke',labelde:'Lebbeke',parentid:'wreg.7',show:'true',sort:'290'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.305',label:'Berlare',labelnl:'Berlare',labelfr:'Berlare',labelen:'Berlare',labelde:'Berlare',parentid:'wreg.7',show:'true',sort:'291'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.306',label:'Aalst',labelnl:'Aalst',labelfr:'Alost',labelen:'Aalst',labelde:'Aalst',parentid:'wreg.1',show:'true',sort:'292'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.307',label:'Lede',labelnl:'Lede',labelfr:'Lede',labelen:'Lede',labelde:'Lede',parentid:'wreg.1',show:'true',sort:'293'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.309',label:'Ninove',labelnl:'Ninove',labelfr:'Ninove',labelen:'Ninove',labelde:'Ninove',parentid:'wreg.1',show:'true',sort:'294'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.310',label:'Erpe-Mere',labelnl:'Erpe-Mere',labelfr:'Erpe-Mere',labelen:'Erpe-Mere',labelde:'Erpe-Mere',parentid:'wreg.1',show:'true',sort:'295'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.311',label:'Haaltert',labelnl:'Haaltert',labelfr:'Haaltert',labelen:'Haaltert',labelde:'Haaltert',parentid:'wreg.1',show:'true',sort:'296'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.312',label:'Denderleeuw',labelnl:'Denderleeuw',labelfr:'Denderleeuw',labelen:'Denderleeuw',labelde:'Denderleeuw',parentid:'wreg.1',show:'true',sort:'297'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.313',label:'Geraardsbergen',labelnl:'Geraardsbergen',labelfr:'Grammont',labelen:'Geraardsbergen',labelde:'Geraardsbergen',parentid:'wreg.1',show:'true',sort:'298'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.314',label:'Sint-Lievens-Houtem',labelnl:'Sint-Lievens-Houtem',labelfr:'Hautem-Saint-Liévin',labelen:'Sint-Lievens-Houtem',labelde:'Sint-Lievens-Houtem',parentid:'wreg.1',show:'true',sort:'299'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.315',label:'Herzele',labelnl:'Herzele',labelfr:'Herzele',labelen:'Herzele',labelde:'Herzele',parentid:'wreg.1',show:'true',sort:'300'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.316',label:'Lierde',labelnl:'Lierde',labelfr:'Lierde',labelen:'Lierde',labelde:'Lierde',parentid:'wreg.23',show:'true',sort:'301'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.318',label:'Ronse',labelnl:'Ronse',labelfr:'Renaix',labelen:'Ronse',labelde:'Ronse',parentid:'wreg.23',show:'true',sort:'303'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.319',label:'Zottegem',labelnl:'Zottegem',labelfr:'Zottegem',labelen:'Zottegem',labelde:'Zottegem',parentid:'wreg.1',show:'true',sort:'304'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.320',label:'Zwalm',labelnl:'Zwalm',labelfr:'Zwalin',labelen:'Zwalm',labelde:'Zwalm',parentid:'wreg.23',show:'true',sort:'305'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.321',label:'Brakel',labelnl:'Brakel',labelfr:'Bracle',labelen:'Brakel',labelde:'Brakel',parentid:'wreg.23',show:'true',sort:'306'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.322',label:'Horebeke',labelnl:'Horebeke',labelfr:'Horebeke',labelen:'Horebeke',labelde:'Horebeke',parentid:'wreg.23',show:'true',sort:'307'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.323',label:'Maarkedal',labelnl:'Maarkedal',labelfr:'Maarkedal',labelen:'Maarkedal',labelde:'Maarkedal',parentid:'wreg.23',show:'true',sort:'308'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.324',label:'Kluisbergen',labelnl:'Kluisbergen',labelfr:'Kluisbergen',labelen:'Kluisbergen',labelde:'Kluisbergen',parentid:'wreg.23',show:'true',sort:'309'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.325',label:'Oudenaarde',labelnl:'Oudenaarde',labelfr:'Audenarde',labelen:'Oudenaarde',labelde:'Oudenaarde',parentid:'wreg.23',show:'true',sort:'310'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.326',label:'Zingem',labelnl:'Zingem',labelfr:'Zingem',labelen:'Zingem',labelde:'Zingem',parentid:'wreg.23',show:'true',sort:'311'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.327',label:'Kruishoutem',labelnl:'Kruishoutem',labelfr:'Kruishoutem',labelen:'Kruishoutem',labelde:'Kruishoutem',parentid:'wreg.23',show:'true',sort:'312'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.328',label:'Wortegem-Petegem',labelnl:'Wortegem-Petegem',labelfr:'Wortegem-Petegem',labelen:'Wortegem-Petegem',labelde:'Wortegem-Petegem',parentid:'wreg.23',show:'true',sort:'313'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.329',label:'Deinze',labelnl:'Deinze',labelfr:'Deinze',labelen:'Deinze',labelde:'Deinze',parentid:'wreg.11',show:'true',sort:'314'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.330',label:'Nazareth',labelnl:'Nazareth',labelfr:'Nazareth',labelen:'Nazareth',labelde:'Nazareth',parentid:'wreg.11',show:'true',sort:'315'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.331',label:'Merelbeke',labelnl:'Merelbeke',labelfr:'Merelbeke',labelen:'Merelbeke',labelde:'Merelbeke',parentid:'wreg.11',show:'true',sort:'316'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.332',label:'Sint-Martens-Latem',labelnl:'Sint-Martens-Latem',labelfr:'Laethem-Saint-Martin',labelen:'Sint-Martens-Latem',labelde:'Sint-Martens-Latem',parentid:'wreg.11',show:'true',sort:'317'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.333',label:'De Pinte',labelnl:'De Pinte',labelfr:'De Pinte',labelen:'De Pinte',labelde:'De Pinte',parentid:'wreg.11',show:'true',sort:'318'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.334',label:'Nevele',labelnl:'Nevele',labelfr:'Nevele',labelen:'Nevele',labelde:'Nevele',parentid:'wreg.11',show:'true',sort:'319'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.335',label:'Oosterzele',labelnl:'Oosterzele',labelfr:'Oosterzele',labelen:'Oosterzele',labelde:'Oosterzele',parentid:'wreg.11',show:'true',sort:'320'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.336',label:'Zulte',labelnl:'Zulte',labelfr:'Zulte',labelen:'Zulte',labelde:'Zulte',parentid:'wreg.11',show:'true',sort:'321'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.337',label:'Aalter',labelnl:'Aalter',labelfr:'Aalter',labelen:'Aalter',labelde:'Aalter',parentid:'wreg.11',show:'true',sort:'322'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.338',label:'Gavere',labelnl:'Gavere',labelfr:'Gavere',labelen:'Gavere',labelde:'Gavere',parentid:'wreg.11',show:'true',sort:'323'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.339',label:'Eeklo',labelnl:'Eeklo',labelfr:'Eeklo',labelen:'Eeklo',labelde:'Eeklo',parentid:'wreg.10',show:'true',sort:'324'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.340',label:'Knesselare',labelnl:'Knesselare',labelfr:'Knesselare',labelen:'Knesselare',labelde:'Knesselare',parentid:'wreg.11',show:'true',sort:'325'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.341',label:'Lovendegem',labelnl:'Lovendegem',labelfr:'Lovendegem',labelen:'Lovendegem',labelde:'Lovendegem',parentid:'wreg.11',show:'true',sort:'326'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.342',label:'Zomergem',labelnl:'Zomergem',labelfr:'Zomergem',labelen:'Zomergem',labelde:'Zomergem',parentid:'wreg.11',show:'true',sort:'327'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.343',label:'Evergem',labelnl:'Evergem',labelfr:'Evergem',labelen:'Evergem',labelde:'Evergem',parentid:'wreg.11',show:'true',sort:'328'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.344',label:'Waarschoot',labelnl:'Waarschoot',labelfr:'Waarschoot',labelen:'Waarschoot',labelde:'Waarschoot',parentid:'wreg.11',show:'true',sort:'329'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.345',label:'Assenede',labelnl:'Assenede',labelfr:'Assenede',labelen:'Assenede',labelde:'Assenede',parentid:'wreg.10',show:'true',sort:'330'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.346',label:'Kaprijke',labelnl:'Kaprijke',labelfr:'Kaprijke',labelen:'Kaprijke',labelde:'Kaprijke',parentid:'wreg.10',show:'true',sort:'331'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.347',label:'Sint-Laureins',labelnl:'Sint-Laureins',labelfr:'Saint-Laurent',labelen:'Sint-Laureins',labelde:'Sint-Laureins',parentid:'wreg.10',show:'true',sort:'332'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.348',label:'Maldegem',labelnl:'Maldegem',labelfr:'Maldegem',labelen:'Maldegem',labelde:'Maldegem',parentid:'wreg.10',show:'true',sort:'333'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1565',label:'1000 Brussel',labelnl:'1000 Brussel',labelfr:'1000 Bruxelles',labelen:'1000 Brussels',labelde:'1000 Brüssel',parentid:'wreg.34',show:'true',sort:'334'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1566',label:'1020 Laken (Brussel)',labelnl:'1020 Laken (Brussel)',labelfr:'1020 Laeken',labelen:'1020 Laeken',labelde:'1020 Laken',parentid:'wreg.34',show:'true',sort:'335'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1567',label:'1030 Schaarbeek (Brussel)',labelnl:'1030 Schaarbeek (Brussel)',labelfr:'1030 Schaerbeek',labelen:'1030 Schaerbeek',labelde:'1030 Schaarbeek',parentid:'wreg.34',show:'true',sort:'336'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1568',label:'1040 Etterbeek (Brussel)',labelnl:'1040 Etterbeek (Brussel)',labelfr:'1040 Etterbeek',labelen:'1040 Etterbeek',labelde:'1040 Etterbeek',parentid:'wreg.34',show:'true',sort:'337'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1569',label:'1050 Elsene (Brussel)',labelnl:'1050 Elsene (Brussel)',labelfr:'1050 Ixelles',labelen:'1050 Ixelles',labelde:'1050 Elsene',parentid:'wreg.34',show:'true',sort:'338'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1570',label:'1060 Sint-Gillis (Brussel)',labelnl:'1060 Sint-Gillis (Brussel)',labelfr:'1060 Saint-Gilles',labelen:'1060 Saint-Gilles',labelde:'1060 Sint-Gillis',parentid:'wreg.34',show:'true',sort:'339'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1571',label:'1070 Anderlecht (Brussel)',labelnl:'1070 Anderlecht (Brussel)',labelfr:'1070 Anderlecht',labelen:'1070 Anderlecht',labelde:'1070 Anderlecht',parentid:'wreg.34',show:'true',sort:'340'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1572',label:'1080 Sint-Jans-Molenbeek (Brussel)',labelnl:'1080 Sint-Jans-Molenbeek (Brussel)',labelfr:'1080 Molenbeek-Saint-Jean',labelen:'1080 Sint-Jans-Molenbeek',labelde:'1080 Sint-Jans-Molenbeek',parentid:'wreg.34',show:'true',sort:'341'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1573',label:'1081 Koekelberg (Brussel)',labelnl:'1081 Koekelberg (Brussel)',labelfr:'1081 Koekelberg',labelen:'1081 Koekelberg',labelde:'1081 Koekelberg',parentid:'wreg.34',show:'true',sort:'342'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1574',label:'1082 Sint-Agatha-Berchem (Brussel)',labelnl:'1082 Sint-Agatha-Berchem (Brussel)',labelfr:'1082 Berchem-Sainte-Agathe',labelen:'1082 Sint-Agatha-Berchem',labelde:'1082 Sint-Agatha-Berchem',parentid:'wreg.34',show:'true',sort:'343'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1575',label:'1083 Ganshoren (Brussel)',labelnl:'1083 Ganshoren (Brussel)',labelfr:'1083 Ganshoren',labelen:'1083 Ganshoren',labelde:'1083 Ganshoren',parentid:'wreg.34',show:'true',sort:'344'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1576',label:'1090 Jette (Brussel)',labelnl:'1090 Jette (Brussel)',labelfr:'1090 Jette',labelen:'1090 Jette',labelde:'1090 Jette',parentid:'wreg.34',show:'true',sort:'345'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1577',label:'1120 Neder-Over-Heembeek (Brussel)',labelnl:'1120 Neder-Over-Heembeek (Brussel)',labelfr:'1120 Neder-Over-Heembeek',labelen:'1120 Neder-Over-Heembeek',labelde:'1120 Neder-Over-Heembeek',parentid:'wreg.34',show:'true',sort:'346'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1578',label:'1130 Haren (Brussel)',labelnl:'1130 Haren (Brussel)',labelfr:'1130 Haren',labelen:'1130 Haren',labelde:'1130 Haren',parentid:'wreg.34',show:'true',sort:'347'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1579',label:'1140 Evere (Brussel)',labelnl:'1140 Evere (Brussel)',labelfr:'1140 Evere',labelen:'1140 Evere',labelde:'1140 Evere',parentid:'wreg.34',show:'true',sort:'348'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1580',label:'1150 Sint-Pieters-Woluwe (Brussel)',labelnl:'1150 Sint-Pieters-Woluwe (Brussel)',labelfr:'1150 Woluwe-Saint-Pierre',labelen:'1150 Woluwe-Saint-Pierre',labelde:'1150 Sint-Pieters-Woluwe',parentid:'wreg.34',show:'true',sort:'349'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1581',label:'1160 Oudergem (Brussel)',labelnl:'1160 Oudergem (Brussel)',labelfr:'1160 Auderghem',labelen:'1160 Auderghem',labelde:'1160 Oudergem',parentid:'wreg.34',show:'true',sort:'350'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1582',label:'1170 Watermaal-Bosvoorde (Brussel)',labelnl:'1170 Watermaal-Bosvoorde (Brussel)',labelfr:'1170 Watermael-Boitsfort',labelen:'1170 Watermael-Boitsfort',labelde:'1170 Watermaal-Bosvoorde',parentid:'wreg.34',show:'true',sort:'351'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1583',label:'1180 Ukkel (Brussel)',labelnl:'1180 Ukkel (Brussel)',labelfr:'1180 Uccle',labelen:'1180 Uccle',labelde:'1180 Ukkel',parentid:'wreg.34',show:'true',sort:'352'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1584',label:'1190 Vorst (Brussel)',labelnl:'1190 Vorst (Brussel)',labelfr:'1190 Forest',labelen:'1190 Forest',labelde:'1190 Vorst',parentid:'wreg.34',show:'true',sort:'353'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1585',label:'1200 Sint-Lambrechts-Woluwe (Brussel)',labelnl:'1200 Sint-Lambrechts-Woluwe (Brussel)',labelfr:'1200 Woluwe-Saint-Lambert',labelen:'1200 Woluwe-Saint-Lambert',labelde:'1200 Sint-Lambrechts-Woluwe',parentid:'wreg.34',show:'true',sort:'354'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1586',label:'1210 Sint-Joost-Ten-Node (Brussel)',labelnl:'1210 Sint-Joost-Ten-Node (Brussel)',labelfr:'1210 Saint-Josse-ten-Noode',labelen:'1210 Saint-Josse-ten-Noode',labelde:'1210 Sint-Joost-ten-Noode',parentid:'wreg.34',show:'true',sort:'355'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.371',label:'1500 Halle',labelnl:'1500 Halle',labelfr:'1500 Hal',labelen:'1500 Halle',labelde:'1500 Halle',parentid:'wreg.35',show:'true',sort:'356'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.372',label:'1501 Buizingen (Halle)',labelnl:'1501 Buizingen (Halle)',labelfr:'1501 Buizingen',labelen:'1501 Buizingen',labelde:'1501 Buizingen',parentid:'wreg.35',show:'true',sort:'357'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.373',label:'1502 Lembeek (Halle)',labelnl:'1502 Lembeek (Halle)',labelfr:'1502 Lembeek',labelen:'1502 Lembeek',labelde:'1502 Lembeek',parentid:'wreg.35',show:'true',sort:'358'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.374',label:'1540 Herne',labelnl:'1540 Herne',labelfr:'1540 Hérinnes',labelen:'1540 Herne',labelde:'1540 Herne',parentid:'wreg.36',show:'true',sort:'359'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.375',label:'1540 Herfelingen (Herne)',labelnl:'1540 Herfelingen (Herne)',labelfr:'1540 Herfelingen',labelen:'1540 Herfelingen',labelde:'1540 Herfelingen',parentid:'wreg.36',show:'true',sort:'360'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.376',label:'1541 Sint-Pieters-Kapelle (Herne)',labelnl:'1541 Sint-Pieters-Kapelle (Herne)',labelfr:'1541 Chapelle-Saint-Pierre',labelen:'1541 Sint-Pieters-Kapelle',labelde:'1541 Sint-Pieters-Kapelle',parentid:'wreg.36',show:'true',sort:'361'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.377',label:'1547 Bever',labelnl:'1547 Bever',labelfr:'1547 Biévène',labelen:'1547 Bever',labelde:'1547 Bever',parentid:'wreg.37',show:'true',sort:'362'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.378',label:'1547 Biévène',labelnl:'1547 Biévène',labelfr:'1547 Biévène',labelen:'1547 Bever',labelde:'1547 Bever',parentid:'wreg.38',show:'true',sort:'363'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.379',label:'1560 Hoeilaart',labelnl:'1560 Hoeilaart',labelfr:'1560 Hoeilaart',labelen:'1560 Hoeilaart',labelde:'1560 Hoeilaart',parentid:'wreg.39',show:'true',sort:'364'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.380',label:'1570 Galmaarden',labelnl:'1570 Galmaarden',labelfr:'1570 Gammerages',labelen:'1570 Galmaarden',labelde:'1570 Galmaarden',parentid:'wreg.40',show:'true',sort:'365'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.381',label:'1570 Tollembeek (Galmaarden)',labelnl:'1570 Tollembeek (Galmaarden)',labelfr:'1570 Tollembeek',labelen:'1570 Tollembeek',labelde:'1570 Tollembeek',parentid:'wreg.40',show:'true',sort:'366'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.382',label:'1570 Vollezele (Galmaarden)',labelnl:'1570 Vollezele (Galmaarden)',labelfr:'1570 Vollezele',labelen:'1570 Vollezele',labelde:'1570 Vollezele',parentid:'wreg.40',show:'true',sort:'367'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.383',label:'1600 Sint-Pieters-Leeuw',labelnl:'1600 Sint-Pieters-Leeuw',labelfr:'1600 Leeuw-Saint-Pierre',labelen:'1600 Sint-Pieters-Leeuw',labelde:'1600 Sint-Pieters-Leeuw',parentid:'wreg.41',show:'true',sort:'368'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.384',label:'1600 Oudenaken (Sint-Pieters-Leeuw)',labelnl:'1600 Oudenaken (Sint-Pieters-Leeuw)',labelfr:'1600 Oudenaken',labelen:'1600 Oudenaken',labelde:'1600 Oudenaken',parentid:'wreg.41',show:'true',sort:'369'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.385',label:'1600 Sint-Laureins-Berchem (Sint-Pieters-Leeuw)',labelnl:'1600 Sint-Laureins-Berchem (Sint-Pieters-Leeuw)',labelfr:'1600 Sint-Laureins-Berchem',labelen:'1600 Sint-Laureins-Berchem',labelde:'1600 Sint-Laureins-Berchem',parentid:'wreg.41',show:'true',sort:'370'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.386',label:'1601 Ruisbroek (Sint-Pieters-Leeuw)',labelnl:'1601 Ruisbroek (Sint-Pieters-Leeuw)',labelfr:'1601 Ruisbroek',labelen:'1601 Ruisbroek',labelde:'1601 Ruisbroek',parentid:'wreg.41',show:'true',sort:'371'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.387',label:'1602 Vlezenbeek (Sint-Pieters-Leeuw)',labelnl:'1602 Vlezenbeek (Sint-Pieters-Leeuw)',labelfr:'1602 Vlezenbeek',labelen:'1602 Vlezenbeek',labelde:'1602 Vlezenbeek',parentid:'wreg.41',show:'true',sort:'372'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.388',label:'1620 Drogenbos',labelnl:'1620 Drogenbos',labelfr:'1620 Drogenbos',labelen:'1620 Drogenbos',labelde:'1620 Drogenbos',parentid:'wreg.42',show:'true',sort:'373'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.389',label:'1630 Linkebeek',labelnl:'1630 Linkebeek',labelfr:'1630 Linkebeek',labelen:'1630 Linkebeek',labelde:'1630 Linkebeek',parentid:'wreg.43',show:'true',sort:'374'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.390',label:'1640 Sint-Genesius-Rode',labelnl:'1640 Sint-Genesius-Rode',labelfr:'1640 Rhode-Saint-Genèse',labelen:'1640 Sint-Genesius-Rode',labelde:'1640 Sint-Genesius-Rode',parentid:'wreg.44',show:'true',sort:'375'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.391',label:'1650 Beersel',labelnl:'1650 Beersel',labelfr:'1650 Beersel',labelen:'1650 Beersel',labelde:'1650 Beersel',parentid:'wreg.45',show:'true',sort:'376'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.392',label:'1651 Lot (Beersel)',labelnl:'1651 Lot (Beersel)',labelfr:'1651 Lot',labelen:'1651 Lot',labelde:'1651 Lot',parentid:'wreg.45',show:'true',sort:'377'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.393',label:'1652 Alsemberg (Beersel)',labelnl:'1652 Alsemberg (Beersel)',labelfr:'1652 Alsemberg',labelen:'1652 Alsemberg',labelde:'1652 Alsemberg',parentid:'wreg.45',show:'true',sort:'378'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.394',label:'1653 Dworp (Beersel)',labelnl:'1653 Dworp (Beersel)',labelfr:'1653 Tourneppe',labelen:'1653 Dworp',labelde:'1653 Dworp',parentid:'wreg.45',show:'true',sort:'379'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.395',label:'1654 Huizingen (Beersel)',labelnl:'1654 Huizingen (Beersel)',labelfr:'1654 Huizingen',labelen:'1654 Huizingen',labelde:'1654 Huizingen',parentid:'wreg.45',show:'true',sort:'380'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.396',label:'1670 Pepingen',labelnl:'1670 Pepingen',labelfr:'1670 Pepingen',labelen:'1670 Pepingen',labelde:'1670 Pepingen',parentid:'wreg.46',show:'true',sort:'381'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.397',label:'1670 Bogaarden (Pepingen)',labelnl:'1670 Bogaarden (Pepingen)',labelfr:'1670 Bogaarden',labelen:'1670 Bogaarden',labelde:'1670 Bogaarden',parentid:'wreg.46',show:'true',sort:'382'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.398',label:'1670 Heikruis (Pepingen)',labelnl:'1670 Heikruis (Pepingen)',labelfr:'1670 Haute-Croix',labelen:'1670 Heikruis',labelde:'1670 Heikruis',parentid:'wreg.46',show:'true',sort:'383'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.399',label:'1671 Elingen (Pepingen)',labelnl:'1671 Elingen (Pepingen)',labelfr:'1671 Elingen',labelen:'1671 Elingen',labelde:'1671 Elingen',parentid:'wreg.46',show:'true',sort:'384'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.400',label:'1673 Beert (Pepingen)',labelnl:'1673 Beert (Pepingen)',labelfr:'1673 Beert',labelen:'1673 Beert',labelde:'1673 Beert',parentid:'wreg.46',show:'true',sort:'385'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.401',label:'1674 Bellingen (Pepingen)',labelnl:'1674 Bellingen (Pepingen)',labelfr:'1674 Bellingen',labelen:'1674 Bellingen',labelde:'1674 Bellingen',parentid:'wreg.46',show:'true',sort:'386'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.402',label:'1700 Dilbeek',labelnl:'1700 Dilbeek',labelfr:'1700 Dilbeek',labelen:'1700 Dilbeek',labelde:'1700 Dilbeek',parentid:'wreg.47',show:'true',sort:'387'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.403',label:'1700 Sint-Martens-Bodegem (Dilbeek)',labelnl:'1700 Sint-Martens-Bodegem (Dilbeek)',labelfr:'1700 Bodeghem-Saint-Martin',labelen:'1700 Sint-Martens-Bodegem',labelde:'1700 Sint-Martens-Bodegem',parentid:'wreg.47',show:'true',sort:'388'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.404',label:'1700 Sint-Ulriks-Kapelle (Dilbeek)',labelnl:'1700 Sint-Ulriks-Kapelle (Dilbeek)',labelfr:'1700 Sint-Ulriks-Kapelle',labelen:'1700 Sint-Ulriks-Kapelle',labelde:'1700 Sint-Ulriks-Kapelle',parentid:'wreg.47',show:'true',sort:'389'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.405',label:'1701 Itterbeek (Dilbeek)',labelnl:'1701 Itterbeek (Dilbeek)',labelfr:'1701 Itterbeek',labelen:'1701 Itterbeek',labelde:'1701 Itterbeek',parentid:'wreg.47',show:'true',sort:'390'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.406',label:'1702 Groot-Bijgaarden (Dilbeek)',labelnl:'1702 Groot-Bijgaarden (Dilbeek)',labelfr:'1702 Grand-Bigard',labelen:'1702 Groot-Bijgaarden',labelde:'1702 Groot-Bijgaarden',parentid:'wreg.47',show:'true',sort:'391'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.407',label:'1703 Schepdaal (Dilbeek)',labelnl:'1703 Schepdaal (Dilbeek)',labelfr:'1703 Schepdaal',labelen:'1703 Schepdaal',labelde:'1703 Schepdaal',parentid:'wreg.47',show:'true',sort:'392'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.408',label:'1730 Asse',labelnl:'1730 Asse',labelfr:'1730 Asse',labelen:'1730 Asse',labelde:'1730 Asse',parentid:'wreg.48',show:'true',sort:'393'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.409',label:'1730 Bekkerzeel (Asse)',labelnl:'1730 Bekkerzeel (Asse)',labelfr:'1730 Bekkerzeel',labelen:'1730 Bekkerzeel',labelde:'1730 Bekkerzeel',parentid:'wreg.48',show:'true',sort:'394'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.410',label:'1730 Kobbegem (Asse)',labelnl:'1730 Kobbegem (Asse)',labelfr:'1730 Kobbeghem',labelen:'1730 Kobbegem',labelde:'1730 Kobbegem',parentid:'wreg.48',show:'true',sort:'395'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.411',label:'1730 Mollem (Asse)',labelnl:'1730 Mollem (Asse)',labelfr:'1730 Mollem',labelen:'1730 Mollem',labelde:'1730 Mollem',parentid:'wreg.48',show:'true',sort:'396'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.412',label:'1731 Relegem (Asse)',labelnl:'1731 Relegem (Asse)',labelfr:'1731 Releghem',labelen:'1731 Relegem',labelde:'1731 Relegem',parentid:'wreg.48',show:'true',sort:'397'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.413',label:'1731 Zellik (Asse)',labelnl:'1731 Zellik (Asse)',labelfr:'1731 Zellik',labelen:'1731 Zellik',labelde:'1731 Zellik',parentid:'wreg.48',show:'true',sort:'398'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.414',label:'1740 Ternat',labelnl:'1740 Ternat',labelfr:'1740 Ternat',labelen:'1740 Ternat',labelde:'1740 Ternat',parentid:'wreg.49',show:'true',sort:'399'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.415',label:'1741 Wambeek (Ternat)',labelnl:'1741 Wambeek (Ternat)',labelfr:'1741 Wambeek',labelen:'1741 Wambeek',labelde:'1741 Wambeek',parentid:'wreg.49',show:'true',sort:'400'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.416',label:'1742 Sint-Katherina-Lombeek (Ternat)',labelnl:'1742 Sint-Katherina-Lombeek (Ternat)',labelfr:'1742 Sint-Katherina-Lombeek',labelen:'1742 Sint-Katherina-Lombeek',labelde:'1742 Sint-Katherina-Lombeek',parentid:'wreg.49',show:'true',sort:'401'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.417',label:'1745 Opwijk',labelnl:'1745 Opwijk',labelfr:'1745 Opwijk',labelen:'1745 Opwijk',labelde:'1745 Opwijk',parentid:'wreg.50',show:'true',sort:'402'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.418',label:'1745 Mazenzele (Opwijk)',labelnl:'1745 Mazenzele (Opwijk)',labelfr:'1745 Mazenzele',labelen:'1745 Mazenzele',labelde:'1745 Mazenzele',parentid:'wreg.50',show:'true',sort:'403'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.419',label:'1750 Lennik',labelnl:'1750 Lennik',labelfr:'1750 Lennik',labelen:'1750 Lennik',labelde:'1750 Lennik',parentid:'wreg.51',show:'true',sort:'404'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.420',label:'1750 Gaasbeek (Lennik)',labelnl:'1750 Gaasbeek (Lennik)',labelfr:'1750 Gaasbeek',labelen:'1750 Gaasbeek',labelde:'1750 Gaasbeek',parentid:'wreg.51',show:'true',sort:'405'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.421',label:'1750 Sint-Kwintens-Lennik (Lennik)',labelnl:'1750 Sint-Kwintens-Lennik (Lennik)',labelfr:'1750 Sint-Kwintens-Lennik',labelen:'1750 Sint-Kwintens-Lennik',labelde:'1750 Sint-Kwintens-Lennik',parentid:'wreg.51',show:'true',sort:'406'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.422',label:'1750 Sint-Martens-Lennik (Lennik)',labelnl:'1750 Sint-Martens-Lennik (Lennik)',labelfr:'1750 Sint-Martens-Lennik',labelen:'1750 Sint-Martens-Lennik',labelde:'1750 Sint-Martens-Lennik',parentid:'wreg.51',show:'true',sort:'407'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.423',label:'1755 Gooik',labelnl:'1755 Gooik',labelfr:'1755 Gooik',labelen:'1755 Gooik',labelde:'1755 Gooik',parentid:'wreg.52',show:'true',sort:'408'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.424',label:'1755 Kester (Gooik)',labelnl:'1755 Kester (Gooik)',labelfr:'1755 Kester',labelen:'1755 Kester',labelde:'1755 Kester',parentid:'wreg.52',show:'true',sort:'409'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.425',label:'1755 Leerbeek (Gooik)',labelnl:'1755 Leerbeek (Gooik)',labelfr:'1755 Leerbeek',labelen:'1755 Leerbeek',labelde:'1755 Leerbeek',parentid:'wreg.52',show:'true',sort:'410'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.426',label:'1755 Oetingen (Gooik)',labelnl:'1755 Oetingen (Gooik)',labelfr:'1755 Oetingen',labelen:'1755 Oetingen',labelde:'1755 Oetingen',parentid:'wreg.52',show:'true',sort:'411'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.427',label:'1760 Roosdaal',labelnl:'1760 Roosdaal',labelfr:'1760 Roosdaal',labelen:'1760 Roosdaal',labelde:'1760 Roosdaal',parentid:'wreg.53',show:'true',sort:'412'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.428',label:'1760 Onze-Lieve-Vrouw-Lombeek (Roosdaal)',labelnl:'1760 Onze-Lieve-Vrouw-Lombeek (Roosdaal)',labelfr:'1760 Lombeek-Notre-Dame',labelen:'1760 Onze-Lieve-Vrouw-Lombeek',labelde:'1760 Onze-Lieve-Vrouw-Lombeek',parentid:'wreg.53',show:'true',sort:'413'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.429',label:'1760 Pamel (Roosdaal)',labelnl:'1760 Pamel (Roosdaal)',labelfr:'1760 Pamel',labelen:'1760 Pamel',labelde:'1760 Pamel',parentid:'wreg.53',show:'true',sort:'414'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.430',label:'1760 Strijtem (Roosdaal)',labelnl:'1760 Strijtem (Roosdaal)',labelfr:'1760 Strijtem',labelen:'1760 Strijtem',labelde:'1760 Strijtem',parentid:'wreg.53',show:'true',sort:'415'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.431',label:'1761 Borchtlombeek (Roosdaal)',labelnl:'1761 Borchtlombeek (Roosdaal)',labelfr:'1761 Borchtlombeek',labelen:'1761 Borchtlombeek',labelde:'1761 Borchtlombeek',parentid:'wreg.53',show:'true',sort:'416'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.432',label:'1770 Liedekerke',labelnl:'1770 Liedekerke',labelfr:'1770 Liedekerke',labelen:'1770 Liedekerke',labelde:'1770 Liedekerke',parentid:'wreg.54',show:'true',sort:'417'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.433',label:'1780 Wemmel',labelnl:'1780 Wemmel',labelfr:'1780 Wemmel',labelen:'1780 Wemmel',labelde:'1780 Wemmel',parentid:'wreg.55',show:'true',sort:'418'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.434',label:'1785 Merchtem',labelnl:'1785 Merchtem',labelfr:'1785 Merchtem',labelen:'1785 Merchtem',labelde:'1785 Merchtem',parentid:'wreg.56',show:'true',sort:'419'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.435',label:'1785 Brussegem (Merchtem)',labelnl:'1785 Brussegem (Merchtem)',labelfr:'1785 Brussegem',labelen:'1785 Brussegem',labelde:'1785 Brussegem',parentid:'wreg.56',show:'true',sort:'420'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.436',label:'1785 Hamme (Merchtem)',labelnl:'1785 Hamme (Merchtem)',labelfr:'1785 Hamme',labelen:'1785 Hamme',labelde:'1785 Hamme',parentid:'wreg.56',show:'true',sort:'421'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.437',label:'1790 Affligem',labelnl:'1790 Affligem',labelfr:'1790 Affligem',labelen:'1790 Affligem',labelde:'1790 Affligem',parentid:'wreg.57',show:'true',sort:'422'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.438',label:'1790 Essene (Affligem)',labelnl:'1790 Essene (Affligem)',labelfr:'1790 Essene',labelen:'1790 Essene',labelde:'1790 Essene',parentid:'wreg.57',show:'true',sort:'423'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.439',label:'1790 Hekelgem (Affligem)',labelnl:'1790 Hekelgem (Affligem)',labelfr:'1790 Hekelgem',labelen:'1790 Hekelgem',labelde:'1790 Hekelgem',parentid:'wreg.57',show:'true',sort:'424'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.440',label:'1790 Teralfene (Affligem)',labelnl:'1790 Teralfene (Affligem)',labelfr:'1790 Teralfene',labelen:'1790 Teralfene',labelde:'1790 Teralfene',parentid:'wreg.57',show:'true',sort:'425'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.441',label:'1800 Vilvoorde',labelnl:'1800 Vilvoorde',labelfr:'1800 Vilvorde',labelen:'1800 Vilvoorde',labelde:'1800 Vilvoorde',parentid:'wreg.58',show:'true',sort:'426'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.442',label:'1800 Peutie (Vilvoorde)',labelnl:'1800 Peutie (Vilvoorde)',labelfr:'1800 Peutie',labelen:'1800 Peutie',labelde:'1800 Peutie',parentid:'wreg.58',show:'true',sort:'427'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.443',label:'1820 Steenokkerzeel',labelnl:'1820 Steenokkerzeel',labelfr:'1820 Steenokkerzeel',labelen:'1820 Steenokkerzeel',labelde:'1820 Steenokkerzeel',parentid:'wreg.59',show:'true',sort:'428'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.444',label:'1820 Melsbroek (Steenokkerzeel)',labelnl:'1820 Melsbroek (Steenokkerzeel)',labelfr:'1820 Melsbroek',labelen:'1820 Melsbroek',labelde:'1820 Melsbroek',parentid:'wreg.59',show:'true',sort:'429'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.445',label:'1820 Perk (Steenokkerzeel)',labelnl:'1820 Perk (Steenokkerzeel)',labelfr:'1820 Perk',labelen:'1820 Perk',labelde:'1820 Perk',parentid:'wreg.59',show:'true',sort:'430'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.446',label:'1830 Machelen',labelnl:'1830 Machelen',labelfr:'1830 Machelen',labelen:'1830 Machelen',labelde:'1830 Machelen',parentid:'wreg.60',show:'true',sort:'431'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.447',label:'1831 Diegem (Machelen)',labelnl:'1831 Diegem (Machelen)',labelfr:'1831 Diegem',labelen:'1831 Diegem',labelde:'1831 Diegem',parentid:'wreg.60',show:'true',sort:'432'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.448',label:'1840 Londerzeel',labelnl:'1840 Londerzeel',labelfr:'1840 Londerzeel',labelen:'1840 Londerzeel',labelde:'1840 Londerzeel',parentid:'wreg.61',show:'true',sort:'433'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.449',label:'1840 Malderen (Londerzeel)',labelnl:'1840 Malderen (Londerzeel)',labelfr:'1840 Malderen',labelen:'1840 Malderen',labelde:'1840 Malderen',parentid:'wreg.61',show:'true',sort:'434'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.450',label:'1840 Steenhuffel (Londerzeel)',labelnl:'1840 Steenhuffel (Londerzeel)',labelfr:'1840 Steenhuffel',labelen:'1840 Steenhuffel',labelde:'1840 Steenhuffel',parentid:'wreg.61',show:'true',sort:'435'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.451',label:'1850 Grimbergen',labelnl:'1850 Grimbergen',labelfr:'1850 Grimbergen',labelen:'1850 Grimbergen',labelde:'1850 Grimbergen',parentid:'wreg.62',show:'true',sort:'436'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.452',label:'1851 Humbeek (Grimbergen)',labelnl:'1851 Humbeek (Grimbergen)',labelfr:'1851 Humbeek',labelen:'1851 Humbeek',labelde:'1851 Humbeek',parentid:'wreg.62',show:'true',sort:'437'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.453',label:'1852 Beigem (Grimbergen)',labelnl:'1852 Beigem (Grimbergen)',labelfr:'1852 Beigem',labelen:'1852 Beigem',labelde:'1852 Beigem',parentid:'wreg.62',show:'true',sort:'438'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.454',label:'1853 Strombeek-Bever (Grimbergen)',labelnl:'1853 Strombeek-Bever (Grimbergen)',labelfr:'1853 Strombeek-Bever',labelen:'1853 Strombeek-Bever',labelde:'1853 Strombeek-Bever',parentid:'wreg.62',show:'true',sort:'439'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.455',label:'1860 Meise',labelnl:'1860 Meise',labelfr:'1860 Meise',labelen:'1860 Meise',labelde:'1860 Meise',parentid:'wreg.63',show:'true',sort:'440'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.456',label:'1861 Wolvertem (Meise)',labelnl:'1861 Wolvertem (Meise)',labelfr:'1861 Wolvertem',labelen:'1861 Wolvertem',labelde:'1861 Wolvertem',parentid:'wreg.63',show:'true',sort:'441'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.457',label:'1880 Kapelle-Op-Den-Bos',labelnl:'1880 Kapelle-Op-Den-Bos',labelfr:'1880 Kapelle-op-den-Bos',labelen:'1880 Kapelle-op-den-Bos',labelde:'1880 Kapelle-op-den-Bos',parentid:'wreg.64',show:'true',sort:'442'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.458',label:'1880 Nieuwenrode (Kapelle-Op-Den-Bos)',labelnl:'1880 Nieuwenrode (Kapelle-Op-Den-Bos)',labelfr:'1880 Nieuwenrode',labelen:'1880 Nieuwenrode',labelde:'1880 Nieuwenrode',parentid:'wreg.64',show:'true',sort:'443'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.459',label:'1880 Ramsdonk (Kapelle-Op-Den-Bos)',labelnl:'1880 Ramsdonk (Kapelle-Op-Den-Bos)',labelfr:'1880 Ramsdonk',labelen:'1880 Ramsdonk',labelde:'1880 Ramsdonk',parentid:'wreg.64',show:'true',sort:'444'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.460',label:'1910 Kampenhout',labelnl:'1910 Kampenhout',labelfr:'1910 Kampenhout',labelen:'1910 Kampenhout',labelde:'1910 Kampenhout',parentid:'wreg.65',show:'true',sort:'445'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.461',label:'1910 Berg (Kampenhout)',labelnl:'1910 Berg (Kampenhout)',labelfr:'1910 Berg',labelen:'1910 Berg',labelde:'1910 Berg',parentid:'wreg.65',show:'true',sort:'446'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.462',label:'1910 Buken (Kampenhout)',labelnl:'1910 Buken (Kampenhout)',labelfr:'1910 Buken',labelen:'1910 Buken',labelde:'1910 Buken',parentid:'wreg.65',show:'true',sort:'447'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.463',label:'1910 Nederokkerzeel (Kampenhout)',labelnl:'1910 Nederokkerzeel (Kampenhout)',labelfr:'1910 Nederokkerzeel',labelen:'1910 Nederokkerzeel',labelde:'1910 Nederokkerzeel',parentid:'wreg.65',show:'true',sort:'448'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.464',label:'1930 Zaventem',labelnl:'1930 Zaventem',labelfr:'1930 Zaventem',labelen:'1930 Zaventem',labelde:'1930 Zaventem',parentid:'wreg.66',show:'true',sort:'449'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.465',label:'1930 Nossegem (Zaventem)',labelnl:'1930 Nossegem (Zaventem)',labelfr:'1930 Nossegem',labelen:'1930 Nossegem',labelde:'1930 Nossegem',parentid:'wreg.66',show:'true',sort:'450'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.466',label:'1932 Sint-Stevens-Woluwe (Zaventem)',labelnl:'1932 Sint-Stevens-Woluwe (Zaventem)',labelfr:'1932 Woluwe-Saint-Étienne',labelen:'1932 Sint-Stevens-Woluwe',labelde:'1932 Sint-Stevens-Woluwe',parentid:'wreg.66',show:'true',sort:'451'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.467',label:'1933 Sterrebeek (Zaventem)',labelnl:'1933 Sterrebeek (Zaventem)',labelfr:'1933 Sterrebeek',labelen:'1933 Sterrebeek',labelde:'1933 Sterrebeek',parentid:'wreg.66',show:'true',sort:'452'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.468',label:'1950 Kraainem',labelnl:'1950 Kraainem',labelfr:'1950 Crainhem',labelen:'1950 Kraainem',labelde:'1950 Kraainem',parentid:'wreg.67',show:'true',sort:'453'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.469',label:'1970 Wezembeek-Oppem',labelnl:'1970 Wezembeek-Oppem',labelfr:'1970 Wezembeek-Oppem',labelen:'1970 Wezembeek-Oppem',labelde:'1970 Wezembeek-Oppem',parentid:'wreg.68',show:'true',sort:'454'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.470',label:'1980 Zemst',labelnl:'1980 Zemst',labelfr:'1980 Zemst',labelen:'1980 Zemst',labelde:'1980 Zemst',parentid:'wreg.69',show:'true',sort:'455'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.471',label:'1980 Eppegem (Zemst)',labelnl:'1980 Eppegem (Zemst)',labelfr:'1980 Eppegem',labelen:'1980 Eppegem',labelde:'1980 Eppegem',parentid:'wreg.69',show:'true',sort:'456'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.472',label:'1981 Hofstade (Zemst)',labelnl:'1981 Hofstade (Zemst)',labelfr:'1981 Hofstade',labelen:'1981 Hofstade',labelde:'1981 Hofstade',parentid:'wreg.69',show:'true',sort:'457'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.473',label:'1982 Elewijt (Zemst)',labelnl:'1982 Elewijt (Zemst)',labelfr:'1982 Elewijt',labelen:'1982 Elewijt',labelde:'1982 Elewijt',parentid:'wreg.69',show:'true',sort:'458'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.474',label:'1982 Weerde (Zemst)',labelnl:'1982 Weerde (Zemst)',labelfr:'1982 Weerde',labelen:'1982 Weerde',labelde:'1982 Weerde',parentid:'wreg.69',show:'true',sort:'459'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.475',label:'2000 Antwerpen',labelnl:'2000 Antwerpen',labelfr:'2000 Anvers',labelen:'2000 Antwerp',labelde:'2000 Antwerpen',parentid:'wreg.70',show:'true',sort:'460'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.476',label:'2018 Antwerpen 18 (Antwerpen)',labelnl:'2018 Antwerpen 18 (Antwerpen)',labelfr:'2018 Anvers 18',labelen:'2018 Antwerp 18',labelde:'2018 Antwerpen 18',parentid:'wreg.70',show:'true',sort:'461'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.477',label:'2020 Antwerpen 2 (Antwerpen)',labelnl:'2020 Antwerpen 2 (Antwerpen)',labelfr:'2020 Anvers 2',labelen:'2020 Antwerp 2',labelde:'2020 Antwerpen 2',parentid:'wreg.70',show:'true',sort:'462'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.478',label:'2030 Antwerpen 3 (Antwerpen)',labelnl:'2030 Antwerpen 3 (Antwerpen)',labelfr:'2030 Anvers 3',labelen:'2030 Antwerp 3',labelde:'2030 Antwerpen 3',parentid:'wreg.70',show:'true',sort:'463'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.480',label:'2040 Berendrecht (Antwerpen)',labelnl:'2040 Berendrecht (Antwerpen)',labelfr:'2040 Berendrecht',labelen:'2040 Berendrecht',labelde:'2040 Berendrecht',parentid:'wreg.70',show:'true',sort:'465'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.481',label:'2040 Lillo (Antwerpen)',labelnl:'2040 Lillo (Antwerpen)',labelfr:'2040 Lillo',labelen:'2040 Lillo',labelde:'2040 Lillo',parentid:'wreg.70',show:'true',sort:'466'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.482',label:'2040 Zandvliet (Antwerpen)',labelnl:'2040 Zandvliet (Antwerpen)',labelfr:'2040 Zandvliet',labelen:'2040 Zandvliet',labelde:'2040 Zandvliet',parentid:'wreg.70',show:'true',sort:'467'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.483',label:'2050 Antwerpen 5 (Antwerpen)',labelnl:'2050 Antwerpen 5 (Antwerpen)',labelfr:'2050 Anvers 5',labelen:'2050 Antwerp 5',labelde:'2050 Antwerpen 5',parentid:'wreg.70',show:'true',sort:'468'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.484',label:'2060 Antwerpen 6 (Antwerpen)',labelnl:'2060 Antwerpen 6 (Antwerpen)',labelfr:'2060 Anvers 6',labelen:'2060 Antwerp 6',labelde:'2060 Antwerpen 6',parentid:'wreg.70',show:'true',sort:'469'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.485',label:'2100 Deurne (Antwerpen)',labelnl:'2100 Deurne (Antwerpen)',labelfr:'2100 Deurne',labelen:'2100 Deurne',labelde:'2100 Deurne',parentid:'wreg.70',show:'true',sort:'470'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.486',label:'2140 Borgerhout (Antwerpen)',labelnl:'2140 Borgerhout (Antwerpen)',labelfr:'2140 Borgerhout',labelen:'2140 Borgerhout',labelde:'2140 Borgerhout',parentid:'wreg.70',show:'true',sort:'471'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.487',label:'2170 Merksem (Antwerpen)',labelnl:'2170 Merksem (Antwerpen)',labelfr:'2170 Merksem',labelen:'2170 Merksem',labelde:'2170 Merksem',parentid:'wreg.70',show:'true',sort:'472'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.488',label:'2180 Ekeren (Antwerpen)',labelnl:'2180 Ekeren (Antwerpen)',labelfr:'2180 Ekeren',labelen:'2180 Ekeren',labelde:'2180 Ekeren',parentid:'wreg.70',show:'true',sort:'473'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.489',label:'2600 Berchem (Antwerpen)',labelnl:'2600 Berchem (Antwerpen)',labelfr:'2600 Berchem',labelen:'2600 Berchem',labelde:'2600 Berchem',parentid:'wreg.70',show:'true',sort:'474'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.490',label:'2610 Wilrijk (Antwerpen)',labelnl:'2610 Wilrijk (Antwerpen)',labelfr:'2610 Wilrijk',labelen:'2610 Wilrijk',labelde:'2610 Wilrijk',parentid:'wreg.70',show:'true',sort:'475'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.491',label:'2660 Hoboken (Antwerpen)',labelnl:'2660 Hoboken (Antwerpen)',labelfr:'2660 Hoboken',labelen:'2660 Hoboken',labelde:'2660 Hoboken',parentid:'wreg.70',show:'true',sort:'476'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.492',label:'2070 Zwijndrecht',labelnl:'2070 Zwijndrecht',labelfr:'2070 Zwijndrecht',labelen:'2070 Zwijndrecht',labelde:'2070 Zwijndrecht',parentid:'wreg.71',show:'true',sort:'477'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.493',label:'2070 Burcht (Zwijndrecht)',labelnl:'2070 Burcht (Zwijndrecht)',labelfr:'2070 Burcht',labelen:'2070 Burcht',labelde:'2070 Burcht',parentid:'wreg.71',show:'true',sort:'478'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.494',label:'2110 Wijnegem',labelnl:'2110 Wijnegem',labelfr:'2110 Wijnegem',labelen:'2110 Wijnegem',labelde:'2110 Wijnegem',parentid:'wreg.72',show:'true',sort:'479'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.495',label:'2150 Borsbeek',labelnl:'2150 Borsbeek',labelfr:'2150 Borsbeek',labelen:'2150 Borsbeek',labelde:'2150 Borsbeek',parentid:'wreg.73',show:'true',sort:'480'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.496',label:'2160 Wommelgem',labelnl:'2160 Wommelgem',labelfr:'2160 Wommelgem',labelen:'2160 Wommelgem',labelde:'2160 Wommelgem',parentid:'wreg.74',show:'true',sort:'481'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.497',label:'2200 Herentals',labelnl:'2200 Herentals',labelfr:'2200 Herentals',labelen:'2200 Herentals',labelde:'2200 Herentals',parentid:'wreg.75',show:'true',sort:'482'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.498',label:'2200 Morkhoven (Herentals)',labelnl:'2200 Morkhoven (Herentals)',labelfr:'2200 Morkhoven',labelen:'2200 Morkhoven',labelde:'2200 Morkhoven',parentid:'wreg.75',show:'true',sort:'483'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.499',label:'2200 Noorderwijk (Herentals)',labelnl:'2200 Noorderwijk (Herentals)',labelfr:'2200 Noorderwijk',labelen:'2200 Noorderwijk',labelde:'2200 Noorderwijk',parentid:'wreg.75',show:'true',sort:'484'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.500',label:'2220 Heist-Op-Den-Berg',labelnl:'2220 Heist-Op-Den-Berg',labelfr:'2220 Heist-op-den-Berg',labelen:'2220 Heist-op-den-Berg',labelde:'2220 Heist-op-den-Berg',parentid:'wreg.76',show:'true',sort:'485'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.501',label:'2220 Hallaar (Heist-Op-Den-Berg)',labelnl:'2220 Hallaar (Heist-Op-Den-Berg)',labelfr:'2220 Hallaer',labelen:'2220 Hallaar',labelde:'2220 Hallaar',parentid:'wreg.76',show:'true',sort:'486'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.502',label:'2221 Booischot (Heist-Op-Den-Berg)',labelnl:'2221 Booischot (Heist-Op-Den-Berg)',labelfr:'2221 Booischot',labelen:'2221 Booischot',labelde:'2221 Booischot',parentid:'wreg.76',show:'true',sort:'487'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.503',label:'2222 Itegem (Heist-Op-Den-Berg)',labelnl:'2222 Itegem (Heist-Op-Den-Berg)',labelfr:'2222 Iteghem',labelen:'2222 Itegem',labelde:'2222 Itegem',parentid:'wreg.76',show:'true',sort:'488'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.504',label:'2222 Wiekevorst (Heist-Op-Den-Berg)',labelnl:'2222 Wiekevorst (Heist-Op-Den-Berg)',labelfr:'2222 Wiekevorst',labelen:'2222 Wiekevorst',labelde:'2222 Wiekevorst',parentid:'wreg.76',show:'true',sort:'489'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.505',label:'2223 Schriek (Heist-Op-Den-Berg)',labelnl:'2223 Schriek (Heist-Op-Den-Berg)',labelfr:'2223 Schriek',labelen:'2223 Schriek',labelde:'2223 Schriek',parentid:'wreg.76',show:'true',sort:'490'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.506',label:'2230 Herselt',labelnl:'2230 Herselt',labelfr:'2230 Herselt',labelen:'2230 Herselt',labelde:'2230 Herselt',parentid:'wreg.77',show:'true',sort:'491'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.507',label:'2230 Ramsel (Herselt)',labelnl:'2230 Ramsel (Herselt)',labelfr:'2230 Ramsel',labelen:'2230 Ramsel',labelde:'2230 Ramsel',parentid:'wreg.77',show:'true',sort:'492'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.508',label:'2235 Hulshout',labelnl:'2235 Hulshout',labelfr:'2235 Hulshout',labelen:'2235 Hulshout',labelde:'2235 Hulshout',parentid:'wreg.78',show:'true',sort:'493'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.509',label:'2235 Houtvenne (Hulshout)',labelnl:'2235 Houtvenne (Hulshout)',labelfr:'2235 Houtvenne',labelen:'2235 Houtvenne',labelde:'2235 Houtvenne',parentid:'wreg.78',show:'true',sort:'494'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.510',label:'2235 Westmeerbeek (Hulshout)',labelnl:'2235 Westmeerbeek (Hulshout)',labelfr:'2235 Westmeerbeek',labelen:'2235 Westmeerbeek',labelde:'2235 Westmeerbeek',parentid:'wreg.78',show:'true',sort:'495'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.511',label:'2240 Zandhoven',labelnl:'2240 Zandhoven',labelfr:'2240 Zandhoven',labelen:'2240 Zandhoven',labelde:'2240 Zandhoven',parentid:'wreg.79',show:'true',sort:'496'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.512',label:'2240 Massenhoven (Zandhoven)',labelnl:'2240 Massenhoven (Zandhoven)',labelfr:'2240 Massenhoven',labelen:'2240 Massenhoven',labelde:'2240 Massenhoven',parentid:'wreg.79',show:'true',sort:'497'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.513',label:'2240 Viersel (Zandhoven)',labelnl:'2240 Viersel (Zandhoven)',labelfr:'2240 Viersel',labelen:'2240 Viersel',labelde:'2240 Viersel',parentid:'wreg.79',show:'true',sort:'498'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.514',label:'2242 Pulderbos (Zandhoven)',labelnl:'2242 Pulderbos (Zandhoven)',labelfr:'2242 Pulderbos',labelen:'2242 Pulderbos',labelde:'2242 Pulderbos',parentid:'wreg.79',show:'true',sort:'499'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.515',label:'2243 Pulle (Zandhoven)',labelnl:'2243 Pulle (Zandhoven)',labelfr:'2243 Pulle',labelen:'2243 Pulle',labelde:'2243 Pulle',parentid:'wreg.79',show:'true',sort:'500'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.516',label:'2250 Olen',labelnl:'2250 Olen',labelfr:'2250 Olen',labelen:'2250 Olen',labelde:'2250 Olen',parentid:'wreg.80',show:'true',sort:'501'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.517',label:'2260 Westerlo',labelnl:'2260 Westerlo',labelfr:'2260 Westerlo',labelen:'2260 Westerlo',labelde:'2260 Westerlo',parentid:'wreg.81',show:'true',sort:'502'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.518',label:'2260 Heultje (Westerlo)',labelnl:'2260 Heultje (Westerlo)',labelfr:'2260 Heultje',labelen:'2260 Heultje',labelde:'2260 Heultje',parentid:'wreg.81',show:'true',sort:'503'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.519',label:'2260 Oevel (Westerlo)',labelnl:'2260 Oevel (Westerlo)',labelfr:'2260 Oevel',labelen:'2260 Oevel',labelde:'2260 Oevel',parentid:'wreg.81',show:'true',sort:'504'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.520',label:'2260 Oosterwijk (Westerlo)',labelnl:'2260 Oosterwijk (Westerlo)',labelfr:'2260 Oosterwijk',labelen:'2260 Oosterwijk',labelde:'2260 Oosterwijk',parentid:'wreg.81',show:'true',sort:'505'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.521',label:'2260 Tongerlo (Westerlo)',labelnl:'2260 Tongerlo (Westerlo)',labelfr:'2260 Tongerlo',labelen:'2260 Tongerlo',labelde:'2260 Tongerlo',parentid:'wreg.81',show:'true',sort:'506'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.522',label:'2260 Voortkapel (Westerlo)',labelnl:'2260 Voortkapel (Westerlo)',labelfr:'2260 Voortkapel',labelen:'2260 Voortkapel',labelde:'2260 Voortkapel',parentid:'wreg.81',show:'true',sort:'507'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.523',label:'2260 Zoerle-Parwijs (Westerlo)',labelnl:'2260 Zoerle-Parwijs (Westerlo)',labelfr:'2260 Zoerle-Parwijs',labelen:'2260 Zoerle-Parwijs',labelde:'2260 Zoerle-Parwijs',parentid:'wreg.81',show:'true',sort:'508'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.524',label:'2270 Herenthout',labelnl:'2270 Herenthout',labelfr:'2270 Herenthout',labelen:'2270 Herenthout',labelde:'2270 Herenthout',parentid:'wreg.82',show:'true',sort:'509'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.525',label:'2275 Lille',labelnl:'2275 Lille',labelfr:'2275 Lille',labelen:'2275 Lille',labelde:'2275 Lille',parentid:'wreg.83',show:'true',sort:'510'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.526',label:'2275 Gierle (Lille)',labelnl:'2275 Gierle (Lille)',labelfr:'2275 Gierle',labelen:'2275 Gierle',labelde:'2275 Gierle',parentid:'wreg.83',show:'true',sort:'511'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.527',label:'2275 Poederlee (Lille)',labelnl:'2275 Poederlee (Lille)',labelfr:'2275 Poederlee',labelen:'2275 Poederlee',labelde:'2275 Poederlee',parentid:'wreg.83',show:'true',sort:'512'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.528',label:'2275 Wechelderzande (Lille)',labelnl:'2275 Wechelderzande (Lille)',labelfr:'2275 Wechelderzande',labelen:'2275 Wechelderzande',labelde:'2275 Wechelderzande',parentid:'wreg.83',show:'true',sort:'513'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.529',label:'2280 Grobbendonk',labelnl:'2280 Grobbendonk',labelfr:'2280 Grobbendonk',labelen:'2280 Grobbendonk',labelde:'2280 Grobbendonk',parentid:'wreg.84',show:'true',sort:'514'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.530',label:'2288 Bouwel (Grobbendonk)',labelnl:'2288 Bouwel (Grobbendonk)',labelfr:'2288 Bouwel',labelen:'2288 Bouwel',labelde:'2288 Bouwel',parentid:'wreg.84',show:'true',sort:'515'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.531',label:'2290 Vorselaar',labelnl:'2290 Vorselaar',labelfr:'2290 Vorselaar',labelen:'2290 Vorselaar',labelde:'2290 Vorselaar',parentid:'wreg.85',show:'true',sort:'516'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.532',label:'2300 Turnhout',labelnl:'2300 Turnhout',labelfr:'2300 Turnhout',labelen:'2300 Turnhout',labelde:'2300 Turnhout',parentid:'wreg.86',show:'true',sort:'517'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.533',label:'2310 Rijkevorsel',labelnl:'2310 Rijkevorsel',labelfr:'2310 Rijkevorsel',labelen:'2310 Rijkevorsel',labelde:'2310 Rijkevorsel',parentid:'wreg.87',show:'true',sort:'518'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.534',label:'2320 Hoogstraten',labelnl:'2320 Hoogstraten',labelfr:'2320 Hoogstraten',labelen:'2320 Hoogstraten',labelde:'2320 Hoogstraten',parentid:'wreg.88',show:'true',sort:'519'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.535',label:'2321 Meer (Hoogstraten)',labelnl:'2321 Meer (Hoogstraten)',labelfr:'2321 Meer',labelen:'2321 Meer',labelde:'2321 Meer',parentid:'wreg.88',show:'true',sort:'520'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.536',label:'2322 Minderhout (Hoogstraten)',labelnl:'2322 Minderhout (Hoogstraten)',labelfr:'2322 Minderhout',labelen:'2322 Minderhout',labelde:'2322 Minderhout',parentid:'wreg.88',show:'true',sort:'521'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.537',label:'2323 Wortel (Hoogstraten)',labelnl:'2323 Wortel (Hoogstraten)',labelfr:'2323 Wortel',labelen:'2323 Wortel',labelde:'2323 Wortel',parentid:'wreg.88',show:'true',sort:'522'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.538',label:'2328 Meerle (Hoogstraten)',labelnl:'2328 Meerle (Hoogstraten)',labelfr:'2328 Meerle',labelen:'2328 Meerle',labelde:'2328 Meerle',parentid:'wreg.88',show:'true',sort:'523'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.539',label:'2330 Merksplas',labelnl:'2330 Merksplas',labelfr:'2330 Merksplas',labelen:'2330 Merksplas',labelde:'2330 Merksplas',parentid:'wreg.89',show:'true',sort:'524'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.540',label:'2340 Beerse',labelnl:'2340 Beerse',labelfr:'2340 Beerse',labelen:'2340 Beerse',labelde:'2340 Beerse',parentid:'wreg.90',show:'true',sort:'525'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.541',label:'2340 Vlimmeren (Beerse)',labelnl:'2340 Vlimmeren (Beerse)',labelfr:'2340 Vlimmeren',labelen:'2340 Vlimmeren',labelde:'2340 Vlimmeren',parentid:'wreg.90',show:'true',sort:'526'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.542',label:'2350 Vosselaar',labelnl:'2350 Vosselaar',labelfr:'2350 Vosselaar',labelen:'2350 Vosselaar',labelde:'2350 Vosselaar',parentid:'wreg.91',show:'true',sort:'527'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.543',label:'2360 Oud-Turnhout',labelnl:'2360 Oud-Turnhout',labelfr:'2360 Oud-Turnhout',labelen:'2360 Oud-Turnhout',labelde:'2360 Oud-Turnhout',parentid:'wreg.92',show:'true',sort:'528'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.544',label:'2370 Arendonk',labelnl:'2370 Arendonk',labelfr:'2370 Arendonk',labelen:'2370 Arendonk',labelde:'2370 Arendonk',parentid:'wreg.93',show:'true',sort:'529'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.545',label:'2380 Ravels',labelnl:'2380 Ravels',labelfr:'2380 Ravels',labelen:'2380 Ravels',labelde:'2380 Ravels',parentid:'wreg.94',show:'true',sort:'530'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.546',label:'2381 Weelde (Ravels)',labelnl:'2381 Weelde (Ravels)',labelfr:'2381 Weelde',labelen:'2381 Weelde',labelde:'2381 Weelde',parentid:'wreg.94',show:'true',sort:'531'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.547',label:'2382 Poppel (Ravels)',labelnl:'2382 Poppel (Ravels)',labelfr:'2382 Poppel',labelen:'2382 Poppel',labelde:'2382 Poppel',parentid:'wreg.94',show:'true',sort:'532'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.548',label:'2387 Baarle-Hertog',labelnl:'2387 Baarle-Hertog',labelfr:'2387 Baerle-Duc',labelen:'2387 Baarle-Hertog',labelde:'2387 Baarle-Hertog',parentid:'wreg.95',show:'true',sort:'533'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.549',label:'2390 Malle',labelnl:'2390 Malle',labelfr:'2390 Malle',labelen:'2390 Malle',labelde:'2390 Malle',parentid:'wreg.96',show:'true',sort:'534'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.550',label:'2390 Oostmalle (Malle)',labelnl:'2390 Oostmalle (Malle)',labelfr:'2390 Oostmalle',labelen:'2390 Oostmalle',labelde:'2390 Oostmalle',parentid:'wreg.96',show:'true',sort:'535'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.551',label:'2390 Westmalle (Malle)',labelnl:'2390 Westmalle (Malle)',labelfr:'2390 Westmalle',labelen:'2390 Westmalle',labelde:'2390 Westmalle',parentid:'wreg.96',show:'true',sort:'536'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.552',label:'2400 Mol',labelnl:'2400 Mol',labelfr:'2400 Mol',labelen:'2400 Mol',labelde:'2400 Mol',parentid:'wreg.97',show:'true',sort:'537'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.553',label:'2430 Laakdal',labelnl:'2430 Laakdal',labelfr:'2430 Laakdal',labelen:'2430 Laakdal',labelde:'2430 Laakdal',parentid:'wreg.98',show:'true',sort:'538'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.554',label:'2430 Eindhout (Laakdal)',labelnl:'2430 Eindhout (Laakdal)',labelfr:'2430 Eindhout',labelen:'2430 Eindhout',labelde:'2430 Eindhout',parentid:'wreg.98',show:'true',sort:'539'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.555',label:'2430 Vorst (Laakdal)',labelnl:'2430 Vorst (Laakdal)',labelfr:'2430 Vorst',labelen:'2430 Vorst',labelde:'2430 Vorst',parentid:'wreg.98',show:'true',sort:'540'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.556',label:'2431 Varendonk (Laakdal)',labelnl:'2431 Varendonk (Laakdal)',labelfr:'2431 Varendonk',labelen:'2431 Varendonk',labelde:'2431 Varendonk',parentid:'wreg.98',show:'true',sort:'541'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.557',label:'2431 Veerle (Laakdal)',labelnl:'2431 Veerle (Laakdal)',labelfr:'2431 Veerle',labelen:'2431 Veerle',labelde:'2431 Veerle',parentid:'wreg.98',show:'true',sort:'542'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.558',label:'2440 Geel',labelnl:'2440 Geel',labelfr:'2440 Geel',labelen:'2440 Geel',labelde:'2440 Geel',parentid:'wreg.99',show:'true',sort:'543'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.559',label:'2450 Meerhout',labelnl:'2450 Meerhout',labelfr:'2450 Meerhout',labelen:'2450 Meerhout',labelde:'2450 Meerhout',parentid:'wreg.100',show:'true',sort:'544'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.560',label:'2460 Kasterlee',labelnl:'2460 Kasterlee',labelfr:'2460 Kasterlee',labelen:'2460 Kasterlee',labelde:'2460 Kasterlee',parentid:'wreg.101',show:'true',sort:'545'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.561',label:'2460 Lichtaart (Kasterlee)',labelnl:'2460 Lichtaart (Kasterlee)',labelfr:'2460 Lichtaert',labelen:'2460 Lichtaart',labelde:'2460 Lichtaart',parentid:'wreg.101',show:'true',sort:'546'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.562',label:'2460 Tielen (Kasterlee)',labelnl:'2460 Tielen (Kasterlee)',labelfr:'2460 Tielen',labelen:'2460 Tielen',labelde:'2460 Tielen',parentid:'wreg.101',show:'true',sort:'547'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.563',label:'2470 Retie',labelnl:'2470 Retie',labelfr:'2470 Retie',labelen:'2470 Retie',labelde:'2470 Retie',parentid:'wreg.102',show:'true',sort:'548'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.564',label:'2480 Dessel',labelnl:'2480 Dessel',labelfr:'2480 Dessel',labelen:'2480 Dessel',labelde:'2480 Dessel',parentid:'wreg.103',show:'true',sort:'549'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.565',label:'2490 Balen',labelnl:'2490 Balen',labelfr:'2490 Balen',labelen:'2490 Balen',labelde:'2490 Balen',parentid:'wreg.104',show:'true',sort:'550'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.566',label:'2491 Olmen (Balen)',labelnl:'2491 Olmen (Balen)',labelfr:'2491 Olmen',labelen:'2491 Olmen',labelde:'2491 Olmen',parentid:'wreg.104',show:'true',sort:'551'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.567',label:'2500 Lier',labelnl:'2500 Lier',labelfr:'2500 Lierre',labelen:'2500 Lier',labelde:'2500 Lier',parentid:'wreg.105',show:'true',sort:'552'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.568',label:'2500 Koningshooikt (Lier)',labelnl:'2500 Koningshooikt (Lier)',labelfr:'2500 Koningshooikt',labelen:'2500 Koningshooikt',labelde:'2500 Koningshooikt',parentid:'wreg.105',show:'true',sort:'553'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.569',label:'2520 Ranst',labelnl:'2520 Ranst',labelfr:'2520 Ranst',labelen:'2520 Ranst',labelde:'2520 Ranst',parentid:'wreg.106',show:'true',sort:'554'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.570',label:'2520 Broechem (Ranst)',labelnl:'2520 Broechem (Ranst)',labelfr:'2520 Broechem',labelen:'2520 Broechem',labelde:'2520 Broechem',parentid:'wreg.106',show:'true',sort:'555'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.571',label:'2520 Emblem (Ranst)',labelnl:'2520 Emblem (Ranst)',labelfr:'2520 Emblem',labelen:'2520 Emblem',labelde:'2520 Emblem',parentid:'wreg.106',show:'true',sort:'556'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.572',label:'2520 Oelegem (Ranst)',labelnl:'2520 Oelegem (Ranst)',labelfr:'2520 Oeleghem',labelen:'2520 Oelegem',labelde:'2520 Oelegem',parentid:'wreg.106',show:'true',sort:'557'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.573',label:'2530 Boechout',labelnl:'2530 Boechout',labelfr:'2530 Boechout',labelen:'2530 Boechout',labelde:'2530 Boechout',parentid:'wreg.107',show:'true',sort:'558'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.574',label:'2531 Vremde (Boechout)',labelnl:'2531 Vremde (Boechout)',labelfr:'2531 Vremde',labelen:'2531 Vremde',labelde:'2531 Vremde',parentid:'wreg.107',show:'true',sort:'559'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.575',label:'2540 Hove',labelnl:'2540 Hove',labelfr:'2540 Hove',labelen:'2540 Hove',labelde:'2540 Hove',parentid:'wreg.108',show:'true',sort:'560'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.576',label:'2547 Lint',labelnl:'2547 Lint',labelfr:'2547 Lint',labelen:'2547 Lint',labelde:'2547 Lint',parentid:'wreg.109',show:'true',sort:'561'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.577',label:'2550 Kontich',labelnl:'2550 Kontich',labelfr:'2550 Kontich',labelen:'2550 Kontich',labelde:'2550 Kontich',parentid:'wreg.110',show:'true',sort:'562'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.578',label:'2550 Waarloos (Kontich)',labelnl:'2550 Waarloos (Kontich)',labelfr:'2550 Waerloos',labelen:'2550 Waarloos',labelde:'2550 Waarloos',parentid:'wreg.110',show:'true',sort:'563'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.579',label:'2560 Nijlen',labelnl:'2560 Nijlen',labelfr:'2560 Nijlen',labelen:'2560 Nijlen',labelde:'2560 Nijlen',parentid:'wreg.111',show:'true',sort:'564'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.580',label:'2560 Bevel (Nijlen)',labelnl:'2560 Bevel (Nijlen)',labelfr:'2560 Bevel',labelen:'2560 Bevel',labelde:'2560 Bevel',parentid:'wreg.111',show:'true',sort:'565'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.581',label:'2560 Kessel (Nijlen)',labelnl:'2560 Kessel (Nijlen)',labelfr:'2560 Kessel',labelen:'2560 Kessel',labelde:'2560 Kessel',parentid:'wreg.111',show:'true',sort:'566'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.582',label:'2570 Duffel',labelnl:'2570 Duffel',labelfr:'2570 Duffel',labelen:'2570 Duffel',labelde:'2570 Duffel',parentid:'wreg.112',show:'true',sort:'567'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.583',label:'2580 Putte',labelnl:'2580 Putte',labelfr:'2580 Putte',labelen:'2580 Putte',labelde:'2580 Putte',parentid:'wreg.113',show:'true',sort:'568'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.584',label:'2580 Beerzel (Putte)',labelnl:'2580 Beerzel (Putte)',labelfr:'2580 Beerzel',labelen:'2580 Beerzel',labelde:'2580 Beerzel',parentid:'wreg.113',show:'true',sort:'569'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.585',label:'2590 Berlaar',labelnl:'2590 Berlaar',labelfr:'2590 Berlaar',labelen:'2590 Berlaar',labelde:'2590 Berlaar',parentid:'wreg.114',show:'true',sort:'570'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.586',label:'2590 Gestel (Berlaar)',labelnl:'2590 Gestel (Berlaar)',labelfr:'2590 Gestel',labelen:'2590 Gestel',labelde:'2590 Gestel',parentid:'wreg.114',show:'true',sort:'571'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.587',label:'2620 Hemiksem',labelnl:'2620 Hemiksem',labelfr:'2620 Hemiksem',labelen:'2620 Hemiksem',labelde:'2620 Hemiksem',parentid:'wreg.115',show:'true',sort:'572'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.588',label:'2627 Schelle',labelnl:'2627 Schelle',labelfr:'2627 Schelle',labelen:'2627 Schelle',labelde:'2627 Schelle',parentid:'wreg.116',show:'true',sort:'573'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.589',label:'2630 Aartselaar',labelnl:'2630 Aartselaar',labelfr:'2630 Aartselaar',labelen:'2630 Aartselaar',labelde:'2630 Aartselaar',parentid:'wreg.117',show:'true',sort:'574'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.590',label:'2640 Mortsel',labelnl:'2640 Mortsel',labelfr:'2640 Mortsel',labelen:'2640 Mortsel',labelde:'2640 Mortsel',parentid:'wreg.118',show:'true',sort:'575'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.591',label:'2650 Edegem',labelnl:'2650 Edegem',labelfr:'2650 Edegem',labelen:'2650 Edegem',labelde:'2650 Edegem',parentid:'wreg.119',show:'true',sort:'576'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.592',label:'2800 Mechelen',labelnl:'2800 Mechelen',labelfr:'2800 Malines',labelen:'2800 Mechelen',labelde:'2800 Mechelen',parentid:'wreg.120',show:'true',sort:'577'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.593',label:'2800 Walem (Mechelen)',labelnl:'2800 Walem (Mechelen)',labelfr:'2800 Walem',labelen:'2800 Walem',labelde:'2800 Walem',parentid:'wreg.120',show:'true',sort:'578'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.594',label:'2801 Heffen (Mechelen)',labelnl:'2801 Heffen (Mechelen)',labelfr:'2801 Heffen',labelen:'2801 Heffen',labelde:'2801 Heffen',parentid:'wreg.120',show:'true',sort:'579'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.595',label:'2811 Hombeek (Mechelen)',labelnl:'2811 Hombeek (Mechelen)',labelfr:'2811 Hombeek',labelen:'2811 Hombeek',labelde:'2811 Hombeek',parentid:'wreg.120',show:'true',sort:'580'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.596',label:'2811 Leest (Mechelen)',labelnl:'2811 Leest (Mechelen)',labelfr:'2811 Leest',labelen:'2811 Leest',labelde:'2811 Leest',parentid:'wreg.120',show:'true',sort:'581'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.597',label:'2812 Muizen (Mechelen)',labelnl:'2812 Muizen (Mechelen)',labelfr:'2812 Muizen',labelen:'2812 Muizen',labelde:'2812 Muizen',parentid:'wreg.120',show:'true',sort:'582'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.598',label:'2820 Bonheiden',labelnl:'2820 Bonheiden',labelfr:'2820 Bonheiden',labelen:'2820 Bonheiden',labelde:'2820 Bonheiden',parentid:'wreg.121',show:'true',sort:'583'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.599',label:'2820 Rijmenam (Bonheiden)',labelnl:'2820 Rijmenam (Bonheiden)',labelfr:'2820 Rijmenam',labelen:'2820 Rijmenam',labelde:'2820 Rijmenam',parentid:'wreg.121',show:'true',sort:'584'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.600',label:'2830 Willebroek',labelnl:'2830 Willebroek',labelfr:'2830 Willebroek',labelen:'2830 Willebroek',labelde:'2830 Willebroek',parentid:'wreg.122',show:'true',sort:'585'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.601',label:'2830 Blaasveld (Willebroek)',labelnl:'2830 Blaasveld (Willebroek)',labelfr:'2830 Blaasveld',labelen:'2830 Blaasveld',labelde:'2830 Blaasveld',parentid:'wreg.122',show:'true',sort:'586'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.602',label:'2830 Heindonk (Willebroek)',labelnl:'2830 Heindonk (Willebroek)',labelfr:'2830 Heindonk',labelen:'2830 Heindonk',labelde:'2830 Heindonk',parentid:'wreg.122',show:'true',sort:'587'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.603',label:'2830 Tisselt (Willebroek)',labelnl:'2830 Tisselt (Willebroek)',labelfr:'2830 Tisselt',labelen:'2830 Tisselt',labelde:'2830 Tisselt',parentid:'wreg.122',show:'true',sort:'588'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.604',label:'2840 Rumst',labelnl:'2840 Rumst',labelfr:'2840 Rumst',labelen:'2840 Rumst',labelde:'2840 Rumst',parentid:'wreg.123',show:'true',sort:'589'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.605',label:'2840 Reet (Rumst)',labelnl:'2840 Reet (Rumst)',labelfr:'2840 Reet',labelen:'2840 Reet',labelde:'2840 Reet',parentid:'wreg.123',show:'true',sort:'590'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.606',label:'2840 Terhagen (Rumst)',labelnl:'2840 Terhagen (Rumst)',labelfr:'2840 Terhagen',labelen:'2840 Terhagen',labelde:'2840 Terhagen',parentid:'wreg.123',show:'true',sort:'591'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.607',label:'2845 Niel',labelnl:'2845 Niel',labelfr:'2845 Niel',labelen:'2845 Niel',labelde:'2845 Niel',parentid:'wreg.124',show:'true',sort:'592'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.608',label:'2850 Boom',labelnl:'2850 Boom',labelfr:'2850 Boom',labelen:'2850 Boom',labelde:'2850 Boom',parentid:'wreg.125',show:'true',sort:'593'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.609',label:'2860 Sint-Katelijne-Waver',labelnl:'2860 Sint-Katelijne-Waver',labelfr:'2860 Wavre-Sainte-Catherine',labelen:'2860 Sint-Katelijne-Waver',labelde:'2860 Sint-Katelijne-Waver',parentid:'wreg.126',show:'true',sort:'594'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.610',label:'2861 Onze-Lieve-Vrouw-Waver (Sint-Katelijne-Waver)',labelnl:'2861 Onze-Lieve-Vrouw-Waver (Sint-Katelijne-Waver)',labelfr:'2861 Wavre-Notre-Dame',labelen:'2861 Onze-Lieve-Vrouw-Waver',labelde:'2861 Onze-Lieve-Vrouw-Waver',parentid:'wreg.126',show:'true',sort:'595'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.611',label:'2870 Puurs',labelnl:'2870 Puurs',labelfr:'2870 Puurs',labelen:'2870 Puurs',labelde:'2870 Puurs',parentid:'wreg.128',show:'true',sort:'596'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.612',label:'2870 Breendonk (Puurs)',labelnl:'2870 Breendonk (Puurs)',labelfr:'2870 Breendonk',labelen:'2870 Breendonk',labelde:'2870 Breendonk',parentid:'wreg.128',show:'true',sort:'597'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.613',label:'2870 Liezele (Puurs)',labelnl:'2870 Liezele (Puurs)',labelfr:'2870 Liezele',labelen:'2870 Liezele',labelde:'2870 Liezele',parentid:'wreg.128',show:'true',sort:'598'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.614',label:'2870 Ruisbroek (Puurs)',labelnl:'2870 Ruisbroek (Puurs)',labelfr:'2870 Ruisbroek',labelen:'2870 Ruisbroek',labelde:'2870 Ruisbroek',parentid:'wreg.128',show:'true',sort:'599'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.615',label:'2880 Bornem',labelnl:'2880 Bornem',labelfr:'2880 Bornem',labelen:'2880 Bornem',labelde:'2880 Bornem',parentid:'wreg.129',show:'true',sort:'600'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.616',label:'2880 Hingene (Bornem)',labelnl:'2880 Hingene (Bornem)',labelfr:'2880 Hingene',labelen:'2880 Hingene',labelde:'2880 Hingene',parentid:'wreg.129',show:'true',sort:'601'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.617',label:'2880 Mariekerke (Bornem)',labelnl:'2880 Mariekerke (Bornem)',labelfr:'2880 Mariekerke',labelen:'2880 Mariekerke',labelde:'2880 Mariekerke',parentid:'wreg.129',show:'true',sort:'602'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.618',label:'2880 Weert (Bornem)',labelnl:'2880 Weert (Bornem)',labelfr:'2880 Weert',labelen:'2880 Weert',labelde:'2880 Weert',parentid:'wreg.129',show:'true',sort:'603'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.619',label:'2890 Sint-Amands',labelnl:'2890 Sint-Amands',labelfr:'2890 Saint-Amand',labelen:'2890 Sint-Amands',labelde:'2890 Sint-Amands',parentid:'wreg.130',show:'true',sort:'604'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.620',label:'2890 Lippelo (Sint-Amands)',labelnl:'2890 Lippelo (Sint-Amands)',labelfr:'2890 Lippelo',labelen:'2890 Lippelo',labelde:'2890 Lippelo',parentid:'wreg.130',show:'true',sort:'605'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.621',label:'2890 Oppuurs (Sint-Amands)',labelnl:'2890 Oppuurs (Sint-Amands)',labelfr:'2890 Oppuurs',labelen:'2890 Oppuurs',labelde:'2890 Oppuurs',parentid:'wreg.130',show:'true',sort:'606'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.622',label:'2900 Schoten',labelnl:'2900 Schoten',labelfr:'2900 Schoten',labelen:'2900 Schoten',labelde:'2900 Schoten',parentid:'wreg.131',show:'true',sort:'607'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.623',label:'2910 Essen',labelnl:'2910 Essen',labelfr:'2910 Essen',labelen:'2910 Essen',labelde:'2910 Essen',parentid:'wreg.132',show:'true',sort:'608'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.624',label:'2920 Kalmthout',labelnl:'2920 Kalmthout',labelfr:'2920 Kalmthout',labelen:'2920 Kalmthout',labelde:'2920 Kalmthout',parentid:'wreg.133',show:'true',sort:'609'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.625',label:'2930 Brasschaat',labelnl:'2930 Brasschaat',labelfr:'2930 Brasschaat',labelen:'2930 Brasschaat',labelde:'2930 Brasschaat',parentid:'wreg.134',show:'true',sort:'610'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.626',label:'2940 Stabroek',labelnl:'2940 Stabroek',labelfr:'2940 Stabroek',labelen:'2940 Stabroek',labelde:'2940 Stabroek',parentid:'wreg.135',show:'true',sort:'611'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.627',label:'2940 Hoevenen (Stabroek)',labelnl:'2940 Hoevenen (Stabroek)',labelfr:'2940 Hoevenen',labelen:'2940 Hoevenen',labelde:'2940 Hoevenen',parentid:'wreg.135',show:'true',sort:'612'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.628',label:'2950 Kapellen',labelnl:'2950 Kapellen',labelfr:'2950 Kapellen',labelen:'2950 Kapellen',labelde:'2950 Kapellen',parentid:'wreg.136',show:'true',sort:'613'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.629',label:'2960 Brecht',labelnl:'2960 Brecht',labelfr:'2960 Brecht',labelen:'2960 Brecht',labelde:'2960 Brecht',parentid:'wreg.137',show:'true',sort:'614'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.630',label:'2960 Sint-Job-In-\'t-Goor (Brecht)',labelnl:'2960 Sint-Job-In-\'t-Goor (Brecht)',labelfr:'2960 Sint-Job-In-\'t-Goor',labelen:'2960 Sint-Job-In-\'t-Goor',labelde:'2960 Sint-Job-In-\'t-Goor',parentid:'wreg.137',show:'true',sort:'615'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.631',label:'2960 Sint-Lenaarts (Brecht)',labelnl:'Sint-Lenaarts (Brecht)',labelfr:'2960 Saint-Léonard',labelen:'Sint-Lenaarts',labelde:'Sint-Lenaarts',parentid:'wreg.137',show:'true',sort:'616'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.632',label:'2970 Schilde',labelnl:'2970 Schilde',labelfr:'2970 Schilde',labelen:'2970 Schilde',labelde:'2970 Schilde',parentid:'wreg.138',show:'true',sort:'617'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.633',label:'2970 \'s Gravenwezel (Schilde)',labelnl:'2970 \'s Gravenwezel (Schilde)',labelfr:'2970 \'s-Gravenwezel',labelen:'2970 \'s-Gravenwezel',labelde:'2970 \'s-Gravenwezel',parentid:'wreg.138',show:'true',sort:'618'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.634',label:'2980 Zoersel',labelnl:'2980 Zoersel',labelfr:'2980 Zoersel',labelen:'2980 Zoersel',labelde:'2980 Zoersel',parentid:'wreg.139',show:'true',sort:'619'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.635',label:'2980 Halle (Zoersel)',labelnl:'2980 Halle (Zoersel)',labelfr:'2980 Halle',labelen:'2980 Halle',labelde:'2980 Halle',parentid:'wreg.139',show:'true',sort:'620'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.636',label:'2990 Wuustwezel',labelnl:'2990 Wuustwezel',labelfr:'2990 Wuustwezel',labelen:'2990 Wuustwezel',labelde:'2990 Wuustwezel',parentid:'wreg.140',show:'true',sort:'621'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.637',label:'2990 Loenhout (Wuustwezel)',labelnl:'2990 Loenhout (Wuustwezel)',labelfr:'2990 Loenhout',labelen:'2990 Loenhout',labelde:'2990 Loenhout',parentid:'wreg.140',show:'true',sort:'622'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.638',label:'3000 Leuven',labelnl:'3000 Leuven',labelfr:'3000 Louvain',labelen:'3000 Leuven',labelde:'3000 Löwen',parentid:'wreg.141',show:'true',sort:'623'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.639',label:'3001 Heverlee (Leuven)',labelnl:'3001 Heverlee (Leuven)',labelfr:'3001 Heverlee',labelen:'3001 Heverlee',labelde:'3001 Heverlee',parentid:'wreg.141',show:'true',sort:'624'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.640',label:'3010 Kessel-Lo (Leuven)',labelnl:'3010 Kessel-Lo (Leuven)',labelfr:'3010 Kessel-Lo',labelen:'3010 Kessel-Lo',labelde:'3010 Kessel-Lo',parentid:'wreg.141',show:'true',sort:'625'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.641',label:'3012 Wilsele (Leuven)',labelnl:'3012 Wilsele (Leuven)',labelfr:'3012 Wilsele',labelen:'3012 Wilsele',labelde:'3012 Wilsele',parentid:'wreg.141',show:'true',sort:'626'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.642',label:'3018 Wijgmaal (Leuven)',labelnl:'3018 Wijgmaal (Leuven)',labelfr:'3018 Wijgmaal',labelen:'3018 Wijgmaal',labelde:'3018 Wijgmaal',parentid:'wreg.141',show:'true',sort:'627'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.643',label:'3020 Herent',labelnl:'3020 Herent',labelfr:'3020 Herent',labelen:'3020 Herent',labelde:'3020 Herent',parentid:'wreg.142',show:'true',sort:'628'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.644',label:'3020 Veltem-Beisem (Herent)',labelnl:'3020 Veltem-Beisem (Herent)',labelfr:'3020 Veltem-Beisem',labelen:'3020 Veltem-Beisem',labelde:'3020 Veltem-Beisem',parentid:'wreg.142',show:'true',sort:'629'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.645',label:'3020 Winksele (Herent)',labelnl:'3020 Winksele (Herent)',labelfr:'3020 Winksele',labelen:'3020 Winksele',labelde:'3020 Winksele',parentid:'wreg.142',show:'true',sort:'630'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.646',label:'3040 Huldenberg',labelnl:'3040 Huldenberg',labelfr:'3040 Huldenberg',labelen:'3040 Huldenberg',labelde:'3040 Huldenberg',parentid:'wreg.143',show:'true',sort:'631'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.647',label:'3040 Loonbeek (Huldenberg)',labelnl:'3040 Loonbeek (Huldenberg)',labelfr:'3040 Loonbeek',labelen:'3040 Loonbeek',labelde:'3040 Loonbeek',parentid:'wreg.143',show:'true',sort:'632'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.648',label:'3040 Neerijse (Huldenberg)',labelnl:'3040 Neerijse (Huldenberg)',labelfr:'3040 Neerijse',labelen:'3040 Neerijse',labelde:'3040 Neerijse',parentid:'wreg.143',show:'true',sort:'633'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.649',label:'3040 Ottenburg (Huldenberg)',labelnl:'3040 Ottenburg (Huldenberg)',labelfr:'3040 Ottenburg',labelen:'3040 Ottenburg',labelde:'3040 Ottenburg',parentid:'wreg.143',show:'true',sort:'634'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.650',label:'3040 Sint-Agatha-Rode (Huldenberg)',labelnl:'3040 Sint-Agatha-Rode (Huldenberg)',labelfr:'3040 Rhode-Sainte-Agathe',labelen:'3040 Sint-Agatha-Rode',labelde:'3040 Sint-Agatha-Rode',parentid:'wreg.143',show:'true',sort:'635'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.651',label:'3050 Oud-Heverlee',labelnl:'3050 Oud-Heverlee',labelfr:'3050 Oud-Heverlee',labelen:'3050 Oud-Heverlee',labelde:'3050 Oud-Heverlee',parentid:'wreg.144',show:'true',sort:'636'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.652',label:'3051 Sint-Joris-Weert (Oud-Heverlee)',labelnl:'3051 Sint-Joris-Weert (Oud-Heverlee)',labelfr:'3051 Sint-Joris-Weert',labelen:'3051 Sint-Joris-Weert',labelde:'3051 Sint-Joris-Weert',parentid:'wreg.144',show:'true',sort:'637'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.653',label:'3052 Blanden (Oud-Heverlee)',labelnl:'3052 Blanden (Oud-Heverlee)',labelfr:'3052 Blanden',labelen:'3052 Blanden',labelde:'3052 Blanden',parentid:'wreg.144',show:'true',sort:'638'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.654',label:'3053 Haasrode (Oud-Heverlee)',labelnl:'3053 Haasrode (Oud-Heverlee)',labelfr:'3053 Haasrode',labelen:'3053 Haasrode',labelde:'3053 Haasrode',parentid:'wreg.144',show:'true',sort:'639'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.655',label:'3054 Vaalbeek (Oud-Heverlee)',labelnl:'3054 Vaalbeek (Oud-Heverlee)',labelfr:'3054 Vaalbeek',labelen:'3054 Vaalbeek',labelde:'3054 Vaalbeek',parentid:'wreg.144',show:'true',sort:'640'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.656',label:'3060 Bertem',labelnl:'3060 Bertem',labelfr:'3060 Bertem',labelen:'3060 Bertem',labelde:'3060 Bertem',parentid:'wreg.145',show:'true',sort:'641'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.657',label:'3060 Korbeek-Dijle (Bertem)',labelnl:'3060 Korbeek-Dijle (Bertem)',labelfr:'3060 Korbeek-Dijle',labelen:'3060 Korbeek-Dijle',labelde:'3060 Korbeek-Dijle',parentid:'wreg.145',show:'true',sort:'642'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.658',label:'3061 Leefdaal (Bertem)',labelnl:'3061 Leefdaal (Bertem)',labelfr:'3061 Leefdaal',labelen:'3061 Leefdaal',labelde:'3061 Leefdaal',parentid:'wreg.145',show:'true',sort:'643'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.659',label:'3070 Kortenberg',labelnl:'3070 Kortenberg',labelfr:'3070 Kortenberg',labelen:'3070 Kortenberg',labelde:'3070 Kortenberg',parentid:'wreg.146',show:'true',sort:'644'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.660',label:'3071 Erps-Kwerps (Kortenberg)',labelnl:'3071 Erps-Kwerps (Kortenberg)',labelfr:'3071 Erps-Kwerps',labelen:'3071 Erps-Kwerps',labelde:'3071 Erps-Kwerps',parentid:'wreg.146',show:'true',sort:'645'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.661',label:'3078 Everberg (Kortenberg)',labelnl:'3078 Everberg (Kortenberg)',labelfr:'3078 Everberg',labelen:'3078 Everberg',labelde:'3078 Everberg',parentid:'wreg.146',show:'true',sort:'646'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.662',label:'3078 Meerbeek (Kortenberg)',labelnl:'3078 Meerbeek (Kortenberg)',labelfr:'3078 Meerbeek',labelen:'3078 Meerbeek',labelde:'3078 Meerbeek',parentid:'wreg.146',show:'true',sort:'647'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.663',label:'3080 Tervuren',labelnl:'3080 Tervuren',labelfr:'3080 Tervuren',labelen:'3080 Tervuren',labelde:'3080 Tervuren',parentid:'wreg.147',show:'true',sort:'648'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.664',label:'3080 Duisburg (Tervuren)',labelnl:'3080 Duisburg (Tervuren)',labelfr:'3080 Duisburg',labelen:'3080 Duisburg',labelde:'3080 Duisburg',parentid:'wreg.147',show:'true',sort:'649'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.665',label:'3080 Vossem (Tervuren)',labelnl:'3080 Vossem (Tervuren)',labelfr:'3080 Vossem',labelen:'3080 Vossem',labelde:'3080 Vossem',parentid:'wreg.147',show:'true',sort:'650'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.666',label:'3090 Overijse',labelnl:'3090 Overijse',labelfr:'3090 Overijse',labelen:'3090 Overijse',labelde:'3090 Overijse',parentid:'wreg.148',show:'true',sort:'651'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.667',label:'3110 Rotselaar',labelnl:'3110 Rotselaar',labelfr:'3110 Rotselaar',labelen:'3110 Rotselaar',labelde:'3110 Rotselaar',parentid:'wreg.149',show:'true',sort:'652'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.668',label:'3111 Wezemaal (Rotselaar)',labelnl:'3111 Wezemaal (Rotselaar)',labelfr:'3111 Wezemaal',labelen:'3111 Wezemaal',labelde:'3111 Wezemaal',parentid:'wreg.149',show:'true',sort:'653'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.669',label:'3118 Werchter (Rotselaar)',labelnl:'3118 Werchter (Rotselaar)',labelfr:'3118 Werchter',labelen:'3118 Werchter',labelde:'3118 Werchter',parentid:'wreg.149',show:'true',sort:'654'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.670',label:'3120 Tremelo',labelnl:'3120 Tremelo',labelfr:'3120 Tremelo',labelen:'3120 Tremelo',labelde:'3120 Tremelo',parentid:'wreg.150',show:'true',sort:'655'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.671',label:'3128 Baal (Tremelo)',labelnl:'3128 Baal (Tremelo)',labelfr:'3128 Baal',labelen:'3128 Baal',labelde:'3128 Baal',parentid:'wreg.150',show:'true',sort:'656'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.672',label:'3130 Begijnendijk',labelnl:'3130 Begijnendijk',labelfr:'3130 Begijnendijk',labelen:'3130 Begijnendijk',labelde:'3130 Begijnendijk',parentid:'wreg.151',show:'true',sort:'657'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.673',label:'3130 Betekom (Begijnendijk)',labelnl:'3130 Betekom (Begijnendijk)',labelfr:'3130 Betekom',labelen:'3130 Betekom',labelde:'3130 Betekom',parentid:'wreg.151',show:'true',sort:'658'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.674',label:'3140 Keerbergen',labelnl:'3140 Keerbergen',labelfr:'3140 Keerbergen',labelen:'3140 Keerbergen',labelde:'3140 Keerbergen',parentid:'wreg.152',show:'true',sort:'659'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.675',label:'3150 Haacht',labelnl:'3150 Haacht',labelfr:'3150 Haacht',labelen:'3150 Haacht',labelde:'3150 Haacht',parentid:'wreg.153',show:'true',sort:'660'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.676',label:'3150 Tildonk (Haacht)',labelnl:'3150 Tildonk (Haacht)',labelfr:'3150 Tildonk',labelen:'3150 Tildonk',labelde:'3150 Tildonk',parentid:'wreg.153',show:'true',sort:'661'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.677',label:'3150 Wespelaar (Haacht)',labelnl:'3150 Wespelaar (Haacht)',labelfr:'3150 Wespelaar',labelen:'3150 Wespelaar',labelde:'3150 Wespelaar',parentid:'wreg.153',show:'true',sort:'662'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.678',label:'3190 Boortmeerbeek',labelnl:'3190 Boortmeerbeek',labelfr:'3190 Boortmeerbeek',labelen:'3190 Boortmeerbeek',labelde:'3190 Boortmeerbeek',parentid:'wreg.154',show:'true',sort:'663'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.679',label:'3191 Hever (Boortmeerbeek)',labelnl:'3191 Hever (Boortmeerbeek)',labelfr:'3191 Hever',labelen:'3191 Hever',labelde:'3191 Hever',parentid:'wreg.154',show:'true',sort:'664'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.680',label:'3200 Aarschot',labelnl:'3200 Aarschot',labelfr:'3200 Aarschot',labelen:'3200 Aarschot',labelde:'3200 Aarschot',parentid:'wreg.155',show:'true',sort:'665'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.681',label:'3200 Gelrode (Aarschot)',labelnl:'3200 Gelrode (Aarschot)',labelfr:'3200 Gelrode',labelen:'3200 Gelrode',labelde:'3200 Gelrode',parentid:'wreg.155',show:'true',sort:'666'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.682',label:'3201 Langdorp (Aarschot)',labelnl:'3201 Langdorp (Aarschot)',labelfr:'3201 Langdorp',labelen:'3201 Langdorp',labelde:'3201 Langdorp',parentid:'wreg.155',show:'true',sort:'667'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.683',label:'3202 Rillaar (Aarschot)',labelnl:'3202 Rillaar (Aarschot)',labelfr:'3202 Rillaar',labelen:'3202 Rillaar',labelde:'3202 Rillaar',parentid:'wreg.155',show:'true',sort:'668'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.684',label:'3210 Lubbeek',labelnl:'3210 Lubbeek',labelfr:'3210 Lubbeek',labelen:'3210 Lubbeek',labelde:'3210 Lubbeek',parentid:'wreg.156',show:'true',sort:'669'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.685',label:'3210 Linden (Lubbeek)',labelnl:'3210 Linden (Lubbeek)',labelfr:'3210 Linden',labelen:'3210 Linden',labelde:'3210 Linden',parentid:'wreg.156',show:'true',sort:'670'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.686',label:'3211 Binkom (Lubbeek)',labelnl:'3211 Binkom (Lubbeek)',labelfr:'3211 Binkom',labelen:'3211 Binkom',labelde:'3211 Binkom',parentid:'wreg.156',show:'true',sort:'671'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.687',label:'3212 Pellenberg (Lubbeek)',labelnl:'3212 Pellenberg (Lubbeek)',labelfr:'3212 Pellenberg',labelen:'3212 Pellenberg',labelde:'3212 Pellenberg',parentid:'wreg.156',show:'true',sort:'672'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.689',label:'3220 Kortrijk-Dutsel (Holsbeek)',labelnl:'3220 Kortrijk-Dutsel (Holsbeek)',labelfr:'3220 Courtrai-Dutsel',labelen:'3220 Kortrijk-Dutsel',labelde:'3220 Kortrijk-Dutsel',parentid:'wreg.157',show:'true',sort:'674'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.688',label:'3220 Holsbeek',labelnl:'3220 Holsbeek',labelfr:'3220 Holsbeek',labelen:'3220 Holsbeek',labelde:'3220 Holsbeek',parentid:'wreg.157',show:'true',sort:'673'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.690',label:'3220 Sint-Pieters-Rode (Holsbeek)',labelnl:'3220 Sint-Pieters-Rode (Holsbeek)',labelfr:'3220 Rhode-Saint-Pierre',labelen:'3220 Sint-Pieters-Rode',labelde:'3220 Sint-Pieters-Rode',parentid:'wreg.157',show:'true',sort:'675'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.691',label:'3221 Nieuwrode (Holsbeek)',labelnl:'3221 Nieuwrode (Holsbeek)',labelfr:'3221 Nieuwrode',labelen:'3221 Nieuwrode',labelde:'3221 Nieuwrode',parentid:'wreg.157',show:'true',sort:'676'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.692',label:'3270 Scherpenheuvel-Zichem',labelnl:'3270 Scherpenheuvel-Zichem',labelfr:'3270 Montaigu-Zichem',labelen:'3270 Scherpenheuvel-Zichem',labelde:'3270 Scherpenheuvel-Zichem',parentid:'wreg.158',show:'true',sort:'677'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.693',label:'3270 Scherpenheuvel (Scherpenheuvel-Zichem)',labelnl:'3270 Scherpenheuvel (Scherpenheuvel-Zichem)',labelfr:'3270 Montaigu',labelen:'3270 Scherpenheuvel',labelde:'3270 Scherpenheuvel',parentid:'wreg.158',show:'true',sort:'678'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.694',label:'3271 Averbode (Scherpenheuvel-Zichem)',labelnl:'3271 Averbode (Scherpenheuvel-Zichem)',labelfr:'3271 Averbode',labelen:'3271 Averbode',labelde:'3271 Averbode',parentid:'wreg.158',show:'true',sort:'679'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.695',label:'3271 Zichem (Scherpenheuvel-Zichem)',labelnl:'3271 Zichem (Scherpenheuvel-Zichem)',labelfr:'3271 Zichem',labelen:'3271 Zichem',labelde:'3271 Zichem',parentid:'wreg.158',show:'true',sort:'680'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.696',label:'3272 Messelbroek (Scherpenheuvel-Zichem)',labelnl:'3272 Messelbroek (Scherpenheuvel-Zichem)',labelfr:'3272 Messelbroek',labelen:'3272 Messelbroek',labelde:'3272 Messelbroek',parentid:'wreg.158',show:'true',sort:'681'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.697',label:'3272 Testelt (Scherpenheuvel-Zichem)',labelnl:'3272 Testelt (Scherpenheuvel-Zichem)',labelfr:'3272 Testelt',labelen:'3272 Testelt',labelde:'3272 Testelt',parentid:'wreg.158',show:'true',sort:'682'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.698',label:'3290 Diest',labelnl:'3290 Diest',labelfr:'3290 Diest',labelen:'3290 Diest',labelde:'3290 Diest',parentid:'wreg.159',show:'true',sort:'683'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.699',label:'3290 Deurne (Diest)',labelnl:'3290 Deurne (Diest)',labelfr:'3290 Deurne',labelen:'3290 Deurne',labelde:'3290 Deurne',parentid:'wreg.159',show:'true',sort:'684'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.700',label:'3290 Schaffen (Diest)',labelnl:'3290 Schaffen (Diest)',labelfr:'3290 Schaffen',labelen:'3290 Schaffen',labelde:'3290 Schaffen',parentid:'wreg.159',show:'true',sort:'685'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.701',label:'3290 Webbekom (Diest)',labelnl:'3290 Webbekom (Diest)',labelfr:'3290 Webbekom',labelen:'3290 Webbekom',labelde:'3290 Webbekom',parentid:'wreg.159',show:'true',sort:'686'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.702',label:'3293 Kaggevinne (Diest)',labelnl:'3293 Kaggevinne (Diest)',labelfr:'3293 Kaggevinne',labelen:'3293 Kaggevinne',labelde:'3293 Kaggevinne',parentid:'wreg.159',show:'true',sort:'687'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.703',label:'3294 Molenstede (Diest)',labelnl:'3294 Molenstede (Diest)',labelfr:'3294 Molenstede',labelen:'3294 Molenstede',labelde:'3294 Molenstede',parentid:'wreg.159',show:'true',sort:'688'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.704',label:'3300 Tienen',labelnl:'3300 Tienen',labelfr:'3300 Tirlemont',labelen:'3300 Tienen',labelde:'3300 Tienen',parentid:'wreg.160',show:'true',sort:'689'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.705',label:'3300 Bost (Tienen)',labelnl:'3300 Bost (Tienen)',labelfr:'3300 Bost',labelen:'3300 Bost',labelde:'3300 Bost',parentid:'wreg.160',show:'true',sort:'690'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.706',label:'3300 Goetsenhoven (Tienen)',labelnl:'3300 Goetsenhoven (Tienen)',labelfr:'3300 Gossoncourt',labelen:'3300 Goetsenhoven',labelde:'3300 Goetsenhoven',parentid:'wreg.160',show:'true',sort:'691'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.707',label:'3300 Hakendover (Tienen)',labelnl:'3300 Hakendover (Tienen)',labelfr:'3300 Hakendover',labelen:'3300 Hakendover',labelde:'3300 Hakendover',parentid:'wreg.160',show:'true',sort:'692'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.708',label:'3300 Kumtich (Tienen)',labelnl:'3300 Kumtich (Tienen)',labelfr:'3300 Kumtich',labelen:'3300 Kumtich',labelde:'3300 Kumtich',parentid:'wreg.160',show:'true',sort:'693'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.709',label:'3300 Oorbeek (Tienen)',labelnl:'3300 Oorbeek (Tienen)',labelfr:'3300 Oorbeek',labelen:'3300 Oorbeek',labelde:'3300 Oorbeek',parentid:'wreg.160',show:'true',sort:'694'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.710',label:'3300 Oplinter (Tienen)',labelnl:'3300 Oplinter (Tienen)',labelfr:'3300 Oplinter',labelen:'3300 Oplinter',labelde:'3300 Oplinter',parentid:'wreg.160',show:'true',sort:'695'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.711',label:'3300 Sint-Margriete-Houtem (Tienen)',labelnl:'3300 Sint-Margriete-Houtem (Tienen)',labelfr:'3300 Hautem-Sainte-Marguerite',labelen:'3300 Sint-Margriete-Houtem',labelde:'3300 Sint-Margriete-Houtem',parentid:'wreg.160',show:'true',sort:'696'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.712',label:'3300 Vissenaken (Tienen)',labelnl:'3300 Vissenaken (Tienen)',labelfr:'3300 Vissenaken',labelen:'3300 Vissenaken',labelde:'3300 Vissenaken',parentid:'wreg.160',show:'true',sort:'697'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.713',label:'3320 Hoegaarden',labelnl:'3320 Hoegaarden',labelfr:'3320 Hoegaarden',labelen:'3320 Hoegaarden',labelde:'3320 Hoegaarden',parentid:'wreg.161',show:'true',sort:'698'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.714',label:'3320 Meldert (Hoegaarden)',labelnl:'3320 Meldert (Hoegaarden)',labelfr:'3320 Meldert',labelen:'3320 Meldert',labelde:'3320 Meldert',parentid:'wreg.161',show:'true',sort:'699'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.715',label:'3321 Outgaarden (Hoegaarden)',labelnl:'3321 Outgaarden (Hoegaarden)',labelfr:'3321 Outgaarden',labelen:'3321 Outgaarden',labelde:'3321 Outgaarden',parentid:'wreg.161',show:'true',sort:'700'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.716',label:'3350 Linter',labelnl:'3350 Linter',labelfr:'3350 Linter',labelen:'3350 Linter',labelde:'3350 Linter',parentid:'wreg.163',show:'true',sort:'701'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.717',label:'3350 Drieslinter (Linter)',labelnl:'3350 Drieslinter (Linter)',labelfr:'3350 Drieslinter',labelen:'3350 Drieslinter',labelde:'3350 Drieslinter',parentid:'wreg.163',show:'true',sort:'702'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.718',label:'3350 Melkwezer (Linter)',labelnl:'3350 Melkwezer (Linter)',labelfr:'3350 Melkwezer',labelen:'3350 Melkwezer',labelde:'3350 Melkwezer',parentid:'wreg.163',show:'true',sort:'703'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.719',label:'3350 Neerhespen (Linter)',labelnl:'3350 Neerhespen (Linter)',labelfr:'3350 Neerhespen',labelen:'3350 Neerhespen',labelde:'3350 Neerhespen',parentid:'wreg.163',show:'true',sort:'704'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.720',label:'3350 Neerlinter (Linter)',labelnl:'3350 Neerlinter (Linter)',labelfr:'3350 Neerlinter',labelen:'3350 Neerlinter',labelde:'3350 Neerlinter',parentid:'wreg.163',show:'true',sort:'705'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.721',label:'3350 Orsmaal-Gussenhoven (Linter)',labelnl:'3350 Orsmaal-Gussenhoven (Linter)',labelfr:'3350 Orsmaal-Gussenhoven',labelen:'3350 Orsmaal-Gussenhoven',labelde:'3350 Orsmaal-Gussenhoven',parentid:'wreg.163',show:'true',sort:'706'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.722',label:'3350 Overhespen (Linter)',labelnl:'3350 Overhespen (Linter)',labelfr:'3350 Overhespen',labelen:'3350 Overhespen',labelde:'3350 Overhespen',parentid:'wreg.163',show:'true',sort:'707'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.723',label:'3350 Wommersom (Linter)',labelnl:'3350 Wommersom (Linter)',labelfr:'3350 Wommersom',labelen:'3350 Wommersom',labelde:'3350 Wommersom',parentid:'wreg.163',show:'true',sort:'708'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.724',label:'3360 Bierbeek',labelnl:'3360 Bierbeek',labelfr:'3360 Bierbeek',labelen:'3360 Bierbeek',labelde:'3360 Bierbeek',parentid:'wreg.164',show:'true',sort:'709'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.725',label:'3360 Korbeek-Lo (Bierbeek)',labelnl:'3360 Korbeek-Lo (Bierbeek)',labelfr:'3360 Korbeek-Lo',labelen:'3360 Korbeek-Lo',labelde:'3360 Korbeek-Lo',parentid:'wreg.164',show:'true',sort:'710'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.726',label:'3360 Lovenjoel (Bierbeek)',labelnl:'3360 Lovenjoel (Bierbeek)',labelfr:'3360 Lovenjoel',labelen:'3360 Lovenjoel',labelde:'3360 Lovenjoel',parentid:'wreg.164',show:'true',sort:'711'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.727',label:'3360 Opvelp (Bierbeek)',labelnl:'3360 Opvelp (Bierbeek)',labelfr:'3360 Opvelp',labelen:'3360 Opvelp',labelde:'3360 Opvelp',parentid:'wreg.164',show:'true',sort:'712'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.728',label:'3370 Boutersem',labelnl:'3370 Boutersem',labelfr:'3370 Boutersem',labelen:'3370 Boutersem',labelde:'3370 Boutersem',parentid:'wreg.165',show:'true',sort:'713'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.729',label:'3370 Kerkom (Boutersem)',labelnl:'3370 Kerkom (Boutersem)',labelfr:'3370 Kerkom',labelen:'3370 Kerkom',labelde:'3370 Kerkom',parentid:'wreg.165',show:'true',sort:'714'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.730',label:'3370 Neervelp (Boutersem)',labelnl:'3370 Neervelp (Boutersem)',labelfr:'3370 Neervelp',labelen:'3370 Neervelp',labelde:'3370 Neervelp',parentid:'wreg.165',show:'true',sort:'715'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.731',label:'3370 Roosbeek (Boutersem)',labelnl:'3370 Roosbeek (Boutersem)',labelfr:'3370 Roosbeek',labelen:'3370 Roosbeek',labelde:'3370 Roosbeek',parentid:'wreg.165',show:'true',sort:'716'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.732',label:'3370 Vertrijk (Boutersem)',labelnl:'3370 Vertrijk (Boutersem)',labelfr:'3370 Vertrijk',labelen:'3370 Vertrijk',labelde:'3370 Vertrijk',parentid:'wreg.165',show:'true',sort:'717'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.733',label:'3370 Willebringen (Boutersem)',labelnl:'3370 Willebringen (Boutersem)',labelfr:'3370 Willebringen',labelen:'3370 Willebringen',labelde:'3370 Willebringen',parentid:'wreg.165',show:'true',sort:'718'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.734',label:'3380 Glabbeek',labelnl:'3380 Glabbeek',labelfr:'3380 Glabbeek',labelen:'3380 Glabbeek',labelde:'3380 Glabbeek',parentid:'wreg.166',show:'true',sort:'719'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.735',label:'3380 Bunsbeek (Glabbeek)',labelnl:'3380 Bunsbeek (Glabbeek)',labelfr:'3380 Bunsbeek',labelen:'3380 Bunsbeek',labelde:'3380 Bunsbeek',parentid:'wreg.166',show:'true',sort:'720'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.736',label:'3381 Kapellen (Glabbeek)',labelnl:'3381 Kapellen (Glabbeek)',labelfr:'3381 Kapellen',labelen:'3381 Kapellen',labelde:'3381 Kapellen',parentid:'wreg.166',show:'true',sort:'721'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.737',label:'3384 Attenrode (Glabbeek)',labelnl:'3384 Attenrode (Glabbeek)',labelfr:'3384 Attenrode-Wever',labelen:'3384 Attenrode',labelde:'3384 Attenrode',parentid:'wreg.166',show:'true',sort:'722'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.738',label:'3390 Tielt-Winge',labelnl:'3390 Tielt-Winge',labelfr:'3390 Tielt-Winge',labelen:'3390 Tielt-Winge',labelde:'3390 Tielt-Winge',parentid:'wreg.167',show:'true',sort:'723'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.739',label:'3390 Houwaart (Tielt-Winge)',labelnl:'3390 Houwaart (Tielt-Winge)',labelfr:'3390 Houwaart',labelen:'3390 Houwaart',labelde:'3390 Houwaart',parentid:'wreg.167',show:'true',sort:'724'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.740',label:'3390 Sint-Joris-Winge (Tielt-Winge)',labelnl:'3390 Sint-Joris-Winge (Tielt-Winge)',labelfr:'3390 Winghe-Saint-Georges',labelen:'3390 Sint-Joris-Winge',labelde:'3390 Sint-Joris-Winge',parentid:'wreg.167',show:'true',sort:'725'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.741',label:'3390 Tielt (Tielt-Winge)',labelnl:'3390 Tielt (Tielt-Winge)',labelfr:'3390 Tielt',labelen:'3390 Tielt',labelde:'3390 Tielt',parentid:'wreg.167',show:'true',sort:'726'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.742',label:'3391 Meensel-Kiezegem (Tielt-Winge)',labelnl:'3391 Meensel-Kiezegem (Tielt-Winge)',labelfr:'3391 Meensel-Kiezegem',labelen:'3391 Meensel-Kiezegem',labelde:'3391 Meensel-Kiezegem',parentid:'wreg.167',show:'true',sort:'727'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.743',label:'3400 Landen',labelnl:'3400 Landen',labelfr:'3400 Landen',labelen:'3400 Landen',labelde:'3400 Landen',parentid:'wreg.168',show:'true',sort:'728'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.744',label:'3400 Eliksem (Landen)',labelnl:'3400 Eliksem (Landen)',labelfr:'3400 Eliksem',labelen:'3400 Eliksem',labelde:'3400 Eliksem',parentid:'wreg.168',show:'true',sort:'729'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.745',label:'3400 Ezemaal (Landen)',labelnl:'3400 Ezemaal (Landen)',labelfr:'3400 Ezemaal',labelen:'3400 Ezemaal',labelde:'3400 Ezemaal',parentid:'wreg.168',show:'true',sort:'730'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.746',label:'3400 Laar (Landen)',labelnl:'3400 Laar (Landen)',labelfr:'3400 Laar',labelen:'3400 Laar',labelde:'3400 Laar',parentid:'wreg.168',show:'true',sort:'731'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.747',label:'3400 Neerwinden (Landen)',labelnl:'3400 Neerwinden (Landen)',labelfr:'3400 Neerwinden',labelen:'3400 Neerwinden',labelde:'3400 Neerwinden',parentid:'wreg.168',show:'true',sort:'732'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.748',label:'3400 Overwinden (Landen)',labelnl:'3400 Overwinden (Landen)',labelfr:'3400 Overwinden',labelen:'3400 Overwinden',labelde:'3400 Overwinden',parentid:'wreg.168',show:'true',sort:'733'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.749',label:'3400 Rumsdorp (Landen)',labelnl:'3400 Rumsdorp (Landen)',labelfr:'3400 Rumsdorp',labelen:'3400 Rumsdorp',labelde:'3400 Rumsdorp',parentid:'wreg.168',show:'true',sort:'734'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.750',label:'3400 Wange (Landen)',labelnl:'3400 Wange (Landen)',labelfr:'3400 Wange',labelen:'3400 Wange',labelde:'3400 Wange',parentid:'wreg.168',show:'true',sort:'735'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.751',label:'3401 Waasmont (Landen)',labelnl:'3401 Waasmont (Landen)',labelfr:'3401 Wamont',labelen:'3401 Waasmont',labelde:'3401 Waasmont',parentid:'wreg.168',show:'true',sort:'736'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.752',label:'3401 Walsbets (Landen)',labelnl:'3401 Walsbets (Landen)',labelfr:'3401 Walsbets',labelen:'3401 Walsbest',labelde:'3401 Walsbets',parentid:'wreg.168',show:'true',sort:'737'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.753',label:'3401 Walshoutem (Landen)',labelnl:'3401 Walshoutem (Landen)',labelfr:'3401 Houtain l\'Évêque',labelen:'3401 Walshoutem',labelde:'3401 Walshoutem',parentid:'wreg.168',show:'true',sort:'738'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.754',label:'3401 Wezeren (Landen)',labelnl:'3401 Wezeren (Landen)',labelfr:'3401 Wezeren',labelen:'3401 Wezeren',labelde:'3401 Wezeren',parentid:'wreg.168',show:'true',sort:'739'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.755',label:'3404 Attenhoven (Landen)',labelnl:'3404 Attenhoven (Landen)',labelfr:'3404 Attenhoven',labelen:'3404 Attenhoven',labelde:'3404 Attenhoven',parentid:'wreg.168',show:'true',sort:'740'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.756',label:'3404 Neerlanden (Landen)',labelnl:'3404 Neerlanden (Landen)',labelfr:'3404 Neerlanden',labelen:'3404 Neerlanden',labelde:'3404 Neerlanden',parentid:'wreg.168',show:'true',sort:'741'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.757',label:'3440 Zoutleeuw',labelnl:'3440 Zoutleeuw',labelfr:'3440 Léau',labelen:'3440 Zoutleeuw',labelde:'3440 Zoutleeuw',parentid:'wreg.169',show:'true',sort:'742'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.758',label:'3440 Budingen (Zoutleeuw)',labelnl:'3440 Budingen (Zoutleeuw)',labelfr:'3440 Budingen',labelen:'3440 Budingen',labelde:'3440 Budingen',parentid:'wreg.169',show:'true',sort:'743'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.759',label:'3440 Dormaal (Zoutleeuw)',labelnl:'3440 Dormaal (Zoutleeuw)',labelfr:'3440 Dormaal',labelen:'3440 Dormaal',labelde:'3440 Dormaal',parentid:'wreg.169',show:'true',sort:'744'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.760',label:'3440 Halle-Booienhoven (Zoutleeuw)',labelnl:'3440 Halle-Booienhoven (Zoutleeuw)',labelfr:'3440 Halle-Booienhoven',labelen:'3440 Halle-Booienhoven',labelde:'3440 Halle-Booienhoven',parentid:'wreg.169',show:'true',sort:'745'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.761',label:'3440 Helen-Bos (Zoutleeuw)',labelnl:'3440 Helen-Bos (Zoutleeuw)',labelfr:'3440 Helen-Bos',labelen:'3440 Helen-Bos',labelde:'3440 Helen-Bos',parentid:'wreg.169',show:'true',sort:'746'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.762',label:'3450 Geetbets',labelnl:'3450 Geetbets',labelfr:'3450 Geetbets',labelen:'3450 Geetbets',labelde:'3450 Geetbets',parentid:'wreg.170',show:'true',sort:'747'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.763',label:'3450 Grazen (Geetbets)',labelnl:'3450 Grazen (Geetbets)',labelfr:'3450 Grazen',labelen:'3450 Grazen',labelde:'3450 Grazen',parentid:'wreg.170',show:'true',sort:'748'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.764',label:'3454 Rummen (Geetbets)',labelnl:'3454 Rummen (Geetbets)',labelfr:'3454 Rumigny',labelen:'3454 Rummen',labelde:'3454 Rummen',parentid:'wreg.170',show:'true',sort:'749'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.765',label:'3460 Bekkevoort',labelnl:'3460 Bekkevoort',labelfr:'3460 Bekkevoort',labelen:'3460 Bekkevoort',labelde:'3460 Bekkevoort',parentid:'wreg.171',show:'true',sort:'750'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.766',label:'3460 Assent (Bekkevoort)',labelnl:'3460 Assent (Bekkevoort)',labelfr:'3460 Assent',labelen:'3460 Assent',labelde:'3460 Assent',parentid:'wreg.171',show:'true',sort:'751'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.767',label:'3461 Molenbeek-Wersbeek (Bekkevoort)',labelnl:'3461 Molenbeek-Wersbeek (Bekkevoort)',labelfr:'3461 Molenbeek-Wersbeek',labelen:'3461 Molenbeek-Wersbeek',labelde:'3461 Molenbeek-Wersbeek',parentid:'wreg.171',show:'true',sort:'752'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.768',label:'3470 Kortenaken',labelnl:'3470 Kortenaken',labelfr:'3470 Kortenaken',labelen:'3470 Kortenaken',labelde:'3470 Kortenaken',parentid:'wreg.172',show:'true',sort:'753'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.769',label:'3470 Ransberg (Kortenaken)',labelnl:'3470 Ransberg (Kortenaken)',labelfr:'3470 Ransberg',labelen:'3470 Ransberg',labelde:'3470 Ransberg',parentid:'wreg.172',show:'true',sort:'754'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.770',label:'3470 Sint-Margriete (Kortenaken)',labelnl:'3470 Sint-Margriete (Kortenaken)',labelfr:'3470 Sint-Margriete',labelen:'3470 Sint-Margriete',labelde:'3470 Sint-Margriete',parentid:'wreg.172',show:'true',sort:'755'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.771',label:'3471 Hoeleden (Kortenaken)',labelnl:'3471 Hoeleden (Kortenaken)',labelfr:'3471 Hoeleden',labelen:'3471 Hoeleden',labelde:'3471 Hoeleden',parentid:'wreg.172',show:'true',sort:'756'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.772',label:'3472 Kersbeek-Miskom (Kortenaken)',labelnl:'3472 Kersbeek-Miskom (Kortenaken)',labelfr:'3472 Kersbeek-Miskom',labelen:'3472 Kersbeek-Miskom',labelde:'3472 Kersbeek-Miskom',parentid:'wreg.172',show:'true',sort:'757'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.773',label:'3473 Waanrode (Kortenaken)',labelnl:'3473 Waanrode (Kortenaken)',labelfr:'3473 Waanrode',labelen:'3473 Waanrode',labelde:'3473 Waanrode',parentid:'wreg.172',show:'true',sort:'758'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.774',label:'3500 Hasselt',labelnl:'3500 Hasselt',labelfr:'3500 Hasselt',labelen:'3500 Hasselt',labelde:'3500 Hasselt',parentid:'wreg.173',show:'true',sort:'759'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.775',label:'3500 Sint-Lambrechts-Herk (Hasselt)',labelnl:'3500 Sint-Lambrechts-Herk (Hasselt)',labelfr:'3500 Herck-Saint-Lambert',labelen:'3500 Sint-Lambrechts-Herk',labelde:'3500 Sint-Lambrechts-Herk',parentid:'wreg.173',show:'true',sort:'760'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.776',label:'3501 Wimmertingen (Hasselt)',labelnl:'3501 Wimmertingen (Hasselt)',labelfr:'3501 Wimmertingen',labelen:'3501 Wimmertingen',labelde:'3501 Wimmertingen',parentid:'wreg.173',show:'true',sort:'761'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.777',label:'3510 Kermt (Hasselt)',labelnl:'3510 Kermt (Hasselt)',labelfr:'3510 Kermt',labelen:'3510 Kermt',labelde:'3510 Kermt',parentid:'wreg.173',show:'true',sort:'762'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.778',label:'3510 Spalbeek (Hasselt)',labelnl:'3510 Spalbeek (Hasselt)',labelfr:'3510 Spalbeek',labelen:'3510 Spalbeek',labelde:'3510 Spalbeek',parentid:'wreg.173',show:'true',sort:'763'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.779',label:'3511 Kuringen (Hasselt)',labelnl:'3511 Kuringen (Hasselt)',labelfr:'3511 Kuringen',labelen:'3511 Kuringen',labelde:'3511 Kuringen',parentid:'wreg.173',show:'true',sort:'764'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.780',label:'3511 Stokrooie (Hasselt)',labelnl:'3511 Stokrooie (Hasselt)',labelfr:'3511 Stokrooie',labelen:'3511 Stokrooie',labelde:'3511 Stokrooie',parentid:'wreg.173',show:'true',sort:'765'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.781',label:'3512 Stevoort (Hasselt)',labelnl:'3512 Stevoort (Hasselt)',labelfr:'3512 Stevoort',labelen:'3512 Stevoort',labelde:'3512 Stevoort',parentid:'wreg.173',show:'true',sort:'766'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.782',label:'3520 Zonhoven',labelnl:'3520 Zonhoven',labelfr:'3520 Zonhoven',labelen:'3520 Zonhoven',labelde:'3520 Zonhoven',parentid:'wreg.174',show:'true',sort:'767'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.783',label:'3530 Houthalen-Helchteren',labelnl:'3530 Houthalen-Helchteren',labelfr:'3530 Houthalen-Helchteren',labelen:'3530 Houthalen-Helchteren',labelde:'3530 Houthalen-Helchteren',parentid:'wreg.175',show:'true',sort:'768'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.784',label:'3530 Helchteren (Houthalen-Helchteren)',labelnl:'3530 Helchteren (Houthalen-Helchteren)',labelfr:'3530 Helchteren',labelen:'3530 Helchteren',labelde:'3530 Helchteren',parentid:'wreg.175',show:'true',sort:'769'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.785',label:'3530 Houthalen (Houthalen-Helchteren)',labelnl:'3530 Houthalen (Houthalen-Helchteren)',labelfr:'3530 Houthalen',labelen:'3530 Houthalen',labelde:'3530 Houthalen',parentid:'wreg.175',show:'true',sort:'770'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.786',label:'3540 Herk-De-Stad',labelnl:'3540 Herk-De-Stad',labelfr:'3540 Herck-la-Ville',labelen:'3540 Herk-de-Stad',labelde:'3540 Herk-de-Stad',parentid:'wreg.176',show:'true',sort:'771'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.787',label:'3540 Berbroek (Herk-De-Stad)',labelnl:'3540 Berbroek (Herk-De-Stad)',labelfr:'3540 Berbroek',labelen:'3540 Berbroek',labelde:'3540 Berbroek',parentid:'wreg.176',show:'true',sort:'772'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.788',label:'3540 Donk (Herk-De-Stad)',labelnl:'3540 Donk (Herk-De-Stad)',labelfr:'3540 Donk',labelen:'3540 Donk',labelde:'3540 Donk',parentid:'wreg.176',show:'true',sort:'773'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.789',label:'3540 Schulen (Herk-De-Stad)',labelnl:'3540 Schulen (Herk-De-Stad)',labelfr:'3540 Schulen',labelen:'3540 Schulen',labelde:'3540 Schulen',parentid:'wreg.176',show:'true',sort:'774'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.790',label:'3545 Halen',labelnl:'3545 Halen',labelfr:'3545 Halen',labelen:'3545 Halen',labelde:'3545 Halen',parentid:'wreg.177',show:'true',sort:'775'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.791',label:'3545 Loksbergen (Halen)',labelnl:'3545 Loksbergen (Halen)',labelfr:'3545 Loksbergen',labelen:'3545 Loksbergen',labelde:'3545 Loksbergen',parentid:'wreg.177',show:'true',sort:'776'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.792',label:'3545 Zelem (Halen)',labelnl:'3545 Zelem (Halen)',labelfr:'3545 Zelem',labelen:'3545 Zelem',labelde:'3545 Zelem',parentid:'wreg.177',show:'true',sort:'777'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.793',label:'3550 Heusden-Zolder',labelnl:'3550 Heusden-Zolder',labelfr:'3550 Heusden-Zolder',labelen:'3550 Heusden-Zolder',labelde:'3550 Heusden-Zolder',parentid:'wreg.178',show:'true',sort:'778'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.794',label:'3550 Heusden (Heusden-Zolder)',labelnl:'3550 Heusden (Heusden-Zolder)',labelfr:'3550 Heusden',labelen:'3550 Heusden',labelde:'3550 Heusden',parentid:'wreg.178',show:'true',sort:'779'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.795',label:'3550 Zolder (Heusden-Zolder)',labelnl:'3550 Zolder (Heusden-Zolder)',labelfr:'3550 Zolder',labelen:'3550 Zolder',labelde:'3550 Zolder',parentid:'wreg.178',show:'true',sort:'780'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.796',label:'3560 Lummen',labelnl:'3560 Lummen',labelfr:'3560 Lummen',labelen:'3560 Lummen',labelde:'3560 Lummen',parentid:'wreg.179',show:'true',sort:'781'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.797',label:'3560 Linkhout (Lummen)',labelnl:'3560 Linkhout (Lummen)',labelfr:'3560 Linkhout',labelen:'3560 Linkhout',labelde:'3560 Linkhout',parentid:'wreg.179',show:'true',sort:'782'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.798',label:'3560 Meldert (Lummen)',labelnl:'3560 Meldert (Lummen)',labelfr:'3560 Meldert',labelen:'3560 Meldert',labelde:'3560 Meldert',parentid:'wreg.179',show:'true',sort:'783'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.799',label:'3570 Alken',labelnl:'3570 Alken',labelfr:'3570 Alken',labelen:'3570 Alken',labelde:'3570 Alken',parentid:'wreg.180',show:'true',sort:'784'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.800',label:'3580 Beringen',labelnl:'3580 Beringen',labelfr:'3580 Beringen',labelen:'3580 Beringen',labelde:'3580 Beringen',parentid:'wreg.181',show:'true',sort:'785'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.801',label:'3581 Beverlo (Beringen)',labelnl:'3581 Beverlo (Beringen)',labelfr:'3581 Beverlo',labelen:'3581 Beverlo',labelde:'3581 Beverlo',parentid:'wreg.181',show:'true',sort:'786'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.802',label:'3582 Koersel (Beringen)',labelnl:'3582 Koersel (Beringen)',labelfr:'3582 Koersel',labelen:'3582 Koersel',labelde:'3582 Koersel',parentid:'wreg.181',show:'true',sort:'787'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.803',label:'3583 Paal (Beringen)',labelnl:'3583 Paal (Beringen)',labelfr:'3583 Paal',labelen:'3583 Paal',labelde:'3583 Paal',parentid:'wreg.181',show:'true',sort:'788'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.804',label:'3590 Diepenbeek',labelnl:'3590 Diepenbeek',labelfr:'3590 Diepenbeek',labelen:'3590 Diepenbeek',labelde:'3590 Diepenbeek',parentid:'wreg.182',show:'true',sort:'789'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.805',label:'3600 Genk',labelnl:'3600 Genk',labelfr:'3600 Genk',labelen:'3600 Genk',labelde:'3600 Genk',parentid:'wreg.183',show:'true',sort:'790'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.806',label:'3620 Lanaken',labelnl:'3620 Lanaken',labelfr:'3620 Lanaken',labelen:'3620 Lanaken',labelde:'3620 Lanaken',parentid:'wreg.184',show:'true',sort:'791'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.807',label:'3620 Gellik (Lanaken)',labelnl:'3620 Gellik (Lanaken)',labelfr:'3620 Gellik',labelen:'3620 Gellik',labelde:'3620 Gellik',parentid:'wreg.184',show:'true',sort:'792'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.808',label:'3620 Neerharen (Lanaken)',labelnl:'3620 Neerharen (Lanaken)',labelfr:'3620 Neerharen',labelen:'3620 Neerharen',labelde:'3620 Neerharen',parentid:'wreg.184',show:'true',sort:'793'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.809',label:'3620 Veldwezelt (Lanaken)',labelnl:'3620 Veldwezelt (Lanaken)',labelfr:'3620 Veldwezelt',labelen:'3620 Veldwezelt',labelde:'3620 Veldwezelt',parentid:'wreg.184',show:'true',sort:'794'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.810',label:'3621 Rekem (Lanaken)',labelnl:'3621 Rekem (Lanaken)',labelfr:'3621 Rekem',labelen:'3621 Rekem',labelde:'3621 Rekem',parentid:'wreg.184',show:'true',sort:'795'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.811',label:'3630 Maasmechelen',labelnl:'3630 Maasmechelen',labelfr:'3630 Maasmechelen',labelen:'3630 Maasmechelen',labelde:'3630 Maasmechelen',parentid:'wreg.185',show:'true',sort:'796'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.812',label:'3630 Eisden (Maasmechelen)',labelnl:'3630 Eisden (Maasmechelen)',labelfr:'3630 Eisden',labelen:'3630 Eisden',labelde:'3630 Eisden',parentid:'wreg.185',show:'true',sort:'797'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.813',label:'3630 Leut (Maasmechelen)',labelnl:'3630 Leut (Maasmechelen)',labelfr:'3630 Leut',labelen:'3630 Leut',labelde:'3630 Leut',parentid:'wreg.185',show:'true',sort:'798'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.814',label:'3630 Mechelen-Aan-De-Maas (Maasmechelen)',labelnl:'3630 Mechelen-Aan-De-Maas (Maasmechelen)',labelfr:'3630 Malines-sur-Meuse',labelen:'3630 Mechelen-aan-de-Maas',labelde:'3630 Mechelen-aan-de-Maas',parentid:'wreg.185',show:'true',sort:'799'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.815',label:'3630 Meeswijk (Maasmechelen)',labelnl:'3630 Meeswijk (Maasmechelen)',labelfr:'3630 Meeswijk',labelen:'3630 Meeswijk',labelde:'3630 Meeswijk',parentid:'wreg.185',show:'true',sort:'800'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.816',label:'3630 Opgrimbie (Maasmechelen)',labelnl:'3630 Opgrimbie (Maasmechelen)',labelfr:'3630 Opgrimbie',labelen:'3630 Opgrimbie',labelde:'3630 Opgrimbie',parentid:'wreg.185',show:'true',sort:'801'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.817',label:'3630 Vucht (Maasmechelen)',labelnl:'3630 Vucht (Maasmechelen)',labelfr:'3630 Vucht',labelen:'3630 Vucht',labelde:'3630 Vucht',parentid:'wreg.185',show:'true',sort:'802'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.818',label:'3631 Boorsem (Maasmechelen)',labelnl:'3631 Boorsem (Maasmechelen)',labelfr:'3631 Boorsem',labelen:'3631 Boorsem',labelde:'3631 Boorsem',parentid:'wreg.185',show:'true',sort:'803'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.819',label:'3631 Uikhoven (Maasmechelen)',labelnl:'3631 Uikhoven (Maasmechelen)',labelfr:'3631 Uikhoven',labelen:'3631 Uikhoven',labelde:'3631 Uikhoven',parentid:'wreg.185',show:'true',sort:'804'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.820',label:'3640 Kinrooi',labelnl:'3640 Kinrooi',labelfr:'3640 Kinrooi',labelen:'3640 Kinrooi',labelde:'3640 Kinrooi',parentid:'wreg.186',show:'true',sort:'805'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.821',label:'3640 Kessenich (Kinrooi)',labelnl:'3640 Kessenich (Kinrooi)',labelfr:'3640 Kessenich',labelen:'3640 Kessenich',labelde:'3640 Kessenich',parentid:'wreg.186',show:'true',sort:'806'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.822',label:'3640 Molenbeersel (Kinrooi)',labelnl:'3640 Molenbeersel (Kinrooi)',labelfr:'3640 Molenbeersel',labelen:'3640 Molenbeersel',labelde:'3640 Molenbeersel',parentid:'wreg.186',show:'true',sort:'807'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.823',label:'3640 Ophoven (Kinrooi)',labelnl:'3640 Ophoven (Kinrooi)',labelfr:'3640 Ophoven',labelen:'3640 Ophoven',labelde:'3640 Ophoven',parentid:'wreg.186',show:'true',sort:'808'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.824',label:'3650 Dilsen-Stokkem',labelnl:'3650 Dilsen-Stokkem',labelfr:'3650 Dilsen-Stokkem',labelen:'3650 Dilsen-Stokkem',labelde:'3650 Dilsen-Stokkem',parentid:'wreg.187',show:'true',sort:'809'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.825',label:'3650 Dilsen (Dilsen-Stokkem)',labelnl:'3650 Dilsen (Dilsen-Stokkem)',labelfr:'3650 Dilsen',labelen:'3650 Dilsen',labelde:'3650 Dilsen',parentid:'wreg.187',show:'true',sort:'810'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.826',label:'3650 Elen (Dilsen-Stokkem)',labelnl:'3650 Elen (Dilsen-Stokkem)',labelfr:'3650 Elen',labelen:'3650 Elen',labelde:'3650 Elen',parentid:'wreg.187',show:'true',sort:'811'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.827',label:'3650 Lanklaar (Dilsen-Stokkem)',labelnl:'3650 Lanklaar (Dilsen-Stokkem)',labelfr:'3650 Lanklaar',labelen:'3650 Lanklaar',labelde:'3650 Lanklaar',parentid:'wreg.187',show:'true',sort:'812'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.828',label:'3650 Rotem (Dilsen-Stokkem)',labelnl:'3650 Rotem (Dilsen-Stokkem)',labelfr:'3650 Rotem',labelen:'3650 Rotem',labelde:'3650 Rotem',parentid:'wreg.187',show:'true',sort:'813'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.829',label:'3650 Stokkem (Dilsen-Stokkem)',labelnl:'3650 Stokkem (Dilsen-Stokkem)',labelfr:'3650 Stokkem',labelen:'3650 Stokkem',labelde:'3650 Stokkem',parentid:'wreg.824',show:'true',sort:'814'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.830',label:'3660 Opglabbeek',labelnl:'3660 Opglabbeek',labelfr:'3660 Opglabbeek',labelen:'3660 Opglabbeek',labelde:'3660 Opglabbeek',parentid:'wreg.188',show:'true',sort:'815'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.831',label:'3665 As',labelnl:'3665 As',labelfr:'3665 As',labelen:'3665 As',labelde:'3665 As',parentid:'wreg.189',show:'true',sort:'816'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.832',label:'3668 Niel-Bij-As (As)',labelnl:'3668 Niel-Bij-As (As)',labelfr:'3668 Niel-bij-As',labelen:'3668 Niel-bij-As',labelde:'3668 Niel-bij-As',parentid:'wreg.189',show:'true',sort:'817'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.833',label:'3670 Meeuwen-Gruitrode',labelnl:'3670 Meeuwen-Gruitrode',labelfr:'3670 Meeuwen-Gruitrode',labelen:'3670 Meeuwen-Gruitrode',labelde:'3670 Meeuwen-Gruitrode',parentid:'wreg.190',show:'true',sort:'818'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.834',label:'3670 Ellikom (Meeuwen-Gruitrode)',labelnl:'3670 Ellikom (Meeuwen-Gruitrode)',labelfr:'3670 Ellikom',labelen:'3670 Ellikom',labelde:'3670 Ellikom',parentid:'wreg.190',show:'true',sort:'819'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.835',label:'3670 Gruitrode (Meeuwen-Gruitrode)',labelnl:'3670 Gruitrode (Meeuwen-Gruitrode)',labelfr:'3670 Gruitrode',labelen:'3670 Gruitrode',labelde:'3670 Gruitrode',parentid:'wreg.190',show:'true',sort:'820'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.836',label:'3670 Meeuwen (Meeuwen-Gruitrode)',labelnl:'3670 Meeuwen (Meeuwen-Gruitrode)',labelfr:'3670 Meeuwen',labelen:'3670 Meeuwen',labelde:'3670 Meeuwen',parentid:'wreg.190',show:'true',sort:'821'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.837',label:'3670 Neerglabbeek (Meeuwen-Gruitrode)',labelnl:'3670 Neerglabbeek (Meeuwen-Gruitrode)',labelfr:'3670 Neerglabbeek',labelen:'3670 Neerglabbeek',labelde:'3670 Neerglabbeek',parentid:'wreg.190',show:'true',sort:'822'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.838',label:'3670 Wijshagen (Meeuwen-Gruitrode)',labelnl:'3670 Wijshagen (Meeuwen-Gruitrode)',labelfr:'3670 Wijshagen',labelen:'3670 Wijshagen',labelde:'3670 Wijshagen',parentid:'wreg.190',show:'true',sort:'823'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.839',label:'3680 Maaseik',labelnl:'3680 Maaseik',labelfr:'3680 Maaseik',labelen:'3680 Maaseik',labelde:'3680 Maaseik',parentid:'wreg.191',show:'true',sort:'824'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.840',label:'3680 Neeroeteren (Maaseik)',labelnl:'3680 Neeroeteren (Maaseik)',labelfr:'3680 Neeroeteren',labelen:'3680 Neeroeteren',labelde:'3680 Neeroeteren',parentid:'wreg.191',show:'true',sort:'825'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.841',label:'3680 Opoeteren (Maaseik)',labelnl:'3680 Opoeteren (Maaseik)',labelfr:'3680 Opoeteren',labelen:'3680 Opoeteren',labelde:'3680 Opoeteren',parentid:'wreg.191',show:'true',sort:'826'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.842',label:'3690 Zutendaal',labelnl:'3690 Zutendaal',labelfr:'3690 Zutendaal',labelen:'3690 Zutendaal',labelde:'3690 Zutendaal',parentid:'wreg.192',show:'true',sort:'827'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.843',label:'3700 Tongeren',labelnl:'3700 Tongeren',labelfr:'3700 Tongres',labelen:'3700 Tongeren',labelde:'3700 Tongern',parentid:'wreg.193',show:'true',sort:'828'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.844',label:'3700 Berg (Tongeren)',labelnl:'3700 Berg (Tongeren)',labelfr:'3700 Berg',labelen:'3700 Berg',labelde:'3700 Berg',parentid:'wreg.193',show:'true',sort:'829'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.845',label:'3700 Diets-Heur (Tongeren)',labelnl:'3700 Diets-Heur (Tongeren)',labelfr:'3700 Heure-le-Tixhe',labelen:'3700 Diets-Heur',labelde:'3700 Diets-Heur',parentid:'wreg.193',show:'true',sort:'830'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.846',label:'3700 Haren (Tongeren)',labelnl:'3700 Haren (Tongeren)',labelfr:'3700 Haren',labelen:'3700 Haren',labelde:'3700 Haren',parentid:'wreg.193',show:'true',sort:'831'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.847',label:'3700 Henis (Tongeren)',labelnl:'3700 Henis (Tongeren)',labelfr:'3700 Henis',labelen:'3700 Henis',labelde:'3700 Henis',parentid:'wreg.193',show:'true',sort:'832'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.848',label:'3700 Kolmont (Tongeren)',labelnl:'3700 Kolmont (Tongeren)',labelfr:'3700 Kolmont',labelen:'3700 Kolmont',labelde:'3700 Kolmont',parentid:'wreg.193',show:'true',sort:'833'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.849',label:'3700 Koninksem (Tongeren)',labelnl:'3700 Koninksem (Tongeren)',labelfr:'3700 Koninksem',labelen:'3700 Koninksem',labelde:'3700 Koninksem',parentid:'wreg.193',show:'true',sort:'834'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.850',label:'3700 Lauw (Tongeren)',labelnl:'3700 Lauw (Tongeren)',labelfr:'3700 Lowaige',labelen:'3700 Lauw',labelde:'3700 Lauw',parentid:'wreg.193',show:'true',sort:'835'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.851',label:'3700 Mal (Tongeren)',labelnl:'3700 Mal (Tongeren)',labelfr:'3700 Mal',labelen:'3700 Mal',labelde:'3700 Mal',parentid:'wreg.193',show:'true',sort:'836'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.852',label:'3700 Neerrepen (Tongeren)',labelnl:'3700 Neerrepen (Tongeren)',labelfr:'3700 Neerrepen',labelen:'3700 Neerrepen',labelde:'3700 Neerrepen',parentid:'wreg.193',show:'true',sort:'837'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.853',label:'3700 Nerem (Tongeren)',labelnl:'3700 Nerem (Tongeren)',labelfr:'3700 Nerem',labelen:'3700 Nerem',labelde:'3700 Nerem',parentid:'wreg.193',show:'true',sort:'838'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.854',label:'3700 Overrepen (Tongeren)',labelnl:'3700 Overrepen (Tongeren)',labelfr:'3700 Overrepen',labelen:'3700 Overrepen',labelde:'3700 Overrepen',parentid:'wreg.193',show:'true',sort:'839'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.855',label:'3700 Piringen (Tongeren)',labelnl:'3700 Piringen (Tongeren)',labelfr:'3700 Pirange',labelen:'3700 Piringen',labelde:'3700 Piringen',parentid:'wreg.193',show:'true',sort:'840'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.856',label:'3700 Riksingen (Tongeren)',labelnl:'3700 Riksingen (Tongeren)',labelfr:'3700 Riksingen',labelen:'3700 Riksingen',labelde:'3700 Riksingen',parentid:'wreg.193',show:'true',sort:'841'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.857',label:'3700 Rutten (Tongeren)',labelnl:'3700 Rutten (Tongeren)',labelfr:'3700 Russon',labelen:'3700 Rutten',labelde:'3700 Rutten',parentid:'wreg.193',show:'true',sort:'842'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.858',label:'3700 \'s Herenelderen (Tongeren)',labelnl:'3700 \'s Herenelderen (Tongeren)',labelfr:'3700 \'s-Herenelderen',labelen:'3700 \'s-Herenelderen',labelde:'3700 \'s-Herenelderen',parentid:'wreg.193',show:'true',sort:'843'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.859',label:'3700 Sluizen (Tongeren)',labelnl:'3700 Sluizen (Tongeren)',labelfr:'3700 Sluse',labelen:'3700 Sluizen',labelde:'3700 Sluizen',parentid:'wreg.193',show:'true',sort:'844'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.860',label:'3700 Vreren (Tongeren)',labelnl:'3700 Vreren (Tongeren)',labelfr:'3700 Frères',labelen:'3700 Vreren',labelde:'3700 Vreren',parentid:'wreg.193',show:'true',sort:'845'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.861',label:'3700 Widooie (Tongeren)',labelnl:'3700 Widooie (Tongeren)',labelfr:'3700 Bidoye',labelen:'3700 Widooie',labelde:'3700 Widooie',parentid:'wreg.193',show:'true',sort:'846'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.862',label:'3717 Herstappe',labelnl:'3717 Herstappe',labelfr:'3717 Herstappe',labelen:'3717 Herstappe',labelde:'3717 Herstappe',parentid:'wreg.194',show:'true',sort:'847'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.863',label:'3720 Kortessem',labelnl:'3720 Kortessem',labelfr:'3720 Kortessem',labelen:'3720 Kortessem',labelde:'3720 Kortessem',parentid:'wreg.195',show:'true',sort:'848'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.864',label:'3721 Vliermaalroot (Kortessem)',labelnl:'3721 Vliermaalroot (Kortessem)',labelfr:'3721 Vliermaalroot',labelen:'3721 Vliermaalroot',labelde:'3721 Vliermaalroot',parentid:'wreg.195',show:'true',sort:'849'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.865',label:'3722 Wintershoven (Kortessem)',labelnl:'3722 Wintershoven (Kortessem)',labelfr:'3722 Wintershoven',labelen:'3722 Wintershoven',labelde:'3722 Wintershoven',parentid:'wreg.195',show:'true',sort:'850'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.866',label:'3723 Guigoven (Kortessem)',labelnl:'3723 Guigoven (Kortessem)',labelfr:'3723 Guigoven',labelen:'3723 Guigoven',labelde:'3723 Guigoven',parentid:'wreg.195',show:'true',sort:'851'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.867',label:'3724 Vliermaal (Kortessem)',labelnl:'3724 Vliermaal (Kortessem)',labelfr:'3724 Vliermaal',labelen:'3724 Vliermaal',labelde:'3724 Vliermaal',parentid:'wreg.195',show:'true',sort:'852'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.868',label:'3730 Hoeselt',labelnl:'3730 Hoeselt',labelfr:'3730 Hoeselt',labelen:'3730 Hoeselt',labelde:'3730 Hoeselt',parentid:'wreg.196',show:'true',sort:'853'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.869',label:'3730 Romershoven (Hoeselt)',labelnl:'3730 Romershoven (Hoeselt)',labelfr:'3730 Romershoven',labelen:'3730 Romershoven',labelde:'3730 Romershoven',parentid:'wreg.196',show:'true',sort:'854'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.870',label:'3730 Sint-Huibrechts-Hern (Hoeselt)',labelnl:'3730 Sint-Huibrechts-Hern (Hoeselt)',labelfr:'3730 Sint-Huibrechts-Hern',labelen:'3730 Sint-Huibrechts-Hern',labelde:'3730 Sint-Huibrechts-Hern',parentid:'wreg.196',show:'true',sort:'855'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.871',label:'3730 Werm (Hoeselt)',labelnl:'3730 Werm (Hoeselt)',labelfr:'3730 Werm',labelen:'3730 Werm',labelde:'3730 Werm',parentid:'wreg.196',show:'true',sort:'856'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.872',label:'3732 Schalkhoven (Hoeselt)',labelnl:'3732 Schalkhoven (Hoeselt)',labelfr:'3732 Schalkhoven',labelen:'3732 Schalkhoven',labelde:'3732 Schalkhoven',parentid:'wreg.196',show:'true',sort:'857'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.873',label:'3740 Bilzen',labelnl:'3740 Bilzen',labelfr:'3740 Bilzen',labelen:'3740 Bilzen',labelde:'3740 Bilzen',parentid:'wreg.197',show:'true',sort:'858'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.874',label:'3740 Beverst (Bilzen)',labelnl:'3740 Beverst (Bilzen)',labelfr:'3740 Beverst',labelen:'3740 Beverst',labelde:'3740 Beverst',parentid:'wreg.197',show:'true',sort:'859'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.875',label:'3740 Eigenbilzen (Bilzen)',labelnl:'3740 Eigenbilzen (Bilzen)',labelfr:'3740 Eigenbilzen',labelen:'3740 Eigenbilzen',labelde:'3740 Eigenbilzen',parentid:'wreg.197',show:'true',sort:'860'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.876',label:'3740 Grote-Spouwen (Bilzen)',labelnl:'3740 Grote-Spouwen (Bilzen)',labelfr:'3740 Grote-Spouwen',labelen:'3740 Grote-Spouwen',labelde:'3740 Grote-Spouwen',parentid:'wreg.197',show:'true',sort:'861'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.877',label:'3740 Hees (Bilzen)',labelnl:'3740 Hees (Bilzen)',labelfr:'3740 Hees',labelen:'3740 Hees',labelde:'3740 Hees',parentid:'wreg.197',show:'true',sort:'862'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.878',label:'3740 Kleine-Spouwen (Bilzen)',labelnl:'3740 Kleine-Spouwen (Bilzen)',labelfr:'3740 Kleine-Spouwen',labelen:'3740 Kleine-Spouwen',labelde:'3740 Kleine-Spouwen',parentid:'wreg.197',show:'true',sort:'863'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.879',label:'3740 Mopertingen (Bilzen)',labelnl:'3740 Mopertingen (Bilzen)',labelfr:'3740 Mopertingen',labelen:'3740 Mopertingen',labelde:'3740 Mopertingen',parentid:'wreg.197',show:'true',sort:'864'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.880',label:'3740 Munsterbilzen (Bilzen)',labelnl:'3740 Munsterbilzen (Bilzen)',labelfr:'3740 Munsterbilzen',labelen:'3740 Munsterbilzen',labelde:'3740 Munsterbilzen',parentid:'wreg.197',show:'true',sort:'865'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.881',label:'3740 Rijkhoven (Bilzen)',labelnl:'3740 Rijkhoven (Bilzen)',labelfr:'3740 Rijkhoven',labelen:'3740 Rijkhoven',labelde:'3740 Rijkhoven',parentid:'wreg.197',show:'true',sort:'866'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.882',label:'3740 Rosmeer (Bilzen)',labelnl:'3740 Rosmeer (Bilzen)',labelfr:'3740 Rosmeer',labelen:'3740 Rosmeer',labelde:'3740 Rosmeer',parentid:'wreg.197',show:'true',sort:'867'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.883',label:'3740 Spouwen (Bilzen)',labelnl:'3740 Spouwen (Bilzen)',labelfr:'3740 Spouwen',labelen:'3740 Spouwen',labelde:'3740 Spouwen',parentid:'wreg.197',show:'true',sort:'868'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.884',label:'3740 Waltwilder (Bilzen)',labelnl:'3740 Waltwilder (Bilzen)',labelfr:'3740 Waltwilder',labelen:'3740 Waltwilder',labelde:'3740 Waltwilder',parentid:'wreg.197',show:'true',sort:'869'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.885',label:'3742 Martenslinde (Bilzen)',labelnl:'3742 Martenslinde (Bilzen)',labelfr:'3742 Martenslinde',labelen:'3742 Martenslinde',labelde:'3742 Martenslinde',parentid:'wreg.197',show:'true',sort:'870'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.886',label:'3746 Hoelbeek (Bilzen)',labelnl:'3746 Hoelbeek (Bilzen)',labelfr:'3746 Hoelbeek',labelen:'3746 Hoelbeek',labelde:'3746 Hoelbeek',parentid:'wreg.197',show:'true',sort:'871'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.887',label:'3770 Riemst',labelnl:'3770 Riemst',labelfr:'3770 Riemst',labelen:'3770 Riemst',labelde:'3770 Riemst',parentid:'wreg.198',show:'true',sort:'872'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.888',label:'3770 Genoelselderen (Riemst)',labelnl:'3770 Genoelselderen (Riemst)',labelfr:'3770 Genoelselderen',labelen:'3770 Genoelselderen',labelde:'3770 Genoelselderen',parentid:'wreg.198',show:'true',sort:'873'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.889',label:'3770 Herderen (Riemst)',labelnl:'3770 Herderen (Riemst)',labelfr:'3770 Herderen',labelen:'3770 Herderen',labelde:'3770 Herderen',parentid:'wreg.198',show:'true',sort:'874'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.890',label:'3770 Kanne (Riemst)',labelnl:'3770 Kanne (Riemst)',labelfr:'3770 Kanne',labelen:'3770 Kanne',labelde:'3770 Kanne',parentid:'wreg.198',show:'true',sort:'875'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.891',label:'3770 Membruggen (Riemst)',labelnl:'3770 Membruggen (Riemst)',labelfr:'3770 Membruggen',labelen:'3770 Membruggen',labelde:'3770 Membruggen',parentid:'wreg.198',show:'true',sort:'876'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.892',label:'3770 Millen (Riemst)',labelnl:'3770 Millen (Riemst)',labelfr:'3770 Millen',labelen:'3770 Millen',labelde:'3770 Millen',parentid:'wreg.198',show:'true',sort:'877'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.893',label:'3770 Val-Meer (Riemst)',labelnl:'3770 Val-Meer (Riemst)',labelfr:'3770 Val-Meer',labelen:'3770 Val-Meer',labelde:'3770 Val-Meer',parentid:'wreg.198',show:'true',sort:'878'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.894',label:'3770 Vlijtingen (Riemst)',labelnl:'3770 Vlijtingen (Riemst)',labelfr:'3770 Vlijtingen',labelen:'3770 Vlijtingen',labelde:'3770 Vlijtingen',parentid:'wreg.198',show:'true',sort:'879'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.895',label:'3770 Vroenhoven (Riemst)',labelnl:'3770 Vroenhoven (Riemst)',labelfr:'3770 Vroenhoven',labelen:'3770 Vroenhoven',labelde:'3770 Vroenhoven',parentid:'wreg.198',show:'true',sort:'880'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.896',label:'3770 Zichen-Zussen-Bolder (Riemst)',labelnl:'3770 Zichen-Zussen-Bolder (Riemst)',labelfr:'3770 Zichen-Zussen-Bolder',labelen:'3770 Zichen-Zussen-Bolder',labelde:'3770 Zichen-Zussen-Bolder',parentid:'wreg.198',show:'true',sort:'881'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.897',label:'3790 Voeren',labelnl:'3790 Voeren',labelfr:'3790 Fourons',labelen:'3790 Voeren',labelde:'3790 Voeren',parentid:'wreg.199',show:'true',sort:'882'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.898',label:'3790 Fouron-Saint-Martin (Voeren)',labelnl:'3790 Fouron-Saint-Martin (Voeren)',labelfr:'3790 Fouron-Saint-Martin',labelen:'3790 Sint-Martens-Voeren',labelde:'3790 Sint-Martens-Voeren',parentid:'wreg.199',show:'true',sort:'883'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.899',label:'3790 Fourons (Voeren)',labelnl:'3790 Fourons (Voeren)',labelfr:'3790 Fourons',labelen:'3790 Voeren',labelde:'3790 Voeren',parentid:'wreg.199',show:'true',sort:'884'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.900',label:'3790 Moelingen (Voeren)',labelnl:'3790 Moelingen (Voeren)',labelfr:'3790 Mouland',labelen:'3790 Moelingen',labelde:'3790 Moelingen',parentid:'wreg.199',show:'true',sort:'885'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.901',label:'3790 Mouland (Voeren)',labelnl:'3790 Mouland (Voeren)',labelfr:'3790 Mouland',labelen:'3790 Moelingen',labelde:'3790 Moelingen',parentid:'wreg.199',show:'true',sort:'886'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.902',label:'3790 Sint-Martens-Voeren (Voeren)',labelnl:'3790 Sint-Martens-Voeren (Voeren)',labelfr:'3790 Fouron-Saint-Martin',labelen:'3790 Sint-Martens-Voeren',labelde:'3790 Sint-Martens-Voeren',parentid:'wreg.199',show:'true',sort:'887'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.903',label:'3791 Remersdaal (Voeren)',labelnl:'3791 Remersdaal (Voeren)',labelfr:'3791 Rémersdael',labelen:'3791 Remersdaal',labelde:'3791 Remersdaal',parentid:'wreg.199',show:'true',sort:'888'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.904',label:'3792 Fouron-Saint-Pierre (Voeren)',labelnl:'3792 Fouron-Saint-Pierre (Voeren)',labelfr:'3792 Fouron-Saint-Pierre',labelen:'3792 Sint-Pieters-Voeren',labelde:'3792 Sint-Pieters-Voeren',parentid:'wreg.199',show:'true',sort:'889'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.905',label:'3792 Sint-Pieters-Voeren (Voeren)',labelnl:'3792 Sint-Pieters-Voeren (Voeren)',labelfr:'3792 Fouron-Saint-Pierre',labelen:'3792 Sint-Pieters-Voeren',labelde:'3792 Sint-Pieters-Voeren',parentid:'wreg.199',show:'true',sort:'890'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.906',label:'3793 Teuven (Voeren)',labelnl:'3793 Teuven (Voeren)',labelfr:'3793 Teuven',labelen:'3793 Teuven',labelde:'3793 Teuven',parentid:'wreg.199',show:'true',sort:'891'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.907',label:'3798 Fouron-Le-Comte (Voeren)',labelnl:'3798 Fouron-Le-Comte (Voeren)',labelfr:'3798 Fouron-Le-Comte',labelen:'3798 \'s-Gravenvoeren',labelde:'3798 \'s-Gravenvoeren',parentid:'wreg.199',show:'true',sort:'892'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.908',label:'3798 \'s Gravenvoeren (Voeren)',labelnl:'3798 \'s Gravenvoeren (Voeren)',labelfr:'3798 Fouron-Le-Comte',labelen:'3798 \'s-Gravenvoeren',labelde:'3798 \'s-Gravenvoeren',parentid:'wreg.199',show:'true',sort:'893'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.909',label:'3800 Sint-Truiden',labelnl:'3800 Sint-Truiden',labelfr:'3800 Saint-Trond',labelen:'3800 Sint-Truiden',labelde:'3800 Sint-Truiden',parentid:'wreg.200',show:'true',sort:'894'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.910',label:'3800 Aalst (Sint-Truiden)',labelnl:'3800 Aalst (Sint-Truiden)',labelfr:'3800 Alost',labelen:'3800 Aalst',labelde:'3800 Aalst',parentid:'wreg.200',show:'true',sort:'895'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.911',label:'3800 Brustem (Sint-Truiden)',labelnl:'3800 Brustem (Sint-Truiden)',labelfr:'3800 Brustem',labelen:'3800 Brustem',labelde:'3800 Brustem',parentid:'wreg.200',show:'true',sort:'896'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.912',label:'3800 Engelmanshoven (Sint-Truiden)',labelnl:'3800 Engelmanshoven (Sint-Truiden)',labelfr:'3800 Engelmanshoven',labelen:'3800 Engelmanshoven',labelde:'3800 Engelmanshoven',parentid:'wreg.200',show:'true',sort:'897'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.913',label:'3800 Gelinden (Sint-Truiden)',labelnl:'3800 Gelinden (Sint-Truiden)',labelfr:'3800 Gelinden',labelen:'3800 Gelinden',labelde:'3800 Gelinden',parentid:'wreg.200',show:'true',sort:'898'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.914',label:'3800 Groot-Gelmen (Sint-Truiden)',labelnl:'3800 Groot-Gelmen (Sint-Truiden)',labelfr:'3800 Grande-Jamine',labelen:'3800 Groot-Gelmen',labelde:'3800 Groot-Gelmen',parentid:'wreg.200',show:'true',sort:'899'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.915',label:'3800 Halmaal (Sint-Truiden)',labelnl:'3800 Halmaal (Sint-Truiden)',labelfr:'3800 Halmaal',labelen:'3800 Halmaal',labelde:'3800 Halmaal',parentid:'wreg.200',show:'true',sort:'900'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.916',label:'3800 Kerkom-Bij-Sint-Truiden (Sint-Truiden)',labelnl:'3800 Kerkom-Bij-Sint-Truiden (Sint-Truiden)',labelfr:'3800 Kerckom-lez-Saint-Trond',labelen:'3800 Kerkom-bij-Sint-Truiden',labelde:'3800 Kerkom-bij-Sint-Truiden',parentid:'wreg.200',show:'true',sort:'901'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.917',label:'3800 Ordingen (Sint-Truiden)',labelnl:'3800 Ordingen (Sint-Truiden)',labelfr:'3800 Ordingen',labelen:'3800 Ordingen',labelde:'3800 Ordingen',parentid:'wreg.200',show:'true',sort:'902'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.918',label:'3800 Zepperen (Sint-Truiden)',labelnl:'3800 Zepperen (Sint-Truiden)',labelfr:'3800 Zepperen',labelen:'3800 Zepperen',labelde:'3800 Zepperen',parentid:'wreg.200',show:'true',sort:'903'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.919',label:'3803 Duras (Sint-Truiden)',labelnl:'3803 Duras (Sint-Truiden)',labelfr:'3803 Duras',labelen:'3803 Duras',labelde:'3803 Duras',parentid:'wreg.200',show:'true',sort:'904'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.920',label:'3803 Gorsem (Sint-Truiden)',labelnl:'3803 Gorsem (Sint-Truiden)',labelfr:'3803 Gorsem',labelen:'3803 Gorsem',labelde:'3803 Gorsem',parentid:'wreg.200',show:'true',sort:'905'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.921',label:'3803 Runkelen (Sint-Truiden)',labelnl:'3803 Runkelen (Sint-Truiden)',labelfr:'3803 Runkelen',labelen:'3803 Runkelen',labelde:'3803 Runkelen',parentid:'wreg.200',show:'true',sort:'906'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.922',label:'3803 Wilderen (Sint-Truiden)',labelnl:'3803 Wilderen (Sint-Truiden)',labelfr:'3803 Wilderen',labelen:'3803 Wilderen',labelde:'3803 Wilderen',parentid:'wreg.200',show:'true',sort:'907'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.923',label:'3806 Velm (Sint-Truiden)',labelnl:'3806 Velm (Sint-Truiden)',labelfr:'3806 Velm',labelen:'3806 Velm',labelde:'3806 Velm',parentid:'wreg.200',show:'true',sort:'908'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.924',label:'3830 Wellen',labelnl:'3830 Wellen',labelfr:'3830 Wellen',labelen:'3830 Wellen',labelde:'3830 Wellen',parentid:'wreg.201',show:'true',sort:'909'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.925',label:'3830 Berlingen (Wellen)',labelnl:'3830 Berlingen (Wellen)',labelfr:'3830 Berlingen',labelen:'3830 Berlingen',labelde:'3830 Berlingen',parentid:'wreg.201',show:'true',sort:'910'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.926',label:'3831 Herten (Wellen)',labelnl:'3831 Herten (Wellen)',labelfr:'3831 Herten',labelen:'3831 Herten',labelde:'3831 Herten',parentid:'wreg.201',show:'true',sort:'911'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.927',label:'3832 Ulbeek (Wellen)',labelnl:'3832 Ulbeek (Wellen)',labelfr:'3832 Ulbeek',labelen:'3832 Ulbeek',labelde:'3832 Ulbeek',parentid:'wreg.201',show:'true',sort:'912'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.928',label:'3840 Borgloon',labelnl:'3840 Borgloon',labelfr:'3840 Looz',labelen:'3840 Borgloon',labelde:'3840 Borgloon',parentid:'wreg.202',show:'true',sort:'913'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.929',label:'3840 Bommershoven (Borgloon)',labelnl:'3840 Bommershoven (Borgloon)',labelfr:'3840 Bommershoven',labelen:'3840 Bommershoven',labelde:'3840 Bommershoven',parentid:'wreg.202',show:'true',sort:'914'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.930',label:'3840 Broekom (Borgloon)',labelnl:'3840 Broekom (Borgloon)',labelfr:'3840 Broekom',labelen:'3840 Broekom',labelde:'3840 Broekom',parentid:'wreg.202',show:'true',sort:'915'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.931',label:'3840 Gors-Opleeuw (Borgloon)',labelnl:'3840 Gors-Opleeuw (Borgloon)',labelfr:'3840 Gors-Opleeuw',labelen:'3840 Gors-Opleeuw',labelde:'3840 Gors-Opleeuw',parentid:'wreg.202',show:'true',sort:'916'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.932',label:'3840 Gotem (Borgloon)',labelnl:'3840 Gotem (Borgloon)',labelfr:'3840 Gotem',labelen:'3840 Gotem',labelde:'3840 Gotem',parentid:'wreg.202',show:'true',sort:'917'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.933',label:'3840 Groot-Loon (Borgloon)',labelnl:'3840 Groot-Loon (Borgloon)',labelfr:'3840 Groot-Loon',labelen:'3840 Groot-Loon',labelde:'3840 Groot-Loon',parentid:'wreg.202',show:'true',sort:'918'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.934',label:'3840 Haren (Borgloon)',labelnl:'3840 Haren (Borgloon)',labelfr:'3840 Haren',labelen:'3840 Haren',labelde:'3840 Haren',parentid:'wreg.202',show:'true',sort:'919'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.935',label:'3840 Hendrieken (Borgloon)',labelnl:'3840 Hendrieken (Borgloon)',labelfr:'3840 Hendrieken',labelen:'3840 Hendrieken',labelde:'3840 Hendrieken',parentid:'wreg.202',show:'true',sort:'920'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.936',label:'3840 Hoepertingen (Borgloon)',labelnl:'3840 Hoepertingen (Borgloon)',labelfr:'3840 Hoepertingen',labelen:'3840 Hoepertingen',labelde:'3840 Hoepertingen',parentid:'wreg.202',show:'true',sort:'921'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.937',label:'3840 Jesseren (Borgloon)',labelnl:'3840 Jesseren (Borgloon)',labelfr:'3840 Jesseren',labelen:'3840 Jesseren',labelde:'3840 Jesseren',parentid:'wreg.202',show:'true',sort:'922'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.938',label:'3840 Kerniel (Borgloon)',labelnl:'3840 Kerniel (Borgloon)',labelfr:'3840 Kerniel',labelen:'3840 Kerniel',labelde:'3840 Kerniel',parentid:'wreg.202',show:'true',sort:'923'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.939',label:'3840 Kolmont (Borgloon)',labelnl:'3840 Kolmont (Borgloon)',labelfr:'3840 Kolmont',labelen:'3840 Kolmont',labelde:'3840 Kolmont',parentid:'wreg.202',show:'true',sort:'924'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.940',label:'3840 Kuttekoven (Borgloon)',labelnl:'3840 Kuttekoven (Borgloon)',labelfr:'3840 Kuttekoven',labelen:'3840 Kuttekoven',labelde:'3840 Kuttekoven',parentid:'wreg.202',show:'true',sort:'925'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.941',label:'3840 Rijkel (Borgloon)',labelnl:'3840 Rijkel (Borgloon)',labelfr:'3840 Ryckel',labelen:'3840 Rijkel',labelde:'3840 Rijkel',parentid:'wreg.202',show:'true',sort:'926'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.942',label:'3840 Voort (Borgloon)',labelnl:'3840 Voort (Borgloon)',labelfr:'3840 Voort',labelen:'3840 Voort',labelde:'3840 Voort',parentid:'wreg.202',show:'true',sort:'927'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.943',label:'3850 Nieuwerkerken',labelnl:'3850 Nieuwerkerken',labelfr:'3850 Nieuwerkerken',labelen:'3850 Nieuwerkerken',labelde:'3850 Nieuwerkerken',parentid:'wreg.203',show:'true',sort:'928'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.944',label:'3850 Binderveld (Nieuwerkerken)',labelnl:'3850 Binderveld (Nieuwerkerken)',labelfr:'3850 Binderveld',labelen:'3850 Binderveld',labelde:'3850 Binderveld',parentid:'wreg.203',show:'true',sort:'929'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.945',label:'3850 Kozen (Nieuwerkerken)',labelnl:'3850 Kozen (Nieuwerkerken)',labelfr:'3850 Kozen',labelen:'3850 Kozen',labelde:'3850 Kozen',parentid:'wreg.203',show:'true',sort:'930'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.946',label:'3850 Wijer (Nieuwerkerken)',labelnl:'3850 Wijer (Nieuwerkerken)',labelfr:'3850 Wijer',labelen:'3850 Wijer',labelde:'3850 Wijer',parentid:'wreg.203',show:'true',sort:'931'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.947',label:'3870 Heers',labelnl:'3870 Heers',labelfr:'3870 Heers',labelen:'3870 Heers',labelde:'3870 Heers',parentid:'wreg.204',show:'true',sort:'932'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.948',label:'3870 Batsheers (Heers)',labelnl:'3870 Batsheers (Heers)',labelfr:'3870 Batsheers',labelen:'3870 Batsheers',labelde:'3870 Batsheers',parentid:'wreg.204',show:'true',sort:'933'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.949',label:'3870 Bovelingen (Heers)',labelnl:'3870 Bovelingen (Heers)',labelfr:'3870 Bovelingen',labelen:'3870 Bovelingen',labelde:'3870 Bovelingen',parentid:'wreg.204',show:'true',sort:'934'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.950',label:'3870 Gutschoven (Heers)',labelnl:'3870 Gutschoven (Heers)',labelfr:'3870 Gutschoven',labelen:'3870 Gutschoven',labelde:'3870 Gutschoven',parentid:'wreg.204',show:'true',sort:'935'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.951',label:'3870 Heks (Heers)',labelnl:'3870 Heks (Heers)',labelfr:'3870 Heks',labelen:'3870 Heks',labelde:'3870 Heks',parentid:'wreg.204',show:'true',sort:'936'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.952',label:'3870 Horpmaal (Heers)',labelnl:'3870 Horpmaal (Heers)',labelfr:'3870 Horpmaal',labelen:'3870 Horpmaal',labelde:'3870 Horpmaal',parentid:'wreg.204',show:'true',sort:'937'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.953',label:'3870 Klein-Gelmen (Heers)',labelnl:'3870 Klein-Gelmen (Heers)',labelfr:'3870 Petite-Jamine',labelen:'3870 Klein-Gelmen',labelde:'3870 Klein-Gelmen',parentid:'wreg.204',show:'true',sort:'938'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.954',label:'3870 Mechelen-Bovelingen (Heers)',labelnl:'3870 Mechelen-Bovelingen (Heers)',labelfr:'3870 Marlinne',labelen:'3870 Mechelen-Bovelingen',labelde:'3870 Mechelen-Bovelingen',parentid:'wreg.204',show:'true',sort:'939'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.955',label:'3870 Mettekoven (Heers)',labelnl:'3870 Mettekoven (Heers)',labelfr:'3870 Matincourt',labelen:'3870 Mettekoven',labelde:'3870 Mettekoven',parentid:'wreg.204',show:'true',sort:'940'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.956',label:'3870 Opheers (Heers)',labelnl:'3870 Opheers (Heers)',labelfr:'3870 Opheers',labelen:'3870 Opheers',labelde:'3870 Opheers',parentid:'wreg.204',show:'true',sort:'941'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.957',label:'3870 Rukkelingen-Loon (Heers)',labelnl:'3870 Rukkelingen-Loon (Heers)',labelfr:'3870 Roclenge-Looz',labelen:'3870 Rukkelingen-Loon',labelde:'3870 Rukkelingen-Loon',parentid:'wreg.204',show:'true',sort:'942'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.958',label:'3870 Vechmaal (Heers)',labelnl:'3870 Vechmaal (Heers)',labelfr:'3870 Vechmaal',labelen:'3870 Vechmaal',labelde:'3870 Vechmaal',parentid:'wreg.204',show:'true',sort:'943'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.959',label:'3870 Veulen (Heers)',labelnl:'3870 Veulen (Heers)',labelfr:'3870 Fologne',labelen:'3870 Veulen',labelde:'3870 Veulen',parentid:'wreg.204',show:'true',sort:'944'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.960',label:'3890 Gingelom',labelnl:'3890 Gingelom',labelfr:'3890 Gingelom',labelen:'3890 Gingelom',labelde:'3890 Gingelom',parentid:'wreg.205',show:'true',sort:'945'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.961',label:'3890 Boekhout (Gingelom)',labelnl:'3890 Boekhout (Gingelom)',labelfr:'3890 Boekhout',labelen:'3890 Boekhout',labelde:'3890 Boekhout',parentid:'wreg.205',show:'true',sort:'946'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.962',label:'3890 Jeuk (Gingelom)',labelnl:'3890 Jeuk (Gingelom)',labelfr:'3890 Goyer',labelen:'3890 Jeuk',labelde:'3890 Jeuk',parentid:'wreg.205',show:'true',sort:'947'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.963',label:'3890 Kortijs (Gingelom)',labelnl:'3890 Kortijs (Gingelom)',labelfr:'3890 Cortis',labelen:'3890 Kortijs',labelde:'3890 Kortijs',parentid:'wreg.205',show:'true',sort:'948'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.964',label:'3890 Montenaken (Gingelom)',labelnl:'3890 Montenaken (Gingelom)',labelfr:'3890 Montenaken',labelen:'3890 Montenaken',labelde:'3890 Montenaken',parentid:'wreg.205',show:'true',sort:'949'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.965',label:'3890 Niel-Bij-Sint-Truiden (Gingelom)',labelnl:'3890 Niel-Bij-Sint-Truiden (Gingelom)',labelfr:'3890 Niel-bij-Sint-Truiden',labelen:'3890 Niel-bij-Sint-Truiden',labelde:'3890 Niel-bij-Sint-Truiden',parentid:'wreg.205',show:'true',sort:'950'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.966',label:'3890 Vorsen (Gingelom)',labelnl:'3890 Vorsen (Gingelom)',labelfr:'3890 Fresin',labelen:'3890 Vorsen',labelde:'3890 Vorsen',parentid:'wreg.205',show:'true',sort:'951'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.967',label:'3891 Borlo (Gingelom)',labelnl:'3891 Borlo (Gingelom)',labelfr:'3891 Borlo',labelen:'3891 Borlo',labelde:'3891 Borlo',parentid:'wreg.205',show:'true',sort:'952'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.968',label:'3891 Buvingen (Gingelom)',labelnl:'3891 Buvingen (Gingelom)',labelfr:'3891 Buvingen',labelen:'3891 Buvingen',labelde:'3891 Buvingen',parentid:'wreg.205',show:'true',sort:'953'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.969',label:'3891 Mielen-Boven-Aalst (Gingelom)',labelnl:'3891 Mielen-Boven-Aalst (Gingelom)',labelfr:'3891 Mielen-boven-Aalst',labelen:'3891 Mielen-boven-Aalst',labelde:'3891 Mielen-boven-Aalst',parentid:'wreg.205',show:'true',sort:'954'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.970',label:'3891 Muizen (Gingelom)',labelnl:'3891 Muizen (Gingelom)',labelfr:'3891 Muizen',labelen:'3891 Muizen',labelde:'3891 Muizen',parentid:'wreg.205',show:'true',sort:'955'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.971',label:'3900 Overpelt',labelnl:'3900 Overpelt',labelfr:'3900 Overpelt',labelen:'3900 Overpelt',labelde:'3900 Overpelt',parentid:'wreg.206',show:'true',sort:'956'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.972',label:'3910 Neerpelt',labelnl:'3910 Neerpelt',labelfr:'3910 Neerpelt',labelen:'3910 Neerpelt',labelde:'3910 Neerpelt',parentid:'wreg.207',show:'true',sort:'957'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.973',label:'3910 Sint-Huibrechts-Lille (Neerpelt)',labelnl:'3910 Sint-Huibrechts-Lille (Neerpelt)',labelfr:'3910 Sint-Huibrechts-Lille',labelen:'3910 Sint-Huibrechts-Lille',labelde:'3910 Sint-Huibrechts-Lille',parentid:'wreg.207',show:'true',sort:'958'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.974',label:'3920 Lommel',labelnl:'3920 Lommel',labelfr:'3920 Lommel',labelen:'3920 Lommel',labelde:'3920 Lommel',parentid:'wreg.208',show:'true',sort:'959'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.975',label:'3930 Hamont-Achel',labelnl:'3930 Hamont-Achel',labelfr:'3930 Hamont-Achel',labelen:'3930 Hamont-Achel',labelde:'3930 Hamont-Achel',parentid:'wreg.209',show:'true',sort:'960'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.976',label:'3930 Achel (Hamont-Achel)',labelnl:'3930 Achel (Hamont-Achel)',labelfr:'3930 Achel',labelen:'3930 Achel',labelde:'3930 Achel',parentid:'wreg.209',show:'true',sort:'961'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.977',label:'3930 Hamont (Hamont-Achel)',labelnl:'3930 Hamont (Hamont-Achel)',labelfr:'3930 Hamont',labelen:'3930 Hamont',labelde:'3930 Hamont',parentid:'wreg.209',show:'true',sort:'962'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.978',label:'3940 Hechtel-Eksel',labelnl:'3940 Hechtel-Eksel',labelfr:'3940 Hechtel-Eksel',labelen:'3940 Hechtel-Eksel',labelde:'3940 Hechtel-Eksel',parentid:'wreg.210',show:'true',sort:'963'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.979',label:'3940 Hechtel (Hechtel-Eksel)',labelnl:'3940 Hechtel (Hechtel-Eksel)',labelfr:'3940 Hechtel',labelen:'3940 Hechtel',labelde:'3940 Hechtel',parentid:'wreg.210',show:'true',sort:'964'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.980',label:'3941 Eksel (Hechtel-Eksel)',labelnl:'3941 Eksel (Hechtel-Eksel)',labelfr:'3941 Eksel',labelen:'3941 Eksel',labelde:'3941 Eksel',parentid:'wreg.210',show:'true',sort:'965'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.981',label:'3945 Ham',labelnl:'3945 Ham',labelfr:'3945 Ham',labelen:'3945 Ham',labelde:'3945 Ham',parentid:'wreg.211',show:'true',sort:'966'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.982',label:'3945 Kwaadmechelen (Ham)',labelnl:'3945 Kwaadmechelen (Ham)',labelfr:'3945 Kwaadmechelen',labelen:'3945 Kwaadmechelen',labelde:'3945 Kwaadmechelen',parentid:'wreg.211',show:'true',sort:'967'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.983',label:'3945 Oostham (Ham)',labelnl:'3945 Oostham (Ham)',labelfr:'3945 Oostham',labelen:'3945 Oostham',labelde:'3945 Oostham',parentid:'wreg.211',show:'true',sort:'968'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.984',label:'3950 Bocholt',labelnl:'3950 Bocholt',labelfr:'3950 Bocholt',labelen:'3950 Bocholt',labelde:'3950 Bocholt',parentid:'wreg.212',show:'true',sort:'969'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.985',label:'3950 Kaulille (Bocholt)',labelnl:'3950 Kaulille (Bocholt)',labelfr:'3950 Kaulille',labelen:'3950 Kaulille',labelde:'3950 Kaulille',parentid:'wreg.212',show:'true',sort:'970'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.986',label:'3950 Reppel (Bocholt)',labelnl:'3950 Reppel (Bocholt)',labelfr:'3950 Reppel',labelen:'3950 Reppel',labelde:'3950 Reppel',parentid:'wreg.212',show:'true',sort:'971'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.987',label:'3960 Bree',labelnl:'3960 Bree',labelfr:'3960 Brée',labelen:'3960 Bree',labelde:'3960 Bree',parentid:'wreg.213',show:'true',sort:'972'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.988',label:'3960 Beek (Bree)',labelnl:'3960 Beek (Bree)',labelfr:'3960 Beek',labelen:'3960 Beek',labelde:'3960 Beek',parentid:'wreg.213',show:'true',sort:'973'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.989',label:'3960 Gerdingen (Bree)',labelnl:'3960 Gerdingen (Bree)',labelfr:'3960 Gerdingen',labelen:'3960 Gerdingen',labelde:'3960 Gerdingen',parentid:'wreg.213',show:'true',sort:'974'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.990',label:'3960 Opitter (Bree)',labelnl:'3960 Opitter (Bree)',labelfr:'3960 Opitter',labelen:'3960 Opitter',labelde:'3960 Opitter',parentid:'wreg.213',show:'true',sort:'975'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.991',label:'3960 Tongerlo (Bree)',labelnl:'3960 Tongerlo (Bree)',labelfr:'3960 Tongerlo',labelen:'3960 Tongerlo',labelde:'3960 Tongerlo',parentid:'wreg.213',show:'true',sort:'976'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.992',label:'3970 Leopoldsburg',labelnl:'3970 Leopoldsburg',labelfr:'3970 Bourg-Léopold',labelen:'3970 Leopoldsburg',labelde:'3970 Leopoldsburg',parentid:'wreg.214',show:'true',sort:'977'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.993',label:'3971 Heppen (Leopoldsburg)',labelnl:'3971 Heppen (Leopoldsburg)',labelfr:'3971 Heppen',labelen:'3971 Heppen',labelde:'3971 Heppen',parentid:'wreg.214',show:'true',sort:'978'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.994',label:'3980 Tessenderlo',labelnl:'3980 Tessenderlo',labelfr:'3980 Tessenderlo',labelen:'3980 Tessenderlo',labelde:'3980 Tessenderlo',parentid:'wreg.215',show:'true',sort:'979'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.995',label:'3990 Peer',labelnl:'3990 Peer',labelfr:'3990 Peer',labelen:'3990 Peer',labelde:'3990 Peer',parentid:'wreg.216',show:'true',sort:'980'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.996',label:'3990 Grote-Brogel (Peer)',labelnl:'3990 Grote-Brogel (Peer)',labelfr:'3990 Grote-Brogel',labelen:'3990 Grote-Brogel',labelde:'3990 Grote-Brogel',parentid:'wreg.216',show:'true',sort:'981'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.997',label:'3990 Kleine-Brogel (Peer)',labelnl:'3990 Kleine-Brogel (Peer)',labelfr:'3990 Kleine-Brogel',labelen:'3990 Kleine-Brogel',labelde:'3990 Kleine-Brogel',parentid:'wreg.216',show:'true',sort:'982'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.998',label:'3990 Wijchmaal (Peer)',labelnl:'3990 Wijchmaal (Peer)',labelfr:'3990 Wijchmaal',labelen:'3990 Wijchmaal',labelde:'3990 Wijchmaal',parentid:'wreg.216',show:'true',sort:'983'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.999',label:'8000 Brugge',labelnl:'8000 Brugge',labelfr:'8000 Bruges',labelen:'8000 Bruges',labelde:'8000 Brügge',parentid:'wreg.217',show:'true',sort:'984'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1000',label:'8000 Koolkerke (Brugge)',labelnl:'8000 Koolkerke (Brugge)',labelfr:'8000 Koolkerke',labelen:'8000 Koolkerke',labelde:'8000 Koolkerke',parentid:'wreg.217',show:'true',sort:'985'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1001',label:'8200 Brugge 2 (Brugge)',labelnl:'8200 Brugge 2 (Brugge)',labelfr:'8200 Bruges 2',labelen:'8200 Bruges 2',labelde:'8200 Brügge 2',parentid:'wreg.217',show:'true',sort:'986'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1002',label:'8200 Sint-Andries (Brugge)',labelnl:'8200 Sint-Andries (Brugge)',labelfr:'8200 Sint-Andries',labelen:'8200 Sint-Andries',labelde:'8200 Sint-Andries',parentid:'wreg.217',show:'true',sort:'987'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1003',label:'8200 Sint-Michiels (Brugge)',labelnl:'8200 Sint-Michiels (Brugge)',labelfr:'8200 Sint-Michiels',labelen:'8200 Sint-Michiels',labelde:'8200 Sint-Michiels',parentid:'wreg.217',show:'true',sort:'988'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1004',label:'8310 Assebroek (Brugge)',labelnl:'8310 Assebroek (Brugge)',labelfr:'8310 Assebroek',labelen:'8310 Assebroek',labelde:'8310 Assebroek',parentid:'wreg.217',show:'true',sort:'989'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1005',label:'8310 Sint-Kruis (Brugge)',labelnl:'8310 Sint-Kruis (Brugge)',labelfr:'8310 Sint-Kruis',labelen:'8310 Sint-Kruis',labelde:'8310 Sint-Kruis',parentid:'wreg.217',show:'true',sort:'990'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1006',label:'8380 Dudzele (Brugge)',labelnl:'8380 Dudzele (Brugge)',labelfr:'8380 Dudzele',labelen:'8380 Dudzele',labelde:'8380 Dudzele',parentid:'wreg.217',show:'true',sort:'991'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1007',label:'8380 Lissewege (Brugge)',labelnl:'8380 Lissewege (Brugge)',labelfr:'8380 Lissewege',labelen:'8380 Lissewege',labelde:'8380 Lissewege',parentid:'wreg.217',show:'true',sort:'992'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1008',label:'8380 Zeebrugge (Brugge)',labelnl:'8380 Zeebrugge (Brugge)',labelfr:'8380 Zeebrugge',labelen:'8380 Zeebrugge',labelde:'8380 Zeebrugge',parentid:'wreg.217',show:'true',sort:'993'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1009',label:'8020 Oostkamp',labelnl:'8020 Oostkamp',labelfr:'8020 Oostkamp',labelen:'8020 Oostkamp',labelde:'8020 Oostkamp',parentid:'wreg.218',show:'true',sort:'994'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1010',label:'8020 Hertsberge (Oostkamp)',labelnl:'8020 Hertsberge (Oostkamp)',labelfr:'8020 Hertsberge',labelen:'8020 Hertsberge',labelde:'8020 Hertsberge',parentid:'wreg.218',show:'true',sort:'995'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1011',label:'8020 Ruddervoorde (Oostkamp)',labelnl:'8020 Ruddervoorde (Oostkamp)',labelfr:'8020 Ruddervoorde',labelen:'8020 Ruddervoorde',labelde:'8020 Ruddervoorde',parentid:'wreg.218',show:'true',sort:'996'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1012',label:'8020 Waardamme (Oostkamp)',labelnl:'8020 Waardamme (Oostkamp)',labelfr:'8020 Waardamme',labelen:'8020 Waardamme',labelde:'8020 Waardamme',parentid:'wreg.218',show:'true',sort:'997'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1013',label:'8210 Zedelgem',labelnl:'8210 Zedelgem',labelfr:'8210 Zedelgem',labelen:'8210 Zedelgem',labelde:'8210 Zedelgem',parentid:'wreg.219',show:'true',sort:'998'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1014',label:'8210 Loppem (Zedelgem)',labelnl:'8210 Loppem (Zedelgem)',labelfr:'8210 Loppem',labelen:'8210 Loppem',labelde:'8210 Loppem',parentid:'wreg.219',show:'true',sort:'999'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1015',label:'8210 Veldegem (Zedelgem)',labelnl:'8210 Veldegem (Zedelgem)',labelfr:'8210 Veldegem',labelen:'8210 Veldegem',labelde:'8210 Veldegem',parentid:'wreg.219',show:'true',sort:'1000'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1016',label:'8211 Aartrijke (Zedelgem)',labelnl:'8211 Aartrijke (Zedelgem)',labelfr:'8211 Aartrijke',labelen:'8211 Aartrijke',labelde:'8211 Aartrijke',parentid:'wreg.219',show:'true',sort:'1001'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1017',label:'8300 Knokke-Heist',labelnl:'8300 Knokke-Heist',labelfr:'8300 Knokke-Heist',labelen:'8300 Knokke-Heist',labelde:'8300 Knokke-Heist',parentid:'wreg.220',show:'true',sort:'1002'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1018',label:'8300 Knokke (Knokke-Heist)',labelnl:'8300 Knokke (Knokke-Heist)',labelfr:'8300 Knokke',labelen:'8300 Knokke',labelde:'8300 Knokke',parentid:'wreg.220',show:'true',sort:'1003'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1019',label:'8300 Westkapelle (Knokke-Heist)',labelnl:'8300 Westkapelle (Knokke-Heist)',labelfr:'8300 Westkapelle',labelen:'8300 Westkapelle',labelde:'8300 Westkapelle',parentid:'wreg.220',show:'true',sort:'1004'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1020',label:'8301 Heist-Aan-Zee (Knokke-Heist)',labelnl:'8301 Heist-Aan-Zee (Knokke-Heist)',labelfr:'8301 Heist',labelen:'8301 Heist-aan-Zee',labelde:'8301 Heist-aan-Zee',parentid:'wreg.220',show:'true',sort:'1005'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1021',label:'8301 Ramskapelle (Knokke-Heist)',labelnl:'8301 Ramskapelle (Knokke-Heist)',labelfr:'8301 Ramskapelle',labelen:'8301 Ramskapelle',labelde:'8301 Ramskapelle',parentid:'wreg.220',show:'true',sort:'1006'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1022',label:'8340 Damme',labelnl:'8340 Damme',labelfr:'8340 Damme',labelen:'8340 Damme',labelde:'8340 Damme',parentid:'wreg.221',show:'true',sort:'1007'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1023',label:'8340 Hoeke (Damme)',labelnl:'8340 Hoeke (Damme)',labelfr:'8340 Hoeke',labelen:'8340 Hoeke',labelde:'8340 Hoeke',parentid:'wreg.221',show:'true',sort:'1008'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1024',label:'8340 Lapscheure (Damme)',labelnl:'8340 Lapscheure (Damme)',labelfr:'8340 Lapscheure',labelen:'8340 Lapscheure',labelde:'8340 Lapscheure',parentid:'wreg.221',show:'true',sort:'1009'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1025',label:'8340 Moerkerke (Damme)',labelnl:'8340 Moerkerke (Damme)',labelfr:'8340 Moerkerke',labelen:'8340 Moerkerke',labelde:'8340 Moerkerke',parentid:'wreg.221',show:'true',sort:'1010'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1026',label:'8340 Oostkerke (Damme)',labelnl:'8340 Oostkerke (Damme)',labelfr:'8340 Oostkerke',labelen:'8340 Oostkerke',labelde:'8340 Oostkerke',parentid:'wreg.221',show:'true',sort:'1011'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1027',label:'8340 Sijsele (Damme)',labelnl:'8340 Sijsele (Damme)',labelfr:'8340 Sijsele',labelen:'8340 Sijsele',labelde:'8340 Sijsele',parentid:'wreg.221',show:'true',sort:'1012'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1028',label:'8370 Blankenberge',labelnl:'8370 Blankenberge',labelfr:'8370 Blankenberge',labelen:'8370 Blankenberge',labelde:'8370 Blankenberge',parentid:'wreg.222',show:'true',sort:'1013'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1029',label:'8370 Uitkerke (Blankenberge)',labelnl:'8370 Uitkerke (Blankenberge)',labelfr:'8370 Uitkerke',labelen:'8370 Uitkerke',labelde:'8370 Uitkerke',parentid:'wreg.222',show:'true',sort:'1014'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1030',label:'8377 Zuienkerke',labelnl:'8377 Zuienkerke',labelfr:'8377 Zuienkerke',labelen:'8377 Zuienkerke',labelde:'8377 Zuienkerke',parentid:'wreg.223',show:'true',sort:'1015'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1031',label:'8377 Houtave (Zuienkerke)',labelnl:'8377 Houtave (Zuienkerke)',labelfr:'8377 Houtave',labelen:'8377 Houtave',labelde:'8377 Houtave',parentid:'wreg.223',show:'true',sort:'1016'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1032',label:'8377 Meetkerke (Zuienkerke)',labelnl:'8377 Meetkerke (Zuienkerke)',labelfr:'8377 Meetkerke',labelen:'8377 Meetkerke',labelde:'8377 Meetkerke',parentid:'wreg.223',show:'true',sort:'1017'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1033',label:'8377 Nieuwmunster (Zuienkerke)',labelnl:'8377 Nieuwmunster (Zuienkerke)',labelfr:'8377 Nieuwmunster',labelen:'8377 Nieuwmunster',labelde:'8377 Nieuwmunster',parentid:'wreg.223',show:'true',sort:'1018'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1034',label:'8400 Oostende',labelnl:'8400 Oostende',labelfr:'8400 Ostende',labelen:'8400 Ostend',labelde:'8400 Ostende',parentid:'wreg.224',show:'true',sort:'1019'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1035',label:'8400 Stene (Oostende)',labelnl:'8400 Stene (Oostende)',labelfr:'8400 Stene',labelen:'8400 Stene',labelde:'8400 Stene',parentid:'wreg.224',show:'true',sort:'1020'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1036',label:'8400 Zandvoorde (Oostende)',labelnl:'8400 Zandvoorde (Oostende)',labelfr:'8400 Zandvoorde',labelen:'8400 Zandvoorde',labelde:'8400 Zandvoorde',parentid:'wreg.224',show:'true',sort:'1021'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1037',label:'8420 De Haan',labelnl:'8420 De Haan',labelfr:'8420 Le Coq',labelen:'8420 De Haan',labelde:'8420 De Haan',parentid:'wreg.225',show:'true',sort:'1022'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1038',label:'8420 Klemskerke (De Haan)',labelnl:'8420 Klemskerke (De Haan)',labelfr:'8420 Klemskerke',labelen:'8420 Klemskerke',labelde:'8420 Klemskerke',parentid:'wreg.225',show:'true',sort:'1023'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1039',label:'8420 Wenduine (De Haan)',labelnl:'8420 Wenduine (De Haan)',labelfr:'8420 Wenduine',labelen:'8420 Wenduine',labelde:'8420 Wenduine',parentid:'wreg.225',show:'true',sort:'1024'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1040',label:'8421 Vlissegem (De Haan)',labelnl:'8421 Vlissegem (De Haan)',labelfr:'8421 Vlissegem',labelen:'8421 Vlissegem',labelde:'8421 Vlissegem',parentid:'wreg.225',show:'true',sort:'1025'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1041',label:'8430 Middelkerke',labelnl:'8430 Middelkerke',labelfr:'8430 Middelkerke',labelen:'8430 Middelkerke',labelde:'8430 Middelkerke',parentid:'wreg.226',show:'true',sort:'1026'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1042',label:'8431 Wilskerke (Middelkerke)',labelnl:'8431 Wilskerke (Middelkerke)',labelfr:'8431 Wilskerke',labelen:'8431 Wilskerke',labelde:'8431 Wilskerke',parentid:'wreg.226',show:'true',sort:'1027'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1043',label:'8432 Leffinge (Middelkerke)',labelnl:'8432 Leffinge (Middelkerke)',labelfr:'8432 Leffinge',labelen:'8432 Leffinge',labelde:'8432 Leffinge',parentid:'wreg.226',show:'true',sort:'1028'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1044',label:'8433 Mannekensvere (Middelkerke)',labelnl:'8433 Mannekensvere (Middelkerke)',labelfr:'8433 Mannekensvere',labelen:'8433 Mannekensvere',labelde:'8433 Mannekensvere',parentid:'wreg.226',show:'true',sort:'1029'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1045',label:'8433 Schore (Middelkerke)',labelnl:'8433 Schore (Middelkerke)',labelfr:'8433 Schore',labelen:'8433 Schore',labelde:'8433 Schore',parentid:'wreg.226',show:'true',sort:'1030'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1046',label:'8433 Slijpe (Middelkerke)',labelnl:'8433 Slijpe (Middelkerke)',labelfr:'8433 Slijpe',labelen:'8433 Slijpe',labelde:'8433 Slijpe',parentid:'wreg.226',show:'true',sort:'1031'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1047',label:'8433 Spermalie (Middelkerke)',labelnl:'8433 Spermalie (Middelkerke)',labelfr:'8433 Spermalie',labelen:'8433 Spermalie',labelde:'8433 Spermalie',parentid:'wreg.226',show:'true',sort:'1032'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1048',label:'8433 Sint-Pieters-Kapelle (Middelkerke)',labelnl:'8433 Sint-Pieters-Kapelle (Middelkerke)',labelfr:'8433 Sint-Pieters-Kapelle',labelen:'8433 Sint-Pieters-Kapelle',labelde:'8433 Sint-Pieters-Kapelle',parentid:'wreg.226',show:'true',sort:'1033'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1049',label:'8434 Lombardsijde (Middelkerke)',labelnl:'8434 Lombardsijde (Middelkerke)',labelfr:'8434 Lombardsijde',labelen:'8434 Lombardsijde',labelde:'8434 Lombardsijde',parentid:'wreg.226',show:'true',sort:'1034'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1050',label:'8434 Westende (Middelkerke)',labelnl:'8434 Westende (Middelkerke)',labelfr:'8434 Westende',labelen:'8434 Westende',labelde:'8434 Westende',parentid:'wreg.226',show:'true',sort:'1035'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1051',label:'8450 Bredene',labelnl:'8450 Bredene',labelfr:'8450 Bredene',labelen:'8450 Bredene',labelde:'8450 Bredene',parentid:'wreg.227',show:'true',sort:'1036'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1052',label:'8460 Oudenburg',labelnl:'8460 Oudenburg',labelfr:'8460 Oudenburg',labelen:'8460 Oudenburg',labelde:'8460 Oudenburg',parentid:'wreg.228',show:'true',sort:'1037'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1053',label:'8460 Ettelgem (Oudenburg)',labelnl:'8460 Ettelgem (Oudenburg)',labelfr:'8460 Ettelgem',labelen:'8460 Ettelgem',labelde:'8460 Ettelgem',parentid:'wreg.228',show:'true',sort:'1038'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1054',label:'8460 Roksem (Oudenburg)',labelnl:'8460 Roksem (Oudenburg)',labelfr:'8460 Roksem',labelen:'8460 Roksem',labelde:'8460 Roksem',parentid:'wreg.228',show:'true',sort:'1039'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1055',label:'8460 Westkerke (Oudenburg)',labelnl:'8460 Westkerke (Oudenburg)',labelfr:'8460 Westkerke',labelen:'8460 Westkerke',labelde:'8460 Westkerke',parentid:'wreg.228',show:'true',sort:'1040'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1056',label:'8470 Gistel',labelnl:'8470 Gistel',labelfr:'8470 Gistel',labelen:'8470 Gistel',labelde:'8470 Gistel',parentid:'wreg.229',show:'true',sort:'1041'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1057',label:'8470 Moere (Gistel)',labelnl:'8470 Moere (Gistel)',labelfr:'8470 Moere',labelen:'8470 Moere',labelde:'8470 Moere',parentid:'wreg.229',show:'true',sort:'1042'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1058',label:'8470 Snaaskerke (Gistel)',labelnl:'8470 Snaaskerke (Gistel)',labelfr:'8470 Snaaskerke',labelen:'8470 Snaaskerke',labelde:'8470 Snaaskerke',parentid:'wreg.229',show:'true',sort:'1043'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1059',label:'8470 Zevekote (Gistel)',labelnl:'8470 Zevekote (Gistel)',labelfr:'8470 Zevekote',labelen:'8470 Zevekote',labelde:'8470 Zevekote',parentid:'wreg.229',show:'true',sort:'1044'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1060',label:'8480 Ichtegem',labelnl:'8480 Ichtegem',labelfr:'8480 Ichtegem',labelen:'8480 Ichtegem',labelde:'8480 Ichtegem',parentid:'wreg.230',show:'true',sort:'1045'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1061',label:'8480 Bekegem (Ichtegem)',labelnl:'8480 Bekegem (Ichtegem)',labelfr:'8480 Bekegem',labelen:'8480 Bekegem',labelde:'8480 Bekegem',parentid:'wreg.230',show:'true',sort:'1046'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1062',label:'8480 Eernegem (Ichtegem)',labelnl:'8480 Eernegem (Ichtegem)',labelfr:'8480 Eernegem',labelen:'8480 Eernegem',labelde:'8480 Eernegem',parentid:'wreg.230',show:'true',sort:'1047'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1063',label:'8490 Jabbeke',labelnl:'8490 Jabbeke',labelfr:'8490 Jabbeke',labelen:'8490 Jabbeke',labelde:'8490 Jabbeke',parentid:'wreg.231',show:'true',sort:'1048'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1064',label:'8490 Snellegem (Jabbeke)',labelnl:'8490 Snellegem (Jabbeke)',labelfr:'8490 Snellegem',labelen:'8490 Snellegem',labelde:'8490 Snellegem',parentid:'wreg.231',show:'true',sort:'1049'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1065',label:'8490 Stalhille (Jabbeke)',labelnl:'8490 Stalhille (Jabbeke)',labelfr:'8490 Stalhille',labelen:'8490 Stalhille',labelde:'8490 Stalhille',parentid:'wreg.231',show:'true',sort:'1050'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1066',label:'8490 Varsenare (Jabbeke)',labelnl:'8490 Varsenare (Jabbeke)',labelfr:'8490 Varsenare',labelen:'8490 Varsenare',labelde:'8490 Varsenare',parentid:'wreg.231',show:'true',sort:'1051'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1067',label:'8490 Zerkegem (Jabbeke)',labelnl:'8490 Zerkegem (Jabbeke)',labelfr:'8490 Zerkegem',labelen:'8490 Zerkegem',labelde:'8490 Zerkegem',parentid:'wreg.231',show:'true',sort:'1052'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1068',label:'8500 Kortrijk',labelnl:'8500 Kortrijk',labelfr:'8500 Courtrai',labelen:'8500 Kortrijk',labelde:'8500 Kortrijk',parentid:'wreg.232',show:'true',sort:'1053'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1069',label:'8501 Bissegem (Kortrijk)',labelnl:'8501 Bissegem (Kortrijk)',labelfr:'8501 Bissegem',labelen:'8501 Bissegem',labelde:'8501 Bissegem',parentid:'wreg.232',show:'true',sort:'1054'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1070',label:'8501 Heule (Kortrijk)',labelnl:'8501 Heule (Kortrijk)',labelfr:'8501 Heule',labelen:'8501 Heule',labelde:'8501 Heule',parentid:'wreg.232',show:'true',sort:'1055'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1071',label:'8510 Bellegem (Kortrijk)',labelnl:'8510 Bellegem (Kortrijk)',labelfr:'8510 Bellegem',labelen:'8510 Bellegem',labelde:'8510 Bellegem',parentid:'wreg.232',show:'true',sort:'1056'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1072',label:'8510 Kooigem (Kortrijk)',labelnl:'8510 Kooigem (Kortrijk)',labelfr:'8510 Kooigem',labelen:'8510 Kooigem',labelde:'8510 Kooigem',parentid:'wreg.232',show:'true',sort:'1057'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1073',label:'8510 Marke (Kortrijk)',labelnl:'8510 Marke (Kortrijk)',labelfr:'8510 Marke',labelen:'8510 Marke',labelde:'8510 Marke',parentid:'wreg.232',show:'true',sort:'1058'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1074',label:'8510 Rollegem (Kortrijk)',labelnl:'8510 Rollegem (Kortrijk)',labelfr:'8510 Rollegem',labelen:'8510 Rollegem',labelde:'8510 Rollegem',parentid:'wreg.232',show:'true',sort:'1059'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1075',label:'8511 Aalbeke (Kortrijk)',labelnl:'8511 Aalbeke (Kortrijk)',labelfr:'8511 Aalbeke',labelen:'8511 Aalbeke',labelde:'8511 Aalbeke',parentid:'wreg.232',show:'true',sort:'1060'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1076',label:'8520 Kuurne',labelnl:'8520 Kuurne',labelfr:'8520 Cuerne',labelen:'8520 Kuurne',labelde:'8520 Kuurne',parentid:'wreg.233',show:'true',sort:'1061'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1077',label:'8530 Harelbeke',labelnl:'8530 Harelbeke',labelfr:'8530 Harelbeke',labelen:'8530 Harelbeke',labelde:'8530 Harelbeke',parentid:'wreg.234',show:'true',sort:'1062'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1078',label:'8531 Bavikhove (Harelbeke)',labelnl:'8531 Bavikhove (Harelbeke)',labelfr:'8531 Bavikhove',labelen:'8531 Bavikhove',labelde:'8531 Bavikhove',parentid:'wreg.234',show:'true',sort:'1063'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1079',label:'8531 Hulste (Harelbeke)',labelnl:'8531 Hulste (Harelbeke)',labelfr:'8531 Hulste',labelen:'8531 Hulste',labelde:'8531 Hulste',parentid:'wreg.234',show:'true',sort:'1064'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1080',label:'8540 Deerlijk',labelnl:'8540 Deerlijk',labelfr:'8540 Deerlijk',labelen:'8540 Deerlijk',labelde:'8540 Deerlijk',parentid:'wreg.235',show:'true',sort:'1065'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1081',label:'8550 Zwevegem',labelnl:'8550 Zwevegem',labelfr:'8550 Zwevegem',labelen:'8550 Zwevegem',labelde:'8550 Zwevegem',parentid:'wreg.236',show:'true',sort:'1066'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1082',label:'8551 Heestert (Zwevegem)',labelnl:'8551 Heestert (Zwevegem)',labelfr:'8551 Heestert',labelen:'8551 Heestert',labelde:'8551 Heestert',parentid:'wreg.236',show:'true',sort:'1067'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1083',label:'8552 Moen (Zwevegem)',labelnl:'8552 Moen (Zwevegem)',labelfr:'8552 Moen',labelen:'8552 Moen',labelde:'8552 Moen',parentid:'wreg.236',show:'true',sort:'1068'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1084',label:'8553 Otegem (Zwevegem)',labelnl:'8553 Otegem (Zwevegem)',labelfr:'8553 Otegem',labelen:'8553 Otegem',labelde:'8553 Otegem',parentid:'wreg.236',show:'true',sort:'1069'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1085',label:'8554 Sint-Denijs (Zwevegem)',labelnl:'8554 Sint-Denijs (Zwevegem)',labelfr:'8554 Sint-Denijs',labelen:'8554 Sint-Denijs',labelde:'8554 Sint-Denijs',parentid:'wreg.236',show:'true',sort:'1070'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1086',label:'8560 Wevelgem',labelnl:'8560 Wevelgem',labelfr:'8560 Wevelgem',labelen:'8560 Wevelgem',labelde:'8560 Wevelgem',parentid:'wreg.237',show:'true',sort:'1071'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1087',label:'8560 Gullegem (Wevelgem)',labelnl:'8560 Gullegem (Wevelgem)',labelfr:'8560 Gullegem',labelen:'8560 Gullegem',labelde:'8560 Gullegem',parentid:'wreg.237',show:'true',sort:'1072'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1088',label:'8560 Moorsele (Wevelgem)',labelnl:'8560 Moorsele (Wevelgem)',labelfr:'8560 Moorsele',labelen:'8560 Moorsele',labelde:'8560 Moorsele',parentid:'wreg.237',show:'true',sort:'1073'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1089',label:'8570 Anzegem',labelnl:'8570 Anzegem',labelfr:'8570 Anzegem',labelen:'8570 Anzegem',labelde:'8570 Anzegem',parentid:'wreg.238',show:'true',sort:'1074'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1090',label:'8570 Gijzelbrechtegem (Anzegem)',labelnl:'8570 Gijzelbrechtegem (Anzegem)',labelfr:'8570 Gijzelbrechtegem',labelen:'8570 Gijzelbrechtegem',labelde:'8570 Gijzelbrechtegem',parentid:'wreg.238',show:'true',sort:'1075'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1091',label:'8570 Ingooigem (Anzegem)',labelnl:'8570 Ingooigem (Anzegem)',labelfr:'8570 Ingooigem',labelen:'8570 Ingooigem',labelde:'8570 Ingooigem',parentid:'wreg.238',show:'true',sort:'1076'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1092',label:'8570 Vichte (Anzegem)',labelnl:'8570 Vichte (Anzegem)',labelfr:'8570 Vichte',labelen:'8570 Vichte',labelde:'8570 Vichte',parentid:'wreg.238',show:'true',sort:'1077'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1093',label:'8572 Kaster (Anzegem)',labelnl:'8572 Kaster (Anzegem)',labelfr:'8572 Kaster',labelen:'8572 Kaster',labelde:'8572 Kaster',parentid:'wreg.238',show:'true',sort:'1078'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1094',label:'8573 Tiegem (Anzegem)',labelnl:'8573 Tiegem (Anzegem)',labelfr:'8573 Tiegem',labelen:'8573 Tiegem',labelde:'8573 Tiegem',parentid:'wreg.238',show:'true',sort:'1079'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1095',label:'8580 Avelgem',labelnl:'8580 Avelgem',labelfr:'8580 Avelgem',labelen:'8580 Avelgem',labelde:'8580 Avelgem',parentid:'wreg.239',show:'true',sort:'1080'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1096',label:'8581 Kerkhove (Avelgem)',labelnl:'8581 Kerkhove (Avelgem)',labelfr:'8581 Kerkhove',labelen:'8581 Kerkhove',labelde:'8581 Kerkhove',parentid:'wreg.239',show:'true',sort:'1081'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1097',label:'8581 Waarmaarde (Avelgem)',labelnl:'8581 Waarmaarde (Avelgem)',labelfr:'8581 Waarmaarde',labelen:'8581 Waarmaarde',labelde:'8581 Waarmaarde',parentid:'wreg.239',show:'true',sort:'1082'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1098',label:'8582 Outrijve (Avelgem)',labelnl:'8582 Outrijve (Avelgem)',labelfr:'8582 Outrijve',labelen:'8582 Outrijve',labelde:'8582 Outrijve',parentid:'wreg.239',show:'true',sort:'1083'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1099',label:'8583 Bossuit (Avelgem)',labelnl:'8583 Bossuit (Avelgem)',labelfr:'8583 Bossuit',labelen:'8583 Bossuit',labelde:'8583 Bossuit',parentid:'wreg.239',show:'true',sort:'1084'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1100',label:'8587 Spiere-Helkijn',labelnl:'8587 Spiere-Helkijn',labelfr:'8587 Espierres-Helchin',labelen:'8587 Spiere-Helkijn',labelde:'8587 Spiere-Helkijn',parentid:'wreg.240',show:'true',sort:'1085'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1101',label:'8587 Espierres (Spiere-Helkijn)',labelnl:'8587 Espierres (Spiere-Helkijn)',labelfr:'8587 Espierres',labelen:'8587 Spiere',labelde:'8587 Spiere',parentid:'wreg.240',show:'true',sort:'1086'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1102',label:'8587 Espierres-Helchin (Spiere-Helkijn)',labelnl:'8587 Espierres-Helchin (Spiere-Helkijn)',labelfr:'8587 Espierres-Helchin',labelen:'8587 Spiere-Helkijn',labelde:'8587 Spiere-Helkijn',parentid:'wreg.240',show:'true',sort:'1087'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1103',label:'8587 Helchin (Spiere-Helkijn)',labelnl:'8587 Helchin (Spiere-Helkijn)',labelfr:'8587 Helchin',labelen:'8587 Helkijn',labelde:'8587 Helkijn',parentid:'wreg.240',show:'true',sort:'1088'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1104',label:'8587 Helkijn (Spiere-Helkijn)',labelnl:'8587 Helkijn (Spiere-Helkijn)',labelfr:'8587 Helchin',labelen:'8587 Helkijn',labelde:'8587 Helkijn',parentid:'wreg.240',show:'true',sort:'1089'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1105',label:'8587 Spiere (Spiere-Helkijn)',labelnl:'8587 Spiere (Spiere-Helkijn)',labelfr:'8587 Espierres',labelen:'8587 Spiere',labelde:'8587 Spiere',parentid:'wreg.240',show:'true',sort:'1090'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1106',label:'8600 Diksmuide',labelnl:'8600 Diksmuide',labelfr:'8600 Dixmude',labelen:'8600 Diksmuide',labelde:'8600 Diksmuide',parentid:'wreg.241',show:'true',sort:'1091'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1107',label:'8600 Beerst (Diksmuide)',labelnl:'8600 Beerst (Diksmuide)',labelfr:'8600 Beerst',labelen:'8600 Beerst',labelde:'8600 Beerst',parentid:'wreg.241',show:'true',sort:'1092'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1108',label:'8600 Driekapellen (Diksmuide)',labelnl:'8600 Driekapellen (Diksmuide)',labelfr:'8600 Driekapellen',labelen:'8600 Driekapellen',labelde:'8600 Driekapellen',parentid:'wreg.241',show:'true',sort:'1093'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1109',label:'8600 Esen (Diksmuide)',labelnl:'8600 Esen (Diksmuide)',labelfr:'8600 Esen',labelen:'8600 Esen',labelde:'8600 Esen',parentid:'wreg.241',show:'true',sort:'1094'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1110',label:'8600 Kaaskerke (Diksmuide)',labelnl:'8600 Kaaskerke (Diksmuide)',labelfr:'8600 Kaaskerke',labelen:'8600 Kaaskerke',labelde:'8600 Kaaskerke',parentid:'wreg.241',show:'true',sort:'1095'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1111',label:'8600 Keiem (Diksmuide)',labelnl:'8600 Keiem (Diksmuide)',labelfr:'8600 Keiem',labelen:'8600 Keiem',labelde:'8600 Keiem',parentid:'wreg.241',show:'true',sort:'1096'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1112',label:'8600 Lampernisse (Diksmuide)',labelnl:'8600 Lampernisse (Diksmuide)',labelfr:'8600 Lampernisse',labelen:'8600 Lampernisse',labelde:'8600 Lampernisse',parentid:'wreg.241',show:'true',sort:'1097'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1113',label:'8600 Leke (Diksmuide)',labelnl:'8600 Leke (Diksmuide)',labelfr:'8600 Leke',labelen:'8600 Leke',labelde:'8600 Leke',parentid:'wreg.241',show:'true',sort:'1098'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1114',label:'8600 Nieuwkapelle (Diksmuide)',labelnl:'8600 Nieuwkapelle (Diksmuide)',labelfr:'8600 Nieuwkapelle',labelen:'8600 Nieuwkapelle',labelde:'8600 Nieuwkapelle',parentid:'wreg.241',show:'true',sort:'1099'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1115',label:'8600 Oostkerke (Diksmuide)',labelnl:'8600 Oostkerke (Diksmuide)',labelfr:'8600 Oostkerke',labelen:'8600 Oostkerke',labelde:'8600 Oostkerke',parentid:'wreg.241',show:'true',sort:'1100'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1116',label:'8600 Oudekapelle (Diksmuide)',labelnl:'8600 Oudekapelle (Diksmuide)',labelfr:'8600 Oudekapelle',labelen:'8600 Oudekapelle',labelde:'8600 Oudekapelle',parentid:'wreg.241',show:'true',sort:'1101'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1117',label:'8600 Pervijze (Diksmuide)',labelnl:'8600 Pervijze (Diksmuide)',labelfr:'8600 Pervijze',labelen:'8600 Pervijze',labelde:'8600 Pervijze',parentid:'wreg.241',show:'true',sort:'1102'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1118',label:'8600 Sint-Jacobs-Kapelle (Diksmuide)',labelnl:'8600 Sint-Jacobs-Kapelle (Diksmuide)',labelfr:'8600 Sint-Jacobs-Kapelle',labelen:'8600 Sint-Jacobs-Kapelle',labelde:'8600 Sint-Jacobs-Kapelle',parentid:'wreg.241',show:'true',sort:'1103'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1119',label:'8600 Stuivekenskerke (Diksmuide)',labelnl:'8600 Stuivekenskerke (Diksmuide)',labelfr:'8600 Stuivekenskerke',labelen:'8600 Stuivekenskerke',labelde:'8600 Stuivekenskerke',parentid:'wreg.241',show:'true',sort:'1104'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1120',label:'8600 Vladslo (Diksmuide)',labelnl:'8600 Vladslo (Diksmuide)',labelfr:'8600 Vladslo',labelen:'8600 Vladslo',labelde:'8600 Vladslo',parentid:'wreg.241',show:'true',sort:'1105'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1121',label:'8600 Woumen (Diksmuide)',labelnl:'8600 Woumen (Diksmuide)',labelfr:'8600 Woumen',labelen:'8600 Woumen',labelde:'8600 Woumen',parentid:'wreg.241',show:'true',sort:'1106'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1122',label:'8610 Kortemark',labelnl:'8610 Kortemark',labelfr:'8610 Kortemark',labelen:'8610 Kortemark',labelde:'8610 Kortemark',parentid:'wreg.242',show:'true',sort:'1107'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1123',label:'8610 Handzame (Kortemark)',labelnl:'8610 Handzame (Kortemark)',labelfr:'8610 Handzame',labelen:'8610 Handzame',labelde:'8610 Handzame',parentid:'wreg.242',show:'true',sort:'1108'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1124',label:'8610 Werken (Kortemark)',labelnl:'8610 Werken (Kortemark)',labelfr:'8610 Werken',labelen:'8610 Werken',labelde:'8610 Werken',parentid:'wreg.242',show:'true',sort:'1109'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1125',label:'8610 Zarren (Kortemark)',labelnl:'8610 Zarren (Kortemark)',labelfr:'8610 Zarren',labelen:'8610 Zarren',labelde:'8610 Zarren',parentid:'wreg.242',show:'true',sort:'1110'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1126',label:'8620 Nieuwpoort',labelnl:'8620 Nieuwpoort',labelfr:'8620 Nieuport',labelen:'8620 Nieuwpoort',labelde:'8620 Nieuwpoort',parentid:'wreg.243',show:'true',sort:'1111'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1127',label:'8620 Ramskapelle (Nieuwpoort)',labelnl:'8620 Ramskapelle (Nieuwpoort)',labelfr:'8620 Ramskapelle',labelen:'8620 Ramskapelle',labelde:'8620 Ramskapelle',parentid:'wreg.243',show:'true',sort:'1112'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1128',label:'8620 Sint-Joris (Nieuwpoort)',labelnl:'8620 Sint-Joris (Nieuwpoort)',labelfr:'8620 Sint-Joris',labelen:'8620 Sint-Joris',labelde:'8620 Sint-Joris',parentid:'wreg.243',show:'true',sort:'1113'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1129',label:'8630 Veurne',labelnl:'8630 Veurne',labelfr:'8630 Furnes',labelen:'8630 Veurne',labelde:'8630 Veurne',parentid:'wreg.244',show:'true',sort:'1114'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1130',label:'8630 Avekapelle (Veurne)',labelnl:'8630 Avekapelle (Veurne)',labelfr:'8630 Avekapelle',labelen:'8630 Avekapelle',labelde:'8630 Avekapelle',parentid:'wreg.244',show:'true',sort:'1115'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1131',label:'8630 Booitshoeke (Veurne)',labelnl:'8630 Booitshoeke (Veurne)',labelfr:'8630 Booitshoeke',labelen:'8630 Booitshoeke',labelde:'8630 Booitshoeke',parentid:'wreg.244',show:'true',sort:'1116'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1132',label:'8630 Bulskamp (Veurne)',labelnl:'8630 Bulskamp (Veurne)',labelfr:'8630 Bulskamp',labelen:'8630 Bulskamp',labelde:'8630 Bulskamp',parentid:'wreg.244',show:'true',sort:'1117'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1133',label:'8630 De Moeren (Veurne)',labelnl:'8630 De Moeren (Veurne)',labelfr:'8630 Les Moëres',labelen:'8630 De Moeren',labelde:'8630 De Moeren',parentid:'wreg.244',show:'true',sort:'1118'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1134',label:'8630 Eggewaartskapelle (Veurne)',labelnl:'8630 Eggewaartskapelle (Veurne)',labelfr:'8630 Eggewaartskapelle',labelen:'8630 Eggewaartskapelle',labelde:'8630 Eggewaartskapelle',parentid:'wreg.244',show:'true',sort:'1119'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1135',label:'8630 Houtem (Veurne)',labelnl:'8630 Houtem (Veurne)',labelfr:'8630 Houthem',labelen:'8630 Houtem',labelde:'8630 Houtem',parentid:'wreg.244',show:'true',sort:'1120'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1136',label:'8630 Steenkerke (Veurne)',labelnl:'8630 Steenkerke (Veurne)',labelfr:'8630 Steenkerke',labelen:'8630 Steenkerke',labelde:'8630 Steenkerke',parentid:'wreg.244',show:'true',sort:'1121'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1137',label:'8630 Vinkem (Veurne)',labelnl:'8630 Vinkem (Veurne)',labelfr:'8630 Vinkem',labelen:'8630 Vinkem',labelde:'8630 Vinkem',parentid:'wreg.244',show:'true',sort:'1122'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1138',label:'8630 Wulveringem (Veurne)',labelnl:'8630 Wulveringem (Veurne)',labelfr:'8630 Wulveringem',labelen:'8630 Wulveringem',labelde:'8630 Wulveringem',parentid:'wreg.244',show:'true',sort:'1123'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1139',label:'8630 Zoutenaaie (Veurne)',labelnl:'8630 Zoutenaaie (Veurne)',labelfr:'8630 Zoutenaaie',labelen:'8630 Zoutenaaie',labelde:'8630 Zoutenaaie',parentid:'wreg.244',show:'true',sort:'1124'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1140',label:'8640 Vleteren',labelnl:'8640 Vleteren',labelfr:'8640 Vleteren',labelen:'8640 Vleteren',labelde:'8640 Vleteren',parentid:'wreg.245',show:'true',sort:'1125'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1141',label:'8640 Oostvleteren (Vleteren)',labelnl:'8640 Oostvleteren (Vleteren)',labelfr:'8640 Oostvleteren',labelen:'8640 Oostvleteren',labelde:'8640 Oostvleteren',parentid:'wreg.245',show:'true',sort:'1126'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1142',label:'8640 Westvleteren (Vleteren)',labelnl:'8640 Westvleteren (Vleteren)',labelfr:'8640 Westvleteren',labelen:'8640 Westvleteren',labelde:'8640 Westvleteren',parentid:'wreg.245',show:'true',sort:'1127'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1143',label:'8640 Woesten (Vleteren)',labelnl:'8640 Woesten (Vleteren)',labelfr:'8640 Woesten',labelen:'8640 Woesten',labelde:'8640 Woesten',parentid:'wreg.245',show:'true',sort:'1128'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1144',label:'8647 Lo-Reninge',labelnl:'8647 Lo-Reninge',labelfr:'8647 Lo-Reninge',labelen:'8647 Lo-Reninge',labelde:'8647 Lo-Reninge',parentid:'wreg.246',show:'true',sort:'1129'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1145',label:'8647 Lo (Lo-Reninge)',labelnl:'8647 Lo (Lo-Reninge)',labelfr:'8647 Lo',labelen:'8647 Lo',labelde:'8647 Lo',parentid:'wreg.246',show:'true',sort:'1130'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1146',label:'8647 Noordschote (Lo-Reninge)',labelnl:'8647 Noordschote (Lo-Reninge)',labelfr:'8647 Noordschote',labelen:'8647 Noordschote',labelde:'8647 Noordschote',parentid:'wreg.246',show:'true',sort:'1131'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1147',label:'8647 Pollinkhove (Lo-Reninge)',labelnl:'8647 Pollinkhove (Lo-Reninge)',labelfr:'8647 Pollinkhove',labelen:'8647 Pollinkhove',labelde:'8647 Pollinkhove',parentid:'wreg.246',show:'true',sort:'1132'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1148',label:'8647 Reninge (Lo-Reninge)',labelnl:'8647 Reninge (Lo-Reninge)',labelfr:'8647 Reninge',labelen:'8647 Reninge',labelde:'8647 Reninge',parentid:'wreg.246',show:'true',sort:'1133'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1149',label:'8650 Houthulst',labelnl:'8650 Houthulst',labelfr:'8650 Houthulst',labelen:'8650 Houthulst',labelde:'8650 Houthulst',parentid:'wreg.247',show:'true',sort:'1134'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1150',label:'8650 Klerken (Houthulst)',labelnl:'8650 Klerken (Houthulst)',labelfr:'8650 Klerken',labelen:'8650 Klerken',labelde:'8650 Klerken',parentid:'wreg.247',show:'true',sort:'1135'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1151',label:'8650 Merkem (Houthulst)',labelnl:'8650 Merkem (Houthulst)',labelfr:'8650 Merkem',labelen:'8650 Merkem',labelde:'8650 Merkem',parentid:'wreg.247',show:'true',sort:'1136'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1152',label:'8660 De Panne',labelnl:'8660 De Panne',labelfr:'8660 La Panne',labelen:'8660 De Panne',labelde:'8660 De Panne',parentid:'wreg.248',show:'true',sort:'1137'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1153',label:'8660 Adinkerke (De Panne)',labelnl:'8660 Adinkerke (De Panne)',labelfr:'8660 Adinkerke',labelen:'8660 Adinkerke',labelde:'8660 Adinkerke',parentid:'wreg.248',show:'true',sort:'1138'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1154',label:'8670 Koksijde',labelnl:'8670 Koksijde',labelfr:'8670 Coxyde',labelen:'8670 Koksijde',labelde:'8670 Koksijde',parentid:'wreg.249',show:'true',sort:'1139'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1155',label:'8670 Oostduinkerke (Koksijde)',labelnl:'8670 Oostduinkerke (Koksijde)',labelfr:'8670 Oostduinkerke',labelen:'8670 Oostduinkerke',labelde:'8670 Oostduinkerke',parentid:'wreg.249',show:'true',sort:'1140'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1156',label:'8670 Wulpen (Koksijde)',labelnl:'8670 Wulpen (Koksijde)',labelfr:'8670 Wulpen',labelen:'8670 Wulpen',labelde:'8670 Wulpen',parentid:'wreg.249',show:'true',sort:'1141'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1157',label:'8680 Koekelare',labelnl:'8680 Koekelare',labelfr:'8680 Koekelare',labelen:'8680 Koekelare',labelde:'8680 Koekelare',parentid:'wreg.250',show:'true',sort:'1142'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1158',label:'8680 Bovekerke (Koekelare)',labelnl:'8680 Bovekerke (Koekelare)',labelfr:'8680 Bovekerke',labelen:'8680 Bovekerke',labelde:'8680 Bovekerke',parentid:'wreg.250',show:'true',sort:'1143'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1159',label:'8680 Zande (Koekelare)',labelnl:'8680 Zande (Koekelare)',labelfr:'8680 Zande',labelen:'8680 Zande',labelde:'8680 Zande',parentid:'wreg.250',show:'true',sort:'1144'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1160',label:'8690 Alveringem',labelnl:'8690 Alveringem',labelfr:'8690 Alveringem',labelen:'8690 Alveringem',labelde:'8690 Alveringem',parentid:'wreg.251',show:'true',sort:'1145'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1161',label:'8690 Hoogstade (Alveringem)',labelnl:'8690 Hoogstade (Alveringem)',labelfr:'8690 Hoogstade',labelen:'8690 Hoogstade',labelde:'8690 Hoogstade',parentid:'wreg.251',show:'true',sort:'1146'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1162',label:'8690 Oeren (Alveringem)',labelnl:'8690 Oeren (Alveringem)',labelfr:'8690 Oeren',labelen:'8690 Oeren',labelde:'8690 Oeren',parentid:'wreg.251',show:'true',sort:'1147'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1163',label:'8690 Sint-Rijkers (Alveringem)',labelnl:'8690 Sint-Rijkers (Alveringem)',labelfr:'8690 Sint-Rijkers',labelen:'8690 Sint-Rijkers',labelde:'8690 Sint-Rijkers',parentid:'wreg.251',show:'true',sort:'1148'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1164',label:'8691 Beveren-Aan-Den-Ijzer (Alveringem)',labelnl:'8691 Beveren-Aan-Den-Ijzer (Alveringem)',labelfr:'8691 Beveren',labelen:'8691 Beveren',labelde:'8691 Beveren',parentid:'wreg.251',show:'true',sort:'1149'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1165',label:'8691 Gijverinkhove (Alveringem)',labelnl:'8691 Gijverinkhove (Alveringem)',labelfr:'8691 Gijverinkhove',labelen:'8691 Gijverinkhove',labelde:'8691 Gijverinkhove',parentid:'wreg.251',show:'true',sort:'1150'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1166',label:'8691 Izenberge (Alveringem)',labelnl:'8691 Izenberge (Alveringem)',labelfr:'8691 Izenberge',labelen:'8691 Izenberge',labelde:'8691 Izenberge',parentid:'wreg.251',show:'true',sort:'1151'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1167',label:'8691 Leisele (Alveringem)',labelnl:'8691 Leisele (Alveringem)',labelfr:'8691 Leisele',labelen:'8691 Leisele',labelde:'8691 Leisele',parentid:'wreg.251',show:'true',sort:'1152'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1168',label:'8691 Stavele (Alveringem)',labelnl:'8691 Stavele (Alveringem)',labelfr:'8691 Stavele',labelen:'8691 Stavele',labelde:'8691 Stavele',parentid:'wreg.251',show:'true',sort:'1153'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1169',label:'8700 Tielt',labelnl:'8700 Tielt',labelfr:'8700 Tielt',labelen:'8700 Tielt',labelde:'8700 Tielt',parentid:'wreg.252',show:'true',sort:'1154'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1170',label:'8700 Aarsele (Tielt)',labelnl:'8700 Aarsele (Tielt)',labelfr:'8700 Aarsele',labelen:'8700 Aarsele',labelde:'8700 Aarsele',parentid:'wreg.252',show:'true',sort:'1155'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1171',label:'8700 Kanegem (Tielt)',labelnl:'8700 Kanegem (Tielt)',labelfr:'8700 Kanegem',labelen:'8700 Kanegem',labelde:'8700 Kanegem',parentid:'wreg.252',show:'true',sort:'1156'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1172',label:'8700 Schuiferskapelle (Tielt)',labelnl:'8700 Schuiferskapelle (Tielt)',labelfr:'8700 Schuiferskapelle',labelen:'8700 Schuiferskapelle',labelde:'8700 Schuiferskapelle',parentid:'wreg.252',show:'true',sort:'1157'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1173',label:'8710 Wielsbeke',labelnl:'8710 Wielsbeke',labelfr:'8710 Wielsbeke',labelen:'8710 Wielsbeke',labelde:'8710 Wielsbeke',parentid:'wreg.253',show:'true',sort:'1158'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1174',label:'8710 Ooigem (Wielsbeke)',labelnl:'8710 Ooigem (Wielsbeke)',labelfr:'8710 Ooigem',labelen:'8710 Ooigem',labelde:'8710 Ooigem',parentid:'wreg.253',show:'true',sort:'1159'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1175',label:'8710 Sint-Baafs-Vijve (Wielsbeke)',labelnl:'8710 Sint-Baafs-Vijve (Wielsbeke)',labelfr:'8710 Vive-Saint-Bavon',labelen:'8710 Sint-Baafs-Vijve',labelde:'8710 Sint-Baafs-Vijve',parentid:'wreg.253',show:'true',sort:'1160'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1176',label:'8720 Dentergem',labelnl:'8720 Dentergem',labelfr:'8720 Dentergem',labelen:'8720 Dentergem',labelde:'8720 Dentergem',parentid:'wreg.254',show:'true',sort:'1161'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1177',label:'8720 Markegem (Dentergem)',labelnl:'8720 Markegem (Dentergem)',labelfr:'8720 Markegem',labelen:'8720 Markegem',labelde:'8720 Markegem',parentid:'wreg.254',show:'true',sort:'1162'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1178',label:'8720 Oeselgem (Dentergem)',labelnl:'8720 Oeselgem (Dentergem)',labelfr:'8720 Oeselgem',labelen:'8720 Oeselgem',labelde:'8720 Oeselgem',parentid:'wreg.254',show:'true',sort:'1163'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1179',label:'8720 Wakken (Dentergem)',labelnl:'8720 Wakken (Dentergem)',labelfr:'8720 Wakken',labelen:'8720 Wakken',labelde:'8720 Wakken',parentid:'wreg.254',show:'true',sort:'1164'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1180',label:'8730 Beernem',labelnl:'8730 Beernem',labelfr:'8730 Beernem',labelen:'8730 Beernem',labelde:'8730 Beernem',parentid:'wreg.255',show:'true',sort:'1165'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1181',label:'8730 Oedelem (Beernem)',labelnl:'8730 Oedelem (Beernem)',labelfr:'8730 Oedelem',labelen:'8730 Oedelem',labelde:'8730 Oedelem',parentid:'wreg.255',show:'true',sort:'1166'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1182',label:'8730 Sint-Joris (Beernem)',labelnl:'8730 Sint-Joris (Beernem)',labelfr:'8730 Saint-Georges',labelen:'8730 Sint-Joris',labelde:'8730 Sint-Joris',parentid:'wreg.255',show:'true',sort:'1167'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1183',label:'8740 Pittem',labelnl:'8740 Pittem',labelfr:'8740 Pittem',labelen:'8740 Pittem',labelde:'8740 Pittem',parentid:'wreg.256',show:'true',sort:'1168'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1184',label:'8740 Egem (Pittem)',labelnl:'8740 Egem (Pittem)',labelfr:'8740 Egem',labelen:'8740 Egem',labelde:'8740 Egem',parentid:'wreg.256',show:'true',sort:'1169'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1185',label:'8750 Wingene',labelnl:'8750 Wingene',labelfr:'8750 Wingene',labelen:'8750 Wingene',labelde:'8750 Wingene',parentid:'wreg.257',show:'true',sort:'1170'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1186',label:'8750 Zwevezele (Wingene)',labelnl:'8750 Zwevezele (Wingene)',labelfr:'8750 Zwevezele',labelen:'8750 Zwevezele',labelde:'8750 Zwevezele',parentid:'wreg.257',show:'true',sort:'1171'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1187',label:'8755 Ruiselede',labelnl:'8755 Ruiselede',labelfr:'8755 Ruiselede',labelen:'8755 Ruiselede',labelde:'8755 Ruiselede',parentid:'wreg.258',show:'true',sort:'1172'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1188',label:'8760 Meulebeke',labelnl:'8760 Meulebeke',labelfr:'8760 Meulebeke',labelen:'8760 Meulebeke',labelde:'8760 Meulebeke',parentid:'wreg.259',show:'true',sort:'1173'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1189',label:'8770 Ingelmunster',labelnl:'8770 Ingelmunster',labelfr:'8770 Ingelmunster',labelen:'8770 Ingelmunster',labelde:'8770 Ingelmunster',parentid:'wreg.260',show:'true',sort:'1174'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1190',label:'8780 Oostrozebeke',labelnl:'8780 Oostrozebeke',labelfr:'8780 Oostrozebeke',labelen:'8780 Oostrozebeke',labelde:'8780 Oostrozebeke',parentid:'wreg.261',show:'true',sort:'1175'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1191',label:'8790 Waregem',labelnl:'8790 Waregem',labelfr:'8790 Waregem',labelen:'8790 Waregem',labelde:'8790 Waregem',parentid:'wreg.262',show:'true',sort:'1176'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1192',label:'8791 Beveren-Leie (Waregem)',labelnl:'8791 Beveren-Leie (Waregem)',labelfr:'8791 Beveren',labelen:'8791 Beveren',labelde:'8791 Beveren',parentid:'wreg.262',show:'true',sort:'1177'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1193',label:'8792 Desselgem (Waregem)',labelnl:'8792 Desselgem (Waregem)',labelfr:'8792 Desselgem',labelen:'8792 Desselgem',labelde:'8792 Desselgem',parentid:'wreg.262',show:'true',sort:'1178'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1194',label:'8793 Sint-Eloois-Vijve (Waregem)',labelnl:'8793 Sint-Eloois-Vijve (Waregem)',labelfr:'8793 Vive-Saint-Éloi',labelen:'8793 Sint-Eloois-Vijve',labelde:'8793 Sint-Eloois-Vijve',parentid:'wreg.262',show:'true',sort:'1179'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1195',label:'8800 Roeselare',labelnl:'8800 Roeselare',labelfr:'8800 Roulers',labelen:'8800 Roeselare',labelde:'8800 Roeselare',parentid:'wreg.263',show:'true',sort:'1180'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1196',label:'8800 Beveren (Roeselare)',labelnl:'8800 Beveren (Roeselare)',labelfr:'8800 Beveren',labelen:'8800 Beveren',labelde:'8800 Beveren',parentid:'wreg.263',show:'true',sort:'1181'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1197',label:'8800 Oekene (Roeselare)',labelnl:'8800 Oekene (Roeselare)',labelfr:'8800 Oekene',labelen:'8800 Oekene',labelde:'8800 Oekene',parentid:'wreg.263',show:'true',sort:'1182'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1198',label:'8800 Rumbeke (Roeselare)',labelnl:'8800 Rumbeke (Roeselare)',labelfr:'8800 Rumbeke',labelen:'8800 Rumbeke',labelde:'8800 Rumbeke',parentid:'wreg.263',show:'true',sort:'1183'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1199',label:'8810 Lichtervelde',labelnl:'8810 Lichtervelde',labelfr:'8810 Lichtervelde',labelen:'8810 Lichtervelde',labelde:'8810 Lichtervelde',parentid:'wreg.264',show:'true',sort:'1184'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1200',label:'8820 Torhout',labelnl:'8820 Torhout',labelfr:'8820 Torhout',labelen:'8820 Torhout',labelde:'8820 Torhout',parentid:'wreg.265',show:'true',sort:'1185'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1201',label:'8830 Hooglede',labelnl:'8830 Hooglede',labelfr:'8830 Hooglede',labelen:'8830 Hooglede',labelde:'8830 Hooglede',parentid:'wreg.266',show:'true',sort:'1186'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1202',label:'8830 Gits (Hooglede)',labelnl:'8830 Gits (Hooglede)',labelfr:'8830 Gits',labelen:'8830 Gits',labelde:'8830 Gits',parentid:'wreg.266',show:'true',sort:'1187'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1203',label:'8840 Staden',labelnl:'8840 Staden',labelfr:'8840 Staden',labelen:'8840 Staden',labelde:'8840 Staden',parentid:'wreg.267',show:'true',sort:'1188'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1204',label:'8840 Oostnieuwkerke (Staden)',labelnl:'8840 Oostnieuwkerke (Staden)',labelfr:'8840 Oostnieuwkerke',labelen:'8840 Oostnieuwkerke',labelde:'8840 Oostnieuwkerke',parentid:'wreg.267',show:'true',sort:'1189'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1205',label:'8840 Westrozebeke (Staden)',labelnl:'8840 Westrozebeke (Staden)',labelfr:'8840 Westrozebeke',labelen:'8840 Westrozebeke',labelde:'8840 Westrozebeke',parentid:'wreg.267',show:'true',sort:'1190'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1206',label:'8850 Ardooie',labelnl:'8850 Ardooie',labelfr:'8850 Ardooie',labelen:'8850 Ardooie',labelde:'8850 Ardooie',parentid:'wreg.268',show:'true',sort:'1191'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1207',label:'8851 Koolskamp (Ardooie)',labelnl:'8851 Koolskamp (Ardooie)',labelfr:'8851 Koolskamp',labelen:'8851 Koolskamp',labelde:'8851 Koolskamp',parentid:'wreg.268',show:'true',sort:'1192'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1208',label:'8860 Lendelede',labelnl:'8860 Lendelede',labelfr:'8860 Lendelede',labelen:'8860 Lendelede',labelde:'8860 Lendelede',parentid:'wreg.269',show:'true',sort:'1193'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1209',label:'8870 Izegem',labelnl:'8870 Izegem',labelfr:'8870 Izegem',labelen:'8870 Izegem',labelde:'8870 Izegem',parentid:'wreg.270',show:'true',sort:'1194'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1210',label:'8870 Emelgem (Izegem)',labelnl:'8870 Emelgem (Izegem)',labelfr:'8870 Emelgem',labelen:'8870 Emelgem',labelde:'8870 Emelgem',parentid:'wreg.270',show:'true',sort:'1195'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1211',label:'8870 Kachtem (Izegem)',labelnl:'8870 Kachtem (Izegem)',labelfr:'8870 Kachtem',labelen:'8870 Kachtem',labelde:'8870 Kachtem',parentid:'wreg.270',show:'true',sort:'1196'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1212',label:'8880 Ledegem',labelnl:'8880 Ledegem',labelfr:'8880 Ledegem',labelen:'8880 Ledegem',labelde:'8880 Ledegem',parentid:'wreg.271',show:'true',sort:'1197'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1213',label:'8880 Rollegem-Kapelle (Ledegem)',labelnl:'8880 Rollegem-Kapelle (Ledegem)',labelfr:'8880 Rollegem-Kapelle',labelen:'8880 Rollegem-Kapelle',labelde:'8880 Rollegem-Kapelle',parentid:'wreg.271',show:'true',sort:'1198'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1214',label:'8880 Sint-Eloois-Winkel (Ledegem)',labelnl:'8880 Sint-Eloois-Winkel (Ledegem)',labelfr:'8880 Sint-Eloois-Winkel',labelen:'8880 Sint-Eloois-Winkel',labelde:'8880 Sint-Eloois-Winkel',parentid:'wreg.271',show:'true',sort:'1199'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1215',label:'8890 Moorslede',labelnl:'8890 Moorslede',labelfr:'8890 Moorslede',labelen:'8890 Moorslede',labelde:'8890 Moorslede',parentid:'wreg.272',show:'true',sort:'1200'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1216',label:'8890 Dadizele (Moorslede)',labelnl:'8890 Dadizele (Moorslede)',labelfr:'8890 Dadizele',labelen:'8890 Dadizele',labelde:'8890 Dadizele',parentid:'wreg.272',show:'true',sort:'1201'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1217',label:'8900 Ieper',labelnl:'8900 Ieper',labelfr:'8900 Ypres',labelen:'8900 Ypres',labelde:'8900 Ypern',parentid:'wreg.273',show:'true',sort:'1202'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1218',label:'8900 Brielen (Ieper)',labelnl:'8900 Brielen (Ieper)',labelfr:'8900 Brielen',labelen:'8900 Brielen',labelde:'8900 Brielen',parentid:'wreg.273',show:'true',sort:'1203'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1219',label:'8900 Dikkebus (Ieper)',labelnl:'8900 Dikkebus (Ieper)',labelfr:'8900 Dikkebus',labelen:'8900 Dikkebus',labelde:'8900 Dikkebus',parentid:'wreg.273',show:'true',sort:'1204'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1220',label:'8900 Sint-Jan (Ieper)',labelnl:'8900 Sint-Jan (Ieper)',labelfr:'8900 Sint-Jan',labelen:'8900 Sint-Jan',labelde:'8900 Sint-Jan',parentid:'wreg.273',show:'true',sort:'1205'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1221',label:'8902 Hollebeke (Ieper)',labelnl:'8902 Hollebeke (Ieper)',labelfr:'8902 Hollebeke',labelen:'8902 Hollebeke',labelde:'8902 Hollebeke',parentid:'wreg.273',show:'true',sort:'1206'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1222',label:'8902 Voormezele (Ieper)',labelnl:'8902 Voormezele (Ieper)',labelfr:'8902 Voormezele',labelen:'8902 Voormezele',labelde:'8902 Voormezele',parentid:'wreg.273',show:'true',sort:'1207'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1223',label:'8902 Zillebeke (Ieper)',labelnl:'8902 Zillebeke (Ieper)',labelfr:'8902 Zillebeke',labelen:'8902 Zillebeke',labelde:'8902 Zillebeke',parentid:'wreg.273',show:'true',sort:'1208'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1224',label:'8904 Boezinge (Ieper)',labelnl:'8904 Boezinge (Ieper)',labelfr:'8904 Boezinge',labelen:'8904 Boezinge',labelde:'8904 Boezinge',parentid:'wreg.273',show:'true',sort:'1209'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1225',label:'8904 Zuidschote (Ieper)',labelnl:'8904 Zuidschote (Ieper)',labelfr:'8904 Zuidschote',labelen:'8904 Zuidschote',labelde:'8904 Zuidschote',parentid:'wreg.273',show:'true',sort:'1210'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1226',label:'8906 Elverdinge (Ieper)',labelnl:'8906 Elverdinge (Ieper)',labelfr:'8906 Elverdinge',labelen:'8906 Elverdinge',labelde:'8906 Elverdinge',parentid:'wreg.273',show:'true',sort:'1211'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1227',label:'8908 Vlamertinge (Ieper)',labelnl:'8908 Vlamertinge (Ieper)',labelfr:'8908 Vlamertinge',labelen:'8908 Vlamertinge',labelde:'8908 Vlamertinge',parentid:'wreg.273',show:'true',sort:'1212'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1228',label:'8920 Langemark-Poelkapelle',labelnl:'8920 Langemark-Poelkapelle',labelfr:'8920 Langemark-Poelkapelle',labelen:'8920 Langemark-Poelkapelle',labelde:'8920 Langemark-Poelkapelle',parentid:'wreg.274',show:'true',sort:'1213'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1229',label:'8920 Bikschote (Langemark-Poelkapelle)',labelnl:'8920 Bikschote (Langemark-Poelkapelle)',labelfr:'8920 Bikschote',labelen:'8920 Bikschote',labelde:'8920 Bikschote',parentid:'wreg.274',show:'true',sort:'1214'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1230',label:'8920 Langemark (Langemark-Poelkapelle)',labelnl:'8920 Langemark (Langemark-Poelkapelle)',labelfr:'8920 Langemark',labelen:'8920 Langemark',labelde:'8920 Langemark',parentid:'wreg.274',show:'true',sort:'1215'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1231',label:'8920 Poelkapelle (Langemark-Poelkapelle)',labelnl:'8920 Poelkapelle (Langemark-Poelkapelle)',labelfr:'8920 Poelkapelle',labelen:'8920 Poelkapelle',labelde:'8920 Poelkapelle',parentid:'wreg.274',show:'true',sort:'1216'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1232',label:'8930 Menen',labelnl:'8930 Menen',labelfr:'8930 Menin',labelen:'8930 Menen',labelde:'8930 Menen',parentid:'wreg.275',show:'true',sort:'1217'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1233',label:'8930 Lauwe (Menen)',labelnl:'8930 Lauwe (Menen)',labelfr:'8930 Lauwe',labelen:'8930 Lauwe',labelde:'8930 Lauwe',parentid:'wreg.275',show:'true',sort:'1218'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1234',label:'8930 Rekkem (Menen)',labelnl:'8930 Rekkem (Menen)',labelfr:'8930 Rekkem',labelen:'8930 Rekkem',labelde:'8930 Rekkem',parentid:'wreg.275',show:'true',sort:'1219'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1235',label:'8940 Wervik',labelnl:'8940 Wervik',labelfr:'8940 Wervik',labelen:'8940 Wervik',labelde:'8940 Wervik',parentid:'wreg.276',show:'true',sort:'1220'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1236',label:'8940 Geluwe (Wervik)',labelnl:'8940 Geluwe (Wervik)',labelfr:'8940 Geluwe',labelen:'8940 Geluwe',labelde:'8940 Geluwe',parentid:'wreg.276',show:'true',sort:'1221'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1237',label:'8950 Heuvelland',labelnl:'8950 Heuvelland',labelfr:'8950 Heuvelland',labelen:'8950 Heuvelland',labelde:'8950 Heuvelland',parentid:'wreg.277',show:'true',sort:'1222'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1238',label:'8950 Nieuwkerke (Heuvelland)',labelnl:'8950 Nieuwkerke (Heuvelland)',labelfr:'8950 Neuve-Église',labelen:'8950 Nieuwkerke',labelde:'8950 Nieuwkerke',parentid:'wreg.277',show:'true',sort:'1223'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1239',label:'8951 Dranouter (Heuvelland)',labelnl:'8951 Dranouter (Heuvelland)',labelfr:'8951 Dranoutre',labelen:'8951 Dranouter',labelde:'8951 Dranouter',parentid:'wreg.277',show:'true',sort:'1224'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1240',label:'8952 Wulvergem (Heuvelland)',labelnl:'8952 Wulvergem (Heuvelland)',labelfr:'8952 Wulvergem',labelen:'8952 Wulvergem',labelde:'8952 Wulvergem',parentid:'wreg.277',show:'true',sort:'1225'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1241',label:'8953 Wijtschate (Heuvelland)',labelnl:'8953 Wijtschate (Heuvelland)',labelfr:'8953 Wijtschate',labelen:'8953 Wijtschate',labelde:'8953 Wijtschate',parentid:'wreg.277',show:'true',sort:'1226'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1242',label:'8954 Westouter (Heuvelland)',labelnl:'8954 Westouter (Heuvelland)',labelfr:'8954 Westoutre',labelen:'8954 Westouter',labelde:'8954 Westouter',parentid:'wreg.277',show:'true',sort:'1227'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1243',label:'8956 Kemmel (Heuvelland)',labelnl:'8956 Kemmel (Heuvelland)',labelfr:'8956 Kemmel',labelen:'8956 Kemmel',labelde:'8956 Kemmel',parentid:'wreg.277',show:'true',sort:'1228'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1244',label:'8958 Loker (Heuvelland)',labelnl:'8958 Loker (Heuvelland)',labelfr:'8958 Locre',labelen:'8958 Loker',labelde:'8958 Loker',parentid:'wreg.277',show:'true',sort:'1229'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1245',label:'8957 Mesen',labelnl:'8957 Mesen',labelfr:'8957 Messines',labelen:'8957 Mesen',labelde:'8957 Mesen',parentid:'wreg.278',show:'true',sort:'1230'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1246',label:'8957 Messines',labelnl:'8957 Messines',labelfr:'8957 Messines',labelen:'8957 Mesen',labelde:'8957 Mesen',parentid:'wreg.279',show:'true',sort:'1231'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1247',label:'8970 Poperinge',labelnl:'8970 Poperinge',labelfr:'8970 Poperinghe',labelen:'8970 Poperinge',labelde:'8970 Poperinge',parentid:'wreg.280',show:'true',sort:'1232'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1248',label:'8970 Reningelst (Poperinge)',labelnl:'8970 Reningelst (Poperinge)',labelfr:'8970 Reningelst',labelen:'8970 Reningelst',labelde:'8970 Reningelst',parentid:'wreg.280',show:'true',sort:'1233'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1249',label:'8972 Krombeke (Poperinge)',labelnl:'8972 Krombeke (Poperinge)',labelfr:'8972 Krombeke',labelen:'8972 Krombeke',labelde:'8972 Krombeke',parentid:'wreg.280',show:'true',sort:'1234'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1250',label:'8972 Proven (Poperinge)',labelnl:'8972 Proven (Poperinge)',labelfr:'8972 Proven',labelen:'8972 Proven',labelde:'8972 Proven',parentid:'wreg.280',show:'true',sort:'1235'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1251',label:'8972 Roesbrugge-Haringe (Poperinge)',labelnl:'8972 Roesbrugge-Haringe (Poperinge)',labelfr:'8972 Roesbrugge-Haringe',labelen:'8972 Roesbrugge-Haringe',labelde:'8972 Roesbrugge-Haringe',parentid:'wreg.280',show:'true',sort:'1236'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1252',label:'8978 Watou (Poperinge)',labelnl:'8978 Watou (Poperinge)',labelfr:'8978 Watou',labelen:'8978 Watou',labelde:'8978 Watou',parentid:'wreg.280',show:'true',sort:'1237'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1253',label:'8980 Zonnebeke',labelnl:'8980 Zonnebeke',labelfr:'8980 Zonnebeke',labelen:'8980 Zonnebeke',labelde:'8980 Zonnebeke',parentid:'wreg.281',show:'true',sort:'1238'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1254',label:'8980 Beselare (Zonnebeke)',labelnl:'8980 Beselare (Zonnebeke)',labelfr:'8980 Beselare',labelen:'8980 Beselare',labelde:'8980 Beselare',parentid:'wreg.281',show:'true',sort:'1239'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1255',label:'8980 Geluveld (Zonnebeke)',labelnl:'8980 Geluveld (Zonnebeke)',labelfr:'8980 Geluveld',labelen:'8980 Geluveld',labelde:'8980 Geluveld',parentid:'wreg.281',show:'true',sort:'1240'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1256',label:'8980 Passendale (Zonnebeke)',labelnl:'8980 Passendale (Zonnebeke)',labelfr:'8980 Passendale',labelen:'8980 Passendale',labelde:'8980 Passendale',parentid:'wreg.281',show:'true',sort:'1241'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1257',label:'8980 Zandvoorde (Zonnebeke)',labelnl:'8980 Zandvoorde (Zonnebeke)',labelfr:'8980 Zandvoorde',labelen:'8980 Zandvoorde',labelde:'8980 Zandvoorde',parentid:'wreg.281',show:'true',sort:'1242'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1258',label:'9000 Gent',labelnl:'9000 Gent',labelfr:'9000 Gand',labelen:'9000 Ghent',labelde:'9000 Gent',parentid:'wreg.282',show:'true',sort:'1243'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1259',label:'9030 Mariakerke (Gent)',labelnl:'9030 Mariakerke (Gent)',labelfr:'9030 Mariakerke',labelen:'9030 Mariakerke',labelde:'9030 Mariakerke',parentid:'wreg.282',show:'true',sort:'1244'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1260',label:'9031 Drongen (Gent)',labelnl:'9031 Drongen (Gent)',labelfr:'9031 Tronchiennes',labelen:'9031 Drongen',labelde:'9031 Drongen',parentid:'wreg.282',show:'true',sort:'1245'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1261',label:'9032 Wondelgem (Gent)',labelnl:'9032 Wondelgem (Gent)',labelfr:'9032 Wondelgem',labelen:'9032 Wondelgem',labelde:'9032 Wondelgem',parentid:'wreg.282',show:'true',sort:'1246'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1262',label:'9040 Sint-Amandsberg (Gent)',labelnl:'9040 Sint-Amandsberg (Gent)',labelfr:'9040 Sint-Amandsberg',labelen:'9040 Sint-Amandsberg',labelde:'9040 Sint-Amandsberg',parentid:'wreg.282',show:'true',sort:'1247'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1263',label:'9041 Oostakker (Gent)',labelnl:'9041 Oostakker (Gent)',labelfr:'9041 Oostakker',labelen:'9041 Oostakker',labelde:'9041 Oostakker',parentid:'wreg.282',show:'true',sort:'1248'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1264',label:'9042 Desteldonk (Gent)',labelnl:'9042 Desteldonk (Gent)',labelfr:'9042 Desteldonk',labelen:'9042 Desteldonk',labelde:'9042 Desteldonk',parentid:'wreg.282',show:'true',sort:'1249'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1265',label:'9042 Mendonk (Gent)',labelnl:'9042 Mendonk (Gent)',labelfr:'9042 Mendonk',labelen:'9042 Mendonk',labelde:'9042 Mendonk',parentid:'wreg.282',show:'true',sort:'1250'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1266',label:'9042 Sint-Kruis-Winkel (Gent)',labelnl:'9042 Sint-Kruis-Winkel (Gent)',labelfr:'9042 Winkel-Sainte-Croix',labelen:'9042 Sint-Kruis-Winkel',labelde:'9042 Sint-Kruis-Winkel',parentid:'wreg.282',show:'true',sort:'1251'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1267',label:'9050 Gentbrugge (Gent)',labelnl:'9050 Gentbrugge (Gent)',labelfr:'9050 Gentbrugge',labelen:'9050 Gentbrugge',labelde:'9050 Gentbrugge',parentid:'wreg.282',show:'true',sort:'1252'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1268',label:'9050 Ledeberg (Gent)',labelnl:'9050 Ledeberg (Gent)',labelfr:'9050 Ledeberg',labelen:'9050 Ledeberg',labelde:'9050 Ledeberg',parentid:'wreg.282',show:'true',sort:'1253'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1269',label:'9051 Afsnee (Gent)',labelnl:'9051 Afsnee (Gent)',labelfr:'9051 Afsnee',labelen:'9051 Afsnee',labelde:'9051 Afsnee',parentid:'wreg.282',show:'true',sort:'1254'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1270',label:'9051 Sint-Denijs-Westrem (Gent)',labelnl:'9051 Sint-Denijs-Westrem (Gent)',labelfr:'9051 Saint-Denis-Westrem',labelen:'9051 Sint-Denijs-Westrem',labelde:'9051 Sint-Denijs-Westrem',parentid:'wreg.282',show:'true',sort:'1255'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1271',label:'9052 Zwijnaarde (Gent)',labelnl:'9052 Zwijnaarde (Gent)',labelfr:'9052 Zwijnaarde',labelen:'9052 Zwijnaarde',labelde:'9052 Zwijnaarde',parentid:'wreg.282',show:'true',sort:'1256'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1272',label:'9060 Zelzate',labelnl:'9060 Zelzate',labelfr:'9060 Zelzate',labelen:'9060 Zelzate',labelde:'9060 Zelzate',parentid:'wreg.283',show:'true',sort:'1257'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1273',label:'9070 Destelbergen',labelnl:'9070 Destelbergen',labelfr:'9070 Destelbergen',labelen:'9070 Destelbergen',labelde:'9070 Destelbergen',parentid:'wreg.284',show:'true',sort:'1258'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1274',label:'9070 Heusden (Destelbergen)',labelnl:'9070 Heusden (Destelbergen)',labelfr:'9070 Heusden',labelen:'9070 Heusden',labelde:'9070 Heusden',parentid:'wreg.284',show:'true',sort:'1259'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1275',label:'9080 Lochristi',labelnl:'9080 Lochristi',labelfr:'9080 Lochristi',labelen:'9080 Lochristi',labelde:'9080 Lochristi',parentid:'wreg.285',show:'true',sort:'1260'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1276',label:'9080 Beervelde (Lochristi)',labelnl:'9080 Beervelde (Lochristi)',labelfr:'9080 Beervelde',labelen:'9080 Beervelde',labelde:'9080 Beervelde',parentid:'wreg.285',show:'true',sort:'1261'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1277',label:'9080 Zaffelare (Lochristi)',labelnl:'9080 Zaffelare (Lochristi)',labelfr:'9080 Zaffelare',labelen:'9080 Zaffelare',labelde:'9080 Zaffelare',parentid:'wreg.285',show:'true',sort:'1262'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1278',label:'9080 Zeveneken (Lochristi)',labelnl:'9080 Zeveneken (Lochristi)',labelfr:'9080 Zeveneken',labelen:'9080 Zeveneken',labelde:'9080 Zeveneken',parentid:'wreg.285',show:'true',sort:'1263'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1279',label:'9090 Melle',labelnl:'9090 Melle',labelfr:'9090 Melle',labelen:'9090 Melle',labelde:'9090 Melle',parentid:'wreg.286',show:'true',sort:'1264'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1280',label:'9090 Gontrode (Melle)',labelnl:'9090 Gontrode (Melle)',labelfr:'9090 Gontrode',labelen:'9090 Gontrode',labelde:'9090 Gontrode',parentid:'wreg.286',show:'true',sort:'1265'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1281',label:'9100 Sint-Niklaas',labelnl:'9100 Sint-Niklaas',labelfr:'9100 Saint-Nicolas',labelen:'9100 Sint-Niklaas',labelde:'9100 Sint-Niklaas',parentid:'wreg.287',show:'true',sort:'1266'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1282',label:'9100 Nieuwkerken-Waas (Sint-Niklaas)',labelnl:'9100 Nieuwkerken-Waas (Sint-Niklaas)',labelfr:'9100 Nieuwkerken-Waas',labelen:'9100 Niewkerken-Waas',labelde:'9100 Nieuwkerken-Waas',parentid:'wreg.287',show:'true',sort:'1267'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1283',label:'9111 Belsele (Sint-Niklaas)',labelnl:'9111 Belsele (Sint-Niklaas)',labelfr:'9111 Belsele',labelen:'9111 Belsele',labelde:'9111 Belsele',parentid:'wreg.287',show:'true',sort:'1268'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1284',label:'9112 Sinaai-Waas (Sint-Niklaas)',labelnl:'9112 Sinaai-Waas (Sint-Niklaas)',labelfr:'9112 Sinaai-Waas',labelen:'9112 Sinaai-Waas',labelde:'9112 Sinaai-Waas',parentid:'wreg.287',show:'true',sort:'1269'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1285',label:'9120 Beveren-Waas',labelnl:'9120 Beveren-Waas',labelfr:'9120 Beveren',labelen:'9120 Beveren',labelde:'9120 Beveren',parentid:'wreg.288',show:'true',sort:'1270'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1286',label:'9120 Haasdonk (Beveren)',labelnl:'9120 Haasdonk (Beveren)',labelfr:'9120 Haasdonk',labelen:'9120 Haasdonk',labelde:'9120 Haasdonk',parentid:'wreg.288',show:'true',sort:'1271'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1287',label:'9120 Kallo (Beveren-Waas)',labelnl:'9120 Kallo (Beveren-Waas)',labelfr:'9120 Kallo',labelen:'9120 Kallo',labelde:'9120 Kallo',parentid:'wreg.288',show:'true',sort:'1272'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1288',label:'9120 Melsele (Beveren)',labelnl:'9120 Melsele (Beveren)',labelfr:'9120 Melsele',labelen:'9120 Melsele',labelde:'9120 Melsele',parentid:'wreg.288',show:'true',sort:'1273'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1289',label:'9120 Vrasene (Beveren)',labelnl:'9120 Vrasene (Beveren)',labelfr:'9120 Vrasene',labelen:'9120 Vrasene',labelde:'9120 Vrasene',parentid:'wreg.288',show:'true',sort:'1274'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1290',label:'9130 Doel (Beveren)',labelnl:'9130 Doel (Beveren)',labelfr:'9130 Doel',labelen:'9130 Doel',labelde:'9130 Doel',parentid:'wreg.288',show:'true',sort:'1275'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1291',label:'9130 Kallo (Kieldrecht - Beveren-Waas)',labelnl:'9130 Kallo (Kieldrecht - Beveren-Waas)',labelfr:'9130 Kallo',labelen:'9130 Kallo',labelde:'9130 Kallo',parentid:'wreg.288',show:'true',sort:'1276'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1292',label:'9130 Kieldrecht (Beveren)',labelnl:'9130 Kieldrecht (Beveren)',labelfr:'9130 Kieldrecht',labelen:'9130 Kieldrecht',labelde:'9130 Kieldrecht',parentid:'wreg.288',show:'true',sort:'1277'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1293',label:'9130 Verrebroek (Beveren)',labelnl:'9130 Verrebroek (Beveren)',labelfr:'9130 Verrebroek',labelen:'9130 Verrebroek',labelde:'9130 Verrebroek',parentid:'wreg.288',show:'true',sort:'1278'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1294',label:'9140 Temse',labelnl:'9140 Temse',labelfr:'9140 Tamise',labelen:'9140 Temse',labelde:'9140 Temse',parentid:'wreg.289',show:'true',sort:'1279'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1295',label:'9140 Elversele (Temse)',labelnl:'9140 Elversele (Temse)',labelfr:'9140 Elversele',labelen:'9140 Elversele',labelde:'9140 Elversele',parentid:'wreg.289',show:'true',sort:'1280'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1296',label:'9140 Steendorp (Temse)',labelnl:'9140 Steendorp (Temse)',labelfr:'9140 Steendorp',labelen:'9140 Steendorp',labelde:'9140 Steendorp',parentid:'wreg.289',show:'true',sort:'1281'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1297',label:'9140 Tielrode (Temse)',labelnl:'9140 Tielrode (Temse)',labelfr:'9140 Tielrdoe',labelen:'9140 Tielrode',labelde:'9140 Tielrode',parentid:'wreg.289',show:'true',sort:'1282'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1298',label:'9150 Kruibeke',labelnl:'9150 Kruibeke',labelfr:'9150 Kruibeke',labelen:'9150 Kruibeke',labelde:'9150 Kruibeke',parentid:'wreg.290',show:'true',sort:'1283'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1299',label:'9150 Bazel (Kruibeke)',labelnl:'9150 Bazel (Kruibeke)',labelfr:'9150 Bazel',labelen:'9150 Bazel',labelde:'9150 Bazel',parentid:'wreg.290',show:'true',sort:'1284'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1300',label:'9150 Rupelmonde (Kruibeke)',labelnl:'9150 Rupelmonde (Kruibeke)',labelfr:'9150 Rupelmonde',labelen:'9150 Rupelmonde',labelde:'9150 Rupelmonde',parentid:'wreg.290',show:'true',sort:'1285'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1301',label:'9160 Lokeren',labelnl:'9160 Lokeren',labelfr:'9160 Lokeren',labelen:'9160 Lokeren',labelde:'9160 Lokeren',parentid:'wreg.291',show:'true',sort:'1286'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1302',label:'9160 Daknam (Lokeren)',labelnl:'9160 Daknam (Lokeren)',labelfr:'9160 Daknam',labelen:'9160 Daknam',labelde:'9160 Daknam',parentid:'wreg.291',show:'true',sort:'1287'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1303',label:'9160 Eksaarde (Lokeren)',labelnl:'9160 Eksaarde (Lokeren)',labelfr:'9160 Eksaarde',labelen:'9160 Eksaarde',labelde:'9160 Eksaarde',parentid:'wreg.291',show:'true',sort:'1288'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1304',label:'9170 Sint-Gillis-Waas',labelnl:'9170 Sint-Gillis-Waas',labelfr:'9170 Saint-Gilles-Waes',labelen:'9170 Sint-Gillis-Waas',labelde:'9170 Sint-Gillis-Waas',parentid:'wreg.292',show:'true',sort:'1289'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1305',label:'9170 De Klinge (Sint-Gillis-Waas)',labelnl:'9170 De Klinge (Sint-Gillis-Waas)',labelfr:'9170 De Klinge',labelen:'9170 De Klinge',labelde:'9170 De Klinge',parentid:'wreg.292',show:'true',sort:'1290'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1306',label:'9170 Meerdonk (Sint-Gillis-Waas)',labelnl:'9170 Meerdonk (Sint-Gillis-Waas)',labelfr:'9170 Meerdonk',labelen:'9170 Meerdonk',labelde:'9170 Meerdonk',parentid:'wreg.292',show:'true',sort:'1291'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1307',label:'9170 Sint-Pauwels (Sint-Gillis-Waas)',labelnl:'9170 Sint-Pauwels (Sint-Gillis-Waas)',labelfr:'9170 Saint-Paul',labelen:'9170 Sint-Pauwels',labelde:'9170 Sint-Pauwels',parentid:'wreg.292',show:'true',sort:'1292'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1308',label:'9180 Moerbeke-Waas',labelnl:'9180 Moerbeke-Waas',labelfr:'9180 Moerbeke-Waas',labelen:'9180 Moerbeke-Waas',labelde:'9180 Moerbeke-Waas',parentid:'wreg.293',show:'true',sort:'1293'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1309',label:'9185 Wachtebeke',labelnl:'9185 Wachtebeke',labelfr:'9185 Wachtebeke',labelen:'9185 Wachtebeke',labelde:'9185 Wachtebeke',parentid:'wreg.294',show:'true',sort:'1294'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1310',label:'9190 Stekene',labelnl:'9190 Stekene',labelfr:'9190 Stekene',labelen:'9190 Stekene',labelde:'9190 Stekene',parentid:'wreg.295',show:'true',sort:'1295'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1311',label:'9190 Kemzeke (Stekene)',labelnl:'9190 Kemzeke (Stekene)',labelfr:'9190 Kemzeke',labelen:'9190 Kemzeke',labelde:'9190 Kemzeke',parentid:'wreg.295',show:'true',sort:'1296'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1312',label:'9200 Dendermonde',labelnl:'9200 Dendermonde',labelfr:'9200 Termonde',labelen:'9200 Dendermonde',labelde:'9200 Dendermonde',parentid:'wreg.296',show:'true',sort:'1297'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1313',label:'9200 Appels (Dendermonde)',labelnl:'9200 Appels (Dendermonde)',labelfr:'9200 Appels',labelen:'9200 Appels',labelde:'9200 Appels',parentid:'wreg.296',show:'true',sort:'1298'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1314',label:'9200 Baasrode (Dendermonde)',labelnl:'9200 Baasrode (Dendermonde)',labelfr:'9200 Baesrode',labelen:'9200 Baasrode',labelde:'9200 Baasrode',parentid:'wreg.296',show:'true',sort:'1299'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1315',label:'9200 Grembergen (Dendermonde)',labelnl:'9200 Grembergen (Dendermonde)',labelfr:'9200 Grembergen',labelen:'9200 Grembergen',labelde:'9200 Grembergen',parentid:'wreg.296',show:'true',sort:'1300'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1316',label:'9200 Mespelare (Dendermonde)',labelnl:'9200 Mespelare (Dendermonde)',labelfr:'9200 Mespelare',labelen:'9200 Mespelare',labelde:'9200 Mespelare',parentid:'wreg.296',show:'true',sort:'1301'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1317',label:'9200 Oudegem (Dendermonde)',labelnl:'9200 Oudegem (Dendermonde)',labelfr:'9200 Audeghem',labelen:'9200 Oudegem',labelde:'9200 Oudegem',parentid:'wreg.296',show:'true',sort:'1302'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1318',label:'9200 Schoonaarde (Dendermonde)',labelnl:'9200 Schoonaarde (Dendermonde)',labelfr:'9200 Schoonaarde',labelen:'9200 Schoonaarde',labelde:'9200 Schoonaarde',parentid:'wreg.296',show:'true',sort:'1303'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1319',label:'9200 Sint-Gillis-Bij-Dendermonde (Dendermonde)',labelnl:'9200 Sint-Gillis-Bij-Dendermonde (Dendermonde)',labelfr:'9200 Sint-Gillis-bij-Dendermonde',labelen:'9200 Sint-Gillis-bij-Dendermonde',labelde:'9200 Sint-Gillis-bij-Dendermonde',parentid:'wreg.296',show:'true',sort:'1304'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1320',label:'9220 Hamme',labelnl:'9220 Hamme',labelfr:'9220 Hamme',labelen:'9220 Hamme',labelde:'9220 Hamme',parentid:'wreg.297',show:'true',sort:'1305'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1321',label:'9220 Moerzeke (Hamme)',labelnl:'9220 Moerzeke (Hamme)',labelfr:'9220 Moerzeke',labelen:'9220 Moerzeke',labelde:'9220 Moerzeke',parentid:'wreg.297',show:'true',sort:'1306'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1322',label:'9230 Wetteren',labelnl:'9230 Wetteren',labelfr:'9230 Wetteren',labelen:'9230 Wetteren',labelde:'9230 Wetteren',parentid:'wreg.298',show:'true',sort:'1307'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1323',label:'9230 Massemen (Wetteren)',labelnl:'9230 Massemen (Wetteren)',labelfr:'9230 Massemen',labelen:'9230 Massemen',labelde:'9230 Massemen',parentid:'wreg.298',show:'true',sort:'1308'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1324',label:'9230 Westrem (Wetteren)',labelnl:'9230 Westrem (Wetteren)',labelfr:'9230 Westrem',labelen:'9230 Westrem',labelde:'9230 Westrem',parentid:'wreg.298',show:'true',sort:'1309'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1325',label:'9240 Zele',labelnl:'9240 Zele',labelfr:'9240 Zele',labelen:'9240 Zele',labelde:'9240 Zele',parentid:'wreg.299',show:'true',sort:'1310'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1326',label:'9250 Waasmunster',labelnl:'9250 Waasmunster',labelfr:'9250 Waasmunster',labelen:'9250 Waasmunster',labelde:'9250 Waasmunster',parentid:'wreg.300',show:'true',sort:'1311'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1327',label:'9255 Buggenhout',labelnl:'9255 Buggenhout',labelfr:'9255 Buggenhout',labelen:'9255 Buggenhout',labelde:'9255 Buggenhout',parentid:'wreg.301',show:'true',sort:'1312'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1328',label:'9255 Opdorp (Buggenhout)',labelnl:'9255 Opdorp (Buggenhout)',labelfr:'9255 Opdorp',labelen:'9255 Opdorp',labelde:'9255 Opdorp',parentid:'wreg.301',show:'true',sort:'1313'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1329',label:'9260 Wichelen',labelnl:'9260 Wichelen',labelfr:'9260 Wichelen',labelen:'9260 Wichelen',labelde:'9260 Wichelen',parentid:'wreg.302',show:'true',sort:'1314'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1330',label:'9260 Schellebelle (Wichelen)',labelnl:'9260 Schellebelle (Wichelen)',labelfr:'9260 Schellebelle',labelen:'9260 Schellebelle',labelde:'9260 Schellebelle',parentid:'wreg.302',show:'true',sort:'1315'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1331',label:'9260 Serskamp (Wichelen)',labelnl:'9260 Serskamp (Wichelen)',labelfr:'9260 Serskamp',labelen:'9260 Serskamp',labelde:'9260 Serskamp',parentid:'wreg.302',show:'true',sort:'1316'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1332',label:'9270 Laarne',labelnl:'9270 Laarne',labelfr:'9270 Laarne',labelen:'9270 Laarne',labelde:'9270 Laarne',parentid:'wreg.303',show:'true',sort:'1317'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1333',label:'9270 Kalken (Laarne)',labelnl:'9270 Kalken (Laarne)',labelfr:'9270 Kalken',labelen:'9270 Kalken',labelde:'9270 Kalken',parentid:'wreg.303',show:'true',sort:'1318'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1334',label:'9280 Lebbeke',labelnl:'9280 Lebbeke',labelfr:'9280 Lebbeke',labelen:'9280 Lebbeke',labelde:'9280 Lebbeke',parentid:'wreg.304',show:'true',sort:'1319'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1335',label:'9280 Denderbelle (Lebbeke)',labelnl:'9280 Denderbelle (Lebbeke)',labelfr:'9280 Denderbelle',labelen:'9280 Denderbelle',labelde:'9280 Denderbelle',parentid:'wreg.304',show:'true',sort:'1320'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1336',label:'9280 Wieze (Lebbeke)',labelnl:'9280 Wieze (Lebbeke)',labelfr:'9280 Wieze',labelen:'9280 Wieze',labelde:'9280 Wieze',parentid:'wreg.304',show:'true',sort:'1321'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1337',label:'9290 Berlare',labelnl:'9290 Berlare',labelfr:'9290 Berlare',labelen:'9290 Berlare',labelde:'9290 Berlare',parentid:'wreg.305',show:'true',sort:'1322'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1338',label:'9290 Overmere (Berlare)',labelnl:'9290 Overmere (Berlare)',labelfr:'9290 Overmere',labelen:'9290 Overmere',labelde:'9290 Overmere',parentid:'wreg.305',show:'true',sort:'1323'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1339',label:'9290 Uitbergen (Berlare)',labelnl:'9290 Uitbergen (Berlare)',labelfr:'9290 Uitbergen',labelen:'9290 Uitbergen',labelde:'9290 Uitbergen',parentid:'wreg.305',show:'true',sort:'1324'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1340',label:'9300 Aalst',labelnl:'9300 Aalst',labelfr:'9300 Alost',labelen:'9300 Aalst',labelde:'9300 Aalst',parentid:'wreg.306',show:'true',sort:'1325'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1341',label:'9308 Gijzegem (Aalst)',labelnl:'9308 Gijzegem (Aalst)',labelfr:'9308 Gijzegem',labelen:'9308 Gijzegem',labelde:'9308 Gijzegem',parentid:'wreg.306',show:'true',sort:'1326'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1342',label:'9308 Hofstade (Aalst)',labelnl:'9308 Hofstade (Aalst)',labelfr:'9308 Hofstade',labelen:'9308 Hofstade',labelde:'9308 Hofstade',parentid:'wreg.306',show:'true',sort:'1327'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1343',label:'9310 Baardegem (Aalst)',labelnl:'9310 Baardegem (Aalst)',labelfr:'9310 Baardegem',labelen:'9310 Baardegem',labelde:'9310 Baardegem',parentid:'wreg.306',show:'true',sort:'1328'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1344',label:'9310 Herdersem (Aalst)',labelnl:'9310 Herdersem (Aalst)',labelfr:'9310 Herdersem',labelen:'9310 Herdersem',labelde:'9310 Herdersem',parentid:'wreg.306',show:'true',sort:'1329'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1345',label:'9310 Meldert (Aalst)',labelnl:'9310 Meldert (Aalst)',labelfr:'9310 Meldert',labelen:'9310 Meldert',labelde:'9310 Meldert',parentid:'wreg.306',show:'true',sort:'1330'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1346',label:'9310 Moorsel (Aalst)',labelnl:'9310 Moorsel (Aalst)',labelfr:'9310 Moorsel',labelen:'9310 Moorsel',labelde:'9310 Moorsel',parentid:'wreg.306',show:'true',sort:'1331'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1347',label:'9320 Erembodegem (Aalst)',labelnl:'9320 Erembodegem (Aalst)',labelfr:'9320 Erembodegem',labelen:'9320 Erembodegem',labelde:'9320 Erembodegem',parentid:'wreg.306',show:'true',sort:'1332'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1348',label:'9320 Nieuwerkerken (Aalst)',labelnl:'9320 Nieuwerkerken (Aalst)',labelfr:'9320 Nieuwerkerken',labelen:'9320 Nieuwerkerken',labelde:'9320 Nieuwerkerken',parentid:'wreg.306',show:'true',sort:'1333'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1349',label:'9340 Lede',labelnl:'9340 Lede',labelfr:'9340 Lede',labelen:'9340 Lede',labelde:'9340 Lede',parentid:'wreg.307',show:'true',sort:'1334'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1350',label:'9340 Impe (Lede)',labelnl:'9340 Impe (Lede)',labelfr:'9340 Impe',labelen:'9340 Impe',labelde:'9340 Impe',parentid:'wreg.307',show:'true',sort:'1335'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1351',label:'9340 Oordegem (Lede)',labelnl:'9340 Oordegem (Lede)',labelfr:'9340 Oordegem',labelen:'9340 Oordegem',labelde:'9340 Oordegem',parentid:'wreg.307',show:'true',sort:'1336'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1352',label:'9340 Smetlede (Lede)',labelnl:'9340 Smetlede (Lede)',labelfr:'9340 Smetlede',labelen:'9340 Smetlede',labelde:'9340 Smetlede',parentid:'wreg.307',show:'true',sort:'1337'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1353',label:'9340 Wanzele (Lede)',labelnl:'9340 Wanzele (Lede)',labelfr:'9340 Wanzele',labelen:'9340 Wanzele',labelde:'9340 Wanzele',parentid:'wreg.307',show:'true',sort:'1338'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1354',label:'9400 Ninove',labelnl:'9400 Ninove',labelfr:'9400 Ninove',labelen:'9400 Ninove',labelde:'9400 Ninove',parentid:'wreg.309',show:'true',sort:'1339'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1355',label:'9400 Appelterre-Eichem (Ninove)',labelnl:'9400 Appelterre-Eichem (Ninove)',labelfr:'9400 Appelterre-Eichem',labelen:'9400 Appelterre-Eichem',labelde:'9400 Appelterre-Eichem',parentid:'wreg.309',show:'true',sort:'1340'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1356',label:'9400 Denderwindeke (Ninove)',labelnl:'9400 Denderwindeke (Ninove)',labelfr:'9400 Denderwindeke',labelen:'9400 Denderwindeke',labelde:'9400 Denderwindeke',parentid:'wreg.309',show:'true',sort:'1341'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1357',label:'9400 Lieferinge (Ninove)',labelnl:'9400 Lieferinge (Ninove)',labelfr:'9400 Lieferinge',labelen:'9400 Lieferinge',labelde:'9400 Lieferinge',parentid:'wreg.309',show:'true',sort:'1342'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1358',label:'9400 Nederhasselt (Ninove)',labelnl:'9400 Nederhasselt (Ninove)',labelfr:'9400 Nederhasselt',labelen:'9400 Nederhasselt',labelde:'9400 Nederhasselt',parentid:'wreg.309',show:'true',sort:'1343'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1359',label:'9400 Okegem (Ninove)',labelnl:'9400 Okegem (Ninove)',labelfr:'9400 Okegem',labelen:'9400 Okegem',labelde:'9400 Okegem',parentid:'wreg.309',show:'true',sort:'1344'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1360',label:'9400 Voorde (Ninove)',labelnl:'9400 Voorde (Ninove)',labelfr:'9400 Voorde',labelen:'9400 Voorde',labelde:'9400 Voorde',parentid:'wreg.309',show:'true',sort:'1345'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1361',label:'9401 Pollare (Ninove)',labelnl:'9401 Pollare (Ninove)',labelfr:'9401 Pollare',labelen:'9401 Pollare',labelde:'9401 Pollare',parentid:'wreg.309',show:'true',sort:'1346'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1362',label:'9402 Meerbeke (Ninove)',labelnl:'9402 Meerbeke (Ninove)',labelfr:'9402 Meerbeke',labelen:'9402 Meerbeke',labelde:'9402 Meerbeke',parentid:'wreg.309',show:'true',sort:'1347'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1363',label:'9403 Neigem (Ninove)',labelnl:'9403 Neigem (Ninove)',labelfr:'9403 Neigem',labelen:'9403 Neigem',labelde:'9403 Neigem',parentid:'wreg.309',show:'true',sort:'1348'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1364',label:'9404 Aspelare (Ninove)',labelnl:'9404 Aspelare (Ninove)',labelfr:'9404 Aspelare',labelen:'9404 Aspelare',labelde:'9404 Aspelare',parentid:'wreg.309',show:'true',sort:'1349'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1365',label:'9406 Outer (Ninove)',labelnl:'9406 Outer (Ninove)',labelfr:'9406 Outer',labelen:'9406 Outer',labelde:'9406 Outer',parentid:'wreg.309',show:'true',sort:'1350'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1366',label:'9420 Erpe-Mere',labelnl:'9420 Erpe-Mere',labelfr:'9420 Erpe-Mere',labelen:'9420 Erpe-Mere',labelde:'9420 Erpe-Mere',parentid:'wreg.310',show:'true',sort:'1351'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1367',label:'9420 Aaigem (Erpe-Mere)',labelnl:'9420 Aaigem (Erpe-Mere)',labelfr:'9420 Aaigem',labelen:'9420 Aaigem',labelde:'9420 Aaigem',parentid:'wreg.310',show:'true',sort:'1352'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1368',label:'9420 Bambrugge (Erpe-Mere)',labelnl:'9420 Bambrugge (Erpe-Mere)',labelfr:'9420 Bambrugge',labelen:'9420 Bambrugge',labelde:'9420 Bambrugge',parentid:'wreg.310',show:'true',sort:'1353'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1369',label:'9420 Burst (Erpe-Mere)',labelnl:'9420 Burst (Erpe-Mere)',labelfr:'9420 Burst',labelen:'9420 Burst',labelde:'9420 Burst',parentid:'wreg.310',show:'true',sort:'1354'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1370',label:'9420 Erondegem (Erpe-Mere)',labelnl:'9420 Erondegem (Erpe-Mere)',labelfr:'9420 Erondegem',labelen:'9420 Erondegem',labelde:'9420 Erondegem',parentid:'wreg.310',show:'true',sort:'1355'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1371',label:'9420 Erpe (Erpe-Mere)',labelnl:'9420 Erpe (Erpe-Mere)',labelfr:'9420 Erpe',labelen:'9420 Erpe',labelde:'9420 Erpe',parentid:'wreg.310',show:'true',sort:'1356'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1372',label:'9420 Mere (Erpe-Mere)',labelnl:'9420 Mere (Erpe-Mere)',labelfr:'9420 Mere',labelen:'9420 Mere',labelde:'9420 Mere',parentid:'wreg.310',show:'true',sort:'1357'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1373',label:'9420 Ottergem (Erpe-Mere)',labelnl:'9420 Ottergem (Erpe-Mere)',labelfr:'9420 Ottergem',labelen:'9420 Ottergem',labelde:'9420 Ottergem',parentid:'wreg.310',show:'true',sort:'1358'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1374',label:'9420 Vlekkem (Erpe-Mere)',labelnl:'9420 Vlekkem (Erpe-Mere)',labelfr:'9420 Vlekkem',labelen:'9420 Vlekkem',labelde:'9420 Vlekkem',parentid:'wreg.310',show:'true',sort:'1359'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1375',label:'9450 Haaltert',labelnl:'9450 Haaltert',labelfr:'9450 Haaltert',labelen:'9450 Haaltert',labelde:'9450 Haaltert',parentid:'wreg.311',show:'true',sort:'1360'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1376',label:'9450 Denderhoutem (Haaltert)',labelnl:'9450 Denderhoutem (Haaltert)',labelfr:'9450 Denderhautem',labelen:'9450 Denderhoutem',labelde:'9450 Denderhoutem',parentid:'wreg.311',show:'true',sort:'1361'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1377',label:'9450 Heldergem (Haaltert)',labelnl:'9450 Heldergem (Haaltert)',labelfr:'9450 Heldergem',labelen:'9450 Heldergem',labelde:'9450 Heldergem',parentid:'wreg.311',show:'true',sort:'1362'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1378',label:'9451 Kerksken (Haaltert)',labelnl:'9451 Kerksken (Haaltert)',labelfr:'9451 Kerksken',labelen:'9451 Kerksken',labelde:'9451 Kerksken',parentid:'wreg.311',show:'true',sort:'1363'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1379',label:'9470 Denderleeuw',labelnl:'9470 Denderleeuw',labelfr:'9470 Denderleeuw',labelen:'9470 Denderleeuw',labelde:'9470 Denderleeuw',parentid:'wreg.312',show:'true',sort:'1364'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1380',label:'9472 Iddergem (Denderleeuw)',labelnl:'9472 Iddergem (Denderleeuw)',labelfr:'9472 Iddergem',labelen:'9472 Iddergem',labelde:'9472 Iddergem',parentid:'wreg.312',show:'true',sort:'1365'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1381',label:'9473 Welle (Denderleeuw)',labelnl:'9473 Welle (Denderleeuw)',labelfr:'9473 Welle',labelen:'9473 Welle',labelde:'9473 Welle',parentid:'wreg.312',show:'true',sort:'1366'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1382',label:'9500 Geraardsbergen',labelnl:'9500 Geraardsbergen',labelfr:'9500 Grammont',labelen:'9500 Geraardsbergen',labelde:'9500 Geraardsbergen',parentid:'wreg.313',show:'true',sort:'1367'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1383',label:'9500 Goeferdinge (Geraardsbergen)',labelnl:'9500 Goeferdinge (Geraardsbergen)',labelfr:'9500 Goeferdinge',labelen:'9500 Goeferdinge',labelde:'9500 Goeferdinge',parentid:'wreg.313',show:'true',sort:'1368'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1384',label:'9500 Moerbeke (Geraardsbergen)',labelnl:'9500 Moerbeke (Geraardsbergen)',labelfr:'9500 Moerbeke',labelen:'9500 Moerbeke',labelde:'9500 Moerbeke',parentid:'wreg.313',show:'true',sort:'1369'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1385',label:'9500 Nederboelare (Geraardsbergen)',labelnl:'9500 Nederboelare (Geraardsbergen)',labelfr:'9500 Nederboelare',labelen:'9500 Nederboelare',labelde:'9500 Nederboelare',parentid:'wreg.313',show:'true',sort:'1370'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1386',label:'9500 Onkerzele (Geraardsbergen)',labelnl:'9500 Onkerzele (Geraardsbergen)',labelfr:'9500 Onkerzele',labelen:'9500 Onkerzele',labelde:'9500 Onkerzele',parentid:'wreg.313',show:'true',sort:'1371'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1387',label:'9500 Ophasselt (Geraardsbergen)',labelnl:'9500 Ophasselt (Geraardsbergen)',labelfr:'9500 Ophasselt',labelen:'9500 Ophasselt',labelde:'9500 Ophasselt',parentid:'wreg.313',show:'true',sort:'1372'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1388',label:'9500 Overboelare (Geraardsbergen)',labelnl:'9500 Overboelare (Geraardsbergen)',labelfr:'9500 Overboelare',labelen:'9500 Overboelare',labelde:'9500 Overboelare',parentid:'wreg.313',show:'true',sort:'1373'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1389',label:'9500 Viane (Geraardsbergen)',labelnl:'9500 Viane (Geraardsbergen)',labelfr:'9500 Viane',labelen:'9500 Viane',labelde:'9500 Viane',parentid:'wreg.313',show:'true',sort:'1374'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1390',label:'9500 Zarlardinge (Geraardsbergen)',labelnl:'9500 Zarlardinge (Geraardsbergen)',labelfr:'9500 Zarlardinge',labelen:'9500 Zarlardinge',labelde:'9500 Zarlardinge',parentid:'wreg.313',show:'true',sort:'1375'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1391',label:'9506 Grimminge (Geraardsbergen)',labelnl:'9506 Grimminge (Geraardsbergen)',labelfr:'9506 Grimminge',labelen:'9506 Grimminge',labelde:'9506 Grimminge',parentid:'wreg.313',show:'true',sort:'1376'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1392',label:'9506 Idegem (Geraardsbergen)',labelnl:'9506 Idegem (Geraardsbergen)',labelfr:'9506 Idegem',labelen:'9506 Idegem',labelde:'9506 Idegem',parentid:'wreg.313',show:'true',sort:'1377'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1393',label:'9506 Nieuwenhove (Geraardsbergen)',labelnl:'9506 Nieuwenhove (Geraardsbergen)',labelfr:'9506 Nieuwenhove',labelen:'9506 Nieuwenhove',labelde:'9506 Nieuwenhove',parentid:'wreg.313',show:'true',sort:'1378'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1394',label:'9506 Schendelbeke (Geraardsbergen)',labelnl:'9506 Schendelbeke (Geraardsbergen)',labelfr:'9506 Schendelbeke',labelen:'9506 Schendelbeke',labelde:'9506 Schendelbeke',parentid:'wreg.313',show:'true',sort:'1379'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1395',label:'9506 Smeerebbe-Vloerzegem (Geraardsbergen)',labelnl:'9506 Smeerebbe-Vloerzegem (Geraardsbergen)',labelfr:'9506 Smeerebbe-Vloerzegem',labelen:'9506 Smeerebbe-Vloerzegem',labelde:'9506 Smeerebbe-Vloerzegem',parentid:'wreg.313',show:'true',sort:'1380'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1396',label:'9506 Waarbeke (Geraardsbergen)',labelnl:'9506 Waarbeke (Geraardsbergen)',labelfr:'9506 Waarbeke',labelen:'9506 Waarbeke',labelde:'9506 Waarbeke',parentid:'wreg.313',show:'true',sort:'1381'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1397',label:'9506 Zandbergen (Geraardsbergen)',labelnl:'9506 Zandbergen (Geraardsbergen)',labelfr:'9506 Zandbergen',labelen:'9506 Zandbergen',labelde:'9506 Zandbergen',parentid:'wreg.313',show:'true',sort:'1382'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1398',label:'9520 Sint-Lievens-Houtem',labelnl:'9520 Sint-Lievens-Houtem',labelfr:'9520 Hautem-Saint-Liévin',labelen:'9520 Sint-Lievens-Houtem',labelde:'9520 Sint-Lievens-Houtem',parentid:'wreg.314',show:'true',sort:'1383'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1399',label:'9520 Bavegem (Sint-Lievens-Houtem)',labelnl:'9520 Bavegem (Sint-Lievens-Houtem)',labelfr:'9520 Bavegem',labelen:'9520 Bavegem',labelde:'9520 Bavegem',parentid:'wreg.314',show:'true',sort:'1384'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1400',label:'9520 Vlierzele (Sint-Lievens-Houtem)',labelnl:'9520 Vlierzele (Sint-Lievens-Houtem)',labelfr:'9520 Vlierzele',labelen:'9520 Vlierzele',labelde:'9520 Vlierzele',parentid:'wreg.314',show:'true',sort:'1385'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1401',label:'9520 Zonnegem (Sint-Lievens-Houtem)',labelnl:'9520 Zonnegem (Sint-Lievens-Houtem)',labelfr:'9520 Zonnegem',labelen:'9520 Zonnegem',labelde:'9520 Zonnegem',parentid:'wreg.314',show:'true',sort:'1386'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1402',label:'9521 Letterhoutem (Sint-Lievens-Houtem)',labelnl:'9521 Letterhoutem (Sint-Lievens-Houtem)',labelfr:'9521 Letterhoutem',labelen:'9521 Letterhoutem',labelde:'9521 Letterhoutem',parentid:'wreg.314',show:'true',sort:'1387'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1403',label:'9550 Herzele',labelnl:'9550 Herzele',labelfr:'9550 Herzele',labelen:'9550 Herzele',labelde:'9550 Herzele',parentid:'wreg.315',show:'true',sort:'1388'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1404',label:'9550 Hillegem (Herzele)',labelnl:'9550 Hillegem (Herzele)',labelfr:'9550 Hillegem',labelen:'9550 Hillegem',labelde:'9550 Hillegem',parentid:'wreg.315',show:'true',sort:'1389'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1405',label:'9550 Sint-Antelinks (Herzele)',labelnl:'9550 Sint-Antelinks (Herzele)',labelfr:'9550 Saint-Antelinx',labelen:'9550 Sint-Antelinks',labelde:'9550 Sint-Antelinks',parentid:'wreg.315',show:'true',sort:'1390'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1406',label:'9550 Sint-Lievens-Esse (Herzele)',labelnl:'9550 Sint-Lievens-Esse (Herzele)',labelfr:'9550 Essche-Saint-Liévin',labelen:'9550 Sint-Lievens-Esse',labelde:'9550 Sint-Lievens-Esse',parentid:'wreg.315',show:'true',sort:'1391'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1407',label:'9550 Steenhuize-Wijnhuize (Herzele)',labelnl:'9550 Steenhuize-Wijnhuize (Herzele)',labelfr:'9550 Steenhuize-Wijnhuize',labelen:'9550 Steenhuize-Wijnhuize',labelde:'9550 Steenhuize-Wijnhuize',parentid:'wreg.315',show:'true',sort:'1392'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1408',label:'9550 Woubrechtegem (Herzele)',labelnl:'9550 Woubrechtegem (Herzele)',labelfr:'9550 Woubrechtegem',labelen:'9550 Woubrechtegem',labelde:'9550 Woubrechtegem',parentid:'wreg.315',show:'true',sort:'1393'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1409',label:'9551 Ressegem (Herzele)',labelnl:'9551 Ressegem (Herzele)',labelfr:'9551 Ressegem',labelen:'9551 Ressegem',labelde:'9551 Ressegem',parentid:'wreg.315',show:'true',sort:'1394'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1410',label:'9552 Borsbeke (Herzele)',labelnl:'9552 Borsbeke (Herzele)',labelfr:'9552 Borsbeke',labelen:'9552 Borsbeke',labelde:'9552 Borsbeke',parentid:'wreg.315',show:'true',sort:'1395'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1411',label:'9570 Lierde',labelnl:'9570 Lierde',labelfr:'9570 Lierde',labelen:'9570 Lierde',labelde:'9570 Lierde',parentid:'wreg.316',show:'true',sort:'1396'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1412',label:'9570 Deftinge (Lierde)',labelnl:'9570 Deftinge (Lierde)',labelfr:'9570 Deftinge',labelen:'9570 Deftinge',labelde:'9570 Deftinge',parentid:'wreg.316',show:'true',sort:'1397'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1413',label:'9570 Sint-Maria-Lierde (Lierde)',labelnl:'9570 Sint-Maria-Lierde (Lierde)',labelfr:'9570 Lierde-Sainte-Marie',labelen:'9570 Sint-Maria-Lierde',labelde:'9570 Sint-Maria-Lierde',parentid:'wreg.316',show:'true',sort:'1398'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1414',label:'9571 Hemelveerdegem (Lierde)',labelnl:'9571 Hemelveerdegem (Lierde)',labelfr:'9571 Hemelveerdegem',labelen:'9571 Hemelveerdegem',labelde:'9571 Hemelveerdegem',parentid:'wreg.316',show:'true',sort:'1399'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1415',label:'9572 Sint-Martens-Lierde (Lierde)',labelnl:'9572 Sint-Martens-Lierde (Lierde)',labelfr:'9572 Lierde-Saint-Martin',labelen:'9572 Sint-Martens-Lierde',labelde:'9572 Sint-Martens-Lierde',parentid:'wreg.316',show:'true',sort:'1400'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1417',label:'9600 Ronse',labelnl:'9600 Ronse',labelfr:'9600 Renaix',labelen:'9600 Ronse',labelde:'9600 Ronse',parentid:'wreg.318',show:'true',sort:'1402'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1418',label:'9620 Zottegem',labelnl:'9620 Zottegem',labelfr:'9620 Zottegem',labelen:'9620 Zottegem',labelde:'9620 Zottegem',parentid:'wreg.319',show:'true',sort:'1403'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1419',label:'9620 Elene (Zottegem)',labelnl:'9620 Elene (Zottegem)',labelfr:'9620 Elene',labelen:'9620 Elene',labelde:'9620 Elene',parentid:'wreg.319',show:'true',sort:'1404'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1420',label:'9620 Erwetegem (Zottegem)',labelnl:'9620 Erwetegem (Zottegem)',labelfr:'9620 Erwetegem',labelen:'9620 Erwetegem',labelde:'9620 Erwetegem',parentid:'wreg.319',show:'true',sort:'1405'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1421',label:'9620 Godveerdegem (Zottegem)',labelnl:'9620 Godveerdegem (Zottegem)',labelfr:'9620 Godveerdegem',labelen:'9620 Godveerdegem',labelde:'9620 Godveerdegem',parentid:'wreg.319',show:'true',sort:'1406'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1422',label:'9620 Grotenberge (Zottegem)',labelnl:'9620 Grotenberge (Zottegem)',labelfr:'9620 Grotenberge',labelen:'9620 Grotenberge',labelde:'9620 Grotenberge',parentid:'wreg.319',show:'true',sort:'1407'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1423',label:'9620 Leeuwergem (Zottegem)',labelnl:'9620 Leeuwergem (Zottegem)',labelfr:'9620 Leeuwergem',labelen:'9620 Leeuwergem',labelde:'9620 Leeuwergem',parentid:'wreg.319',show:'true',sort:'1408'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1424',label:'9620 Oombergen (Zottegem)',labelnl:'9620 Oombergen (Zottegem)',labelfr:'9620 Oombergen',labelen:'9620 Oombergen',labelde:'9620 Oombergen',parentid:'wreg.319',show:'true',sort:'1409'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1425',label:'9620 Sint-Goriks-Oudenhove (Zottegem)',labelnl:'9620 Sint-Goriks-Oudenhove (Zottegem)',labelfr:'9620 Audenhove-Saint-Géry',labelen:'9620 Sint-Goriks-Oudenhove',labelde:'9620 Sint-Goriks-Oudenhove',parentid:'wreg.319',show:'true',sort:'1410'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1426',label:'9620 Sint-Maria-Oudenhove (Zottegem)',labelnl:'9620 Sint-Maria-Oudenhove (Zottegem)',labelfr:'9620 Audenhove-Sainte-Marie',labelen:'9620 Sint-Maria-Oudenhove',labelde:'9620 Sint-Maria-Oudenhove',parentid:'wreg.319',show:'true',sort:'1411'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1427',label:'9620 Strijpen (Zottegem)',labelnl:'9620 Strijpen (Zottegem)',labelfr:'9620 Strijpen',labelen:'9620 Strijpen',labelde:'9620 Strijpen',parentid:'wreg.319',show:'true',sort:'1412'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1428',label:'9620 Velzeke-Ruddershove (Zottegem)',labelnl:'9620 Velzeke-Ruddershove (Zottegem)',labelfr:'9620 Velzeke-Ruddershove',labelen:'9620 Velzeke-Ruddershove',labelde:'9620 Velzeke-Ruddershove',parentid:'wreg.319',show:'true',sort:'1413'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1429',label:'9630 Zwalm',labelnl:'9630 Zwalm',labelfr:'9630 Zwalin',labelen:'9630 Zwalm',labelde:'9630 Zwalm',parentid:'wreg.320',show:'true',sort:'1414'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1430',label:'9630 Beerlegem (Zwalm)',labelnl:'9630 Beerlegem (Zwalm)',labelfr:'9630 Beerlegem',labelen:'9630 Beerlegem',labelde:'9630 Beerlegem',parentid:'wreg.320',show:'true',sort:'1415'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1431',label:'9630 Dikkele (Zwalm)',labelnl:'9630 Dikkele (Zwalm)',labelfr:'9630 Dikkele',labelen:'9630 Dikkele',labelde:'9630 Dikkele',parentid:'wreg.320',show:'true',sort:'1416'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1432',label:'9630 Hundelgem (Zwalm)',labelnl:'9630 Hundelgem (Zwalm)',labelfr:'9630 Hundelgem',labelen:'9630 Hundelgem',labelde:'9630 Hundelgem',parentid:'wreg.320',show:'true',sort:'1417'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1433',label:'9630 Meilegem (Zwalm)',labelnl:'9630 Meilegem (Zwalm)',labelfr:'9630 Meilegem',labelen:'9630 Meilegem',labelde:'9630 Meilegem',parentid:'wreg.320',show:'true',sort:'1418'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1434',label:'9630 Munkzwalm (Zwalm)',labelnl:'9630 Munkzwalm (Zwalm)',labelfr:'9630 Munkzwalm',labelen:'9630 Munkzwalm',labelde:'9630 Munkzwalm',parentid:'wreg.320',show:'true',sort:'1419'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1435',label:'9630 Paulatem (Zwalm)',labelnl:'9630 Paulatem (Zwalm)',labelfr:'9630 Paulaethem',labelen:'9630 Paulatem',labelde:'9630 Paulatem',parentid:'wreg.320',show:'true',sort:'1420'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1436',label:'9630 Roborst (Zwalm)',labelnl:'9630 Roborst (Zwalm)',labelfr:'9630 Roborst',labelen:'9630 Roborst',labelde:'9630 Roborst',parentid:'wreg.320',show:'true',sort:'1421'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1437',label:'9630 Rozebeke (Zwalm)',labelnl:'9630 Rozebeke (Zwalm)',labelfr:'9630 Rozebeke',labelen:'9630 Rozebeke',labelde:'9630 Rozebeke',parentid:'wreg.320',show:'true',sort:'1422'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1438',label:'9630 Sint-Blasius-Boekel (Zwalm)',labelnl:'9630 Sint-Blasius-Boekel (Zwalm)',labelfr:'9630 Boucle-Saint-Blaise',labelen:'9630 Sint-Blasius-Boekel',labelde:'9630 Sint-Blasius-Boekel',parentid:'wreg.320',show:'true',sort:'1423'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1439',label:'9630 Sint-Denijs-Boekel (Zwalm)',labelnl:'9630 Sint-Denijs-Boekel (Zwalm)',labelfr:'9630 Boucle-Saint-Denis',labelen:'9630 Sint-Denijs-Boekel',labelde:'9630 Sint-Denijs-Boekel',parentid:'wreg.320',show:'true',sort:'1424'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1440',label:'9630 Sint-Maria-Latem (Zwalm)',labelnl:'9630 Sint-Maria-Latem (Zwalm)',labelfr:'9630 Laethem-Sainte-Marie',labelen:'9630 Sint-Maria-Latem',labelde:'9630 Sint-Maria-Latem',parentid:'wreg.320',show:'true',sort:'1425'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1441',label:'9636 Nederzwalm-Hermelgem (Zwalm)',labelnl:'9636 Nederzwalm-Hermelgem (Zwalm)',labelfr:'9636 Nederzwalm-Hermelgem',labelen:'9636 Nederzwalm-Hermelgem',labelde:'9636 Nederzwalm-Hermelgem',parentid:'wreg.320',show:'true',sort:'1426'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1442',label:'9660 Brakel',labelnl:'9660 Brakel',labelfr:'9660 Bracle',labelen:'9660 Brakel',labelde:'9660 Brakel',parentid:'wreg.321',show:'true',sort:'1427'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1443',label:'9660 Elst (Brakel)',labelnl:'9660 Elst (Brakel)',labelfr:'9660 Elst',labelen:'9660 Elst',labelde:'9660 Elst',parentid:'wreg.321',show:'true',sort:'1428'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1444',label:'9660 Everbeek (Brakel)',labelnl:'9660 Everbeek (Brakel)',labelfr:'9660 Everbecq',labelen:'9660 Everbeek',labelde:'9660 Everbeek',parentid:'wreg.321',show:'true',sort:'1429'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1445',label:'9660 Michelbeke (Brakel)',labelnl:'9660 Michelbeke (Brakel)',labelfr:'9660 Michelbeke',labelen:'9660 Michelbeke',labelde:'9660 Michelbeke',parentid:'wreg.321',show:'true',sort:'1430'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1446',label:'9660 Nederbrakel (Brakel)',labelnl:'9660 Nederbrakel (Brakel)',labelfr:'9660 Nederbrakel',labelen:'9660 Nederbrakel',labelde:'9660 Nederbrakel',parentid:'wreg.321',show:'true',sort:'1431'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1447',label:'9660 Opbrakel (Brakel)',labelnl:'9660 Opbrakel (Brakel)',labelfr:'9660 Opbrakel',labelen:'9660 Opbrakel',labelde:'9660 Opbrakel',parentid:'wreg.321',show:'true',sort:'1432'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1448',label:'9660 Sint-Maria-Oudenhove (Brakel)',labelnl:'9660 Sint-Maria-Oudenhove (Brakel)',labelfr:'9660 Audenhoven-Sainte-Marie',labelen:'9660 Sint-Maria-Oudenhove',labelde:'9660 Sint-Maria-Oudenhove',parentid:'wreg.321',show:'true',sort:'1433'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1449',label:'9660 Zegelsem (Brakel)',labelnl:'9660 Zegelsem (Brakel)',labelfr:'9660 Zegelsem',labelen:'9660 Zegelsem',labelde:'9660 Zegelsem',parentid:'wreg.321',show:'true',sort:'1434'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1450',label:'9661 Parike (Brakel)',labelnl:'9661 Parike (Brakel)',labelfr:'9661 Parike',labelen:'9661 Parike',labelde:'9661 Parike',parentid:'wreg.321',show:'true',sort:'1435'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1451',label:'9667 Horebeke',labelnl:'9667 Horebeke',labelfr:'9667 Horebeke',labelen:'9667 Horebeke',labelde:'9667 Horebeke',parentid:'wreg.322',show:'true',sort:'1436'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1452',label:'9667 Sint-Kornelis-Horebeke (Horebeke)',labelnl:'9667 Sint-Kornelis-Horebeke (Horebeke)',labelfr:'9667 Hoorebeke-Saint-Corneille',labelen:'9667 Sint-Kornelis-Horebeke',labelde:'9667 Sint-Kornelis-Horebeke',parentid:'wreg.322',show:'true',sort:'1437'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1453',label:'9667 Sint-Maria-Horebeke (Horebeke)',labelnl:'9667 Sint-Maria-Horebeke (Horebeke)',labelfr:'9667 Hoorebeke-Sainte-Marie',labelen:'9667 Sint-Maria-Horebeke',labelde:'9667 Sint-Maria-Horebeke',parentid:'wreg.322',show:'true',sort:'1438'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1454',label:'9680 Maarkedal',labelnl:'9680 Maarkedal',labelfr:'9680 Maarkedal',labelen:'9680 Maarkedal',labelde:'9680 Maarkedal',parentid:'wreg.323',show:'true',sort:'1439'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1455',label:'9680 Etikhove (Maarkedal)',labelnl:'9680 Etikhove (Maarkedal)',labelfr:'9680 Etikhove',labelen:'9680 Etikhove',labelde:'9680 Etikhove',parentid:'wreg.323',show:'true',sort:'1440'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1456',label:'9680 Maarke-Kerkem (Maarkedal)',labelnl:'9680 Maarke-Kerkem (Maarkedal)',labelfr:'9680 Maarke-Kerkem',labelen:'9680 Maarke-Kerkem',labelde:'9680 Maarke-Kerkem',parentid:'wreg.323',show:'true',sort:'1441'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1457',label:'9681 Nukerke (Maarkedal)',labelnl:'9681 Nukerke (Maarkedal)',labelfr:'9681 Nukerke',labelen:'9681 Nukerke',labelde:'9681 Nukerke',parentid:'wreg.323',show:'true',sort:'1442'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1458',label:'9688 Schorisse (Maarkedal)',labelnl:'9688 Schorisse (Maarkedal)',labelfr:'9688 Schorisse',labelen:'9688 Schorisse',labelde:'9688 Schorisse',parentid:'wreg.323',show:'true',sort:'1443'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1459',label:'9690 Kluisbergen',labelnl:'9690 Kluisbergen',labelfr:'9690 Kluisbergen',labelen:'9690 Kluisbergen',labelde:'9690 Kluisbergen',parentid:'wreg.324',show:'true',sort:'1444'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1460',label:'9690 Berchem (Kluisbergen)',labelnl:'9690 Berchem (Kluisbergen)',labelfr:'9690 Berchem',labelen:'9690 Berchem',labelde:'9690 Berchem',parentid:'wreg.324',show:'true',sort:'1445'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1461',label:'9690 Kwaremont (Kluisbergen)',labelnl:'9690 Kwaremont (Kluisbergen)',labelfr:'9690 Kwaremont',labelen:'9690 Kwaremont',labelde:'9690 Kwaremont',parentid:'wreg.324',show:'true',sort:'1446'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1462',label:'9690 Ruien (Kluisbergen)',labelnl:'9690 Ruien (Kluisbergen)',labelfr:'9690 Ruien',labelen:'9690 Ruien',labelde:'9690 Ruien',parentid:'wreg.324',show:'true',sort:'1447'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1463',label:'9690 Zulzeke (Kluisbergen)',labelnl:'9690 Zulzeke (Kluisbergen)',labelfr:'9690 Zulzeke',labelen:'9690 Zulzeke',labelde:'9690 Zulzeke',parentid:'wreg.324',show:'true',sort:'1448'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1464',label:'9700 Oudenaarde',labelnl:'9700 Oudenaarde',labelfr:'9700 Audenarde',labelen:'9700 Oudenaarde',labelde:'9700 Oudenaarde',parentid:'wreg.325',show:'true',sort:'1449'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1465',label:'9700 Bevere (Oudenaarde)',labelnl:'9700 Bevere (Oudenaarde)',labelfr:'9700 Bevere',labelen:'9700 Bevere',labelde:'9700 Bevere',parentid:'wreg.325',show:'true',sort:'1450'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1466',label:'9700 Edelare (Oudenaarde)',labelnl:'9700 Edelare (Oudenaarde)',labelfr:'9700 Edelare',labelen:'9700 Edelare',labelde:'9700 Edelare',parentid:'wreg.325',show:'true',sort:'1451'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1467',label:'9700 Eine (Oudenaarde)',labelnl:'9700 Eine (Oudenaarde)',labelfr:'9700 Eine',labelen:'9700 Eine',labelde:'9700 Eine',parentid:'wreg.325',show:'true',sort:'1452'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1468',label:'9700 Ename (Oudenaarde)',labelnl:'9700 Ename (Oudenaarde)',labelfr:'9700 Ename',labelen:'9700 Ename',labelde:'9700 Ename',parentid:'wreg.325',show:'true',sort:'1453'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1469',label:'9700 Heurne (Oudenaarde)',labelnl:'9700 Heurne (Oudenaarde)',labelfr:'9700 Heurne',labelen:'9700 Heurne',labelde:'9700 Heurne',parentid:'wreg.325',show:'true',sort:'1454'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1470',label:'9700 Leupegem (Oudenaarde)',labelnl:'9700 Leupegem (Oudenaarde)',labelfr:'9700 Leupegem',labelen:'9700 Leupegem',labelde:'9700 Leupegem',parentid:'wreg.325',show:'true',sort:'1455'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1471',label:'9700 Mater (Oudenaarde)',labelnl:'9700 Mater (Oudenaarde)',labelfr:'9700 Mater',labelen:'9700 Mater',labelde:'9700 Mater',parentid:'wreg.325',show:'true',sort:'1456'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1472',label:'9700 Melden (Oudenaarde)',labelnl:'9700 Melden (Oudenaarde)',labelfr:'9700 Melden',labelen:'9700 Melden',labelde:'9700 Melden',parentid:'wreg.325',show:'true',sort:'1457'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1473',label:'9700 Mullem (Oudenaarde)',labelnl:'9700 Mullem (Oudenaarde)',labelfr:'9700 Mullem',labelen:'9700 Mullem',labelde:'9700 Mullem',parentid:'wreg.325',show:'true',sort:'1458'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1474',label:'9700 Nederename (Oudenaarde)',labelnl:'9700 Nederename (Oudenaarde)',labelfr:'9700 Nederename',labelen:'9700 Nederename',labelde:'9700 Nederename',parentid:'wreg.325',show:'true',sort:'1459'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1475',label:'9700 Ooike (Oudenaarde)',labelnl:'9700 Ooike (Oudenaarde)',labelfr:'9700 Ooike',labelen:'9700 Ooike',labelde:'9700 Ooike',parentid:'wreg.325',show:'true',sort:'1460'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1476',label:'9700 Volkegem (Oudenaarde)',labelnl:'9700 Volkegem (Oudenaarde)',labelfr:'9700 Volkegem',labelen:'9700 Volkegem',labelde:'9700 Volkegem',parentid:'wreg.325',show:'true',sort:'1461'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1477',label:'9700 Welden (Oudenaarde)',labelnl:'9700 Welden (Oudenaarde)',labelfr:'9700 Welden',labelen:'9700 Welden',labelde:'9700 Welden',parentid:'wreg.325',show:'true',sort:'1462'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1478',label:'9750 Zingem',labelnl:'9750 Zingem',labelfr:'9750 Zingem',labelen:'9750 Zingem',labelde:'9750 Zingem',parentid:'wreg.326',show:'true',sort:'1463'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1479',label:'9750 Huise (Zingem)',labelnl:'9750 Huise (Zingem)',labelfr:'9750 Huise',labelen:'9750 Huise',labelde:'9750 Huise',parentid:'wreg.326',show:'true',sort:'1464'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1480',label:'9750 Ouwegem (Zingem)',labelnl:'9750 Ouwegem (Zingem)',labelfr:'9750 Ouwegem',labelen:'9750 Ouwegem',labelde:'9750 Ouwegem',parentid:'wreg.326',show:'true',sort:'1465'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1481',label:'9770 Kruishoutem',labelnl:'9770 Kruishoutem',labelfr:'9770 Kruishoutem',labelen:'9770 Kruishoutem',labelde:'9770 Kruishoutem',parentid:'wreg.327',show:'true',sort:'1466'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1482',label:'9771 Nokere (Kruishoutem)',labelnl:'9771 Nokere (Kruishoutem)',labelfr:'9771 Nokere',labelen:'9771 Nokere',labelde:'9771 Nokere',parentid:'wreg.327',show:'true',sort:'1467'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1483',label:'9772 Wannegem-Lede (Kruishoutem)',labelnl:'9772 Wannegem-Lede (Kruishoutem)',labelfr:'9772 Wannegem-Lede',labelen:'9772 Wannegem-Lede',labelde:'9772 Wannegem-Lede',parentid:'wreg.327',show:'true',sort:'1468'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1484',label:'9790 Wortegem-Petegem',labelnl:'9790 Wortegem-Petegem',labelfr:'9790 Wortegem-Petegem',labelen:'9790 Wortegem-Petegem',labelde:'9790 Wortegem-Petegem',parentid:'wreg.328',show:'true',sort:'1469'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1485',label:'9790 Elsegem (Wortegem-Petegem)',labelnl:'9790 Elsegem (Wortegem-Petegem)',labelfr:'9790 Elsegem',labelen:'9790 Elsegem',labelde:'9790 Elsegem',parentid:'wreg.328',show:'true',sort:'1470'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1486',label:'9790 Moregem (Wortegem-Petegem)',labelnl:'9790 Moregem (Wortegem-Petegem)',labelfr:'9790 Moregem',labelen:'9790 Moregem',labelde:'9790 Moregem',parentid:'wreg.328',show:'true',sort:'1471'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1487',label:'9790 Ooike (Wortegem-Petegem)',labelnl:'9790 Ooike (Wortegem-Petegem)',labelfr:'9790 Ooike',labelen:'9790 Ooike',labelde:'9790 Ooike',parentid:'wreg.328',show:'true',sort:'1472'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1488',label:'9790 Petegem-Aan-De-Schelde (Wortegem-Petegem)',labelnl:'9790 Petegem-Aan-De-Schelde (Wortegem-Petegem)',labelfr:'9790 Petegem-aan-de-Schelde',labelen:'9790 Petegem-aan-de-Schelde',labelde:'9790 Petegem-aan-de-Schelde',parentid:'wreg.328',show:'true',sort:'1473'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1489',label:'9790 Wortegem (Wortegem-Petegem)',labelnl:'9790 Wortegem (Wortegem-Petegem)',labelfr:'9790 Wortegem',labelen:'9790 Wortegem',labelde:'9790 Wortegem',parentid:'wreg.328',show:'true',sort:'1474'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1490',label:'9800 Deinze',labelnl:'9800 Deinze',labelfr:'9800 Deinze',labelen:'9800 Deinze',labelde:'9800 Deinze',parentid:'wreg.329',show:'true',sort:'1475'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1491',label:'9800 Astene (Deinze)',labelnl:'9800 Astene (Deinze)',labelfr:'9800 Astene',labelen:'9800 Astene',labelde:'9800 Astene',parentid:'wreg.329',show:'true',sort:'1476'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1492',label:'9800 Bachte-Maria-Leerne (Deinze)',labelnl:'9800 Bachte-Maria-Leerne (Deinze)',labelfr:'9800 Bachte-Maria-Leerne',labelen:'9800 Bachte-Maria-Leerne',labelde:'9800 Bachte-Maria-Leerne',parentid:'wreg.329',show:'true',sort:'1477'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1493',label:'9800 Gottem (Deinze)',labelnl:'9800 Gottem (Deinze)',labelfr:'9800 Gottem',labelen:'9800 Gottem',labelde:'9800 Gottem',parentid:'wreg.329',show:'true',sort:'1478'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1494',label:'9800 Grammene (Deinze)',labelnl:'9800 Grammene (Deinze)',labelfr:'9800 Grammene',labelen:'9800 Grammene',labelde:'9800 Grammene',parentid:'wreg.329',show:'true',sort:'1479'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1495',label:'9800 Meigem (Deinze)',labelnl:'9800 Meigem (Deinze)',labelfr:'9800 Meigem',labelen:'9800 Meigem',labelde:'9800 Meigem',parentid:'wreg.329',show:'true',sort:'1480'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1496',label:'9800 Petegem-Aan-De-Leie (Deinze)',labelnl:'9800 Petegem-Aan-De-Leie (Deinze)',labelfr:'9800 Petegem-aan-de-Leie',labelen:'9800 Petegem-aan-de-Leie',labelde:'9800 Petegem-aan-de-Leie',parentid:'wreg.329',show:'true',sort:'1481'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1497',label:'9800 Sint-Martens-Leerne (Deinze)',labelnl:'9800 Sint-Martens-Leerne (Deinze)',labelfr:'9800 Sint-Martens-Leerne',labelen:'9800 Sint-Martens-Leerne',labelde:'9800 Sint-Martens-Leerne',parentid:'wreg.329',show:'true',sort:'1482'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1498',label:'9800 Vinkt (Deinze)',labelnl:'9800 Vinkt (Deinze)',labelfr:'9800 Vinkt',labelen:'9800 Vinkt',labelde:'9800 Vinkt',parentid:'wreg.329',show:'true',sort:'1483'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1499',label:'9800 Wontergem (Deinze)',labelnl:'9800 Wontergem (Deinze)',labelfr:'9800 Wontergem',labelen:'9800 Wontergem',labelde:'9800 Wontergem',parentid:'wreg.329',show:'true',sort:'1484'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1500',label:'9800 Zeveren (Deinze)',labelnl:'9800 Zeveren (Deinze)',labelfr:'9800 Zeveren',labelen:'9800 Zeveren',labelde:'9800 Zeveren',parentid:'wreg.329',show:'true',sort:'1485'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1501',label:'9810 Nazareth',labelnl:'9810 Nazareth',labelfr:'9810 Nazareth',labelen:'9810 Nazareth',labelde:'9810 Nazareth',parentid:'wreg.330',show:'true',sort:'1486'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1502',label:'9810 Eke (Nazareth)',labelnl:'9810 Eke (Nazareth)',labelfr:'9810 Eke',labelen:'9810 Eke',labelde:'9810 Eke',parentid:'wreg.330',show:'true',sort:'1487'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1503',label:'9820 Merelbeke',labelnl:'9820 Merelbeke',labelfr:'9820 Merelbeke',labelen:'9820 Merelbeke',labelde:'9820 Merelbeke',parentid:'wreg.331',show:'true',sort:'1488'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1504',label:'9820 Bottelare (Merelbeke)',labelnl:'9820 Bottelare (Merelbeke)',labelfr:'9820 Bottelare',labelen:'9820 Bottelare',labelde:'9820 Bottelare',parentid:'wreg.331',show:'true',sort:'1489'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1505',label:'9820 Lemberge (Merelbeke)',labelnl:'9820 Lemberge (Merelbeke)',labelfr:'9820 Lemberge',labelen:'9820 Lemberge',labelde:'9820 Lemberge',parentid:'wreg.331',show:'true',sort:'1490'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1506',label:'9820 Melsen (Merelbeke)',labelnl:'9820 Melsen (Merelbeke)',labelfr:'9820 Melsen',labelen:'9820 Melsen',labelde:'9820 Melsen',parentid:'wreg.331',show:'true',sort:'1491'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1507',label:'9820 Munte (Merelbeke)',labelnl:'9820 Munte (Merelbeke)',labelfr:'9820 Munte',labelen:'9820 Munte',labelde:'9820 Munte',parentid:'wreg.331',show:'true',sort:'1492'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1508',label:'9820 Schelderode (Merelbeke)',labelnl:'9820 Schelderode (Merelbeke)',labelfr:'9820 Schelderode',labelen:'9820 Schelderode',labelde:'9820 Schelderode',parentid:'wreg.331',show:'true',sort:'1493'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1509',label:'9830 Sint-Martens-Latem',labelnl:'9830 Sint-Martens-Latem',labelfr:'9830 Laethem-Saint-Martin',labelen:'9830 Sint-Martens-Latem',labelde:'9830 Sint-Martens-Latem',parentid:'wreg.332',show:'true',sort:'1494'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1510',label:'9831 Deurle (Sint-Martens-Latem)',labelnl:'9831 Deurle (Sint-Martens-Latem)',labelfr:'9831 Deurle',labelen:'9831 Deurle',labelde:'9831 Deurle',parentid:'wreg.332',show:'true',sort:'1495'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1511',label:'9840 De Pinte',labelnl:'9840 De Pinte',labelfr:'9840 De Pinte',labelen:'9840 De Pinte',labelde:'9840 De Pinte',parentid:'wreg.333',show:'true',sort:'1496'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1512',label:'9840 Zevergem (De Pinte)',labelnl:'9840 Zevergem (De Pinte)',labelfr:'9840 Zevergem',labelen:'9840 Zevergem',labelde:'9840 Zevergem',parentid:'wreg.333',show:'true',sort:'1497'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1513',label:'9850 Nevele',labelnl:'9850 Nevele',labelfr:'9850 Nevele',labelen:'9850 Nevele',labelde:'9850 Nevele',parentid:'wreg.334',show:'true',sort:'1498'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1514',label:'9850 Hansbeke (Nevele)',labelnl:'9850 Hansbeke (Nevele)',labelfr:'9850 Hansbeke',labelen:'9850 Hansbeke',labelde:'9850 Hansbeke',parentid:'wreg.334',show:'true',sort:'1499'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1515',label:'9850 Landegem (Nevele)',labelnl:'9850 Landegem (Nevele)',labelfr:'9850 Landegem',labelen:'9850 Landegem',labelde:'9850 Landegem',parentid:'wreg.334',show:'true',sort:'1500'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1516',label:'9850 Merendree (Nevele)',labelnl:'9850 Merendree (Nevele)',labelfr:'9850 Merendree',labelen:'9850 Merendree',labelde:'9850 Merendree',parentid:'wreg.334',show:'true',sort:'1501'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1517',label:'9850 Poesele (Nevele)',labelnl:'9850 Poesele (Nevele)',labelfr:'9850 Poesele',labelen:'9850 Poesele',labelde:'9850 Poesele',parentid:'wreg.334',show:'true',sort:'1502'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1518',label:'9850 Vosselare (Nevele)',labelnl:'9850 Vosselare (Nevele)',labelfr:'9850 Vosselare',labelen:'9850 Vosselare',labelde:'9850 Vosselare',parentid:'wreg.334',show:'true',sort:'1503'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1519',label:'9860 Oosterzele',labelnl:'9860 Oosterzele',labelfr:'9860 Oosterzele',labelen:'9860 Oosterzele',labelde:'9860 Oosterzele',parentid:'wreg.335',show:'true',sort:'1504'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1520',label:'9860 Balegem (Oosterzele)',labelnl:'9860 Balegem (Oosterzele)',labelfr:'9860 Balegem',labelen:'9860 Balegem',labelde:'9860 Balegem',parentid:'wreg.335',show:'true',sort:'1505'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1521',label:'9860 Gijzenzele (Oosterzele)',labelnl:'9860 Gijzenzele (Oosterzele)',labelfr:'9860 Gijzenzele',labelen:'9860 Gijzenzele',labelde:'9860 Gijzenzele',parentid:'wreg.335',show:'true',sort:'1506'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1522',label:'9860 Landskouter (Oosterzele)',labelnl:'9860 Landskouter (Oosterzele)',labelfr:'9860 Landskouter',labelen:'9860 Landskouter',labelde:'9860 Landskouter',parentid:'wreg.335',show:'true',sort:'1507'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1523',label:'9860 Moortsele (Oosterzele)',labelnl:'9860 Moortsele (Oosterzele)',labelfr:'9860 Moortsele',labelen:'9860 Moortsele',labelde:'9860 Moortsele',parentid:'wreg.335',show:'true',sort:'1508'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1524',label:'9860 Scheldewindeke (Oosterzele)',labelnl:'9860 Scheldewindeke (Oosterzele)',labelfr:'9860 Scheldewindeke',labelen:'9860 Scheldewindeke',labelde:'9860 Scheldewindeke',parentid:'wreg.335',show:'true',sort:'1509'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1525',label:'9870 Zulte',labelnl:'9870 Zulte',labelfr:'9870 Zulte',labelen:'9870 Zulte',labelde:'9870 Zulte',parentid:'wreg.336',show:'true',sort:'1510'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1526',label:'9870 Machelen (Zulte)',labelnl:'9870 Machelen (Zulte)',labelfr:'9870 Machelen',labelen:'9870 Machelen',labelde:'9870 Machelen',parentid:'wreg.336',show:'true',sort:'1511'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1527',label:'9870 Olsene (Zulte)',labelnl:'9870 Olsene (Zulte)',labelfr:'9870 Olsene',labelen:'9870 Olsene',labelde:'9870 Olsene',parentid:'wreg.336',show:'true',sort:'1512'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1528',label:'9880 Aalter',labelnl:'9880 Aalter',labelfr:'9880 Aalter',labelen:'9880 Aalter',labelde:'9880 Aalter',parentid:'wreg.337',show:'true',sort:'1513'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1529',label:'9880 Lotenhulle (Aalter)',labelnl:'9880 Lotenhulle (Aalter)',labelfr:'9880 Lotenhulle',labelen:'9880 Lotenhulle',labelde:'9880 Lotenhulle',parentid:'wreg.337',show:'true',sort:'1514'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1530',label:'9880 Poeke (Aalter)',labelnl:'9880 Poeke (Aalter)',labelfr:'9880 Poeke',labelen:'9880 Poeke',labelde:'9880 Poeke',parentid:'wreg.337',show:'true',sort:'1515'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1531',label:'9881 Bellem (Aalter)',labelnl:'9881 Bellem (Aalter)',labelfr:'9881 Bellem',labelen:'9881 Bellem',labelde:'9881 Bellem',parentid:'wreg.337',show:'true',sort:'1516'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1532',label:'9890 Gavere',labelnl:'9890 Gavere',labelfr:'9890 Gavere',labelen:'9890 Gavere',labelde:'9890 Gavere',parentid:'wreg.338',show:'true',sort:'1517'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1533',label:'9890 Asper (Gavere)',labelnl:'9890 Asper (Gavere)',labelfr:'9890 Asper',labelen:'9890 Asper',labelde:'9890 Asper',parentid:'wreg.338',show:'true',sort:'1518'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1534',label:'9890 Baaigem (Gavere)',labelnl:'9890 Baaigem (Gavere)',labelfr:'9890 Baaigem',labelen:'9890 Baaigem',labelde:'9890 Baaigem',parentid:'wreg.338',show:'true',sort:'1519'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1535',label:'9890 Dikkelvenne (Gavere)',labelnl:'9890 Dikkelvenne (Gavere)',labelfr:'9890 Dikkelvenne',labelen:'9890 Dikkelvenne',labelde:'9890 Dikkelvenne',parentid:'wreg.338',show:'true',sort:'1520'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1536',label:'9890 Semmerzake (Gavere)',labelnl:'9890 Semmerzake (Gavere)',labelfr:'9890 Semmerzake',labelen:'9890 Semmerzake',labelde:'9890 Semmerzake',parentid:'wreg.338',show:'true',sort:'1521'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1537',label:'9890 Vurste (Gavere)',labelnl:'9890 Vurste (Gavere)',labelfr:'9890 Vurste',labelen:'9890 Vurste',labelde:'9890 Vurste',parentid:'wreg.338',show:'true',sort:'1522'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1538',label:'9900 Eeklo',labelnl:'9900 Eeklo',labelfr:'9900 Eeklo',labelen:'9900 Eeklo',labelde:'9900 Eeklo',parentid:'wreg.339',show:'true',sort:'1523'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1539',label:'9910 Knesselare',labelnl:'9910 Knesselare',labelfr:'9910 Knesselare',labelen:'9910 Knesselare',labelde:'9910 Knesselare',parentid:'wreg.340',show:'true',sort:'1524'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1540',label:'9910 Ursel (Knesselare)',labelnl:'9910 Ursel (Knesselare)',labelfr:'9910 Ursel',labelen:'9910 Ursel',labelde:'9910 Ursel',parentid:'wreg.340',show:'true',sort:'1525'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1541',label:'9920 Lovendegem',labelnl:'9920 Lovendegem',labelfr:'9920 Lovendegem',labelen:'9920 Lovendegem',labelde:'9920 Lovendegem',parentid:'wreg.341',show:'true',sort:'1526'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1542',label:'9921 Vinderhoute (Lovendegem)',labelnl:'9921 Vinderhoute (Lovendegem)',labelfr:'9921 Vinderhoute',labelen:'9921 Vinderhoute',labelde:'9921 Vinderhoute',parentid:'wreg.341',show:'true',sort:'1527'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1543',label:'9930 Zomergem',labelnl:'9930 Zomergem',labelfr:'9930 Zomergem',labelen:'9930 Zomergem',labelde:'9930 Zomergem',parentid:'wreg.342',show:'true',sort:'1528'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1544',label:'9931 Oostwinkel (Zomergem)',labelnl:'9931 Oostwinkel (Zomergem)',labelfr:'9931 Oostwinkel',labelen:'9931 Oostwinkel',labelde:'9931 Oostwinkel',parentid:'wreg.342',show:'true',sort:'1529'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1545',label:'9932 Ronsele (Zomergem)',labelnl:'9932 Ronsele (Zomergem)',labelfr:'9932 Ronsele',labelen:'9932 Ronsele',labelde:'9932 Ronsele',parentid:'wreg.342',show:'true',sort:'1530'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1546',label:'9940 Evergem',labelnl:'9940 Evergem',labelfr:'9940 Evergem',labelen:'9940 Evergem',labelde:'9940 Evergem',parentid:'wreg.343',show:'true',sort:'1531'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1547',label:'9940 Ertvelde (Evergem)',labelnl:'9940 Ertvelde (Evergem)',labelfr:'9940 Ertvelde',labelen:'9940 Ertvelde',labelde:'9940 Ertvelde',parentid:'wreg.343',show:'true',sort:'1532'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1548',label:'9940 Kluizen (Evergem)',labelnl:'9940 Kluizen (Evergem)',labelfr:'9940 Kluizen',labelen:'9940 Kluizen',labelde:'9940 Kluizen',parentid:'wreg.343',show:'true',sort:'1533'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1549',label:'9940 Sleidinge (Evergem)',labelnl:'9940 Sleidinge (Evergem)',labelfr:'9940 Sleidinge',labelen:'9940 Sleidinge',labelde:'9940 Sleidinge',parentid:'wreg.343',show:'true',sort:'1534'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1550',label:'9950 Waarschoot',labelnl:'9950 Waarschoot',labelfr:'9950 Waarschoot',labelen:'9950 Waarschoot',labelde:'9950 Waarschoot',parentid:'wreg.344',show:'true',sort:'1535'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1551',label:'9960 Assenede',labelnl:'9960 Assenede',labelfr:'9960 Assenede',labelen:'9960 Assenede',labelde:'9960 Assenede',parentid:'wreg.345',show:'true',sort:'1536'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1552',label:'9961 Boekhoute (Assenede)',labelnl:'9961 Boekhoute (Assenede)',labelfr:'9961 Boekhoute',labelen:'9961 Boekhoute',labelde:'9961 Boekhoute',parentid:'wreg.345',show:'true',sort:'1537'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1553',label:'9968 Bassevelde (Assenede)',labelnl:'9968 Bassevelde (Assenede)',labelfr:'9968 Bassevelde',labelen:'9968 Bassevelde',labelde:'9968 Bassevelde',parentid:'wreg.345',show:'true',sort:'1538'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1554',label:'9968 Oosteeklo (Assenede)',labelnl:'9968 Oosteeklo (Assenede)',labelfr:'9968 Oosteeklo',labelen:'9968 Oosteeklo',labelde:'9968 Oosteeklo',parentid:'wreg.345',show:'true',sort:'1539'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1555',label:'9970 Kaprijke',labelnl:'9970 Kaprijke',labelfr:'9970 Kaprijke',labelen:'9970 Kaprijke',labelde:'9970 Kaprijke',parentid:'wreg.346',show:'true',sort:'1540'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1556',label:'9971 Lembeke (Kaprijke)',labelnl:'9971 Lembeke (Kaprijke)',labelfr:'9971 Lembeke',labelen:'9971 Lembeke',labelde:'9971 Lembeke',parentid:'wreg.346',show:'true',sort:'1541'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1557',label:'9980 Sint-Laureins',labelnl:'9980 Sint-Laureins',labelfr:'9980 Saint-Laurent',labelen:'9980 Sint-Laureins',labelde:'9980 Sint-Laureins',parentid:'wreg.347',show:'true',sort:'1542'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1558',label:'9981 Sint-Margriete (Sint-Laureins)',labelnl:'9981 Sint-Margriete (Sint-Laureins)',labelfr:'9981 Sainte-Marguerite',labelen:'9981 Sint-Margriete',labelde:'9981 Sint-Margriete',parentid:'wreg.347',show:'true',sort:'1543'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1559',label:'9982 Sint-Jan-In-Eremo (Sint-Laureins)',labelnl:'9982 Sint-Jan-In-Eremo (Sint-Laureins)',labelfr:'9982 Saint-Jean-in-Eremo',labelen:'9982 Sint-Jan-in-Eremo',labelde:'9982 Sint-Jan-in-Eremo',parentid:'wreg.347',show:'true',sort:'1544'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1560',label:'9988 Waterland-Oudeman (Sint-Laureins)',labelnl:'9988 Waterland-Oudeman (Sint-Laureins)',labelfr:'9988 Waterland-Oudeman',labelen:'9988 Waterland-Oudeman',labelde:'9988 Waterland-Oudeman',parentid:'wreg.347',show:'true',sort:'1545'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1561',label:'9988 Watervliet (Sint-Laureins)',labelnl:'9988 Watervliet (Sint-Laureins)',labelfr:'9988 Watervliet',labelen:'9988 Watervliet',labelde:'9988 Watervliet',parentid:'wreg.347',show:'true',sort:'1546'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1562',label:'9990 Maldegem',labelnl:'9990 Maldegem',labelfr:'9990 Maldegem',labelen:'9990 Maldegem',labelde:'9990 Maldegem',parentid:'wreg.348',show:'true',sort:'1547'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1563',label:'9991 Adegem (Maldegem)',labelnl:'9991 Adegem (Maldegem)',labelfr:'9991 Adegem',labelen:'9991 Adegem',labelde:'9991 Adegem',parentid:'wreg.348',show:'true',sort:'1548'},{createdby:'CultuurNet',creationdate:'2013-08-05T11:48:09',domain:'workingregion',enabled:'true',id:'wreg.1564',label:'9992 Middelburg (Maldegem)',labelnl:'9992 Middelburg (Maldegem)',labelfr:'9992 Middelburg',labelen:'9992 Middelburg',labelde:'9992 Middelburg',parentid:'wreg.348',show:'true',sort:'1549'},{createdby:'CultuurNet',creationdate:'2014-02-24T11:57:43',domain:'theme',enabled:'true',id:'1.66.0.0.0',label:'Economie',labelnl:'Economie',labelfr:'Économie',labelen:'Economy',labelde:'Wirtschaft',show:'true',sort:'75'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:32:44',domain:'eventtype',enabled:'true',id:'3CuHvenJ+EGkcvhXLg9Ykg',label:'Archeologische Site',labelnl:'Archeologische Site',labelfr:'',labelen:'',labelde:'',parentid:'0.100.2.0.0',show:'false',sort:'10'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:33:31',domain:'eventtype',enabled:'true',id:'rJRFUqmd6EiqTD4c7HS90w',label:'School of onderwijscentrum',labelnl:'School of onderwijscentrum',labelfr:'',labelen:'',labelde:'',parentid:'0.100.2.0.0',show:'false',sort:'11'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:34:50',domain:'eventtype',enabled:'true',id:'eBwaUAAhw0ur0Z02i5ttnw',label:'Sportcentrum',labelnl:'Sportcentrum',labelfr:'',labelen:'',labelde:'',parentid:'0.100.2.0.0',show:'false',sort:'12'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:35:21',domain:'eventtype',enabled:'true',id:'VRC6HX0Wa063sq98G5ciqw',label:'Winkel',labelnl:'Winkel',labelfr:'',labelen:'',labelde:'',parentid:'0.100.2.0.0',show:'false',sort:'13'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:36:01',domain:'eventtype',enabled:'true',id:'GnPFp9uvOUyqhOckIFMKmg',label:'Museum of galerij',labelnl:'Museum of galerij',labelfr:'',labelen:'',labelde:'',parentid:'0.100.2.0.0',show:'false',sort:'14'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:36:26',domain:'eventtype',enabled:'true',id:'JCjA0i5COUmdjMwcyjNAFA',label:'Jeugdhuis of jeugdcentrum',labelnl:'Jeugdhuis of jeugdcentrum',labelfr:'',labelen:'',labelde:'',parentid:'0.100.1.0.0',show:'false',sort:'12'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:36:53',domain:'eventtype',enabled:'true',id:'Yf4aZBfsUEu2NsQqsprngw',label:'Cultuur- of ontmoetingscentrum',labelnl:'Cultuur- of ontmoetingscentrum',labelfr:'',labelen:'',labelde:'',parentid:'0.100.1.0.0',show:'false',sort:'13'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:37:23',domain:'eventtype',enabled:'true',id:'YVBc8KVdrU6XfTNvhMYUpg',label:'Discotheek',labelnl:'Discotheek',labelfr:'',labelen:'',labelde:'',parentid:'0.100.1.0.0',show:'false',sort:'14'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:37:55',domain:'eventtype',enabled:'true',id:'kI7uAyn2uUu9VV6Z3uWZTA',label:'Bibliotheek of documentatiecentrum',labelnl:'Bibliotheek of documentatiecentrum',labelfr:'',labelen:'',labelde:'',parentid:'0.100.1.0.0',show:'false',sort:'15'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:38:26',domain:'eventtype',enabled:'true',id:'BtVNd33sR0WntjALVbyp3w',label:'Bioscoop',labelnl:'Bioscoop',labelfr:'',labelen:'',labelde:'',parentid:'0.100.1.0.0',show:'false',sort:'16'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:38:54',domain:'eventtype',enabled:'true',id:'ekdc4ATGoUitCa0e6me6xA',label:'Horeca',labelnl:'Horeca',labelfr:'',labelen:'',labelde:'',parentid:'0.100.1.0.0',show:'false',sort:'17'},{createdby:'sf@uniway.be',creationdate:'2015-02-17T15:39:20',domain:'eventtype',enabled:'true',id:'OyaPaf64AEmEAYXHeLMAtA',label:'Zaal of expohal',labelnl:'Zaal of expohal',labelfr:'',labelen:'',labelde:'',parentid:'0.100.2.0.0',show:'false',sort:'15'},{createdby:'CultuurNet',creationdate:'2017-01-13T09:46:03',domain:'eventtype',enabled:'true',id:'0.8.0.0.0',label:'Openbare ruimte',labelnl:'Openbare ruimte',labelfr:'Espace public',labelen:'Public space',labelde:'Der öffentliche Raum',parentid:'0.100.2.0.0',show:'true',sort:'1'},{createdby:'CultuurNet',creationdate:'2017-11-22T13:07:10',domain:'facility',enabled:'true',id:'3.25.0.0.0',label:'Contactpunt voor personen met handicap',labelnl:'Contactpunt voor personen met handicap',labelfr:'point de contact pour les personnes avec un handicap',labelen:'Point of contact for people with a disability',labelde:'Kontakpunkt für Menschen mit Behinderung',show:'true',sort:'23'},{createdby:'CultuurNet',creationdate:'2017-11-22T13:08:27',domain:'facility',enabled:'true',id:'3.26.0.0.0',label:'Parkeerplaats',labelnl:'Parkeerplaats',labelfr:'Place de parking',labelen:'Parking area',labelde:'Behindertenparkplatz',show:'true',sort:'24'},{createdby:'CultuurNet',creationdate:'2017-11-22T13:10:29',domain:'facility',enabled:'true',id:'3.27.0.0.0',label:'Rolstoeltoegankelijk',labelnl:'Rolstoeltoegankelijk',labelfr:'Accessible en fauteuil roulant',labelen:'Accessible for wheelchairs',labelde:'Rollstuhlgerecht',show:'true',sort:'25'},{createdby:'CultuurNet',creationdate:'2017-11-22T13:13:25',domain:'facility',enabled:'true',id:'3.28.0.0.0',label:'Alternatieve ingang',labelnl:'Alternatieve ingang',labelfr:'Entrée alternative',labelen:'Alternative entrance',labelde:'Alternativer Eingang',show:'true',sort:'26'},{createdby:'CultuurNet',creationdate:'2017-11-22T13:18:28',domain:'facility',enabled:'true',id:'3.29.0.0.0',label:'Gegarandeerd zicht',labelnl:'Gegarandeerd zicht',labelfr:'Vue garantie',labelen:'Guaranteed view',labelde:'Gewährleistete Aussicht',show:'true',sort:'27'},{createdby:'CultuurNet',creationdate:'2017-11-22T13:20:45',domain:'facility',enabled:'true',id:'3.30.0.0.0',label:'Rolstoelpodium',labelnl:'Rolstoelpodium',labelfr:'Podium surélevé',labelen:'Viewing platform',labelde:'Rollstuhlpodest',show:'true',sort:'28'},{createdby:'CultuurNet',creationdate:'2017-11-22T13:29:35',domain:'facility',enabled:'true',id:'3.31.0.0.0',label:'Toegankelijk sanitair',labelnl:'Toegankelijk sanitair',labelfr:'Installations sanitaires accesibles',labelen:'Accessible sanitary facilities',labelde:'Sanitäranlage für Rollstuhlbenutzer',show:'true',sort:'30'},{createdby:'CultuurNet',creationdate:'2017-11-22T13:35:25',domain:'facility',enabled:'true',id:'3.32.0.0.0',label:'Voorbehouden camping',labelnl:'Voorbehouden camping',labelfr:'Camping réservé',labelen:'Reserved campsite',labelde:'Reservierter Campingplatz',show:'true',sort:'29'},{createdby:'CultuurNet',creationdate:'2017-11-22T13:36:21',domain:'facility',enabled:'true',id:'3.33.0.0.0',label:'Tolken Vlaamse Gebarentaal',labelnl:'Tolken Vlaamse Gebarentaal',labelfr:'Interprètes de langue de signes',labelen:'Sign language interpreting service',labelde:'Gebärdensprachdolmetscher',show:'true',sort:'31'},{createdby:'CultuurNet',creationdate:'2017-11-22T14:33:15',domain:'facility',enabled:'true',id:'3.34.0.0.0',label:'Vereenvoudigde informatie',labelnl:'Vereenvoudigde informatie',labelfr:'Information simplifiée',labelen:'Simplified information',labelde:'Vereinfachte Information',show:'true',sort:'32'},{createdby:'CultuurNet',creationdate:'2017-11-22T14:34:15',domain:'facility',enabled:'true',id:'3.35.0.0.0',label:'1 begeleider gratis',labelnl:'1 begeleider gratis',labelfr:'Un accompagnateur gratuit',labelen:'Free carer ticket',labelde:'Freier Eintritt für Begleitperson',show:'true',sort:'33'},{createdby:'CultuurNet',creationdate:'2017-11-22T14:35:16',domain:'facility',enabled:'true',id:'3.36.0.0.0',label:'Verzorgingsruimte',labelnl:'Verzorgingsruimte',labelfr:'Salle de soins',labelen:'Care room',labelde:'Pflegeraum',show:'true',sort:'34'},{createdby:'CultuurNet',creationdate:'2017-11-22T14:36:20',domain:'facility',enabled:'true',id:'3.37.0.0.0',label:'Oplaadzone rolstoelen',labelnl:'Oplaadzone rolstoelen',labelfr:'Zone de chargement pour fauteuils roulants',labelen:'Charging facility for wheelchairs',labelde:'Aufladungsmöglichkeit für Rollstuhle',show:'true',sort:'35'},{createdby:'CultuurNet',creationdate:'2017-11-22T14:42:37',domain:'facility',enabled:'true',id:'3.38.0.0.0',label:'Inter-assistentie',labelnl:'Inter-assistentie',labelfr:'Assistance spéciale',labelen:'Special assistance',labelde:'Spezialhilfe',show:'true',sort:'36'},{createdby:'CultuurNet',creationdate:'2017-11-22T14:44:28',domain:'facility',enabled:'true',id:'3.39.0.0.0',label:'Begeleiderspas',labelnl:'Begeleiderspas bij gehandicapten',labelfr:'Carte d\'accompagnateur',labelen:'Carer pass',labelde:'Ausweis Begleitperson',show:'true',sort:'37'},{createdby:'CultuurNet',creationdate:'2017-11-22T14:45:39',domain:'facility',enabled:'true',id:'3.40.0.0.0',label:'Inter-Toegankelijkheidsgarantie',labelnl:'Inter-Toegankelijkheidsgarantie',labelfr:'Accessibilité garantie',labelen:'Certified accessibility',labelde:'Zertifizierte Zugänglichkeit',show:'true',sort:'38'},{createdby:'CultuurNet',creationdate:'2018-09-06T10:50:39',domain:'actortype',enabled:'true',id:'8.70.0.0.0',label:'Theater',labelnl:'Theater',labelfr:'Théâtre',labelen:'Theatre',labelde:'Theater',parentid:'8.15.0.0.0',show:'true',sort:'7'},{createdby:'Publiq',creationdate:'2018-09-26T12:32:01',domain:'educationlevel',enabled:'true',id:'12.20.0.0.0',label:'Basisonderwijs',labelnl:'Basisonderwijs',labelfr:'',labelen:'',labelde:'',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T12:32:50',domain:'educationlevel',enabled:'true',id:'12.30.0.0.0',label:'Secundair onderwijs',labelnl:'Secundair onderwijs',labelfr:'',labelen:'',labelde:'',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T12:33:34',domain:'educationlevel',enabled:'true',id:'12.40.0.0.0',label:'Deeltijds kunstonderwijs (DKO)',labelnl:'Deeltijds kunstonderwijs (DKO)',labelfr:'',labelen:'',labelde:'',show:'true',sort:'3'},{createdby:'Publiq',creationdate:'2018-09-26T12:34:27',domain:'educationlevel',enabled:'true',id:'12.50.0.0.0',label:'Hoger onderwijs',labelnl:'Hoger onderwijs',labelfr:'',labelen:'',labelde:'',show:'true',sort:'4'},{createdby:'Publiq',creationdate:'2018-09-26T12:35:15',domain:'educationlevel',enabled:'true',id:'12.60.0.0.0',label:'Volwassenenonderwijs',labelnl:'Volwassenenonderwijs',labelfr:'',labelen:'',labelde:'',show:'true',sort:'5'},{createdby:'Publiq',creationdate:'2018-09-26T12:37:24',domain:'educationlevel',enabled:'true',id:'12.21.0.0.0',label:'Gewoon basisonderwijs',labelnl:'Gewoon basisonderwijs',labelfr:'',labelen:'',labelde:'',parentid:'12.20.0.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T12:38:06',domain:'educationlevel',enabled:'true',id:'12.22.0.0.0',label:'Buitengewoon basisonderwijs',labelnl:'Buitengewoon basisonderwijs',labelfr:'',labelen:'',labelde:'',parentid:'12.20.0.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T12:42:32',domain:'educationlevel',enabled:'true',id:'12.21.1.0.0',label:'Gewoon kleuteronderwijs',labelnl:'Gewoon kleuteronderwijs',labelfr:'',labelen:'',labelde:'',parentid:'12.21.0.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T12:43:28',domain:'educationlevel',enabled:'true',id:'12.21.2.0.0',label:'Gewoon lager onderwijs',labelnl:'Gewoon lager onderwijs',labelfr:'',labelen:'',labelde:'',parentid:'12.21.0.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T12:44:46',domain:'educationlevel',enabled:'true',id:'12.21.3.0.0',label:'Onthaalonderwijs voor anderstalige nieuwkomers (OK',labelnl:'Onthaalonderwijs voor anderstalige nieuwkomers (OKAN)',labelfr:'',labelen:'',labelde:'',parentid:'12.21.0.0.0',show:'true',sort:'3'},{createdby:'Publiq',creationdate:'2018-09-26T12:45:43',domain:'educationlevel',enabled:'true',id:'12.22.1.0.0',label:'Buitengewoon kleuteronderwijs',labelnl:'Buitengewoon kleuteronderwijs',labelfr:'',labelen:'',labelde:'',parentid:'12.22.0.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T12:46:14',domain:'educationlevel',enabled:'true',id:'12.22.2.0.0',label:'Buitengewoon lager onderwijs',labelnl:'Buitengewoon lager onderwijs',labelfr:'',labelen:'',labelde:'',parentid:'12.22.0.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T12:46:57',domain:'educationlevel',enabled:'true',id:'12.21.1.1.0',label:'Kleuter 2-3 jaar',labelnl:'Kleuter 2-3 jaar',labelfr:'',labelen:'',labelde:'',parentid:'12.21.1.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T12:47:55',domain:'educationlevel',enabled:'true',id:'12.21.1.2.0',label:'Kleuter 3-4 jaar',labelnl:'Kleuter 3-4 jaar',labelfr:'',labelen:'',labelde:'',parentid:'12.21.1.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T12:51:14',domain:'educationlevel',enabled:'true',id:'12.21.1.3.0',label:'Kleuter 4-5 jaar',labelnl:'Kleuter 4-5 jaar',labelfr:'',labelen:'',labelde:'',parentid:'12.21.1.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T12:52:34',domain:'educationlevel',enabled:'true',id:'12.21.2.1.0',label:'1ste graad',labelnl:'1ste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.21.2.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T12:53:20',domain:'educationlevel',enabled:'true',id:'12.21.2.2.0',label:'2de graad',labelnl:'2de graad',labelfr:'',labelen:'',labelde:'',parentid:'12.21.2.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T12:53:58',domain:'educationlevel',enabled:'true',id:'12.21.2.3.0',label:'3de graad',labelnl:'3de graad',labelfr:'',labelen:'',labelde:'',parentid:'12.21.2.0.0',show:'true',sort:'3'},{createdby:'Publiq',creationdate:'2018-09-26T13:01:09',domain:'educationlevel',enabled:'true',id:'12.31.0.0.0',label:'Voltijds gewoon secundair onderwijs',labelnl:'Voltijds gewoon secundair onderwijs',labelfr:'',labelen:'',labelde:'',parentid:'12.30.0.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T13:02:35',domain:'educationlevel',enabled:'true',id:'12.32.0.0.0',label:'Buitengewoon secundair onderwijs',labelnl:'Buitengewoon secundair onderwijs',labelfr:'',labelen:'',labelde:'',parentid:'12.30.0.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T13:03:16',domain:'educationlevel',enabled:'true',id:'12.33.0.0.0',label:'Deeltijds leren en werken',labelnl:'Deeltijds leren en werken',labelfr:'',labelen:'',labelde:'',parentid:'12.30.0.0.0',show:'true',sort:'3'},{createdby:'Publiq',creationdate:'2018-09-26T13:04:33',domain:'educationlevel',enabled:'true',id:'12.31.1.0.0',label:'eerste graad',labelnl:'eerste graad',labelfr:'',labelen:'',labelde:'',parentid:'12.31.0.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T13:05:55',domain:'educationlevel',enabled:'true',id:'12.31.2.0.0',label:'tweede graad',labelnl:'tweede graad',labelfr:'',labelen:'',labelde:'',parentid:'12.31.0.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T13:06:27',domain:'educationlevel',enabled:'true',id:'12.31.3.0.0',label:'derde graad',labelnl:'derde graad',labelfr:'',labelen:'',labelde:'',parentid:'12.31.0.0.0',show:'true',sort:'3'},{createdby:'Publiq',creationdate:'2018-09-26T13:07:22',domain:'educationlevel',enabled:'true',id:'12.31.4.0.0',label:'Secundair-na-secundair (Se-n-Se)',labelnl:'Secundair-na-secundair (Se-n-Se)',labelfr:'',labelen:'',labelde:'',parentid:'12.31.0.0.0',show:'true',sort:'4'},{createdby:'Publiq',creationdate:'2018-09-26T13:08:17',domain:'educationlevel',enabled:'true',id:'12.31.5.0.0',label:'Onthaalonderwijs voor anderstalige nieuwkomers (OK',labelnl:'Onthaalonderwijs voor anderstalige nieuwkomers (OKAN)',labelfr:'',labelen:'',labelde:'',parentid:'12.31.0.0.0',show:'true',sort:'5'},{createdby:'Publiq',creationdate:'2018-09-26T13:09:16',domain:'educationlevel',enabled:'true',id:'12.31.1.1.0',label:'1ste leerjaar A',labelnl:'1ste leerjaar A',labelfr:'',labelen:'',labelde:'',parentid:'12.31.1.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T13:09:51',domain:'educationlevel',enabled:'true',id:'12.31.1.2.0',label:'1ste leerjaar B',labelnl:'1ste leerjaar B',labelfr:'',labelen:'',labelde:'',parentid:'12.31.1.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T13:10:37',domain:'educationlevel',enabled:'true',id:'12.31.1.3.0',label:'2de leerjaar',labelnl:'2de leerjaar',labelfr:'',labelen:'',labelde:'',parentid:'12.31.1.0.0',show:'true',sort:'3'},{createdby:'Publiq',creationdate:'2018-09-26T13:11:57',domain:'educationlevel',enabled:'true',id:'12.31.1.4.0',label:'beroepsvoorbereidend leerjaar',labelnl:'beroepsvoorbereidend leerjaar',labelfr:'',labelen:'',labelde:'',parentid:'12.31.1.0.0',show:'true',sort:'4'},{createdby:'Publiq',creationdate:'2018-09-26T13:14:25',domain:'educationlevel',enabled:'true',id:'12.31.2.1.0',label:'ASO',labelnl:'ASO',labelfr:'',labelen:'',labelde:'',parentid:'12.31.2.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T13:15:22',domain:'educationlevel',enabled:'true',id:'12.31.2.2.0',label:'BSO',labelnl:'BSO',labelfr:'',labelen:'',labelde:'',parentid:'12.31.2.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T13:16:34',domain:'educationlevel',enabled:'true',id:'12.31.2.3.0',label:'KSO',labelnl:'KSO',labelfr:'',labelen:'',labelde:'',parentid:'12.31.2.0.0',show:'true',sort:'3'},{createdby:'Publiq',creationdate:'2018-09-26T13:17:39',domain:'educationlevel',enabled:'true',id:'12.31.2.4.0',label:'TSO',labelnl:'TSO',labelfr:'',labelen:'',labelde:'',parentid:'12.31.2.0.0',show:'true',sort:'4'},{createdby:'Publiq',creationdate:'2018-09-26T13:18:22',domain:'educationlevel',enabled:'true',id:'12.31.3.1.0',label:'ASO',labelnl:'ASO',labelfr:'',labelen:'',labelde:'',parentid:'12.31.3.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T13:18:59',domain:'educationlevel',enabled:'true',id:'12.31.3.2.0',label:'BSO',labelnl:'BSO',labelfr:'',labelen:'',labelde:'',parentid:'12.31.3.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T13:19:38',domain:'educationlevel',enabled:'true',id:'12.31.3.3.0',label:'KSO',labelnl:'KSO',labelfr:'',labelen:'',labelde:'',parentid:'12.31.3.0.0',show:'true',sort:'3'},{createdby:'Publiq',creationdate:'2018-09-26T13:20:30',domain:'educationlevel',enabled:'true',id:'12.31.3.4.0',label:'TSO',labelnl:'TSO',labelfr:'',labelen:'',labelde:'',parentid:'12.31.3.0.0',show:'true',sort:'4'},{createdby:'Publiq',creationdate:'2018-09-26T13:21:00',domain:'educationlevel',enabled:'true',id:'12.31.3.5.0',label:'BSO specialisatiejaar',labelnl:'BSO specialisatiejaar',labelfr:'',labelen:'',labelde:'',parentid:'12.31.3.0.0',show:'true',sort:'5'},{createdby:'Publiq',creationdate:'2018-09-26T13:21:40',domain:'educationlevel',enabled:'true',id:'12.31.3.6.0',label:'Voorbereidend jaar HO',labelnl:'Voorbereidend jaar HO',labelfr:'',labelen:'',labelde:'',parentid:'12.31.3.0.0',show:'true',sort:'6'},{createdby:'Publiq',creationdate:'2018-09-26T13:22:28',domain:'educationlevel',enabled:'true',id:'12.40.1.0.0',label:'Beeldende en audiovisuele kunst',labelnl:'Beeldende en audiovisuele kunst',labelfr:'',labelen:'',labelde:'',parentid:'12.40.0.0.0',show:'true',sort:'1'},{createdby:'Publiq',creationdate:'2018-09-26T13:23:11',domain:'educationlevel',enabled:'true',id:'12.40.2.0.0',label:'Muziek',labelnl:'Muziek',labelfr:'',labelen:'',labelde:'',parentid:'12.40.0.0.0',show:'true',sort:'2'},{createdby:'Publiq',creationdate:'2018-09-26T13:24:01',domain:'educationlevel',enabled:'true',id:'12.40.3.0.0',label:'Woordkunst-drama',labelnl:'Woordkunst-drama',labelfr:'',labelen:'',labelde:'',parentid:'12.40.0.0.0',show:'true',sort:'3'},{createdby:'Publiq',creationdate:'2018-09-26T13:24:36',domain:'educationlevel',enabled:'true',id:'12.40.4.0.0',label:'Dans',labelnl:'Dans',labelfr:'',labelen:'',labelde:'',parentid:'12.40.0.0.0',show:'true',sort:'4'}])

.constant('eventCategories', [{label:'Begeleide rondleiding',id:'0.7.0.0.0',primary:true,themes:[{id:'1.2.1.0.0',label:'Architectuur'},{id:'1.40.0.0.0',label:'Erfgoed'},{id:'1.11.0.0.0',label:'Geschiedenis'},{id:'1.41.0.0.0',label:'Kunst en kunsteducatie'},{id:'1.63.0.0.0',label:'Landbouw en platteland'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.25.0.0.0',label:'Wetenschap'},{id:'1.44.0.0.0',label:'Zingeving, filosofie en religie'}]},{label:'Beurs',id:'0.6.0.0.0',primary:false,themes:[{id:'1.17.0.0.0',label:'Antiek en brocante'},{id:'1.7.2.0.0',label:'Erfgoed'},{id:'1.62.0.0.0',label:'Gezondheid en wellness'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.10.8.0.0',label:'Strips'},{id:'1.65.0.0.0',label:'Voeding'},{id:'1.25.0.0.0',label:'Wetenschap'}]},{label:'Concert',id:'0.50.4.0.0',primary:true,themes:[{id:'1.8.3.5.0',label:'Amusementsmuziek'},{id:'1.8.3.3.0',label:'Dance'},{id:'1.8.4.0.0',label:'Folk en wereldmuziek'},{id:'1.8.3.2.0',label:'Hiphop, r&b en rap'},{id:'1.8.2.0.0',label:'Jazz en blues'},{id:'1.8.1.0.0',label:'Klassieke muziek'},{id:'1.8.3.1.0',label:'Pop en rock'}]},{label:'Cursus of workshop',id:'0.3.1.0.0',primary:true,themes:[{id:'1.9.1.0.0',label:'Ballet en klassieke dans',group:'Dans'},{id:'1.9.2.0.0',label:'Moderne dans',group:'Dans'},{id:'1.9.5.0.0',label:'Stijl en salondansen',group:'Dans'},{id:'1.9.3.0.0',label:'Volksdans en werelddans',group:'Dans'},{id:'1.1.0.0.0',label:'Audiovisuele kunst',group:'Kunst en erfgoed'},{id:'1.0.2.0.0',label:'Beeldhouwkunst',group:'Kunst en erfgoed'},{id:'0.52.0.0.0',label:'Circus',group:'Kunst en erfgoed'},{id:'1.42.0.0.0',label:'Creativiteit',group:'Kunst en erfgoed'},{id:'1.0.5.0.0',label:'Decoratieve kunst',group:'Kunst en erfgoed'},{id:'1.2.2.0.0',label:'Design',group:'Kunst en erfgoed'},{id:'1.40.0.0.0',label:'Erfgoed',group:'Kunst en erfgoed'},{id:'1.0.6.0.0',label:'Fotografie',group:'Kunst en erfgoed'},{id:'1.0.4.0.0',label:'Grafiek',group:'Kunst en erfgoed'},{id:'1.10.0.0.0',label:'Literatuur',group:'Kunst en erfgoed'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen',group:'Kunst en erfgoed'},{id:'1.49.0.0.0',label:'Mode',group:'Kunst en erfgoed'},{id:'1.10.5.0.0',label:'Poëzie',group:'Kunst en erfgoed'},{id:'1.0.1.0.0',label:'Schilderkunst',group:'Kunst en erfgoed'},{id:'1.3.1.0.0',label:'Tekst- en muziektheater',group:'Kunst en erfgoed'},{id:'1.8.3.5.0',label:'Amusementsmuziek',group:'Muziek'},{id:'1.8.3.3.0',label:'Dance',group:'Muziek'},{id:'1.8.4.0.0',label:'Folk en wereldmuziek',group:'Muziek'},{id:'1.8.3.2.0',label:'Hiphop, r&b en rap',group:'Muziek'},{id:'1.8.2.0.0',label:'Jazz en blues',group:'Muziek'},{id:'1.8.1.0.0',label:'Klassieke muziek',group:'Muziek'},{id:'1.8.3.1.0',label:'Pop en rock',group:'Muziek'},{id:'1.51.14.0.0',label:'Atletiek, wandelen en fietsen',group:'Sport'},{id:'1.51.13.0.0',label:'Bal en racketsport',group:'Sport'},{id:'1.51.6.0.0',label:'Fitness, gymnastiek, dans en vechtsport',group:'Sport'},{id:'1.58.8.0.0',label:'Lucht en motorsport',group:'Sport'},{id:'1.51.12.0.0',label:'Omnisport en andere',group:'Sport'},{id:'1.51.11.0.0',label:'Outdoor en adventure',group:'Sport'},{id:'1.51.10.0.0',label:'Volkssporten',group:'Sport'},{id:'1.51.3.0.0',label:'Zwemmen en watersport',group:'Sport'},{id:'1.37.1.0.0',label:'Gezondheid en wellness',group:'Varia'},{id:'1.43.0.0.0',label:'Interculturele vorming',group:'Varia'},{id:'1.64.0.0.0',label:'Milieu en natuur',group:'Varia'},{id:'1.37.0.0.0',label:'Opvoeding',group:'Varia'},{id:'1.61.0.0.0',label:'Persoon en relaties',group:'Varia'},{id:'1.37.2.0.0',label:'Samenleving',group:'Varia'},{id:'1.65.0.0.0',label:'Voeding',group:'Varia'},{id:'1.25.0.0.0',label:'Wetenschap',group:'Varia'},{id:'1.44.0.0.0',label:'Zingeving, filosofie en religie',group:'Varia'}]},{label:'Dansvoorstelling',id:'0.54.0.0.0',primary:false,themes:[{id:'1.9.1.0.0',label:'Ballet en klassieke dans'},{id:'1.9.2.0.0',label:'Moderne dans'},{id:'1.9.5.0.0',label:'Stijl en salondansen'},{id:'1.9.3.0.0',label:'Volksdans en werelddans'}]},{label:'Eten en drinken',id:'1.50.0.0.0',primary:false},{label:'Festival',id:'0.5.0.0.0',primary:false,themes:[{id:'1.8.3.5.0',label:'Amusementsmuziek'},{id:'0.52.0.0.0',label:'Circus'},{id:'1.8.3.3.0',label:'Dance'},{id:'1.8.4.0.0',label:'Folk en wereldmuziek'},{id:'1.3.10.0.0',label:'Humor en comedy'},{id:'1.8.2.0.0',label:'Jazz en blues'},{id:'1.8.1.0.0',label:'Klassieke muziek'},{id:'1.41.0.0.0',label:'Kunst en kunsteducatie'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.7.14.0.0',label:'Meerdere filmgenres'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.8.3.1.0',label:'Pop en rock'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.3.1.0.0',label:'Tekst- en muziektheater'},{id:'1.25.0.0.0',label:'Wetenschap'}]},{label:'Film',id:'0.50.6.0.0',primary:true,themes:[{id:'1.7.2.0.0',label:'Actie en avontuur'},{id:'1.7.12.0.0',label:'Animatie en kinderfilms'},{id:'1.7.11.0.0',label:'Cinefiel'},{id:'1.7.1.0.0',label:'Documentaires en reportages'},{id:'1.7.4.0.0',label:'Drama'},{id:'1.7.10.0.0',label:'Filmmusical'},{id:'1.7.6.0.0',label:'Griezelfilm of horror'},{id:'1.7.8.0.0',label:'Historische film'},{id:'1.7.3.0.0',label:'Komedie'},{id:'1.7.13.0.0',label:'Kortfilm'},{id:'1.7.7.0.0',label:'Science fiction'},{id:'1.7.15.0.0',label:'Thriller'}]},{label:'Kamp of vakantie',id:'0.57.0.0.0',primary:false,themes:[{id:'1.7.2.0.0',label:'Avontuur'},{id:'1.42.0.0.0',label:'Creativiteit'},{id:'1.65.0.0.0',label:'Koken'},{id:'1.64.0.0.0',label:'Natuur'},{id:'1.51.12.0.0',label:'Sport'},{id:'1.21.0.0.0',label:'Technologie'}]},{label:'Kermis of feestelijkheid',id:'0.28.0.0.0',primary:false},{label:'Lezing of congres',id:'0.3.2.0.0',primary:'false',themes:[{id:'1.21.0.0.0',label:'Computer en techniek'},{id:'1.42.0.0.0',label:'Creativiteit'},{id:'1.40.0.0.0',label:'Erfgoed'},{id:'1.11.0.0.0',label:'Geschiedenis'},{id:'1.37.1.0.0',label:'Gezondheid en zorg'},{id:'1.41.0.0.0',label:'Kunst en kunsteducatie'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.37.0.0.0',label:'Opvoeding'},{id:'1.61.0.0.0',label:'Persoon en relaties'},{id:'1.10.5.0.0',label:'Poëzie'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.25.0.0.0',label:'Wetenschap'},{id:'1.44.0.0.0',label:'Zingeving, filosofie en religie'}]},{label:'Markt of braderie',id:'0.37.0.0.0',primary:false,themes:[{id:'1.17.0.0.0',label:'Antiek en brocante'},{id:'1.66.0.0.0',label:'Economie'},{id:'1.62.0.0.0',label:'Gezondheid en wellness'},{id:'1.63.0.0.0',label:'Landbouw en platteland'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.37.2.0.0',label:'Samenleving'}]},{label:'Opendeurdag',id:'0.12.0.0.0',primary:true,themes:[{id:'1.2.1.0.0',label:'Architectuur'},{id:'1.21.0.0.0',label:'Computer en techniek'},{id:'1.40.0.0.0',label:'Erfgoed'},{id:'1.41.0.0.0',label:'Kunst en kunsteducatie'},{id:'1.63.0.0.0',label:'Landbouw en platteland'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.25.0.0.0',label:'Wetenschap'}]},{label:'Party of fuif',id:'0.49.0.0.0',primary:false},{label:'Route',id:'0.17.0.0.0',primary:true},{label:'Spel of quiz',id:'0.50.21.0.0',primary:false},{label:'Sport en beweging',id:'0.59.0.0.0',primary:false,themes:[{id:'1.51.14.0.0',label:'Atletiek, wandelen en fietsen'},{id:'1.51.13.0.0',label:'Bal en racketsport'},{id:'1.51.6.0.0',label:'Fitness, gymnastiek, dans en vechtsport'},{id:'1.58.8.0.0',label:'Lucht en motorsport'},{id:'1.51.12.0.0',label:'Omnisport en andere'},{id:'1.51.11.0.0',label:'Outdoor en adventure'},{id:'1.51.10.0.0',label:'Volkssporten'},{id:'1.51.3.0.0',label:'Zwemmen en watersport'}]},{label:'Sportwedstrijd bekijken',id:'0.19.0.0.0',primary:false,themes:[{id:'1.51.14.0.0',label:'Atletiek, wandelen en fietsen'},{id:'1.51.13.0.0',label:'Bal en racketsport'},{id:'1.51.6.0.0',label:'Fitness, gymnastiek, dans en vechtsport'},{id:'1.58.8.0.0',label:'Lucht en motorsport'},{id:'1.51.12.0.0',label:'Omnisport en andere'},{id:'1.51.11.0.0',label:'Outdoor en adventure'},{id:'1.51.10.0.0',label:'Volkssporten'},{id:'1.51.3.0.0',label:'Zwemmen en watersport'}]},{label:'Tentoonstelling',id:'0.0.0.0.0',primary:true,themes:[{id:'1.2.1.0.0',label:'Architectuur'},{id:'1.1.0.0.0',label:'Audiovisuele kunst'},{id:'1.0.2.0.0',label:'Beeldhouwkunst'},{id:'1.0.5.0.0',label:'Decoratieve kunst'},{id:'1.2.2.0.0',label:'Design'},{id:'1.40.0.0.0',label:'Erfgoed'},{id:'1.0.6.0.0',label:'Fotografie'},{id:'1.11.0.0.0',label:'Geschiedenis'},{id:'1.0.4.0.0',label:'Grafiek'},{id:'1.0.3.0.0',label:'Installatiekunst'},{id:'1.10.0.0.0',label:'Literatuur'},{id:'1.0.9.0.0',label:'Meerdere kunstvormen'},{id:'1.64.0.0.0',label:'Milieu en natuur'},{id:'1.49.0.0.0',label:'Mode'},{id:'1.37.2.0.0',label:'Samenleving'},{id:'1.0.1.0.0',label:'Schilderkunst'},{id:'1.25.0.0.0',label:'Wetenschap'}]},{label:'Theatervoorstelling',id:'0.55.0.0.0',primary:false,themes:[{id:'0.52.0.0.0',label:'Circus'},{id:'1.3.5.0.0',label:'Figuren en poppentheater'},{id:'1.3.10.0.0',label:'Humor en comedy'},{id:'1.3.4.0.0',label:'Mime en bewegingstheater'},{id:'1.4.0.0.0',label:'Musical'},{id:'1.5.0.0.0',label:'Opera en operette'},{id:'1.3.1.0.0',label:'Tekst- en muziektheater'}]}])

.constant('placeCategories', [{label:'Archeologische Site',id:'3CuHvenJ+EGkcvhXLg9Ykg',primary:true},{label:'Bibliotheek of documentatiecentrum',id:'kI7uAyn2uUu9VV6Z3uWZTA',primary:true},{label:'Bioscoop',id:'BtVNd33sR0WntjALVbyp3w',primary:false},{label:'Cultuur- of ontmoetingscentrum',id:'Yf4aZBfsUEu2NsQqsprngw',primary:false},{label:'Discotheek',id:'YVBc8KVdrU6XfTNvhMYUpg',primary:false},{label:'Horeca',id:'ekdc4ATGoUitCa0e6me6xA',primary:false},{label:'Jeugdhuis of jeugdcentrum',id:'JCjA0i5COUmdjMwcyjNAFA',primary:false},{label:'Monument',id:'0.14.0.0.0',primary:true},{label:'Museum of galerij',id:'GnPFp9uvOUyqhOckIFMKmg',primary:true},{label:'Natuur, park of tuin',id:'0.15.0.0.0',primary:true},{label:'Openbare ruimte',id:'0.8.0.0.0',primary:false},{label:'Recreatiedomein of centrum',id:'0.53.0.0.0',primary:false},{label:'School of onderwijscentrum',id:'rJRFUqmd6EiqTD4c7HS90w',primary:false},{label:'Sportcentrum',id:'eBwaUAAhw0ur0Z02i5ttnw',primary:false},{label:'Theater',id:'8.70.0.0.0',primary:false},{label:'Thema of pretpark',id:'0.41.0.0.0',primary:false},{label:'Winkel',id:'VRC6HX0Wa063sq98G5ciqw',primary:false},{label:'Zaal of expohal',id:'OyaPaf64AEmEAYXHeLMAtA',primary:false}])

.constant('facilities', {motor:[{label:'Assistentie',id:'3.23.2.0.0'},{label:'Parkeerplaats',id:'3.26.0.0.0'},{label:'Rolstoel ter beschikking',id:'3.23.3.0.0'},{label:'Rolstoelpodium',id:'3.30.0.0.0'},{label:'Rolstoeltoegankelijk',id:'3.27.0.0.0'},{label:'Toegankelijk sanitair',id:'3.31.0.0.0'}],visual:[{label:'Audiodescriptie',id:'3.13.2.0.0'},{label:'Voorzieningen voor assistentiehonden',id:'3.13.1.0.0'}],hearing:[{label:'Boven- of ondertiteling',id:'3.17.3.0.0'},{label:'Ringleiding',id:'3.17.1.0.0'},{label:'Tolken Vlaamse Gebarentaal',id:'3.33.0.0.0'},{label:'Voelstoelen',id:'3.17.2.0.0'}],mental:[{label:'Vereenvoudigde informatie',id:'3.34.0.0.0'}],other:[{label:'1 begeleider gratis',id:'3.35.0.0.0'},{label:'Alternatieve ingang',id:'3.28.0.0.0'},{label:'Begeleiderspas',id:'3.39.0.0.0'},{label:'Contactpunt voor personen met handicap',id:'3.25.0.0.0'},{label:'Gegarandeerd zicht',id:'3.29.0.0.0'},{label:'Inter-assistentie',id:'3.38.0.0.0'},{label:'Inter-events',id:'3.40.0.0.0'},{label:'Stroomvoorziening voor handicap',id:'3.37.0.0.0'},{label:'Verzorgingsruimte',id:'3.36.0.0.0'},{label:'Voorbehouden camping',id:'3.32.0.0.0'}],place:[{label:'Contactpunt voor personen met handicap',id:'3.25.0.0.0'},{label:'Rolstoel ter beschikking',id:'3.23.3.0.0'},{label:'Parkeerplaats',id:'3.26.0.0.0'},{label:'Voorzieningen voor assistentiehonden',id:'3.13.1.0.0'}]})

.constant('citiesBE', [{label:'5680 Vodelée',name:'Vodelée',zip:'5680'},{label:'5680 Vaucelles',name:'Vaucelles',zip:'5680'},{label:'5680 Soulme',name:'Soulme',zip:'5680'},{label:'5680 Romerée',name:'Romerée',zip:'5680'},{label:'5680 Niverlée',name:'Niverlée',zip:'5680'},{label:'5680 Matagne-la-Petite',name:'Matagne-la-Petite',zip:'5680'},{label:'5680 Matagne-la-Grande',name:'Matagne-la-Grande',zip:'5680'},{label:'5680 Gochenée',name:'Gochenée',zip:'5680'},{label:'5680 Gimnée',name:'Gimnée',zip:'5680'},{label:'5680 Doische',name:'Doische',zip:'5680'},{label:'5670 Viroinval',name:'Viroinval',zip:'5670'},{label:'5670 Vierves-sur-Viroin',name:'Vierves-sur-Viroin',zip:'5670'},{label:'5670 Treignes',name:'Treignes',zip:'5670'},{label:'5670 Olloy-sur-Viroin',name:'Olloy-sur-Viroin',zip:'5670'},{label:'5670 Oignies-en-Thiérache',name:'Oignies-en-Thiérache',zip:'5670'},{label:'5670 Nismes',name:'Nismes',zip:'5670'},{label:'5670 Mazée',name:'Mazée',zip:'5670'},{label:'5670 Le Mesnil',name:'Le Mesnil',zip:'5670'},{label:'5670 Dourbes',name:'Dourbes',zip:'5670'},{label:'5660 Presgaux',name:'Presgaux',zip:'5660'},{label:'5660 Petite-Chapelle',name:'Petite-Chapelle',zip:'5660'},{label:'5660 Petigny',name:'Petigny',zip:'5660'},{label:'5660 Pesche',name:'Pesche',zip:'5660'},{label:'5660 Mariembourg',name:'Mariembourg',zip:'5660'},{label:'5660 Gonrieux',name:'Gonrieux',zip:'5660'},{label:'5660 Frasnes Namur',name:'Frasnes Namur',zip:'5660'},{label:'5660 Dailly',name:'Dailly',zip:'5660'},{label:'5660 Cul-des-Sarts',name:'Cul-des-Sarts',zip:'5660'},{label:'5660 Couvin',name:'Couvin',zip:'5660'},{label:'5660 Brûly-de-Pesche',name:'Brûly-de-Pesche',zip:'5660'},{label:'5660 Brûly',name:'Brûly',zip:'5660'},{label:'5660 Boussu-en-Fagne',name:'Boussu-en-Fagne',zip:'5660'},{label:'5660 Aublain',name:'Aublain',zip:'5660'},{label:'5651 Thy-le-Château',name:'Thy-le-Château',zip:'5651'},{label:'5651 Tarcienne',name:'Tarcienne',zip:'5651'},{label:'5651 Somzée',name:'Somzée',zip:'5651'},{label:'5651 Rognée',name:'Rognée',zip:'5651'},{label:'5651 Laneffe',name:'Laneffe',zip:'5651'},{label:'5651 Gourdinne',name:'Gourdinne',zip:'5651'},{label:'5651 Berzée',name:'Berzée',zip:'5651'},{label:'5650 Yves-Gomezée',name:'Yves-Gomezée',zip:'5650'},{label:'5650 Walcourt',name:'Walcourt',zip:'5650'},{label:'5650 Vogenée',name:'Vogenée',zip:'5650'},{label:'5650 Pry',name:'Pry',zip:'5650'},{label:'5650 Fraire',name:'Fraire',zip:'5650'},{label:'5650 Fontenelle',name:'Fontenelle',zip:'5650'},{label:'5650 Clermont Namur',name:'Clermont Namur',zip:'5650'},{label:'5650 Chastrès',name:'Chastrès',zip:'5650'},{label:'5650 Castillon',name:'Castillon',zip:'5650'},{label:'5646 Stave',name:'Stave',zip:'5646'},{label:'5644 Ermeton-sur-Biert',name:'Ermeton-sur-Biert',zip:'5644'},{label:'5641 Furnaux',name:'Furnaux',zip:'5641'},{label:'5640 Saint-Gérard',name:'Saint-Gérard',zip:'5640'},{label:'5640 Oret',name:'Oret',zip:'5640'},{label:'5640 Mettet',name:'Mettet',zip:'5640'},{label:'5640 Graux',name:'Graux',zip:'5640'},{label:'5640 Biesmerée',name:'Biesmerée',zip:'5640'},{label:'5640 Biesme',name:'Biesme',zip:'5640'},{label:'5630 Villers-Deux-Eglises',name:'Villers-Deux-Eglises',zip:'5630'},{label:'5630 Soumoy',name:'Soumoy',zip:'5630'},{label:'5630 Silenrieux',name:'Silenrieux',zip:'5630'},{label:'5630 Senzeille',name:'Senzeille',zip:'5630'},{label:'5630 Daussois',name:'Daussois',zip:'5630'},{label:'5630 Cerfontaine',name:'Cerfontaine',zip:'5630'},{label:'5621 Thy-le-Bauduin',name:'Thy-le-Bauduin',zip:'5621'},{label:'5621 Morialmé',name:'Morialmé',zip:'5621'},{label:'5621 Hanzinne',name:'Hanzinne',zip:'5621'},{label:'5621 Hanzinelle',name:'Hanzinelle',zip:'5621'},{label:'5620 Saint-Aubin',name:'Saint-Aubin',zip:'5620'},{label:'5620 Rosée',name:'Rosée',zip:'5620'},{label:'5620 Morville',name:'Morville',zip:'5620'},{label:'5620 Hemptinne-lez-Florennes',name:'Hemptinne-lez-Florennes',zip:'5620'},{label:'5620 Florennes',name:'Florennes',zip:'5620'},{label:'5620 Flavion',name:'Flavion',zip:'5620'},{label:'5620 Corenne',name:'Corenne',zip:'5620'},{label:'5600 Vodecée',name:'Vodecée',zip:'5600'},{label:'5600 Villers-le-Gambon',name:'Villers-le-Gambon',zip:'5600'},{label:'5600 Villers-en-Fagne',name:'Villers-en-Fagne',zip:'5600'},{label:'5600 Surice',name:'Surice',zip:'5600'},{label:'5600 Sautour',name:'Sautour',zip:'5600'},{label:'5600 Sart-en-Fagne',name:'Sart-en-Fagne',zip:'5600'},{label:'5600 Samart',name:'Samart',zip:'5600'},{label:'5600 Romedenne',name:'Romedenne',zip:'5600'},{label:'5600 Roly',name:'Roly',zip:'5600'},{label:'5600 Philippeville',name:'Philippeville',zip:'5600'},{label:'5600 Omezée',name:'Omezée',zip:'5600'},{label:'5600 Neuville Philippeville',name:'Neuville Philippeville',zip:'5600'},{label:'5600 Merlemont',name:'Merlemont',zip:'5600'},{label:'5600 Jamiolle',name:'Jamiolle',zip:'5600'},{label:'5600 Jamagne',name:'Jamagne',zip:'5600'},{label:'5600 Franchimont',name:'Franchimont',zip:'5600'},{label:'5600 Fagnolle',name:'Fagnolle',zip:'5600'},{label:'5590 Sovet',name:'Sovet',zip:'5590'},{label:'5590 Serinchamps',name:'Serinchamps',zip:'5590'},{label:'5590 Pessoux',name:'Pessoux',zip:'5590'},{label:'5590 Leignon',name:'Leignon',zip:'5590'},{label:'5590 Haversin',name:'Haversin',zip:'5590'},{label:'5590 Conneux',name:'Conneux',zip:'5590'},{label:'5590 Ciney',name:'Ciney',zip:'5590'},{label:'5590 Chevetogne',name:'Chevetogne',zip:'5590'},{label:'5590 Braibant',name:'Braibant',zip:'5590'},{label:'5590 Achêne',name:'Achêne',zip:'5590'},{label:'5580 Wavreille',name:'Wavreille',zip:'5580'},{label:'5580 Villers-sur-Lesse',name:'Villers-sur-Lesse',zip:'5580'},{label:'5580 Rochefort',name:'Rochefort',zip:'5580'},{label:'5580 Mont-Gauthier',name:'Mont-Gauthier',zip:'5580'},{label:'5580 Lessive',name:'Lessive',zip:'5580'},{label:'5580 Lavaux-Sainte-Anne',name:'Lavaux-Sainte-Anne',zip:'5580'},{label:'5580 Jemelle',name:'Jemelle',zip:'5580'},{label:'5580 Han-sur-Lesse',name:'Han-sur-Lesse',zip:'5580'},{label:'5580 Eprave',name:'Eprave',zip:'5580'},{label:'5580 Buissonville',name:'Buissonville',zip:'5580'},{label:'5580 Ave-et-Auffe',name:'Ave-et-Auffe',zip:'5580'},{label:'5575 Willerzie',name:'Willerzie',zip:'5575'},{label:'5575 Vencimont',name:'Vencimont',zip:'5575'},{label:'5575 Sart-Custinne',name:'Sart-Custinne',zip:'5575'},{label:'5575 Rienne',name:'Rienne',zip:'5575'},{label:'5575 Patignies',name:'Patignies',zip:'5575'},{label:'5575 Malvoisin',name:'Malvoisin',zip:'5575'},{label:'5575 Louette-Saint-Pierre',name:'Louette-Saint-Pierre',zip:'5575'},{label:'5575 Louette-Saint-Denis',name:'Louette-Saint-Denis',zip:'5575'},{label:'5575 Houdremont',name:'Houdremont',zip:'5575'},{label:'5575 Gedinne',name:'Gedinne',zip:'5575'},{label:'5575 Bourseigne-Vieille',name:'Bourseigne-Vieille',zip:'5575'},{label:'5575 Bourseigne-Neuve',name:'Bourseigne-Neuve',zip:'5575'},{label:'5576 Froidfontaine',name:'Froidfontaine',zip:'5576'},{label:'5574 Pondrôme',name:'Pondrôme',zip:'5574'},{label:'5573 Martouzin-Neuville',name:'Martouzin-Neuville',zip:'5573'},{label:'5572 Focant',name:'Focant',zip:'5572'},{label:'5571 Wiesme',name:'Wiesme',zip:'5571'},{label:'5570 Winenne',name:'Winenne',zip:'5570'},{label:'5570 Wancennes',name:'Wancennes',zip:'5570'},{label:'5570 Vonêche',name:'Vonêche',zip:'5570'},{label:'5570 Javingue',name:'Javingue',zip:'5570'},{label:'5570 Honnay',name:'Honnay',zip:'5570'},{label:'5570 Feschaux',name:'Feschaux',zip:'5570'},{label:'5570 Felenne',name:'Felenne',zip:'5570'},{label:'5570 Dion',name:'Dion',zip:'5570'},{label:'5570 Beauraing',name:'Beauraing',zip:'5570'},{label:'5570 Baronville',name:'Baronville',zip:'5570'},{label:'5564 Wanlin',name:'Wanlin',zip:'5564'},{label:'5563 Hour',name:'Hour',zip:'5563'},{label:'5562 Custinne',name:'Custinne',zip:'5562'},{label:'5561 Celles Namur',name:'Celles Namur',zip:'5561'},{label:'5560 Mesnil-Saint-Blaise',name:'Mesnil-Saint-Blaise',zip:'5560'},{label:'5560 Mesnil-Eglise',name:'Mesnil-Eglise',zip:'5560'},{label:'5560 Hulsonniaux',name:'Hulsonniaux',zip:'5560'},{label:'5560 Houyet',name:'Houyet',zip:'5560'},{label:'5560 Finnevaux',name:'Finnevaux',zip:'5560'},{label:'5560 Ciergnon',name:'Ciergnon',zip:'5560'},{label:'5555 Petit-Fays',name:'Petit-Fays',zip:'5555'},{label:'5555 Oizy',name:'Oizy',zip:'5555'},{label:'5555 Naomé',name:'Naomé',zip:'5555'},{label:'5555 Monceau-en-Ardenne',name:'Monceau-en-Ardenne',zip:'5555'},{label:'5555 Gros-Fays',name:'Gros-Fays',zip:'5555'},{label:'5555 Graide',name:'Graide',zip:'5555'},{label:'5555 Cornimont',name:'Cornimont',zip:'5555'},{label:'5555 Bièvre',name:'Bièvre',zip:'5555'},{label:'5555 Bellefontaine Namur',name:'Bellefontaine Namur',zip:'5555'},{label:'5555 Baillamont',name:'Baillamont',zip:'5555'},{label:'5550 Vresse-sur-Semois',name:'Vresse-sur-Semois',zip:'5550'},{label:'5550 Sugny',name:'Sugny',zip:'5550'},{label:'5550 Pussemange',name:'Pussemange',zip:'5550'},{label:'5550 Orchimont',name:'Orchimont',zip:'5550'},{label:'5550 Nafraiture',name:'Nafraiture',zip:'5550'},{label:'5550 Mouzaive',name:'Mouzaive',zip:'5550'},{label:'5550 Membre',name:'Membre',zip:'5550'},{label:'5550 Laforêt',name:'Laforêt',zip:'5550'},{label:'5550 Chairière',name:'Chairière',zip:'5550'},{label:'5550 Bohan',name:'Bohan',zip:'5550'},{label:'5550 Bagimont',name:'Bagimont',zip:'5550'},{label:'5550 Alle',name:'Alle',zip:'5550'},{label:'5544 Agimont',name:'Agimont',zip:'5544'},{label:'5543 Heer',name:'Heer',zip:'5543'},{label:'5542 Blaimont',name:'Blaimont',zip:'5542'},{label:'5541 Hastière-par-Delà',name:'Hastière-par-Delà',zip:'5541'},{label:'5540 Waulsort',name:'Waulsort',zip:'5540'},{label:'5540 Hermeton-sur-Meuse',name:'Hermeton-sur-Meuse',zip:'5540'},{label:'5540 Hastière-Lavaux',name:'Hastière-Lavaux',zip:'5540'},{label:'5540 Hastière',name:'Hastière',zip:'5540'},{label:'5537 Warnant',name:'Warnant',zip:'5537'},{label:'5537 Sosoye',name:'Sosoye',zip:'5537'},{label:'5537 Haut-le-Wastia',name:'Haut-le-Wastia',zip:'5537'},{label:'5537 Denée',name:'Denée',zip:'5537'},{label:'5537 Bioul',name:'Bioul',zip:'5537'},{label:'5537 Annevoie-Rouillon',name:'Annevoie-Rouillon',zip:'5537'},{label:'5537 Anhée',name:'Anhée',zip:'5537'},{label:'5530 Yvoir',name:'Yvoir',zip:'5530'},{label:'5530 Spontin',name:'Spontin',zip:'5530'},{label:'5530 Purnode',name:'Purnode',zip:'5530'},{label:'5530 Mont Namur',name:'Mont Namur',zip:'5530'},{label:'5530 Houx',name:'Houx',zip:'5530'},{label:'5530 Godinne',name:'Godinne',zip:'5530'},{label:'5530 Evrehailles',name:'Evrehailles',zip:'5530'},{label:'5530 Durnal',name:'Durnal',zip:'5530'},{label:'5530 Dorinne',name:'Dorinne',zip:'5530'},{label:'5524 Gerin',name:'Gerin',zip:'5524'},{label:'5523 Weillen',name:'Weillen',zip:'5523'},{label:'5523 Sommière',name:'Sommière',zip:'5523'},{label:'5522 Falaën',name:'Falaën',zip:'5522'},{label:'5521 Serville',name:'Serville',zip:'5521'},{label:'5520 Onhaye',name:'Onhaye',zip:'5520'},{label:'5520 Anthée',name:'Anthée',zip:'5520'},{label:'5504 Foy-Notre-Dame',name:'Foy-Notre-Dame',zip:'5504'},{label:'5503 Sorinnes',name:'Sorinnes',zip:'5503'},{label:'5502 Thynes',name:'Thynes',zip:'5502'},{label:'5501 Lisogne',name:'Lisogne',zip:'5501'},{label:'5500 Furfooz',name:'Furfooz',zip:'5500'},{label:'5500 Falmignoul',name:'Falmignoul',zip:'5500'},{label:'5500 Falmagne',name:'Falmagne',zip:'5500'},{label:'5500 Dréhance',name:'Dréhance',zip:'5500'},{label:'5500 Dinant',name:'Dinant',zip:'5500'},{label:'5500 Bouvignes-sur-Meuse',name:'Bouvignes-sur-Meuse',zip:'5500'},{label:'5500 Anseremme',name:'Anseremme',zip:'5500'},{label:'5380 Tillier',name:'Tillier',zip:'5380'},{label:'5380 Pontillas',name:'Pontillas',zip:'5380'},{label:'5380 Noville-les-Bois',name:'Noville-les-Bois',zip:'5380'},{label:'5380 Marchovelette',name:'Marchovelette',zip:'5380'},{label:'5380 Hingeon',name:'Hingeon',zip:'5380'},{label:'5380 Hemptinne Fernelmont',name:'Hemptinne Fernelmont',zip:'5380'},{label:'5380 Franc-Waret',name:'Franc-Waret',zip:'5380'},{label:'5380 Forville',name:'Forville',zip:'5380'},{label:'5380 Fernelmont',name:'Fernelmont',zip:'5380'},{label:'5380 Cortil-Wodon',name:'Cortil-Wodon',zip:'5380'},{label:'5380 Bierwart',name:'Bierwart',zip:'5380'},{label:'5377 Waillet',name:'Waillet',zip:'5377'},{label:'5377 Somme-Leuze',name:'Somme-Leuze',zip:'5377'},{label:'5377 Sinsin',name:'Sinsin',zip:'5377'},{label:'5377 Noiseux',name:'Noiseux',zip:'5377'},{label:'5377 Nettinne',name:'Nettinne',zip:'5377'},{label:'5377 Hogne',name:'Hogne',zip:'5377'},{label:'5377 Heure Namur',name:'Heure Namur',zip:'5377'},{label:'5377 Bonsin',name:'Bonsin',zip:'5377'},{label:'5377 Baillonville',name:'Baillonville',zip:'5377'},{label:'5376 Miécret',name:'Miécret',zip:'5376'},{label:'5374 Maffe',name:'Maffe',zip:'5374'},{label:'5372 Méan',name:'Méan',zip:'5372'},{label:'5370 Verlée',name:'Verlée',zip:'5370'},{label:'5370 Porcheresse Namur',name:'Porcheresse Namur',zip:'5370'},{label:'5370 Jeneffe  Namur',name:'Jeneffe  Namur',zip:'5370'},{label:'5370 Havelange',name:'Havelange',zip:'5370'},{label:'5370 Flostoy',name:'Flostoy',zip:'5370'},{label:'5370 Barvaux-Condroz',name:'Barvaux-Condroz',zip:'5370'},{label:'5364 Schaltin',name:'Schaltin',zip:'5364'},{label:'5363 Emptinne',name:'Emptinne',zip:'5363'},{label:'5362 Achet',name:'Achet',zip:'5362'},{label:'5361 Scy',name:'Scy',zip:'5361'},{label:'5361 Mohiville',name:'Mohiville',zip:'5361'},{label:'5360 Natoye',name:'Natoye',zip:'5360'},{label:'5360 Hamois',name:'Hamois',zip:'5360'},{label:'5354 Jallet',name:'Jallet',zip:'5354'},{label:'5353 Goesnes',name:'Goesnes',zip:'5353'},{label:'5352 Perwez-Haillot',name:'Perwez-Haillot',zip:'5352'},{label:'5351 Haillot',name:'Haillot',zip:'5351'},{label:'5350 Ohey',name:'Ohey',zip:'5350'},{label:'5350 Evelette',name:'Evelette',zip:'5350'},{label:'5340 Sorée',name:'Sorée',zip:'5340'},{label:'5340 Mozet',name:'Mozet',zip:'5340'},{label:'5340 Haltinne',name:'Haltinne',zip:'5340'},{label:'5340 Gesves',name:'Gesves',zip:'5340'},{label:'5340 Faulx-les-Tombes',name:'Faulx-les-Tombes',zip:'5340'},{label:'5336 Courrière',name:'Courrière',zip:'5336'},{label:'5334 Florée',name:'Florée',zip:'5334'},{label:'5333 Sorinne-la-Longue',name:'Sorinne-la-Longue',zip:'5333'},{label:'5332 Crupet',name:'Crupet',zip:'5332'},{label:'5330 Sart-Bernard',name:'Sart-Bernard',zip:'5330'},{label:'5330 Maillen',name:'Maillen',zip:'5330'},{label:'5330 Assesse',name:'Assesse',zip:'5330'},{label:'5310 Waret-la-Chaussée',name:'Waret-la-Chaussée',zip:'5310'},{label:'5310 Upigny',name:'Upigny',zip:'5310'},{label:'5310 Taviers Namur',name:'Taviers Namur',zip:'5310'},{label:'5310 Saint-Germain',name:'Saint-Germain',zip:'5310'},{label:'5310 Noville-sur-Méhaigne',name:'Noville-sur-Méhaigne',zip:'5310'},{label:'5310 Mehaigne',name:'Mehaigne',zip:'5310'},{label:'5310 Longchamps',name:'Longchamps',zip:'5310'},{label:'5310 Liernu',name:'Liernu',zip:'5310'},{label:'5310 Leuze Namur',name:'Leuze Namur',zip:'5310'},{label:'5310 Hanret',name:'Hanret',zip:'5310'},{label:'5310 Eghezée',name:'Eghezée',zip:'5310'},{label:'5310 Dhuy',name:'Dhuy',zip:'5310'},{label:'5310 Branchon',name:'Branchon',zip:'5310'},{label:'5310 Boneffe',name:'Boneffe',zip:'5310'},{label:'5310 Bolinne',name:'Bolinne',zip:'5310'},{label:'5310 Aische-en-Refail',name:'Aische-en-Refail',zip:'5310'},{label:'5300 Vezin',name:'Vezin',zip:'5300'},{label:'5300 Thon',name:'Thon',zip:'5300'},{label:'5300 Seilles',name:'Seilles',zip:'5300'},{label:'5300 Sclayn',name:'Sclayn',zip:'5300'},{label:'5300 Namêche',name:'Namêche',zip:'5300'},{label:'5300 Maizeret',name:'Maizeret',zip:'5300'},{label:'5300 Landenne',name:'Landenne',zip:'5300'},{label:'5300 Coutisse',name:'Coutisse',zip:'5300'},{label:'5300 Bonneville',name:'Bonneville',zip:'5300'},{label:'5300 Andenne',name:'Andenne',zip:'5300'},{label:'5190 Spy',name:'Spy',zip:'5190'},{label:'5190 Saint-Martin',name:'Saint-Martin',zip:'5190'},{label:'5190 Onoz',name:'Onoz',zip:'5190'},{label:'5190 Moustier-sur-Sambre',name:'Moustier-sur-Sambre',zip:'5190'},{label:'5190 Mornimont',name:'Mornimont',zip:'5190'},{label:'5190 Jemeppe-sur-Sambre',name:'Jemeppe-sur-Sambre',zip:'5190'},{label:'5190 Ham-sur-Sambre',name:'Ham-sur-Sambre',zip:'5190'},{label:'5190 Balâtre',name:'Balâtre',zip:'5190'},{label:'5170 Rivière',name:'Rivière',zip:'5170'},{label:'5170 Profondeville',name:'Profondeville',zip:'5170'},{label:'5170 Lustin',name:'Lustin',zip:'5170'},{label:'5170 Lesve',name:'Lesve',zip:'5170'},{label:'5170 Bois-de-Villers',name:'Bois-de-Villers',zip:'5170'},{label:'5170 Arbre Namur',name:'Arbre Namur',zip:'5170'},{label:'5150 Soye Namur',name:'Soye Namur',zip:'5150'},{label:'5150 Franière',name:'Franière',zip:'5150'},{label:'5150 Floriffoux',name:'Floriffoux',zip:'5150'},{label:'5150 Floreffe',name:'Floreffe',zip:'5150'},{label:'5140 Tongrinne',name:'Tongrinne',zip:'5140'},{label:'5140 Sombreffe',name:'Sombreffe',zip:'5140'},{label:'5140 Ligny',name:'Ligny',zip:'5140'},{label:'5140 Boignée',name:'Boignée',zip:'5140'},{label:'5081 Saint-Denis-Bovesse',name:'Saint-Denis-Bovesse',zip:'5081'},{label:'5081 Meux',name:'Meux',zip:'5081'},{label:'5081 Bovesse',name:'Bovesse',zip:'5081'},{label:'5080 Warisoulx',name:'Warisoulx',zip:'5080'},{label:'5080 Villers-lez-Heest',name:'Villers-lez-Heest',zip:'5080'},{label:'5080 Rhisnes',name:'Rhisnes',zip:'5080'},{label:'5080 La Bruyère',name:'La Bruyère',zip:'5080'},{label:'5080 Emines',name:'Emines',zip:'5080'},{label:'5070 Vitrival',name:'Vitrival',zip:'5070'},{label:'5070 Sart-Saint-Laurent',name:'Sart-Saint-Laurent',zip:'5070'},{label:'5070 Sart-Eustache',name:'Sart-Eustache',zip:'5070'},{label:'5070 Le Roux',name:'Le Roux',zip:'5070'},{label:'5070 Fosses-la-Ville',name:'Fosses-la-Ville',zip:'5070'},{label:'5070 Aisemont',name:'Aisemont',zip:'5070'},{label:'5060 Velaine-sur-Sambre',name:'Velaine-sur-Sambre',zip:'5060'},{label:'5060 Tamines',name:'Tamines',zip:'5060'},{label:'5060 Sambreville',name:'Sambreville',zip:'5060'},{label:'5060 Moignelée',name:'Moignelée',zip:'5060'},{label:'5060 Keumiée',name:'Keumiée',zip:'5060'},{label:'5060 Falisolle',name:'Falisolle',zip:'5060'},{label:'5060 Auvelais',name:'Auvelais',zip:'5060'},{label:'5060 Arsimont',name:'Arsimont',zip:'5060'},{label:'5032 Mazy',name:'Mazy',zip:'5032'},{label:'5032 Isnes',name:'Isnes',zip:'5032'},{label:'5032 Corroy-le-Château',name:'Corroy-le-Château',zip:'5032'},{label:'5032 Bothey',name:'Bothey',zip:'5032'},{label:'5032 Bossière',name:'Bossière',zip:'5032'},{label:'5031 Grand-Leez',name:'Grand-Leez',zip:'5031'},{label:'5030 Sauvenière',name:'Sauvenière',zip:'5030'},{label:'5030 Lonzée',name:'Lonzée',zip:'5030'},{label:'5030 Grand-Manil',name:'Grand-Manil',zip:'5030'},{label:'5030 Gembloux',name:'Gembloux',zip:'5030'},{label:'5030 Ernage',name:'Ernage',zip:'5030'},{label:'5030 Beuzet',name:'Beuzet',zip:'5030'},{label:'5101 Loyers',name:'Loyers',zip:'5101'},{label:'5101 Lives-sur-Meuse',name:'Lives-sur-Meuse',zip:'5101'},{label:'5101 Erpent',name:'Erpent',zip:'5101'},{label:'5100 Wierde',name:'Wierde',zip:'5100'},{label:'5100 Wépion',name:'Wépion',zip:'5100'},{label:'5100 Naninne',name:'Naninne',zip:'5100'},{label:'5100 Jambes',name:'Jambes',zip:'5100'},{label:'5100 Dave',name:'Dave',zip:'5100'},{label:'5024 Marche-les-Dames',name:'Marche-les-Dames',zip:'5024'},{label:'5024 Gelbressée',name:'Gelbressée',zip:'5024'},{label:'5022 Cognelée',name:'Cognelée',zip:'5022'},{label:'5021 Boninne',name:'Boninne',zip:'5021'},{label:'5020 Vedrin',name:'Vedrin',zip:'5020'},{label:'5020 Temploux',name:'Temploux',zip:'5020'},{label:'5020 Suarlée',name:'Suarlée',zip:'5020'},{label:'5020 Malonne',name:'Malonne',zip:'5020'},{label:'5020 Flawinne',name:'Flawinne',zip:'5020'},{label:'5020 Daussoulx',name:'Daussoulx',zip:'5020'},{label:'5020 Champion',name:'Champion',zip:'5020'},{label:'5004 Bouge',name:'Bouge',zip:'5004'},{label:'5003 Saint-Marc',name:'Saint-Marc',zip:'5003'},{label:'5002 Saint-Servais',name:'Saint-Servais',zip:'5002'},{label:'5001 Belgrade',name:'Belgrade',zip:'5001'},{label:'5000 Namur',name:'Namur',zip:'5000'},{label:'5000 Beez',name:'Beez',zip:'5000'},{label:'6997 Soy',name:'Soy',zip:'6997'},{label:'6997 Mormont',name:'Mormont',zip:'6997'},{label:'6997 Erezée',name:'Erezée',zip:'6997'},{label:'6997 Amonines',name:'Amonines',zip:'6997'},{label:'6990 Marenne',name:'Marenne',zip:'6990'},{label:'6990 Hotton',name:'Hotton',zip:'6990'},{label:'6990 Hampteau',name:'Hampteau',zip:'6990'},{label:'6990 Fronville',name:'Fronville',zip:'6990'},{label:'6987 Rendeux',name:'Rendeux',zip:'6987'},{label:'6987 Marcourt',name:'Marcourt',zip:'6987'},{label:'6987 Hodister',name:'Hodister',zip:'6987'},{label:'6987 Beffe',name:'Beffe',zip:'6987'},{label:'6986 Halleux',name:'Halleux',zip:'6986'},{label:'6984 Hives',name:'Hives',zip:'6984'},{label:'6983 Ortho',name:'Ortho',zip:'6983'},{label:'6982 Samrée',name:'Samrée',zip:'6982'},{label:'6980 La-Roche-en-Ardenne',name:'La-Roche-en-Ardenne',zip:'6980'},{label:'6980 Beausaint',name:'Beausaint',zip:'6980'},{label:'6972 Erneuville',name:'Erneuville',zip:'6972'},{label:'6971 Champlon',name:'Champlon',zip:'6971'},{label:'6970 Tenneville',name:'Tenneville',zip:'6970'},{label:'6960 Vaux-Chavanne',name:'Vaux-Chavanne',zip:'6960'},{label:'6960 Odeigne',name:'Odeigne',zip:'6960'},{label:'6960 Manhay',name:'Manhay',zip:'6960'},{label:'6960 Malempré',name:'Malempré',zip:'6960'},{label:'6960 Harre',name:'Harre',zip:'6960'},{label:'6960 Grandmenil',name:'Grandmenil',zip:'6960'},{label:'6960 Dochamps',name:'Dochamps',zip:'6960'},{label:'6953 Masbourg',name:'Masbourg',zip:'6953'},{label:'6953 Lesterny',name:'Lesterny',zip:'6953'},{label:'6953 Forrières',name:'Forrières',zip:'6953'},{label:'6953 Ambly',name:'Ambly',zip:'6953'},{label:'6952 Grune',name:'Grune',zip:'6952'},{label:'6951 Bande',name:'Bande',zip:'6951'},{label:'6950 Nassogne',name:'Nassogne',zip:'6950'},{label:'6950 Harsin',name:'Harsin',zip:'6950'},{label:'6941 Villers-Sainte-Gertrude',name:'Villers-Sainte-Gertrude',zip:'6941'},{label:'6941 Tohogne',name:'Tohogne',zip:'6941'},{label:'6941 Izier',name:'Izier',zip:'6941'},{label:'6941 Heyd',name:'Heyd',zip:'6941'},{label:'6941 Borlon',name:'Borlon',zip:'6941'},{label:'6941 Bomal-sur-Ourthe',name:'Bomal-sur-Ourthe',zip:'6941'},{label:'6941 Bende',name:'Bende',zip:'6941'},{label:'6940 Wéris',name:'Wéris',zip:'6940'},{label:'6940 Septon',name:'Septon',zip:'6940'},{label:'6940 Grandhan',name:'Grandhan',zip:'6940'},{label:'6940 Durbuy',name:'Durbuy',zip:'6940'},{label:'6940 Barvaux-sur-Ourthe',name:'Barvaux-sur-Ourthe',zip:'6940'},{label:'6929 Porcheresse Luxembourg',name:'Porcheresse Luxembourg',zip:'6929'},{label:'6929 Haut-Fays',name:'Haut-Fays',zip:'6929'},{label:'6929 Gembes',name:'Gembes',zip:'6929'},{label:'6929 Daverdisse',name:'Daverdisse',zip:'6929'},{label:'6927 Tellin',name:'Tellin',zip:'6927'},{label:'6927 Resteigne',name:'Resteigne',zip:'6927'},{label:'6927 Grupont',name:'Grupont',zip:'6927'},{label:'6927 Bure',name:'Bure',zip:'6927'},{label:'6924 Lomprez',name:'Lomprez',zip:'6924'},{label:'6922 Halma',name:'Halma',zip:'6922'},{label:'6921 Chanly',name:'Chanly',zip:'6921'},{label:'6920 Wellin',name:'Wellin',zip:'6920'},{label:'6920 Sohier',name:'Sohier',zip:'6920'},{label:'6900 Waha',name:'Waha',zip:'6900'},{label:'6900 Roy',name:'Roy',zip:'6900'},{label:'6900 On',name:'On',zip:'6900'},{label:'6900 Marche-en-Famenne',name:'Marche-en-Famenne',zip:'6900'},{label:'6900 Humain',name:'Humain',zip:'6900'},{label:'6900 Hargimont',name:'Hargimont',zip:'6900'},{label:'6900 Aye',name:'Aye',zip:'6900'},{label:'6890 Villance',name:'Villance',zip:'6890'},{label:'6890 Transinne',name:'Transinne',zip:'6890'},{label:'6890 Smuid',name:'Smuid',zip:'6890'},{label:'6890 Redu',name:'Redu',zip:'6890'},{label:'6890 Ochamps',name:'Ochamps',zip:'6890'},{label:'6890 Libin',name:'Libin',zip:'6890'},{label:'6890 Anloy',name:'Anloy',zip:'6890'},{label:'6887 Straimont',name:'Straimont',zip:'6887'},{label:'6887 Saint-Médard',name:'Saint-Médard',zip:'6887'},{label:'6887 Herbeumont',name:'Herbeumont',zip:'6887'},{label:'6880 Orgeo',name:'Orgeo',zip:'6880'},{label:'6880 Jehonville',name:'Jehonville',zip:'6880'},{label:'6880 Cugnon',name:'Cugnon',zip:'6880'},{label:'6880 Bertrix',name:'Bertrix',zip:'6880'},{label:'6880 Auby-sur-Semois',name:'Auby-sur-Semois',zip:'6880'},{label:'6870 Vesqueville',name:'Vesqueville',zip:'6870'},{label:'6870 Saint-Hubert',name:'Saint-Hubert',zip:'6870'},{label:'6870 Mirwart',name:'Mirwart',zip:'6870'},{label:'6870 Hatrival',name:'Hatrival',zip:'6870'},{label:'6870 Awenne',name:'Awenne',zip:'6870'},{label:'6870 Arville',name:'Arville',zip:'6870'},{label:'6860 Witry',name:'Witry',zip:'6860'},{label:'6860 Mellier',name:'Mellier',zip:'6860'},{label:'6860 Léglise',name:'Léglise',zip:'6860'},{label:'6860 Ebly',name:'Ebly',zip:'6860'},{label:'6860 Assenois',name:'Assenois',zip:'6860'},{label:'6856 Fays-les-Veneurs',name:'Fays-les-Veneurs',zip:'6856'},{label:'6853 Framont',name:'Framont',zip:'6853'},{label:'6852 Opont',name:'Opont',zip:'6852'},{label:'6852 Maissin',name:'Maissin',zip:'6852'},{label:'6851 Nollevaux',name:'Nollevaux',zip:'6851'},{label:'6850 Paliseul',name:'Paliseul',zip:'6850'},{label:'6850 Offagne',name:'Offagne',zip:'6850'},{label:'6850 Carlsbourg',name:'Carlsbourg',zip:'6850'},{label:'6840 Tournay',name:'Tournay',zip:'6840'},{label:'6840 Neufchâteau',name:'Neufchâteau',zip:'6840'},{label:'6840 Longlier',name:'Longlier',zip:'6840'},{label:'6840 Hamipré',name:'Hamipré',zip:'6840'},{label:'6840 Grapfontaine',name:'Grapfontaine',zip:'6840'},{label:'6840 Grandvoir',name:'Grandvoir',zip:'6840'},{label:'6838 Corbion',name:'Corbion',zip:'6838'},{label:'6836 Dohan',name:'Dohan',zip:'6836'},{label:'6834 Bellevaux',name:'Bellevaux',zip:'6834'},{label:'6833 Vivy',name:'Vivy',zip:'6833'},{label:'6833 Ucimont',name:'Ucimont',zip:'6833'},{label:'6832 Sensenruth',name:'Sensenruth',zip:'6832'},{label:'6831 Noirefontaine',name:'Noirefontaine',zip:'6831'},{label:'6830 Rochehaut',name:'Rochehaut',zip:'6830'},{label:'6830 Poupehan',name:'Poupehan',zip:'6830'},{label:'6830 Les Hayons',name:'Les Hayons',zip:'6830'},{label:'6830 Bouillon',name:'Bouillon',zip:'6830'},{label:'6824 Chassepierre',name:'Chassepierre',zip:'6824'},{label:'6823 Villers-devant-Orval',name:'Villers-devant-Orval',zip:'6823'},{label:'6821 Lacuisine',name:'Lacuisine',zip:'6821'},{label:'6820 Sainte-Cécile',name:'Sainte-Cécile',zip:'6820'},{label:'6820 Muno',name:'Muno',zip:'6820'},{label:'6820 Fontenoille',name:'Fontenoille',zip:'6820'},{label:'6820 Florenville',name:'Florenville',zip:'6820'},{label:'6813 Termes',name:'Termes',zip:'6813'},{label:'6812 Suxy',name:'Suxy',zip:'6812'},{label:'6811 Les Bulles',name:'Les Bulles',zip:'6811'},{label:'6810 Jamoigne',name:'Jamoigne',zip:'6810'},{label:'6810 Izel',name:'Izel',zip:'6810'},{label:'6810 Chiny',name:'Chiny',zip:'6810'},{label:'6800 Saint-Pierre',name:'Saint-Pierre',zip:'6800'},{label:'6800 Sainte-Marie-Chevigny',name:'Sainte-Marie-Chevigny',zip:'6800'},{label:'6800 Remagne',name:'Remagne',zip:'6800'},{label:'6800 Recogne',name:'Recogne',zip:'6800'},{label:'6800 Moircy',name:'Moircy',zip:'6800'},{label:'6800 Libramont-Chevigny',name:'Libramont-Chevigny',zip:'6800'},{label:'6800 Libramont',name:'Libramont',zip:'6800'},{label:'6800 Freux',name:'Freux',zip:'6800'},{label:'6800 Bras',name:'Bras',zip:'6800'},{label:'6792 Rachecourt',name:'Rachecourt',zip:'6792'},{label:'6792 Halanzy',name:'Halanzy',zip:'6792'},{label:'6791 Athus',name:'Athus',zip:'6791'},{label:'6790 Aubange',name:'Aubange',zip:'6790'},{label:'6782 Habergy',name:'Habergy',zip:'6782'},{label:'6781 Sélange',name:'Sélange',zip:'6781'},{label:'6780 Wolkrange',name:'Wolkrange',zip:'6780'},{label:'6780 Messancy',name:'Messancy',zip:'6780'},{label:'6780 Hondelange',name:'Hondelange',zip:'6780'},{label:'6769 Villers-la-Loue',name:'Villers-la-Loue',zip:'6769'},{label:'6769 Sommethonne',name:'Sommethonne',zip:'6769'},{label:'6769 Robelmont',name:'Robelmont',zip:'6769'},{label:'6769 Meix-devant-Virton',name:'Meix-devant-Virton',zip:'6769'},{label:'6769 Gérouville',name:'Gérouville',zip:'6769'},{label:'6767 Torgny',name:'Torgny',zip:'6767'},{label:'6767 Rouvroy',name:'Rouvroy',zip:'6767'},{label:'6767 Lamorteau',name:'Lamorteau',zip:'6767'},{label:'6767 Harnoncourt',name:'Harnoncourt',zip:'6767'},{label:'6767 Dampicourt',name:'Dampicourt',zip:'6767'},{label:'6762 Saint-Mard',name:'Saint-Mard',zip:'6762'},{label:'6761 Latour',name:'Latour',zip:'6761'},{label:'6760 Virton',name:'Virton',zip:'6760'},{label:'6760 Ruette',name:'Ruette',zip:'6760'},{label:'6760 Ethe',name:'Ethe',zip:'6760'},{label:'6760 Bleid',name:'Bleid',zip:'6760'},{label:'6750 Signeulx',name:'Signeulx',zip:'6750'},{label:'6750 Mussy-la-Ville',name:'Mussy-la-Ville',zip:'6750'},{label:'6750 Musson',name:'Musson',zip:'6750'},{label:'6747 Saint-Léger Luxembourg',name:'Saint-Léger Luxembourg',zip:'6747'},{label:'6747 Meix-le-Tige',name:'Meix-le-Tige',zip:'6747'},{label:'6747 Châtillon',name:'Châtillon',zip:'6747'},{label:'6743 Buzenol',name:'Buzenol',zip:'6743'},{label:'6742 Chantemelle',name:'Chantemelle',zip:'6742'},{label:'6741 Vance',name:'Vance',zip:'6741'},{label:'6740 Villers-sur-Semois',name:'Villers-sur-Semois',zip:'6740'},{label:'6740 Sainte-Marie-sur-Semois',name:'Sainte-Marie-sur-Semois',zip:'6740'},{label:'6740 Etalle',name:'Etalle',zip:'6740'},{label:'6730 Tintigny',name:'Tintigny',zip:'6730'},{label:'6730 Saint-Vincent',name:'Saint-Vincent',zip:'6730'},{label:'6730 Rossignol',name:'Rossignol',zip:'6730'},{label:'6730 Bellefontaine Luxembourg',name:'Bellefontaine Luxembourg',zip:'6730'},{label:'6724 Rulles',name:'Rulles',zip:'6724'},{label:'6724 Marbehan Luxembourg',name:'Marbehan Luxembourg',zip:'6724'},{label:'6724 Houdemont',name:'Houdemont',zip:'6724'},{label:'6723 Habay-la-Vieille',name:'Habay-la-Vieille',zip:'6723'},{label:'6721 Anlier',name:'Anlier',zip:'6721'},{label:'6720 Hachy',name:'Hachy',zip:'6720'},{label:'6720 Habay-la-Neuve',name:'Habay-la-Neuve',zip:'6720'},{label:'6720 Habay',name:'Habay',zip:'6720'},{label:'6717 Tontelange',name:'Tontelange',zip:'6717'},{label:'6717 Thiaumont',name:'Thiaumont',zip:'6717'},{label:'6717 Nothomb',name:'Nothomb',zip:'6717'},{label:'6717 Nobressart',name:'Nobressart',zip:'6717'},{label:'6717 Attert',name:'Attert',zip:'6717'},{label:'6706 Autelbas',name:'Autelbas',zip:'6706'},{label:'6704 Guirsch',name:'Guirsch',zip:'6704'},{label:'6700 Toernich',name:'Toernich',zip:'6700'},{label:'6700 Heinsch',name:'Heinsch',zip:'6700'},{label:'6700 Bonnert',name:'Bonnert',zip:'6700'},{label:'6700 Arlon',name:'Arlon',zip:'6700'},{label:'6698 Grand-Halleux',name:'Grand-Halleux',zip:'6698'},{label:'6692 Petit-Thier',name:'Petit-Thier',zip:'6692'},{label:'6690 Vielsalm',name:'Vielsalm',zip:'6690'},{label:'6690 Bihain',name:'Bihain',zip:'6690'},{label:'6688 Longchamps Luxembourg',name:'Longchamps Luxembourg',zip:'6688'},{label:'6687 Bertogne',name:'Bertogne',zip:'6687'},{label:'6686 Flamierge',name:'Flamierge',zip:'6686'},{label:'6681 Lavacherie',name:'Lavacherie',zip:'6681'},{label:'6680 Tillet',name:'Tillet',zip:'6680'},{label:'6680 Sainte-Ode',name:'Sainte-Ode',zip:'6680'},{label:'6680 Amberloup',name:'Amberloup',zip:'6680'},{label:'6674 Montleban',name:'Montleban',zip:'6674'},{label:'6673 Cherain',name:'Cherain',zip:'6673'},{label:'6672 Beho',name:'Beho',zip:'6672'},{label:'6671 Bovigny',name:'Bovigny',zip:'6671'},{label:'6670 Limerlé',name:'Limerlé',zip:'6670'},{label:'6670 Gouvy',name:'Gouvy',zip:'6670'},{label:'6666 Wibrin',name:'Wibrin',zip:'6666'},{label:'6663 Mabompré',name:'Mabompré',zip:'6663'},{label:'6662 Tavigny',name:'Tavigny',zip:'6662'},{label:'6661 Tailles',name:'Tailles',zip:'6661'},{label:'6661 Mont Luxembourg',name:'Mont Luxembourg',zip:'6661'},{label:'6660 Nadrin',name:'Nadrin',zip:'6660'},{label:'6660 Houffalize',name:'Houffalize',zip:'6660'},{label:'6642 Juseret',name:'Juseret',zip:'6642'},{label:'6640 Vaux-sur-Sûre',name:'Vaux-sur-Sûre',zip:'6640'},{label:'6640 Vaux-lez-Rosières',name:'Vaux-lez-Rosières',zip:'6640'},{label:'6640 Sibret',name:'Sibret',zip:'6640'},{label:'6640 Nives',name:'Nives',zip:'6640'},{label:'6640 Morhet',name:'Morhet',zip:'6640'},{label:'6640 Hompré',name:'Hompré',zip:'6640'},{label:'6637 Tintange',name:'Tintange',zip:'6637'},{label:'6637 Hollange',name:'Hollange',zip:'6637'},{label:'6637 Fauvillers',name:'Fauvillers',zip:'6637'},{label:'6630 Martelange',name:'Martelange',zip:'6630'},{label:'6600 Wardin',name:'Wardin',zip:'6600'},{label:'6600 Villers-la-Bonne-Eau',name:'Villers-la-Bonne-Eau',zip:'6600'},{label:'6600 Noville Luxembourg',name:'Noville Luxembourg',zip:'6600'},{label:'6600 Longvilly',name:'Longvilly',zip:'6600'},{label:'6600 Bastogne',name:'Bastogne',zip:'6600'},{label:'1495 Villers-la-Ville',name:'Villers-la-Ville',zip:'1495'},{label:'1495 Tilly',name:'Tilly',zip:'1495'},{label:'1495 Sart-Dames-Avelines',name:'Sart-Dames-Avelines',zip:'1495'},{label:'1495 Mellery',name:'Mellery',zip:'1495'},{label:'1495 Marbais Br.W.',name:'Marbais Br.W.',zip:'1495'},{label:'1490 Court-Saint-Etienne',name:'Court-Saint-Etienne',zip:'1490'},{label:'1480 Tubize',name:'Tubize',zip:'1480'},{label:'1480 Saintes',name:'Saintes',zip:'1480'},{label:'1480 Oisquercq',name:'Oisquercq',zip:'1480'},{label:'1480 Clabecq',name:'Clabecq',zip:'1480'},{label:'1476 Houtain-le-Val',name:'Houtain-le-Val',zip:'1476'},{label:'1474 Ways',name:'Ways',zip:'1474'},{label:'1473 Glabais',name:'Glabais',zip:'1473'},{label:'1472 Vieux-Genappe',name:'Vieux-Genappe',zip:'1472'},{label:'1471 Loupoigne',name:'Loupoigne',zip:'1471'},{label:'1470 Genappe',name:'Genappe',zip:'1470'},{label:'1470 Bousval',name:'Bousval',zip:'1470'},{label:'1470 Baisy-Thy',name:'Baisy-Thy',zip:'1470'},{label:'1461 Haut-Ittre',name:'Haut-Ittre',zip:'1461'},{label:'1460 Virginal-Samme',name:'Virginal-Samme',zip:'1460'},{label:'1460 Ittre',name:'Ittre',zip:'1460'},{label:'1457 Walhain-Saint-Paul',name:'Walhain-Saint-Paul',zip:'1457'},{label:'1457 Walhain',name:'Walhain',zip:'1457'},{label:'1457 Tourinnes-Saint-Lambert',name:'Tourinnes-Saint-Lambert',zip:'1457'},{label:'1457 Nil-Saint-Vincent-Saint-Martin',name:'Nil-Saint-Vincent-Saint-Martin',zip:'1457'},{label:'1450 Saint-Géry',name:'Saint-Géry',zip:'1450'},{label:'1450 Gentinnes',name:'Gentinnes',zip:'1450'},{label:'1450 Cortil-Noirmont',name:'Cortil-Noirmont',zip:'1450'},{label:'1450 Chastre-Villeroux-Blanmont',name:'Chastre-Villeroux-Blanmont',zip:'1450'},{label:'1450 Chastre',name:'Chastre',zip:'1450'},{label:'1440 Wauthier-Braine',name:'Wauthier-Braine',zip:'1440'},{label:'1440 Braine-le-Château',name:'Braine-le-Château',zip:'1440'},{label:'1435 Mont-Saint-Guibert',name:'Mont-Saint-Guibert',zip:'1435'},{label:'1435 Hévillers',name:'Hévillers',zip:'1435'},{label:'1435 Corbais',name:'Corbais',zip:'1435'},{label:'1430 Rebecq-Rognon',name:'Rebecq-Rognon',zip:'1430'},{label:'1430 Rebecq',name:'Rebecq',zip:'1430'},{label:'1430 Quenast',name:'Quenast',zip:'1430'},{label:'1430 Bierghes',name:'Bierghes',zip:'1430'},{label:'1428 Lillois-Witterzée',name:'Lillois-Witterzée',zip:'1428'},{label:'1421 Ophain-Bois-Seigneur-Isaac',name:'Ophain-Bois-Seigneur-Isaac',zip:'1421'},{label:'1410 Waterloo',name:'Waterloo',zip:'1410'},{label:'1404 Bornival',name:'Bornival',zip:'1404'},{label:'1402 Thines',name:'Thines',zip:'1402'},{label:'1401 Baulers',name:'Baulers',zip:'1401'},{label:'1400 Nivelles',name:'Nivelles',zip:'1400'},{label:'1400 Monstreux',name:'Monstreux',zip:'1400'},{label:'1390 Nethen',name:'Nethen',zip:'1390'},{label:'1390 Grez-Doiceau',name:'Grez-Doiceau',zip:'1390'},{label:'1390 Bossut-Gottechain',name:'Bossut-Gottechain',zip:'1390'},{label:'1390 Biez',name:'Biez',zip:'1390'},{label:'1390 Archennes',name:'Archennes',zip:'1390'},{label:'1380 Plancenoit',name:'Plancenoit',zip:'1380'},{label:'1380 Ohain',name:'Ohain',zip:'1380'},{label:'1380 Maransart',name:'Maransart',zip:'1380'},{label:'1380 Lasne-Chapelle-Saint-Lambert',name:'Lasne-Chapelle-Saint-Lambert',zip:'1380'},{label:'1380 Lasne',name:'Lasne',zip:'1380'},{label:'1380 Couture-Saint-Germain',name:'Couture-Saint-Germain',zip:'1380'},{label:'1370 Zétrud-Lumay',name:'Zétrud-Lumay',zip:'1370'},{label:'1370 Saint-Remy-Geest',name:'Saint-Remy-Geest',zip:'1370'},{label:'1370 Saint-Jean-Geest',name:'Saint-Jean-Geest',zip:'1370'},{label:'1370 Piétrain',name:'Piétrain',zip:'1370'},{label:'1370 Mélin',name:'Mélin',zip:'1370'},{label:'1370 Lathuy',name:'Lathuy',zip:'1370'},{label:'1370 Jodoigne-Souveraine',name:'Jodoigne-Souveraine',zip:'1370'},{label:'1370 Jodoigne',name:'Jodoigne',zip:'1370'},{label:'1370 Jauchelette',name:'Jauchelette',zip:'1370'},{label:'1370 Dongelberg',name:'Dongelberg',zip:'1370'},{label:'1367 Ramillies-Offus',name:'Ramillies-Offus',zip:'1367'},{label:'1367 Mont-Saint-André',name:'Mont-Saint-André',zip:'1367'},{label:'1367 Huppaye',name:'Huppaye',zip:'1367'},{label:'1367 Grand-Rosière-Hottomont',name:'Grand-Rosière-Hottomont',zip:'1367'},{label:'1367 Gérompont',name:'Gérompont',zip:'1367'},{label:'1367 Geest-Gérompont-Petit-Rosière',name:'Geest-Gérompont-Petit-Rosière',zip:'1367'},{label:'1367 Bomal Br.W.',name:'Bomal Br.W.',zip:'1367'},{label:'1367 Autre-Eglise',name:'Autre-Eglise',zip:'1367'},{label:'1360 Thorembais-Saint-Trond',name:'Thorembais-Saint-Trond',zip:'1360'},{label:'1360 Thorembais-les-Béguines',name:'Thorembais-les-Béguines',zip:'1360'},{label:'1360 Perwez',name:'Perwez',zip:'1360'},{label:'1360 Orbais',name:'Orbais',zip:'1360'},{label:'1360 Malèves-Sainte-Marie-Wastines',name:'Malèves-Sainte-Marie-Wastines',zip:'1360'},{label:'1357 Opheylissem',name:'Opheylissem',zip:'1357'},{label:'1357 Neerheylissem',name:'Neerheylissem',zip:'1357'},{label:'1357 Linsmeau',name:'Linsmeau',zip:'1357'},{label:'1357 Hélécine',name:'Hélécine',zip:'1357'},{label:'1350 Orp-le-Grand',name:'Orp-le-Grand',zip:'1350'},{label:'1350 Orp-Jauche',name:'Orp-Jauche',zip:'1350'},{label:'1350 Noduwez',name:'Noduwez',zip:'1350'},{label:'1350 Marilles',name:'Marilles',zip:'1350'},{label:'1350 Jauche',name:'Jauche',zip:'1350'},{label:'1350 Jandrain-Jandrenouille',name:'Jandrain-Jandrenouille',zip:'1350'},{label:'1350 Folx-les-Caves',name:'Folx-les-Caves',zip:'1350'},{label:'1350 Enines',name:'Enines',zip:'1350'},{label:'1348 Louvain-la-Neuve',name:'Louvain-la-Neuve',zip:'1348'},{label:'1342 Limelette',name:'Limelette',zip:'1342'},{label:'1341 Céroux-Mousty',name:'Céroux-Mousty',zip:'1341'},{label:'1340 Ottignies-Louvain-la-Neuve',name:'Ottignies-Louvain-la-Neuve',zip:'1340'},{label:'1340 Ottignies',name:'Ottignies',zip:'1340'},{label:'1332 Genval',name:'Genval',zip:'1332'},{label:'1331 Rosières',name:'Rosières',zip:'1331'},{label:'1330 Rixensart',name:'Rixensart',zip:'1330'},{label:'1325 Longueville',name:'Longueville',zip:'1325'},{label:'1325 Dion-Valmont',name:'Dion-Valmont',zip:'1325'},{label:'1325 Corroy-le-Grand',name:'Corroy-le-Grand',zip:'1325'},{label:'1325 Chaumont-Gistoux',name:'Chaumont-Gistoux',zip:'1325'},{label:'1325 Bonlez',name:'Bonlez',zip:'1325'},{label:'1320 Tourinnes-la-Grosse',name:'Tourinnes-la-Grosse',zip:'1320'},{label:'1320 Nodebais',name:'Nodebais',zip:'1320'},{label:'1320 Hamme-Mille',name:'Hamme-Mille',zip:'1320'},{label:'1320 Beauvechain',name:'Beauvechain',zip:'1320'},{label:'1315 Roux-Miroir',name:'Roux-Miroir',zip:'1315'},{label:'1315 Piétrebais',name:'Piétrebais',zip:'1315'},{label:'1315 Opprebais',name:'Opprebais',zip:'1315'},{label:'1315 Incourt',name:'Incourt',zip:'1315'},{label:'1315 Glimes',name:'Glimes',zip:'1315'},{label:'1310 La Hulpe',name:'La Hulpe',zip:'1310'},{label:'1301 Bierges',name:'Bierges',zip:'1301'},{label:'1300 Wavre',name:'Wavre',zip:'1300'},{label:'1300 Limal',name:'Limal',zip:'1300'},{label:'4990 Lierneux',name:'Lierneux',zip:'4990'},{label:'4990 Bra',name:'Bra',zip:'4990'},{label:'4990 Arbrefontaine',name:'Arbrefontaine',zip:'4990'},{label:'4987 Stoumont',name:'Stoumont',zip:'4987'},{label:'4987 Rahier',name:'Rahier',zip:'4987'},{label:'4987 Lorcé',name:'Lorcé',zip:'4987'},{label:'4987 La Gleize',name:'La Gleize',zip:'4987'},{label:'4987 Chevron',name:'Chevron',zip:'4987'},{label:'4983 Basse-Bodeux',name:'Basse-Bodeux',zip:'4983'},{label:'4980 Wanne',name:'Wanne',zip:'4980'},{label:'4980 Trois-Ponts',name:'Trois-Ponts',zip:'4980'},{label:'4980 Fosse Liège',name:'Fosse Liège',zip:'4980'},{label:'4970 Stavelot',name:'Stavelot',zip:'4970'},{label:'4970 Francorchamps',name:'Francorchamps',zip:'4970'},{label:'4960 Malmedy',name:'Malmedy',zip:'4960'},{label:'4960 Bevercé',name:'Bevercé',zip:'4960'},{label:'4960 Bellevaux-Ligneuville',name:'Bellevaux-Ligneuville',zip:'4960'},{label:'4950 Waimes/Weismes',name:'Waimes/Weismes',zip:'4950'},{label:'4950 Sourbrodt',name:'Sourbrodt',zip:'4950'},{label:'4950 Robertville',name:'Robertville',zip:'4950'},{label:'4950 Faymonville',name:'Faymonville',zip:'4950'},{label:'4920 Sougné-Remouchamps',name:'Sougné-Remouchamps',zip:'4920'},{label:'4920 Harzé',name:'Harzé',zip:'4920'},{label:'4920 Ernonheid',name:'Ernonheid',zip:'4920'},{label:'4920 Aywaille',name:'Aywaille',zip:'4920'},{label:'4910 Theux',name:'Theux',zip:'4910'},{label:'4910 Polleur',name:'Polleur',zip:'4910'},{label:'4910 La Reid',name:'La Reid',zip:'4910'},{label:'4900 Spa',name:'Spa',zip:'4900'},{label:'4890 Thimister-Clermont',name:'Thimister-Clermont',zip:'4890'},{label:'4890 Thimister',name:'Thimister',zip:'4890'},{label:'4890 Clermont Liège',name:'Clermont Liège',zip:'4890'},{label:'4880 Aubel',name:'Aubel',zip:'4880'},{label:'4877 Olne',name:'Olne',zip:'4877'},{label:'4870 Trooz',name:'Trooz',zip:'4870'},{label:'4870 Nessonvaux',name:'Nessonvaux',zip:'4870'},{label:'4870 Fraipont',name:'Fraipont',zip:'4870'},{label:'4870 Forêt',name:'Forêt',zip:'4870'},{label:'4861 Soiron',name:'Soiron',zip:'4861'},{label:'4860 Wegnez',name:'Wegnez',zip:'4860'},{label:'4860 Pepinster',name:'Pepinster',zip:'4860'},{label:'4860 Cornesse',name:'Cornesse',zip:'4860'},{label:'4852 Hombourg',name:'Hombourg',zip:'4852'},{label:'4851 Sippenaeken',name:'Sippenaeken',zip:'4851'},{label:'4851 Gemmenich',name:'Gemmenich',zip:'4851'},{label:'4850 Plombières',name:'Plombières',zip:'4850'},{label:'4850 Moresnet',name:'Moresnet',zip:'4850'},{label:'4850 Montzen',name:'Montzen',zip:'4850'},{label:'4845 Sart-lez-Spa',name:'Sart-lez-Spa',zip:'4845'},{label:'4845 Jalhay',name:'Jalhay',zip:'4845'},{label:'4841 Henri-Chapelle',name:'Henri-Chapelle',zip:'4841'},{label:'4840 Welkenraedt',name:'Welkenraedt',zip:'4840'},{label:'4837 Membach',name:'Membach',zip:'4837'},{label:'4837 Baelen Liège',name:'Baelen Liège',zip:'4837'},{label:'4834 Goé',name:'Goé',zip:'4834'},{label:'4831 Bilstain',name:'Bilstain',zip:'4831'},{label:'4830 Limbourg',name:'Limbourg',zip:'4830'},{label:'4821 Andrimont',name:'Andrimont',zip:'4821'},{label:'4820 Dison',name:'Dison',zip:'4820'},{label:'4802 Heusy',name:'Heusy',zip:'4802'},{label:'4801 Stembert',name:'Stembert',zip:'4801'},{label:'4800 Verviers',name:'Verviers',zip:'4800'},{label:'4800 Petit-Rechain',name:'Petit-Rechain',zip:'4800'},{label:'4800 Lambermont',name:'Lambermont',zip:'4800'},{label:'4800 Ensival',name:'Ensival',zip:'4800'},{label:'4791 Thommen',name:'Thommen',zip:'4791'},{label:'4790 Reuland',name:'Reuland',zip:'4790'},{label:'4790 Burg-Reuland',name:'Burg-Reuland',zip:'4790'},{label:'4784 Crombach',name:'Crombach',zip:'4784'},{label:'4783 Lommersweiler',name:'Lommersweiler',zip:'4783'},{label:'4782 Schönberg/Schoenberg',name:'Schönberg/Schoenberg',zip:'4782'},{label:'4780 Sankt Vith/Saint-Vith',name:'Sankt Vith/Saint-Vith',zip:'4780'},{label:'4780 Recht',name:'Recht',zip:'4780'},{label:'4771 Heppenbach',name:'Heppenbach',zip:'4771'},{label:'4770 Meyerode',name:'Meyerode',zip:'4770'},{label:'4770 Amel/Amblève',name:'Amel/Amblève',zip:'4770'},{label:'4761 Rocherath',name:'Rocherath',zip:'4761'},{label:'4760 Manderfeld',name:'Manderfeld',zip:'4760'},{label:'4760 Büllingen/Bullange',name:'Büllingen/Bullange',zip:'4760'},{label:'4750 Elsenborn',name:'Elsenborn',zip:'4750'},{label:'4750 Bütgenbach/Butgenbach',name:'Bütgenbach/Butgenbach',zip:'4750'},{label:'4731 Eynatten',name:'Eynatten',zip:'4731'},{label:'4730 Raeren',name:'Raeren',zip:'4730'},{label:'4730 Hauset',name:'Hauset',zip:'4730'},{label:'4728 Hergenrath',name:'Hergenrath',zip:'4728'},{label:'4721 Neu-Moresnet',name:'Neu-Moresnet',zip:'4721'},{label:'4720 Kelmis/La Calamine',name:'Kelmis/La Calamine',zip:'4720'},{label:'4711 Walhorn',name:'Walhorn',zip:'4711'},{label:'4710 Lontzen',name:'Lontzen',zip:'4710'},{label:'4701 Kettenis',name:'Kettenis',zip:'4701'},{label:'4700 Eupen',name:'Eupen',zip:'4700'},{label:'4690 Wonck',name:'Wonck',zip:'4690'},{label:'4690 Roclenge-sur-Geer',name:'Roclenge-sur-Geer',zip:'4690'},{label:'4690 Glons',name:'Glons',zip:'4690'},{label:'4690 Eben-Emael',name:'Eben-Emael',zip:'4690'},{label:'4690 Boirs',name:'Boirs',zip:'4690'},{label:'4690 Bassenge',name:'Bassenge',zip:'4690'},{label:'4684 Haccourt',name:'Haccourt',zip:'4684'},{label:'4683 Vivegnis',name:'Vivegnis',zip:'4683'},{label:'4682 Houtain-Saint-Siméon',name:'Houtain-Saint-Siméon',zip:'4682'},{label:'4682 Heure-le-Romain',name:'Heure-le-Romain',zip:'4682'},{label:'4681 Hermalle-sous-Argenteau',name:'Hermalle-sous-Argenteau',zip:'4681'},{label:'4680 Oupeye',name:'Oupeye',zip:'4680'},{label:'4680 Hermée',name:'Hermée',zip:'4680'},{label:'4672 Saint-Remy Liège',name:'Saint-Remy Liège',zip:'4672'},{label:'4671 Saive',name:'Saive',zip:'4671'},{label:'4671 Housse',name:'Housse',zip:'4671'},{label:'4671 Barchon',name:'Barchon',zip:'4671'},{label:'4670 Trembleur',name:'Trembleur',zip:'4670'},{label:'4670 Mortier',name:'Mortier',zip:'4670'},{label:'4670 Blégny',name:'Blégny',zip:'4670'},{label:'4654 Charneux',name:'Charneux',zip:'4654'},{label:'4653 Bolland',name:'Bolland',zip:'4653'},{label:'4652 Xhendelesse',name:'Xhendelesse',zip:'4652'},{label:'4651 Battice',name:'Battice',zip:'4651'},{label:'4650 Julémont',name:'Julémont',zip:'4650'},{label:'4650 Herve',name:'Herve',zip:'4650'},{label:'4650 Grand-Rechain',name:'Grand-Rechain',zip:'4650'},{label:'4650 Chaineux',name:'Chaineux',zip:'4650'},{label:'4633 Melen',name:'Melen',zip:'4633'},{label:'4632 Cérexhe-Heuseux',name:'Cérexhe-Heuseux',zip:'4632'},{label:'4631 Evegnée',name:'Evegnée',zip:'4631'},{label:'4630 Tignée',name:'Tignée',zip:'4630'},{label:'4630 Soumagne',name:'Soumagne',zip:'4630'},{label:'4630 Micheroux',name:'Micheroux',zip:'4630'},{label:'4630 Ayeneux',name:'Ayeneux',zip:'4630'},{label:'4624 Romsée',name:'Romsée',zip:'4624'},{label:'4623 Magnée',name:'Magnée',zip:'4623'},{label:'4621 Retinne',name:'Retinne',zip:'4621'},{label:'4620 Fléron',name:'Fléron',zip:'4620'},{label:'4610 Queue-du-Bois',name:'Queue-du-Bois',zip:'4610'},{label:'4610 Beyne-Heusay',name:'Beyne-Heusay',zip:'4610'},{label:'4610 Bellaire',name:'Bellaire',zip:'4610'},{label:'4608 Warsage',name:'Warsage',zip:'4608'},{label:'4608 Neufchâteau Liège',name:'Neufchâteau Liège',zip:'4608'},{label:'4607 Mortroux',name:'Mortroux',zip:'4607'},{label:'4607 Feneur',name:'Feneur',zip:'4607'},{label:'4607 Dalhem',name:'Dalhem',zip:'4607'},{label:'4607 Bombaye',name:'Bombaye',zip:'4607'},{label:'4607 Berneau',name:'Berneau',zip:'4607'},{label:'4606 Saint-André',name:'Saint-André',zip:'4606'},{label:'4602 Cheratte',name:'Cheratte',zip:'4602'},{label:'4601 Argenteau',name:'Argenteau',zip:'4601'},{label:'4600 Visé',name:'Visé',zip:'4600'},{label:'4600 Richelle',name:'Richelle',zip:'4600'},{label:'4600 Lixhe',name:'Lixhe',zip:'4600'},{label:'4600 Lanaye',name:'Lanaye',zip:'4600'},{label:'4590 Warzée',name:'Warzée',zip:'4590'},{label:'4590 Ouffet',name:'Ouffet',zip:'4590'},{label:'4590 Ellemelle',name:'Ellemelle',zip:'4590'},{label:'4577 Vierset-Barse',name:'Vierset-Barse',zip:'4577'},{label:'4577 Strée-lez-Huy',name:'Strée-lez-Huy',zip:'4577'},{label:'4577 Outrelouxhe',name:'Outrelouxhe',zip:'4577'},{label:'4577 Modave',name:'Modave',zip:'4577'},{label:'4570 Vyle-et-Tharoul',name:'Vyle-et-Tharoul',zip:'4570'},{label:'4570 Marchin',name:'Marchin',zip:'4570'},{label:'4560 Terwagne',name:'Terwagne',zip:'4560'},{label:'4560 Pailhe',name:'Pailhe',zip:'4560'},{label:'4560 Ocquier',name:'Ocquier',zip:'4560'},{label:'4560 Les Avins',name:'Les Avins',zip:'4560'},{label:'4560 Clavier',name:'Clavier',zip:'4560'},{label:'4560 Bois-et-Borsu',name:'Bois-et-Borsu',zip:'4560'},{label:'4557 Tinlot',name:'Tinlot',zip:'4557'},{label:'4557 Soheit-Tinlot',name:'Soheit-Tinlot',zip:'4557'},{label:'4557 Seny',name:'Seny',zip:'4557'},{label:'4557 Ramelot',name:'Ramelot',zip:'4557'},{label:'4557 Fraiture',name:'Fraiture',zip:'4557'},{label:'4557 Abée',name:'Abée',zip:'4557'},{label:'4550 Yernée-Fraineux',name:'Yernée-Fraineux',zip:'4550'},{label:'4550 Villers-le-Temple',name:'Villers-le-Temple',zip:'4550'},{label:'4550 Saint-Séverin',name:'Saint-Séverin',zip:'4550'},{label:'4550 Nandrin',name:'Nandrin',zip:'4550'},{label:'4540 Ombret',name:'Ombret',zip:'4540'},{label:'4540 Jehay',name:'Jehay',zip:'4540'},{label:'4540 Flône',name:'Flône',zip:'4540'},{label:'4540 Ampsin',name:'Ampsin',zip:'4540'},{label:'4540 Amay',name:'Amay',zip:'4540'},{label:'4537 Verlaine',name:'Verlaine',zip:'4537'},{label:'4537 Seraing-le-Château',name:'Seraing-le-Château',zip:'4537'},{label:'4537 Chapon-Seraing',name:'Chapon-Seraing',zip:'4537'},{label:'4530 Warnant-Dreye',name:'Warnant-Dreye',zip:'4530'},{label:'4530 Villers-le-Bouillet',name:'Villers-le-Bouillet',zip:'4530'},{label:'4530 Vieux-Waleffe',name:'Vieux-Waleffe',zip:'4530'},{label:'4530 Vaux-et-Borset',name:'Vaux-et-Borset',zip:'4530'},{label:'4530 Fize-Fontaine',name:'Fize-Fontaine',zip:'4530'},{label:'4520 Wanze',name:'Wanze',zip:'4520'},{label:'4520 Vinalmont',name:'Vinalmont',zip:'4520'},{label:'4520 Moha',name:'Moha',zip:'4520'},{label:'4520 Huccorgne',name:'Huccorgne',zip:'4520'},{label:'4520 Bas-Oha',name:'Bas-Oha',zip:'4520'},{label:'4520 Antheit',name:'Antheit',zip:'4520'},{label:'4500 Tihange',name:'Tihange',zip:'4500'},{label:'4500 Huy',name:'Huy',zip:'4500'},{label:'4500 Ben-Ahin',name:'Ben-Ahin',zip:'4500'},{label:'4480 Hermalle-sous-Huy',name:'Hermalle-sous-Huy',zip:'4480'},{label:'4480 Engis',name:'Engis',zip:'4480'},{label:'4480 Clermont-sous-Huy',name:'Clermont-sous-Huy',zip:'4480'},{label:'4470 Saint-Georges-sur-Meuse',name:'Saint-Georges-sur-Meuse',zip:'4470'},{label:'4460 Velroux',name:'Velroux',zip:'4460'},{label:'4460 Horion-Hozémont',name:'Horion-Hozémont',zip:'4460'},{label:'4460 Hollogne-aux-Pierres',name:'Hollogne-aux-Pierres',zip:'4460'},{label:'4460 Grâce-Hollogne',name:'Grâce-Hollogne',zip:'4460'},{label:'4460 Grâce-Berleur',name:'Grâce-Berleur',zip:'4460'},{label:'4460 Bierset',name:'Bierset',zip:'4460'},{label:'4458 Fexhe-Slins',name:'Fexhe-Slins',zip:'4458'},{label:'4453 Villers-Saint-Siméon',name:'Villers-Saint-Siméon',zip:'4453'},{label:'4452 Wihogne',name:'Wihogne',zip:'4452'},{label:'4452 Paifve',name:'Paifve',zip:'4452'},{label:'4451 Voroux-lez-Liers',name:'Voroux-lez-Liers',zip:'4451'},{label:'4450 Slins',name:'Slins',zip:'4450'},{label:'4450 Lantin',name:'Lantin',zip:'4450'},{label:'4450 Juprelle',name:'Juprelle',zip:'4450'},{label:'4432 Xhendremael',name:'Xhendremael',zip:'4432'},{label:'4432 Alleur',name:'Alleur',zip:'4432'},{label:'4431 Loncin',name:'Loncin',zip:'4431'},{label:'4430 Ans',name:'Ans',zip:'4430'},{label:'4420 Tilleur',name:'Tilleur',zip:'4420'},{label:'4420 Saint-Nicolas Liège',name:'Saint-Nicolas Liège',zip:'4420'},{label:'4420 Montegnée',name:'Montegnée',zip:'4420'},{label:'4400 Mons-lez-Liège',name:'Mons-lez-Liège',zip:'4400'},{label:'4400 Ivoz-Ramet',name:'Ivoz-Ramet',zip:'4400'},{label:'4400 Gleixhe',name:'Gleixhe',zip:'4400'},{label:'4400 Flémalle-Haute',name:'Flémalle-Haute',zip:'4400'},{label:'4400 Flémalle-Grande',name:'Flémalle-Grande',zip:'4400'},{label:'4400 Flémalle',name:'Flémalle',zip:'4400'},{label:'4400 Chokier',name:'Chokier',zip:'4400'},{label:'4400 Awirs',name:'Awirs',zip:'4400'},{label:'4367 Thys',name:'Thys',zip:'4367'},{label:'4367 Odeur',name:'Odeur',zip:'4367'},{label:'4367 Kemexhe',name:'Kemexhe',zip:'4367'},{label:'4367 Fize-le-Marsal',name:'Fize-le-Marsal',zip:'4367'},{label:'4367 Crisnée',name:'Crisnée',zip:'4367'},{label:'4360 Otrange',name:'Otrange',zip:'4360'},{label:'4360 Oreye',name:'Oreye',zip:'4360'},{label:'4360 Lens-sur-Geer',name:'Lens-sur-Geer',zip:'4360'},{label:'4360 Grandville',name:'Grandville',zip:'4360'},{label:'4360 Bergilers',name:'Bergilers',zip:'4360'},{label:'4357 Limont',name:'Limont',zip:'4357'},{label:'4357 Jeneffe Liège',name:'Jeneffe Liège',zip:'4357'},{label:'4357 Haneffe',name:'Haneffe',zip:'4357'},{label:'4357 Donceel',name:'Donceel',zip:'4357'},{label:'4351 Hodeige',name:'Hodeige',zip:'4351'},{label:'4350 Remicourt',name:'Remicourt',zip:'4350'},{label:'4350 Pousset',name:'Pousset',zip:'4350'},{label:'4350 Momalle',name:'Momalle',zip:'4350'},{label:'4350 Lamine',name:'Lamine',zip:'4350'},{label:'4347 Voroux-Goreux',name:'Voroux-Goreux',zip:'4347'},{label:'4347 Roloux',name:'Roloux',zip:'4347'},{label:'4347 Noville Liège',name:'Noville Liège',zip:'4347'},{label:'4347 Freloux',name:'Freloux',zip:'4347'},{label:'4347 Fexhe-le-Haut-Clocher',name:'Fexhe-le-Haut-Clocher',zip:'4347'},{label:'4342 Hognoul',name:'Hognoul',zip:'4342'},{label:'4340 Othée',name:'Othée',zip:'4340'},{label:'4340 Fooz',name:'Fooz',zip:'4340'},{label:'4340 Awans',name:'Awans',zip:'4340'},{label:'4317 Viemme',name:'Viemme',zip:'4317'},{label:'4317 Les Waleffes',name:'Les Waleffes',zip:'4317'},{label:'4317 Faimes',name:'Faimes',zip:'4317'},{label:'4317 Celles Liège',name:'Celles Liège',zip:'4317'},{label:'4317 Borlez',name:'Borlez',zip:'4317'},{label:'4317 Aineffe',name:'Aineffe',zip:'4317'},{label:'4300 Waremme',name:'Waremme',zip:'4300'},{label:'4300 Oleye',name:'Oleye',zip:'4300'},{label:'4300 Lantremange',name:'Lantremange',zip:'4300'},{label:'4300 Grand-Axhe',name:'Grand-Axhe',zip:'4300'},{label:'4300 Bovenistier',name:'Bovenistier',zip:'4300'},{label:'4300 Bleret',name:'Bleret',zip:'4300'},{label:'4300 Bettincourt',name:'Bettincourt',zip:'4300'},{label:'4287 Racour',name:'Racour',zip:'4287'},{label:'4287 Pellaines',name:'Pellaines',zip:'4287'},{label:'4287 Lincent',name:'Lincent',zip:'4287'},{label:'4280 Wansin',name:'Wansin',zip:'4280'},{label:'4280 Villers-le-Peuplier',name:'Villers-le-Peuplier',zip:'4280'},{label:'4280 Trognée',name:'Trognée',zip:'4280'},{label:'4280 Thisnes',name:'Thisnes',zip:'4280'},{label:'4280 Poucet',name:'Poucet',zip:'4280'},{label:'4280 Petit-Hallet',name:'Petit-Hallet',zip:'4280'},{label:'4280 Moxhe',name:'Moxhe',zip:'4280'},{label:'4280 Merdorp',name:'Merdorp',zip:'4280'},{label:'4280 Lens-Saint-Remy',name:'Lens-Saint-Remy',zip:'4280'},{label:'4280 Hannut',name:'Hannut',zip:'4280'},{label:'4280 Grand-Hallet',name:'Grand-Hallet',zip:'4280'},{label:'4280 Crehen',name:'Crehen',zip:'4280'},{label:'4280 Cras-Avernas',name:'Cras-Avernas',zip:'4280'},{label:'4280 Blehen',name:'Blehen',zip:'4280'},{label:'4280 Bertrée',name:'Bertrée',zip:'4280'},{label:'4280 Avin',name:'Avin',zip:'4280'},{label:'4280 Avernas-le-Bauduin',name:'Avernas-le-Bauduin',zip:'4280'},{label:'4280 Abolens',name:'Abolens',zip:'4280'},{label:'4263 Tourinne Liège',name:'Tourinne Liège',zip:'4263'},{label:'4261 Latinne',name:'Latinne',zip:'4261'},{label:'4260 Ville-en-Hesbaye',name:'Ville-en-Hesbaye',zip:'4260'},{label:'4260 Fumal',name:'Fumal',zip:'4260'},{label:'4260 Fallais',name:'Fallais',zip:'4260'},{label:'4260 Ciplet',name:'Ciplet',zip:'4260'},{label:'4260 Braives',name:'Braives',zip:'4260'},{label:'4260 Avennes',name:'Avennes',zip:'4260'},{label:'4257 Rosoux-Crenwick',name:'Rosoux-Crenwick',zip:'4257'},{label:'4257 Corswarem',name:'Corswarem',zip:'4257'},{label:'4257 Berloz',name:'Berloz',zip:'4257'},{label:'4254 Ligney',name:'Ligney',zip:'4254'},{label:'4253 Darion',name:'Darion',zip:'4253'},{label:'4252 Omal',name:'Omal',zip:'4252'},{label:'4250 Lens-Saint-Servais',name:'Lens-Saint-Servais',zip:'4250'},{label:'4250 Hollogne-sur-Geer',name:'Hollogne-sur-Geer',zip:'4250'},{label:'4250 Geer',name:'Geer',zip:'4250'},{label:'4250 Boëlhe',name:'Boëlhe',zip:'4250'},{label:'4219 Wasseiges',name:'Wasseiges',zip:'4219'},{label:'4219 Meeffe',name:'Meeffe',zip:'4219'},{label:'4219 Ambresin',name:'Ambresin',zip:'4219'},{label:'4219 Acosse',name:'Acosse',zip:'4219'},{label:'4218 Couthuin',name:'Couthuin',zip:'4218'},{label:'4217 Lavoir',name:'Lavoir',zip:'4217'},{label:'4217 Héron',name:'Héron',zip:'4217'},{label:'4210 Oteppe',name:'Oteppe',zip:'4210'},{label:'4210 Marneffe',name:'Marneffe',zip:'4210'},{label:'4210 Lamontzée',name:'Lamontzée',zip:'4210'},{label:'4210 Hannêche',name:'Hannêche',zip:'4210'},{label:'4210 Burdinne',name:'Burdinne',zip:'4210'},{label:'4190 Xhoris',name:'Xhoris',zip:'4190'},{label:'4190 Werbomont',name:'Werbomont',zip:'4190'},{label:'4190 Vieuxville',name:'Vieuxville',zip:'4190'},{label:'4190 My',name:'My',zip:'4190'},{label:'4190 Ferrières',name:'Ferrières',zip:'4190'},{label:'4181 Filot',name:'Filot',zip:'4181'},{label:'4180 Hamoir',name:'Hamoir',zip:'4180'},{label:'4180 Comblain-la-Tour',name:'Comblain-la-Tour',zip:'4180'},{label:'4180 Comblain-Fairon',name:'Comblain-Fairon',zip:'4180'},{label:'4171 Poulseur',name:'Poulseur',zip:'4171'},{label:'4170 Comblain-au-Pont',name:'Comblain-au-Pont',zip:'4170'},{label:'4163 Tavier',name:'Tavier',zip:'4163'},{label:'4162 Hody',name:'Hody',zip:'4162'},{label:'4161 Villers-aux-Tours',name:'Villers-aux-Tours',zip:'4161'},{label:'4160 Anthisnes',name:'Anthisnes',zip:'4160'},{label:'4141 Louveigné',name:'Louveigné',zip:'4141'},{label:'4140 Sprimont',name:'Sprimont',zip:'4140'},{label:'4140 Rouvreux',name:'Rouvreux',zip:'4140'},{label:'4140 Gomzé-Andoumont',name:'Gomzé-Andoumont',zip:'4140'},{label:'4140 Dolembreux',name:'Dolembreux',zip:'4140'},{label:'4130 Tilff',name:'Tilff',zip:'4130'},{label:'4130 Esneux',name:'Esneux',zip:'4130'},{label:'4122 Plainevaux',name:'Plainevaux',zip:'4122'},{label:'4121 Neuville-en-Condroz',name:'Neuville-en-Condroz',zip:'4121'},{label:'4120 Rotheux-Rimière',name:'Rotheux-Rimière',zip:'4120'},{label:'4120 Neupré',name:'Neupré',zip:'4120'},{label:'4120 Ehein',name:'Ehein',zip:'4120'},{label:'4102 Ougrée',name:'Ougrée',zip:'4102'},{label:'4101 Jemeppe-sur-Meuse',name:'Jemeppe-sur-Meuse',zip:'4101'},{label:'4100 Seraing',name:'Seraing',zip:'4100'},{label:'4100 Boncelles',name:'Boncelles',zip:'4100'},{label:'4053 Embourg',name:'Embourg',zip:'4053'},{label:'4052 Beaufays',name:'Beaufays',zip:'4052'},{label:'4051 Vaux-sous-Chèvremont',name:'Vaux-sous-Chèvremont',zip:'4051'},{label:'4050 Chaudfontaine',name:'Chaudfontaine',zip:'4050'},{label:'4042 Liers',name:'Liers',zip:'4042'},{label:'4041 Vottem',name:'Vottem',zip:'4041'},{label:'4041 Milmort',name:'Milmort',zip:'4041'},{label:'4040 Herstal',name:'Herstal',zip:'4040'},{label:'4032 Chênée',name:'Chênée',zip:'4032'},{label:'4031 Angleur',name:'Angleur',zip:'4031'},{label:'4030 Grivegnée',name:'Grivegnée',zip:'4030'},{label:'4020 Wandre',name:'Wandre',zip:'4020'},{label:'4020 Liège',name:'Liège',zip:'4020'},{label:'4020 Jupille-sur-Meuse',name:'Jupille-sur-Meuse',zip:'4020'},{label:'4020 Bressoux',name:'Bressoux',zip:'4020'},{label:'4000 Rocourt',name:'Rocourt',zip:'4000'},{label:'4000 Liège',name:'Liège',zip:'4000'},{label:'4000 Glain',name:'Glain',zip:'4000'},{label:'7973 Stambruges',name:'Stambruges',zip:'7973'},{label:'7973 Grandglise',name:'Grandglise',zip:'7973'},{label:'7972 Quevaucamps',name:'Quevaucamps',zip:'7972'},{label:'7972 Ellignies-Sainte-Anne',name:'Ellignies-Sainte-Anne',zip:'7972'},{label:'7972 Aubechies',name:'Aubechies',zip:'7972'},{label:'7971 Wadelincourt',name:'Wadelincourt',zip:'7971'},{label:'7971 Thumaide',name:'Thumaide',zip:'7971'},{label:'7971 Ramegnies',name:'Ramegnies',zip:'7971'},{label:'7971 Basècles',name:'Basècles',zip:'7971'},{label:'7970 Beloeil',name:'Beloeil',zip:'7970'},{label:'7951 Tongre-Notre-Dame',name:'Tongre-Notre-Dame',zip:'7951'},{label:'7950 Tongre-Saint-Martin',name:'Tongre-Saint-Martin',zip:'7950'},{label:'7950 Ladeuze',name:'Ladeuze',zip:'7950'},{label:'7950 Huissignies',name:'Huissignies',zip:'7950'},{label:'7950 Grosage',name:'Grosage',zip:'7950'},{label:'7950 Chièvres',name:'Chièvres',zip:'7950'},{label:'7943 Gages',name:'Gages',zip:'7943'},{label:'7942 Mévergnies-lez-Lens',name:'Mévergnies-lez-Lens',zip:'7942'},{label:'7941 Attre',name:'Attre',zip:'7941'},{label:'7940 Cambron-Casteau',name:'Cambron-Casteau',zip:'7940'},{label:'7940 Brugelette',name:'Brugelette',zip:'7940'},{label:'7912 Saint-Sauveur',name:'Saint-Sauveur',zip:'7912'},{label:'7912 Dergneau',name:'Dergneau',zip:'7912'},{label:'7911 Oeudeghien',name:'Oeudeghien',zip:'7911'},{label:'7911 Moustier Ht.',name:'Moustier Ht.',zip:'7911'},{label:'7911 Montroeul-au-Bois',name:'Montroeul-au-Bois',zip:'7911'},{label:'7911 Herquegies',name:'Herquegies',zip:'7911'},{label:'7911 Hacquegnies',name:'Hacquegnies',zip:'7911'},{label:'7911 Frasnes-lez-Buissenal',name:'Frasnes-lez-Buissenal',zip:'7911'},{label:'7911 Buissenal',name:'Buissenal',zip:'7911'},{label:'7910 Wattripont',name:'Wattripont',zip:'7910'},{label:'7910 Frasnes-lez-Anvaing',name:'Frasnes-lez-Anvaing',zip:'7910'},{label:'7910 Forest Ht.',name:'Forest Ht.',zip:'7910'},{label:'7910 Ellignies-lez-Frasnes',name:'Ellignies-lez-Frasnes',zip:'7910'},{label:'7910 Cordes',name:'Cordes',zip:'7910'},{label:'7910 Arc-Wattripont',name:'Arc-Wattripont',zip:'7910'},{label:'7910 Arc-Ainières',name:'Arc-Ainières',zip:'7910'},{label:'7910 Anvaing',name:'Anvaing',zip:'7910'},{label:'7906 Gallaix',name:'Gallaix',zip:'7906'},{label:'7904 Willaupuis',name:'Willaupuis',zip:'7904'},{label:'7904 Tourpes',name:'Tourpes',zip:'7904'},{label:'7904 Pipaix',name:'Pipaix',zip:'7904'},{label:'7903 Chapelle-à-Wattines',name:'Chapelle-à-Wattines',zip:'7903'},{label:'7903 Chapelle-à-Oie',name:'Chapelle-à-Oie',zip:'7903'},{label:'7903 Blicquy',name:'Blicquy',zip:'7903'},{label:'7901 Thieulain',name:'Thieulain',zip:'7901'},{label:'7900 Leuze-en-Hainaut',name:'Leuze-en-Hainaut',zip:'7900'},{label:'7900 Grandmetz',name:'Grandmetz',zip:'7900'},{label:'7890 Wodecq',name:'Wodecq',zip:'7890'},{label:'7890 Lahamaide',name:'Lahamaide',zip:'7890'},{label:'7890 Ellezelles',name:'Ellezelles',zip:'7890'},{label:'7880 Flobecq/Vloesberg',name:'Flobecq/Vloesberg',zip:'7880'},{label:'7870 Montignies-lez-Lens',name:'Montignies-lez-Lens',zip:'7870'},{label:'7870 Lombise',name:'Lombise',zip:'7870'},{label:'7870 Lens',name:'Lens',zip:'7870'},{label:'7870 Cambron-Saint-Vincent',name:'Cambron-Saint-Vincent',zip:'7870'},{label:'7870 Bauffe',name:'Bauffe',zip:'7870'},{label:'7866 Ollignies',name:'Ollignies',zip:'7866'},{label:'7866 Bois-de-Lessines',name:'Bois-de-Lessines',zip:'7866'},{label:'7864 Deux-Acren',name:'Deux-Acren',zip:'7864'},{label:'7863 Ghoy',name:'Ghoy',zip:'7863'},{label:'7862 Ogy',name:'Ogy',zip:'7862'},{label:'7861 Wannebecq',name:'Wannebecq',zip:'7861'},{label:'7861 Papignies',name:'Papignies',zip:'7861'},{label:'7860 Lessines',name:'Lessines',zip:'7860'},{label:'7850 Petit-Enghien/Lettelingen',name:'Petit-Enghien/Lettelingen',zip:'7850'},{label:'7850 Marcq/Mark',name:'Marcq/Mark',zip:'7850'},{label:'7850 Enghien/Edingen',name:'Enghien/Edingen',zip:'7850'},{label:'7830 Thoricourt',name:'Thoricourt',zip:'7830'},{label:'7830 Silly',name:'Silly',zip:'7830'},{label:'7830 Hoves Ht.',name:'Hoves Ht.',zip:'7830'},{label:'7830 Hellebecq',name:'Hellebecq',zip:'7830'},{label:'7830 Graty',name:'Graty',zip:'7830'},{label:'7830 Gondregnies',name:'Gondregnies',zip:'7830'},{label:'7830 Fouleng',name:'Fouleng',zip:'7830'},{label:'7830 Bassilly',name:'Bassilly',zip:'7830'},{label:'7823 Gibecq',name:'Gibecq',zip:'7823'},{label:'7822 Isières',name:'Isières',zip:'7822'},{label:'7822 Ghislenghien',name:'Ghislenghien',zip:'7822'},{label:'7812 Villers-Saint-Amand',name:'Villers-Saint-Amand',zip:'7812'},{label:'7812 Villers-Notre-Dame',name:'Villers-Notre-Dame',zip:'7812'},{label:'7812 Moulbaix',name:'Moulbaix',zip:'7812'},{label:'7812 Mainvault',name:'Mainvault',zip:'7812'},{label:'7812 Ligne',name:'Ligne',zip:'7812'},{label:'7812 Houtaing',name:'Houtaing',zip:'7812'},{label:'7811 Arbre Ht.',name:'Arbre Ht.',zip:'7811'},{label:'7810 Maffle',name:'Maffle',zip:'7810'},{label:'7804 Rebaix',name:'Rebaix',zip:'7804'},{label:'7804 Ostiches',name:'Ostiches',zip:'7804'},{label:'7803 Bouvignies',name:'Bouvignies',zip:'7803'},{label:'7802 Ormeignies',name:'Ormeignies',zip:'7802'},{label:'7801 Irchonwelz',name:'Irchonwelz',zip:'7801'},{label:'7800 Lanquesaint',name:'Lanquesaint',zip:'7800'},{label:'7800 Ath',name:'Ath',zip:'7800'},{label:'7784 Warneton/Waasten',name:'Warneton/Waasten',zip:'7784'},{label:'7784 Bas-Warneton/Neerwaasten',name:'Bas-Warneton/Neerwaasten',zip:'7784'},{label:'7783 Bizet',name:'Bizet',zip:'7783'},{label:'7782 Ploegsteert',name:'Ploegsteert',zip:'7782'},{label:'7781 Houthem Comines/Komen',name:'Houthem Comines/Komen',zip:'7781'},{label:'7780 Comines-Warneton/Komen-Waasten',name:'Comines-Warneton/Komen-Waasten',zip:'7780'},{label:'7780 Comines/Komen',name:'Comines/Komen',zip:'7780'},{label:'7760 Velaines',name:'Velaines',zip:'7760'},{label:'7760 Pottes',name:'Pottes',zip:'7760'},{label:'7760 Popuelles',name:'Popuelles',zip:'7760'},{label:'7760 Molenbaix',name:'Molenbaix',zip:'7760'},{label:'7760 Escanaffles',name:'Escanaffles',zip:'7760'},{label:'7760 Celles Ht.',name:'Celles Ht.',zip:'7760'},{label:'7750 Russeignies',name:'Russeignies',zip:'7750'},{label:'7750 Orroir',name:'Orroir',zip:'7750'},{label:'7750 Anseroeul',name:'Anseroeul',zip:'7750'},{label:'7750 Amougies',name:'Amougies',zip:'7750'},{label:'7743 Obigies',name:'Obigies',zip:'7743'},{label:'7743 Esquelmes',name:'Esquelmes',zip:'7743'},{label:'7742 Hérinnes-lez-Pecq',name:'Hérinnes-lez-Pecq',zip:'7742'},{label:'7740 Warcoing',name:'Warcoing',zip:'7740'},{label:'7740 Pecq',name:'Pecq',zip:'7740'},{label:'7730 Saint-Léger Ht.',name:'Saint-Léger Ht.',zip:'7730'},{label:'7730 Néchin',name:'Néchin',zip:'7730'},{label:'7730 Leers-Nord',name:'Leers-Nord',zip:'7730'},{label:'7730 Evregnies',name:'Evregnies',zip:'7730'},{label:'7730 Estaimpuis',name:'Estaimpuis',zip:'7730'},{label:'7730 Estaimbourg',name:'Estaimbourg',zip:'7730'},{label:'7730 Bailleul',name:'Bailleul',zip:'7730'},{label:'7712 Herseaux',name:'Herseaux',zip:'7712'},{label:'7711 Dottignies/Dottenijs',name:'Dottignies/Dottenijs',zip:'7711'},{label:'7700 Mouscron/Moeskroen',name:'Mouscron/Moeskroen',zip:'7700'},{label:'7700 Luingne',name:'Luingne',zip:'7700'},{label:'7643 Fontenoy',name:'Fontenoy',zip:'7643'},{label:'7642 Calonne',name:'Calonne',zip:'7642'},{label:'7641 Bruyelle',name:'Bruyelle',zip:'7641'},{label:'7640 Péronnes-lez-Antoing',name:'Péronnes-lez-Antoing',zip:'7640'},{label:'7640 Maubray',name:'Maubray',zip:'7640'},{label:'7640 Antoing',name:'Antoing',zip:'7640'},{label:'7624 Howardries',name:'Howardries',zip:'7624'},{label:'7623 Rongy',name:'Rongy',zip:'7623'},{label:'7622 Laplaigne',name:'Laplaigne',zip:'7622'},{label:'7621 Lesdain',name:'Lesdain',zip:'7621'},{label:'7620 Wez-Velvain',name:'Wez-Velvain',zip:'7620'},{label:'7620 Jollain-Merlin',name:'Jollain-Merlin',zip:'7620'},{label:'7620 Hollain',name:'Hollain',zip:'7620'},{label:'7620 Guignies',name:'Guignies',zip:'7620'},{label:'7620 Brunehaut',name:'Brunehaut',zip:'7620'},{label:'7620 Bléharies',name:'Bléharies',zip:'7620'},{label:'7618 Taintignies',name:'Taintignies',zip:'7618'},{label:'7611 La Glanerie',name:'La Glanerie',zip:'7611'},{label:'7610 Rumes',name:'Rumes',zip:'7610'},{label:'7608 Wiers',name:'Wiers',zip:'7608'},{label:'7604 Wasmes-Audemez-Briffoeil',name:'Wasmes-Audemez-Briffoeil',zip:'7604'},{label:'7604 Callenelle',name:'Callenelle',zip:'7604'},{label:'7604 Brasmenil',name:'Brasmenil',zip:'7604'},{label:'7604 Braffe',name:'Braffe',zip:'7604'},{label:'7604 Baugnies',name:'Baugnies',zip:'7604'},{label:'7603 Bon-Secours',name:'Bon-Secours',zip:'7603'},{label:'7602 Bury',name:'Bury',zip:'7602'},{label:'7601 Roucourt',name:'Roucourt',zip:'7601'},{label:'7600 Péruwelz',name:'Péruwelz',zip:'7600'},{label:'7548 Warchin',name:'Warchin',zip:'7548'},{label:'7543 Mourcourt',name:'Mourcourt',zip:'7543'},{label:'7542 Mont-Saint-Aubert',name:'Mont-Saint-Aubert',zip:'7542'},{label:'7540 Rumillies',name:'Rumillies',zip:'7540'},{label:'7540 Quartes',name:'Quartes',zip:'7540'},{label:'7540 Melles',name:'Melles',zip:'7540'},{label:'7540 Kain',name:'Kain',zip:'7540'},{label:'7538 Vezon',name:'Vezon',zip:'7538'},{label:'7536 Vaulx',name:'Vaulx',zip:'7536'},{label:'7534 Maulde',name:'Maulde',zip:'7534'},{label:'7534 Barry',name:'Barry',zip:'7534'},{label:'7533 Thimougies',name:'Thimougies',zip:'7533'},{label:'7532 Beclers',name:'Beclers',zip:'7532'},{label:'7531 Havinnes',name:'Havinnes',zip:'7531'},{label:'7530 Gaurain-Ramecroix',name:'Gaurain-Ramecroix',zip:'7530'},{label:'7522 Marquain',name:'Marquain',zip:'7522'},{label:'7522 Lamain',name:'Lamain',zip:'7522'},{label:'7522 Hertain',name:'Hertain',zip:'7522'},{label:'7522 Blandain',name:'Blandain',zip:'7522'},{label:'7521 Chercq',name:'Chercq',zip:'7521'},{label:'7520 Templeuve',name:'Templeuve',zip:'7520'},{label:'7520 Ramegnies-Chin',name:'Ramegnies-Chin',zip:'7520'},{label:'7506 Willemeau',name:'Willemeau',zip:'7506'},{label:'7504 Froidmont',name:'Froidmont',zip:'7504'},{label:'7503 Froyennes',name:'Froyennes',zip:'7503'},{label:'7502 Esplechin',name:'Esplechin',zip:'7502'},{label:'7501 Orcq',name:'Orcq',zip:'7501'},{label:'7500 Tournai',name:'Tournai',zip:'7500'},{label:'7500 Saint-Maur',name:'Saint-Maur',zip:'7500'},{label:'7500 Ere',name:'Ere',zip:'7500'},{label:'7390 Wasmuel',name:'Wasmuel',zip:'7390'},{label:'7390 Quaregnon',name:'Quaregnon',zip:'7390'},{label:'7387 Roisin',name:'Roisin',zip:'7387'},{label:'7387 Onnezies',name:'Onnezies',zip:'7387'},{label:'7387 Montignies-sur-Roc',name:'Montignies-sur-Roc',zip:'7387'},{label:'7387 Marchipont',name:'Marchipont',zip:'7387'},{label:'7387 Honnelles',name:'Honnelles',zip:'7387'},{label:'7387 Fayt-le-Franc',name:'Fayt-le-Franc',zip:'7387'},{label:'7387 Erquennes',name:'Erquennes',zip:'7387'},{label:'7387 Autreppe',name:'Autreppe',zip:'7387'},{label:'7387 Athis',name:'Athis',zip:'7387'},{label:'7387 Angreau',name:'Angreau',zip:'7387'},{label:'7387 Angre',name:'Angre',zip:'7387'},{label:'7382 Audregnies',name:'Audregnies',zip:'7382'},{label:'7380 Quiévrain',name:'Quiévrain',zip:'7380'},{label:'7380 Baisieux',name:'Baisieux',zip:'7380'},{label:'7370 Wihéries',name:'Wihéries',zip:'7370'},{label:'7370 Elouges',name:'Elouges',zip:'7370'},{label:'7370 Dour',name:'Dour',zip:'7370'},{label:'7370 Blaugies',name:'Blaugies',zip:'7370'},{label:'7350 Thulin',name:'Thulin',zip:'7350'},{label:'7350 Montroeul-sur-Haine',name:'Montroeul-sur-Haine',zip:'7350'},{label:'7350 Hensies',name:'Hensies',zip:'7350'},{label:'7350 Hainin',name:'Hainin',zip:'7350'},{label:'7340 Wasmes',name:'Wasmes',zip:'7340'},{label:'7340 Warquignies',name:'Warquignies',zip:'7340'},{label:'7340 Paturages',name:'Paturages',zip:'7340'},{label:'7340 Colfontaine',name:'Colfontaine',zip:'7340'},{label:'7334 Villerot',name:'Villerot',zip:'7334'},{label:'7334 Hautrage',name:'Hautrage',zip:'7334'},{label:'7333 Tertre',name:'Tertre',zip:'7333'},{label:'7332 Sirault',name:'Sirault',zip:'7332'},{label:'7332 Neufmaison',name:'Neufmaison',zip:'7332'},{label:'7331 Baudour',name:'Baudour',zip:'7331'},{label:'7330 Saint-Ghislain',name:'Saint-Ghislain',zip:'7330'},{label:'7322 Ville-Pommeroeul',name:'Ville-Pommeroeul',zip:'7322'},{label:'7322 Pommeroeul',name:'Pommeroeul',zip:'7322'},{label:'7321 Harchies',name:'Harchies',zip:'7321'},{label:'7321 Blaton',name:'Blaton',zip:'7321'},{label:'7320 Bernissart',name:'Bernissart',zip:'7320'},{label:'7301 Hornu',name:'Hornu',zip:'7301'},{label:'7300 Boussu',name:'Boussu',zip:'7300'},{label:'7191 Ecaussinnes-Lalaing',name:'Ecaussinnes-Lalaing',zip:'7191'},{label:'7190 Marche-lez-Ecaussinnes',name:'Marche-lez-Ecaussinnes',zip:'7190'},{label:'7190 Ecaussinnes',name:'Ecaussinnes',zip:'7190'},{label:'7181 Petit-Roeulx-lez-Nivelles',name:'Petit-Roeulx-lez-Nivelles',zip:'7181'},{label:'7181 Feluy',name:'Feluy',zip:'7181'},{label:'7181 Familleureux',name:'Familleureux',zip:'7181'},{label:'7181 Arquennes',name:'Arquennes',zip:'7181'},{label:'7180 Seneffe',name:'Seneffe',zip:'7180'},{label:'7170 Manage',name:'Manage',zip:'7170'},{label:'7170 La Hestre',name:'La Hestre',zip:'7170'},{label:'7170 Fayt-lez-Manage',name:'Fayt-lez-Manage',zip:'7170'},{label:'7170 Bellecourt',name:'Bellecourt',zip:'7170'},{label:'7160 Piéton',name:'Piéton',zip:'7160'},{label:'7160 Godarville',name:'Godarville',zip:'7160'},{label:'7160 Chapelle-lez-Herlaimont',name:'Chapelle-lez-Herlaimont',zip:'7160'},{label:'7141 Mont-Sainte-Aldegonde',name:'Mont-Sainte-Aldegonde',zip:'7141'},{label:'7141 Carnières',name:'Carnières',zip:'7141'},{label:'7140 Morlanwelz-Mariemont',name:'Morlanwelz-Mariemont',zip:'7140'},{label:'7140 Morlanwelz',name:'Morlanwelz',zip:'7140'},{label:'7134 Ressaix',name:'Ressaix',zip:'7134'},{label:'7134 Péronnes-lez-Binche',name:'Péronnes-lez-Binche',zip:'7134'},{label:'7134 Leval-Trahegnies',name:'Leval-Trahegnies',zip:'7134'},{label:'7134 Epinois',name:'Epinois',zip:'7134'},{label:'7133 Buvrinnes',name:'Buvrinnes',zip:'7133'},{label:'7131 Waudrez',name:'Waudrez',zip:'7131'},{label:'7130 Bray',name:'Bray',zip:'7130'},{label:'7130 Binche',name:'Binche',zip:'7130'},{label:'7130 Battignies',name:'Battignies',zip:'7130'},{label:'7120 Vellereille-le-Sec',name:'Vellereille-le-Sec',zip:'7120'},{label:'7120 Vellereille-les-Brayeux',name:'Vellereille-les-Brayeux',zip:'7120'},{label:'7120 Rouveroy Ht.',name:'Rouveroy Ht.',zip:'7120'},{label:'7120 Peissant',name:'Peissant',zip:'7120'},{label:'7120 Haulchin',name:'Haulchin',zip:'7120'},{label:'7120 Fauroeulx',name:'Fauroeulx',zip:'7120'},{label:'7120 Estinnes-au-Val',name:'Estinnes-au-Val',zip:'7120'},{label:'7120 Estinnes-au-Mont',name:'Estinnes-au-Mont',zip:'7120'},{label:'7120 Estinnes',name:'Estinnes',zip:'7120'},{label:'7120 Croix-lez-Rouveroy',name:'Croix-lez-Rouveroy',zip:'7120'},{label:'7110 Strépy-Bracquegnies',name:'Strépy-Bracquegnies',zip:'7110'},{label:'7110 Maurage',name:'Maurage',zip:'7110'},{label:'7110 Houdeng-Goegnies',name:'Houdeng-Goegnies',zip:'7110'},{label:'7110 Houdeng-Aimeries',name:'Houdeng-Aimeries',zip:'7110'},{label:'7110 Boussoit',name:'Boussoit',zip:'7110'},{label:'7100 Trivières',name:'Trivières',zip:'7100'},{label:'7100 Saint-Vaast',name:'Saint-Vaast',zip:'7100'},{label:'7100 La Louvière',name:'La Louvière',zip:'7100'},{label:'7100 Haine-Saint-Pierre',name:'Haine-Saint-Pierre',zip:'7100'},{label:'7100 Haine-Saint-Paul',name:'Haine-Saint-Paul',zip:'7100'},{label:'7090 Steenkerque Ht.',name:'Steenkerque Ht.',zip:'7090'},{label:'7090 Ronquières',name:'Ronquières',zip:'7090'},{label:'7090 Petit-Roeulx-lez-Braine',name:'Petit-Roeulx-lez-Braine',zip:'7090'},{label:'7090 Henripont',name:'Henripont',zip:'7090'},{label:'7090 Hennuyères',name:'Hennuyères',zip:'7090'},{label:'7090 Braine-le-Comte',name:'Braine-le-Comte',zip:'7090'},{label:'7080 Sars-la-Bruyère',name:'Sars-la-Bruyère',zip:'7080'},{label:'7080 Noirchain',name:'Noirchain',zip:'7080'},{label:'7080 La Bouverie',name:'La Bouverie',zip:'7080'},{label:'7080 Frameries',name:'Frameries',zip:'7080'},{label:'7080 Eugies Frameries',name:'Eugies Frameries',zip:'7080'},{label:'7070 Ville-sur-Haine Le Roeulx',name:'Ville-sur-Haine Le Roeulx',zip:'7070'},{label:'7070 Thieu',name:'Thieu',zip:'7070'},{label:'7070 Mignault',name:'Mignault',zip:'7070'},{label:'7070 Le Roeulx',name:'Le Roeulx',zip:'7070'},{label:'7070 Gottignies',name:'Gottignies',zip:'7070'},{label:'7063 Neufvilles',name:'Neufvilles',zip:'7063'},{label:'7063 Chaussée-Notre-Dame-Louvignies',name:'Chaussée-Notre-Dame-Louvignies',zip:'7063'},{label:'7062 Naast',name:'Naast',zip:'7062'},{label:'7061 Thieusies',name:'Thieusies',zip:'7061'},{label:'7061 Casteau Soignies',name:'Casteau Soignies',zip:'7061'},{label:'7060 Soignies',name:'Soignies',zip:'7060'},{label:'7060 Horrues',name:'Horrues',zip:'7060'},{label:'7050 Masnuy-Saint-Pierre',name:'Masnuy-Saint-Pierre',zip:'7050'},{label:'7050 Masnuy-Saint-Jean Jurbise',name:'Masnuy-Saint-Jean Jurbise',zip:'7050'},{label:'7050 Jurbise',name:'Jurbise',zip:'7050'},{label:'7050 Herchies',name:'Herchies',zip:'7050'},{label:'7050 Erbisoeul',name:'Erbisoeul',zip:'7050'},{label:'7050 Erbaut',name:'Erbaut',zip:'7050'},{label:'7041 Havay',name:'Havay',zip:'7041'},{label:'7041 Givry',name:'Givry',zip:'7041'},{label:'7040 Quévy-le-Petit',name:'Quévy-le-Petit',zip:'7040'},{label:'7040 Quévy-le-Grand',name:'Quévy-le-Grand',zip:'7040'},{label:'7040 Quévy',name:'Quévy',zip:'7040'},{label:'7040 Goegnies-Chaussée',name:'Goegnies-Chaussée',zip:'7040'},{label:'7040 Genly',name:'Genly',zip:'7040'},{label:'7040 Bougnies',name:'Bougnies',zip:'7040'},{label:'7040 Blaregnies',name:'Blaregnies',zip:'7040'},{label:'7040 Aulnois',name:'Aulnois',zip:'7040'},{label:'7040 Asquillies',name:'Asquillies',zip:'7040'},{label:'7034 Saint-Denis Ht.',name:'Saint-Denis Ht.',zip:'7034'},{label:'7034 Obourg',name:'Obourg',zip:'7034'},{label:'7033 Cuesmes',name:'Cuesmes',zip:'7033'},{label:'7032 Spiennes',name:'Spiennes',zip:'7032'},{label:'7031 Villers-Saint-Ghislain',name:'Villers-Saint-Ghislain',zip:'7031'},{label:'7030 Saint-Symphorien',name:'Saint-Symphorien',zip:'7030'},{label:'7024 Ciply',name:'Ciply',zip:'7024'},{label:'7022 Nouvelles',name:'Nouvelles',zip:'7022'},{label:'7022 Mesvin',name:'Mesvin',zip:'7022'},{label:'7022 Hyon',name:'Hyon',zip:'7022'},{label:'7022 Harveng',name:'Harveng',zip:'7022'},{label:'7022 Harmignies',name:'Harmignies',zip:'7022'},{label:'7021 Havré',name:'Havré',zip:'7021'},{label:'7020 Nimy',name:'Nimy',zip:'7020'},{label:'7020 Maisières',name:'Maisières',zip:'7020'},{label:'7012 Jemappes',name:'Jemappes',zip:'7012'},{label:'7012 Flénu',name:'Flénu',zip:'7012'},{label:'7011 Ghlin',name:'Ghlin',zip:'7011'},{label:'7000 Mons',name:'Mons',zip:'7000'},{label:'6596 Seloignes',name:'Seloignes',zip:'6596'},{label:'6596 Forges-Philippe',name:'Forges-Philippe',zip:'6596'},{label:'6594 Beauwelz',name:'Beauwelz',zip:'6594'},{label:'6593 Macquenoise',name:'Macquenoise',zip:'6593'},{label:'6592 Monceau-Imbrechies',name:'Monceau-Imbrechies',zip:'6592'},{label:'6591 Macon',name:'Macon',zip:'6591'},{label:'6590 Momignies',name:'Momignies',zip:'6590'},{label:'6567 Merbes-Sainte-Marie',name:'Merbes-Sainte-Marie',zip:'6567'},{label:'6567 Merbes-le-Château',name:'Merbes-le-Château',zip:'6567'},{label:'6567 Labuissière',name:'Labuissière',zip:'6567'},{label:'6567 Fontaine-Valmont',name:'Fontaine-Valmont',zip:'6567'},{label:'6560 Solre-sur-Sambre',name:'Solre-sur-Sambre',zip:'6560'},{label:'6560 Montignies-Saint-Christophe',name:'Montignies-Saint-Christophe',zip:'6560'},{label:'6560 Hantes-Wihéries',name:'Hantes-Wihéries',zip:'6560'},{label:'6560 Grand-Reng',name:'Grand-Reng',zip:'6560'},{label:'6560 Erquelinnes',name:'Erquelinnes',zip:'6560'},{label:'6543 Bienne-lez-Happart',name:'Bienne-lez-Happart',zip:'6543'},{label:'6542 Sars-la-Buissière',name:'Sars-la-Buissière',zip:'6542'},{label:'6540 Mont-Sainte-Geneviève',name:'Mont-Sainte-Geneviève',zip:'6540'},{label:'6540 Lobbes',name:'Lobbes',zip:'6540'},{label:'6536 Thuillies',name:'Thuillies',zip:'6536'},{label:'6536 Donstiennes',name:'Donstiennes',zip:'6536'},{label:'6534 Gozée',name:'Gozée',zip:'6534'},{label:'6533 Biercée',name:'Biercée',zip:'6533'},{label:'6532 Ragnies',name:'Ragnies',zip:'6532'},{label:'6531 Biesme-sous-Thuin',name:'Biesme-sous-Thuin',zip:'6531'},{label:'6530 Thuin',name:'Thuin',zip:'6530'},{label:'6530 Leers-et-Fosteau',name:'Leers-et-Fosteau',zip:'6530'},{label:'6511 Strée Ht.',name:'Strée Ht.',zip:'6511'},{label:'6500 Thirimont',name:'Thirimont',zip:'6500'},{label:'6500 Solre-Saint-Géry',name:'Solre-Saint-Géry',zip:'6500'},{label:'6500 Renlies',name:'Renlies',zip:'6500'},{label:'6500 Leval-Chaudeville',name:'Leval-Chaudeville',zip:'6500'},{label:'6500 Leugnies',name:'Leugnies',zip:'6500'},{label:'6500 Beaumont',name:'Beaumont',zip:'6500'},{label:'6500 Barbençon',name:'Barbençon',zip:'6500'},{label:'6470 Sivry-Rance',name:'Sivry-Rance',zip:'6470'},{label:'6470 Sivry',name:'Sivry',zip:'6470'},{label:'6470 Sautin',name:'Sautin',zip:'6470'},{label:'6470 Rance',name:'Rance',zip:'6470'},{label:'6470 Montbliart',name:'Montbliart',zip:'6470'},{label:'6470 Grandrieu',name:'Grandrieu',zip:'6470'},{label:'6464 Rièzes',name:'Rièzes',zip:'6464'},{label:'6464 Forges',name:'Forges',zip:'6464'},{label:'6464 Bourlers',name:'Bourlers',zip:'6464'},{label:'6464 Baileux',name:'Baileux',zip:'6464'},{label:'6463 Lompret',name:'Lompret',zip:'6463'},{label:'6462 Vaulx-lez-Chimay',name:'Vaulx-lez-Chimay',zip:'6462'},{label:'6461 Virelles',name:'Virelles',zip:'6461'},{label:'6460 Villers-la-Tour',name:'Villers-la-Tour',zip:'6460'},{label:'6460 Salles',name:'Salles',zip:'6460'},{label:'6460 Saint-Remy Ht.',name:'Saint-Remy Ht.',zip:'6460'},{label:'6460 Robechies',name:'Robechies',zip:'6460'},{label:'6460 Chimay',name:'Chimay',zip:'6460'},{label:'6460 Bailièvre',name:'Bailièvre',zip:'6460'},{label:'6441 Erpion',name:'Erpion',zip:'6441'},{label:'6440 Vergnies',name:'Vergnies',zip:'6440'},{label:'6440 Froidchapelle',name:'Froidchapelle',zip:'6440'},{label:'6440 Fourbechies',name:'Fourbechies',zip:'6440'},{label:'6440 Boussu-lez-Walcourt',name:'Boussu-lez-Walcourt',zip:'6440'},{label:'6280 Villers-Poterie',name:'Villers-Poterie',zip:'6280'},{label:'6280 Loverval',name:'Loverval',zip:'6280'},{label:'6280 Joncret',name:'Joncret',zip:'6280'},{label:'6280 Gougnies',name:'Gougnies',zip:'6280'},{label:'6280 Gerpinnes',name:'Gerpinnes',zip:'6280'},{label:'6280 Acoz',name:'Acoz',zip:'6280'},{label:'6250 Roselies',name:'Roselies',zip:'6250'},{label:'6250 Presles',name:'Presles',zip:'6250'},{label:'6250 Pont-de-Loup',name:'Pont-de-Loup',zip:'6250'},{label:'6250 Aiseau-Presles',name:'Aiseau-Presles',zip:'6250'},{label:'6250 Aiseau',name:'Aiseau',zip:'6250'},{label:'6240 Pironchamps',name:'Pironchamps',zip:'6240'},{label:'6240 Farciennes',name:'Farciennes',zip:'6240'},{label:'6238 Luttre',name:'Luttre',zip:'6238'},{label:'6238 Liberchies',name:'Liberchies',zip:'6238'},{label:'6230 Viesville',name:'Viesville',zip:'6230'},{label:'6230 Thiméon',name:'Thiméon',zip:'6230'},{label:'6230 Pont-à-Celles',name:'Pont-à-Celles',zip:'6230'},{label:'6230 Obaix',name:'Obaix',zip:'6230'},{label:'6230 Buzet',name:'Buzet',zip:'6230'},{label:'6224 Wanfercée-Baulet',name:'Wanfercée-Baulet',zip:'6224'},{label:'6223 Wagnelée',name:'Wagnelée',zip:'6223'},{label:'6222 Brye',name:'Brye',zip:'6222'},{label:'6221 Saint-Amand',name:'Saint-Amand',zip:'6221'},{label:'6220 Wangenies',name:'Wangenies',zip:'6220'},{label:'6220 Lambusart',name:'Lambusart',zip:'6220'},{label:'6220 Heppignies',name:'Heppignies',zip:'6220'},{label:'6220 Fleurus',name:'Fleurus',zip:'6220'},{label:'6211 Mellet',name:'Mellet',zip:'6211'},{label:'6210 Wayaux',name:'Wayaux',zip:'6210'},{label:'6210 Villers-Perwin',name:'Villers-Perwin',zip:'6210'},{label:'6210 Rèves',name:'Rèves',zip:'6210'},{label:'6210 Les Bons Villers',name:'Les Bons Villers',zip:'6210'},{label:'6210 Frasnes-lez-Gosselies',name:'Frasnes-lez-Gosselies',zip:'6210'},{label:'6200 Châtelineau',name:'Châtelineau',zip:'6200'},{label:'6200 Châtelet',name:'Châtelet',zip:'6200'},{label:'6200 Bouffioulx',name:'Bouffioulx',zip:'6200'},{label:'6183 Trazegnies',name:'Trazegnies',zip:'6183'},{label:'6182 Souvret',name:'Souvret',zip:'6182'},{label:'6181 Gouy-lez-Piéton',name:'Gouy-lez-Piéton',zip:'6181'},{label:'6180 Courcelles',name:'Courcelles',zip:'6180'},{label:'6150 Anderlues',name:'Anderlues',zip:'6150'},{label:'6142 Leernes',name:'Leernes',zip:'6142'},{label:'6141 Forchies-la-Marche',name:'Forchies-la-Marche',zip:'6141'},{label:'6120 Nalinnes',name:'Nalinnes',zip:'6120'},{label:'6120 Marbaix Ht.',name:'Marbaix Ht.',zip:'6120'},{label:'6120 Jamioulx',name:'Jamioulx',zip:'6120'},{label:'6120 Ham-sur-Heure-Nalinnes',name:'Ham-sur-Heure-Nalinnes',zip:'6120'},{label:'6120 Ham-sur-Heure',name:'Ham-sur-Heure',zip:'6120'},{label:'6120 Cour-sur-Heure',name:'Cour-sur-Heure',zip:'6120'},{label:'6111 Landelies',name:'Landelies',zip:'6111'},{label:'6110 Montigny-le-Tilleul',name:'Montigny-le-Tilleul',zip:'6110'},{label:'6061 Montignies-sur-Sambre',name:'Montignies-sur-Sambre',zip:'6061'},{label:'6060 Gilly',name:'Gilly',zip:'6060'},{label:'6044 Roux',name:'Roux',zip:'6044'},{label:'6043 Ransart',name:'Ransart',zip:'6043'},{label:'6042 Lodelinsart',name:'Lodelinsart',zip:'6042'},{label:'6041 Gosselies',name:'Gosselies',zip:'6041'},{label:'6040 Jumet',name:'Jumet',zip:'6040'},{label:'6032 Mont-sur-Marchienne',name:'Mont-sur-Marchienne',zip:'6032'},{label:'6031 Monceau-sur-Sambre',name:'Monceau-sur-Sambre',zip:'6031'},{label:'6030 Marchienne-au-Pont',name:'Marchienne-au-Pont',zip:'6030'},{label:'6030 Goutroux',name:'Goutroux',zip:'6030'},{label:'6020 Dampremy',name:'Dampremy',zip:'6020'},{label:'6010 Couillet',name:'Couillet',zip:'6010'},{label:'6001 Marcinelle',name:'Marcinelle',zip:'6001'},{label:'6000 Charleroi',name:'Charleroi',zip:'6000'},{label:'8980 Zonnebeke',name:'Zonnebeke',zip:'8980'},{label:'8980 Passendale (Zonnebeke)',name:'Passendale (Zonnebeke)',zip:'8980'},{label:'8980 Geluveld (Zonnebeke)',name:'Geluveld (Zonnebeke)',zip:'8980'},{label:'8980 Beselare (Zonnebeke)',name:'Beselare (Zonnebeke)',zip:'8980'},{label:'8978 Watou (Poperinge)',name:'Watou (Poperinge)',zip:'8978'},{label:'8972 Roesbrugge-Haringe (Poperinge)',name:'Roesbrugge-Haringe (Poperinge)',zip:'8972'},{label:'8972 Proven (Poperinge)',name:'Proven (Poperinge)',zip:'8972'},{label:'8972 Krombeke (Poperinge)',name:'Krombeke (Poperinge)',zip:'8972'},{label:'8970 Reningelst (Poperinge)',name:'Reningelst (Poperinge)',zip:'8970'},{label:'8970 Poperinge',name:'Poperinge',zip:'8970'},{label:'8958 Loker (Heuvelland)',name:'Loker (Heuvelland)',zip:'8958'},{label:'8956 Kemmel (Heuvelland)',name:'Kemmel (Heuvelland)',zip:'8956'},{label:'8954 Westouter (Heuvelland)',name:'Westouter (Heuvelland)',zip:'8954'},{label:'8953 Wijtschate (Heuvelland)',name:'Wijtschate (Heuvelland)',zip:'8953'},{label:'8952 Wulvergem (Heuvelland)',name:'Wulvergem (Heuvelland)',zip:'8952'},{label:'8951 Dranouter (Heuvelland)',name:'Dranouter (Heuvelland)',zip:'8951'},{label:'8950 Nieuwkerke (Heuvelland)',name:'Nieuwkerke (Heuvelland)',zip:'8950'},{label:'8950 Heuvelland',name:'Heuvelland',zip:'8950'},{label:'8940 Wervik',name:'Wervik',zip:'8940'},{label:'8940 Geluwe (Wervik)',name:'Geluwe (Wervik)',zip:'8940'},{label:'8930 Rekkem (Menen)',name:'Rekkem (Menen)',zip:'8930'},{label:'8930 Menen',name:'Menen',zip:'8930'},{label:'8930 Lauwe (Menen)',name:'Lauwe (Menen)',zip:'8930'},{label:'8920 Poelkapelle (Langemark-Poelkapelle)',name:'Poelkapelle (Langemark-Poelkapelle)',zip:'8920'},{label:'8920 Langemark-Poelkapelle',name:'Langemark-Poelkapelle',zip:'8920'},{label:'8920 Langemark (Langemark-Poelkapelle)',name:'Langemark (Langemark-Poelkapelle)',zip:'8920'},{label:'8920 Bikschote (Langemark-Poelkapelle)',name:'Bikschote (Langemark-Poelkapelle)',zip:'8920'},{label:'8908 Vlamertinge (Ieper)',name:'Vlamertinge (Ieper)',zip:'8908'},{label:'8906 Elverdinge (Ieper)',name:'Elverdinge (Ieper)',zip:'8906'},{label:'8904 Zuidschote (Ieper)',name:'Zuidschote (Ieper)',zip:'8904'},{label:'8904 Boezinge (Ieper)',name:'Boezinge (Ieper)',zip:'8904'},{label:'8902 Zillebeke (Ieper)',name:'Zillebeke (Ieper)',zip:'8902'},{label:'8902 Voormezele (Ieper)',name:'Voormezele (Ieper)',zip:'8902'},{label:'8902 Hollebeke (Ieper)',name:'Hollebeke (Ieper)',zip:'8902'},{label:'8900 Sint-Jan (Ieper)',name:'Sint-Jan (Ieper)',zip:'8900'},{label:'8900 Ieper',name:'Ieper',zip:'8900'},{label:'8900 Dikkebus (Ieper)',name:'Dikkebus (Ieper)',zip:'8900'},{label:'8900 Brielen (Ieper)',name:'Brielen (Ieper)',zip:'8900'},{label:'8890 Moorslede',name:'Moorslede',zip:'8890'},{label:'8890 Dadizele (Moorslede)',name:'Dadizele (Moorslede)',zip:'8890'},{label:'8880 Sint-Eloois-Winkel (Ledegem)',name:'Sint-Eloois-Winkel (Ledegem)',zip:'8880'},{label:'8880 Rollegem-Kapelle (Ledegem)',name:'Rollegem-Kapelle (Ledegem)',zip:'8880'},{label:'8880 Ledegem',name:'Ledegem',zip:'8880'},{label:'8870 Kachtem (Izegem)',name:'Kachtem (Izegem)',zip:'8870'},{label:'8870 Izegem',name:'Izegem',zip:'8870'},{label:'8870 Emelgem (Izegem)',name:'Emelgem (Izegem)',zip:'8870'},{label:'8860 Lendelede',name:'Lendelede',zip:'8860'},{label:'8851 Koolskamp (Ardooie)',name:'Koolskamp (Ardooie)',zip:'8851'},{label:'8850 Ardooie',name:'Ardooie',zip:'8850'},{label:'8840 Westrozebeke (Staden)',name:'Westrozebeke (Staden)',zip:'8840'},{label:'8840 Staden',name:'Staden',zip:'8840'},{label:'8840 Oostnieuwkerke (Staden)',name:'Oostnieuwkerke (Staden)',zip:'8840'},{label:'8830 Hooglede',name:'Hooglede',zip:'8830'},{label:'8830 Gits (Hooglede)',name:'Gits (Hooglede)',zip:'8830'},{label:'8820 Torhout',name:'Torhout',zip:'8820'},{label:'8810 Lichtervelde',name:'Lichtervelde',zip:'8810'},{label:'8800 Rumbeke (Roeselare)',name:'Rumbeke (Roeselare)',zip:'8800'},{label:'8800 Roeselare',name:'Roeselare',zip:'8800'},{label:'8800 Oekene (Roeselare)',name:'Oekene (Roeselare)',zip:'8800'},{label:'8793 Sint-Eloois-Vijve (Waregem)',name:'Sint-Eloois-Vijve (Waregem)',zip:'8793'},{label:'8792 Desselgem (Waregem)',name:'Desselgem (Waregem)',zip:'8792'},{label:'8790 Waregem',name:'Waregem',zip:'8790'},{label:'8780 Oostrozebeke',name:'Oostrozebeke',zip:'8780'},{label:'8770 Ingelmunster',name:'Ingelmunster',zip:'8770'},{label:'8760 Meulebeke',name:'Meulebeke',zip:'8760'},{label:'8755 Ruiselede',name:'Ruiselede',zip:'8755'},{label:'8750 Zwevezele (Wingene)',name:'Zwevezele (Wingene)',zip:'8750'},{label:'8750 Wingene',name:'Wingene',zip:'8750'},{label:'8740 Pittem',name:'Pittem',zip:'8740'},{label:'8740 Egem (Pittem)',name:'Egem (Pittem)',zip:'8740'},{label:'8730 Oedelem (Beernem)',name:'Oedelem (Beernem)',zip:'8730'},{label:'8730 Beernem',name:'Beernem',zip:'8730'},{label:'8720 Wakken (Dentergem)',name:'Wakken (Dentergem)',zip:'8720'},{label:'8720 Oeselgem (Dentergem)',name:'Oeselgem (Dentergem)',zip:'8720'},{label:'8720 Markegem (Dentergem)',name:'Markegem (Dentergem)',zip:'8720'},{label:'8720 Dentergem',name:'Dentergem',zip:'8720'},{label:'8710 Wielsbeke',name:'Wielsbeke',zip:'8710'},{label:'8710 Sint-Baafs-Vijve (Wielsbeke)',name:'Sint-Baafs-Vijve (Wielsbeke)',zip:'8710'},{label:'8710 Ooigem (Wielsbeke)',name:'Ooigem (Wielsbeke)',zip:'8710'},{label:'8700 Tielt',name:'Tielt',zip:'8700'},{label:'8700 Schuiferskapelle (Tielt)',name:'Schuiferskapelle (Tielt)',zip:'8700'},{label:'8700 Kanegem (Tielt)',name:'Kanegem (Tielt)',zip:'8700'},{label:'8700 Aarsele (Tielt)',name:'Aarsele (Tielt)',zip:'8700'},{label:'8691 Stavele (Alveringem)',name:'Stavele (Alveringem)',zip:'8691'},{label:'8691 Leisele (Alveringem)',name:'Leisele (Alveringem)',zip:'8691'},{label:'8691 Izenberge (Alveringem)',name:'Izenberge (Alveringem)',zip:'8691'},{label:'8691 Gijverinkhove (Alveringem)',name:'Gijverinkhove (Alveringem)',zip:'8691'},{label:'8691 Beveren-Aan-Den-Ijzer (Alveringem)',name:'Beveren-Aan-Den-Ijzer (Alveringem)',zip:'8691'},{label:'8690 Sint-Rijkers (Alveringem)',name:'Sint-Rijkers (Alveringem)',zip:'8690'},{label:'8690 Oeren (Alveringem)',name:'Oeren (Alveringem)',zip:'8690'},{label:'8690 Hoogstade (Alveringem)',name:'Hoogstade (Alveringem)',zip:'8690'},{label:'8690 Alveringem',name:'Alveringem',zip:'8690'},{label:'8680 Zande (Koekelare)',name:'Zande (Koekelare)',zip:'8680'},{label:'8680 Koekelare',name:'Koekelare',zip:'8680'},{label:'8680 Bovekerke (Koekelare)',name:'Bovekerke (Koekelare)',zip:'8680'},{label:'8670 Wulpen (Koksijde)',name:'Wulpen (Koksijde)',zip:'8670'},{label:'8670 Oostduinkerke (Koksijde)',name:'Oostduinkerke (Koksijde)',zip:'8670'},{label:'8670 Koksijde',name:'Koksijde',zip:'8670'},{label:'8660 Adinkerke (De Panne)',name:'Adinkerke (De Panne)',zip:'8660'},{label:'8650 Merkem (Houthulst)',name:'Merkem (Houthulst)',zip:'8650'},{label:'8650 Klerken (Houthulst)',name:'Klerken (Houthulst)',zip:'8650'},{label:'8650 Houthulst',name:'Houthulst',zip:'8650'},{label:'8647 Reninge (Lo-Reninge)',name:'Reninge (Lo-Reninge)',zip:'8647'},{label:'8647 Pollinkhove (Lo-Reninge)',name:'Pollinkhove (Lo-Reninge)',zip:'8647'},{label:'8647 Noordschote (Lo-Reninge)',name:'Noordschote (Lo-Reninge)',zip:'8647'},{label:'8647 Lo-Reninge',name:'Lo-Reninge',zip:'8647'},{label:'8647 Lo (Lo-Reninge)',name:'Lo (Lo-Reninge)',zip:'8647'},{label:'8640 Woesten (Vleteren)',name:'Woesten (Vleteren)',zip:'8640'},{label:'8640 Westvleteren (Vleteren)',name:'Westvleteren (Vleteren)',zip:'8640'},{label:'8640 Vleteren',name:'Vleteren',zip:'8640'},{label:'8640 Oostvleteren (Vleteren)',name:'Oostvleteren (Vleteren)',zip:'8640'},{label:'8630 Zoutenaaie (Veurne)',name:'Zoutenaaie (Veurne)',zip:'8630'},{label:'8630 Wulveringem (Veurne)',name:'Wulveringem (Veurne)',zip:'8630'},{label:'8630 Vinkem (Veurne)',name:'Vinkem (Veurne)',zip:'8630'},{label:'8630 Veurne',name:'Veurne',zip:'8630'},{label:'8630 Eggewaartskapelle (Veurne)',name:'Eggewaartskapelle (Veurne)',zip:'8630'},{label:'8630 Bulskamp (Veurne)',name:'Bulskamp (Veurne)',zip:'8630'},{label:'8630 Booitshoeke (Veurne)',name:'Booitshoeke (Veurne)',zip:'8630'},{label:'8630 Avekapelle (Veurne)',name:'Avekapelle (Veurne)',zip:'8630'},{label:'8620 Nieuwpoort',name:'Nieuwpoort',zip:'8620'},{label:'8610 Zarren (Kortemark)',name:'Zarren (Kortemark)',zip:'8610'},{label:'8610 Werken (Kortemark)',name:'Werken (Kortemark)',zip:'8610'},{label:'8610 Kortemark',name:'Kortemark',zip:'8610'},{label:'8610 Handzame (Kortemark)',name:'Handzame (Kortemark)',zip:'8610'},{label:'8600 Woumen (Diksmuide)',name:'Woumen (Diksmuide)',zip:'8600'},{label:'8600 Vladslo (Diksmuide)',name:'Vladslo (Diksmuide)',zip:'8600'},{label:'8600 Stuivekenskerke (Diksmuide)',name:'Stuivekenskerke (Diksmuide)',zip:'8600'},{label:'8600 Sint-Jacobs-Kapelle (Diksmuide)',name:'Sint-Jacobs-Kapelle (Diksmuide)',zip:'8600'},{label:'8600 Pervijze (Diksmuide)',name:'Pervijze (Diksmuide)',zip:'8600'},{label:'8600 Oudekapelle (Diksmuide)',name:'Oudekapelle (Diksmuide)',zip:'8600'},{label:'8600 Nieuwkapelle (Diksmuide)',name:'Nieuwkapelle (Diksmuide)',zip:'8600'},{label:'8600 Leke (Diksmuide)',name:'Leke (Diksmuide)',zip:'8600'},{label:'8600 Lampernisse (Diksmuide)',name:'Lampernisse (Diksmuide)',zip:'8600'},{label:'8600 Keiem (Diksmuide)',name:'Keiem (Diksmuide)',zip:'8600'},{label:'8600 Kaaskerke (Diksmuide)',name:'Kaaskerke (Diksmuide)',zip:'8600'},{label:'8600 Esen (Diksmuide)',name:'Esen (Diksmuide)',zip:'8600'},{label:'8600 Driekapellen (Diksmuide)',name:'Driekapellen (Diksmuide)',zip:'8600'},{label:'8600 Diksmuide',name:'Diksmuide',zip:'8600'},{label:'8600 Beerst (Diksmuide)',name:'Beerst (Diksmuide)',zip:'8600'},{label:'8583 Bossuit (Avelgem)',name:'Bossuit (Avelgem)',zip:'8583'},{label:'8582 Outrijve (Avelgem)',name:'Outrijve (Avelgem)',zip:'8582'},{label:'8581 Waarmaarde (Avelgem)',name:'Waarmaarde (Avelgem)',zip:'8581'},{label:'8581 Kerkhove (Avelgem)',name:'Kerkhove (Avelgem)',zip:'8581'},{label:'8580 Avelgem',name:'Avelgem',zip:'8580'},{label:'8573 Tiegem (Anzegem)',name:'Tiegem (Anzegem)',zip:'8573'},{label:'8572 Kaster (Anzegem)',name:'Kaster (Anzegem)',zip:'8572'},{label:'8570 Vichte (Anzegem)',name:'Vichte (Anzegem)',zip:'8570'},{label:'8570 Ingooigem (Anzegem)',name:'Ingooigem (Anzegem)',zip:'8570'},{label:'8570 Gijzelbrechtegem (Anzegem)',name:'Gijzelbrechtegem (Anzegem)',zip:'8570'},{label:'8570 Anzegem',name:'Anzegem',zip:'8570'},{label:'8560 Wevelgem',name:'Wevelgem',zip:'8560'},{label:'8560 Moorsele (Wevelgem)',name:'Moorsele (Wevelgem)',zip:'8560'},{label:'8560 Gullegem (Wevelgem)',name:'Gullegem (Wevelgem)',zip:'8560'},{label:'8554 Sint-Denijs (Zwevegem)',name:'Sint-Denijs (Zwevegem)',zip:'8554'},{label:'8553 Otegem (Zwevegem)',name:'Otegem (Zwevegem)',zip:'8553'},{label:'8552 Moen (Zwevegem)',name:'Moen (Zwevegem)',zip:'8552'},{label:'8551 Heestert (Zwevegem)',name:'Heestert (Zwevegem)',zip:'8551'},{label:'8550 Zwevegem',name:'Zwevegem',zip:'8550'},{label:'8540 Deerlijk',name:'Deerlijk',zip:'8540'},{label:'8531 Hulste (Harelbeke)',name:'Hulste (Harelbeke)',zip:'8531'},{label:'8531 Bavikhove (Harelbeke)',name:'Bavikhove (Harelbeke)',zip:'8531'},{label:'8530 Harelbeke',name:'Harelbeke',zip:'8530'},{label:'8520 Kuurne',name:'Kuurne',zip:'8520'},{label:'8511 Aalbeke (Kortrijk)',name:'Aalbeke (Kortrijk)',zip:'8511'},{label:'8510 Rollegem (Kortrijk)',name:'Rollegem (Kortrijk)',zip:'8510'},{label:'8510 Marke (Kortrijk)',name:'Marke (Kortrijk)',zip:'8510'},{label:'8510 Kooigem (Kortrijk)',name:'Kooigem (Kortrijk)',zip:'8510'},{label:'8510 Bellegem (Kortrijk)',name:'Bellegem (Kortrijk)',zip:'8510'},{label:'8501 Heule (Kortrijk)',name:'Heule (Kortrijk)',zip:'8501'},{label:'8501 Bissegem (Kortrijk)',name:'Bissegem (Kortrijk)',zip:'8501'},{label:'8500 Kortrijk',name:'Kortrijk',zip:'8500'},{label:'8490 Zerkegem (Jabbeke)',name:'Zerkegem (Jabbeke)',zip:'8490'},{label:'8490 Varsenare (Jabbeke)',name:'Varsenare (Jabbeke)',zip:'8490'},{label:'8490 Stalhille (Jabbeke)',name:'Stalhille (Jabbeke)',zip:'8490'},{label:'8490 Snellegem (Jabbeke)',name:'Snellegem (Jabbeke)',zip:'8490'},{label:'8490 Jabbeke',name:'Jabbeke',zip:'8490'},{label:'8480 Ichtegem',name:'Ichtegem',zip:'8480'},{label:'8480 Eernegem (Ichtegem)',name:'Eernegem (Ichtegem)',zip:'8480'},{label:'8480 Bekegem (Ichtegem)',name:'Bekegem (Ichtegem)',zip:'8480'},{label:'8470 Zevekote (Gistel)',name:'Zevekote (Gistel)',zip:'8470'},{label:'8470 Snaaskerke (Gistel)',name:'Snaaskerke (Gistel)',zip:'8470'},{label:'8470 Moere (Gistel)',name:'Moere (Gistel)',zip:'8470'},{label:'8470 Gistel',name:'Gistel',zip:'8470'},{label:'8460 Westkerke (Oudenburg)',name:'Westkerke (Oudenburg)',zip:'8460'},{label:'8460 Roksem (Oudenburg)',name:'Roksem (Oudenburg)',zip:'8460'},{label:'8460 Oudenburg',name:'Oudenburg',zip:'8460'},{label:'8460 Ettelgem (Oudenburg)',name:'Ettelgem (Oudenburg)',zip:'8460'},{label:'8450 Bredene',name:'Bredene',zip:'8450'},{label:'8434 Westende (Middelkerke)',name:'Westende (Middelkerke)',zip:'8434'},{label:'8434 Lombardsijde (Middelkerke)',name:'Lombardsijde (Middelkerke)',zip:'8434'},{label:'8433 Spermalie',name:'Spermalie',zip:'8433'},{label:'8433 Slijpe (Middelkerke)',name:'Slijpe (Middelkerke)',zip:'8433'},{label:'8433 Schore (Middelkerke)',name:'Schore (Middelkerke)',zip:'8433'},{label:'8433 Mannekensvere (Middelkerke)',name:'Mannekensvere (Middelkerke)',zip:'8433'},{label:'8432 Leffinge (Middelkerke)',name:'Leffinge (Middelkerke)',zip:'8432'},{label:'8431 Wilskerke (Middelkerke)',name:'Wilskerke (Middelkerke)',zip:'8431'},{label:'8430 Middelkerke',name:'Middelkerke',zip:'8430'},{label:'8421 Vlissegem (De Haan)',name:'Vlissegem (De Haan)',zip:'8421'},{label:'8420 Wenduine (De Haan)',name:'Wenduine (De Haan)',zip:'8420'},{label:'8420 Klemskerke (De Haan)',name:'Klemskerke (De Haan)',zip:'8420'},{label:'8400 Stene (Oostende)',name:'Stene (Oostende)',zip:'8400'},{label:'8400 Oostende',name:'Oostende',zip:'8400'},{label:'8377 Zuienkerke',name:'Zuienkerke',zip:'8377'},{label:'8377 Nieuwmunster (Zuienkerke)',name:'Nieuwmunster (Zuienkerke)',zip:'8377'},{label:'8377 Meetkerke (Zuienkerke)',name:'Meetkerke (Zuienkerke)',zip:'8377'},{label:'8377 Houtave (Zuienkerke)',name:'Houtave (Zuienkerke)',zip:'8377'},{label:'8370 Uitkerke (Blankenberge)',name:'Uitkerke (Blankenberge)',zip:'8370'},{label:'8370 Blankenberge',name:'Blankenberge',zip:'8370'},{label:'8340 Sijsele (Damme)',name:'Sijsele (Damme)',zip:'8340'},{label:'8340 Moerkerke (Damme)',name:'Moerkerke (Damme)',zip:'8340'},{label:'8340 Lapscheure (Damme)',name:'Lapscheure (Damme)',zip:'8340'},{label:'8340 Hoeke (Damme)',name:'Hoeke (Damme)',zip:'8340'},{label:'8340 Damme',name:'Damme',zip:'8340'},{label:'8301 Heist-Aan-Zee (Knokke-Heist)',name:'Heist-Aan-Zee (Knokke-Heist)',zip:'8301'},{label:'8300 Westkapelle (Knokke-Heist)',name:'Westkapelle (Knokke-Heist)',zip:'8300'},{label:'8300 Knokke-Heist',name:'Knokke-Heist',zip:'8300'},{label:'8300 Knokke (Knokke-Heist)',name:'Knokke (Knokke-Heist)',zip:'8300'},{label:'8211 Aartrijke (Zedelgem)',name:'Aartrijke (Zedelgem)',zip:'8211'},{label:'8210 Zedelgem',name:'Zedelgem',zip:'8210'},{label:'8210 Veldegem (Zedelgem)',name:'Veldegem (Zedelgem)',zip:'8210'},{label:'8210 Loppem (Zedelgem)',name:'Loppem (Zedelgem)',zip:'8210'},{label:'8020 Waardamme (Oostkamp)',name:'Waardamme (Oostkamp)',zip:'8020'},{label:'8020 Ruddervoorde (Oostkamp)',name:'Ruddervoorde (Oostkamp)',zip:'8020'},{label:'8020 Oostkamp',name:'Oostkamp',zip:'8020'},{label:'8020 Hertsberge (Oostkamp)',name:'Hertsberge (Oostkamp)',zip:'8020'},{label:'8380 Zeebrugge (Brugge)',name:'Zeebrugge (Brugge)',zip:'8380'},{label:'8380 Lissewege (Brugge)',name:'Lissewege (Brugge)',zip:'8380'},{label:'8380 Dudzele (Brugge)',name:'Dudzele (Brugge)',zip:'8380'},{label:'8310 Sint-Kruis (Brugge)',name:'Sint-Kruis (Brugge)',zip:'8310'},{label:'8310 Assebroek (Brugge)',name:'Assebroek (Brugge)',zip:'8310'},{label:'8200 Sint-Michiels (Brugge)',name:'Sint-Michiels (Brugge)',zip:'8200'},{label:'8200 Sint-Andries (Brugge)',name:'Sint-Andries (Brugge)',zip:'8200'},{label:'8000 Koolkerke (Brugge)',name:'Koolkerke (Brugge)',zip:'8000'},{label:'8000 Brugge',name:'Brugge',zip:'8000'},{label:'3473 Waanrode (Kortenaken)',name:'Waanrode (Kortenaken)',zip:'3473'},{label:'3472 Kersbeek-Miskom (Kortenaken)',name:'Kersbeek-Miskom (Kortenaken)',zip:'3472'},{label:'3471 Hoeleden (Kortenaken)',name:'Hoeleden (Kortenaken)',zip:'3471'},{label:'3470 Ransberg (Kortenaken)',name:'Ransberg (Kortenaken)',zip:'3470'},{label:'3470 Kortenaken',name:'Kortenaken',zip:'3470'},{label:'3461 Molenbeek-Wersbeek (Bekkevoort)',name:'Molenbeek-Wersbeek (Bekkevoort)',zip:'3461'},{label:'3460 Bekkevoort',name:'Bekkevoort',zip:'3460'},{label:'3460 Assent (Bekkevoort)',name:'Assent (Bekkevoort)',zip:'3460'},{label:'3454 Rummen (Geetbets)',name:'Rummen (Geetbets)',zip:'3454'},{label:'3450 Grazen (Geetbets)',name:'Grazen (Geetbets)',zip:'3450'},{label:'3450 Geetbets',name:'Geetbets',zip:'3450'},{label:'3440 Zoutleeuw',name:'Zoutleeuw',zip:'3440'},{label:'3440 Helen-Bos (Zoutleeuw)',name:'Helen-Bos (Zoutleeuw)',zip:'3440'},{label:'3440 Halle-Booienhoven (Zoutleeuw)',name:'Halle-Booienhoven (Zoutleeuw)',zip:'3440'},{label:'3440 Dormaal (Zoutleeuw)',name:'Dormaal (Zoutleeuw)',zip:'3440'},{label:'3440 Budingen (Zoutleeuw)',name:'Budingen (Zoutleeuw)',zip:'3440'},{label:'3404 Neerlanden (Landen)',name:'Neerlanden (Landen)',zip:'3404'},{label:'3404 Attenhoven (Landen)',name:'Attenhoven (Landen)',zip:'3404'},{label:'3401 Wezeren (Landen)',name:'Wezeren (Landen)',zip:'3401'},{label:'3401 Walshoutem (Landen)',name:'Walshoutem (Landen)',zip:'3401'},{label:'3401 Walsbets (Landen)',name:'Walsbets (Landen)',zip:'3401'},{label:'3401 Waasmont (Landen)',name:'Waasmont (Landen)',zip:'3401'},{label:'3400 Wange (Landen)',name:'Wange (Landen)',zip:'3400'},{label:'3400 Rumsdorp (Landen)',name:'Rumsdorp (Landen)',zip:'3400'},{label:'3400 Overwinden (Landen)',name:'Overwinden (Landen)',zip:'3400'},{label:'3400 Neerwinden (Landen)',name:'Neerwinden (Landen)',zip:'3400'},{label:'3400 Landen',name:'Landen',zip:'3400'},{label:'3400 Laar (Landen)',name:'Laar (Landen)',zip:'3400'},{label:'3400 Ezemaal (Landen)',name:'Ezemaal (Landen)',zip:'3400'},{label:'3400 Eliksem (Landen)',name:'Eliksem (Landen)',zip:'3400'},{label:'3391 Meensel-Kiezegem (Tielt-Winge)',name:'Meensel-Kiezegem (Tielt-Winge)',zip:'3391'},{label:'3390 Tielt-Winge',name:'Tielt-Winge',zip:'3390'},{label:'3390 Sint-Joris-Winge (Tielt-Winge)',name:'Sint-Joris-Winge (Tielt-Winge)',zip:'3390'},{label:'3390 Houwaart (Tielt-Winge)',name:'Houwaart (Tielt-Winge)',zip:'3390'},{label:'3384 Attenrode (Glabbeek)',name:'Attenrode (Glabbeek)',zip:'3384'},{label:'3380 Bunsbeek (Glabbeek)',name:'Bunsbeek (Glabbeek)',zip:'3380'},{label:'3370 Willebringen (Boutersem)',name:'Willebringen (Boutersem)',zip:'3370'},{label:'3370 Vertrijk (Boutersem)',name:'Vertrijk (Boutersem)',zip:'3370'},{label:'3370 Roosbeek (Boutersem)',name:'Roosbeek (Boutersem)',zip:'3370'},{label:'3370 Neervelp (Boutersem)',name:'Neervelp (Boutersem)',zip:'3370'},{label:'3370 Kerkom (Boutersem)',name:'Kerkom (Boutersem)',zip:'3370'},{label:'3370 Boutersem',name:'Boutersem',zip:'3370'},{label:'3360 Opvelp (Bierbeek)',name:'Opvelp (Bierbeek)',zip:'3360'},{label:'3360 Lovenjoel (Bierbeek)',name:'Lovenjoel (Bierbeek)',zip:'3360'},{label:'3360 Korbeek-Lo (Bierbeek)',name:'Korbeek-Lo (Bierbeek)',zip:'3360'},{label:'3360 Bierbeek',name:'Bierbeek',zip:'3360'},{label:'3350 Wommersom (Linter)',name:'Wommersom (Linter)',zip:'3350'},{label:'3350 Overhespen (Linter)',name:'Overhespen (Linter)',zip:'3350'},{label:'3350 Orsmaal-Gussenhoven (Linter)',name:'Orsmaal-Gussenhoven (Linter)',zip:'3350'},{label:'3350 Neerlinter (Linter)',name:'Neerlinter (Linter)',zip:'3350'},{label:'3350 Neerhespen (Linter)',name:'Neerhespen (Linter)',zip:'3350'},{label:'3350 Melkwezer (Linter)',name:'Melkwezer (Linter)',zip:'3350'},{label:'3350 Linter',name:'Linter',zip:'3350'},{label:'3350 Drieslinter (Linter)',name:'Drieslinter (Linter)',zip:'3350'},{label:'3321 Outgaarden (Hoegaarden)',name:'Outgaarden (Hoegaarden)',zip:'3321'},{label:'3320 Hoegaarden',name:'Hoegaarden',zip:'3320'},{label:'3300 Vissenaken (Tienen)',name:'Vissenaken (Tienen)',zip:'3300'},{label:'3300 Tienen',name:'Tienen',zip:'3300'},{label:'3300 Oplinter (Tienen)',name:'Oplinter (Tienen)',zip:'3300'},{label:'3300 Oorbeek (Tienen)',name:'Oorbeek (Tienen)',zip:'3300'},{label:'3300 Kumtich (Tienen)',name:'Kumtich (Tienen)',zip:'3300'},{label:'3300 Hakendover (Tienen)',name:'Hakendover (Tienen)',zip:'3300'},{label:'3300 Goetsenhoven (Tienen)',name:'Goetsenhoven (Tienen)',zip:'3300'},{label:'3300 Bost (Tienen)',name:'Bost (Tienen)',zip:'3300'},{label:'3294 Molenstede (Diest)',name:'Molenstede (Diest)',zip:'3294'},{label:'3293 Kaggevinne (Diest)',name:'Kaggevinne (Diest)',zip:'3293'},{label:'3290 Webbekom (Diest)',name:'Webbekom (Diest)',zip:'3290'},{label:'3290 Schaffen (Diest)',name:'Schaffen (Diest)',zip:'3290'},{label:'3290 Diest',name:'Diest',zip:'3290'},{label:'3272 Testelt (Scherpenheuvel-Zichem)',name:'Testelt (Scherpenheuvel-Zichem)',zip:'3272'},{label:'3272 Messelbroek (Scherpenheuvel-Zichem)',name:'Messelbroek (Scherpenheuvel-Zichem)',zip:'3272'},{label:'3271 Zichem (Scherpenheuvel-Zichem)',name:'Zichem (Scherpenheuvel-Zichem)',zip:'3271'},{label:'3271 Averbode (Scherpenheuvel-Zichem)',name:'Averbode (Scherpenheuvel-Zichem)',zip:'3271'},{label:'3270 Scherpenheuvel (Scherpenheuvel-Zichem)',name:'Scherpenheuvel (Scherpenheuvel-Zichem)',zip:'3270'},{label:'3221 Nieuwrode (Holsbeek)',name:'Nieuwrode (Holsbeek)',zip:'3221'},{label:'3220 Sint-Pieters-Rode (Holsbeek)',name:'Sint-Pieters-Rode (Holsbeek)',zip:'3220'},{label:'3220 Holsbeek',name:'Holsbeek',zip:'3220'},{label:'3212 Pellenberg (Lubbeek)',name:'Pellenberg (Lubbeek)',zip:'3212'},{label:'3211 Binkom (Lubbeek)',name:'Binkom (Lubbeek)',zip:'3211'},{label:'3210 Lubbeek',name:'Lubbeek',zip:'3210'},{label:'3210 Linden (Lubbeek)',name:'Linden (Lubbeek)',zip:'3210'},{label:'3202 Rillaar (Aarschot)',name:'Rillaar (Aarschot)',zip:'3202'},{label:'3201 Langdorp (Aarschot)',name:'Langdorp (Aarschot)',zip:'3201'},{label:'3200 Gelrode (Aarschot)',name:'Gelrode (Aarschot)',zip:'3200'},{label:'3200 Aarschot',name:'Aarschot',zip:'3200'},{label:'3191 Hever (Boortmeerbeek)',name:'Hever (Boortmeerbeek)',zip:'3191'},{label:'3190 Boortmeerbeek',name:'Boortmeerbeek',zip:'3190'},{label:'3150 Wespelaar (Haacht)',name:'Wespelaar (Haacht)',zip:'3150'},{label:'3150 Tildonk (Haacht)',name:'Tildonk (Haacht)',zip:'3150'},{label:'3150 Haacht',name:'Haacht',zip:'3150'},{label:'3140 Keerbergen',name:'Keerbergen',zip:'3140'},{label:'3130 Betekom (Begijnendijk)',name:'Betekom (Begijnendijk)',zip:'3130'},{label:'3130 Begijnendijk',name:'Begijnendijk',zip:'3130'},{label:'3128 Baal (Tremelo)',name:'Baal (Tremelo)',zip:'3128'},{label:'3120 Tremelo',name:'Tremelo',zip:'3120'},{label:'3118 Werchter (Rotselaar)',name:'Werchter (Rotselaar)',zip:'3118'},{label:'3111 Wezemaal (Rotselaar)',name:'Wezemaal (Rotselaar)',zip:'3111'},{label:'3110 Rotselaar',name:'Rotselaar',zip:'3110'},{label:'3090 Overijse',name:'Overijse',zip:'3090'},{label:'3080 Vossem (Tervuren)',name:'Vossem (Tervuren)',zip:'3080'},{label:'3080 Tervuren',name:'Tervuren',zip:'3080'},{label:'3080 Duisburg (Tervuren)',name:'Duisburg (Tervuren)',zip:'3080'},{label:'3078 Meerbeek (Kortenberg)',name:'Meerbeek (Kortenberg)',zip:'3078'},{label:'3078 Everberg (Kortenberg)',name:'Everberg (Kortenberg)',zip:'3078'},{label:'3071 Erps-Kwerps (Kortenberg)',name:'Erps-Kwerps (Kortenberg)',zip:'3071'},{label:'3070 Kortenberg',name:'Kortenberg',zip:'3070'},{label:'3061 Leefdaal (Bertem)',name:'Leefdaal (Bertem)',zip:'3061'},{label:'3060 Korbeek-Dijle (Bertem)',name:'Korbeek-Dijle (Bertem)',zip:'3060'},{label:'3060 Bertem',name:'Bertem',zip:'3060'},{label:'3054 Vaalbeek (Oud-Heverlee)',name:'Vaalbeek (Oud-Heverlee)',zip:'3054'},{label:'3053 Haasrode (Oud-Heverlee)',name:'Haasrode (Oud-Heverlee)',zip:'3053'},{label:'3052 Blanden (Oud-Heverlee)',name:'Blanden (Oud-Heverlee)',zip:'3052'},{label:'3051 Sint-Joris-Weert (Oud-Heverlee)',name:'Sint-Joris-Weert (Oud-Heverlee)',zip:'3051'},{label:'3050 Oud-Heverlee',name:'Oud-Heverlee',zip:'3050'},{label:'3040 Sint-Agatha-Rode (Huldenberg)',name:'Sint-Agatha-Rode (Huldenberg)',zip:'3040'},{label:'3040 Ottenburg (Huldenberg)',name:'Ottenburg (Huldenberg)',zip:'3040'},{label:'3040 Neerijse (Huldenberg)',name:'Neerijse (Huldenberg)',zip:'3040'},{label:'3040 Loonbeek (Huldenberg)',name:'Loonbeek (Huldenberg)',zip:'3040'},{label:'3040 Huldenberg',name:'Huldenberg',zip:'3040'},{label:'3020 Winksele (Herent)',name:'Winksele (Herent)',zip:'3020'},{label:'3020 Veltem-Beisem (Herent)',name:'Veltem-Beisem (Herent)',zip:'3020'},{label:'3020 Herent',name:'Herent',zip:'3020'},{label:'3012 Wilsele (Leuven)',name:'Wilsele (Leuven)',zip:'3012'},{label:'3010 Kessel-Lo (Leuven)',name:'Kessel-Lo (Leuven)',zip:'3010'},{label:'3001 Heverlee (Leuven)',name:'Heverlee (Leuven)',zip:'3001'},{label:'3000 Leuven',name:'Leuven',zip:'3000'},{label:'1982 Weerde (Zemst)',name:'Weerde (Zemst)',zip:'1982'},{label:'1982 Elewijt (Zemst)',name:'Elewijt (Zemst)',zip:'1982'},{label:'1980 Zemst',name:'Zemst',zip:'1980'},{label:'1980 Eppegem (Zemst)',name:'Eppegem (Zemst)',zip:'1980'},{label:'1970 Wezembeek-Oppem',name:'Wezembeek-Oppem',zip:'1970'},{label:'1950 Kraainem',name:'Kraainem',zip:'1950'},{label:'1933 Sterrebeek (Zaventem)',name:'Sterrebeek (Zaventem)',zip:'1933'},{label:'1932 Sint-Stevens-Woluwe (Zaventem)',name:'Sint-Stevens-Woluwe (Zaventem)',zip:'1932'},{label:'1930 Zaventem',name:'Zaventem',zip:'1930'},{label:'1930 Nossegem (Zaventem)',name:'Nossegem (Zaventem)',zip:'1930'},{label:'1910 Nederokkerzeel (Kampenhout)',name:'Nederokkerzeel (Kampenhout)',zip:'1910'},{label:'1910 Kampenhout',name:'Kampenhout',zip:'1910'},{label:'1910 Buken (Kampenhout)',name:'Buken (Kampenhout)',zip:'1910'},{label:'1880 Ramsdonk (Kapelle-Op-Den-Bos)',name:'Ramsdonk (Kapelle-Op-Den-Bos)',zip:'1880'},{label:'1880 Nieuwenrode (Kapelle-Op-Den-Bos)',name:'Nieuwenrode (Kapelle-Op-Den-Bos)',zip:'1880'},{label:'1880 Kapelle-op-den-Bos',name:'Kapelle-op-den-Bos',zip:'1880'},{label:'1861 Wolvertem (Meise)',name:'Wolvertem (Meise)',zip:'1861'},{label:'1860 Meise',name:'Meise',zip:'1860'},{label:'1853 Strombeek-Bever (Grimbergen)',name:'Strombeek-Bever (Grimbergen)',zip:'1853'},{label:'1852 Beigem (Grimbergen)',name:'Beigem (Grimbergen)',zip:'1852'},{label:'1851 Humbeek (Grimbergen)',name:'Humbeek (Grimbergen)',zip:'1851'},{label:'1850 Grimbergen',name:'Grimbergen',zip:'1850'},{label:'1840 Steenhuffel (Londerzeel)',name:'Steenhuffel (Londerzeel)',zip:'1840'},{label:'1840 Malderen (Londerzeel)',name:'Malderen (Londerzeel)',zip:'1840'},{label:'1840 Londerzeel',name:'Londerzeel',zip:'1840'},{label:'1831 Diegem (Machelen)',name:'Diegem (Machelen)',zip:'1831'},{label:'1820 Steenokkerzeel',name:'Steenokkerzeel',zip:'1820'},{label:'1820 Perk (Steenokkerzeel)',name:'Perk (Steenokkerzeel)',zip:'1820'},{label:'1820 Melsbroek (Steenokkerzeel)',name:'Melsbroek (Steenokkerzeel)',zip:'1820'},{label:'1800 Vilvoorde',name:'Vilvoorde',zip:'1800'},{label:'1800 Peutie (Vilvoorde)',name:'Peutie (Vilvoorde)',zip:'1800'},{label:'1790 Teralfene (Affligem)',name:'Teralfene (Affligem)',zip:'1790'},{label:'1790 Hekelgem (Affligem)',name:'Hekelgem (Affligem)',zip:'1790'},{label:'1790 Essene (Affligem)',name:'Essene (Affligem)',zip:'1790'},{label:'1790 Affligem',name:'Affligem',zip:'1790'},{label:'1785 Merchtem',name:'Merchtem',zip:'1785'},{label:'1785 Brussegem (Merchtem)',name:'Brussegem (Merchtem)',zip:'1785'},{label:'1780 Wemmel',name:'Wemmel',zip:'1780'},{label:'1770 Liedekerke',name:'Liedekerke',zip:'1770'},{label:'1761 Borchtlombeek (Roosdaal)',name:'Borchtlombeek (Roosdaal)',zip:'1761'},{label:'1760 Strijtem (Roosdaal)',name:'Strijtem (Roosdaal)',zip:'1760'},{label:'1760 Roosdaal',name:'Roosdaal',zip:'1760'},{label:'1760 Pamel (Roosdaal)',name:'Pamel (Roosdaal)',zip:'1760'},{label:'1760 Onze-Lieve-Vrouw-Lombeek (Roosdaal)',name:'Onze-Lieve-Vrouw-Lombeek (Roosdaal)',zip:'1760'},{label:'1755 Oetingen (Gooik)',name:'Oetingen (Gooik)',zip:'1755'},{label:'1755 Leerbeek (Gooik)',name:'Leerbeek (Gooik)',zip:'1755'},{label:'1755 Kester (Gooik)',name:'Kester (Gooik)',zip:'1755'},{label:'1755 Gooik',name:'Gooik',zip:'1755'},{label:'1750 Sint-Martens-Lennik (Lennik)',name:'Sint-Martens-Lennik (Lennik)',zip:'1750'},{label:'1750 Sint-Kwintens-Lennik (Lennik)',name:'Sint-Kwintens-Lennik (Lennik)',zip:'1750'},{label:'1750 Lennik',name:'Lennik',zip:'1750'},{label:'1750 Gaasbeek (Lennik)',name:'Gaasbeek (Lennik)',zip:'1750'},{label:'1745 Opwijk',name:'Opwijk',zip:'1745'},{label:'1745 Mazenzele (Opwijk)',name:'Mazenzele (Opwijk)',zip:'1745'},{label:'1742 Sint-Katherina-Lombeek (Ternat)',name:'Sint-Katherina-Lombeek (Ternat)',zip:'1742'},{label:'1741 Wambeek (Ternat)',name:'Wambeek (Ternat)',zip:'1741'},{label:'1740 Ternat',name:'Ternat',zip:'1740'},{label:'1731 Zellik (Asse)',name:'Zellik (Asse)',zip:'1731'},{label:'1731 Relegem (Asse)',name:'Relegem (Asse)',zip:'1731'},{label:'1730 Mollem (Asse)',name:'Mollem (Asse)',zip:'1730'},{label:'1730 Kobbegem (Asse)',name:'Kobbegem (Asse)',zip:'1730'},{label:'1730 Bekkerzeel (Asse)',name:'Bekkerzeel (Asse)',zip:'1730'},{label:'1730 Asse',name:'Asse',zip:'1730'},{label:'1703 Schepdaal (Dilbeek)',name:'Schepdaal (Dilbeek)',zip:'1703'},{label:'1702 Groot-Bijgaarden (Dilbeek)',name:'Groot-Bijgaarden (Dilbeek)',zip:'1702'},{label:'1701 Itterbeek (Dilbeek)',name:'Itterbeek (Dilbeek)',zip:'1701'},{label:'1700 Sint-Ulriks-Kapelle (Dilbeek)',name:'Sint-Ulriks-Kapelle (Dilbeek)',zip:'1700'},{label:'1700 Sint-Martens-Bodegem (Dilbeek)',name:'Sint-Martens-Bodegem (Dilbeek)',zip:'1700'},{label:'1700 Dilbeek',name:'Dilbeek',zip:'1700'},{label:'1674 Bellingen (Pepingen)',name:'Bellingen (Pepingen)',zip:'1674'},{label:'1673 Beert (Pepingen)',name:'Beert (Pepingen)',zip:'1673'},{label:'1671 Elingen (Pepingen)',name:'Elingen (Pepingen)',zip:'1671'},{label:'1670 Pepingen',name:'Pepingen',zip:'1670'},{label:'1670 Heikruis (Pepingen)',name:'Heikruis (Pepingen)',zip:'1670'},{label:'1670 Bogaarden (Pepingen)',name:'Bogaarden (Pepingen)',zip:'1670'},{label:'1654 Huizingen (Beersel)',name:'Huizingen (Beersel)',zip:'1654'},{label:'1653 Dworp (Beersel)',name:'Dworp (Beersel)',zip:'1653'},{label:'1652 Alsemberg (Beersel)',name:'Alsemberg (Beersel)',zip:'1652'},{label:'1651 Lot (Beersel)',name:'Lot (Beersel)',zip:'1651'},{label:'1650 Beersel',name:'Beersel',zip:'1650'},{label:'1630 Linkebeek',name:'Linkebeek',zip:'1630'},{label:'1620 Drogenbos',name:'Drogenbos',zip:'1620'},{label:'1602 Vlezenbeek (Sint-Pieters-Leeuw)',name:'Vlezenbeek (Sint-Pieters-Leeuw)',zip:'1602'},{label:'1600 Sint-Pieters-Leeuw',name:'Sint-Pieters-Leeuw',zip:'1600'},{label:'1600 Sint-Laureins-Berchem (Sint-Pieters-Leeuw)',name:'Sint-Laureins-Berchem (Sint-Pieters-Leeuw)',zip:'1600'},{label:'1600 Oudenaken (Sint-Pieters-Leeuw)',name:'Oudenaken (Sint-Pieters-Leeuw)',zip:'1600'},{label:'1570 Vollezele (Galmaarden)',name:'Vollezele (Galmaarden)',zip:'1570'},{label:'1570 Tollembeek (Galmaarden)',name:'Tollembeek (Galmaarden)',zip:'1570'},{label:'1570 Galmaarden',name:'Galmaarden',zip:'1570'},{label:'1560 Hoeilaart',name:'Hoeilaart',zip:'1560'},{label:'1540 Herne',name:'Herne',zip:'1540'},{label:'1540 Herfelingen (Herne)',name:'Herfelingen (Herne)',zip:'1540'},{label:'1502 Lembeek (Halle)',name:'Lembeek (Halle)',zip:'1502'},{label:'1501 Buizingen (Halle)',name:'Buizingen (Halle)',zip:'1501'},{label:'1500 Halle',name:'Halle',zip:'1500'},{label:'9992 Middelburg (Maldegem)',name:'Middelburg (Maldegem)',zip:'9992'},{label:'9991 Adegem (Maldegem)',name:'Adegem (Maldegem)',zip:'9991'},{label:'9990 Maldegem',name:'Maldegem',zip:'9990'},{label:'9988 Watervliet (Sint-Laureins)',name:'Watervliet (Sint-Laureins)',zip:'9988'},{label:'9988 Waterland-Oudeman (Sint-Laureins)',name:'Waterland-Oudeman (Sint-Laureins)',zip:'9988'},{label:'9982 Sint-Jan-In-Eremo (Sint-Laureins)',name:'Sint-Jan-In-Eremo (Sint-Laureins)',zip:'9982'},{label:'9981 Sint-Margriete (Sint-Laureins)',name:'Sint-Margriete (Sint-Laureins)',zip:'9981'},{label:'9980 Sint-Laureins',name:'Sint-Laureins',zip:'9980'},{label:'9971 Lembeke (Kaprijke)',name:'Lembeke (Kaprijke)',zip:'9971'},{label:'9970 Kaprijke',name:'Kaprijke',zip:'9970'},{label:'9968 Oosteeklo (Assenede)',name:'Oosteeklo (Assenede)',zip:'9968'},{label:'9968 Bassevelde (Assenede)',name:'Bassevelde (Assenede)',zip:'9968'},{label:'9961 Boekhoute (Assenede)',name:'Boekhoute (Assenede)',zip:'9961'},{label:'9960 Assenede',name:'Assenede',zip:'9960'},{label:'9950 Waarschoot',name:'Waarschoot',zip:'9950'},{label:'9940 Sleidinge (Evergem)',name:'Sleidinge (Evergem)',zip:'9940'},{label:'9940 Kluizen (Evergem)',name:'Kluizen (Evergem)',zip:'9940'},{label:'9940 Evergem',name:'Evergem',zip:'9940'},{label:'9940 Ertvelde (Evergem)',name:'Ertvelde (Evergem)',zip:'9940'},{label:'9932 Ronsele (Zomergem)',name:'Ronsele (Zomergem)',zip:'9932'},{label:'9931 Oostwinkel (Zomergem)',name:'Oostwinkel (Zomergem)',zip:'9931'},{label:'9930 Zomergem',name:'Zomergem',zip:'9930'},{label:'9921 Vinderhoute (Lovendegem)',name:'Vinderhoute (Lovendegem)',zip:'9921'},{label:'9920 Lovendegem',name:'Lovendegem',zip:'9920'},{label:'9910 Ursel (Knesselare)',name:'Ursel (Knesselare)',zip:'9910'},{label:'9910 Knesselare',name:'Knesselare',zip:'9910'},{label:'9900 Eeklo',name:'Eeklo',zip:'9900'},{label:'9890 Vurste (Gavere)',name:'Vurste (Gavere)',zip:'9890'},{label:'9890 Semmerzake (Gavere)',name:'Semmerzake (Gavere)',zip:'9890'},{label:'9890 Gavere',name:'Gavere',zip:'9890'},{label:'9890 Dikkelvenne (Gavere)',name:'Dikkelvenne (Gavere)',zip:'9890'},{label:'9890 Baaigem (Gavere)',name:'Baaigem (Gavere)',zip:'9890'},{label:'9890 Asper (Gavere)',name:'Asper (Gavere)',zip:'9890'},{label:'9881 Bellem (Aalter)',name:'Bellem (Aalter)',zip:'9881'},{label:'9880 Poeke (Aalter)',name:'Poeke (Aalter)',zip:'9880'},{label:'9880 Lotenhulle (Aalter)',name:'Lotenhulle (Aalter)',zip:'9880'},{label:'9880 Aalter',name:'Aalter',zip:'9880'},{label:'9870 Zulte',name:'Zulte',zip:'9870'},{label:'9870 Olsene (Zulte)',name:'Olsene (Zulte)',zip:'9870'},{label:'9860 Scheldewindeke (Oosterzele)',name:'Scheldewindeke (Oosterzele)',zip:'9860'},{label:'9860 Oosterzele',name:'Oosterzele',zip:'9860'},{label:'9860 Moortsele (Oosterzele)',name:'Moortsele (Oosterzele)',zip:'9860'},{label:'9860 Landskouter (Oosterzele)',name:'Landskouter (Oosterzele)',zip:'9860'},{label:'9860 Gijzenzele (Oosterzele)',name:'Gijzenzele (Oosterzele)',zip:'9860'},{label:'9860 Balegem (Oosterzele)',name:'Balegem (Oosterzele)',zip:'9860'},{label:'9850 Vosselare (Nevele)',name:'Vosselare (Nevele)',zip:'9850'},{label:'9850 Poesele (Nevele)',name:'Poesele (Nevele)',zip:'9850'},{label:'9850 Nevele',name:'Nevele',zip:'9850'},{label:'9850 Merendree (Nevele)',name:'Merendree (Nevele)',zip:'9850'},{label:'9850 Landegem (Nevele)',name:'Landegem (Nevele)',zip:'9850'},{label:'9850 Hansbeke (Nevele)',name:'Hansbeke (Nevele)',zip:'9850'},{label:'9840 Zevergem (De Pinte)',name:'Zevergem (De Pinte)',zip:'9840'},{label:'9831 Deurle (Sint-Martens-Latem)',name:'Deurle (Sint-Martens-Latem)',zip:'9831'},{label:'9830 Sint-Martens-Latem',name:'Sint-Martens-Latem',zip:'9830'},{label:'9820 Schelderode (Merelbeke)',name:'Schelderode (Merelbeke)',zip:'9820'},{label:'9820 Munte (Merelbeke)',name:'Munte (Merelbeke)',zip:'9820'},{label:'9820 Merelbeke',name:'Merelbeke',zip:'9820'},{label:'9820 Melsen (Merelbeke)',name:'Melsen (Merelbeke)',zip:'9820'},{label:'9820 Lemberge (Merelbeke)',name:'Lemberge (Merelbeke)',zip:'9820'},{label:'9820 Bottelare (Merelbeke)',name:'Bottelare (Merelbeke)',zip:'9820'},{label:'9810 Nazareth',name:'Nazareth',zip:'9810'},{label:'9810 Eke (Nazareth)',name:'Eke (Nazareth)',zip:'9810'},{label:'9800 Zeveren (Deinze)',name:'Zeveren (Deinze)',zip:'9800'},{label:'9800 Wontergem (Deinze)',name:'Wontergem (Deinze)',zip:'9800'},{label:'9800 Vinkt (Deinze)',name:'Vinkt (Deinze)',zip:'9800'},{label:'9800 Sint-Martens-Leerne (Deinze)',name:'Sint-Martens-Leerne (Deinze)',zip:'9800'},{label:'9800 Petegem-Aan-De-Leie (Deinze)',name:'Petegem-Aan-De-Leie (Deinze)',zip:'9800'},{label:'9800 Meigem (Deinze)',name:'Meigem (Deinze)',zip:'9800'},{label:'9800 Grammene (Deinze)',name:'Grammene (Deinze)',zip:'9800'},{label:'9800 Gottem (Deinze)',name:'Gottem (Deinze)',zip:'9800'},{label:'9800 Deinze',name:'Deinze',zip:'9800'},{label:'9800 Bachte-Maria-Leerne (Deinze)',name:'Bachte-Maria-Leerne (Deinze)',zip:'9800'},{label:'9800 Astene (Deinze)',name:'Astene (Deinze)',zip:'9800'},{label:'9790 Wortegem-Petegem',name:'Wortegem-Petegem',zip:'9790'},{label:'9790 Wortegem (Wortegem-Petegem)',name:'Wortegem (Wortegem-Petegem)',zip:'9790'},{label:'9790 Petegem-Aan-De-Schelde (Wortegem-Petegem)',name:'Petegem-Aan-De-Schelde (Wortegem-Petegem)',zip:'9790'},{label:'9790 Moregem (Wortegem-Petegem)',name:'Moregem (Wortegem-Petegem)',zip:'9790'},{label:'9790 Elsegem (Wortegem-Petegem)',name:'Elsegem (Wortegem-Petegem)',zip:'9790'},{label:'9772 Wannegem-Lede (Kruishoutem)',name:'Wannegem-Lede (Kruishoutem)',zip:'9772'},{label:'9771 Nokere (Kruishoutem)',name:'Nokere (Kruishoutem)',zip:'9771'},{label:'9770 Kruishoutem',name:'Kruishoutem',zip:'9770'},{label:'9750 Zingem',name:'Zingem',zip:'9750'},{label:'9750 Ouwegem (Zingem)',name:'Ouwegem (Zingem)',zip:'9750'},{label:'9750 Huise (Zingem)',name:'Huise (Zingem)',zip:'9750'},{label:'9700 Welden (Oudenaarde)',name:'Welden (Oudenaarde)',zip:'9700'},{label:'9700 Volkegem (Oudenaarde)',name:'Volkegem (Oudenaarde)',zip:'9700'},{label:'9700 Oudenaarde',name:'Oudenaarde',zip:'9700'},{label:'9700 Nederename (Oudenaarde)',name:'Nederename (Oudenaarde)',zip:'9700'},{label:'9700 Mullem (Oudenaarde)',name:'Mullem (Oudenaarde)',zip:'9700'},{label:'9700 Melden (Oudenaarde)',name:'Melden (Oudenaarde)',zip:'9700'},{label:'9700 Mater (Oudenaarde)',name:'Mater (Oudenaarde)',zip:'9700'},{label:'9700 Leupegem (Oudenaarde)',name:'Leupegem (Oudenaarde)',zip:'9700'},{label:'9700 Heurne (Oudenaarde)',name:'Heurne (Oudenaarde)',zip:'9700'},{label:'9700 Ename (Oudenaarde)',name:'Ename (Oudenaarde)',zip:'9700'},{label:'9700 Eine (Oudenaarde)',name:'Eine (Oudenaarde)',zip:'9700'},{label:'9700 Edelare (Oudenaarde)',name:'Edelare (Oudenaarde)',zip:'9700'},{label:'9700 Bevere (Oudenaarde)',name:'Bevere (Oudenaarde)',zip:'9700'},{label:'9690 Zulzeke (Kluisbergen)',name:'Zulzeke (Kluisbergen)',zip:'9690'},{label:'9690 Ruien (Kluisbergen)',name:'Ruien (Kluisbergen)',zip:'9690'},{label:'9690 Kluisbergen',name:'Kluisbergen',zip:'9690'},{label:'9688 Schorisse (Maarkedal)',name:'Schorisse (Maarkedal)',zip:'9688'},{label:'9681 Nukerke (Maarkedal)',name:'Nukerke (Maarkedal)',zip:'9681'},{label:'9680 Maarke-Kerkem (Maarkedal)',name:'Maarke-Kerkem (Maarkedal)',zip:'9680'},{label:'9680 Maarkedal',name:'Maarkedal',zip:'9680'},{label:'9680 Etikhove (Maarkedal)',name:'Etikhove (Maarkedal)',zip:'9680'},{label:'9667 Sint-Maria-Horebeke (Horebeke)',name:'Sint-Maria-Horebeke (Horebeke)',zip:'9667'},{label:'9667 Sint-Kornelis-Horebeke (Horebeke)',name:'Sint-Kornelis-Horebeke (Horebeke)',zip:'9667'},{label:'9667 Horebeke',name:'Horebeke',zip:'9667'},{label:'9661 Parike (Brakel)',name:'Parike (Brakel)',zip:'9661'},{label:'9660 Zegelsem (Brakel)',name:'Zegelsem (Brakel)',zip:'9660'},{label:'9660 Opbrakel (Brakel)',name:'Opbrakel (Brakel)',zip:'9660'},{label:'9660 Nederbrakel (Brakel)',name:'Nederbrakel (Brakel)',zip:'9660'},{label:'9660 Michelbeke (Brakel)',name:'Michelbeke (Brakel)',zip:'9660'},{label:'9660 Everbeek (Brakel)',name:'Everbeek (Brakel)',zip:'9660'},{label:'9660 Elst (Brakel)',name:'Elst (Brakel)',zip:'9660'},{label:'9660 Brakel',name:'Brakel',zip:'9660'},{label:'9636 Nederzwalm-Hermelgem (Zwalm)',name:'Nederzwalm-Hermelgem (Zwalm)',zip:'9636'},{label:'9630 Zwalm',name:'Zwalm',zip:'9630'},{label:'9630 Sint-Maria-Latem (Zwalm)',name:'Sint-Maria-Latem (Zwalm)',zip:'9630'},{label:'9630 Sint-Denijs-Boekel (Zwalm)',name:'Sint-Denijs-Boekel (Zwalm)',zip:'9630'},{label:'9630 Sint-Blasius-Boekel (Zwalm)',name:'Sint-Blasius-Boekel (Zwalm)',zip:'9630'},{label:'9630 Rozebeke (Zwalm)',name:'Rozebeke (Zwalm)',zip:'9630'},{label:'9630 Roborst (Zwalm)',name:'Roborst (Zwalm)',zip:'9630'},{label:'9630 Paulatem (Zwalm)',name:'Paulatem (Zwalm)',zip:'9630'},{label:'9630 Munkzwalm (Zwalm)',name:'Munkzwalm (Zwalm)',zip:'9630'},{label:'9630 Meilegem (Zwalm)',name:'Meilegem (Zwalm)',zip:'9630'},{label:'9630 Hundelgem (Zwalm)',name:'Hundelgem (Zwalm)',zip:'9630'},{label:'9630 Dikkele (Zwalm)',name:'Dikkele (Zwalm)',zip:'9630'},{label:'9630 Beerlegem (Zwalm)',name:'Beerlegem (Zwalm)',zip:'9630'},{label:'9620 Zottegem',name:'Zottegem',zip:'9620'},{label:'9620 Velzeke-Ruddershove (Zottegem)',name:'Velzeke-Ruddershove (Zottegem)',zip:'9620'},{label:'9620 Strijpen (Zottegem)',name:'Strijpen (Zottegem)',zip:'9620'},{label:'9620 Sint-Goriks-Oudenhove (Zottegem)',name:'Sint-Goriks-Oudenhove (Zottegem)',zip:'9620'},{label:'9620 Leeuwergem (Zottegem)',name:'Leeuwergem (Zottegem)',zip:'9620'},{label:'9620 Grotenberge (Zottegem)',name:'Grotenberge (Zottegem)',zip:'9620'},{label:'9620 Godveerdegem (Zottegem)',name:'Godveerdegem (Zottegem)',zip:'9620'},{label:'9620 Erwetegem (Zottegem)',name:'Erwetegem (Zottegem)',zip:'9620'},{label:'9620 Elene (Zottegem)',name:'Elene (Zottegem)',zip:'9620'},{label:'9690 Kwaremont (Kluisbergen)',name:'Kwaremont (Kluisbergen)',zip:'9690'},{label:'9572 Sint-Martens-Lierde (Lierde)',name:'Sint-Martens-Lierde (Lierde)',zip:'9572'},{label:'9571 Hemelveerdegem (Lierde)',name:'Hemelveerdegem (Lierde)',zip:'9571'},{label:'9570 Sint-Maria-Lierde (Lierde)',name:'Sint-Maria-Lierde (Lierde)',zip:'9570'},{label:'9570 Lierde',name:'Lierde',zip:'9570'},{label:'9570 Deftinge (Lierde)',name:'Deftinge (Lierde)',zip:'9570'},{label:'9552 Borsbeke (Herzele)',name:'Borsbeke (Herzele)',zip:'9552'},{label:'9551 Ressegem (Herzele)',name:'Ressegem (Herzele)',zip:'9551'},{label:'9550 Woubrechtegem (Herzele)',name:'Woubrechtegem (Herzele)',zip:'9550'},{label:'9550 Steenhuize-Wijnhuize (Herzele)',name:'Steenhuize-Wijnhuize (Herzele)',zip:'9550'},{label:'9550 Sint-Lievens-Esse (Herzele)',name:'Sint-Lievens-Esse (Herzele)',zip:'9550'},{label:'9550 Sint-Antelinks (Herzele)',name:'Sint-Antelinks (Herzele)',zip:'9550'},{label:'9550 Hillegem (Herzele)',name:'Hillegem (Herzele)',zip:'9550'},{label:'9550 Herzele',name:'Herzele',zip:'9550'},{label:'9521 Letterhoutem (Sint-Lievens-Houtem)',name:'Letterhoutem (Sint-Lievens-Houtem)',zip:'9521'},{label:'9520 Zonnegem (Sint-Lievens-Houtem)',name:'Zonnegem (Sint-Lievens-Houtem)',zip:'9520'},{label:'9520 Vlierzele (Sint-Lievens-Houtem)',name:'Vlierzele (Sint-Lievens-Houtem)',zip:'9520'},{label:'9520 Sint-Lievens-Houtem',name:'Sint-Lievens-Houtem',zip:'9520'},{label:'9520 Bavegem (Sint-Lievens-Houtem)',name:'Bavegem (Sint-Lievens-Houtem)',zip:'9520'},{label:'9506 Zandbergen (Geraardsbergen)',name:'Zandbergen (Geraardsbergen)',zip:'9506'},{label:'9506 Waarbeke (Geraardsbergen)',name:'Waarbeke (Geraardsbergen)',zip:'9506'},{label:'9506 Smeerebbe-Vloerzegem (Geraardsbergen)',name:'Smeerebbe-Vloerzegem (Geraardsbergen)',zip:'9506'},{label:'9506 Schendelbeke (Geraardsbergen)',name:'Schendelbeke (Geraardsbergen)',zip:'9506'},{label:'9506 Nieuwenhove (Geraardsbergen)',name:'Nieuwenhove (Geraardsbergen)',zip:'9506'},{label:'9506 Idegem (Geraardsbergen)',name:'Idegem (Geraardsbergen)',zip:'9506'},{label:'9506 Grimminge (Geraardsbergen)',name:'Grimminge (Geraardsbergen)',zip:'9506'},{label:'9500 Zarlardinge (Geraardsbergen)',name:'Zarlardinge (Geraardsbergen)',zip:'9500'},{label:'9500 Viane (Geraardsbergen)',name:'Viane (Geraardsbergen)',zip:'9500'},{label:'9500 Overboelare (Geraardsbergen)',name:'Overboelare (Geraardsbergen)',zip:'9500'},{label:'9500 Ophasselt (Geraardsbergen)',name:'Ophasselt (Geraardsbergen)',zip:'9500'},{label:'9500 Onkerzele (Geraardsbergen)',name:'Onkerzele (Geraardsbergen)',zip:'9500'},{label:'9500 Nederboelare (Geraardsbergen)',name:'Nederboelare (Geraardsbergen)',zip:'9500'},{label:'9500 Moerbeke (Geraardsbergen)',name:'Moerbeke (Geraardsbergen)',zip:'9500'},{label:'9500 Goeferdinge (Geraardsbergen)',name:'Goeferdinge (Geraardsbergen)',zip:'9500'},{label:'9500 Geraardsbergen',name:'Geraardsbergen',zip:'9500'},{label:'9473 Welle (Denderleeuw)',name:'Welle (Denderleeuw)',zip:'9473'},{label:'9472 Iddergem (Denderleeuw)',name:'Iddergem (Denderleeuw)',zip:'9472'},{label:'9470 Denderleeuw',name:'Denderleeuw',zip:'9470'},{label:'9451 Kerksken (Haaltert)',name:'Kerksken (Haaltert)',zip:'9451'},{label:'9450 Heldergem (Haaltert)',name:'Heldergem (Haaltert)',zip:'9450'},{label:'9450 Haaltert',name:'Haaltert',zip:'9450'},{label:'9450 Denderhoutem (Haaltert)',name:'Denderhoutem (Haaltert)',zip:'9450'},{label:'9420 Vlekkem (Erpe-Mere)',name:'Vlekkem (Erpe-Mere)',zip:'9420'},{label:'9420 Ottergem (Erpe-Mere)',name:'Ottergem (Erpe-Mere)',zip:'9420'},{label:'9420 Mere (Erpe-Mere)',name:'Mere (Erpe-Mere)',zip:'9420'},{label:'9420 Erpe-Mere',name:'Erpe-Mere',zip:'9420'},{label:'9420 Erpe (Erpe-Mere)',name:'Erpe (Erpe-Mere)',zip:'9420'},{label:'9420 Erondegem (Erpe-Mere)',name:'Erondegem (Erpe-Mere)',zip:'9420'},{label:'9420 Burst (Erpe-Mere)',name:'Burst (Erpe-Mere)',zip:'9420'},{label:'9420 Bambrugge (Erpe-Mere)',name:'Bambrugge (Erpe-Mere)',zip:'9420'},{label:'9420 Aaigem (Erpe-Mere)',name:'Aaigem (Erpe-Mere)',zip:'9420'},{label:'9406 Outer (Ninove)',name:'Outer (Ninove)',zip:'9406'},{label:'9404 Aspelare (Ninove)',name:'Aspelare (Ninove)',zip:'9404'},{label:'9403 Neigem (Ninove)',name:'Neigem (Ninove)',zip:'9403'},{label:'9402 Meerbeke (Ninove)',name:'Meerbeke (Ninove)',zip:'9402'},{label:'9401 Pollare (Ninove)',name:'Pollare (Ninove)',zip:'9401'},{label:'9400 Voorde (Ninove)',name:'Voorde (Ninove)',zip:'9400'},{label:'9400 Okegem (Ninove)',name:'Okegem (Ninove)',zip:'9400'},{label:'9400 Ninove',name:'Ninove',zip:'9400'},{label:'9400 Nederhasselt (Ninove)',name:'Nederhasselt (Ninove)',zip:'9400'},{label:'9400 Lieferinge (Ninove)',name:'Lieferinge (Ninove)',zip:'9400'},{label:'9400 Denderwindeke (Ninove)',name:'Denderwindeke (Ninove)',zip:'9400'},{label:'9400 Appelterre-Eichem (Ninove)',name:'Appelterre-Eichem (Ninove)',zip:'9400'},{label:'9340 Wanzele (Lede)',name:'Wanzele (Lede)',zip:'9340'},{label:'9340 Smetlede (Lede)',name:'Smetlede (Lede)',zip:'9340'},{label:'9340 Oordegem (Lede)',name:'Oordegem (Lede)',zip:'9340'},{label:'9340 Lede',name:'Lede',zip:'9340'},{label:'9340 Impe (Lede)',name:'Impe (Lede)',zip:'9340'},{label:'9320 Nieuwerkerken (Aalst)',name:'Nieuwerkerken (Aalst)',zip:'9320'},{label:'9320 Erembodegem (Aalst)',name:'Erembodegem (Aalst)',zip:'9320'},{label:'9310 Moorsel (Aalst)',name:'Moorsel (Aalst)',zip:'9310'},{label:'9310 Herdersem (Aalst)',name:'Herdersem (Aalst)',zip:'9310'},{label:'9310 Baardegem (Aalst)',name:'Baardegem (Aalst)',zip:'9310'},{label:'9308 Gijzegem (Aalst)',name:'Gijzegem (Aalst)',zip:'9308'},{label:'9300 Aalst',name:'Aalst',zip:'9300'},{label:'9290 Uitbergen (Berlare)',name:'Uitbergen (Berlare)',zip:'9290'},{label:'9290 Overmere (Berlare)',name:'Overmere (Berlare)',zip:'9290'},{label:'9290 Berlare',name:'Berlare',zip:'9290'},{label:'9280 Wieze (Lebbeke)',name:'Wieze (Lebbeke)',zip:'9280'},{label:'9280 Lebbeke',name:'Lebbeke',zip:'9280'},{label:'9280 Denderbelle (Lebbeke)',name:'Denderbelle (Lebbeke)',zip:'9280'},{label:'9270 Laarne',name:'Laarne',zip:'9270'},{label:'9270 Kalken (Laarne)',name:'Kalken (Laarne)',zip:'9270'},{label:'9260 Wichelen',name:'Wichelen',zip:'9260'},{label:'9260 Serskamp (Wichelen)',name:'Serskamp (Wichelen)',zip:'9260'},{label:'9260 Schellebelle (Wichelen)',name:'Schellebelle (Wichelen)',zip:'9260'},{label:'9255 Opdorp (Buggenhout)',name:'Opdorp (Buggenhout)',zip:'9255'},{label:'9255 Buggenhout',name:'Buggenhout',zip:'9255'},{label:'9250 Waasmunster',name:'Waasmunster',zip:'9250'},{label:'9240 Zele',name:'Zele',zip:'9240'},{label:'9230 Wetteren',name:'Wetteren',zip:'9230'},{label:'9230 Westrem (Wetteren)',name:'Westrem (Wetteren)',zip:'9230'},{label:'9230 Massemen (Wetteren)',name:'Massemen (Wetteren)',zip:'9230'},{label:'9220 Moerzeke (Hamme)',name:'Moerzeke (Hamme)',zip:'9220'},{label:'9200 Schoonaarde (Dendermonde)',name:'Schoonaarde (Dendermonde)',zip:'9200'},{label:'9200 Oudegem (Dendermonde)',name:'Oudegem (Dendermonde)',zip:'9200'},{label:'9200 Mespelare (Dendermonde)',name:'Mespelare (Dendermonde)',zip:'9200'},{label:'9200 Grembergen (Dendermonde)',name:'Grembergen (Dendermonde)',zip:'9200'},{label:'9200 Dendermonde',name:'Dendermonde',zip:'9200'},{label:'9200 Baasrode (Dendermonde)',name:'Baasrode (Dendermonde)',zip:'9200'},{label:'9200 Appels (Dendermonde)',name:'Appels (Dendermonde)',zip:'9200'},{label:'9190 Stekene',name:'Stekene',zip:'9190'},{label:'9190 Kemzeke (Stekene)',name:'Kemzeke (Stekene)',zip:'9190'},{label:'9185 Wachtebeke',name:'Wachtebeke',zip:'9185'},{label:'9180 Moerbeke-Waas',name:'Moerbeke-Waas',zip:'9180'},{label:'9170 Sint-Pauwels (Sint-Gillis-Waas)',name:'Sint-Pauwels (Sint-Gillis-Waas)',zip:'9170'},{label:'9170 Sint-Gillis-Waas',name:'Sint-Gillis-Waas',zip:'9170'},{label:'9170 Meerdonk (Sint-Gillis-Waas)',name:'Meerdonk (Sint-Gillis-Waas)',zip:'9170'},{label:'9160 Lokeren',name:'Lokeren',zip:'9160'},{label:'9160 Eksaarde (Lokeren)',name:'Eksaarde (Lokeren)',zip:'9160'},{label:'9160 Daknam (Lokeren)',name:'Daknam (Lokeren)',zip:'9160'},{label:'9150 Rupelmonde (Kruibeke)',name:'Rupelmonde (Kruibeke)',zip:'9150'},{label:'9150 Kruibeke',name:'Kruibeke',zip:'9150'},{label:'9150 Bazel (Kruibeke)',name:'Bazel (Kruibeke)',zip:'9150'},{label:'9140 Tielrode (Temse)',name:'Tielrode (Temse)',zip:'9140'},{label:'9140 Temse',name:'Temse',zip:'9140'},{label:'9140 Steendorp (Temse)',name:'Steendorp (Temse)',zip:'9140'},{label:'9140 Elversele (Temse)',name:'Elversele (Temse)',zip:'9140'},{label:'9130 Verrebroek (Beveren)',name:'Verrebroek (Beveren)',zip:'9130'},{label:'9130 Kieldrecht (Beveren)',name:'Kieldrecht (Beveren)',zip:'9130'},{label:'9130 Doel (Beveren)',name:'Doel (Beveren)',zip:'9130'},{label:'9120 Vrasene (Beveren)',name:'Vrasene (Beveren)',zip:'9120'},{label:'9120 Melsele (Beveren)',name:'Melsele (Beveren)',zip:'9120'},{label:'9120 Haasdonk (Beveren)',name:'Haasdonk (Beveren)',zip:'9120'},{label:'9112 Sinaai-Waas (Sint-Niklaas)',name:'Sinaai-Waas (Sint-Niklaas)',zip:'9112'},{label:'9111 Belsele (Sint-Niklaas)',name:'Belsele (Sint-Niklaas)',zip:'9111'},{label:'9100 Sint-Niklaas',name:'Sint-Niklaas',zip:'9100'},{label:'9100 Nieuwkerken-Waas (Sint-Niklaas)',name:'Nieuwkerken-Waas (Sint-Niklaas)',zip:'9100'},{label:'9090 Melle',name:'Melle',zip:'9090'},{label:'9090 Gontrode (Melle)',name:'Gontrode (Melle)',zip:'9090'},{label:'9080 Zeveneken (Lochristi)',name:'Zeveneken (Lochristi)',zip:'9080'},{label:'9080 Zaffelare (Lochristi)',name:'Zaffelare (Lochristi)',zip:'9080'},{label:'9080 Lochristi',name:'Lochristi',zip:'9080'},{label:'9080 Beervelde (Lochristi)',name:'Beervelde (Lochristi)',zip:'9080'},{label:'9070 Destelbergen',name:'Destelbergen',zip:'9070'},{label:'9060 Zelzate',name:'Zelzate',zip:'9060'},{label:'9052 Zwijnaarde (Gent)',name:'Zwijnaarde (Gent)',zip:'9052'},{label:'9051 Sint-Denijs-Westrem (Gent)',name:'Sint-Denijs-Westrem (Gent)',zip:'9051'},{label:'9051 Afsnee (Gent)',name:'Afsnee (Gent)',zip:'9051'},{label:'9050 Ledeberg (Gent)',name:'Ledeberg (Gent)',zip:'9050'},{label:'9050 Gentbrugge (Gent)',name:'Gentbrugge (Gent)',zip:'9050'},{label:'9042 Sint-Kruis-Winkel (Gent)',name:'Sint-Kruis-Winkel (Gent)',zip:'9042'},{label:'9042 Mendonk (Gent)',name:'Mendonk (Gent)',zip:'9042'},{label:'9042 Desteldonk',name:'Desteldonk',zip:'9042'},{label:'9041 Oostakker (Gent)',name:'Oostakker (Gent)',zip:'9041'},{label:'9040 Sint-Amandsberg (Gent)',name:'Sint-Amandsberg (Gent)',zip:'9040'},{label:'9032 Wondelgem (Gent)',name:'Wondelgem (Gent)',zip:'9032'},{label:'9031 Drongen (Gent)',name:'Drongen (Gent)',zip:'9031'},{label:'9030 Mariakerke (Gent)',name:'Mariakerke (Gent)',zip:'9030'},{label:'9000 Gent',name:'Gent',zip:'9000'},{label:'3990 Wijchmaal (Peer)',name:'Wijchmaal (Peer)',zip:'3990'},{label:'3990 Peer',name:'Peer',zip:'3990'},{label:'3990 Kleine-Brogel (Peer)',name:'Kleine-Brogel (Peer)',zip:'3990'},{label:'3990 Grote-Brogel (Peer)',name:'Grote-Brogel (Peer)',zip:'3990'},{label:'3980 Tessenderlo',name:'Tessenderlo',zip:'3980'},{label:'3971 Heppen (Leopoldsburg)',name:'Heppen (Leopoldsburg)',zip:'3971'},{label:'3970 Leopoldsburg',name:'Leopoldsburg',zip:'3970'},{label:'3960 Opitter (Bree)',name:'Opitter (Bree)',zip:'3960'},{label:'3960 Gerdingen (Bree)',name:'Gerdingen (Bree)',zip:'3960'},{label:'3960 Bree',name:'Bree',zip:'3960'},{label:'3960 Beek (Bree)',name:'Beek (Bree)',zip:'3960'},{label:'3950 Reppel (Bocholt)',name:'Reppel (Bocholt)',zip:'3950'},{label:'3950 Kaulille (Bocholt)',name:'Kaulille (Bocholt)',zip:'3950'},{label:'3950 Bocholt',name:'Bocholt',zip:'3950'},{label:'3945 Oostham (Ham)',name:'Oostham (Ham)',zip:'3945'},{label:'3945 Kwaadmechelen (Ham)',name:'Kwaadmechelen (Ham)',zip:'3945'},{label:'3945 Ham',name:'Ham',zip:'3945'},{label:'3941 Eksel (Hechtel-Eksel)',name:'Eksel (Hechtel-Eksel)',zip:'3941'},{label:'3940 Hechtel-Eksel',name:'Hechtel-Eksel',zip:'3940'},{label:'3940 Hechtel',name:'Hechtel',zip:'3940'},{label:'3930 Hamont-Achel',name:'Hamont-Achel',zip:'3930'},{label:'3930 Hamont (Hamont-Achel)',name:'Hamont (Hamont-Achel)',zip:'3930'},{label:'3930 Achel (Hamont-Achel)',name:'Achel (Hamont-Achel)',zip:'3930'},{label:'3920 Lommel',name:'Lommel',zip:'3920'},{label:'3910 Sint-Huibrechts-Lille (Neerpelt)',name:'Sint-Huibrechts-Lille (Neerpelt)',zip:'3910'},{label:'3910 Neerpelt',name:'Neerpelt',zip:'3910'},{label:'3900 Overpelt',name:'Overpelt',zip:'3900'},{label:'3891 Mielen-Boven-Aalst (Gingelom)',name:'Mielen-Boven-Aalst (Gingelom)',zip:'3891'},{label:'3891 Buvingen (Gingelom)',name:'Buvingen (Gingelom)',zip:'3891'},{label:'3891 Borlo (Gingelom)',name:'Borlo (Gingelom)',zip:'3891'},{label:'3890 Vorsen (Gingelom)',name:'Vorsen (Gingelom)',zip:'3890'},{label:'3890 Niel-Bij-Sint-Truiden (Gingelom)',name:'Niel-Bij-Sint-Truiden (Gingelom)',zip:'3890'},{label:'3890 Montenaken (Gingelom)',name:'Montenaken (Gingelom)',zip:'3890'},{label:'3890 Kortijs (Gingelom)',name:'Kortijs (Gingelom)',zip:'3890'},{label:'3890 Jeuk (Gingelom)',name:'Jeuk (Gingelom)',zip:'3890'},{label:'3890 Gingelom',name:'Gingelom',zip:'3890'},{label:'3890 Boekhout (Gingelom)',name:'Boekhout (Gingelom)',zip:'3890'},{label:'3870 Veulen (Heers)',name:'Veulen (Heers)',zip:'3870'},{label:'3870 Vechmaal (Heers)',name:'Vechmaal (Heers)',zip:'3870'},{label:'3870 Rukkelingen-Loon (Heers)',name:'Rukkelingen-Loon (Heers)',zip:'3870'},{label:'3870 Opheers (Heers)',name:'Opheers (Heers)',zip:'3870'},{label:'3870 Mettekoven (Heers)',name:'Mettekoven (Heers)',zip:'3870'},{label:'3870 Mechelen-Bovelingen (Heers)',name:'Mechelen-Bovelingen (Heers)',zip:'3870'},{label:'3870 Klein-Gelmen (Heers)',name:'Klein-Gelmen (Heers)',zip:'3870'},{label:'3870 Horpmaal (Heers)',name:'Horpmaal (Heers)',zip:'3870'},{label:'3870 Heks (Heers)',name:'Heks (Heers)',zip:'3870'},{label:'3870 Heers',name:'Heers',zip:'3870'},{label:'3870 Gutschoven (Heers)',name:'Gutschoven (Heers)',zip:'3870'},{label:'3870 Bovelingen (Heers)',name:'Bovelingen (Heers)',zip:'3870'},{label:'3870 Batsheers (Heers)',name:'Batsheers (Heers)',zip:'3870'},{label:'3850 Wijer (Nieuwerkerken)',name:'Wijer (Nieuwerkerken)',zip:'3850'},{label:'3850 Kozen (Nieuwerkerken)',name:'Kozen (Nieuwerkerken)',zip:'3850'},{label:'3850 Binderveld (Nieuwerkerken)',name:'Binderveld (Nieuwerkerken)',zip:'3850'},{label:'3840 Voort (Borgloon)',name:'Voort (Borgloon)',zip:'3840'},{label:'3840 Rijkel (Borgloon)',name:'Rijkel (Borgloon)',zip:'3840'},{label:'3840 Kuttekoven (Borgloon)',name:'Kuttekoven (Borgloon)',zip:'3840'},{label:'3840 Kerniel (Borgloon)',name:'Kerniel (Borgloon)',zip:'3840'},{label:'3840 Hoepertingen (Borgloon)',name:'Hoepertingen (Borgloon)',zip:'3840'},{label:'3840 Hendrieken (Borgloon)',name:'Hendrieken (Borgloon)',zip:'3840'},{label:'3840 Groot-Loon (Borgloon)',name:'Groot-Loon (Borgloon)',zip:'3840'},{label:'3840 Gotem (Borgloon)',name:'Gotem (Borgloon)',zip:'3840'},{label:'3840 Gors-Opleeuw (Borgloon)',name:'Gors-Opleeuw (Borgloon)',zip:'3840'},{label:'3840 Broekom (Borgloon)',name:'Broekom (Borgloon)',zip:'3840'},{label:'3840 Borgloon',name:'Borgloon',zip:'3840'},{label:'3832 Ulbeek (Wellen)',name:'Ulbeek (Wellen)',zip:'3832'},{label:'3831 Herten (Wellen)',name:'Herten (Wellen)',zip:'3831'},{label:'3830 Wellen',name:'Wellen',zip:'3830'},{label:'3830 Berlingen (Wellen)',name:'Berlingen (Wellen)',zip:'3830'},{label:'3806 Velm (Sint-Truiden)',name:'Velm (Sint-Truiden)',zip:'3806'},{label:'3803 Wilderen (Sint-Truiden)',name:'Wilderen (Sint-Truiden)',zip:'3803'},{label:'3803 Runkelen (Sint-Truiden)',name:'Runkelen (Sint-Truiden)',zip:'3803'},{label:'3803 Gorsem (Sint-Truiden)',name:'Gorsem (Sint-Truiden)',zip:'3803'},{label:'3803 Duras (Sint-Truiden)',name:'Duras (Sint-Truiden)',zip:'3803'},{label:'3800 Zepperen (Sint-Truiden)',name:'Zepperen (Sint-Truiden)',zip:'3800'},{label:'3800 Sint-Truiden',name:'Sint-Truiden',zip:'3800'},{label:'3800 Ordingen (Sint-Truiden)',name:'Ordingen (Sint-Truiden)',zip:'3800'},{label:'3800 Kerkom-Bij-Sint-Truiden (Sint-Truiden)',name:'Kerkom-Bij-Sint-Truiden (Sint-Truiden)',zip:'3800'},{label:'3800 Halmaal (Sint-Truiden)',name:'Halmaal (Sint-Truiden)',zip:'3800'},{label:'3800 Groot-Gelmen (Sint-Truiden)',name:'Groot-Gelmen (Sint-Truiden)',zip:'3800'},{label:'3800 Gelinden (Sint-Truiden)',name:'Gelinden (Sint-Truiden)',zip:'3800'},{label:'3800 Engelmanshoven (Sint-Truiden)',name:'Engelmanshoven (Sint-Truiden)',zip:'3800'},{label:'3800 Brustem (Sint-Truiden)',name:'Brustem (Sint-Truiden)',zip:'3800'},{label:'3793 Teuven (Voeren)',name:'Teuven (Voeren)',zip:'3793'},{label:'3791 Remersdaal (Voeren)',name:'Remersdaal (Voeren)',zip:'3791'},{label:'3770 Zichen-Zussen-Bolder (Riemst)',name:'Zichen-Zussen-Bolder (Riemst)',zip:'3770'},{label:'3770 Vroenhoven (Riemst)',name:'Vroenhoven (Riemst)',zip:'3770'},{label:'3770 Vlijtingen (Riemst)',name:'Vlijtingen (Riemst)',zip:'3770'},{label:'3770 Val-Meer (Riemst)',name:'Val-Meer (Riemst)',zip:'3770'},{label:'3770 Riemst',name:'Riemst',zip:'3770'},{label:'3770 Millen (Riemst)',name:'Millen (Riemst)',zip:'3770'},{label:'3770 Membruggen (Riemst)',name:'Membruggen (Riemst)',zip:'3770'},{label:'3770 Kanne (Riemst)',name:'Kanne (Riemst)',zip:'3770'},{label:'3770 Herderen (Riemst)',name:'Herderen (Riemst)',zip:'3770'},{label:'3770 Genoelselderen (Riemst)',name:'Genoelselderen (Riemst)',zip:'3770'},{label:'3746 Hoelbeek (Bilzen)',name:'Hoelbeek (Bilzen)',zip:'3746'},{label:'3742 Martenslinde (Bilzen)',name:'Martenslinde (Bilzen)',zip:'3742'},{label:'3740 Waltwilder (Bilzen)',name:'Waltwilder (Bilzen)',zip:'3740'},{label:'3740 Spouwen',name:'Spouwen',zip:'3740'},{label:'3740 Rosmeer (Bilzen)',name:'Rosmeer (Bilzen)',zip:'3740'},{label:'3740 Rijkhoven (Bilzen)',name:'Rijkhoven (Bilzen)',zip:'3740'},{label:'3740 Munsterbilzen (Bilzen)',name:'Munsterbilzen (Bilzen)',zip:'3740'},{label:'3740 Mopertingen (Bilzen)',name:'Mopertingen (Bilzen)',zip:'3740'},{label:'3740 Kleine-Spouwen (Bilzen)',name:'Kleine-Spouwen (Bilzen)',zip:'3740'},{label:'3740 Hees (Bilzen)',name:'Hees (Bilzen)',zip:'3740'},{label:'3740 Grote-Spouwen (Bilzen)',name:'Grote-Spouwen (Bilzen)',zip:'3740'},{label:'3740 Eigenbilzen (Bilzen)',name:'Eigenbilzen (Bilzen)',zip:'3740'},{label:'3740 Bilzen',name:'Bilzen',zip:'3740'},{label:'3740 Beverst (Bilzen)',name:'Beverst (Bilzen)',zip:'3740'},{label:'3732 Schalkhoven (Hoeselt)',name:'Schalkhoven (Hoeselt)',zip:'3732'},{label:'3730 Werm (Hoeselt)',name:'Werm (Hoeselt)',zip:'3730'},{label:'3730 Sint-Huibrechts-Hern (Hoeselt)',name:'Sint-Huibrechts-Hern (Hoeselt)',zip:'3730'},{label:'3730 Romershoven (Hoeselt)',name:'Romershoven (Hoeselt)',zip:'3730'},{label:'3730 Hoeselt',name:'Hoeselt',zip:'3730'},{label:'3724 Vliermaal (Kortessem)',name:'Vliermaal (Kortessem)',zip:'3724'},{label:'3723 Guigoven (Kortessem)',name:'Guigoven (Kortessem)',zip:'3723'},{label:'3722 Wintershoven (Kortessem)',name:'Wintershoven (Kortessem)',zip:'3722'},{label:'3721 Vliermaalroot (Kortessem)',name:'Vliermaalroot (Kortessem)',zip:'3721'},{label:'3720 Kortessem',name:'Kortessem',zip:'3720'},{label:'3717 Herstappe',name:'Herstappe',zip:'3717'},{label:'3700 Vreren (Tongeren)',name:'Vreren (Tongeren)',zip:'3700'},{label:'3700 Tongeren',name:'Tongeren',zip:'3700'},{label:'3700 Sluizen (Tongeren)',name:'Sluizen (Tongeren)',zip:'3700'},{label:'3700 Rutten (Tongeren)',name:'Rutten (Tongeren)',zip:'3700'},{label:'3700 Riksingen (Tongeren)',name:'Riksingen (Tongeren)',zip:'3700'},{label:'3700 Nerem (Tongeren)',name:'Nerem (Tongeren)',zip:'3700'},{label:'3700 Neerrepen (Tongeren)',name:'Neerrepen (Tongeren)',zip:'3700'},{label:'3700 Mal (Tongeren)',name:'Mal (Tongeren)',zip:'3700'},{label:'3700 Lauw (Tongeren)',name:'Lauw (Tongeren)',zip:'3700'},{label:'3700 Koninksem (Tongeren)',name:'Koninksem (Tongeren)',zip:'3700'},{label:'3700 Henis (Tongeren)',name:'Henis (Tongeren)',zip:'3700'},{label:'3700 Diets-Heur (Tongeren)',name:'Diets-Heur (Tongeren)',zip:'3700'},{label:'3690 Zutendaal',name:'Zutendaal',zip:'3690'},{label:'3680 Opoeteren (Maaseik)',name:'Opoeteren (Maaseik)',zip:'3680'},{label:'3680 Neeroeteren (Maaseik)',name:'Neeroeteren (Maaseik)',zip:'3680'},{label:'3680 Maaseik',name:'Maaseik',zip:'3680'},{label:'3670 Wijshagen (Meeuwen-Gruitrode)',name:'Wijshagen (Meeuwen-Gruitrode)',zip:'3670'},{label:'3670 Neerglabbeek (Meeuwen-Gruitrode)',name:'Neerglabbeek (Meeuwen-Gruitrode)',zip:'3670'},{label:'3670 Meeuwen-Gruitrode',name:'Meeuwen-Gruitrode',zip:'3670'},{label:'3670 Meeuwen (Meeuwen-Gruitrode)',name:'Meeuwen (Meeuwen-Gruitrode)',zip:'3670'},{label:'3670 Gruitrode (Meeuwen-Gruitrode)',name:'Gruitrode (Meeuwen-Gruitrode)',zip:'3670'},{label:'3670 Ellikom (Meeuwen-Gruitrode)',name:'Ellikom (Meeuwen-Gruitrode)',zip:'3670'},{label:'3668 Niel-Bij-As (As)',name:'Niel-Bij-As (As)',zip:'3668'},{label:'3665 As',name:'As',zip:'3665'},{label:'3660 Opglabbeek',name:'Opglabbeek',zip:'3660'},{label:'3650 Rotem (Dilsen-Stokkem)',name:'Rotem (Dilsen-Stokkem)',zip:'3650'},{label:'3650 Lanklaar (Dilsen-Stokkem)',name:'Lanklaar (Dilsen-Stokkem)',zip:'3650'},{label:'3650 Elen (Dilsen-Stokkem)',name:'Elen (Dilsen-Stokkem)',zip:'3650'},{label:'3650 Dilsen-Stokkem',name:'Dilsen-Stokkem',zip:'3650'},{label:'3640 Ophoven (Kinrooi)',name:'Ophoven (Kinrooi)',zip:'3640'},{label:'3640 Molenbeersel (Kinrooi)',name:'Molenbeersel (Kinrooi)',zip:'3640'},{label:'3640 Kinrooi',name:'Kinrooi',zip:'3640'},{label:'3640 Kessenich (Kinrooi)',name:'Kessenich (Kinrooi)',zip:'3640'},{label:'3631 Uikhoven (Maasmechelen)',name:'Uikhoven (Maasmechelen)',zip:'3631'},{label:'3631 Boorsem (Maasmechelen)',name:'Boorsem (Maasmechelen)',zip:'3631'},{label:'3630 Vucht (Maasmechelen)',name:'Vucht (Maasmechelen)',zip:'3630'},{label:'3630 Opgrimbie (Maasmechelen)',name:'Opgrimbie (Maasmechelen)',zip:'3630'},{label:'3630 Meeswijk (Maasmechelen)',name:'Meeswijk (Maasmechelen)',zip:'3630'},{label:'3630 Mechelen-Aan-De-Maas (Maasmechelen)',name:'Mechelen-Aan-De-Maas (Maasmechelen)',zip:'3630'},{label:'3630 Maasmechelen',name:'Maasmechelen',zip:'3630'},{label:'3630 Leut (Maasmechelen)',name:'Leut (Maasmechelen)',zip:'3630'},{label:'3630 Eisden (Maasmechelen)',name:'Eisden (Maasmechelen)',zip:'3630'},{label:'3621 Rekem (Lanaken)',name:'Rekem (Lanaken)',zip:'3621'},{label:'3620 Veldwezelt (Lanaken)',name:'Veldwezelt (Lanaken)',zip:'3620'},{label:'3620 Neerharen (Lanaken)',name:'Neerharen (Lanaken)',zip:'3620'},{label:'3620 Lanaken',name:'Lanaken',zip:'3620'},{label:'3620 Gellik (Lanaken)',name:'Gellik (Lanaken)',zip:'3620'},{label:'3600 Genk',name:'Genk',zip:'3600'},{label:'3590 Diepenbeek',name:'Diepenbeek',zip:'3590'},{label:'3583 Paal (Beringen)',name:'Paal (Beringen)',zip:'3583'},{label:'3582 Koersel (Beringen)',name:'Koersel (Beringen)',zip:'3582'},{label:'3581 Beverlo (Beringen)',name:'Beverlo (Beringen)',zip:'3581'},{label:'3580 Beringen',name:'Beringen',zip:'3580'},{label:'3570 Alken',name:'Alken',zip:'3570'},{label:'3560 Lummen',name:'Lummen',zip:'3560'},{label:'3560 Linkhout (Lummen)',name:'Linkhout (Lummen)',zip:'3560'},{label:'3550 Zolder (Heusden-Zolder)',name:'Zolder (Heusden-Zolder)',zip:'3550'},{label:'3550 Heusden-Zolder',name:'Heusden-Zolder',zip:'3550'},{label:'3545 Zelem (Halen)',name:'Zelem (Halen)',zip:'3545'},{label:'3545 Loksbergen (Halen)',name:'Loksbergen (Halen)',zip:'3545'},{label:'3545 Halen',name:'Halen',zip:'3545'},{label:'3540 Schulen (Herk-De-Stad)',name:'Schulen (Herk-De-Stad)',zip:'3540'},{label:'3540 Herk-de-Stad',name:'Herk-de-Stad',zip:'3540'},{label:'3540 Donk (Herk-De-Stad)',name:'Donk (Herk-De-Stad)',zip:'3540'},{label:'3540 Berbroek (Herk-De-Stad)',name:'Berbroek (Herk-De-Stad)',zip:'3540'},{label:'3530 Houthalen-Helchteren',name:'Houthalen-Helchteren',zip:'3530'},{label:'3530 Houthalen (Houthalen-Helchteren)',name:'Houthalen (Houthalen-Helchteren)',zip:'3530'},{label:'3530 Helchteren (Houthalen-Helchteren)',name:'Helchteren (Houthalen-Helchteren)',zip:'3530'},{label:'3520 Zonhoven',name:'Zonhoven',zip:'3520'},{label:'3512 Stevoort (Hasselt)',name:'Stevoort (Hasselt)',zip:'3512'},{label:'3511 Stokrooie (Hasselt)',name:'Stokrooie (Hasselt)',zip:'3511'},{label:'3511 Kuringen (Hasselt)',name:'Kuringen (Hasselt)',zip:'3511'},{label:'3510 Spalbeek (Hasselt)',name:'Spalbeek (Hasselt)',zip:'3510'},{label:'3510 Kermt (Hasselt)',name:'Kermt (Hasselt)',zip:'3510'},{label:'3501 Wimmertingen (Hasselt)',name:'Wimmertingen (Hasselt)',zip:'3501'},{label:'3500 Sint-Lambrechts-Herk (Hasselt)',name:'Sint-Lambrechts-Herk (Hasselt)',zip:'3500'},{label:'3500 Hasselt',name:'Hasselt',zip:'3500'},{label:'2990 Wuustwezel',name:'Wuustwezel',zip:'2990'},{label:'2990 Loenhout (Wuustwezel)',name:'Loenhout (Wuustwezel)',zip:'2990'},{label:'2980 Zoersel',name:'Zoersel',zip:'2980'},{label:'2970 Schilde',name:'Schilde',zip:'2970'},{label:'2960 Brecht',name:'Brecht',zip:'2960'},{label:'2940 Stabroek',name:'Stabroek',zip:'2940'},{label:'2940 Hoevenen (Stabroek)',name:'Hoevenen (Stabroek)',zip:'2940'},{label:'2930 Brasschaat',name:'Brasschaat',zip:'2930'},{label:'2920 Kalmthout',name:'Kalmthout',zip:'2920'},{label:'2910 Essen',name:'Essen',zip:'2910'},{label:'2900 Schoten',name:'Schoten',zip:'2900'},{label:'2890 Sint-Amands',name:'Sint-Amands',zip:'2890'},{label:'2890 Oppuurs (Sint-Amands)',name:'Oppuurs (Sint-Amands)',zip:'2890'},{label:'2890 Lippelo (Sint-Amands)',name:'Lippelo (Sint-Amands)',zip:'2890'},{label:'2880 Weert (Bornem)',name:'Weert (Bornem)',zip:'2880'},{label:'2880 Hingene (Bornem)',name:'Hingene (Bornem)',zip:'2880'},{label:'2880 Bornem',name:'Bornem',zip:'2880'},{label:'2870 Puurs',name:'Puurs',zip:'2870'},{label:'2870 Liezele (Puurs)',name:'Liezele (Puurs)',zip:'2870'},{label:'2870 Breendonk (Puurs)',name:'Breendonk (Puurs)',zip:'2870'},{label:'2861 Onze-Lieve-Vrouw-Waver (Sint-Katelijne-Waver)',name:'Onze-Lieve-Vrouw-Waver (Sint-Katelijne-Waver)',zip:'2861'},{label:'2860 Sint-Katelijne-Waver',name:'Sint-Katelijne-Waver',zip:'2860'},{label:'2850 Boom',name:'Boom',zip:'2850'},{label:'2845 Niel',name:'Niel',zip:'2845'},{label:'2840 Terhagen (Rumst)',name:'Terhagen (Rumst)',zip:'2840'},{label:'2840 Rumst',name:'Rumst',zip:'2840'},{label:'2840 Reet (Rumst)',name:'Reet (Rumst)',zip:'2840'},{label:'2830 Willebroek',name:'Willebroek',zip:'2830'},{label:'2830 Tisselt (Willebroek)',name:'Tisselt (Willebroek)',zip:'2830'},{label:'2830 Heindonk (Willebroek)',name:'Heindonk (Willebroek)',zip:'2830'},{label:'2830 Blaasveld (Willebroek)',name:'Blaasveld (Willebroek)',zip:'2830'},{label:'2820 Rijmenam (Bonheiden)',name:'Rijmenam (Bonheiden)',zip:'2820'},{label:'2820 Bonheiden',name:'Bonheiden',zip:'2820'},{label:'2811 Leest (Mechelen)',name:'Leest (Mechelen)',zip:'2811'},{label:'2811 Hombeek (Mechelen)',name:'Hombeek (Mechelen)',zip:'2811'},{label:'2801 Heffen (Mechelen)',name:'Heffen (Mechelen)',zip:'2801'},{label:'2800 Walem (Mechelen)',name:'Walem (Mechelen)',zip:'2800'},{label:'2800 Mechelen',name:'Mechelen',zip:'2800'},{label:'2650 Edegem',name:'Edegem',zip:'2650'},{label:'2640 Mortsel',name:'Mortsel',zip:'2640'},{label:'2630 Aartselaar',name:'Aartselaar',zip:'2630'},{label:'2627 Schelle',name:'Schelle',zip:'2627'},{label:'2620 Hemiksem',name:'Hemiksem',zip:'2620'},{label:'2590 Gestel (Berlaar)',name:'Gestel (Berlaar)',zip:'2590'},{label:'2590 Berlaar',name:'Berlaar',zip:'2590'},{label:'2580 Putte',name:'Putte',zip:'2580'},{label:'2580 Beerzel (Putte)',name:'Beerzel (Putte)',zip:'2580'},{label:'2570 Duffel',name:'Duffel',zip:'2570'},{label:'2560 Nijlen',name:'Nijlen',zip:'2560'},{label:'2560 Kessel (Nijlen)',name:'Kessel (Nijlen)',zip:'2560'},{label:'2560 Bevel (Nijlen)',name:'Bevel (Nijlen)',zip:'2560'},{label:'2550 Waarloos (Kontich)',name:'Waarloos (Kontich)',zip:'2550'},{label:'2550 Kontich',name:'Kontich',zip:'2550'},{label:'2547 Lint',name:'Lint',zip:'2547'},{label:'2540 Hove',name:'Hove',zip:'2540'},{label:'2531 Vremde (Boechout)',name:'Vremde (Boechout)',zip:'2531'},{label:'2530 Boechout',name:'Boechout',zip:'2530'},{label:'2520 Ranst',name:'Ranst',zip:'2520'},{label:'2520 Oelegem (Ranst)',name:'Oelegem (Ranst)',zip:'2520'},{label:'2520 Emblem (Ranst)',name:'Emblem (Ranst)',zip:'2520'},{label:'2520 Broechem (Ranst)',name:'Broechem (Ranst)',zip:'2520'},{label:'2500 Lier',name:'Lier',zip:'2500'},{label:'2500 Koningshooikt (Lier)',name:'Koningshooikt (Lier)',zip:'2500'},{label:'2491 Olmen (Balen)',name:'Olmen (Balen)',zip:'2491'},{label:'2490 Balen',name:'Balen',zip:'2490'},{label:'2480 Dessel',name:'Dessel',zip:'2480'},{label:'2470 Retie',name:'Retie',zip:'2470'},{label:'2460 Tielen (Kasterlee)',name:'Tielen (Kasterlee)',zip:'2460'},{label:'2460 Lichtaart (Kasterlee)',name:'Lichtaart (Kasterlee)',zip:'2460'},{label:'2460 Kasterlee',name:'Kasterlee',zip:'2460'},{label:'2450 Meerhout',name:'Meerhout',zip:'2450'},{label:'2440 Geel',name:'Geel',zip:'2440'},{label:'2431 Veerle (Laakdal)',name:'Veerle (Laakdal)',zip:'2431'},{label:'2431 Varendonk (Laakdal)',name:'Varendonk (Laakdal)',zip:'2431'},{label:'2430 Laakdal',name:'Laakdal',zip:'2430'},{label:'2430 Eindhout (Laakdal)',name:'Eindhout (Laakdal)',zip:'2430'},{label:'2400 Mol',name:'Mol',zip:'2400'},{label:'2390 Westmalle (Malle)',name:'Westmalle (Malle)',zip:'2390'},{label:'2390 Oostmalle (Malle)',name:'Oostmalle (Malle)',zip:'2390'},{label:'2390 Malle',name:'Malle',zip:'2390'},{label:'2387 Baarle-Hertog',name:'Baarle-Hertog',zip:'2387'},{label:'2382 Poppel (Ravels)',name:'Poppel (Ravels)',zip:'2382'},{label:'2381 Weelde (Ravels)',name:'Weelde (Ravels)',zip:'2381'},{label:'2380 Ravels',name:'Ravels',zip:'2380'},{label:'2370 Arendonk',name:'Arendonk',zip:'2370'},{label:'2360 Oud-Turnhout',name:'Oud-Turnhout',zip:'2360'},{label:'2350 Vosselaar',name:'Vosselaar',zip:'2350'},{label:'2340 Vlimmeren (Beerse)',name:'Vlimmeren (Beerse)',zip:'2340'},{label:'2340 Beerse',name:'Beerse',zip:'2340'},{label:'2330 Merksplas',name:'Merksplas',zip:'2330'},{label:'2328 Meerle (Hoogstraten)',name:'Meerle (Hoogstraten)',zip:'2328'},{label:'2323 Wortel (Hoogstraten)',name:'Wortel (Hoogstraten)',zip:'2323'},{label:'2322 Minderhout (Hoogstraten)',name:'Minderhout (Hoogstraten)',zip:'2322'},{label:'2321 Meer (Hoogstraten)',name:'Meer (Hoogstraten)',zip:'2321'},{label:'2320 Hoogstraten',name:'Hoogstraten',zip:'2320'},{label:'2310 Rijkevorsel',name:'Rijkevorsel',zip:'2310'},{label:'2300 Turnhout',name:'Turnhout',zip:'2300'},{label:'2290 Vorselaar',name:'Vorselaar',zip:'2290'},{label:'2288 Bouwel (Grobbendonk)',name:'Bouwel (Grobbendonk)',zip:'2288'},{label:'2280 Grobbendonk',name:'Grobbendonk',zip:'2280'},{label:'2275 Wechelderzande (Lille)',name:'Wechelderzande (Lille)',zip:'2275'},{label:'2275 Poederlee (Lille)',name:'Poederlee (Lille)',zip:'2275'},{label:'2275 Lille',name:'Lille',zip:'2275'},{label:'2275 Gierle (Lille)',name:'Gierle (Lille)',zip:'2275'},{label:'2270 Herenthout',name:'Herenthout',zip:'2270'},{label:'2260 Zoerle-Parwijs (Westerlo)',name:'Zoerle-Parwijs (Westerlo)',zip:'2260'},{label:'2260 Westerlo',name:'Westerlo',zip:'2260'},{label:'2260 Oevel (Westerlo)',name:'Oevel (Westerlo)',zip:'2260'},{label:'2250 Olen',name:'Olen',zip:'2250'},{label:'2243 Pulle (Zandhoven)',name:'Pulle (Zandhoven)',zip:'2243'},{label:'2242 Pulderbos (Zandhoven)',name:'Pulderbos (Zandhoven)',zip:'2242'},{label:'2240 Zandhoven',name:'Zandhoven',zip:'2240'},{label:'2240 Viersel (Zandhoven)',name:'Viersel (Zandhoven)',zip:'2240'},{label:'2240 Massenhoven (Zandhoven)',name:'Massenhoven (Zandhoven)',zip:'2240'},{label:'2235 Westmeerbeek (Hulshout)',name:'Westmeerbeek (Hulshout)',zip:'2235'},{label:'2235 Hulshout',name:'Hulshout',zip:'2235'},{label:'2235 Houtvenne (Hulshout)',name:'Houtvenne (Hulshout)',zip:'2235'},{label:'2230 Ramsel (Herselt)',name:'Ramsel (Herselt)',zip:'2230'},{label:'2230 Herselt',name:'Herselt',zip:'2230'},{label:'2223 Schriek (Heist-Op-Den-Berg)',name:'Schriek (Heist-Op-Den-Berg)',zip:'2223'},{label:'2222 Wiekevorst (Heist-Op-Den-Berg)',name:'Wiekevorst (Heist-Op-Den-Berg)',zip:'2222'},{label:'2222 Itegem (Heist-Op-Den-Berg)',name:'Itegem (Heist-Op-Den-Berg)',zip:'2222'},{label:'2221 Booischot (Heist-Op-Den-Berg)',name:'Booischot (Heist-Op-Den-Berg)',zip:'2221'},{label:'2220 Heist-op-den-Berg',name:'Heist-op-den-Berg',zip:'2220'},{label:'2220 Hallaar (Heist-Op-Den-Berg)',name:'Hallaar (Heist-Op-Den-Berg)',zip:'2220'},{label:'2200 Noorderwijk (Herentals)',name:'Noorderwijk (Herentals)',zip:'2200'},{label:'2200 Morkhoven (Herentals)',name:'Morkhoven (Herentals)',zip:'2200'},{label:'2200 Herentals',name:'Herentals',zip:'2200'},{label:'2160 Wommelgem',name:'Wommelgem',zip:'2160'},{label:'2110 Wijnegem',name:'Wijnegem',zip:'2110'},{label:'2070 Zwijndrecht',name:'Zwijndrecht',zip:'2070'},{label:'2070 Burcht (Zwijndrecht)',name:'Burcht (Zwijndrecht)',zip:'2070'},{label:'2660 Hoboken (Antwerpen)',name:'Hoboken (Antwerpen)',zip:'2660'},{label:'2610 Wilrijk (Antwerpen)',name:'Wilrijk (Antwerpen)',zip:'2610'},{label:'2600 Berchem (Antwerpen)',name:'Berchem (Antwerpen)',zip:'2600'},{label:'2180 Ekeren (Antwerpen)',name:'Ekeren (Antwerpen)',zip:'2180'},{label:'2170 Merksem (Antwerpen)',name:'Merksem (Antwerpen)',zip:'2170'},{label:'2140 Borgerhout (Antwerpen)',name:'Borgerhout (Antwerpen)',zip:'2140'},{label:'2100 Deurne (Antwerpen)',name:'Deurne (Antwerpen)',zip:'2100'},{label:'2040 Zandvliet (Antwerpen)',name:'Zandvliet (Antwerpen)',zip:'2040'},{label:'2040 Lillo (Antwerpen)',name:'Lillo (Antwerpen)',zip:'2040'},{label:'2040 Berendrecht (Antwerpen)',name:'Berendrecht (Antwerpen)',zip:'2040'},{label:'2000 Antwerpen',name:'Antwerpen',zip:'2000'},{label:'1000 Brussel',name:'Brussel',zip:'1000'},{label:'1030 Schaarbeek (Brussel)',name:'Schaarbeek (Brussel)',zip:'1030'},{label:'1040 Etterbeek (Brussel)',name:'Etterbeek (Brussel)',zip:'1040'},{label:'1050 Elsene (Brussel)',name:'Elsene (Brussel)',zip:'1050'},{label:'1060 Sint-Gillis (Brussel)',name:'Sint-Gillis (Brussel)',zip:'1060'},{label:'1070 Anderlecht (Brussel)',name:'Anderlecht (Brussel)',zip:'1070'},{label:'1080 Sint-Jans-Molenbeek (Brussel)',name:'Sint-Jans-Molenbeek (Brussel)',zip:'1080'},{label:'1081 Koekelberg (Brussel)',name:'Koekelberg (Brussel)',zip:'1081'},{label:'1082 Sint-Agatha-Berchem (Brussel)',name:'Sint-Agatha-Berchem (Brussel)',zip:'1082'},{label:'1083 Ganshoren (Brussel)',name:'Ganshoren (Brussel)',zip:'1083'},{label:'1090 Jette (Brussel)',name:'Jette (Brussel)',zip:'1090'},{label:'1140 Evere (Brussel)',name:'Evere (Brussel)',zip:'1140'},{label:'1150 Sint-Pieters-Woluwe (Brussel)',name:'Sint-Pieters-Woluwe (Brussel)',zip:'1150'},{label:'1160 Oudergem (Brussel)',name:'Oudergem (Brussel)',zip:'1160'},{label:'1170 Watermaal-Bosvoorde (Brussel)',name:'Watermaal-Bosvoorde (Brussel)',zip:'1170'},{label:'1180 Ukkel (Brussel)',name:'Ukkel (Brussel)',zip:'1180'},{label:'1190 Vorst (Brussel)',name:'Vorst (Brussel)',zip:'1190'},{label:'1200 Sint-Lambrechts-Woluwe (Brussel)',name:'Sint-Lambrechts-Woluwe (Brussel)',zip:'1200'},{label:'1210 Sint-Joost-Ten-Node (Brussel)',name:'Sint-Joost-Ten-Node (Brussel)',zip:'1210'},{label:'2970 \'s Gravenwezel (Schilde)',name:'\'s Gravenwezel (Schilde)',zip:'2970'},{label:'3700 \'s Herenelderen (Tongeren)',name:'\'s Herenelderen (Tongeren)',zip:'3700'},{label:'8200 Brugge 2 (Brugge)',name:'Brugge 2 (Brugge)',zip:'8200'},{label:'1130 Haren (Brussel)',name:'Haren (Brussel)',zip:'1130'},{label:'1020 Laken (Brussel)',name:'Laken (Brussel)',zip:'1020'},{label:'1120 Neder-Over-Heembeek (Brussel)',name:'Neder-Over-Heembeek (Brussel)',zip:'1120'},{label:'9700 Ooike (Oudenaarde)',name:'Ooike (Oudenaarde)',zip:'9700'},{label:'2960 Sint-Job-In-\'t-Goor (Brecht)',name:'Sint-Job-In-\'t-Goor (Brecht)',zip:'2960'},{label:'3300 Sint-Margriete-Houtem (Tienen)',name:'Sint-Margriete-Houtem (Tienen)',zip:'3300'},{label:'9660 Sint-Maria-Oudenhove (Brakel)',name:'Sint-Maria-Oudenhove (Brakel)',zip:'9660'},{label:'3470 Sint-Margriete (Kortenaken)',name:'Sint-Margriete (Kortenaken)',zip:'3470'},{label:'9620 Sint-Maria-Oudenhove (Zottegem)',name:'Sint-Maria-Oudenhove (Zottegem)',zip:'9620'},{label:'8433 Sint-Pieters-Kapelle (Middelkerke)',name:'Sint-Pieters-Kapelle (Middelkerke)',zip:'8433'},{label:'2260 Voortkapel (Westerlo)',name:'Voortkapel (Westerlo)',zip:'2260'},{label:'1541 Sint-Pieters-Kapelle (Herne)',name:'Sint-Pieters-Kapelle (Herne)',zip:'1541'},{label:'1547 Bever',name:'Bever',zip:'1547'},{label:'1601 Ruisbroek (Sint-Pieters-Leeuw)',name:'Ruisbroek (Sint-Pieters-Leeuw)',zip:'1601'},{label:'1640 Sint-Genesius-Rode',name:'Sint-Genesius-Rode',zip:'1640'},{label:'1785 Hamme (Merchtem)',name:'Hamme (Merchtem)',zip:'1785'},{label:'1830 Machelen',name:'Machelen',zip:'1830'},{label:'1910 Berg (Kampenhout)',name:'Berg (Kampenhout)',zip:'1910'},{label:'1981 Hofstade (Zemst)',name:'Hofstade (Zemst)',zip:'1981'},{label:'2018 Antwerpen 18 (Antwerpen)',name:'Antwerpen 18 (Antwerpen)',zip:'2018'},{label:'2020 Antwerpen 2 (Antwerpen)',name:'Antwerpen 2 (Antwerpen)',zip:'2020'},{label:'2030 Antwerpen 3 (Antwerpen)',name:'Antwerpen 3 (Antwerpen)',zip:'2030'},{label:'2050 Antwerpen 5 (Antwerpen)',name:'Antwerpen 5 (Antwerpen)',zip:'2050'},{label:'2060 Antwerpen 6 (Antwerpen)',name:'Antwerpen 6 (Antwerpen)',zip:'2060'},{label:'2150 Borsbeek',name:'Borsbeek',zip:'2150'},{label:'2260 Tongerlo (Westerlo)',name:'Tongerlo (Westerlo)',zip:'2260'},{label:'2430 Vorst (Laakdal)',name:'Vorst (Laakdal)',zip:'2430'},{label:'2812 Muizen (Mechelen)',name:'Muizen (Mechelen)',zip:'2812'},{label:'2870 Ruisbroek (Puurs)',name:'Ruisbroek (Puurs)',zip:'2870'},{label:'2880 Mariekerke (Bornem)',name:'Mariekerke (Bornem)',zip:'2880'},{label:'2950 Kapellen',name:'Kapellen',zip:'2950'},{label:'2960 Sint-Lenaarts (Brecht)',name:'Sint-Lenaarts (Brecht)',zip:'2960'},{label:'2980 Halle (Zoersel)',name:'Halle (Zoersel)',zip:'2980'},{label:'3018 Wijgmaal (Leuven)',name:'Wijgmaal (Leuven)',zip:'3018'},{label:'3220 Kortrijk-Dutsel (Holsbeek)',name:'Kortrijk-Dutsel (Holsbeek)',zip:'3220'},{label:'3290 Deurne (Diest)',name:'Deurne (Diest)',zip:'3290'},{label:'3320 Meldert (Hoegaarden)',name:'Meldert (Hoegaarden)',zip:'3320'},{label:'3380 Glabbeek',name:'Glabbeek',zip:'3380'},{label:'3381 Kapellen (Glabbeek)',name:'Kapellen (Glabbeek)',zip:'3381'},{label:'3390 Tielt (Tielt-Winge)',name:'Tielt (Tielt-Winge)',zip:'3390'},{label:'3550 Heusden (Heusden-Zolder)',name:'Heusden (Heusden-Zolder)',zip:'3550'},{label:'3560 Meldert (Lummen)',name:'Meldert (Lummen)',zip:'3560'},{label:'3700 Berg (Tongeren)',name:'Berg (Tongeren)',zip:'3700'},{label:'3700 Haren (Tongeren)',name:'Haren (Tongeren)',zip:'3700'},{label:'3700 Kolmont (Tongeren)',name:'Kolmont (Tongeren)',zip:'3700'},{label:'3700 Overrepen (Tongeren)',name:'Overrepen (Tongeren)',zip:'3700'},{label:'3700 Piringen (Tongeren)',name:'Piringen (Tongeren)',zip:'3700'},{label:'3700 Widooie (Tongeren)',name:'Widooie (Tongeren)',zip:'3700'},{label:'3790 Moelingen (Voeren)',name:'Moelingen (Voeren)',zip:'3790'},{label:'3790 Sint-Martens-Voeren (Voeren)',name:'Sint-Martens-Voeren (Voeren)',zip:'3790'},{label:'3790 Voeren',name:'Voeren',zip:'3790'},{label:'3792 Sint-Pieters-Voeren (Voeren)',name:'Sint-Pieters-Voeren (Voeren)',zip:'3792'},{label:'3798 \'s Gravenvoeren (Voeren)',name:'\'s Gravenvoeren (Voeren)',zip:'3798'},{label:'3800 Aalst (Sint-Truiden)',name:'Aalst (Sint-Truiden)',zip:'3800'},{label:'3840 Bommershoven (Borgloon)',name:'Bommershoven (Borgloon)',zip:'3840'},{label:'3840 Haren (Borgloon)',name:'Haren (Borgloon)',zip:'3840'},{label:'3840 Jesseren (Borgloon)',name:'Jesseren (Borgloon)',zip:'3840'},{label:'3840 Kolmont (Borgloon)',name:'Kolmont (Borgloon)',zip:'3840'},{label:'3850 Nieuwerkerken',name:'Nieuwerkerken',zip:'3850'},{label:'3891 Muizen (Gingelom)',name:'Muizen (Gingelom)',zip:'3891'},{label:'3960 Tongerlo (Bree)',name:'Tongerlo (Bree)',zip:'3960'},{label:'8301 Ramskapelle (Knokke-Heist)',name:'Ramskapelle (Knokke-Heist)',zip:'8301'},{label:'8340 Oostkerke (Damme)',name:'Oostkerke (Damme)',zip:'8340'},{label:'8400 Zandvoorde (Oostende)',name:'Zandvoorde (Oostende)',zip:'8400'},{label:'8420 De Haan',name:'De Haan',zip:'8420'},{label:'8587 Helkijn (Spiere-Helkijn)',name:'Helkijn (Spiere-Helkijn)',zip:'8587'},{label:'8587 Spiere (Spiere-Helkijn)',name:'Spiere (Spiere-Helkijn)',zip:'8587'},{label:'8587 Spiere-Helkijn',name:'Spiere-Helkijn',zip:'8587'},{label:'8600 Oostkerke (Diksmuide)',name:'Oostkerke (Diksmuide)',zip:'8600'},{label:'8620 Ramskapelle (Nieuwpoort)',name:'Ramskapelle (Nieuwpoort)',zip:'8620'},{label:'8620 Sint-Joris (Nieuwpoort)',name:'Sint-Joris (Nieuwpoort)',zip:'8620'},{label:'8630 De Moeren (Veurne)',name:'De Moeren (Veurne)',zip:'8630'},{label:'8630 Houtem (Veurne)',name:'Houtem (Veurne)',zip:'8630'},{label:'8630 Steenkerke (Veurne)',name:'Steenkerke (Veurne)',zip:'8630'},{label:'8660 De Panne',name:'De Panne',zip:'8660'},{label:'8730 Sint-Joris (Beernem)',name:'Sint-Joris (Beernem)',zip:'8730'},{label:'8791 Beveren-Leie (Waregem)',name:'Beveren-Leie (Waregem)',zip:'8791'},{label:'8800 Beveren (Roeselare)',name:'Beveren (Roeselare)',zip:'8800'},{label:'8957 Mesen',name:'Mesen',zip:'8957'},{label:'8980 Zandvoorde (Zonnebeke)',name:'Zandvoorde (Zonnebeke)',zip:'8980'},{label:'9070 Heusden (Destelbergen)',name:'Heusden (Destelbergen)',zip:'9070'},{label:'9120 Beveren-Waas',name:'Beveren-Waas',zip:'9120'},{label:'9120 Kallo (Beveren-Waas)',name:'Kallo (Beveren-Waas)',zip:'9120'},{label:'9130 Kallo (Kieldrecht - Beveren-Waas)',name:'Kallo (Kieldrecht - Beveren-Waas)',zip:'9130'},{label:'9170 De Klinge (Sint-Gillis-Waas)',name:'De Klinge (Sint-Gillis-Waas)',zip:'9170'},{label:'9200 Sint-Gillis-Bij-Dendermonde (Dendermonde)',name:'Sint-Gillis-Bij-Dendermonde (Dendermonde)',zip:'9200'},{label:'9220 Hamme',name:'Hamme',zip:'9220'},{label:'9308 Hofstade (Aalst)',name:'Hofstade (Aalst)',zip:'9308'},{label:'9310 Meldert (Aalst)',name:'Meldert (Aalst)',zip:'9310'},{label:'9600 Ronse',name:'Ronse',zip:'9600'},{label:'9620 Oombergen (Zottegem)',name:'Oombergen (Zottegem)',zip:'9620'},{label:'9690 Berchem (Kluisbergen)',name:'Berchem (Kluisbergen)',zip:'9690'},{label:'9790 Ooike (Wortegem-Petegem)',name:'Ooike (Wortegem-Petegem)',zip:'9790'},{label:'9840 De Pinte',name:'De Pinte',zip:'9840'},{label:'9870 Machelen (Zulte)',name:'Machelen (Zulte)',zip:'9870'},{label:'1320 l\'Ecluse',name:'l\'Ecluse',zip:'1320'},{label:'1420 Braine l\'Alleud',name:'Braine l\'Alleud',zip:'1420'},{label:'4217 Waret-l\'Evêque',name:'Waret-l\'Evêque',zip:'4217'},{label:'4340 Villers-l\'Evêque',name:'Villers-l\'Evêque',zip:'4340'},{label:'6140 Fontaine-l\'Evêque',name:'Fontaine-l\'Evêque',zip:'6140'},{label:'6464 l\'Escaillère',name:'l\'Escaillère',zip:'6464'},{label:'6560 Bersillies-l\'Abbaye',name:'Bersillies-l\'Abbaye',zip:'6560'},{label:'7170 Bois-d\'Haine',name:'Bois-d\'Haine',zip:'7170'},{label:'7190 Ecaussinnes-d\'Enghien',name:'Ecaussinnes-d\'Enghien',zip:'7190'},{label:'7750 Mont-de-l\'Enclus',name:'Mont-de-l\'Enclus',zip:'7750'},{label:'7822 Meslin-l\'Evêque',name:'Meslin-l\'Evêque',zip:'7822'},{label:'2260 Heultje (Westerlo)',name:'Heultje (Westerlo)',zip:'2260'},{label:'2260 Oosterwijk (Westerlo)',name:'Oosterwijk (Westerlo)',zip:'2260'},{label:'3650 Dilsen',name:'Dilsen',zip:'3650'},{label:'3650 Stokkem',name:'Stokkem',zip:'3650'},{label:'9520 Oombergen (Sint-Lievens-Houtem)',name:'Oombergen (Sint-Lievens-Houtem)',zip:'9520'},{label:'3270 Scherpenheuvel-Zichem',name:'Scherpenheuvel-Zichem',zip:'3270'}])

.constant('citiesNL', [{label:'Aadorp',name:'Aadorp',zip:''},{label:'Aagtekerke',name:'Aagtekerke',zip:''},{label:'Aalden',name:'Aalden',zip:''},{label:'Aalsmeer',name:'Aalsmeer',zip:''},{label:'Aalsmeerderbrug',name:'Aalsmeerderbrug',zip:''},{label:'Aalst',name:'Aalst',zip:''},{label:'Aalsum',name:'Aalsum',zip:''},{label:'Aalten',name:'Aalten',zip:''},{label:'Ter Aar',name:'Ter Aar',zip:''},{label:'Ter Aard',name:'Ter Aard',zip:''},{label:'Aardenburg',name:'Aardenburg',zip:''},{label:'Aarlanderveen',name:'Aarlanderveen',zip:''},{label:'Aarle-Rixtel',name:'Aarle-Rixtel',zip:''},{label:'Aartswoud',name:'Aartswoud',zip:''},{label:'Abbega',name:'Abbega',zip:''},{label:'Abbekerk',name:'Abbekerk',zip:''},{label:'Abbenbroek',name:'Abbenbroek',zip:''},{label:'Abbenes',name:'Abbenes',zip:''},{label:'Abcoude',name:'Abcoude',zip:''},{label:'Achlum',name:'Achlum',zip:''},{label:'Achterveld (Barneveld)',name:'Achterveld (Barneveld)',zip:''},{label:'Achterveld (Leusden)',name:'Achterveld (Leusden)',zip:''},{label:'Achthuizen',name:'Achthuizen',zip:''},{label:'Achtmaal',name:'Achtmaal',zip:''},{label:'Acquoy',name:'Acquoy',zip:''},{label:'Adorp',name:'Adorp',zip:''},{label:'Aduard',name:'Aduard',zip:''},{label:'Aerdenhout',name:'Aerdenhout',zip:''},{label:'Aerdt',name:'Aerdt',zip:''},{label:'Afferden (Druten)',name:'Afferden (Druten)',zip:''},{label:'Afferden (Bergen - Limburg)',name:'Afferden (Bergen - Limburg)',zip:''},{label:'Agelo',name:'Agelo',zip:''},{label:'Akersloot',name:'Akersloot',zip:''},{label:'Akkrum',name:'Akkrum',zip:''},{label:'Akmarijp',name:'Akmarijp',zip:''},{label:'Albergen',name:'Albergen',zip:''},{label:'Alblasserdam',name:'Alblasserdam',zip:''},{label:'Alde Leie',name:'Alde Leie',zip:''},{label:'Aldeboarn',name:'Aldeboarn',zip:''},{label:'Aldtsjerk',name:'Aldtsjerk',zip:''},{label:'Alem',name:'Alem',zip:''},{label:'Alkmaar',name:'Alkmaar',zip:''},{label:'Allingawier',name:'Allingawier',zip:''},{label:'Almelo',name:'Almelo',zip:''},{label:'Almen',name:'Almen',zip:''},{label:'Almere',name:'Almere',zip:''},{label:'Almkerk',name:'Almkerk',zip:''},{label:'Alphen (West Maas en Waal)',name:'Alphen (West Maas en Waal)',zip:''},{label:'Alphen (Alphen-Chaam)',name:'Alphen (Alphen-Chaam)',zip:''},{label:'Alphen aan den Rijn',name:'Alphen aan den Rijn',zip:''},{label:'Alteveer (Noordenveld)',name:'Alteveer (Noordenveld)',zip:''},{label:'Alteveer (Stadskanaal)',name:'Alteveer (Stadskanaal)',zip:''},{label:'Alteveer (De Wolden)',name:'Alteveer (De Wolden)',zip:''},{label:'Alteveer (Hoogeveen)',name:'Alteveer (Hoogeveen)',zip:''},{label:'Altforst',name:'Altforst',zip:''},{label:'Ambt Delden',name:'Ambt Delden',zip:''},{label:'Ameide',name:'Ameide',zip:''},{label:'Amen',name:'Amen',zip:''},{label:'America',name:'America',zip:''},{label:'Amerongen',name:'Amerongen',zip:''},{label:'Amersfoort',name:'Amersfoort',zip:''},{label:'Ammerstol',name:'Ammerstol',zip:''},{label:'Ammerzoden',name:'Ammerzoden',zip:''},{label:'Amstelhoek',name:'Amstelhoek',zip:''},{label:'Amstelveen',name:'Amstelveen',zip:''},{label:'Amstenrade',name:'Amstenrade',zip:''},{label:'Amsterdam',name:'Amsterdam',zip:''},{label:'Amsterdam-Duivendrecht',name:'Amsterdam-Duivendrecht',zip:''},{label:'Andel',name:'Andel',zip:''},{label:'Den Andel',name:'Den Andel',zip:''},{label:'Andelst',name:'Andelst',zip:''},{label:'Anderen',name:'Anderen',zip:''},{label:'Andijk',name:'Andijk',zip:''},{label:'Ane',name:'Ane',zip:''},{label:'Anerveen',name:'Anerveen',zip:''},{label:'Anevelde',name:'Anevelde',zip:''},{label:'Angeren',name:'Angeren',zip:''},{label:'Angerlo',name:'Angerlo',zip:''},{label:'Anjum',name:'Anjum',zip:''},{label:'Ankeveen',name:'Ankeveen',zip:''},{label:'Anloo',name:'Anloo',zip:''},{label:'Anna Paulowna',name:'Anna Paulowna',zip:''},{label:'Annen',name:'Annen',zip:''},{label:'Annerveenschekanaal',name:'Annerveenschekanaal',zip:''},{label:'Ansen (Westerveld)',name:'Ansen (Westerveld)',zip:''},{label:'Ansen (De Wolden)',name:'Ansen (De Wolden)',zip:''},{label:'Ter Apel',name:'Ter Apel',zip:''},{label:'Apeldoorn',name:'Apeldoorn',zip:''},{label:'Ter Apelkanaal',name:'Ter Apelkanaal',zip:''},{label:'Appelscha',name:'Appelscha',zip:''},{label:'Appeltern',name:'Appeltern',zip:''},{label:'Appingedam',name:'Appingedam',zip:''},{label:'Arcen',name:'Arcen',zip:''},{label:'Arkel',name:'Arkel',zip:''},{label:'Arnemuiden',name:'Arnemuiden',zip:''},{label:'Arnhem',name:'Arnhem',zip:''},{label:'Arriën',name:'Arriën',zip:''},{label:'Arum',name:'Arum',zip:''},{label:'Asch',name:'Asch',zip:''},{label:'Asperen',name:'Asperen',zip:''},{label:'Assen',name:'Assen',zip:''},{label:'Assendelft',name:'Assendelft',zip:''},{label:'Asten',name:'Asten',zip:''},{label:'Augsbuurt',name:'Augsbuurt',zip:''},{label:'Augustinusga',name:'Augustinusga',zip:''},{label:'Austerlitz',name:'Austerlitz',zip:''},{label:'Avenhorn',name:'Avenhorn',zip:''},{label:'Axel',name:'Axel',zip:''},{label:'Azewijn',name:'Azewijn',zip:''},{label:'Baaiduinen',name:'Baaiduinen',zip:''},{label:'Baaium',name:'Baaium',zip:''},{label:'Baak',name:'Baak',zip:''},{label:'Baambrugge',name:'Baambrugge',zip:''},{label:'Baard',name:'Baard',zip:''},{label:'Baarland',name:'Baarland',zip:''},{label:'Baarle-Nassau',name:'Baarle-Nassau',zip:''},{label:'Baarlo (Peel en Maas)',name:'Baarlo (Peel en Maas)',zip:''},{label:'Baarlo (Steenwijkerland)',name:'Baarlo (Steenwijkerland)',zip:''},{label:'Baarn',name:'Baarn',zip:''},{label:'Baars',name:'Baars',zip:''},{label:'Babberich',name:'Babberich',zip:''},{label:'Babyloniënbroek',name:'Babyloniënbroek',zip:''},{label:'Bad Nieuweschans',name:'Bad Nieuweschans',zip:''},{label:'Badhoevedorp',name:'Badhoevedorp',zip:''},{label:'Baexem',name:'Baexem',zip:''},{label:'Baflo',name:'Baflo',zip:''},{label:'Bakel',name:'Bakel',zip:''},{label:'Bakhuizen',name:'Bakhuizen',zip:''},{label:'Bakkeveen',name:'Bakkeveen',zip:''},{label:'Balgoij',name:'Balgoij',zip:''},{label:'Balinge',name:'Balinge',zip:''},{label:'Balk',name:'Balk',zip:''},{label:'Balkbrug',name:'Balkbrug',zip:''},{label:'Balloërveld',name:'Balloërveld',zip:''},{label:'Balloo',name:'Balloo',zip:''},{label:'Ballum',name:'Ballum',zip:''},{label:'Baneheide',name:'Baneheide',zip:''},{label:'Banholt',name:'Banholt',zip:''},{label:'Bant',name:'Bant',zip:''},{label:'Bantega',name:'Bantega',zip:''},{label:'Barchem',name:'Barchem',zip:''},{label:'Barendrecht',name:'Barendrecht',zip:''},{label:'Barger-Compascuum',name:'Barger-Compascuum',zip:''},{label:'Barneveld',name:'Barneveld',zip:''},{label:'Barsingerhorn',name:'Barsingerhorn',zip:''},{label:'Basse',name:'Basse',zip:''},{label:'Batenburg',name:'Batenburg',zip:''},{label:'Bathmen',name:'Bathmen',zip:''},{label:'Bavel (Breda)',name:'Bavel (Breda)',zip:''},{label:'Bavel (Alphen-Chaam)',name:'Bavel (Alphen-Chaam)',zip:''},{label:'Bears',name:'Bears',zip:''},{label:'Bedum',name:'Bedum',zip:''},{label:'Beegden',name:'Beegden',zip:''},{label:'Beek (Beek)',name:'Beek (Beek)',zip:''},{label:'Beek (Montferland)',name:'Beek (Montferland)',zip:''},{label:'Beek (Berg en Dal)',name:'Beek (Berg en Dal)',zip:''},{label:'Beek en Donk',name:'Beek en Donk',zip:''},{label:'Beekbergen',name:'Beekbergen',zip:''},{label:'Beemte Broekland',name:'Beemte Broekland',zip:''},{label:'Beers',name:'Beers',zip:''},{label:'Beerta',name:'Beerta',zip:''},{label:'Beerze',name:'Beerze',zip:''},{label:'Beerzerveld',name:'Beerzerveld',zip:''},{label:'Beesd',name:'Beesd',zip:''},{label:'Beesel',name:'Beesel',zip:''},{label:'Beets',name:'Beets',zip:''},{label:'Beetsterzwaag',name:'Beetsterzwaag',zip:''},{label:'Beilen',name:'Beilen',zip:''},{label:'Beinsdorp',name:'Beinsdorp',zip:''},{label:'Belfeld',name:'Belfeld',zip:''},{label:'Bellingwolde',name:'Bellingwolde',zip:''},{label:'Beltrum',name:'Beltrum',zip:''},{label:'Belt-Schutsloot',name:'Belt-Schutsloot',zip:''},{label:'Bemelen',name:'Bemelen',zip:''},{label:'Bemmel',name:'Bemmel',zip:''},{label:'Beneden-Leeuwen',name:'Beneden-Leeuwen',zip:''},{label:'Bennebroek',name:'Bennebroek',zip:''},{label:'Bennekom',name:'Bennekom',zip:''},{label:'Benneveld',name:'Benneveld',zip:''},{label:'Benningbroek',name:'Benningbroek',zip:''},{label:'Benschop',name:'Benschop',zip:''},{label:'Bentelo',name:'Bentelo',zip:''},{label:'Benthuizen',name:'Benthuizen',zip:''},{label:'Bentveld',name:'Bentveld',zip:''},{label:'Berg en Dal',name:'Berg en Dal',zip:''},{label:'Berg en Terblijt',name:'Berg en Terblijt',zip:''},{label:'Bergambacht',name:'Bergambacht',zip:''},{label:'Bergeijk',name:'Bergeijk',zip:''},{label:'Bergen (Noord-Holland)',name:'Bergen (Noord-Holland)',zip:''},{label:'Bergen aan Zee',name:'Bergen aan Zee',zip:''},{label:'Bergen (Limburg)',name:'Bergen (Limburg)',zip:''},{label:'Bergen op Zoom',name:'Bergen op Zoom',zip:''},{label:'Bergentheim',name:'Bergentheim',zip:''},{label:'Bergharen',name:'Bergharen',zip:''},{label:'Berghem',name:'Berghem',zip:''},{label:'Bergschenhoek',name:'Bergschenhoek',zip:''},{label:'Beringe',name:'Beringe',zip:''},{label:'Berkel en Rodenrijs',name:'Berkel en Rodenrijs',zip:''},{label:'Berkel-Enschot',name:'Berkel-Enschot',zip:''},{label:'Berkenwoude',name:'Berkenwoude',zip:''},{label:'Berkhout',name:'Berkhout',zip:''},{label:'Berlicum',name:'Berlicum',zip:''},{label:'Berltsum',name:'Berltsum',zip:''},{label:'Bern',name:'Bern',zip:''},{label:'Best',name:'Best',zip:''},{label:'Beugen',name:'Beugen',zip:''},{label:'Beuningen (Losser)',name:'Beuningen (Losser)',zip:''},{label:'Beuningen (Beuningen)',name:'Beuningen (Beuningen)',zip:''},{label:'Beusichem',name:'Beusichem',zip:''},{label:'Beutenaken',name:'Beutenaken',zip:''},{label:'Beverwijk',name:'Beverwijk',zip:''},{label:'Biddinghuizen',name:'Biddinghuizen',zip:''},{label:'Bierum',name:'Bierum',zip:''},{label:'Biervliet (Terneuzen)',name:'Biervliet (Terneuzen)',zip:''},{label:'Biervliet (Sluis)',name:'Biervliet (Sluis)',zip:''},{label:'Biest-Houtakker',name:'Biest-Houtakker',zip:''},{label:'Biezenmortel',name:'Biezenmortel',zip:''},{label:'Biggekerke',name:'Biggekerke',zip:''},{label:'De Bilt',name:'De Bilt',zip:''},{label:'Bilthoven',name:'Bilthoven',zip:''},{label:'Bingelrade',name:'Bingelrade',zip:''},{label:'Bitgum',name:'Bitgum',zip:''},{label:'Bitgummole',name:'Bitgummole',zip:''},{label:'Bladel',name:'Bladel',zip:''},{label:'Blankenham',name:'Blankenham',zip:''},{label:'Blaricum',name:'Blaricum',zip:''},{label:'Blauwestad',name:'Blauwestad',zip:''},{label:'Blauwhuis',name:'Blauwhuis',zip:''},{label:'Bleiswijk',name:'Bleiswijk',zip:''},{label:'Blesdijke',name:'Blesdijke',zip:''},{label:'Bleskensgraaf ca',name:'Bleskensgraaf ca',zip:''},{label:'De Blesse',name:'De Blesse',zip:''},{label:'Blessum',name:'Blessum',zip:''},{label:'Blije',name:'Blije',zip:''},{label:'Blijham',name:'Blijham',zip:''},{label:'Blitterswijck',name:'Blitterswijck',zip:''},{label:'Bloemendaal',name:'Bloemendaal',zip:''},{label:'Blokker',name:'Blokker',zip:''},{label:'Blokzijl',name:'Blokzijl',zip:''},{label:'Boazum',name:'Boazum',zip:''},{label:'Bocholtz',name:'Bocholtz',zip:''},{label:'Bodegraven',name:'Bodegraven',zip:''},{label:'Boekel',name:'Boekel',zip:''},{label:'Boelenslaan',name:'Boelenslaan',zip:''},{label:'Boer',name:'Boer',zip:''},{label:'Ten Boer',name:'Ten Boer',zip:''},{label:'Boerakker (Marum)',name:'Boerakker (Marum)',zip:''},{label:'Boerakker (Leek)',name:'Boerakker (Leek)',zip:''},{label:'Boesingheliede',name:'Boesingheliede',zip:''},{label:'Boijl',name:'Boijl',zip:''},{label:'Boksum',name:'Boksum',zip:''},{label:'Bolsward',name:'Bolsward',zip:''},{label:'Den Bommel',name:'Den Bommel',zip:''},{label:'Bontebok',name:'Bontebok',zip:''},{label:'Boornbergum',name:'Boornbergum',zip:''},{label:'Boornzwaag',name:'Boornzwaag',zip:''},{label:'Borculo',name:'Borculo',zip:''},{label:'Borger',name:'Borger',zip:''},{label:'Borgercompagnie (Midden-Groningen)',name:'Borgercompagnie (Midden-Groningen)',zip:''},{label:'Borgercompagnie (Veendam)',name:'Borgercompagnie (Veendam)',zip:''},{label:'Borgsweer',name:'Borgsweer',zip:''},{label:'Born',name:'Born',zip:''},{label:'Borne',name:'Borne',zip:''},{label:'Bornerbroek',name:'Bornerbroek',zip:''},{label:'Bornwird',name:'Bornwird',zip:''},{label:'Borssele',name:'Borssele',zip:''},{label:'Bosch en Duin',name:'Bosch en Duin',zip:''},{label:'Boschoord',name:'Boschoord',zip:''},{label:'Boskoop',name:'Boskoop',zip:''},{label:'Bosschenhoofd',name:'Bosschenhoofd',zip:''},{label:'Botlek Rotterdam',name:'Botlek Rotterdam',zip:''},{label:'Bourtange',name:'Bourtange',zip:''},{label:'Bovenkarspel',name:'Bovenkarspel',zip:''},{label:'Boven-Leeuwen',name:'Boven-Leeuwen',zip:''},{label:'Bovensmilde',name:'Bovensmilde',zip:''},{label:'Boxmeer',name:'Boxmeer',zip:''},{label:'Boxtel',name:'Boxtel',zip:''},{label:'Braamt',name:'Braamt',zip:''},{label:'Brakel',name:'Brakel',zip:''},{label:'Brandwijk',name:'Brandwijk',zip:''},{label:'Brantgum',name:'Brantgum',zip:''},{label:'Breda',name:'Breda',zip:''},{label:'Bredevoort',name:'Bredevoort',zip:''},{label:'Breedenbroek',name:'Breedenbroek',zip:''},{label:'Breezand',name:'Breezand',zip:''},{label:'Breezanddijk',name:'Breezanddijk',zip:''},{label:'Breskens',name:'Breskens',zip:''},{label:'Breukelen',name:'Breukelen',zip:''},{label:'Breukeleveen',name:'Breukeleveen',zip:''},{label:'Brielle',name:'Brielle',zip:''},{label:'Briltil',name:'Briltil',zip:''},{label:'Britsum',name:'Britsum',zip:''},{label:'Britswert',name:'Britswert',zip:''},{label:'Broek',name:'Broek',zip:''},{label:'Broek in Waterland',name:'Broek in Waterland',zip:''},{label:'Broek op Langedijk',name:'Broek op Langedijk',zip:''},{label:'Broekhuizen (Horst aan de Maas)',name:'Broekhuizen (Horst aan de Maas)',zip:''},{label:'Broekhuizen (Meppel)',name:'Broekhuizen (Meppel)',zip:''},{label:'Broekhuizenvorst',name:'Broekhuizenvorst',zip:''},{label:'Broekland',name:'Broekland',zip:''},{label:'Broeksterwâld',name:'Broeksterwâld',zip:''},{label:'Bronkhorst',name:'Bronkhorst',zip:''},{label:'Bronneger',name:'Bronneger',zip:''},{label:'Bronnegerveen',name:'Bronnegerveen',zip:''},{label:'Brouwershaven',name:'Brouwershaven',zip:''},{label:'Bruchem',name:'Bruchem',zip:''},{label:'Brucht',name:'Brucht',zip:''},{label:'Bruchterveld',name:'Bruchterveld',zip:''},{label:'Bruinehaar',name:'Bruinehaar',zip:''},{label:'Bruinisse',name:'Bruinisse',zip:''},{label:'Brummen',name:'Brummen',zip:''},{label:'Brunssum',name:'Brunssum',zip:''},{label:'Bruntinge',name:'Bruntinge',zip:''},{label:'Buchten',name:'Buchten',zip:''},{label:'Budel',name:'Budel',zip:''},{label:'Budel-Dorplein',name:'Budel-Dorplein',zip:''},{label:'Budel-Schoot',name:'Budel-Schoot',zip:''},{label:'Buggenum',name:'Buggenum',zip:''},{label:'Buinen',name:'Buinen',zip:''},{label:'Buinerveen',name:'Buinerveen',zip:''},{label:'Buitenkaag',name:'Buitenkaag',zip:''},{label:'Buitenpost',name:'Buitenpost',zip:''},{label:'De Bult',name:'De Bult',zip:''},{label:'Bunde',name:'Bunde',zip:''},{label:'Bunne',name:'Bunne',zip:''},{label:'Bunnik',name:'Bunnik',zip:''},{label:'Bunschoten-Spakenburg',name:'Bunschoten-Spakenburg',zip:''},{label:'Burdaard',name:'Burdaard',zip:''},{label:'Buren (Ameland)',name:'Buren (Ameland)',zip:''},{label:'Buren (Buren)',name:'Buren (Buren)',zip:''},{label:'Den Burg',name:'Den Burg',zip:''},{label:'Burgerbrug',name:'Burgerbrug',zip:''},{label:'Burgerveen',name:'Burgerveen',zip:''},{label:'Burgh-Haamstede',name:'Burgh-Haamstede',zip:''},{label:'Burgum',name:'Burgum',zip:''},{label:'Burgwerd',name:'Burgwerd',zip:''},{label:'Burum',name:'Burum',zip:''},{label:'Bussum',name:'Bussum',zip:''},{label:'Buurmalsen (Buren)',name:'Buurmalsen (Buren)',zip:''},{label:'Buurmalsen (Geldermalsen)',name:'Buurmalsen (Geldermalsen)',zip:''},{label:'Cadier en Keer',name:'Cadier en Keer',zip:''},{label:'Cadzand',name:'Cadzand',zip:''},{label:'Callantsoog',name:'Callantsoog',zip:''},{label:'Capelle aan den IJssel',name:'Capelle aan den IJssel',zip:''},{label:'Castelre',name:'Castelre',zip:''},{label:'Castenray',name:'Castenray',zip:''},{label:'Casteren',name:'Casteren',zip:''},{label:'Castricum',name:'Castricum',zip:''},{label:'Chaam',name:'Chaam',zip:''},{label:'Clinge',name:'Clinge',zip:''},{label:'De Cocksdorp',name:'De Cocksdorp',zip:''},{label:'Coevorden',name:'Coevorden',zip:''},{label:'Colijnsplaat',name:'Colijnsplaat',zip:''},{label:'Collendoorn',name:'Collendoorn',zip:''},{label:'Colmschate',name:'Colmschate',zip:''},{label:'Cornwerd',name:'Cornwerd',zip:''},{label:'Cothen',name:'Cothen',zip:''},{label:'Creil',name:'Creil',zip:''},{label:'Cromvoirt',name:'Cromvoirt',zip:''},{label:'Cruquius',name:'Cruquius',zip:''},{label:'Cuijk',name:'Cuijk',zip:''},{label:'Culemborg',name:'Culemborg',zip:''},{label:'Daarle',name:'Daarle',zip:''},{label:'Daarlerveen',name:'Daarlerveen',zip:''},{label:'Dalem',name:'Dalem',zip:''},{label:'Dalen',name:'Dalen',zip:''},{label:'Dalerpeel',name:'Dalerpeel',zip:''},{label:'Dalerveen',name:'Dalerveen',zip:''},{label:'Dalfsen',name:'Dalfsen',zip:''},{label:'Dalmsholte',name:'Dalmsholte',zip:''},{label:'Damwâld',name:'Damwâld',zip:''},{label:'Darp',name:'Darp',zip:''},{label:'Dearsum',name:'Dearsum',zip:''},{label:'Dedemsvaart',name:'Dedemsvaart',zip:''},{label:'Dedgum',name:'Dedgum',zip:''},{label:'Deelen',name:'Deelen',zip:''},{label:'Deest',name:'Deest',zip:''},{label:'Deil',name:'Deil',zip:''},{label:'Deinum',name:'Deinum',zip:''},{label:'Delden',name:'Delden',zip:''},{label:'Delfgauw',name:'Delfgauw',zip:''},{label:'Delfstrahuizen',name:'Delfstrahuizen',zip:''},{label:'Delft',name:'Delft',zip:''},{label:'Delfzijl',name:'Delfzijl',zip:''},{label:'Delwijnen',name:'Delwijnen',zip:''},{label:'Demen',name:'Demen',zip:''},{label:'Denekamp',name:'Denekamp',zip:''},{label:'Deurne',name:'Deurne',zip:''},{label:'Deurningen (Oldenzaal)',name:'Deurningen (Oldenzaal)',zip:''},{label:'Deurningen (Dinkelland)',name:'Deurningen (Dinkelland)',zip:''},{label:'Deursen-Dennenburg',name:'Deursen-Dennenburg',zip:''},{label:'Deurze',name:'Deurze',zip:''},{label:'Deventer',name:'Deventer',zip:''},{label:'Didam',name:'Didam',zip:''},{label:'Dieden',name:'Dieden',zip:''},{label:'Diemen',name:'Diemen',zip:''},{label:'Diepenheim',name:'Diepenheim',zip:''},{label:'Diepenveen',name:'Diepenveen',zip:''},{label:'Dieren',name:'Dieren',zip:''},{label:'Diessen',name:'Diessen',zip:''},{label:'Diever',name:'Diever',zip:''},{label:'Dieverbrug',name:'Dieverbrug',zip:''},{label:'Diffelen',name:'Diffelen',zip:''},{label:'Dijken',name:'Dijken',zip:''},{label:'Dinteloord',name:'Dinteloord',zip:''},{label:'Dinxperlo',name:'Dinxperlo',zip:''},{label:'Diphoorn',name:'Diphoorn',zip:''},{label:'Dirkshorn',name:'Dirkshorn',zip:''},{label:'Dirksland',name:'Dirksland',zip:''},{label:'Dodewaard',name:'Dodewaard',zip:''},{label:'Doenrade',name:'Doenrade',zip:''},{label:'Doesburg',name:'Doesburg',zip:''},{label:'Doetinchem',name:'Doetinchem',zip:''},{label:'Doeveren',name:'Doeveren',zip:''},{label:'Doezum',name:'Doezum',zip:''},{label:'Dokkum',name:'Dokkum',zip:''},{label:'Den Dolder',name:'Den Dolder',zip:''},{label:'Doldersum',name:'Doldersum',zip:''},{label:'Domburg',name:'Domburg',zip:''},{label:'Donderen',name:'Donderen',zip:''},{label:'Dongen',name:'Dongen',zip:''},{label:'Dongjum',name:'Dongjum',zip:''},{label:'Doniaga',name:'Doniaga',zip:''},{label:'Donkerbroek',name:'Donkerbroek',zip:''},{label:'Doorn',name:'Doorn',zip:''},{label:'Doornenburg',name:'Doornenburg',zip:''},{label:'Doornspijk',name:'Doornspijk',zip:''},{label:'Doorwerth',name:'Doorwerth',zip:''},{label:'Dordrecht',name:'Dordrecht',zip:''},{label:'Dorst',name:'Dorst',zip:''},{label:'Drachten',name:'Drachten',zip:''},{label:'Drachten-Azeven',name:'Drachten-Azeven',zip:''},{label:'Drachtstercompagnie',name:'Drachtstercompagnie',zip:''},{label:'Dreischor',name:'Dreischor',zip:''},{label:'Drempt',name:'Drempt',zip:''},{label:'Dreumel',name:'Dreumel',zip:''},{label:'Driebergen-Rijsenburg',name:'Driebergen-Rijsenburg',zip:''},{label:'Drieborg',name:'Drieborg',zip:''},{label:'Driebruggen',name:'Driebruggen',zip:''},{label:'Driehuis',name:'Driehuis',zip:''},{label:'Driehuizen',name:'Driehuizen',zip:''},{label:'Driel',name:'Driel',zip:''},{label:'Driewegen',name:'Driewegen',zip:''},{label:'Driezum',name:'Driezum',zip:''},{label:'Drijber',name:'Drijber',zip:''},{label:'Drimmelen',name:'Drimmelen',zip:''},{label:'Drogeham',name:'Drogeham',zip:''},{label:'Drogteropslagen',name:'Drogteropslagen',zip:''},{label:'Drongelen',name:'Drongelen',zip:''},{label:'Dronryp',name:'Dronryp',zip:''},{label:'Dronten',name:'Dronten',zip:''},{label:'Drouwen',name:'Drouwen',zip:''},{label:'Drouwenermond',name:'Drouwenermond',zip:''},{label:'Drouwenerveen',name:'Drouwenerveen',zip:''},{label:'Drunen',name:'Drunen',zip:''},{label:'Druten',name:'Druten',zip:''},{label:'Duiven',name:'Duiven',zip:''},{label:'Duivendrecht',name:'Duivendrecht',zip:''},{label:'Duizel',name:'Duizel',zip:''},{label:'Den Dungen',name:'Den Dungen',zip:''},{label:'Dussen',name:'Dussen',zip:''},{label:'Dwingeloo',name:'Dwingeloo',zip:''},{label:'Eagum',name:'Eagum',zip:''},{label:'Earnewâld',name:'Earnewâld',zip:''},{label:'Easterein',name:'Easterein',zip:''},{label:'Easterlittens',name:'Easterlittens',zip:''},{label:'Eastermar',name:'Eastermar',zip:''},{label:'Easterwierrum',name:'Easterwierrum',zip:''},{label:'Echt',name:'Echt',zip:''},{label:'Echteld',name:'Echteld',zip:''},{label:'Echten (De Wolden)',name:'Echten (De Wolden)',zip:''},{label:'Echten (De Fryske Marren)',name:'Echten (De Fryske Marren)',zip:''},{label:'Echtenerbrug',name:'Echtenerbrug',zip:''},{label:'Eck en Wiel',name:'Eck en Wiel',zip:''},{label:'Eckelrade',name:'Eckelrade',zip:''},{label:'Edam',name:'Edam',zip:''},{label:'Ede',name:'Ede',zip:''},{label:'Ederveen',name:'Ederveen',zip:''},{label:'Ee',name:'Ee',zip:''},{label:'Eede',name:'Eede',zip:''},{label:'Eefde',name:'Eefde',zip:''},{label:'Eelde',name:'Eelde',zip:''},{label:'Eelderwolde',name:'Eelderwolde',zip:''},{label:'Eemdijk',name:'Eemdijk',zip:''},{label:'Eemnes',name:'Eemnes',zip:''},{label:'Eemshaven',name:'Eemshaven',zip:''},{label:'Een',name:'Een',zip:''},{label:'Eenrum',name:'Eenrum',zip:''},{label:'Eenum',name:'Eenum',zip:''},{label:'Een-West',name:'Een-West',zip:''},{label:'Eerbeek',name:'Eerbeek',zip:''},{label:'Eersel',name:'Eersel',zip:''},{label:'Ees',name:'Ees',zip:''},{label:'Eesergroen',name:'Eesergroen',zip:''},{label:'Eeserveen',name:'Eeserveen',zip:''},{label:'Eesterga',name:'Eesterga',zip:''},{label:'Eesveen',name:'Eesveen',zip:''},{label:'Eethen',name:'Eethen',zip:''},{label:'Eext',name:'Eext',zip:''},{label:'Eexterveen',name:'Eexterveen',zip:''},{label:'Eexterveenschekanaal',name:'Eexterveenschekanaal',zip:''},{label:'Eexterzandvoort',name:'Eexterzandvoort',zip:''},{label:'Egchel',name:'Egchel',zip:''},{label:'Egmond aan den Hoef',name:'Egmond aan den Hoef',zip:''},{label:'Egmond aan Zee',name:'Egmond aan Zee',zip:''},{label:'Egmond-Binnen',name:'Egmond-Binnen',zip:''},{label:'Eibergen',name:'Eibergen',zip:''},{label:'Eijsden',name:'Eijsden',zip:''},{label:'Eindhoven',name:'Eindhoven',zip:''},{label:'Einighausen',name:'Einighausen',zip:''},{label:'Ekehaar',name:'Ekehaar',zip:''},{label:'Elahuizen',name:'Elahuizen',zip:''},{label:'Elburg',name:'Elburg',zip:''},{label:'Eldersloo',name:'Eldersloo',zip:''},{label:'Eleveld',name:'Eleveld',zip:''},{label:'Elim',name:'Elim',zip:''},{label:'Elkenrade',name:'Elkenrade',zip:''},{label:'Ell',name:'Ell',zip:''},{label:'Ellecom',name:'Ellecom',zip:''},{label:'Ellemeet',name:'Ellemeet',zip:''},{label:'Ellertshaar',name:'Ellertshaar',zip:''},{label:'Ellewoutsdijk',name:'Ellewoutsdijk',zip:''},{label:'Elp',name:'Elp',zip:''},{label:'Elsendorp',name:'Elsendorp',zip:''},{label:'Elshout',name:'Elshout',zip:''},{label:'Elsloo (Stein)',name:'Elsloo (Stein)',zip:''},{label:'Elsloo (Ooststellingwerf)',name:'Elsloo (Ooststellingwerf)',zip:''},{label:'Elspeet',name:'Elspeet',zip:''},{label:'Elst',name:'Elst',zip:''},{label:'Elst Ut',name:'Elst Ut',zip:''},{label:'Emmeloord',name:'Emmeloord',zip:''},{label:'Emmen',name:'Emmen',zip:''},{label:'Emmer-Compascuum',name:'Emmer-Compascuum',zip:''},{label:'Empe',name:'Empe',zip:''},{label:'Emst',name:'Emst',zip:''},{label:'Engwierum',name:'Engwierum',zip:''},{label:'Enkhuizen',name:'Enkhuizen',zip:''},{label:'Ens',name:'Ens',zip:''},{label:'Enschede',name:'Enschede',zip:''},{label:'Enspijk',name:'Enspijk',zip:''},{label:'Enter',name:'Enter',zip:''},{label:'Enumatil',name:'Enumatil',zip:''},{label:'Epe',name:'Epe',zip:''},{label:'Epen',name:'Epen',zip:''},{label:'Eppenhuizen',name:'Eppenhuizen',zip:''},{label:'Epse',name:'Epse',zip:''},{label:'Erica',name:'Erica',zip:''},{label:'Erichem',name:'Erichem',zip:''},{label:'Erlecom',name:'Erlecom',zip:''},{label:'Erm',name:'Erm',zip:''},{label:'Ermelo',name:'Ermelo',zip:''},{label:'Erp',name:'Erp',zip:''},{label:'Esbeek',name:'Esbeek',zip:''},{label:'Esch',name:'Esch',zip:''},{label:'Escharen',name:'Escharen',zip:''},{label:'Espel',name:'Espel',zip:''},{label:'Est',name:'Est',zip:''},{label:'Etten',name:'Etten',zip:''},{label:'Etten-Leur',name:'Etten-Leur',zip:''},{label:'Europoort Rotterdam',name:'Europoort Rotterdam',zip:''},{label:'Eursinge (Midden-Drenthe)',name:'Eursinge (Midden-Drenthe)',zip:''},{label:'Eursinge (De Wolden)',name:'Eursinge (De Wolden)',zip:''},{label:'Everdingen',name:'Everdingen',zip:''},{label:'Evertsoord',name:'Evertsoord',zip:''},{label:'Ewijk',name:'Ewijk',zip:''},{label:'1e Exloërmond',name:'1e Exloërmond',zip:''},{label:'2e Exloërmond',name:'2e Exloërmond',zip:''},{label:'Exloërveen',name:'Exloërveen',zip:''},{label:'Exloo',name:'Exloo',zip:''},{label:'Exmorra',name:'Exmorra',zip:''},{label:'Eygelshoven',name:'Eygelshoven',zip:''},{label:'Eys',name:'Eys',zip:''},{label:'Ezinge',name:'Ezinge',zip:''},{label:'De Falom',name:'De Falom',zip:''},{label:'Farmsum',name:'Farmsum',zip:''},{label:'Feanwâlden',name:'Feanwâlden',zip:''},{label:'Feerwerd',name:'Feerwerd',zip:''},{label:'Feinsum',name:'Feinsum',zip:''},{label:'Ferwert',name:'Ferwert',zip:''},{label:'Ferwoude',name:'Ferwoude',zip:''},{label:'Fijnaart',name:'Fijnaart',zip:''},{label:'Finsterwolde',name:'Finsterwolde',zip:''},{label:'Firdgum',name:'Firdgum',zip:''},{label:'Fleringen',name:'Fleringen',zip:''},{label:'Fluitenberg',name:'Fluitenberg',zip:''},{label:'Fochteloo',name:'Fochteloo',zip:''},{label:'Follega',name:'Follega',zip:''},{label:'Folsgare',name:'Folsgare',zip:''},{label:'Formerum',name:'Formerum',zip:''},{label:'Foudgum',name:'Foudgum',zip:''},{label:'Foxhol',name:'Foxhol',zip:''},{label:'Foxwolde',name:'Foxwolde',zip:''},{label:'Franeker',name:'Franeker',zip:''},{label:'Frederiksoord',name:'Frederiksoord',zip:''},{label:'Friens',name:'Friens',zip:''},{label:'Frieschepalen',name:'Frieschepalen',zip:''},{label:'Froombosch',name:'Froombosch',zip:''},{label:'Gaanderen',name:'Gaanderen',zip:''},{label:'Gaast',name:'Gaast',zip:''},{label:'Gaastmeer',name:'Gaastmeer',zip:''},{label:'Galder',name:'Galder',zip:''},{label:'Gameren',name:'Gameren',zip:''},{label:'Gapinge',name:'Gapinge',zip:''},{label:'Garderen',name:'Garderen',zip:''},{label:'Garmerwolde',name:'Garmerwolde',zip:''},{label:'Garminge',name:'Garminge',zip:''},{label:'Garnwerd',name:'Garnwerd',zip:''},{label:'Garrelsweer',name:'Garrelsweer',zip:''},{label:'Garsthuizen',name:'Garsthuizen',zip:''},{label:'Garyp',name:'Garyp',zip:''},{label:'Gassel',name:'Gassel',zip:''},{label:'Gasselte',name:'Gasselte',zip:''},{label:'Gasselternijveen',name:'Gasselternijveen',zip:''},{label:'Gasselternijveenschemond',name:'Gasselternijveenschemond',zip:''},{label:'Gastel',name:'Gastel',zip:''},{label:'Gasteren',name:'Gasteren',zip:''},{label:'Gauw',name:'Gauw',zip:''},{label:'Geelbroek',name:'Geelbroek',zip:''},{label:'Geerdijk',name:'Geerdijk',zip:''},{label:'Geersdijk',name:'Geersdijk',zip:''},{label:'Geertruidenberg',name:'Geertruidenberg',zip:''},{label:'Geervliet',name:'Geervliet',zip:''},{label:'Gees',name:'Gees',zip:''},{label:'Geesbrug',name:'Geesbrug',zip:''},{label:'Geesteren (Tubbergen)',name:'Geesteren (Tubbergen)',zip:''},{label:'Geesteren (Berkelland)',name:'Geesteren (Berkelland)',zip:''},{label:'Geeuwenbrug',name:'Geeuwenbrug',zip:''},{label:'Geffen',name:'Geffen',zip:''},{label:'Geijsteren',name:'Geijsteren',zip:''},{label:'Geldermalsen',name:'Geldermalsen',zip:''},{label:'Gelderswoude',name:'Gelderswoude',zip:''},{label:'Geldrop',name:'Geldrop',zip:''},{label:'Geleen',name:'Geleen',zip:''},{label:'Gellicum',name:'Gellicum',zip:''},{label:'Gelselaar',name:'Gelselaar',zip:''},{label:'Gemert',name:'Gemert',zip:''},{label:'Gemonde',name:'Gemonde',zip:''},{label:'Genderen',name:'Genderen',zip:''},{label:'Gendringen',name:'Gendringen',zip:''},{label:'Gendt',name:'Gendt',zip:''},{label:'Genemuiden',name:'Genemuiden',zip:''},{label:'Gennep',name:'Gennep',zip:''},{label:'Gerkesklooster',name:'Gerkesklooster',zip:''},{label:'Gersloot',name:'Gersloot',zip:''},{label:'Geulle',name:'Geulle',zip:''},{label:'Giesbeek',name:'Giesbeek',zip:''},{label:'Giessen',name:'Giessen',zip:''},{label:'Giessenburg',name:'Giessenburg',zip:''},{label:'Gieten',name:'Gieten',zip:''},{label:'Gieterveen',name:'Gieterveen',zip:''},{label:'Giethmen',name:'Giethmen',zip:''},{label:'Giethoorn',name:'Giethoorn',zip:''},{label:'Gilze',name:'Gilze',zip:''},{label:'Ginnum',name:'Ginnum',zip:''},{label:'Glane',name:'Glane',zip:''},{label:'Glimmen',name:'Glimmen',zip:''},{label:'De Glind',name:'De Glind',zip:''},{label:'Godlinze',name:'Godlinze',zip:''},{label:'Goedereede',name:'Goedereede',zip:''},{label:'Goënga',name:'Goënga',zip:''},{label:'Goëngahuizen',name:'Goëngahuizen',zip:''},{label:'Goes',name:'Goes',zip:''},{label:'Goingarijp',name:'Goingarijp',zip:''},{label:'Goirle',name:'Goirle',zip:''},{label:'Goor',name:'Goor',zip:''},{label:'De Goorn',name:'De Goorn',zip:''},{label:'Gorinchem',name:'Gorinchem',zip:''},{label:'Gorredijk',name:'Gorredijk',zip:''},{label:'Gorssel',name:'Gorssel',zip:''},{label:'Gouda',name:'Gouda',zip:''},{label:'Gouderak',name:'Gouderak',zip:''},{label:'Goudriaan',name:'Goudriaan',zip:''},{label:'Goudswaard',name:'Goudswaard',zip:''},{label:'Goutum',name:'Goutum',zip:''},{label:'\'t Goy',name:'\'t Goy',zip:''},{label:'Graauw',name:'Graauw',zip:''},{label:'Grafhorst',name:'Grafhorst',zip:''},{label:'Graft',name:'Graft',zip:''},{label:'Gramsbergen',name:'Gramsbergen',zip:''},{label:'Grashoek',name:'Grashoek',zip:''},{label:'Grathem',name:'Grathem',zip:''},{label:'Grave',name:'Grave',zip:''},{label:'\'s-Graveland',name:'\'s-Graveland',zip:''},{label:'\'s-Gravendeel',name:'\'s-Gravendeel',zip:''},{label:'\'s-Gravenhage',name:'\'s-Gravenhage',zip:''},{label:'\'s Gravenmoer',name:'\'s Gravenmoer',zip:''},{label:'\'s-Gravenpolder',name:'\'s-Gravenpolder',zip:''},{label:'\'s-Gravenzande',name:'\'s-Gravenzande',zip:''},{label:'Greonterp',name:'Greonterp',zip:''},{label:'Grevenbicht',name:'Grevenbicht',zip:''},{label:'Griendtsveen',name:'Griendtsveen',zip:''},{label:'Grijpskerk',name:'Grijpskerk',zip:''},{label:'Grijpskerke',name:'Grijpskerke',zip:''},{label:'Groede',name:'Groede',zip:''},{label:'Groenekan',name:'Groenekan',zip:''},{label:'Groeningen',name:'Groeningen',zip:''},{label:'Groenlo',name:'Groenlo',zip:''},{label:'Groesbeek',name:'Groesbeek',zip:''},{label:'Groessen',name:'Groessen',zip:''},{label:'Groet',name:'Groet',zip:''},{label:'De Groeve',name:'De Groeve',zip:''},{label:'Grolloo',name:'Grolloo',zip:''},{label:'Groningen',name:'Groningen',zip:''},{label:'Gronsveld',name:'Gronsveld',zip:''},{label:'Groot-Ammers',name:'Groot-Ammers',zip:''},{label:'Grootebroek',name:'Grootebroek',zip:''},{label:'Grootegast',name:'Grootegast',zip:''},{label:'Grootschermer',name:'Grootschermer',zip:''},{label:'Grou',name:'Grou',zip:''},{label:'Grubbenvorst',name:'Grubbenvorst',zip:''},{label:'Gulpen',name:'Gulpen',zip:''},{label:'Guttecoven',name:'Guttecoven',zip:''},{label:'Gytsjerk',name:'Gytsjerk',zip:''},{label:'Haaften',name:'Haaften',zip:''},{label:'Haaksbergen',name:'Haaksbergen',zip:''},{label:'Haalderen',name:'Haalderen',zip:''},{label:'\'t Haantje',name:'\'t Haantje',zip:''},{label:'Haaren',name:'Haaren',zip:''},{label:'Haarle (Tubbergen)',name:'Haarle (Tubbergen)',zip:''},{label:'Haarle (Hellendoorn)',name:'Haarle (Hellendoorn)',zip:''},{label:'Haarlem',name:'Haarlem',zip:''},{label:'Haarlemmerliede',name:'Haarlemmerliede',zip:''},{label:'Haarlo',name:'Haarlo',zip:''},{label:'Haarsteeg',name:'Haarsteeg',zip:''},{label:'Haarzuilens',name:'Haarzuilens',zip:''},{label:'Haastrecht',name:'Haastrecht',zip:''},{label:'Haelen',name:'Haelen',zip:''},{label:'Hagestein',name:'Hagestein',zip:''},{label:'Haghorst',name:'Haghorst',zip:''},{label:'Haler',name:'Haler',zip:''},{label:'Halfweg',name:'Halfweg',zip:''},{label:'Hall',name:'Hall',zip:''},{label:'Halle',name:'Halle',zip:''},{label:'Hallum',name:'Hallum',zip:''},{label:'Halsteren',name:'Halsteren',zip:''},{label:'Den Ham (Zuidhorn)',name:'Den Ham (Zuidhorn)',zip:''},{label:'Den Ham (Twenterand)',name:'Den Ham (Twenterand)',zip:''},{label:'Handel',name:'Handel',zip:''},{label:'Hank',name:'Hank',zip:''},{label:'Hansweert',name:'Hansweert',zip:''},{label:'Hantum',name:'Hantum',zip:''},{label:'Hantumeruitburen',name:'Hantumeruitburen',zip:''},{label:'Hantumhuizen',name:'Hantumhuizen',zip:''},{label:'Hapert',name:'Hapert',zip:''},{label:'Haps',name:'Haps',zip:''},{label:'Harbrinkhoek',name:'Harbrinkhoek',zip:''},{label:'\'t Harde',name:'\'t Harde',zip:''},{label:'Hardenberg',name:'Hardenberg',zip:''},{label:'Harderwijk',name:'Harderwijk',zip:''},{label:'Hardinxveld-Giessendam',name:'Hardinxveld-Giessendam',zip:''},{label:'Haren (Oss)',name:'Haren (Oss)',zip:''},{label:'Haren (Haren)',name:'Haren (Haren)',zip:''},{label:'Harfsen',name:'Harfsen',zip:''},{label:'Harich',name:'Harich',zip:''},{label:'Haringhuizen',name:'Haringhuizen',zip:''},{label:'Harkema',name:'Harkema',zip:''},{label:'Harkstede (Midden-Groningen)',name:'Harkstede (Midden-Groningen)',zip:''},{label:'Harkstede (Groningen)',name:'Harkstede (Groningen)',zip:''},{label:'Harlingen',name:'Harlingen',zip:''},{label:'Harmelen',name:'Harmelen',zip:''},{label:'Harreveld',name:'Harreveld',zip:''},{label:'Harskamp',name:'Harskamp',zip:''},{label:'Hartwerd',name:'Hartwerd',zip:''},{label:'Haskerdijken',name:'Haskerdijken',zip:''},{label:'Haskerhorne',name:'Haskerhorne',zip:''},{label:'Hasselt',name:'Hasselt',zip:''},{label:'Hattem',name:'Hattem',zip:''},{label:'Hattemerbroek',name:'Hattemerbroek',zip:''},{label:'Haule',name:'Haule',zip:''},{label:'Haulerwijk',name:'Haulerwijk',zip:''},{label:'Hauwert',name:'Hauwert',zip:''},{label:'Havelte',name:'Havelte',zip:''},{label:'Havelterberg',name:'Havelterberg',zip:''},{label:'Hazerswoude-Dorp',name:'Hazerswoude-Dorp',zip:''},{label:'Hazerswoude-Rijndijk',name:'Hazerswoude-Rijndijk',zip:''},{label:'Hedel',name:'Hedel',zip:''},{label:'Hedikhuizen',name:'Hedikhuizen',zip:''},{label:'Hee',name:'Hee',zip:''},{label:'Heeg',name:'Heeg',zip:''},{label:'Heel',name:'Heel',zip:''},{label:'Heelsum',name:'Heelsum',zip:''},{label:'Heelweg',name:'Heelweg',zip:''},{label:'Heemserveen',name:'Heemserveen',zip:''},{label:'Heemskerk',name:'Heemskerk',zip:''},{label:'Heemstede',name:'Heemstede',zip:''},{label:'De Heen',name:'De Heen',zip:''},{label:'Heenvliet',name:'Heenvliet',zip:''},{label:'\'s-Heer Abtskerke',name:'\'s-Heer Abtskerke',zip:''},{label:'\'s-Heer Arendskerke',name:'\'s-Heer Arendskerke',zip:''},{label:'\'s-Heer Hendrikskinderen',name:'\'s-Heer Hendrikskinderen',zip:''},{label:'Heerde',name:'Heerde',zip:''},{label:'\'s-Heerenberg',name:'\'s-Heerenberg',zip:''},{label:'\'s-Heerenbroek',name:'\'s-Heerenbroek',zip:''},{label:'\'s-Heerenhoek',name:'\'s-Heerenhoek',zip:''},{label:'Heerenveen',name:'Heerenveen',zip:''},{label:'Heerewaarden',name:'Heerewaarden',zip:''},{label:'Heerhugowaard',name:'Heerhugowaard',zip:''},{label:'Heerjansdam',name:'Heerjansdam',zip:''},{label:'Heerle',name:'Heerle',zip:''},{label:'Heerlen',name:'Heerlen',zip:''},{label:'Heesbeen',name:'Heesbeen',zip:''},{label:'Heesch',name:'Heesch',zip:''},{label:'Heesselt',name:'Heesselt',zip:''},{label:'Heeswijk-Dinther',name:'Heeswijk-Dinther',zip:''},{label:'Heeten',name:'Heeten',zip:''},{label:'Heeze',name:'Heeze',zip:''},{label:'Hegebeintum',name:'Hegebeintum',zip:''},{label:'Hegelsom',name:'Hegelsom',zip:''},{label:'Hei- en Boeicop',name:'Hei- en Boeicop',zip:''},{label:'Heibloem',name:'Heibloem',zip:''},{label:'Heide',name:'Heide',zip:''},{label:'It Heidenskip',name:'It Heidenskip',zip:''},{label:'Ter Heijde',name:'Ter Heijde',zip:''},{label:'Heijen',name:'Heijen',zip:''},{label:'Heijenrath',name:'Heijenrath',zip:''},{label:'Heijningen',name:'Heijningen',zip:''},{label:'Heikant',name:'Heikant',zip:''},{label:'Heilig Landstichting',name:'Heilig Landstichting',zip:''},{label:'Heiligerlee',name:'Heiligerlee',zip:''},{label:'Heiloo',name:'Heiloo',zip:''},{label:'Heinenoord',name:'Heinenoord',zip:''},{label:'Heinkenszand',name:'Heinkenszand',zip:''},{label:'Heino',name:'Heino',zip:''},{label:'Hekelingen',name:'Hekelingen',zip:''},{label:'Hekendorp',name:'Hekendorp',zip:''},{label:'Helden',name:'Helden',zip:''},{label:'Den Helder',name:'Den Helder',zip:''},{label:'Helenaveen',name:'Helenaveen',zip:''},{label:'Hellendoorn',name:'Hellendoorn',zip:''},{label:'Hellevoetsluis',name:'Hellevoetsluis',zip:''},{label:'Hellouw',name:'Hellouw',zip:''},{label:'Hellum',name:'Hellum',zip:''},{label:'Helmond',name:'Helmond',zip:''},{label:'Helvoirt',name:'Helvoirt',zip:''},{label:'Hem',name:'Hem',zip:''},{label:'Hemelum',name:'Hemelum',zip:''},{label:'Hemmen',name:'Hemmen',zip:''},{label:'Hempens',name:'Hempens',zip:''},{label:'Hemrik',name:'Hemrik',zip:''},{label:'Hendrik-Ido-Ambacht',name:'Hendrik-Ido-Ambacht',zip:''},{label:'Hengelo (Hengelo)',name:'Hengelo (Hengelo)',zip:''},{label:'Hengelo (Bronckhorst)',name:'Hengelo (Bronckhorst)',zip:''},{label:'Hengevelde',name:'Hengevelde',zip:''},{label:'Hengstdijk',name:'Hengstdijk',zip:''},{label:'Hensbroek',name:'Hensbroek',zip:''},{label:'Herbaijum',name:'Herbaijum',zip:''},{label:'Herkenbosch',name:'Herkenbosch',zip:''},{label:'Herkingen',name:'Herkingen',zip:''},{label:'Hernen',name:'Hernen',zip:''},{label:'Herpen',name:'Herpen',zip:''},{label:'Herpt',name:'Herpt',zip:''},{label:'Herten',name:'Herten',zip:''},{label:'Hertme',name:'Hertme',zip:''},{label:'\'s-Hertogenbosch',name:'\'s-Hertogenbosch',zip:''},{label:'Herveld',name:'Herveld',zip:''},{label:'Herwen',name:'Herwen',zip:''},{label:'Herwijnen',name:'Herwijnen',zip:''},{label:'Heteren',name:'Heteren',zip:''},{label:'Heukelom',name:'Heukelom',zip:''},{label:'Heukelum',name:'Heukelum',zip:''},{label:'Heumen',name:'Heumen',zip:''},{label:'De Heurne',name:'De Heurne',zip:''},{label:'Heusden (Asten)',name:'Heusden (Asten)',zip:''},{label:'Heusden (Heusden)',name:'Heusden (Heusden)',zip:''},{label:'Heveadorp',name:'Heveadorp',zip:''},{label:'Heythuysen',name:'Heythuysen',zip:''},{label:'Hezingen',name:'Hezingen',zip:''},{label:'Hiaure',name:'Hiaure',zip:''},{label:'Hichtum',name:'Hichtum',zip:''},{label:'Hidaard',name:'Hidaard',zip:''},{label:'Hierden',name:'Hierden',zip:''},{label:'Hieslum',name:'Hieslum',zip:''},{label:'Hijken',name:'Hijken',zip:''},{label:'Hijum',name:'Hijum',zip:''},{label:'Hilaard',name:'Hilaard',zip:''},{label:'Hillegom',name:'Hillegom',zip:''},{label:'Hilvarenbeek',name:'Hilvarenbeek',zip:''},{label:'Hilversum',name:'Hilversum',zip:''},{label:'Hindeloopen',name:'Hindeloopen',zip:''},{label:'Hinnaard',name:'Hinnaard',zip:''},{label:'Hippolytushoef',name:'Hippolytushoef',zip:''},{label:'Hitzum',name:'Hitzum',zip:''},{label:'Hobrede',name:'Hobrede',zip:''},{label:'Hoedekenskerke',name:'Hoedekenskerke',zip:''},{label:'de Hoef',name:'de Hoef',zip:''},{label:'Hoef en Haag',name:'Hoef en Haag',zip:''},{label:'Hoek',name:'Hoek',zip:''},{label:'Hoek van Holland',name:'Hoek van Holland',zip:''},{label:'Hoenderloo (Apeldoorn)',name:'Hoenderloo (Apeldoorn)',zip:''},{label:'Hoenderloo (Ede)',name:'Hoenderloo (Ede)',zip:''},{label:'Hoensbroek',name:'Hoensbroek',zip:''},{label:'Hoenzadriel',name:'Hoenzadriel',zip:''},{label:'De Hoeve',name:'De Hoeve',zip:''},{label:'Hoevelaken',name:'Hoevelaken',zip:''},{label:'Hoeven',name:'Hoeven',zip:''},{label:'Hoge Hexel',name:'Hoge Hexel',zip:''},{label:'Hollandsche Rading',name:'Hollandsche Rading',zip:''},{label:'Hollandscheveld',name:'Hollandscheveld',zip:''},{label:'Hollum',name:'Hollum',zip:''},{label:'Holsloot',name:'Holsloot',zip:''},{label:'Holten',name:'Holten',zip:''},{label:'Holthees',name:'Holthees',zip:''},{label:'Holtheme',name:'Holtheme',zip:''},{label:'Holthone',name:'Holthone',zip:''},{label:'Holtum',name:'Holtum',zip:''},{label:'Holwerd',name:'Holwerd',zip:''},{label:'Holwierde',name:'Holwierde',zip:''},{label:'Hommerts',name:'Hommerts',zip:''},{label:'Homoet',name:'Homoet',zip:''},{label:'Honselersdijk',name:'Honselersdijk',zip:''},{label:'Hoofddorp',name:'Hoofddorp',zip:''},{label:'Hoofdplaat',name:'Hoofdplaat',zip:''},{label:'Hoog Soeren',name:'Hoog Soeren',zip:''},{label:'Hoogblokland',name:'Hoogblokland',zip:''},{label:'Hooge Mierde',name:'Hooge Mierde',zip:''},{label:'Hooge Zwaluwe',name:'Hooge Zwaluwe',zip:''},{label:'Hoogeloon',name:'Hoogeloon',zip:''},{label:'Hoogenweg',name:'Hoogenweg',zip:''},{label:'Hoogerheide',name:'Hoogerheide',zip:''},{label:'Hoogersmilde (Midden-Drenthe)',name:'Hoogersmilde (Midden-Drenthe)',zip:''},{label:'Hoogersmilde (Westerveld)',name:'Hoogersmilde (Westerveld)',zip:''},{label:'Hoogeveen',name:'Hoogeveen',zip:''},{label:'Hoogezand',name:'Hoogezand',zip:''},{label:'Hooghalen',name:'Hooghalen',zip:''},{label:'Hoogkarspel',name:'Hoogkarspel',zip:''},{label:'Hoog-Keppel',name:'Hoog-Keppel',zip:''},{label:'Hoogland',name:'Hoogland',zip:''},{label:'Hooglanderveen',name:'Hooglanderveen',zip:''},{label:'Hoogmade',name:'Hoogmade',zip:''},{label:'Hoogvliet Rotterdam',name:'Hoogvliet Rotterdam',zip:''},{label:'Hoogwoud',name:'Hoogwoud',zip:''},{label:'Hoorn (Hoorn)',name:'Hoorn (Hoorn)',zip:''},{label:'Hoorn (Terschelling)',name:'Hoorn (Terschelling)',zip:''},{label:'Den Hoorn (Texel)',name:'Den Hoorn (Texel)',zip:''},{label:'Den Hoorn (Midden-Delfland)',name:'Den Hoorn (Midden-Delfland)',zip:''},{label:'Hoornaar',name:'Hoornaar',zip:''},{label:'Hoornsterzwaag',name:'Hoornsterzwaag',zip:''},{label:'Horn',name:'Horn',zip:''},{label:'Den Horn',name:'Den Horn',zip:''},{label:'Hornhuizen',name:'Hornhuizen',zip:''},{label:'Horssen',name:'Horssen',zip:''},{label:'Horst',name:'Horst',zip:''},{label:'Den Hout',name:'Den Hout',zip:''},{label:'Houten',name:'Houten',zip:''},{label:'Houtigehage',name:'Houtigehage',zip:''},{label:'Houwerzijl',name:'Houwerzijl',zip:''},{label:'Huijbergen',name:'Huijbergen',zip:''},{label:'Huis ter Heide (Noordenveld)',name:'Huis ter Heide (Noordenveld)',zip:''},{label:'Huis ter Heide (Zeist)',name:'Huis ter Heide (Zeist)',zip:''},{label:'Huisduinen',name:'Huisduinen',zip:''},{label:'Huisseling',name:'Huisseling',zip:''},{label:'Huissen',name:'Huissen',zip:''},{label:'Huizen',name:'Huizen',zip:''},{label:'Huizinge',name:'Huizinge',zip:''},{label:'Hulsberg',name:'Hulsberg',zip:''},{label:'Hulsel',name:'Hulsel',zip:''},{label:'Hulshorst',name:'Hulshorst',zip:''},{label:'Hulst',name:'Hulst',zip:''},{label:'Hulten',name:'Hulten',zip:''},{label:'Hummelo',name:'Hummelo',zip:''},{label:'Húns',name:'Húns',zip:''},{label:'Hunsel',name:'Hunsel',zip:''},{label:'Hurdegaryp',name:'Hurdegaryp',zip:''},{label:'Hurwenen',name:'Hurwenen',zip:''},{label:'Idaerd',name:'Idaerd',zip:''},{label:'Idsegahuizum',name:'Idsegahuizum',zip:''},{label:'Idskenhuizen',name:'Idskenhuizen',zip:''},{label:'Ter Idzard',name:'Ter Idzard',zip:''},{label:'Idzega',name:'Idzega',zip:''},{label:'Iens',name:'Iens',zip:''},{label:'IJhorst',name:'IJhorst',zip:''},{label:'IJlst',name:'IJlst',zip:''},{label:'IJmuiden',name:'IJmuiden',zip:''},{label:'IJsselham',name:'IJsselham',zip:''},{label:'IJsselmuiden',name:'IJsselmuiden',zip:''},{label:'IJsselstein',name:'IJsselstein',zip:''},{label:'IJzendijke',name:'IJzendijke',zip:''},{label:'IJzendoorn',name:'IJzendoorn',zip:''},{label:'Den Ilp',name:'Den Ilp',zip:''},{label:'Ilpendam',name:'Ilpendam',zip:''},{label:'Indijk',name:'Indijk',zip:''},{label:'Ingber',name:'Ingber',zip:''},{label:'Ingelum',name:'Ingelum',zip:''},{label:'Ingen',name:'Ingen',zip:''},{label:'Itens',name:'Itens',zip:''},{label:'Ittervoort',name:'Ittervoort',zip:''},{label:'Jaarsveld',name:'Jaarsveld',zip:''},{label:'Jabeek',name:'Jabeek',zip:''},{label:'Jannum',name:'Jannum',zip:''},{label:'Jellum',name:'Jellum',zip:''},{label:'Jelsum',name:'Jelsum',zip:''},{label:'Jirnsum',name:'Jirnsum',zip:''},{label:'Jislum',name:'Jislum',zip:''},{label:'Jisp',name:'Jisp',zip:''},{label:'Jistrum',name:'Jistrum',zip:''},{label:'Jonkerslân',name:'Jonkerslân',zip:''},{label:'Jonkersvaart',name:'Jonkersvaart',zip:''},{label:'Joppe',name:'Joppe',zip:''},{label:'Jorwert',name:'Jorwert',zip:''},{label:'Joure',name:'Joure',zip:''},{label:'Jouswier',name:'Jouswier',zip:''},{label:'Jubbega',name:'Jubbega',zip:''},{label:'Julianadorp',name:'Julianadorp',zip:''},{label:'Jutrijp',name:'Jutrijp',zip:''},{label:'Kaag',name:'Kaag',zip:''},{label:'Kaard',name:'Kaard',zip:''},{label:'Kaatsheuvel',name:'Kaatsheuvel',zip:''},{label:'Kalenberg',name:'Kalenberg',zip:''},{label:'Kallenkote',name:'Kallenkote',zip:''},{label:'Kamerik',name:'Kamerik',zip:''},{label:'Kampen',name:'Kampen',zip:''},{label:'Kamperland',name:'Kamperland',zip:''},{label:'Kamperveen',name:'Kamperveen',zip:''},{label:'Kantens',name:'Kantens',zip:''},{label:'Kapel Avezaath (Tiel)',name:'Kapel Avezaath (Tiel)',zip:''},{label:'Kapel-Avezaath (Buren)',name:'Kapel-Avezaath (Buren)',zip:''},{label:'Kapelle',name:'Kapelle',zip:''},{label:'Kapellebrug',name:'Kapellebrug',zip:''},{label:'Katlijk',name:'Katlijk',zip:''},{label:'Kats',name:'Kats',zip:''},{label:'Kattendijke',name:'Kattendijke',zip:''},{label:'Katwijk (Katwijk)',name:'Katwijk (Katwijk)',zip:''},{label:'Katwijk (Cuijk)',name:'Katwijk (Cuijk)',zip:''},{label:'Katwoude',name:'Katwoude',zip:''},{label:'Kedichem',name:'Kedichem',zip:''},{label:'Keent',name:'Keent',zip:''},{label:'Keijenborg',name:'Keijenborg',zip:''},{label:'Kekerdom',name:'Kekerdom',zip:''},{label:'Kelpen-Oler',name:'Kelpen-Oler',zip:''},{label:'Kerk Avezaath (Tiel)',name:'Kerk Avezaath (Tiel)',zip:''},{label:'Kerk-Avezaath (Buren)',name:'Kerk-Avezaath (Buren)',zip:''},{label:'Kerkdriel',name:'Kerkdriel',zip:''},{label:'Kerkenveld',name:'Kerkenveld',zip:''},{label:'Kerkrade',name:'Kerkrade',zip:''},{label:'Kerkwerve',name:'Kerkwerve',zip:''},{label:'Kerkwijk',name:'Kerkwijk',zip:''},{label:'Kessel',name:'Kessel',zip:''},{label:'Kesteren',name:'Kesteren',zip:''},{label:'De Kiel',name:'De Kiel',zip:''},{label:'Kiel-Windeweer',name:'Kiel-Windeweer',zip:''},{label:'Kilder',name:'Kilder',zip:''},{label:'Kimswerd',name:'Kimswerd',zip:''},{label:'Kinderdijk',name:'Kinderdijk',zip:''},{label:'Kinnum',name:'Kinnum',zip:''},{label:'Klaaswaal',name:'Klaaswaal',zip:''},{label:'Klarenbeek (Apeldoorn)',name:'Klarenbeek (Apeldoorn)',zip:''},{label:'Klarenbeek (Voorst)',name:'Klarenbeek (Voorst)',zip:''},{label:'Klazienaveen',name:'Klazienaveen',zip:''},{label:'Klazienaveen-Noord',name:'Klazienaveen-Noord',zip:''},{label:'Klein Zundert',name:'Klein Zundert',zip:''},{label:'Klijndijk',name:'Klijndijk',zip:''},{label:'Klimmen',name:'Klimmen',zip:''},{label:'Kloetinge (Goes)',name:'Kloetinge (Goes)',zip:''},{label:'Kloetinge (Kapelle)',name:'Kloetinge (Kapelle)',zip:''},{label:'De Klomp',name:'De Klomp',zip:''},{label:'Klooster Lidlum',name:'Klooster Lidlum',zip:''},{label:'Kloosterburen',name:'Kloosterburen',zip:''},{label:'Kloosterhaar (Twenterand)',name:'Kloosterhaar (Twenterand)',zip:''},{label:'Kloosterhaar (Hardenberg)',name:'Kloosterhaar (Hardenberg)',zip:''},{label:'Kloosterzande',name:'Kloosterzande',zip:''},{label:'Klundert',name:'Klundert',zip:''},{label:'Knegsel',name:'Knegsel',zip:''},{label:'De Knipe',name:'De Knipe',zip:''},{label:'Koarnjum',name:'Koarnjum',zip:''},{label:'Kockengen',name:'Kockengen',zip:''},{label:'Koedijk (Langedijk)',name:'Koedijk (Langedijk)',zip:''},{label:'Koedijk (Alkmaar)',name:'Koedijk (Alkmaar)',zip:''},{label:'Koekange',name:'Koekange',zip:''},{label:'Koewacht',name:'Koewacht',zip:''},{label:'Kolderwolde',name:'Kolderwolde',zip:''},{label:'Kolham',name:'Kolham',zip:''},{label:'Kolhorn',name:'Kolhorn',zip:''},{label:'Kollum',name:'Kollum',zip:''},{label:'Kollumerpomp',name:'Kollumerpomp',zip:''},{label:'Kollumerzwaag',name:'Kollumerzwaag',zip:''},{label:'Kommerzijl',name:'Kommerzijl',zip:''},{label:'Koningsbosch',name:'Koningsbosch',zip:''},{label:'Koningslust',name:'Koningslust',zip:''},{label:'De Koog',name:'De Koog',zip:''},{label:'Koog aan de Zaan',name:'Koog aan de Zaan',zip:''},{label:'Kootstertille',name:'Kootstertille',zip:''},{label:'Kootwijk',name:'Kootwijk',zip:''},{label:'Kootwijkerbroek',name:'Kootwijkerbroek',zip:''},{label:'Kornhorn',name:'Kornhorn',zip:''},{label:'Kornwerderzand',name:'Kornwerderzand',zip:''},{label:'Kortehemmen',name:'Kortehemmen',zip:''},{label:'Kortenhoef',name:'Kortenhoef',zip:''},{label:'Kortgene',name:'Kortgene',zip:''},{label:'Koudekerk aan den Rijn',name:'Koudekerk aan den Rijn',zip:''},{label:'Koudekerke',name:'Koudekerke',zip:''},{label:'Koudum',name:'Koudum',zip:''},{label:'Koufurderrige',name:'Koufurderrige',zip:''},{label:'Krabbendijke',name:'Krabbendijke',zip:''},{label:'Kraggenburg',name:'Kraggenburg',zip:''},{label:'Kreileroord',name:'Kreileroord',zip:''},{label:'Krewerd',name:'Krewerd',zip:''},{label:'De Krim',name:'De Krim',zip:''},{label:'Krimpen aan de Lek',name:'Krimpen aan de Lek',zip:''},{label:'Krimpen aan den IJssel',name:'Krimpen aan den IJssel',zip:''},{label:'Kring van Dorth',name:'Kring van Dorth',zip:''},{label:'Krommenie',name:'Krommenie',zip:''},{label:'Kronenberg',name:'Kronenberg',zip:''},{label:'Kropswolde',name:'Kropswolde',zip:''},{label:'Kruiningen',name:'Kruiningen',zip:''},{label:'Kruisland',name:'Kruisland',zip:''},{label:'Kûbaard',name:'Kûbaard',zip:''},{label:'Kudelstaart',name:'Kudelstaart',zip:''},{label:'Kuinre',name:'Kuinre',zip:''},{label:'Kuitaart',name:'Kuitaart',zip:''},{label:'Kwadendamme',name:'Kwadendamme',zip:''},{label:'Kwadijk',name:'Kwadijk',zip:''},{label:'De Kwakel',name:'De Kwakel',zip:''},{label:'Kwintsheul',name:'Kwintsheul',zip:''},{label:'Laag Zuthem',name:'Laag Zuthem',zip:''},{label:'Laag-Keppel',name:'Laag-Keppel',zip:''},{label:'Laag-Soeren',name:'Laag-Soeren',zip:''},{label:'Lage Mierde',name:'Lage Mierde',zip:''},{label:'Lage Vuursche',name:'Lage Vuursche',zip:''},{label:'Lage Zwaluwe',name:'Lage Zwaluwe',zip:''},{label:'Lageland (Midden-Groningen)',name:'Lageland (Midden-Groningen)',zip:''},{label:'Lageland (Groningen)',name:'Lageland (Groningen)',zip:''},{label:'Lambertschaag',name:'Lambertschaag',zip:''},{label:'Lamswaarde',name:'Lamswaarde',zip:''},{label:'Landerum',name:'Landerum',zip:''},{label:'Landgraaf',name:'Landgraaf',zip:''},{label:'Landhorst',name:'Landhorst',zip:''},{label:'Landsmeer',name:'Landsmeer',zip:''},{label:'Langbroek',name:'Langbroek',zip:''},{label:'Langedijke',name:'Langedijke',zip:''},{label:'Langelille',name:'Langelille',zip:''},{label:'Langelo',name:'Langelo',zip:''},{label:'Langenboom',name:'Langenboom',zip:''},{label:'Langerak',name:'Langerak',zip:''},{label:'Langeveen',name:'Langeveen',zip:''},{label:'Langeweg',name:'Langeweg',zip:''},{label:'Langezwaag',name:'Langezwaag',zip:''},{label:'Langweer',name:'Langweer',zip:''},{label:'Laren (Lochem)',name:'Laren (Lochem)',zip:''},{label:'Laren (Laren)',name:'Laren (Laren)',zip:''},{label:'Lathum',name:'Lathum',zip:''},{label:'Lattrop-Breklenkamp',name:'Lattrop-Breklenkamp',zip:''},{label:'Lauwersoog',name:'Lauwersoog',zip:''},{label:'Lauwerzijl',name:'Lauwerzijl',zip:''},{label:'Ledeacker',name:'Ledeacker',zip:''},{label:'Leek',name:'Leek',zip:''},{label:'Leende',name:'Leende',zip:''},{label:'Leens',name:'Leens',zip:''},{label:'Leerbroek',name:'Leerbroek',zip:''},{label:'Leerdam',name:'Leerdam',zip:''},{label:'Leermens',name:'Leermens',zip:''},{label:'Leersum',name:'Leersum',zip:''},{label:'Leeuwarden',name:'Leeuwarden',zip:''},{label:'Legemeer',name:'Legemeer',zip:''},{label:'Leiden',name:'Leiden',zip:''},{label:'Leiderdorp',name:'Leiderdorp',zip:''},{label:'Leidschendam',name:'Leidschendam',zip:''},{label:'Leimuiden',name:'Leimuiden',zip:''},{label:'Leimuiderbrug',name:'Leimuiderbrug',zip:''},{label:'Lekkerkerk',name:'Lekkerkerk',zip:''},{label:'Lekkum',name:'Lekkum',zip:''},{label:'Lellens',name:'Lellens',zip:''},{label:'Lelystad',name:'Lelystad',zip:''},{label:'Lemele',name:'Lemele',zip:''},{label:'Lemelerveld',name:'Lemelerveld',zip:''},{label:'Lemiers',name:'Lemiers',zip:''},{label:'Lemmer',name:'Lemmer',zip:''},{label:'Lengel',name:'Lengel',zip:''},{label:'Lent',name:'Lent',zip:''},{label:'Leons',name:'Leons',zip:''},{label:'Lepelstraat',name:'Lepelstraat',zip:''},{label:'Lettelbert',name:'Lettelbert',zip:''},{label:'Lettele',name:'Lettele',zip:''},{label:'Leunen',name:'Leunen',zip:''},{label:'Leur',name:'Leur',zip:''},{label:'Leusden',name:'Leusden',zip:''},{label:'Leuth',name:'Leuth',zip:''},{label:'Leutingewolde',name:'Leutingewolde',zip:''},{label:'Leuvenheim',name:'Leuvenheim',zip:''},{label:'Leveroy',name:'Leveroy',zip:''},{label:'Lewedorp',name:'Lewedorp',zip:''},{label:'Lexmond',name:'Lexmond',zip:''},{label:'Lichtaard',name:'Lichtaard',zip:''},{label:'Lichtenvoorde',name:'Lichtenvoorde',zip:''},{label:'Liempde',name:'Liempde',zip:''},{label:'Lienden',name:'Lienden',zip:''},{label:'De Lier',name:'De Lier',zip:''},{label:'Lierderholthuis',name:'Lierderholthuis',zip:''},{label:'Lieren',name:'Lieren',zip:''},{label:'Lierop',name:'Lierop',zip:''},{label:'Lies',name:'Lies',zip:''},{label:'Lieshout',name:'Lieshout',zip:''},{label:'Liessel',name:'Liessel',zip:''},{label:'Lievelde',name:'Lievelde',zip:''},{label:'Lieveren',name:'Lieveren',zip:''},{label:'Lijnden',name:'Lijnden',zip:''},{label:'Limbricht',name:'Limbricht',zip:''},{label:'Limmen',name:'Limmen',zip:''},{label:'Linde',name:'Linde',zip:''},{label:'Linden',name:'Linden',zip:''},{label:'Linne',name:'Linne',zip:''},{label:'Linschoten',name:'Linschoten',zip:''},{label:'Lioessens',name:'Lioessens',zip:''},{label:'Lippenhuizen',name:'Lippenhuizen',zip:''},{label:'Lisse',name:'Lisse',zip:''},{label:'Lisserbroek',name:'Lisserbroek',zip:''},{label:'Lith',name:'Lith',zip:''},{label:'Lithoijen',name:'Lithoijen',zip:''},{label:'Lobith',name:'Lobith',zip:''},{label:'Lochem',name:'Lochem',zip:''},{label:'Loenen',name:'Loenen',zip:''},{label:'Loenen aan de Vecht',name:'Loenen aan de Vecht',zip:''},{label:'Loenersloot',name:'Loenersloot',zip:''},{label:'Loënga',name:'Loënga',zip:''},{label:'Loerbeek',name:'Loerbeek',zip:''},{label:'Lollum',name:'Lollum',zip:''},{label:'Lomm',name:'Lomm',zip:''},{label:'Longerhouw',name:'Longerhouw',zip:''},{label:'Loo Gld (Lingewaard)',name:'Loo Gld (Lingewaard)',zip:''},{label:'Loo Gld (Duiven)',name:'Loo Gld (Duiven)',zip:''},{label:'\'t Loo Oldebroek',name:'\'t Loo Oldebroek',zip:''},{label:'Loon',name:'Loon',zip:''},{label:'Loon op Zand',name:'Loon op Zand',zip:''},{label:'Loosbroek',name:'Loosbroek',zip:''},{label:'Loosdrecht',name:'Loosdrecht',zip:''},{label:'Loozen',name:'Loozen',zip:''},{label:'Lopik',name:'Lopik',zip:''},{label:'Lopikerkapel',name:'Lopikerkapel',zip:''},{label:'Loppersum',name:'Loppersum',zip:''},{label:'Losdorp',name:'Losdorp',zip:''},{label:'Losser',name:'Losser',zip:''},{label:'Lottum',name:'Lottum',zip:''},{label:'Lucaswolde',name:'Lucaswolde',zip:''},{label:'Luddeweer',name:'Luddeweer',zip:''},{label:'Luinjeberd',name:'Luinjeberd',zip:''},{label:'Lunteren',name:'Lunteren',zip:''},{label:'Lutjebroek',name:'Lutjebroek',zip:''},{label:'Lutjegast',name:'Lutjegast',zip:''},{label:'Lutjewinkel',name:'Lutjewinkel',zip:''},{label:'de Lutte',name:'de Lutte',zip:''},{label:'Luttelgeest',name:'Luttelgeest',zip:''},{label:'Lutten',name:'Lutten',zip:''},{label:'Luttenberg',name:'Luttenberg',zip:''},{label:'Luxwoude',name:'Luxwoude',zip:''},{label:'Luyksgestel',name:'Luyksgestel',zip:''},{label:'Lytsewierrum',name:'Lytsewierrum',zip:''},{label:'Maarheeze',name:'Maarheeze',zip:''},{label:'Maarn',name:'Maarn',zip:''},{label:'Maarsbergen',name:'Maarsbergen',zip:''},{label:'Maarssen',name:'Maarssen',zip:''},{label:'Maartensdijk',name:'Maartensdijk',zip:''},{label:'Maasbommel',name:'Maasbommel',zip:''},{label:'Maasbracht',name:'Maasbracht',zip:''},{label:'Maasbree',name:'Maasbree',zip:''},{label:'Maasdam',name:'Maasdam',zip:''},{label:'Maasdijk',name:'Maasdijk',zip:''},{label:'Maashees',name:'Maashees',zip:''},{label:'Maasland',name:'Maasland',zip:''},{label:'Maassluis',name:'Maassluis',zip:''},{label:'Maastricht',name:'Maastricht',zip:''},{label:'Maastricht-Airport',name:'Maastricht-Airport',zip:''},{label:'Maasvlakte Rotterdam',name:'Maasvlakte Rotterdam',zip:''},{label:'Macharen',name:'Macharen',zip:''},{label:'Made',name:'Made',zip:''},{label:'Makkinga',name:'Makkinga',zip:''},{label:'Makkum',name:'Makkum',zip:''},{label:'Malden',name:'Malden',zip:''},{label:'Mander',name:'Mander',zip:''},{label:'Manderveen',name:'Manderveen',zip:''},{label:'Mantgum',name:'Mantgum',zip:''},{label:'Mantinge',name:'Mantinge',zip:''},{label:'Maren-Kessel',name:'Maren-Kessel',zip:''},{label:'Margraten',name:'Margraten',zip:''},{label:'Maria Hoop',name:'Maria Hoop',zip:''},{label:'Mariahout',name:'Mariahout',zip:''},{label:'Mariaparochie',name:'Mariaparochie',zip:''},{label:'Mariënberg',name:'Mariënberg',zip:''},{label:'Mariënheem',name:'Mariënheem',zip:''},{label:'Mariënvelde',name:'Mariënvelde',zip:''},{label:'Marijenkampen',name:'Marijenkampen',zip:''},{label:'Markelo',name:'Markelo',zip:''},{label:'Marken',name:'Marken',zip:''},{label:'Markenbinnen',name:'Markenbinnen',zip:''},{label:'Marknesse',name:'Marknesse',zip:''},{label:'Marle',name:'Marle',zip:''},{label:'Marrum',name:'Marrum',zip:''},{label:'Marsum',name:'Marsum',zip:''},{label:'Marum',name:'Marum',zip:''},{label:'Marwijksoord',name:'Marwijksoord',zip:''},{label:'Mastenbroek (Zwartewaterland)',name:'Mastenbroek (Zwartewaterland)',zip:''},{label:'Mastenbroek (Kampen)',name:'Mastenbroek (Kampen)',zip:''},{label:'Matsloot',name:'Matsloot',zip:''},{label:'Maurik',name:'Maurik',zip:''},{label:'Mechelen',name:'Mechelen',zip:''},{label:'Medemblik',name:'Medemblik',zip:''},{label:'Meeden',name:'Meeden',zip:''},{label:'Meedhuizen',name:'Meedhuizen',zip:''},{label:'Meerkerk',name:'Meerkerk',zip:''},{label:'Meerlo',name:'Meerlo',zip:''},{label:'De Meern',name:'De Meern',zip:''},{label:'Meerssen',name:'Meerssen',zip:''},{label:'Meerstad',name:'Meerstad',zip:''},{label:'Meeuwen',name:'Meeuwen',zip:''},{label:'Megchelen',name:'Megchelen',zip:''},{label:'Megen',name:'Megen',zip:''},{label:'Meijel',name:'Meijel',zip:''},{label:'Melderslo',name:'Melderslo',zip:''},{label:'Melick',name:'Melick',zip:''},{label:'Meliskerke',name:'Meliskerke',zip:''},{label:'Melissant',name:'Melissant',zip:''},{label:'Menaam',name:'Menaam',zip:''},{label:'Mensingeweer',name:'Mensingeweer',zip:''},{label:'Meppel',name:'Meppel',zip:''},{label:'Meppen',name:'Meppen',zip:''},{label:'Merkelbeek',name:'Merkelbeek',zip:''},{label:'Merselo',name:'Merselo',zip:''},{label:'Meteren',name:'Meteren',zip:''},{label:'Meterik',name:'Meterik',zip:''},{label:'Metslawier',name:'Metslawier',zip:''},{label:'Mheer',name:'Mheer',zip:''},{label:'Middelaar',name:'Middelaar',zip:''},{label:'Middelburg',name:'Middelburg',zip:''},{label:'Middelharnis',name:'Middelharnis',zip:''},{label:'Middelie',name:'Middelie',zip:''},{label:'Middelstum',name:'Middelstum',zip:''},{label:'Middenbeemster',name:'Middenbeemster',zip:''},{label:'Middenmeer',name:'Middenmeer',zip:''},{label:'Midlaren',name:'Midlaren',zip:''},{label:'Midlum',name:'Midlum',zip:''},{label:'Midsland',name:'Midsland',zip:''},{label:'Midwolda',name:'Midwolda',zip:''},{label:'Midwolde',name:'Midwolde',zip:''},{label:'Midwoud',name:'Midwoud',zip:''},{label:'Miedum',name:'Miedum',zip:''},{label:'Mierlo',name:'Mierlo',zip:''},{label:'Mijdrecht',name:'Mijdrecht',zip:''},{label:'Mijnsheerenland',name:'Mijnsheerenland',zip:''},{label:'Mildam',name:'Mildam',zip:''},{label:'Milheeze',name:'Milheeze',zip:''},{label:'Mill',name:'Mill',zip:''},{label:'Millingen aan de Rijn',name:'Millingen aan de Rijn',zip:''},{label:'Milsbeek',name:'Milsbeek',zip:''},{label:'Minnertsga',name:'Minnertsga',zip:''},{label:'Mirns',name:'Mirns',zip:''},{label:'Moddergat',name:'Moddergat',zip:''},{label:'De Moer',name:'De Moer',zip:''},{label:'Moerdijk',name:'Moerdijk',zip:''},{label:'Moergestel',name:'Moergestel',zip:''},{label:'Moerkapelle',name:'Moerkapelle',zip:''},{label:'Moerstraten',name:'Moerstraten',zip:''},{label:'Molenaarsgraaf',name:'Molenaarsgraaf',zip:''},{label:'Molenhoek',name:'Molenhoek',zip:''},{label:'Molenschot',name:'Molenschot',zip:''},{label:'Molkwerum',name:'Molkwerum',zip:''},{label:'Monnickendam',name:'Monnickendam',zip:''},{label:'Monster',name:'Monster',zip:''},{label:'Montfoort',name:'Montfoort',zip:''},{label:'Montfort',name:'Montfort',zip:''},{label:'Mook',name:'Mook',zip:''},{label:'Mookhoek',name:'Mookhoek',zip:''},{label:'Moordrecht',name:'Moordrecht',zip:''},{label:'Moorveld',name:'Moorveld',zip:''},{label:'Morra',name:'Morra',zip:''},{label:'De Mortel',name:'De Mortel',zip:''},{label:'Muiden',name:'Muiden',zip:''},{label:'Muiderberg',name:'Muiderberg',zip:''},{label:'Mûnein',name:'Mûnein',zip:''},{label:'Munnekeburen',name:'Munnekeburen',zip:''},{label:'Munnekezijl',name:'Munnekezijl',zip:''},{label:'Munstergeleen',name:'Munstergeleen',zip:''},{label:'Muntendam',name:'Muntendam',zip:''},{label:'Mussel',name:'Mussel',zip:''},{label:'Musselkanaal',name:'Musselkanaal',zip:''},{label:'Naaldwijk',name:'Naaldwijk',zip:''},{label:'Naarden',name:'Naarden',zip:''},{label:'Nagele',name:'Nagele',zip:''},{label:'Nederasselt',name:'Nederasselt',zip:''},{label:'Nederhemert',name:'Nederhemert',zip:''},{label:'Nederhorst den Berg',name:'Nederhorst den Berg',zip:''},{label:'Nederland',name:'Nederland',zip:''},{label:'Nederweert',name:'Nederweert',zip:''},{label:'Nederweert-Eind',name:'Nederweert-Eind',zip:''},{label:'Neede',name:'Neede',zip:''},{label:'Neer',name:'Neer',zip:''},{label:'Neerijnen',name:'Neerijnen',zip:''},{label:'Neeritter',name:'Neeritter',zip:''},{label:'Neerkant',name:'Neerkant',zip:''},{label:'Neerlangel',name:'Neerlangel',zip:''},{label:'Neerloon',name:'Neerloon',zip:''},{label:'Nes (Heerenveen)',name:'Nes (Heerenveen)',zip:''},{label:'Nes (Ameland)',name:'Nes (Ameland)',zip:''},{label:'Nes (Dongeradeel)',name:'Nes (Dongeradeel)',zip:''},{label:'Netersel',name:'Netersel',zip:''},{label:'Netterden',name:'Netterden',zip:''},{label:'Niawier',name:'Niawier',zip:''},{label:'Nibbixwoud',name:'Nibbixwoud',zip:''},{label:'Niebert',name:'Niebert',zip:''},{label:'Niehove',name:'Niehove',zip:''},{label:'Niekerk (Grootegast)',name:'Niekerk (Grootegast)',zip:''},{label:'Niekerk (De Marne)',name:'Niekerk (De Marne)',zip:''},{label:'Nietap',name:'Nietap',zip:''},{label:'Nieuw Annerveen',name:'Nieuw Annerveen',zip:''},{label:'Nieuw Beerta',name:'Nieuw Beerta',zip:''},{label:'Nieuw- en Sint Joosland',name:'Nieuw- en Sint Joosland',zip:''},{label:'Nieuw Heeten',name:'Nieuw Heeten',zip:''},{label:'Nieuw Namen',name:'Nieuw Namen',zip:''},{label:'Nieuw Scheemda',name:'Nieuw Scheemda',zip:''},{label:'Nieuwaal',name:'Nieuwaal',zip:''},{label:'Nieuw-Amsterdam',name:'Nieuw-Amsterdam',zip:''},{label:'Nieuw-Balinge',name:'Nieuw-Balinge',zip:''},{label:'Nieuw-Beijerland',name:'Nieuw-Beijerland',zip:''},{label:'Nieuw-Buinen',name:'Nieuw-Buinen',zip:''},{label:'Nieuw-Dordrecht',name:'Nieuw-Dordrecht',zip:''},{label:'Nieuwdorp',name:'Nieuwdorp',zip:''},{label:'Nieuwe Niedorp',name:'Nieuwe Niedorp',zip:''},{label:'Nieuwe Pekela',name:'Nieuwe Pekela',zip:''},{label:'Nieuwe Wetering',name:'Nieuwe Wetering',zip:''},{label:'Nieuwebrug',name:'Nieuwebrug',zip:''},{label:'Nieuwediep',name:'Nieuwediep',zip:''},{label:'Nieuwegein',name:'Nieuwegein',zip:''},{label:'Nieuwehorne',name:'Nieuwehorne',zip:''},{label:'Nieuwendijk',name:'Nieuwendijk',zip:''},{label:'Nieuwer Ter Aa',name:'Nieuwer Ter Aa',zip:''},{label:'Nieuwerbrug aan den Rijn',name:'Nieuwerbrug aan den Rijn',zip:''},{label:'Nieuwerkerk',name:'Nieuwerkerk',zip:''},{label:'Nieuwerkerk aan den IJssel',name:'Nieuwerkerk aan den IJssel',zip:''},{label:'Nieuweroord (Hoogeveen)',name:'Nieuweroord (Hoogeveen)',zip:''},{label:'Nieuweroord (Midden-Drenthe)',name:'Nieuweroord (Midden-Drenthe)',zip:''},{label:'Nieuwersluis',name:'Nieuwersluis',zip:''},{label:'Nieuweschoot',name:'Nieuweschoot',zip:''},{label:'Nieuwe-Tonge',name:'Nieuwe-Tonge',zip:''},{label:'Nieuwkoop',name:'Nieuwkoop',zip:''},{label:'Nieuwkuijk',name:'Nieuwkuijk',zip:''},{label:'Nieuwland',name:'Nieuwland',zip:''},{label:'Nieuwlande',name:'Nieuwlande',zip:''},{label:'Nieuwlande Coevorden',name:'Nieuwlande Coevorden',zip:''},{label:'Nieuw-Lekkerland',name:'Nieuw-Lekkerland',zip:''},{label:'Nieuwleusen',name:'Nieuwleusen',zip:''},{label:'Nieuwolda',name:'Nieuwolda',zip:''},{label:'Nieuwpoort',name:'Nieuwpoort',zip:''},{label:'Nieuw-Roden',name:'Nieuw-Roden',zip:''},{label:'Nieuw-Schoonebeek',name:'Nieuw-Schoonebeek',zip:''},{label:'Nieuwstadt',name:'Nieuwstadt',zip:''},{label:'Nieuwveen',name:'Nieuwveen',zip:''},{label:'Nieuw-Vennep',name:'Nieuw-Vennep',zip:''},{label:'Nieuwvliet',name:'Nieuwvliet',zip:''},{label:'Nieuw-Vossemeer',name:'Nieuw-Vossemeer',zip:''},{label:'Nieuw-Weerdinge',name:'Nieuw-Weerdinge',zip:''},{label:'Niezijl',name:'Niezijl',zip:''},{label:'Niftrik',name:'Niftrik',zip:''},{label:'Nigtevecht',name:'Nigtevecht',zip:''},{label:'Nij Altoenae',name:'Nij Altoenae',zip:''},{label:'Nij Beets',name:'Nij Beets',zip:''},{label:'Nijbroek',name:'Nijbroek',zip:''},{label:'Nijeberkoop',name:'Nijeberkoop',zip:''},{label:'Nijega',name:'Nijega',zip:''},{label:'Nijehaske',name:'Nijehaske',zip:''},{label:'Nijeholtpade',name:'Nijeholtpade',zip:''},{label:'Nijeholtwolde',name:'Nijeholtwolde',zip:''},{label:'Nijelamer',name:'Nijelamer',zip:''},{label:'Nijemirdum',name:'Nijemirdum',zip:''},{label:'Nijensleek',name:'Nijensleek',zip:''},{label:'Nijetrijne',name:'Nijetrijne',zip:''},{label:'Nijeveen',name:'Nijeveen',zip:''},{label:'Nijhuizum',name:'Nijhuizum',zip:''},{label:'Nijkerk',name:'Nijkerk',zip:''},{label:'Nijkerkerveen',name:'Nijkerkerveen',zip:''},{label:'Nijland',name:'Nijland',zip:''},{label:'Nijlande',name:'Nijlande',zip:''},{label:'Nijmegen',name:'Nijmegen',zip:''},{label:'Nijverdal',name:'Nijverdal',zip:''},{label:'Nispen',name:'Nispen',zip:''},{label:'Nisse',name:'Nisse',zip:''},{label:'Nistelrode',name:'Nistelrode',zip:''},{label:'Noardburgum',name:'Noardburgum',zip:''},{label:'Nooitgedacht',name:'Nooitgedacht',zip:''},{label:'Noorbeek',name:'Noorbeek',zip:''},{label:'Noordbeemster',name:'Noordbeemster',zip:''},{label:'Noordbroek',name:'Noordbroek',zip:''},{label:'Noordeinde (Alkmaar)',name:'Noordeinde (Alkmaar)',zip:''},{label:'Noordeinde (Oldebroek)',name:'Noordeinde (Oldebroek)',zip:''},{label:'Noordeloos',name:'Noordeloos',zip:''},{label:'Noorden',name:'Noorden',zip:''},{label:'Noordgouwe',name:'Noordgouwe',zip:''},{label:'Noordhoek',name:'Noordhoek',zip:''},{label:'Noordhorn',name:'Noordhorn',zip:''},{label:'Noordlaren',name:'Noordlaren',zip:''},{label:'Noord-Scharwoude',name:'Noord-Scharwoude',zip:''},{label:'Noordscheschut',name:'Noordscheschut',zip:''},{label:'Noord-Sleen',name:'Noord-Sleen',zip:''},{label:'Noordwelle',name:'Noordwelle',zip:''},{label:'Noordwijk (Marum)',name:'Noordwijk (Marum)',zip:''},{label:'Noordwijk (Noordwijk)',name:'Noordwijk (Noordwijk)',zip:''},{label:'Noordwijkerhout',name:'Noordwijkerhout',zip:''},{label:'Noordwolde (Bedum)',name:'Noordwolde (Bedum)',zip:''},{label:'Noordwolde (Weststellingwerf)',name:'Noordwolde (Weststellingwerf)',zip:''},{label:'Nootdorp',name:'Nootdorp',zip:''},{label:'Norg',name:'Norg',zip:''},{label:'Notter',name:'Notter',zip:''},{label:'Nuenen',name:'Nuenen',zip:''},{label:'Nuis',name:'Nuis',zip:''},{label:'Nuland',name:'Nuland',zip:''},{label:'Numansdorp',name:'Numansdorp',zip:''},{label:'Nunhem',name:'Nunhem',zip:''},{label:'Nunspeet',name:'Nunspeet',zip:''},{label:'Nuth',name:'Nuth',zip:''},{label:'Nutter',name:'Nutter',zip:''},{label:'Obbicht',name:'Obbicht',zip:''},{label:'Obdam',name:'Obdam',zip:''},{label:'Ochten',name:'Ochten',zip:''},{label:'Odijk',name:'Odijk',zip:''},{label:'Odiliapeel',name:'Odiliapeel',zip:''},{label:'Odoorn',name:'Odoorn',zip:''},{label:'Odoornerveen',name:'Odoornerveen',zip:''},{label:'Oeffelt',name:'Oeffelt',zip:''},{label:'Oegstgeest',name:'Oegstgeest',zip:''},{label:'Oene',name:'Oene',zip:''},{label:'Oentsjerk',name:'Oentsjerk',zip:''},{label:'Den Oever',name:'Den Oever',zip:''},{label:'Offingawier',name:'Offingawier',zip:''},{label:'Ohé en Laak',name:'Ohé en Laak',zip:''},{label:'Oijen',name:'Oijen',zip:''},{label:'Oirlo',name:'Oirlo',zip:''},{label:'Oirsbeek',name:'Oirsbeek',zip:''},{label:'Oirschot',name:'Oirschot',zip:''},{label:'Oisterwijk',name:'Oisterwijk',zip:''},{label:'Okkenbroek',name:'Okkenbroek',zip:''},{label:'Olburgen',name:'Olburgen',zip:''},{label:'Oldeberkoop',name:'Oldeberkoop',zip:''},{label:'Oldebroek',name:'Oldebroek',zip:''},{label:'Oldeholtpade',name:'Oldeholtpade',zip:''},{label:'Oldeholtwolde',name:'Oldeholtwolde',zip:''},{label:'Oldehove',name:'Oldehove',zip:''},{label:'Oldekerk',name:'Oldekerk',zip:''},{label:'Oldelamer',name:'Oldelamer',zip:''},{label:'Oldemarkt',name:'Oldemarkt',zip:''},{label:'Oldenzaal',name:'Oldenzaal',zip:''},{label:'Oldenzijl',name:'Oldenzijl',zip:''},{label:'Oldeouwer',name:'Oldeouwer',zip:''},{label:'Oldetrijne',name:'Oldetrijne',zip:''},{label:'Olst',name:'Olst',zip:''},{label:'Olterterp',name:'Olterterp',zip:''},{label:'Ommel',name:'Ommel',zip:''},{label:'Ommen',name:'Ommen',zip:''},{label:'Ommeren',name:'Ommeren',zip:''},{label:'Onderdendam',name:'Onderdendam',zip:''},{label:'Onna',name:'Onna',zip:''},{label:'Onnen',name:'Onnen',zip:''},{label:'Onstwedde',name:'Onstwedde',zip:''},{label:'Ooij',name:'Ooij',zip:''},{label:'Ooltgensplaat',name:'Ooltgensplaat',zip:''},{label:'Oost West en Middelbeers',name:'Oost West en Middelbeers',zip:''},{label:'Oostburg',name:'Oostburg',zip:''},{label:'Oostdijk',name:'Oostdijk',zip:''},{label:'Oosteind',name:'Oosteind',zip:''},{label:'Oosterbeek',name:'Oosterbeek',zip:''},{label:'Oosterbierum',name:'Oosterbierum',zip:''},{label:'Oosterblokker',name:'Oosterblokker',zip:''},{label:'Oosterend (Terschelling)',name:'Oosterend (Terschelling)',zip:''},{label:'Oosterend (Texel)',name:'Oosterend (Texel)',zip:''},{label:'Oosterhesselen',name:'Oosterhesselen',zip:''},{label:'Oosterhout (Overbetuwe)',name:'Oosterhout (Overbetuwe)',zip:''},{label:'Oosterhout (Oosterhout)',name:'Oosterhout (Oosterhout)',zip:''},{label:'Oosterland',name:'Oosterland',zip:''},{label:'Oosterleek',name:'Oosterleek',zip:''},{label:'Oosternieland',name:'Oosternieland',zip:''},{label:'Oosternijkerk',name:'Oosternijkerk',zip:''},{label:'Oosterstreek',name:'Oosterstreek',zip:''},{label:'Oosterwijk',name:'Oosterwijk',zip:''},{label:'Oosterwijtwerd',name:'Oosterwijtwerd',zip:''},{label:'Oosterwolde (Ooststellingwerf)',name:'Oosterwolde (Ooststellingwerf)',zip:''},{label:'Oosterwolde (Oldebroek)',name:'Oosterwolde (Oldebroek)',zip:''},{label:'Oosterzee',name:'Oosterzee',zip:''},{label:'Oost-Graftdijk',name:'Oost-Graftdijk',zip:''},{label:'Oosthem',name:'Oosthem',zip:''},{label:'Oosthuizen',name:'Oosthuizen',zip:''},{label:'Oostkapelle',name:'Oostkapelle',zip:''},{label:'Oostknollendam',name:'Oostknollendam',zip:''},{label:'Oostrum (Venray)',name:'Oostrum (Venray)',zip:''},{label:'Oostrum (Dongeradeel)',name:'Oostrum (Dongeradeel)',zip:''},{label:'Oost-Souburg',name:'Oost-Souburg',zip:''},{label:'Oostvoorne',name:'Oostvoorne',zip:''},{label:'Oostwold (Oldambt)',name:'Oostwold (Oldambt)',zip:''},{label:'Oostwold (Leek)',name:'Oostwold (Leek)',zip:''},{label:'Oostwoud',name:'Oostwoud',zip:''},{label:'Oostzaan',name:'Oostzaan',zip:''},{label:'Ootmarsum',name:'Ootmarsum',zip:''},{label:'Opeinde',name:'Opeinde',zip:''},{label:'Opende',name:'Opende',zip:''},{label:'Ophemert',name:'Ophemert',zip:''},{label:'Opheusden',name:'Opheusden',zip:''},{label:'Opijnen',name:'Opijnen',zip:''},{label:'Oploo',name:'Oploo',zip:''},{label:'Opmeer',name:'Opmeer',zip:''},{label:'Oppenhuizen',name:'Oppenhuizen',zip:''},{label:'Opperdoes',name:'Opperdoes',zip:''},{label:'Oranje',name:'Oranje',zip:''},{label:'Oranjewoud',name:'Oranjewoud',zip:''},{label:'Orvelte',name:'Orvelte',zip:''},{label:'Ospel',name:'Ospel',zip:''},{label:'Oss',name:'Oss',zip:''},{label:'Ossendrecht',name:'Ossendrecht',zip:''},{label:'Ossenisse',name:'Ossenisse',zip:''},{label:'Ossenwaard',name:'Ossenwaard',zip:''},{label:'Ossenzijl',name:'Ossenzijl',zip:''},{label:'Oterleek',name:'Oterleek',zip:''},{label:'Otterlo',name:'Otterlo',zip:''},{label:'Ottersum',name:'Ottersum',zip:''},{label:'Ottoland',name:'Ottoland',zip:''},{label:'Oud Ade',name:'Oud Ade',zip:''},{label:'Oud Annerveen',name:'Oud Annerveen',zip:''},{label:'Oud Gastel',name:'Oud Gastel',zip:''},{label:'Oud Ootmarsum',name:'Oud Ootmarsum',zip:''},{label:'Oud Zuilen',name:'Oud Zuilen',zip:''},{label:'Oud-Alblas',name:'Oud-Alblas',zip:''},{label:'Oud-Beijerland',name:'Oud-Beijerland',zip:''},{label:'Ouddorp',name:'Ouddorp',zip:''},{label:'Oude Meer',name:'Oude Meer',zip:''},{label:'Oude Niedorp',name:'Oude Niedorp',zip:''},{label:'Oude Pekela',name:'Oude Pekela',zip:''},{label:'Oude Wetering',name:'Oude Wetering',zip:''},{label:'Oude Willem',name:'Oude Willem',zip:''},{label:'Oudebildtzijl',name:'Oudebildtzijl',zip:''},{label:'Oudega (Smallingerland)',name:'Oudega (Smallingerland)',zip:''},{label:'Oudega (De Fryske Marren)',name:'Oudega (De Fryske Marren)',zip:''},{label:'Oudega (Súdwest-Fryslân)',name:'Oudega (Súdwest-Fryslân)',zip:''},{label:'Oudehaske',name:'Oudehaske',zip:''},{label:'Oudehorne',name:'Oudehorne',zip:''},{label:'Oudelande',name:'Oudelande',zip:''},{label:'Oudemirdum',name:'Oudemirdum',zip:''},{label:'Oudemolen (Moerdijk)',name:'Oudemolen (Moerdijk)',zip:''},{label:'Oudemolen (Tynaarlo)',name:'Oudemolen (Tynaarlo)',zip:''},{label:'Oudenbosch',name:'Oudenbosch',zip:''},{label:'Oudendijk',name:'Oudendijk',zip:''},{label:'Oudenhoorn',name:'Oudenhoorn',zip:''},{label:'Ouderkerk aan de Amstel',name:'Ouderkerk aan de Amstel',zip:''},{label:'Ouderkerk aan den IJssel',name:'Ouderkerk aan den IJssel',zip:''},{label:'Oudeschans',name:'Oudeschans',zip:''},{label:'Oudeschild',name:'Oudeschild',zip:''},{label:'Oudeschip',name:'Oudeschip',zip:''},{label:'Oudeschoot',name:'Oudeschoot',zip:''},{label:'Oudesluis',name:'Oudesluis',zip:''},{label:'Oude-Tonge',name:'Oude-Tonge',zip:''},{label:'Oudewater',name:'Oudewater',zip:''},{label:'Oudezijl',name:'Oudezijl',zip:''},{label:'Oudheusden',name:'Oudheusden',zip:''},{label:'Oudkarspel (Schagen)',name:'Oudkarspel (Schagen)',zip:''},{label:'Oudkarspel (Langedijk)',name:'Oudkarspel (Langedijk)',zip:''},{label:'Oudorp',name:'Oudorp',zip:''},{label:'Oud-Vossemeer',name:'Oud-Vossemeer',zip:''},{label:'Oudwoude',name:'Oudwoude',zip:''},{label:'Ouwerkerk',name:'Ouwerkerk',zip:''},{label:'Ouwsterhaule',name:'Ouwsterhaule',zip:''},{label:'Ouwster-Nijega',name:'Ouwster-Nijega',zip:''},{label:'Overasselt',name:'Overasselt',zip:''},{label:'Overberg',name:'Overberg',zip:''},{label:'Overdinkel',name:'Overdinkel',zip:''},{label:'Overlangel',name:'Overlangel',zip:''},{label:'Overloon',name:'Overloon',zip:''},{label:'Overschild',name:'Overschild',zip:''},{label:'Overslag',name:'Overslag',zip:''},{label:'Overveen',name:'Overveen',zip:''},{label:'Ovezande',name:'Ovezande',zip:''},{label:'Paasloo',name:'Paasloo',zip:''},{label:'Paesens',name:'Paesens',zip:''},{label:'Pannerden',name:'Pannerden',zip:''},{label:'Panningen',name:'Panningen',zip:''},{label:'Papekop',name:'Papekop',zip:''},{label:'Papendrecht',name:'Papendrecht',zip:''},{label:'Papenhoven',name:'Papenhoven',zip:''},{label:'Papenvoort',name:'Papenvoort',zip:''},{label:'Parrega',name:'Parrega',zip:''},{label:'Paterswolde',name:'Paterswolde',zip:''},{label:'Peest',name:'Peest',zip:''},{label:'Peins',name:'Peins',zip:''},{label:'Peize',name:'Peize',zip:''},{label:'Peperga',name:'Peperga',zip:''},{label:'Pernis Rotterdam',name:'Pernis Rotterdam',zip:''},{label:'Persingen',name:'Persingen',zip:''},{label:'Pesse (Westerveld)',name:'Pesse (Westerveld)',zip:''},{label:'Pesse (Hoogeveen)',name:'Pesse (Hoogeveen)',zip:''},{label:'Petten',name:'Petten',zip:''},{label:'Philippine',name:'Philippine',zip:''},{label:'Piaam',name:'Piaam',zip:''},{label:'Piershil',name:'Piershil',zip:''},{label:'Pieterburen',name:'Pieterburen',zip:''},{label:'Pietersbierum',name:'Pietersbierum',zip:''},{label:'Pieterzijl',name:'Pieterzijl',zip:''},{label:'Pijnacker',name:'Pijnacker',zip:''},{label:'Pingjum',name:'Pingjum',zip:''},{label:'Plasmolen',name:'Plasmolen',zip:''},{label:'Poederoijen',name:'Poederoijen',zip:''},{label:'Poeldijk',name:'Poeldijk',zip:''},{label:'De Pol',name:'De Pol',zip:''},{label:'Polsbroek',name:'Polsbroek',zip:''},{label:'Poortugaal',name:'Poortugaal',zip:''},{label:'Poortvliet',name:'Poortvliet',zip:''},{label:'Poppenwier',name:'Poppenwier',zip:''},{label:'Ten Post',name:'Ten Post',zip:''},{label:'Posterholt',name:'Posterholt',zip:''},{label:'Prinsenbeek',name:'Prinsenbeek',zip:''},{label:'Puiflijk',name:'Puiflijk',zip:''},{label:'De Punt',name:'De Punt',zip:''},{label:'Punthorst',name:'Punthorst',zip:''},{label:'Purmer (Edam-Volendam)',name:'Purmer (Edam-Volendam)',zip:''},{label:'Purmer (Waterland)',name:'Purmer (Waterland)',zip:''},{label:'Purmerend',name:'Purmerend',zip:''},{label:'Purmerland',name:'Purmerland',zip:''},{label:'Puth',name:'Puth',zip:''},{label:'Putte',name:'Putte',zip:''},{label:'Putten',name:'Putten',zip:''},{label:'Puttershoek',name:'Puttershoek',zip:''},{label:'Raalte',name:'Raalte',zip:''},{label:'Raamsdonk',name:'Raamsdonk',zip:''},{label:'Raamsdonksveer',name:'Raamsdonksveer',zip:''},{label:'Raard',name:'Raard',zip:''},{label:'Radewijk',name:'Radewijk',zip:''},{label:'Radio Kootwijk',name:'Radio Kootwijk',zip:''},{label:'Raerd',name:'Raerd',zip:''},{label:'Randwijk',name:'Randwijk',zip:''},{label:'Ransdaal',name:'Ransdaal',zip:''},{label:'Rasquert',name:'Rasquert',zip:''},{label:'Ravenstein',name:'Ravenstein',zip:''},{label:'Ravenswaaij',name:'Ravenswaaij',zip:''},{label:'Ravenswoud',name:'Ravenswoud',zip:''},{label:'Readtsjerk',name:'Readtsjerk',zip:''},{label:'Reahûs',name:'Reahûs',zip:''},{label:'Reduzum',name:'Reduzum',zip:''},{label:'Reek',name:'Reek',zip:''},{label:'Reeuwijk',name:'Reeuwijk',zip:''},{label:'Reijmerstok',name:'Reijmerstok',zip:''},{label:'Reitsum',name:'Reitsum',zip:''},{label:'Rekken',name:'Rekken',zip:''},{label:'Renesse',name:'Renesse',zip:''},{label:'Renkum',name:'Renkum',zip:''},{label:'Renswoude',name:'Renswoude',zip:''},{label:'Ressen',name:'Ressen',zip:''},{label:'Retranchement',name:'Retranchement',zip:''},{label:'Reusel',name:'Reusel',zip:''},{label:'Reutum',name:'Reutum',zip:''},{label:'Reuver',name:'Reuver',zip:''},{label:'Rha',name:'Rha',zip:''},{label:'Rheden',name:'Rheden',zip:''},{label:'Rhee',name:'Rhee',zip:''},{label:'Rheeze',name:'Rheeze',zip:''},{label:'Rheezerveen',name:'Rheezerveen',zip:''},{label:'Rhenen',name:'Rhenen',zip:''},{label:'Rhenoy',name:'Rhenoy',zip:''},{label:'Rhoon',name:'Rhoon',zip:''},{label:'Ridderkerk',name:'Ridderkerk',zip:''},{label:'Ried',name:'Ried',zip:''},{label:'Riel',name:'Riel',zip:''},{label:'Rien',name:'Rien',zip:''},{label:'Riethoven',name:'Riethoven',zip:''},{label:'Rietmolen',name:'Rietmolen',zip:''},{label:'Rijen',name:'Rijen',zip:''},{label:'Rijkevoort',name:'Rijkevoort',zip:''},{label:'Rijkevoort-De Walsert',name:'Rijkevoort-De Walsert',zip:''},{label:'Rijnsaterwoude',name:'Rijnsaterwoude',zip:''},{label:'Rijnsburg',name:'Rijnsburg',zip:''},{label:'De Rijp',name:'De Rijp',zip:''},{label:'Rijpwetering',name:'Rijpwetering',zip:''},{label:'Rijs',name:'Rijs',zip:''},{label:'Rijsbergen',name:'Rijsbergen',zip:''},{label:'Rijsenhout',name:'Rijsenhout',zip:''},{label:'Rijssen',name:'Rijssen',zip:''},{label:'Rijswijk (Rijswijk)',name:'Rijswijk (Rijswijk)',zip:''},{label:'Rijswijk (Buren)',name:'Rijswijk (Buren)',zip:''},{label:'Rijswijk (Woudrichem)',name:'Rijswijk (Woudrichem)',zip:''},{label:'Rilland',name:'Rilland',zip:''},{label:'Rinsumageast',name:'Rinsumageast',zip:''},{label:'De Rips',name:'De Rips',zip:''},{label:'Ritthem',name:'Ritthem',zip:''},{label:'Rockanje',name:'Rockanje',zip:''},{label:'Roden',name:'Roden',zip:''},{label:'Roderesch',name:'Roderesch',zip:''},{label:'Roderwolde',name:'Roderwolde',zip:''},{label:'Roelofarendsveen',name:'Roelofarendsveen',zip:''},{label:'Roermond',name:'Roermond',zip:''},{label:'Rogat',name:'Rogat',zip:''},{label:'Roggel',name:'Roggel',zip:''},{label:'Rohel',name:'Rohel',zip:''},{label:'Rolde',name:'Rolde',zip:''},{label:'Roodeschool',name:'Roodeschool',zip:''},{label:'Roosendaal',name:'Roosendaal',zip:''},{label:'Roosteren',name:'Roosteren',zip:''},{label:'Rosmalen',name:'Rosmalen',zip:''},{label:'Rossum (Dinkelland)',name:'Rossum (Dinkelland)',zip:''},{label:'Rossum (Maasdriel)',name:'Rossum (Maasdriel)',zip:''},{label:'Roswinkel',name:'Roswinkel',zip:''},{label:'Rotstergaast',name:'Rotstergaast',zip:''},{label:'Rotsterhaule',name:'Rotsterhaule',zip:''},{label:'Rotterdam',name:'Rotterdam',zip:''},{label:'Rotterdam-Albrandswaard',name:'Rotterdam-Albrandswaard',zip:''},{label:'Rottevalle',name:'Rottevalle',zip:''},{label:'Rottum (Eemsmond)',name:'Rottum (Eemsmond)',zip:''},{label:'Rottum (De Fryske Marren)',name:'Rottum (De Fryske Marren)',zip:''},{label:'Rouveen',name:'Rouveen',zip:''},{label:'Rozenburg (Rotterdam)',name:'Rozenburg (Rotterdam)',zip:''},{label:'Rozenburg (Haarlemmermeer)',name:'Rozenburg (Haarlemmermeer)',zip:''},{label:'Rozendaal',name:'Rozendaal',zip:''},{label:'Rucphen',name:'Rucphen',zip:''},{label:'Ruigahuizen',name:'Ruigahuizen',zip:''},{label:'Ruinen (Westerveld)',name:'Ruinen (Westerveld)',zip:''},{label:'Ruinen (De Wolden)',name:'Ruinen (De Wolden)',zip:''},{label:'Ruinerwold',name:'Ruinerwold',zip:''},{label:'Rumpt',name:'Rumpt',zip:''},{label:'Rutten',name:'Rutten',zip:''},{label:'Ruurlo',name:'Ruurlo',zip:''},{label:'Ryptsjerk',name:'Ryptsjerk',zip:''},{label:'Saaksum',name:'Saaksum',zip:''},{label:'Saasveld',name:'Saasveld',zip:''},{label:'Saaxumhuizen',name:'Saaxumhuizen',zip:''},{label:'Sambeek',name:'Sambeek',zip:''},{label:'Sandfirden',name:'Sandfirden',zip:''},{label:'Santpoort-Noord',name:'Santpoort-Noord',zip:''},{label:'Santpoort-Zuid',name:'Santpoort-Zuid',zip:''},{label:'Sappemeer',name:'Sappemeer',zip:''},{label:'Sas van Gent',name:'Sas van Gent',zip:''},{label:'Sassenheim',name:'Sassenheim',zip:''},{label:'Sauwerd',name:'Sauwerd',zip:''},{label:'Schagen',name:'Schagen',zip:''},{label:'Schagerbrug',name:'Schagerbrug',zip:''},{label:'Schaijk',name:'Schaijk',zip:''},{label:'Schalkhaar',name:'Schalkhaar',zip:''},{label:'Schalkwijk',name:'Schalkwijk',zip:''},{label:'Schalsum',name:'Schalsum',zip:''},{label:'Schardam',name:'Schardam',zip:''},{label:'Scharendijke',name:'Scharendijke',zip:''},{label:'Scharmer',name:'Scharmer',zip:''},{label:'Scharnegoutum',name:'Scharnegoutum',zip:''},{label:'Scharsterbrug',name:'Scharsterbrug',zip:''},{label:'Scharwoude',name:'Scharwoude',zip:''},{label:'Scheemda',name:'Scheemda',zip:''},{label:'Scheerwolde',name:'Scheerwolde',zip:''},{label:'Schellinkhout',name:'Schellinkhout',zip:''},{label:'Schelluinen',name:'Schelluinen',zip:''},{label:'Schermerhorn',name:'Schermerhorn',zip:''},{label:'Scherpenisse',name:'Scherpenisse',zip:''},{label:'Scherpenzeel (Weststellingwerf)',name:'Scherpenzeel (Weststellingwerf)',zip:''},{label:'Scherpenzeel (Scherpenzeel)',name:'Scherpenzeel (Scherpenzeel)',zip:''},{label:'Schettens',name:'Schettens',zip:''},{label:'Scheulder',name:'Scheulder',zip:''},{label:'Schiedam',name:'Schiedam',zip:''},{label:'Schiermonnikoog',name:'Schiermonnikoog',zip:''},{label:'Schijf',name:'Schijf',zip:''},{label:'Schijndel',name:'Schijndel',zip:''},{label:'Schildwolde',name:'Schildwolde',zip:''},{label:'Schimmert',name:'Schimmert',zip:''},{label:'Schin op Geul',name:'Schin op Geul',zip:''},{label:'Schinnen',name:'Schinnen',zip:''},{label:'Schinveld',name:'Schinveld',zip:''},{label:'Schipborg',name:'Schipborg',zip:''},{label:'Schiphol',name:'Schiphol',zip:''},{label:'Schiphol-Rijk',name:'Schiphol-Rijk',zip:''},{label:'De Schiphorst',name:'De Schiphorst',zip:''},{label:'Schipluiden',name:'Schipluiden',zip:''},{label:'Schokland',name:'Schokland',zip:''},{label:'Schoondijke',name:'Schoondijke',zip:''},{label:'Schoonebeek',name:'Schoonebeek',zip:''},{label:'Schoonhoven',name:'Schoonhoven',zip:''},{label:'Schoonloo',name:'Schoonloo',zip:''},{label:'Schoonoord',name:'Schoonoord',zip:''},{label:'Schoonrewoerd',name:'Schoonrewoerd',zip:''},{label:'Schoorl',name:'Schoorl',zip:''},{label:'Schore',name:'Schore',zip:''},{label:'Schouwerzijl',name:'Schouwerzijl',zip:''},{label:'Schraard',name:'Schraard',zip:''},{label:'Schuinesloot',name:'Schuinesloot',zip:''},{label:'Sebaldeburen',name:'Sebaldeburen',zip:''},{label:'Sellingen',name:'Sellingen',zip:''},{label:'Serooskerke (Schouwen-Duiveland)',name:'Serooskerke (Schouwen-Duiveland)',zip:''},{label:'Serooskerke (Veere)',name:'Serooskerke (Veere)',zip:''},{label:'Sevenum',name:'Sevenum',zip:''},{label:'Sexbierum',name:'Sexbierum',zip:''},{label:'Sibculo (Twenterand)',name:'Sibculo (Twenterand)',zip:''},{label:'Sibculo (Hardenberg)',name:'Sibculo (Hardenberg)',zip:''},{label:'Sibrandabuorren',name:'Sibrandabuorren',zip:''},{label:'Sibrandahûs',name:'Sibrandahûs',zip:''},{label:'Siddeburen',name:'Siddeburen',zip:''},{label:'Siebengewald',name:'Siebengewald',zip:''},{label:'Siegerswoude',name:'Siegerswoude',zip:''},{label:'Sijbekarspel',name:'Sijbekarspel',zip:''},{label:'Silvolde',name:'Silvolde',zip:''},{label:'Simonshaven',name:'Simonshaven',zip:''},{label:'Simpelveld',name:'Simpelveld',zip:''},{label:'Sinderen',name:'Sinderen',zip:''},{label:'Sint Agatha',name:'Sint Agatha',zip:''},{label:'Sint Annen',name:'Sint Annen',zip:''},{label:'Sint Anthonis',name:'Sint Anthonis',zip:''},{label:'Sint Geertruid',name:'Sint Geertruid',zip:''},{label:'Sint Hubert',name:'Sint Hubert',zip:''},{label:'Sint Jansklooster',name:'Sint Jansklooster',zip:''},{label:'Sint Jansteen',name:'Sint Jansteen',zip:''},{label:'Sint Joost',name:'Sint Joost',zip:''},{label:'Sint Kruis',name:'Sint Kruis',zip:''},{label:'Sint Maarten',name:'Sint Maarten',zip:''},{label:'Sint Maartensbrug',name:'Sint Maartensbrug',zip:''},{label:'Sint Maartensvlotbrug',name:'Sint Maartensvlotbrug',zip:''},{label:'Sint Nicolaasga',name:'Sint Nicolaasga',zip:''},{label:'Sint Odiliënberg',name:'Sint Odiliënberg',zip:''},{label:'Sint Pancras',name:'Sint Pancras',zip:''},{label:'Sint Philipsland',name:'Sint Philipsland',zip:''},{label:'Sint Willebrord',name:'Sint Willebrord',zip:''},{label:'Sint-Annaland',name:'Sint-Annaland',zip:''},{label:'Sint-Annaparochie',name:'Sint-Annaparochie',zip:''},{label:'Sint-Jacobiparochie',name:'Sint-Jacobiparochie',zip:''},{label:'Sintjohannesga',name:'Sintjohannesga',zip:''},{label:'Sint-Maartensdijk',name:'Sint-Maartensdijk',zip:''},{label:'Sint-Michielsgestel',name:'Sint-Michielsgestel',zip:''},{label:'Sint-Oedenrode',name:'Sint-Oedenrode',zip:''},{label:'Sirjansland',name:'Sirjansland',zip:''},{label:'Sittard',name:'Sittard',zip:''},{label:'Skingen',name:'Skingen',zip:''},{label:'Slagharen',name:'Slagharen',zip:''},{label:'Slappeterp',name:'Slappeterp',zip:''},{label:'Sleen',name:'Sleen',zip:''},{label:'Sleeuwijk',name:'Sleeuwijk',zip:''},{label:'Slenaken',name:'Slenaken',zip:''},{label:'Sliedrecht',name:'Sliedrecht',zip:''},{label:'Slijkenburg',name:'Slijkenburg',zip:''},{label:'Slijk-Ewijk',name:'Slijk-Ewijk',zip:''},{label:'Slochteren',name:'Slochteren',zip:''},{label:'Slootdorp',name:'Slootdorp',zip:''},{label:'Sloten',name:'Sloten',zip:''},{label:'Sluis',name:'Sluis',zip:''},{label:'Sluiskil',name:'Sluiskil',zip:''},{label:'Smakt',name:'Smakt',zip:''},{label:'Smalle Ee',name:'Smalle Ee',zip:''},{label:'Smallebrugge',name:'Smallebrugge',zip:''},{label:'Smilde',name:'Smilde',zip:''},{label:'Snakkerburen',name:'Snakkerburen',zip:''},{label:'Sneek',name:'Sneek',zip:''},{label:'Snelrewaard',name:'Snelrewaard',zip:''},{label:'Snikzwaag',name:'Snikzwaag',zip:''},{label:'Soerendonk',name:'Soerendonk',zip:''},{label:'Soest',name:'Soest',zip:''},{label:'Soesterberg',name:'Soesterberg',zip:''},{label:'Someren',name:'Someren',zip:''},{label:'Sommelsdijk',name:'Sommelsdijk',zip:''},{label:'Son en Breugel',name:'Son en Breugel',zip:''},{label:'Sondel',name:'Sondel',zip:''},{label:'Sonnega',name:'Sonnega',zip:''},{label:'Spaarndam (Haarlemmerliede en Spaarnwoude)',name:'Spaarndam (Haarlemmerliede en Spaarnwoude)',zip:''},{label:'Spaarndam (Haarlem)',name:'Spaarndam (Haarlem)',zip:''},{label:'Spanbroek',name:'Spanbroek',zip:''},{label:'Spanga',name:'Spanga',zip:''},{label:'Spankeren',name:'Spankeren',zip:''},{label:'Spannum',name:'Spannum',zip:''},{label:'Spaubeek',name:'Spaubeek',zip:''},{label:'Spier (Midden-Drenthe)',name:'Spier (Midden-Drenthe)',zip:''},{label:'Spier (Westerveld)',name:'Spier (Westerveld)',zip:''},{label:'Spierdijk',name:'Spierdijk',zip:''},{label:'Spijk (Zevenaar)',name:'Spijk (Zevenaar)',zip:''},{label:'Spijk (Delfzijl)',name:'Spijk (Delfzijl)',zip:''},{label:'Spijk (Lingewaal)',name:'Spijk (Lingewaal)',zip:''},{label:'Spijkenisse',name:'Spijkenisse',zip:''},{label:'Spijkerboor (Aa en Hunze)',name:'Spijkerboor (Aa en Hunze)',zip:''},{label:'Spijkerboor (Wormerland)',name:'Spijkerboor (Wormerland)',zip:''},{label:'Sprang-Capelle',name:'Sprang-Capelle',zip:''},{label:'Sprundel',name:'Sprundel',zip:''},{label:'Spui',name:'Spui',zip:''},{label:'Stad aan \'t Haringvliet',name:'Stad aan \'t Haringvliet',zip:''},{label:'Stadskanaal',name:'Stadskanaal',zip:''},{label:'Stampersgat',name:'Stampersgat',zip:''},{label:'Standdaarbuiten',name:'Standdaarbuiten',zip:''},{label:'Staphorst',name:'Staphorst',zip:''},{label:'Starnmeer',name:'Starnmeer',zip:''},{label:'Startenhuizen (Loppersum)',name:'Startenhuizen (Loppersum)',zip:''},{label:'Startenhuizen (Eemsmond)',name:'Startenhuizen (Eemsmond)',zip:''},{label:'Stavenisse',name:'Stavenisse',zip:''},{label:'Stavoren',name:'Stavoren',zip:''},{label:'Stedum',name:'Stedum',zip:''},{label:'De Steeg',name:'De Steeg',zip:''},{label:'Steenbergen (Steenbergen)',name:'Steenbergen (Steenbergen)',zip:''},{label:'Steenbergen (Noordenveld)',name:'Steenbergen (Noordenveld)',zip:''},{label:'Steendam',name:'Steendam',zip:''},{label:'Steenderen',name:'Steenderen',zip:''},{label:'Steenenkamer',name:'Steenenkamer',zip:''},{label:'Steensel',name:'Steensel',zip:''},{label:'Steenwijk',name:'Steenwijk',zip:''},{label:'Steenwijkerwold',name:'Steenwijkerwold',zip:''},{label:'Stegeren',name:'Stegeren',zip:''},{label:'Steggerda',name:'Steggerda',zip:''},{label:'Stein',name:'Stein',zip:''},{label:'Stellendam',name:'Stellendam',zip:''},{label:'Sterksel',name:'Sterksel',zip:''},{label:'Stevensbeek',name:'Stevensbeek',zip:''},{label:'Stevensweert',name:'Stevensweert',zip:''},{label:'Steyl',name:'Steyl',zip:''},{label:'Stieltjeskanaal',name:'Stieltjeskanaal',zip:''},{label:'Stiens',name:'Stiens',zip:''},{label:'Stitswerd',name:'Stitswerd',zip:''},{label:'Stokkum',name:'Stokkum',zip:''},{label:'Stolwijk',name:'Stolwijk',zip:''},{label:'Stompetoren',name:'Stompetoren',zip:''},{label:'Stoutenburg',name:'Stoutenburg',zip:''},{label:'Stoutenburg Noord',name:'Stoutenburg Noord',zip:''},{label:'Stramproy',name:'Stramproy',zip:''},{label:'Streefkerk',name:'Streefkerk',zip:''},{label:'Striep',name:'Striep',zip:''},{label:'Strijbeek',name:'Strijbeek',zip:''},{label:'Strijen',name:'Strijen',zip:''},{label:'Strijensas',name:'Strijensas',zip:''},{label:'Stroe',name:'Stroe',zip:''},{label:'Stroobos',name:'Stroobos',zip:''},{label:'Stuifzand (Midden-Drenthe)',name:'Stuifzand (Midden-Drenthe)',zip:''},{label:'Stuifzand (Hoogeveen)',name:'Stuifzand (Hoogeveen)',zip:''},{label:'Sumar',name:'Sumar',zip:''},{label:'Surhuisterveen',name:'Surhuisterveen',zip:''},{label:'Surhuizum',name:'Surhuizum',zip:''},{label:'Susteren',name:'Susteren',zip:''},{label:'Suwâld',name:'Suwâld',zip:''},{label:'Swalmen',name:'Swalmen',zip:''},{label:'Sweikhuizen',name:'Sweikhuizen',zip:''},{label:'Swichum',name:'Swichum',zip:''},{label:'Swifterbant',name:'Swifterbant',zip:''},{label:'Swolgen',name:'Swolgen',zip:''},{label:'Taarlo',name:'Taarlo',zip:''},{label:'Teeffelen',name:'Teeffelen',zip:''},{label:'Teerns',name:'Teerns',zip:''},{label:'Tegelen',name:'Tegelen',zip:''},{label:'Terband',name:'Terband',zip:''},{label:'Terborg',name:'Terborg',zip:''},{label:'Terheijden',name:'Terheijden',zip:''},{label:'Terherne',name:'Terherne',zip:''},{label:'Terhole',name:'Terhole',zip:''},{label:'Terkaple',name:'Terkaple',zip:''},{label:'Termunten',name:'Termunten',zip:''},{label:'Termunterzijl',name:'Termunterzijl',zip:''},{label:'Ternaard',name:'Ternaard',zip:''},{label:'Terneuzen',name:'Terneuzen',zip:''},{label:'Teroele',name:'Teroele',zip:''},{label:'Terschuur',name:'Terschuur',zip:''},{label:'Tersoal',name:'Tersoal',zip:''},{label:'Terwispel',name:'Terwispel',zip:''},{label:'Terwolde',name:'Terwolde',zip:''},{label:'Teteringen',name:'Teteringen',zip:''},{label:'Teuge',name:'Teuge',zip:''},{label:'Thesinge',name:'Thesinge',zip:''},{label:'Tholen',name:'Tholen',zip:''},{label:'Thorn',name:'Thorn',zip:''},{label:'Tiel',name:'Tiel',zip:''},{label:'Tiendeveen (Hoogeveen)',name:'Tiendeveen (Hoogeveen)',zip:''},{label:'Tiendeveen (Midden-Drenthe)',name:'Tiendeveen (Midden-Drenthe)',zip:''},{label:'Tienhoven (Stichtse Vecht)',name:'Tienhoven (Stichtse Vecht)',zip:''},{label:'Tienhoven (Zederik)',name:'Tienhoven (Zederik)',zip:''},{label:'Tienray',name:'Tienray',zip:''},{label:'Tijnje',name:'Tijnje',zip:''},{label:'De Tike',name:'De Tike',zip:''},{label:'Tilburg',name:'Tilburg',zip:''},{label:'Tilligte',name:'Tilligte',zip:''},{label:'Tinallinge',name:'Tinallinge',zip:''},{label:'Tinte',name:'Tinte',zip:''},{label:'Tirns',name:'Tirns',zip:''},{label:'Tjalhuizum',name:'Tjalhuizum',zip:''},{label:'Tjalleberd',name:'Tjalleberd',zip:''},{label:'Tjerkgaast',name:'Tjerkgaast',zip:''},{label:'Tjerkwerd',name:'Tjerkwerd',zip:''},{label:'Tjuchem',name:'Tjuchem',zip:''},{label:'Tolbert',name:'Tolbert',zip:''},{label:'Toldijk',name:'Toldijk',zip:''},{label:'Tolkamer',name:'Tolkamer',zip:''},{label:'Tollebeek',name:'Tollebeek',zip:''},{label:'Tonden',name:'Tonden',zip:''},{label:'Toornwerd',name:'Toornwerd',zip:''},{label:'Tricht',name:'Tricht',zip:''},{label:'Triemen',name:'Triemen',zip:''},{label:'Tripscompagnie',name:'Tripscompagnie',zip:''},{label:'Tubbergen',name:'Tubbergen',zip:''},{label:'Tuil',name:'Tuil',zip:''},{label:'Tuitjenhorn',name:'Tuitjenhorn',zip:''},{label:'Tuk',name:'Tuk',zip:''},{label:'Tull en \'t Waal',name:'Tull en \'t Waal',zip:''},{label:'Twello',name:'Twello',zip:''},{label:'Twijzel',name:'Twijzel',zip:''},{label:'Twijzelerheide',name:'Twijzelerheide',zip:''},{label:'Twisk',name:'Twisk',zip:''},{label:'Tynaarlo',name:'Tynaarlo',zip:''},{label:'Tytsjerk',name:'Tytsjerk',zip:''},{label:'Tzum',name:'Tzum',zip:''},{label:'Tzummarum',name:'Tzummarum',zip:''},{label:'Ubbena',name:'Ubbena',zip:''},{label:'Ubbergen',name:'Ubbergen',zip:''},{label:'Uddel',name:'Uddel',zip:''},{label:'Uden',name:'Uden',zip:''},{label:'Udenhout',name:'Udenhout',zip:''},{label:'Uffelte',name:'Uffelte',zip:''},{label:'Ugchelen',name:'Ugchelen',zip:''},{label:'Uitdam',name:'Uitdam',zip:''},{label:'Uitgeest',name:'Uitgeest',zip:''},{label:'Uithoorn',name:'Uithoorn',zip:''},{label:'Uithuizen',name:'Uithuizen',zip:''},{label:'Uithuizermeeden',name:'Uithuizermeeden',zip:''},{label:'Uitwellingerga',name:'Uitwellingerga',zip:''},{label:'Uitwijk',name:'Uitwijk',zip:''},{label:'Ulestraten',name:'Ulestraten',zip:''},{label:'Ulft',name:'Ulft',zip:''},{label:'Ulicoten',name:'Ulicoten',zip:''},{label:'Ulrum',name:'Ulrum',zip:''},{label:'Ulvenhout (Breda)',name:'Ulvenhout (Breda)',zip:''},{label:'Ulvenhout (Alphen-Chaam)',name:'Ulvenhout (Alphen-Chaam)',zip:''},{label:'Ureterp',name:'Ureterp',zip:''},{label:'Urk',name:'Urk',zip:''},{label:'Urmond',name:'Urmond',zip:''},{label:'Ursem (Koggenland)',name:'Ursem (Koggenland)',zip:''},{label:'Ursem (Alkmaar)',name:'Ursem (Alkmaar)',zip:''},{label:'Usquert',name:'Usquert',zip:''},{label:'Utrecht',name:'Utrecht',zip:''},{label:'Vaals',name:'Vaals',zip:''},{label:'Vaassen',name:'Vaassen',zip:''},{label:'Valburg',name:'Valburg',zip:''},{label:'Valkenburg (Valkenburg aan de Geul)',name:'Valkenburg (Valkenburg aan de Geul)',zip:''},{label:'Valkenburg (Katwijk)',name:'Valkenburg (Katwijk)',zip:''},{label:'Valkenswaard',name:'Valkenswaard',zip:''},{label:'Valthe',name:'Valthe',zip:''},{label:'Valthermond',name:'Valthermond',zip:''},{label:'2e Valthermond',name:'2e Valthermond',zip:''},{label:'Varik',name:'Varik',zip:''},{label:'Varsselder',name:'Varsselder',zip:''},{label:'Varsseveld',name:'Varsseveld',zip:''},{label:'Vasse',name:'Vasse',zip:''},{label:'Veelerveen',name:'Veelerveen',zip:''},{label:'Veen',name:'Veen',zip:''},{label:'Veendam',name:'Veendam',zip:''},{label:'Veenendaal',name:'Veenendaal',zip:''},{label:'De Veenhoop',name:'De Veenhoop',zip:''},{label:'Veenhuizen',name:'Veenhuizen',zip:''},{label:'Veeningen',name:'Veeningen',zip:''},{label:'Veenklooster',name:'Veenklooster',zip:''},{label:'Veenoord',name:'Veenoord',zip:''},{label:'Veere',name:'Veere',zip:''},{label:'Veessen',name:'Veessen',zip:''},{label:'Vegelinsoord',name:'Vegelinsoord',zip:''},{label:'Veghel',name:'Veghel',zip:''},{label:'\'t Veld',name:'\'t Veld',zip:''},{label:'Velddriel',name:'Velddriel',zip:''},{label:'Den Velde',name:'Den Velde',zip:''},{label:'Velden',name:'Velden',zip:''},{label:'Veldhoven',name:'Veldhoven',zip:''},{label:'Velp (Rheden)',name:'Velp (Rheden)',zip:''},{label:'Velp (Grave)',name:'Velp (Grave)',zip:''},{label:'Velsen-Noord',name:'Velsen-Noord',zip:''},{label:'Velsen-Zuid',name:'Velsen-Zuid',zip:''},{label:'Velserbroek',name:'Velserbroek',zip:''},{label:'Venebrugge',name:'Venebrugge',zip:''},{label:'Venhorst',name:'Venhorst',zip:''},{label:'Venhuizen',name:'Venhuizen',zip:''},{label:'Venlo',name:'Venlo',zip:''},{label:'Venray',name:'Venray',zip:''},{label:'Ven-Zelderheide',name:'Ven-Zelderheide',zip:''},{label:'Vessem',name:'Vessem',zip:''},{label:'Vethuizen',name:'Vethuizen',zip:''},{label:'Veulen',name:'Veulen',zip:''},{label:'Vianen (Vianen)',name:'Vianen (Vianen)',zip:''},{label:'Vianen (Cuijk)',name:'Vianen (Cuijk)',zip:''},{label:'Vierakker',name:'Vierakker',zip:''},{label:'Vierhouten',name:'Vierhouten',zip:''},{label:'Vierhuizen',name:'Vierhuizen',zip:''},{label:'Vierlingsbeek',name:'Vierlingsbeek',zip:''},{label:'Vierpolders',name:'Vierpolders',zip:''},{label:'Vijfhuizen',name:'Vijfhuizen',zip:''},{label:'Vijlen',name:'Vijlen',zip:''},{label:'Vilsteren',name:'Vilsteren',zip:''},{label:'Vinkega',name:'Vinkega',zip:''},{label:'Vinkel (\'s-Hertogenbosch)',name:'Vinkel (\'s-Hertogenbosch)',zip:''},{label:'Vinkel (Bernheze)',name:'Vinkel (Bernheze)',zip:''},{label:'Vinkenbuurt',name:'Vinkenbuurt',zip:''},{label:'Vinkeveen',name:'Vinkeveen',zip:''},{label:'Visvliet',name:'Visvliet',zip:''},{label:'Vlaardingen',name:'Vlaardingen',zip:''},{label:'Vlagtwedde',name:'Vlagtwedde',zip:''},{label:'Vledder',name:'Vledder',zip:''},{label:'Vledderveen (Stadskanaal)',name:'Vledderveen (Stadskanaal)',zip:''},{label:'Vledderveen (Westerveld)',name:'Vledderveen (Westerveld)',zip:''},{label:'Vleuten',name:'Vleuten',zip:''},{label:'Vlieland',name:'Vlieland',zip:''},{label:'Vlierden',name:'Vlierden',zip:''},{label:'Vlijmen',name:'Vlijmen',zip:''},{label:'Vlissingen',name:'Vlissingen',zip:''},{label:'Vlist',name:'Vlist',zip:''},{label:'Vlodrop',name:'Vlodrop',zip:''},{label:'Voerendaal',name:'Voerendaal',zip:''},{label:'Vogelenzang',name:'Vogelenzang',zip:''},{label:'Vogelwaarde',name:'Vogelwaarde',zip:''},{label:'Volendam',name:'Volendam',zip:''},{label:'Volkel',name:'Volkel',zip:''},{label:'Vollenhove',name:'Vollenhove',zip:''},{label:'Vondelingenplaat Rotterdam',name:'Vondelingenplaat Rotterdam',zip:''},{label:'Voorburg',name:'Voorburg',zip:''},{label:'Voorhout',name:'Voorhout',zip:''},{label:'Voorschoten',name:'Voorschoten',zip:''},{label:'Voorst (Oude IJsselstreek)',name:'Voorst (Oude IJsselstreek)',zip:''},{label:'Voorst (Voorst)',name:'Voorst (Voorst)',zip:''},{label:'Voorthuizen',name:'Voorthuizen',zip:''},{label:'Vorchten',name:'Vorchten',zip:''},{label:'Vorden',name:'Vorden',zip:''},{label:'Vorstenbosch',name:'Vorstenbosch',zip:''},{label:'Vortum-Mullem',name:'Vortum-Mullem',zip:''},{label:'Vragender',name:'Vragender',zip:''},{label:'Vredenheim',name:'Vredenheim',zip:''},{label:'Vredepeel',name:'Vredepeel',zip:''},{label:'Vreeland',name:'Vreeland',zip:''},{label:'Vries',name:'Vries',zip:''},{label:'Vriescheloo',name:'Vriescheloo',zip:''},{label:'Vriezenveen',name:'Vriezenveen',zip:''},{label:'Vroomshoop',name:'Vroomshoop',zip:''},{label:'Vrouwenakker',name:'Vrouwenakker',zip:''},{label:'Vrouwenparochie',name:'Vrouwenparochie',zip:''},{label:'Vrouwenpolder',name:'Vrouwenpolder',zip:''},{label:'Vught',name:'Vught',zip:''},{label:'Vuren',name:'Vuren',zip:''},{label:'Waaksens',name:'Waaksens',zip:''},{label:'Waal',name:'Waal',zip:''},{label:'De Waal',name:'De Waal',zip:''},{label:'Waalre',name:'Waalre',zip:''},{label:'Waalwijk',name:'Waalwijk',zip:''},{label:'\'t Waar',name:'\'t Waar',zip:''},{label:'Waarde',name:'Waarde',zip:''},{label:'Waardenburg',name:'Waardenburg',zip:''},{label:'Waarder',name:'Waarder',zip:''},{label:'Waardhuizen',name:'Waardhuizen',zip:''},{label:'Waarland',name:'Waarland',zip:''},{label:'Waaxens',name:'Waaxens',zip:''},{label:'Wachtum',name:'Wachtum',zip:''},{label:'Waddinxveen',name:'Waddinxveen',zip:''},{label:'Wadenoijen',name:'Wadenoijen',zip:''},{label:'Wagenberg',name:'Wagenberg',zip:''},{label:'Wagenborgen',name:'Wagenborgen',zip:''},{label:'Wageningen',name:'Wageningen',zip:''},{label:'Walem',name:'Walem',zip:''},{label:'Walsoorden',name:'Walsoorden',zip:''},{label:'Wâlterswâld',name:'Wâlterswâld',zip:''},{label:'Wamel',name:'Wamel',zip:''},{label:'Wanneperveen',name:'Wanneperveen',zip:''},{label:'Wanroij',name:'Wanroij',zip:''},{label:'Wanssum',name:'Wanssum',zip:''},{label:'Wânswert',name:'Wânswert',zip:''},{label:'Wapenveld',name:'Wapenveld',zip:''},{label:'Wapse',name:'Wapse',zip:''},{label:'Wapserveen',name:'Wapserveen',zip:''},{label:'Warder',name:'Warder',zip:''},{label:'Warffum',name:'Warffum',zip:''},{label:'Warfhuizen',name:'Warfhuizen',zip:''},{label:'Warfstermolen',name:'Warfstermolen',zip:''},{label:'Warmenhuizen',name:'Warmenhuizen',zip:''},{label:'Warmond',name:'Warmond',zip:''},{label:'Warns',name:'Warns',zip:''},{label:'Warnsveld',name:'Warnsveld',zip:''},{label:'Warstiens',name:'Warstiens',zip:''},{label:'Warten',name:'Warten',zip:''},{label:'Waskemeer',name:'Waskemeer',zip:''},{label:'Waspik',name:'Waspik',zip:''},{label:'Wassenaar',name:'Wassenaar',zip:''},{label:'Wateren',name:'Wateren',zip:''},{label:'Watergang',name:'Watergang',zip:''},{label:'Waterhuizen',name:'Waterhuizen',zip:''},{label:'Wateringen',name:'Wateringen',zip:''},{label:'Waterlandkerkje',name:'Waterlandkerkje',zip:''},{label:'Waverveen',name:'Waverveen',zip:''},{label:'Wedde',name:'Wedde',zip:''},{label:'De Weere',name:'De Weere',zip:''},{label:'Weerselo',name:'Weerselo',zip:''},{label:'Weert',name:'Weert',zip:''},{label:'Weesp',name:'Weesp',zip:''},{label:'Wehe-den Hoorn',name:'Wehe-den Hoorn',zip:''},{label:'Wehl',name:'Wehl',zip:''},{label:'Weidum',name:'Weidum',zip:''},{label:'Weiteveen',name:'Weiteveen',zip:''},{label:'Wekerom',name:'Wekerom',zip:''},{label:'Well (Maasdriel)',name:'Well (Maasdriel)',zip:''},{label:'Well (Bergen - Limburg)',name:'Well (Bergen - Limburg)',zip:''},{label:'Wellerlooi',name:'Wellerlooi',zip:''},{label:'Welsum',name:'Welsum',zip:''},{label:'Wemeldinge',name:'Wemeldinge',zip:''},{label:'Wenum Wiesel',name:'Wenum Wiesel',zip:''},{label:'Wergea',name:'Wergea',zip:''},{label:'Werkendam',name:'Werkendam',zip:''},{label:'Werkhoven',name:'Werkhoven',zip:''},{label:'Wernhout',name:'Wernhout',zip:''},{label:'Wervershoof',name:'Wervershoof',zip:''},{label:'Wesepe',name:'Wesepe',zip:''},{label:'Wessem',name:'Wessem',zip:''},{label:'Westbeemster',name:'Westbeemster',zip:''},{label:'Westbroek',name:'Westbroek',zip:''},{label:'Westdorp',name:'Westdorp',zip:''},{label:'Westdorpe',name:'Westdorpe',zip:''},{label:'Westendorp',name:'Westendorp',zip:''},{label:'Westerbeek',name:'Westerbeek',zip:''},{label:'Westerbork',name:'Westerbork',zip:''},{label:'Westerbroek',name:'Westerbroek',zip:''},{label:'De Westereen',name:'De Westereen',zip:''},{label:'Westeremden',name:'Westeremden',zip:''},{label:'Westergeest',name:'Westergeest',zip:''},{label:'Westerhaar-Vriezenveensewijk',name:'Westerhaar-Vriezenveensewijk',zip:''},{label:'Westerhoven',name:'Westerhoven',zip:''},{label:'Westerland',name:'Westerland',zip:''},{label:'Westerlee',name:'Westerlee',zip:''},{label:'Westernieland',name:'Westernieland',zip:''},{label:'Westervelde',name:'Westervelde',zip:''},{label:'Westervoort',name:'Westervoort',zip:''},{label:'Westerwijtwerd',name:'Westerwijtwerd',zip:''},{label:'West-Graftdijk',name:'West-Graftdijk',zip:''},{label:'Westhem',name:'Westhem',zip:''},{label:'Westhoek',name:'Westhoek',zip:''},{label:'Westkapelle',name:'Westkapelle',zip:''},{label:'Westknollendam',name:'Westknollendam',zip:''},{label:'Westmaas',name:'Westmaas',zip:''},{label:'West-Terschelling',name:'West-Terschelling',zip:''},{label:'Westwoud',name:'Westwoud',zip:''},{label:'Westzaan',name:'Westzaan',zip:''},{label:'Wetering',name:'Wetering',zip:''},{label:'Weteringbrug',name:'Weteringbrug',zip:''},{label:'Wetsens',name:'Wetsens',zip:''},{label:'Wetsinge',name:'Wetsinge',zip:''},{label:'Weurt',name:'Weurt',zip:''},{label:'Wezep',name:'Wezep',zip:''},{label:'Wezup',name:'Wezup',zip:''},{label:'Wezuperbrug',name:'Wezuperbrug',zip:''},{label:'Wichmond',name:'Wichmond',zip:''},{label:'Wier',name:'Wier',zip:''},{label:'Wierden',name:'Wierden',zip:''},{label:'Wieringerwaard',name:'Wieringerwaard',zip:''},{label:'Wieringerwerf',name:'Wieringerwerf',zip:''},{label:'Wierum',name:'Wierum',zip:''},{label:'Wijchen',name:'Wijchen',zip:''},{label:'Wijckel',name:'Wijckel',zip:''},{label:'Wijdenes',name:'Wijdenes',zip:''},{label:'Wijdewormer',name:'Wijdewormer',zip:''},{label:'Wijhe',name:'Wijhe',zip:''},{label:'de Wijk',name:'de Wijk',zip:''},{label:'Wijk aan Zee',name:'Wijk aan Zee',zip:''},{label:'Wijk bij Duurstede',name:'Wijk bij Duurstede',zip:''},{label:'Wijk en Aalburg',name:'Wijk en Aalburg',zip:''},{label:'Wijlre',name:'Wijlre',zip:''},{label:'Wijnaldum',name:'Wijnaldum',zip:''},{label:'Wijnandsrade',name:'Wijnandsrade',zip:''},{label:'Wijnbergen',name:'Wijnbergen',zip:''},{label:'Wijngaarden',name:'Wijngaarden',zip:''},{label:'Wijnjewoude',name:'Wijnjewoude',zip:''},{label:'Wijster',name:'Wijster',zip:''},{label:'Wilbertoord',name:'Wilbertoord',zip:''},{label:'Wildervank',name:'Wildervank',zip:''},{label:'De Wilgen',name:'De Wilgen',zip:''},{label:'Wilhelminadorp',name:'Wilhelminadorp',zip:''},{label:'Wilhelminaoord',name:'Wilhelminaoord',zip:''},{label:'Willemsoord',name:'Willemsoord',zip:''},{label:'Willemstad',name:'Willemstad',zip:''},{label:'Wilnis',name:'Wilnis',zip:''},{label:'Wilp',name:'Wilp',zip:''},{label:'De Wilp',name:'De Wilp',zip:''},{label:'Wilsum',name:'Wilsum',zip:''},{label:'Winde',name:'Winde',zip:''},{label:'Windraak',name:'Windraak',zip:''},{label:'Winkel',name:'Winkel',zip:''},{label:'Winneweer',name:'Winneweer',zip:''},{label:'Winschoten',name:'Winschoten',zip:''},{label:'Winssen',name:'Winssen',zip:''},{label:'Winsum (Waadhoeke)',name:'Winsum (Waadhoeke)',zip:''},{label:'Winsum (Winsum)',name:'Winsum (Winsum)',zip:''},{label:'Wintelre',name:'Wintelre',zip:''},{label:'Winterswijk',name:'Winterswijk',zip:''},{label:'Winterswijk Brinkheurne',name:'Winterswijk Brinkheurne',zip:''},{label:'Winterswijk Corle',name:'Winterswijk Corle',zip:''},{label:'Winterswijk Henxel',name:'Winterswijk Henxel',zip:''},{label:'Winterswijk Huppel',name:'Winterswijk Huppel',zip:''},{label:'Winterswijk Kotten',name:'Winterswijk Kotten',zip:''},{label:'Winterswijk Meddo',name:'Winterswijk Meddo',zip:''},{label:'Winterswijk Miste',name:'Winterswijk Miste',zip:''},{label:'Winterswijk Ratum',name:'Winterswijk Ratum',zip:''},{label:'Winterswijk Woold',name:'Winterswijk Woold',zip:''},{label:'Wirdum (Loppersum)',name:'Wirdum (Loppersum)',zip:''},{label:'Wirdum (Leeuwarden)',name:'Wirdum (Leeuwarden)',zip:''},{label:'Wissenkerke',name:'Wissenkerke',zip:''},{label:'Witharen',name:'Witharen',zip:''},{label:'Witmarsum',name:'Witmarsum',zip:''},{label:'Witte Paarden',name:'Witte Paarden',zip:''},{label:'Wittelte',name:'Wittelte',zip:''},{label:'Wittem',name:'Wittem',zip:''},{label:'Witteveen',name:'Witteveen',zip:''},{label:'Wiuwert',name:'Wiuwert',zip:''},{label:'Wjelsryp',name:'Wjelsryp',zip:''},{label:'Woensdrecht',name:'Woensdrecht',zip:''},{label:'Woerden',name:'Woerden',zip:''},{label:'Woerdense Verlaat',name:'Woerdense Verlaat',zip:''},{label:'Wognum',name:'Wognum',zip:''},{label:'Woldendorp',name:'Woldendorp',zip:''},{label:'Wolfheze',name:'Wolfheze',zip:''},{label:'Wolphaartsdijk',name:'Wolphaartsdijk',zip:''},{label:'Wolsum',name:'Wolsum',zip:''},{label:'Woltersum',name:'Woltersum',zip:''},{label:'Wolvega',name:'Wolvega',zip:''},{label:'Wommels',name:'Wommels',zip:''},{label:'Wons',name:'Wons',zip:''},{label:'Workum',name:'Workum',zip:''},{label:'Wormer',name:'Wormer',zip:''},{label:'Wormerveer',name:'Wormerveer',zip:''},{label:'Woubrugge',name:'Woubrugge',zip:''},{label:'Woudbloem',name:'Woudbloem',zip:''},{label:'de Woude',name:'de Woude',zip:''},{label:'Woudenberg',name:'Woudenberg',zip:''},{label:'Woudrichem',name:'Woudrichem',zip:''},{label:'Woudsend',name:'Woudsend',zip:''},{label:'Wouw',name:'Wouw',zip:''},{label:'Wouwse Plantage',name:'Wouwse Plantage',zip:''},{label:'Wyns',name:'Wyns',zip:''},{label:'Wytgaard',name:'Wytgaard',zip:''},{label:'Yde',name:'Yde',zip:''},{label:'Yerseke',name:'Yerseke',zip:''},{label:'Ypecolsga',name:'Ypecolsga',zip:''},{label:'Ysbrechtum',name:'Ysbrechtum',zip:''},{label:'Ysselsteyn',name:'Ysselsteyn',zip:''},{label:'Zaamslag',name:'Zaamslag',zip:''},{label:'Zaandam',name:'Zaandam',zip:''},{label:'Zaandijk',name:'Zaandijk',zip:''},{label:'Zalk',name:'Zalk',zip:''},{label:'Zaltbommel',name:'Zaltbommel',zip:''},{label:'\'t Zand',name:'\'t Zand',zip:''},{label:'Zandberg',name:'Zandberg',zip:''},{label:'Zandeweer',name:'Zandeweer',zip:''},{label:'Zandhuizen',name:'Zandhuizen',zip:''},{label:'Zandpol',name:'Zandpol',zip:''},{label:'\'t Zandt',name:'\'t Zandt',zip:''},{label:'Zandvoort',name:'Zandvoort',zip:''},{label:'Zeddam',name:'Zeddam',zip:''},{label:'Zeegse',name:'Zeegse',zip:''},{label:'Zeeland',name:'Zeeland',zip:''},{label:'Zeerijp',name:'Zeerijp',zip:''},{label:'Zeewolde',name:'Zeewolde',zip:''},{label:'Zegge',name:'Zegge',zip:''},{label:'Zegveld',name:'Zegveld',zip:''},{label:'Zeijen',name:'Zeijen',zip:''},{label:'Zeijerveen',name:'Zeijerveen',zip:''},{label:'Zeijerveld',name:'Zeijerveld',zip:''},{label:'Zeist',name:'Zeist',zip:''},{label:'Zelhem',name:'Zelhem',zip:''},{label:'Zenderen',name:'Zenderen',zip:''},{label:'Zennewijnen (Tiel)',name:'Zennewijnen (Tiel)',zip:''},{label:'Zennewijnen (Neerijnen)',name:'Zennewijnen (Neerijnen)',zip:''},{label:'Zetten',name:'Zetten',zip:''},{label:'Zevenaar',name:'Zevenaar',zip:''},{label:'Zevenbergen',name:'Zevenbergen',zip:''},{label:'Zevenbergschen Hoek (Moerdijk)',name:'Zevenbergschen Hoek (Moerdijk)',zip:''},{label:'Zevenbergschen Hoek (Drimmelen)',name:'Zevenbergschen Hoek (Drimmelen)',zip:''},{label:'Zevenhoven',name:'Zevenhoven',zip:''},{label:'Zevenhuizen (Zuidplas)',name:'Zevenhuizen (Zuidplas)',zip:''},{label:'Zevenhuizen (Leek)',name:'Zevenhuizen (Leek)',zip:''},{label:'Zierikzee',name:'Zierikzee',zip:''},{label:'Zieuwent',name:'Zieuwent',zip:''},{label:'Zijderveld',name:'Zijderveld',zip:''},{label:'Zijdewind',name:'Zijdewind',zip:''},{label:'Zijldijk',name:'Zijldijk',zip:''},{label:'De Zilk',name:'De Zilk',zip:''},{label:'Zoelen',name:'Zoelen',zip:''},{label:'Zoelmond',name:'Zoelmond',zip:''},{label:'Zoetermeer',name:'Zoetermeer',zip:''},{label:'Zoeterwoude',name:'Zoeterwoude',zip:''},{label:'Zonnemaire',name:'Zonnemaire',zip:''},{label:'Zorgvlied',name:'Zorgvlied',zip:''},{label:'Zoutelande',name:'Zoutelande',zip:''},{label:'Zoutkamp',name:'Zoutkamp',zip:''},{label:'Zuid-Beijerland',name:'Zuid-Beijerland',zip:''},{label:'Zuidbroek',name:'Zuidbroek',zip:''},{label:'Zuiddorpe',name:'Zuiddorpe',zip:''},{label:'Zuidermeer',name:'Zuidermeer',zip:''},{label:'Zuiderwoude',name:'Zuiderwoude',zip:''},{label:'Zuidhorn',name:'Zuidhorn',zip:''},{label:'Zuidlaarderveen',name:'Zuidlaarderveen',zip:''},{label:'Zuidland',name:'Zuidland',zip:''},{label:'Zuidlaren',name:'Zuidlaren',zip:''},{label:'Zuidoostbeemster',name:'Zuidoostbeemster',zip:''},{label:'Zuid-Scharwoude',name:'Zuid-Scharwoude',zip:''},{label:'Zuidschermer',name:'Zuidschermer',zip:''},{label:'Zuidveen',name:'Zuidveen',zip:''},{label:'Zuidveld',name:'Zuidveld',zip:''},{label:'Zuidvelde',name:'Zuidvelde',zip:''},{label:'Zuidwolde (Bedum)',name:'Zuidwolde (Bedum)',zip:''},{label:'Zuidwolde (De Wolden)',name:'Zuidwolde (De Wolden)',zip:''},{label:'Zuidzande',name:'Zuidzande',zip:''},{label:'Zuilichem',name:'Zuilichem',zip:''},{label:'Zuna',name:'Zuna',zip:''},{label:'Zundert',name:'Zundert',zip:''},{label:'Zurich',name:'Zurich',zip:''},{label:'Zutphen',name:'Zutphen',zip:''},{label:'Zuurdijk',name:'Zuurdijk',zip:''},{label:'Zwaag',name:'Zwaag',zip:''},{label:'Zwaagdijk-Oost',name:'Zwaagdijk-Oost',zip:''},{label:'Zwaagdijk-West',name:'Zwaagdijk-West',zip:''},{label:'Zwaanshoek',name:'Zwaanshoek',zip:''},{label:'Zwagerbosch',name:'Zwagerbosch',zip:''},{label:'Zwammerdam',name:'Zwammerdam',zip:''},{label:'Zwanenburg',name:'Zwanenburg',zip:''},{label:'Zwartebroek',name:'Zwartebroek',zip:''},{label:'Zwartemeer',name:'Zwartemeer',zip:''},{label:'Zwartewaal',name:'Zwartewaal',zip:''},{label:'Zwartsluis',name:'Zwartsluis',zip:''},{label:'Zweeloo',name:'Zweeloo',zip:''},{label:'Zweins',name:'Zweins',zip:''},{label:'Zwiggelte',name:'Zwiggelte',zip:''},{label:'Zwijndrecht',name:'Zwijndrecht',zip:''},{label:'Zwinderen',name:'Zwinderen',zip:''},{label:'Zwolle',name:'Zwolle',zip:''}])

;
'use strict';

/**
 * @ngdoc module
 * @name udb.search
 * @description
 * The udb search module
 */
angular
  .module('udb.search', [
    'ngCookies',
    'ngSanitize',
    'ui.bootstrap',
    'peg',
    'udb.core',
    'udb.config',
    'udb.router',
    'udb.entry',
    'btford.socket-io',
    'pascalprecht.translate',
    'xeditable'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.event-form
 * @description
 * The udb form module
 */
angular
  .module('udb.event-form', [
    'ngSanitize',
    'ngMessages',
    'ui.bootstrap',
    'udb.config',
    'udb.entry',
    'udb.search',
    'udb.uitpas',
    'ngFileUpload',
    'duScroll',
    'focus-if',
    'angular.filter'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.offer-translate
 * @description
 * The udb form module
 */
angular
  .module('udb.offer-translate', [
    'ngSanitize',
    'ngMessages',
    'ui.bootstrap',
    'udb.config',
    'udb.entry',
    'udb.search',
    'udb.uitpas',
    'ngFileUpload',
    'duScroll',
    'focus-if',
    'angular.filter'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.dashboard
 * @description
 * The udb dashboard module
 */
angular
  .module('udb.dashboard', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.config'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.entry
 * @description
 * The udb entry module
 */
angular
  .module('udb.entry', [
    'ngCookies',
    'ngSanitize',
    'ui.bootstrap',
    'udb.config',
    'udb.search',
    'btford.socket-io',
    'pascalprecht.translate',
    'angularMoment'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.event-detail
 * @description
 * The udb event-detail module
 */
angular
  .module('udb.event-detail', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.config',
    'udb.entry'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.place-detail
 * @description
 * The udb place-detail module
 */
angular
  .module('udb.place-detail', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.config',
    'udb.entry'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.saved-searches
 * @description
 * The udb saved-searches module
 */
angular
  .module('udb.saved-searches', [
    'udb.core',
    'ui.bootstrap',
    'ui.codemirror'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.export
 * @description
 * The udb export module
 */
angular
  .module('udb.export', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.config',
    'udb.search'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.media
 * @description
 * The udb media module
 */
angular
  .module('udb.media', [
    'ngSanitize',
    'ui.bootstrap',
    'udb.core',
    'udb.config'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.management.roles
 * @description
 * # Roles Management Module
 */
angular
  .module('udb.management.roles', [
    'rx'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management.labels
 * @description
 * # Label Management Module
 */
angular
  .module('udb.management.labels', [
    'rx'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management.users
 * @description
 * # User Management Module
 */
angular
  .module('udb.management.users', [
    'rx'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management.moderation
 * @description
 * # Moderation Management Module
 */
angular
  .module('udb.management.moderation', [
    'rx'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management.organizers
 * @description
 * # Organizers Management Module
 */
angular
  .module('udb.management.organizers', [
    'rx',
    'udb.event-form',
    'ngTagsInput'
  ]);
'use strict';

/**
 * @ngdoc module
 * @name udb.management
 * @description
 * # Management Module
 */
angular
  .module('udb.management', [
    'udb.core',
    'udb.management.labels',
    'udb.management.roles',
    'udb.management.users',
    'udb.management.moderation',
    'udb.management.organizers'
  ]);

'use strict';
angular.module('peg', []).factory('LuceneQueryParser', function () {
 return (function() {
  /*
   * Generated by PEG.js 0.8.0.
   *
   * http://pegjs.majda.cz/
   */

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function SyntaxError(message, expected, found, offset, line, column) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.offset   = offset;
    this.line     = line;
    this.column   = column;

    this.name     = "SyntaxError";
  }

  peg$subclass(SyntaxError, Error);

  function parse(input) {
    var options = arguments.length > 1 ? arguments[1] : {},

        peg$FAILED = {},

        peg$startRuleFunctions = { start: peg$parsestart },
        peg$startRuleFunction  = peg$parsestart,

        peg$c0 = peg$FAILED,
        peg$c1 = [],
        peg$c2 = function(node) {
                return node[0];
            },
        peg$c3 = function() {
                return {};
            },
        peg$c4 = function(operator) {
                return {
                    'operator': operator
                    };
            },
        peg$c5 = function(operator, right) {
                return right;
            },
        peg$c6 = function(left, operator, right) {
                var node= {
                    'left':left
                    };

                var right =
                        right.length == 0
                        ? null
                        : right[0]['right'] == null
                            ? right[0]['left']
                            : right[0];

                if (right != null)
                {
                    node['operator'] = operator==''? '<implicit>' : operator[0];
                    node['right'] = right;
                }

                return node;
            },
        peg$c7 = function(field_exp) {
                return field_exp;
            },
        peg$c8 = "(",
        peg$c9 = { type: "literal", value: "(", description: "\"(\"" },
        peg$c10 = ")",
        peg$c11 = { type: "literal", value: ")", description: "\")\"" },
        peg$c12 = null,
        peg$c13 = function(fieldname, range) {
                range['field'] = fieldname || '<implicit>';

                return range;
            },
        peg$c14 = function(po, fieldname, node) {
                node['field']= fieldname;

                if(po) {
                    node.transformer = po;
                }

                return node;
            },
        peg$c15 = function(po, fieldname, term) {
                var fieldexp = {
                    'field': (fieldname || '<implicit>')
                    };

                if(po) {
                    fieldexp.transformer = po;
                }

                if(!fieldname && po) {
                    fieldexp.prefix = po;
                }

                for(var key in term)
                    fieldexp[key] = term[key];

                return fieldexp;
            },
        peg$c16 = /^[:<>]/,
        peg$c17 = { type: "class", value: "[:<>]", description: "[:<>]" },
        peg$c18 = function(fieldname) {
                return fieldname;
            },
        peg$c19 = /^[^: \t\r\n\f{}()+\-!"\^~[\]]/,
        peg$c20 = { type: "class", value: "[^: \\t\\r\\n\\f{}()+\\-!\"\\^~[\\]]", description: "[^: \\t\\r\\n\\f{}()+\\-!\"\\^~[\\]]" },
        peg$c21 = function(first_character, field) {
                return first_character + field.join('');
            },
        peg$c22 = /^[^: \t\r\n\f{}()+"\^~[\]]/,
        peg$c23 = { type: "class", value: "[^: \\t\\r\\n\\f{}()+\"\\^~[\\]]", description: "[^: \\t\\r\\n\\f{}()+\"\\^~[\\]]" },
        peg$c24 = function(op, term, proximity, boost) {
                var result = { 'term': term, 'quoted': true };

                if(proximity)
                {
                    result['proximity'] = proximity;
                }
                if(boost)
                {
                    result['boost'] = boost;
                }
                if(op)
                {
                    result['prefix'] = op;
                }

                return result;
            },
        peg$c25 = function(op, term, similarity, boost) {
                var result = { 'term': term };
                if(similarity)
                {
                    result['similarity'] = similarity;
                }
                if(boost)
                {
                    result['boost'] = boost;
                }
                if(op)
                {
                    result['prefix'] = op;
                }
                return result;
            },
        peg$c26 = /^[^,: \t\r\n\f{}()+\-"\^~[\]]/,
        peg$c27 = { type: "class", value: "[^,: \\t\\r\\n\\f{}()+\\-\"\\^~[\\]]", description: "[^,: \\t\\r\\n\\f{}()+\\-\"\\^~[\\]]" },
        peg$c28 = function(first_character, term) {
                return first_character + term.join('');
            },
        peg$c29 = /^[^, <>\t\r\n\f{}()"\^~[\]]/,
        peg$c30 = { type: "class", value: "[^, <>\\t\\r\\n\\f{}()\"\\^~[\\]]", description: "[^, <>\\t\\r\\n\\f{}()\"\\^~[\\]]" },
        peg$c31 = "\"",
        peg$c32 = { type: "literal", value: "\"", description: "\"\\\"\"" },
        peg$c33 = /^[^"]/,
        peg$c34 = { type: "class", value: "[^\"]", description: "[^\"]" },
        peg$c35 = function(term) {
                return term.join('');
            },
        peg$c36 = "~",
        peg$c37 = { type: "literal", value: "~", description: "\"~\"" },
        peg$c38 = function(proximity) {
                return proximity;
            },
        peg$c39 = "^",
        peg$c40 = { type: "literal", value: "^", description: "\"^\"" },
        peg$c41 = function(boost) {
                return boost;
            },
        peg$c42 = function(fuzziness) {
                return fuzziness || 0.5;
            },
        peg$c43 = "0.",
        peg$c44 = { type: "literal", value: "0.", description: "\"0.\"" },
        peg$c45 = /^[0-9]/,
        peg$c46 = { type: "class", value: "[0-9]", description: "[0-9]" },
        peg$c47 = function(val) {
                return parseFloat('0.' + val.join(''));
            },
        peg$c48 = function(val) {
                return parseInt(val.join(''));
            },
        peg$c49 = "[",
        peg$c50 = { type: "literal", value: "[", description: "\"[\"" },
        peg$c51 = "TO",
        peg$c52 = { type: "literal", value: "TO", description: "\"TO\"" },
        peg$c53 = "]",
        peg$c54 = { type: "literal", value: "]", description: "\"]\"" },
        peg$c55 = function(term_min, term_max) {
                return {
                    'lowerBound': term_min,
                    'upperBound': term_max,
                    'inclusive': true
                };
            },
        peg$c56 = "{",
        peg$c57 = { type: "literal", value: "{", description: "\"{\"" },
        peg$c58 = "}",
        peg$c59 = { type: "literal", value: "}", description: "\"}\"" },
        peg$c60 = function(term_min, term_max) {
                return {
                    'lowerBound': term_min,
                    'upperBound': term_max,
                    'inclusive': false
                };
            },
        peg$c61 = function(operator) {
                return operator;
            },
        peg$c62 = "OR",
        peg$c63 = { type: "literal", value: "OR", description: "\"OR\"" },
        peg$c64 = "AND",
        peg$c65 = { type: "literal", value: "AND", description: "\"AND\"" },
        peg$c66 = "NOT",
        peg$c67 = { type: "literal", value: "NOT", description: "\"NOT\"" },
        peg$c68 = "||",
        peg$c69 = { type: "literal", value: "||", description: "\"||\"" },
        peg$c70 = function() { return 'OR'; },
        peg$c71 = "&&",
        peg$c72 = { type: "literal", value: "&&", description: "\"&&\"" },
        peg$c73 = function() { return 'AND'; },
        peg$c74 = "+",
        peg$c75 = { type: "literal", value: "+", description: "\"+\"" },
        peg$c76 = "-",
        peg$c77 = { type: "literal", value: "-", description: "\"-\"" },
        peg$c78 = "!",
        peg$c79 = { type: "literal", value: "!", description: "\"!\"" },
        peg$c80 = { type: "other", description: "whitespace" },
        peg$c81 = /^[ \t\r\n\f]/,
        peg$c82 = { type: "class", value: "[ \\t\\r\\n\\f]", description: "[ \\t\\r\\n\\f]" },
        peg$c83 = void 0,
        peg$c84 = { type: "any", description: "any character" },

        peg$currPos          = 0,
        peg$reportedPos      = 0,
        peg$cachedPos        = 0,
        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$reportedPos, peg$currPos);
    }

    function offset() {
      return peg$reportedPos;
    }

    function line() {
      return peg$computePosDetails(peg$reportedPos).line;
    }

    function column() {
      return peg$computePosDetails(peg$reportedPos).column;
    }

    function expected(description) {
      throw peg$buildException(
        null,
        [{ type: "other", description: description }],
        peg$reportedPos
      );
    }

    function error(message) {
      throw peg$buildException(message, null, peg$reportedPos);
    }

    function peg$computePosDetails(pos) {
      function advance(details, startPos, endPos) {
        var p, ch;

        for (p = startPos; p < endPos; p++) {
          ch = input.charAt(p);
          if (ch === "\n") {
            if (!details.seenCR) { details.line++; }
            details.column = 1;
            details.seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            details.line++;
            details.column = 1;
            details.seenCR = true;
          } else {
            details.column++;
            details.seenCR = false;
          }
        }
      }

      if (peg$cachedPos !== pos) {
        if (peg$cachedPos > pos) {
          peg$cachedPos = 0;
          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };
        }
        advance(peg$cachedPosDetails, peg$cachedPos, pos);
        peg$cachedPos = pos;
      }

      return peg$cachedPosDetails;
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildException(message, expected, pos) {
      function cleanupExpected(expected) {
        var i = 1;

        expected.sort(function(a, b) {
          if (a.description < b.description) {
            return -1;
          } else if (a.description > b.description) {
            return 1;
          } else {
            return 0;
          }
        });

        while (i < expected.length) {
          if (expected[i - 1] === expected[i]) {
            expected.splice(i, 1);
          } else {
            i++;
          }
        }
      }

      function buildMessage(expected, found) {
        function stringEscape(s) {
          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

          return s
            .replace(/\\/g,   '\\\\')
            .replace(/"/g,    '\\"')
            .replace(/\x08/g, '\\b')
            .replace(/\t/g,   '\\t')
            .replace(/\n/g,   '\\n')
            .replace(/\f/g,   '\\f')
            .replace(/\r/g,   '\\r')
            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
            .replace(/[\u0180-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
            .replace(/[\u1080-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
        }

        var expectedDescs = new Array(expected.length),
            expectedDesc, foundDesc, i;

        for (i = 0; i < expected.length; i++) {
          expectedDescs[i] = expected[i].description;
        }

        expectedDesc = expected.length > 1
          ? expectedDescs.slice(0, -1).join(", ")
              + " or "
              + expectedDescs[expected.length - 1]
          : expectedDescs[0];

        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
      }

      var posDetails = peg$computePosDetails(pos),
          found      = pos < input.length ? input.charAt(pos) : null;

      if (expected !== null) {
        cleanupExpected(expected);
      }

      return new SyntaxError(
        message !== null ? message : buildMessage(expected, found),
        expected,
        found,
        pos,
        posDetails.line,
        posDetails.column
      );
    }

    function peg$parsestart() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parse_();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parse_();
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsenode();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsenode();
          }
        } else {
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c2(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = [];
        s2 = peg$parse_();
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parse_();
        }
        if (s1 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c3();
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseEOF();
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c3();
          }
          s0 = s1;
        }
      }

      return s0;
    }

    function peg$parsenode() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$parseoperator_exp();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseEOF();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c4(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parseoperator_exp();
        if (s1 !== peg$FAILED) {
          s2 = peg$parsenode();
          if (s2 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c5(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parsegroup_exp();
          if (s1 !== peg$FAILED) {
            s2 = [];
            s3 = peg$parseoperator_exp();
            while (s3 !== peg$FAILED) {
              s2.push(s3);
              s3 = peg$parseoperator_exp();
            }
            if (s2 !== peg$FAILED) {
              s3 = [];
              s4 = peg$parsenode();
              while (s4 !== peg$FAILED) {
                s3.push(s4);
                s4 = peg$parsenode();
              }
              if (s3 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c6(s1, s2, s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        }
      }

      return s0;
    }

    function peg$parsegroup_exp() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$parsefield_exp();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parse_();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parse_();
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c7(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$parseparen_exp();
      }

      return s0;
    }

    function peg$parseparen_exp() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 40) {
        s1 = peg$c8;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c9); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsenode();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsenode();
          }
        } else {
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 41) {
            s3 = peg$c10;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parse_();
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parse_();
            }
            if (s4 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c2(s2);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parsefield_exp() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$parsefieldname();
      if (s1 === peg$FAILED) {
        s1 = peg$c12;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parserange_operator_exp();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parseprefix_operator();
        if (s1 === peg$FAILED) {
          s1 = peg$c12;
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parsefieldname();
          if (s2 !== peg$FAILED) {
            s3 = peg$parseparen_exp();
            if (s3 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c14(s1, s2, s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseprefix_operator();
          if (s1 === peg$FAILED) {
            s1 = peg$c12;
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parsefieldname();
            if (s2 === peg$FAILED) {
              s2 = peg$c12;
            }
            if (s2 !== peg$FAILED) {
              s3 = peg$parseterm();
              if (s3 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c15(s1, s2, s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        }
      }

      return s0;
    }

    function peg$parsefieldname() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$parseunquoted_field();
      if (s1 !== peg$FAILED) {
        if (peg$c16.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c17); }
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c18(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseunquoted_field() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (peg$c19.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c20); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsefield_char();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsefield_char();
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c21(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parsefield_char() {
      var s0;

      if (peg$c22.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c23); }
      }

      return s0;
    }

    function peg$parseterm() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$parseprefix_operator_exp();
      if (s1 === peg$FAILED) {
        s1 = peg$c12;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsequoted_term();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseproximity_modifier();
          if (s3 === peg$FAILED) {
            s3 = peg$c12;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parseboost_modifier();
            if (s4 === peg$FAILED) {
              s4 = peg$c12;
            }
            if (s4 !== peg$FAILED) {
              s5 = [];
              s6 = peg$parse_();
              while (s6 !== peg$FAILED) {
                s5.push(s6);
                s6 = peg$parse_();
              }
              if (s5 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c24(s1, s2, s3, s4);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parseprefix_operator_exp();
        if (s1 === peg$FAILED) {
          s1 = peg$c12;
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseunquoted_term();
          if (s2 !== peg$FAILED) {
            s3 = peg$parsefuzzy_modifier();
            if (s3 === peg$FAILED) {
              s3 = peg$c12;
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parseboost_modifier();
              if (s4 === peg$FAILED) {
                s4 = peg$c12;
              }
              if (s4 !== peg$FAILED) {
                s5 = [];
                s6 = peg$parse_();
                while (s6 !== peg$FAILED) {
                  s5.push(s6);
                  s6 = peg$parse_();
                }
                if (s5 !== peg$FAILED) {
                  peg$reportedPos = s0;
                  s1 = peg$c25(s1, s2, s3, s4);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      }

      return s0;
    }

    function peg$parseunquoted_term() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (peg$c26.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c27); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parseterm_char();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parseterm_char();
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c28(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseterm_char() {
      var s0;

      if (peg$c29.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c30); }
      }

      return s0;
    }

    function peg$parsequoted_term() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 34) {
        s1 = peg$c31;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c32); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (peg$c33.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c34); }
        }
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$c33.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c34); }
            }
          }
        } else {
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 34) {
            s3 = peg$c31;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c32); }
          }
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c35(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseproximity_modifier() {
      var s0, s1, s2;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 126) {
        s1 = peg$c36;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c37); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseint_exp();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c38(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseboost_modifier() {
      var s0, s1, s2;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 94) {
        s1 = peg$c39;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c40); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsedecimal_or_int_exp();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c41(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parsefuzzy_modifier() {
      var s0, s1, s2;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 126) {
        s1 = peg$c36;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c37); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsedecimal_exp();
        if (s2 === peg$FAILED) {
          s2 = peg$c12;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c42(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parsedecimal_or_int_exp() {
      var s0;

      s0 = peg$parsedecimal_exp();
      if (s0 === peg$FAILED) {
        s0 = peg$parseint_exp();
      }

      return s0;
    }

    function peg$parsedecimal_exp() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c43) {
        s1 = peg$c43;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c44); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (peg$c45.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c46); }
        }
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$c45.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c46); }
            }
          }
        } else {
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c47(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseint_exp() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      if (peg$c45.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c46); }
      }
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          if (peg$c45.test(input.charAt(peg$currPos))) {
            s2 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c46); }
          }
        }
      } else {
        s1 = peg$c0;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c48(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parserange_operator_exp() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 91) {
        s1 = peg$c49;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c50); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseunquoted_term();
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parse_();
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parse_();
          }
          if (s3 !== peg$FAILED) {
            if (input.substr(peg$currPos, 2) === peg$c51) {
              s4 = peg$c51;
              peg$currPos += 2;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c52); }
            }
            if (s4 !== peg$FAILED) {
              s5 = [];
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                while (s6 !== peg$FAILED) {
                  s5.push(s6);
                  s6 = peg$parse_();
                }
              } else {
                s5 = peg$c0;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parseunquoted_term();
                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 93) {
                    s7 = peg$c53;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c54); }
                  }
                  if (s7 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c55(s2, s6);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 123) {
          s1 = peg$c56;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c57); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseunquoted_term();
          if (s2 !== peg$FAILED) {
            s3 = [];
            s4 = peg$parse_();
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parse_();
            }
            if (s3 !== peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c51) {
                s4 = peg$c51;
                peg$currPos += 2;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c52); }
              }
              if (s4 !== peg$FAILED) {
                s5 = [];
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  while (s6 !== peg$FAILED) {
                    s5.push(s6);
                    s6 = peg$parse_();
                  }
                } else {
                  s5 = peg$c0;
                }
                if (s5 !== peg$FAILED) {
                  s6 = peg$parseunquoted_term();
                  if (s6 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 125) {
                      s7 = peg$c58;
                      peg$currPos++;
                    } else {
                      s7 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c59); }
                    }
                    if (s7 !== peg$FAILED) {
                      peg$reportedPos = s0;
                      s1 = peg$c60(s2, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c0;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 123) {
            s1 = peg$c56;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c57); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parseunquoted_term();
            if (s2 !== peg$FAILED) {
              s3 = [];
              s4 = peg$parse_();
              while (s4 !== peg$FAILED) {
                s3.push(s4);
                s4 = peg$parse_();
              }
              if (s3 !== peg$FAILED) {
                if (input.substr(peg$currPos, 2) === peg$c51) {
                  s4 = peg$c51;
                  peg$currPos += 2;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c52); }
                }
                if (s4 !== peg$FAILED) {
                  s5 = [];
                  s6 = peg$parse_();
                  if (s6 !== peg$FAILED) {
                    while (s6 !== peg$FAILED) {
                      s5.push(s6);
                      s6 = peg$parse_();
                    }
                  } else {
                    s5 = peg$c0;
                  }
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parseunquoted_term();
                    if (s6 !== peg$FAILED) {
                      if (input.charCodeAt(peg$currPos) === 93) {
                        s7 = peg$c53;
                        peg$currPos++;
                      } else {
                        s7 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c54); }
                      }
                      if (s7 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c55(s2, s6);
                        s0 = s1;
                      } else {
                        peg$currPos = s0;
                        s0 = peg$c0;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c0;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 91) {
              s1 = peg$c49;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c50); }
            }
            if (s1 !== peg$FAILED) {
              s2 = peg$parseunquoted_term();
              if (s2 !== peg$FAILED) {
                s3 = [];
                s4 = peg$parse_();
                while (s4 !== peg$FAILED) {
                  s3.push(s4);
                  s4 = peg$parse_();
                }
                if (s3 !== peg$FAILED) {
                  if (input.substr(peg$currPos, 2) === peg$c51) {
                    s4 = peg$c51;
                    peg$currPos += 2;
                  } else {
                    s4 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c52); }
                  }
                  if (s4 !== peg$FAILED) {
                    s5 = [];
                    s6 = peg$parse_();
                    if (s6 !== peg$FAILED) {
                      while (s6 !== peg$FAILED) {
                        s5.push(s6);
                        s6 = peg$parse_();
                      }
                    } else {
                      s5 = peg$c0;
                    }
                    if (s5 !== peg$FAILED) {
                      s6 = peg$parseunquoted_term();
                      if (s6 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 125) {
                          s7 = peg$c58;
                          peg$currPos++;
                        } else {
                          s7 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c59); }
                        }
                        if (s7 !== peg$FAILED) {
                          peg$reportedPos = s0;
                          s1 = peg$c55(s2, s6);
                          s0 = s1;
                        } else {
                          peg$currPos = s0;
                          s0 = peg$c0;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$c0;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c0;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          }
        }
      }

      return s0;
    }

    function peg$parseoperator_exp() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parse_();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parse_();
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseoperator();
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parse_();
            }
          } else {
            s3 = peg$c0;
          }
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c61(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = [];
        s2 = peg$parse_();
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parse_();
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseoperator();
          if (s2 !== peg$FAILED) {
            s3 = peg$parseEOF();
            if (s3 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c61(s2);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      }

      return s0;
    }

    function peg$parseoperator() {
      var s0, s1;

      if (input.substr(peg$currPos, 2) === peg$c62) {
        s0 = peg$c62;
        peg$currPos += 2;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c64) {
          s0 = peg$c64;
          peg$currPos += 3;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c65); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3) === peg$c66) {
            s0 = peg$c66;
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c67); }
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 2) === peg$c68) {
              s1 = peg$c68;
              peg$currPos += 2;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c69); }
            }
            if (s1 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c70();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.substr(peg$currPos, 2) === peg$c71) {
                s1 = peg$c71;
                peg$currPos += 2;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c72); }
              }
              if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c73();
              }
              s0 = s1;
            }
          }
        }
      }

      return s0;
    }

    function peg$parseprefix_operator_exp() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parse_();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parse_();
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseprefix_operator();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c61(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseprefix_operator() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 43) {
        s0 = peg$c74;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c75); }
      }
      if (s0 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 45) {
          s0 = peg$c76;
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c77); }
        }
        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 33) {
            s0 = peg$c78;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c79); }
          }
        }
      }

      return s0;
    }

    function peg$parse_() {
      var s0, s1;

      peg$silentFails++;
      s0 = [];
      if (peg$c81.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c82); }
      }
      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          if (peg$c81.test(input.charAt(peg$currPos))) {
            s1 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c82); }
          }
        }
      } else {
        s0 = peg$c0;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c80); }
      }

      return s0;
    }

    function peg$parseEOF() {
      var s0, s1;

      s0 = peg$currPos;
      peg$silentFails++;
      if (input.length > peg$currPos) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c84); }
      }
      peg$silentFails--;
      if (s1 === peg$FAILED) {
        s0 = peg$c83;
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail({ type: "end", description: "end of input" });
      }

      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
    }
  }

  return {
    SyntaxError: SyntaxError,
    parse:       parse
  };
})()
});
'use strict';

/**
 * @ngdoc module
 * @name udb.uitpas
 * @description
 * The UDB UiTPAS module
 */
angular
  .module('udb.uitpas', [
    'ui.bootstrap'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.migration
 * @description
 * # Migration Module
 */
angular
  .module('udb.migration', [
    'udb.core',
    'udb.event-form',
    'ui.router'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.duplication
 * @description
 * # Duplication Module
 */
angular
  .module('udb.duplication', [
    'udb.core',
    'udb.event-form',
    'udb.migration'
  ]);

'use strict';

/**
 * @ngdoc module
 * @name udb.cultuurkuur
 * @description
 * # Cultuurkuur Module
 */
angular
  .module('udb.cultuurkuur', [
    'udb.core',
    'udb.event-detail',
  ]);
})();

// Source: src/core/authorization-service.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.authorizationService
 * @description
 * # authorizationService
 * Service in the udb.core.
 */
angular
  .module('udb.core')
  .constant('authorization', {
    'editOffer': 'AANBOD_BEWERKEN',
    'moderateOffer': 'AANBOD_MODEREREN',
    'removeOffer': 'AANBOD_VERWIJDEREN',
    'manageOrganisations': 'ORGANISATIES_BEHEREN',
    'manageUsers': 'GEBRUIKERS_BEHEREN',
    'manageLabels': 'LABELS_BEHEREN',
    'editFacilities': 'VOORZIENINGEN_BEWERKEN'
  })
  .service('authorizationService', AuthorizationService);

/* @ngInject */
function AuthorizationService($q, uitidAuth, udbApi, $location, $rootScope, $translate) {
  this.isLoggedIn = function () {
    var deferred = $q.defer();

    var deferredUser = udbApi.getMe();
    deferredUser.then(
      function (user) {
        $rootScope.$emit('userLoggedIn', user);
        deferred.resolve(user);
      },
      function () {
        uitidAuth.login();

        // We are redirecting away from the current page, so no need to
        // resolve or reject the deferred.
      }
    );

    return deferred.promise;
  };

  /**
   * @param {string} path
   * @return {Promise.<boolean>}
   *  Resolves to TRUE when no user is logged in and no redirect has occurred.
   */
  this.redirectIfLoggedIn = function (path) {
    var deferredRedirect = $q.defer();

    function redirect() {
      $location.path(path);
      deferredRedirect.resolve(false);
    }

    if (uitidAuth.getToken()) {
      udbApi
        .getMe()
        .then(redirect, deferredRedirect.reject)
        // Send an emit u
        .finally(function () {
          $rootScope.$emit('$changeLocales', $translate.use());
        });
    } else {
      deferredRedirect.resolve(true);
    }

    return deferredRedirect.promise;
  };

  /**
   * @param {string} permission - One of the authorization constants
   */
  this.hasPermission = function (permission) {
    var deferredHasPermission = $q.defer();

    function findPermission(permissionList) {
      var foundPermission = _.find(permissionList, function(p) { return p === permission; });
      deferredHasPermission.resolve(foundPermission ? true : false);
    }

    udbApi
      .getMyPermissions()
      .then(findPermission, deferredHasPermission.reject);

    return deferredHasPermission.promise;
  };

  /**
   * @return RolePermission[]
   */
  this.getPermissions = function () {
    return udbApi.getMyPermissions();
  };
}
AuthorizationService.$inject = ["$q", "uitidAuth", "udbApi", "$location", "$rootScope", "$translate"];
})();

// Source: src/core/city-autocomplete.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.CityAutocomplete
 * @description
 * Service for city autocompletes.
 */
angular
  .module('udb.core')
  .service('cityAutocomplete', CityAutocomplete);

/* @ngInject */
function CityAutocomplete($q, $http, appConfig, UdbPlace, jsonLDLangFilter) {
  /**
   *
   * Get the places for a city
   *
   * @param {string} zipcode
   * @param {string} country
   * @returns {Promise}
   */
  this.getPlacesByZipcode = function(zipcode, country) {

    var deferredPlaces = $q.defer();

    var config = {
      params: {
        'zipcode': zipcode,
        'country': country
      }
    };

    var parsePagedCollection = function (response) {
      var locations = _.map(response.data.member, function (placeJson) {
        var place = new UdbPlace(placeJson);
        return jsonLDLangFilter(place, 'nl');
      });

      deferredPlaces.resolve(locations);
    };

    var failed = function () {
      deferredPlaces.reject('something went wrong while getting places for city with zipcode: ' + zipcode);
    };

    $http.get(appConfig.baseUrl + 'places', config).then(parsePagedCollection, failed);

    return deferredPlaces.promise;
  };

  /**
   *
   * Get the places for a city
   *
   * @param {string} city
   * @param {string} country
   * @returns {Promise}
   */
  this.getPlacesByCity = function(city, country) {

    var deferredPlaces = $q.defer();

    var config = {
      params: {
        'city': city,
        'zipcode': '',
        'country': country
      }
    };

    var parsePagedCollection = function (response) {
      var locations = _.map(response.data.member, function (placeJson) {
        var place = new UdbPlace(placeJson);
        return jsonLDLangFilter(place, 'nl');
      });

      deferredPlaces.resolve(locations);
    };

    var failed = function () {
      deferredPlaces.reject('something went wrong while getting places for city with city: ' + city);
    };

    $http.get(appConfig.baseUrl + 'places', config).then(parsePagedCollection, failed);

    return deferredPlaces.promise;
  };

}
CityAutocomplete.$inject = ["$q", "$http", "appConfig", "UdbPlace", "jsonLDLangFilter"];
})();

// Source: src/core/components/calendar-summary/calendar-summary.controller.js
(function () {
'use strict';

angular
  .module('udb.core')
  .controller('CalendarSummaryController', calendarSummaryController);

function calendarSummaryController($scope) {
  $scope.getOpeningHoursCount = function(offer) {
    if (offer.calendarType === 'single' && offer.startDate !== offer.endDate) {
      offer.openingHours = [{
        startDate: offer.startDate,
        endDate: offer.endDate
      }];
    }
    return offer.openingHours.length;
  };
}
calendarSummaryController.$inject = ["$scope"];
})();

// Source: src/core/components/calendar-summary/calendar-summary.directive.js
(function () {
'use strict';

angular
  .module('udb.core')
  .directive('udbCalendarSummary', udbCalendarSummary);

function udbCalendarSummary() {
  return {
    restrict: 'E',
    scope: {
      offer: '=',
      showOpeningHours: '='
    },
    templateUrl: 'templates/calendar-summary.directive.html',
    controller: 'CalendarSummaryController'
  };
}
})();

// Source: src/core/components/image-detail/image-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.image-detail.directive:Image-detail
 * @description
 * # Image-detail
 */
angular
  .module('udb.core')
  .directive('udbImageDetail', function () {
    return {
      templateUrl: 'templates/image-detail.directive.html',
      controller: ImageDetailController,
      restrict: 'A',
      scope: {
        images: '<udbImageDetail',
        main : '<image'
      }
    };
  });

/* @ngInject */
function ImageDetailController($scope, $translate) {
  $scope.language = $translate.use() || 'nl';

  angular.forEach($scope.images, function(image) {
    if (image.contentUrl === $scope.main) {
      image.main = true;
      var reindexedMedia = _.without($scope.images, image);
      reindexedMedia.unshift(image);
      $scope.images = reindexedMedia;
    }
  });

  $scope.translateImageDetail = function (label, translationData) {
    translationData = (translationData !== undefined) ? translationData : {};
    return $translate.instant('imageDetail.' + label, translationData);
  };
}
ImageDetailController.$inject = ["$scope", "$translate"];
})();

// Source: src/core/components/multiselect/multiselect.directive.js
(function () {
(function () {
  'use strict';

  /**
   * @ngdoc directive
   * @name udb.core.directive:udbMultiselect
   * @description
   * # directive for bootstrap-multiselect integration
   */
  angular
  .module('udb.core')
  .directive('udbMultiselect', udbMultiselectDirective);

  function udbMultiselectDirective() {

    return {
      restrict: 'A',
      require: 'ngModel',
      link: function (scope, elem, attrs, ngModel) {

        elem.multiselect({
          buttonText: function(options, select) {
            if (options.length > 0) {
              var labels = [];
              options.each(function() {
                labels.push(angular.element(this).html().substring(0, 2));
              });
              return labels.join(', ') + ' ';
            }
            else {
              return attrs.startLabel;
            }
          }
        });

        // Watch for any changes from outside the directive and refresh
        scope.$watch(attrs.ngModel, function () {
          elem.multiselect('refresh');
        });

      }

    };
  }

})();
})();

// Source: src/core/components/time/time.directive.js
(function () {
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.core.directive:udbTime
 * @description
 * # udbTime
 */
angular
  .module('udb.core')
  .directive('udbTime', udbTimeDirective);

function udbTimeDirective() {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: link
  };

  function link (scope, elem, attr, ngModel) {

    if (!ngModel) {
      return;
    }

    if (attr.type !== 'time') {
      return;
    }

    ngModel.$formatters.unshift(function(value) {
      return value.replace(/:\d{2}[.,]\d{3}$/, '');
    });

    /*elem.bind('blur', function() {
      elem.toggleClass('has-error', elem.$invalid);
    });*/
  }
}
})();
})();

// Source: src/core/components/workflow-status/udb.workflow-status.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.core.directive: udbWorkflowStatus
 * @description
 * # udbWorkflowStatus
 */
angular
  .module('udb.core')
  .directive('udbWorkflowStatus', function () {
    return {
      templateUrl: 'templates/udb.workflow-status.directive.html',
      controller: WorkflowStatusDirectiveController,
      controllerAs: 'cm',
      restrict: 'A',
      scope: {
        event: '<udbWorkflowStatus'
      }
    };
  });

/* @ngInject */
function WorkflowStatusDirectiveController($scope, appConfig) {
  var cm = this;
  cm.event = $scope.event;
  cm.sameAsRelations = sameAsRelations;
  cm.isUrl = isUrl;
  cm.getPublicUrl = getPublicUrl;

  cm.publicationRulesLink = appConfig.publicationRulesLink;

  function sameAsRelations (event) {
    var sameAsRelationsWithoutUIV = _.reject(event.sameAs, function(sameAs) {
      return sameAs.contains('uitinvlaanderen');
    });
    return sameAsRelationsWithoutUIV;
  }

  function isUrl (potentialUrl) {
    return /^(https?)/.test(potentialUrl);
  }

  function getPublicUrl (id) {
    if (isPlace()) {
      return appConfig.publicationUrl.place + id;
    } else {
      return appConfig.publicationUrl.event + id;
    }
  }

  function isPlace() {
    if (_.includes(cm.event.url, 'place')) {
      return true;
    }
    else {
      return false;
    }
  }
}
WorkflowStatusDirectiveController.$inject = ["$scope", "appConfig"];
})();

// Source: src/core/error-handling/unexpected-error-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.core.controller:UnexpectedErrorModalController
 * @description
 * # UnexpectedErrorModalController
 * Controller of the udb.core
 */
angular
  .module('udb.core')
  .controller('UnexpectedErrorModalController', UnexpectedErrorModalController);

/* @ngInject */
function UnexpectedErrorModalController($scope, $uibModalInstance, errorMessage) {

  var dismiss = function () {
    $uibModalInstance.dismiss('closed');
  };

  $scope.dismiss = dismiss;
  $scope.errorMessage = errorMessage;
}
UnexpectedErrorModalController.$inject = ["$scope", "$uibModalInstance", "errorMessage"];
})();

// Source: src/core/translations/dutch-translations.constant.js
(function () {
'use strict';
// jscs:disable maximumLineLength

/**
 * @ngdoc service
 * @name udbApp.udbDutchTranslations
 * @description
 * # udbDutchTranslations
 * Constant in the udbApp.
 */
angular.module('udb.core')
  .constant('udbDutchTranslations',
  {
    'BE': 'België',
    'NL': 'Nederland',
    'EN_ADJECTIVE': 'Engelse',
    'FR_ADJECTIVE': 'Franse',
    'DE_ADJECTIVE': 'Duitse',
    'NL_ADJECTIVE': 'Nederlandse',
    'datepicker': {
      'CURRENT': 'Vandaag',
      'CLEAR': 'Verwijder',
      'CLOSE': 'Sluiten'
    },
    '=': 'is gelijk aan',
    '><': 'tussen',
    '+': 'is gelijk aan',
    '!': 'is niet gelijk aan',
    '-': 'is niet gelijk aan',
    '>': 'is groter of gelijk aan',
    '<': 'is kleiner of gelijk aan',
    '>_DATE': 'later dan',
    '<_DATE': 'vroeger dan',
    '=_DATE': 'is gelijk aan',
    '><_DATE': 'tussen',
    'choice': {
      'everyone': 'iedereen',
      'members': 'leden',
      'education': 'onderwijs',
      'asc': 'oplopend',
      'desc': 'aflopend',
      'today': 'vandaag',
      'tomorrow': 'morgen',
      'thisweekend': 'dit weekend',
      'nextweekend': 'volgend weekend',
      'next7days': 'volgende 7 dagen',
      'next14days': 'volgende 14 dagen',
      'next30days': 'volgende 30 dagen',
      'next3months': 'volgende 3 maanden',
      'next6months': 'volgende 6 maanden',
      'next12months': 'volgende 12 maanden',
      'permanent': 'permanent',
      'event': 'event',
      'place': 'locatie',
      'actor': 'actor',
      'production': 'productie',
      'nl': 'Nederlands',
      'fr': 'Frans',
      'en': 'Engels',
      'de': 'Duits',
      'AF': 'Afghanistan',
      'AX': 'Alandeilanden',
      'AL': 'Albanië',
      'DZ': 'Algerije',
      'AS': 'Amerikaans Samoa',
      'VI': 'Amerikaanse Maagdeneilanden',
      'UM': 'Amerikaanse kleinere afgelegen eilanden',
      'AD': 'Andorra',
      'AO': 'Angola',
      'AI': 'Anguilla',
      'AQ': 'Antarctica',
      'AG': 'Antigua en Barbuda',
      'AR': 'Argentinië',
      'AM': 'Armenië',
      'AW': 'Aruba',
      'AU': 'Australië',
      'AZ': 'Azerbeidzjan',
      'BS': 'Bahama’s',
      'BH': 'Bahrein',
      'BD': 'Bangladesh',
      'BB': 'Barbados',
      'BE': 'België',
      'BZ': 'Belize',
      'BJ': 'Benin',
      'BM': 'Bermuda',
      'BT': 'Bhutan',
      'BO': 'Bolivia',
      'BA': 'Bosnië en Herzegovina',
      'BW': 'Botswana',
      'BV': 'Bouveteiland',
      'BR': 'Brazilië',
      'IO': 'Britse Gebieden in de Indische Oceaan',
      'VG': 'Britse Maagdeneilanden',
      'BN': 'Brunei',
      'BG': 'Bulgarije',
      'BF': 'Burkina Faso',
      'BI': 'Burundi',
      'KH': 'Cambodja',
      'CA': 'Canada',
      'KY': 'Caymaneilanden',
      'CF': 'Centraal-Afrikaanse Republiek',
      'CL': 'Chili',
      'CN': 'China',
      'CX': 'Christmaseiland',
      'CC': 'Cocoseilanden',
      'CO': 'Colombia',
      'KM': 'Comoren',
      'CG': 'Congo',
      'CD': 'Congo-Kinshasa',
      'CK': 'Cookeilanden',
      'CR': 'Costa Rica',
      'CU': 'Cuba',
      'CY': 'Cyprus',
      'DK': 'Denemarken',
      'DJ': 'Djibouti',
      'DM': 'Dominica',
      'DO': 'Dominicaanse Republiek',
      'DE': 'Duitsland',
      'EC': 'Ecuador',
      'EG': 'Egypte',
      'SV': 'El Salvador',
      'GQ': 'Equatoriaal-Guinea',
      'ER': 'Eritrea',
      'EE': 'Estland',
      'ET': 'Ethiopië',
      'FO': 'Faeröer',
      'FK': 'Falklandeilanden',
      'FJ': 'Fiji',
      'PH': 'Filipijnen',
      'FI': 'Finland',
      'FR': 'Frankrijk',
      'GF': 'Frans-Guyana',
      'PF': 'Frans-Polynesië',
      'TF': 'Franse Gebieden in de zuidelijke Indische Oceaan',
      'GA': 'Gabon',
      'GM': 'Gambia',
      'GE': 'Georgië',
      'GH': 'Ghana',
      'GI': 'Gibraltar',
      'GD': 'Grenada',
      'GR': 'Griekenland',
      'GL': 'Groenland',
      'GP': 'Guadeloupe',
      'GU': 'Guam',
      'GT': 'Guatemala',
      'GG': 'Guernsey',
      'GN': 'Guinee',
      'GW': 'Guinee-Bissau',
      'GY': 'Guyana',
      'HT': 'Haïti',
      'HM': 'Heard- en McDonaldeilanden',
      'IM': 'Het Eiland Man',
      'HN': 'Honduras',
      'HU': 'Hongarije',
      'HK': 'Hongkong SAR van China',
      'IS': 'IJsland',
      'IE': 'Ierland',
      'IN': 'India',
      'ID': 'Indonesië',
      'IQ': 'Irak',
      'IR': 'Iran',
      'IL': 'Israël',
      'IT': 'Italië',
      'CI': 'Ivoorkust',
      'JM': 'Jamaica',
      'JP': 'Japan',
      'YE': 'Jemen',
      'JE': 'Jersey',
      'JO': 'Jordanië',
      'CV': 'Kaapverdië',
      'CM': 'Kameroen',
      'KZ': 'Kazachstan',
      'KE': 'Kenia',
      'KG': 'Kirgizië',
      'KI': 'Kiribati',
      'KW': 'Koeweit',
      'HR': 'Kroatië',
      'LA': 'Laos',
      'LS': 'Lesotho',
      'LV': 'Letland',
      'LB': 'Libanon',
      'LR': 'Liberia',
      'LY': 'Libië',
      'LI': 'Liechtenstein',
      'LT': 'Litouwen',
      'LU': 'Luxemburg',
      'MO': 'Macao SAR van China',
      'MK': 'Macedonië',
      'MG': 'Madagaskar',
      'MW': 'Malawi',
      'MV': 'Malediven',
      'MY': 'Maleisië',
      'ML': 'Mali',
      'MT': 'Malta',
      'MA': 'Marokko',
      'MH': 'Marshalleilanden',
      'MQ': 'Martinique',
      'MR': 'Mauritanië',
      'MU': 'Mauritius',
      'YT': 'Mayotte',
      'MX': 'Mexico',
      'FM': 'Micronesië',
      'MD': 'Moldavië',
      'MC': 'Monaco',
      'MN': 'Mongolië',
      'ME': 'Montenegro',
      'MS': 'Montserrat',
      'MZ': 'Mozambique',
      'MM': 'Myanmar',
      'NA': 'Namibië',
      'NR': 'Nauru',
      'NL': 'Nederland',
      'AN': 'Nederlandse Antillen',
      'NP': 'Nepal',
      'NI': 'Nicaragua',
      'NC': 'Nieuw-Caledonië',
      'NZ': 'Nieuw-Zeeland',
      'NE': 'Niger',
      'NG': 'Nigeria',
      'NU': 'Niue',
      'KP': 'Noord-Korea',
      'MP': 'Noordelijke Marianeneilanden',
      'NO': 'Noorwegen',
      'NF': 'Norfolkeiland',
      'UG': 'Oeganda',
      'UA': 'Oekraïne',
      'UZ': 'Oezbekistan',
      'OM': 'Oman',
      'ZZ': 'Onbekend of onjuist gebied',
      'TL': 'Oost-Timor',
      'AT': 'Oostenrijk',
      'PK': 'Pakistan',
      'PW': 'Palau',
      'PS': 'Palestijns Gebied',
      'PA': 'Panama',
      'PG': 'Papoea-Nieuw-Guinea',
      'PY': 'Paraguay',
      'PE': 'Peru',
      'PN': 'Pitcairn',
      'PL': 'Polen',
      'PT': 'Portugal',
      'PR': 'Puerto Rico',
      'QA': 'Qatar',
      'RO': 'Roemenië',
      'RU': 'Rusland',
      'RW': 'Rwanda',
      'RE': 'Réunion',
      'BL': 'Saint Barthélemy',
      'KN': 'Saint Kitts en Nevis',
      'LC': 'Saint Lucia',
      'PM': 'Saint Pierre en Miquelon',
      'VC': 'Saint Vincent en de Grenadines',
      'SB': 'Salomoneilanden',
      'WS': 'Samoa',
      'SM': 'San Marino',
      'ST': 'Sao Tomé en Principe',
      'SA': 'Saoedi-Arabië',
      'SN': 'Senegal',
      'RS': 'Servië',
      'CS': 'Servië en Montenegro',
      'SC': 'Seychellen',
      'SL': 'Sierra Leone',
      'SG': 'Singapore',
      'SH': 'Sint-Helena',
      'MF': 'Sint-Maarten',
      'SI': 'Slovenië',
      'SK': 'Slowakije',
      'SD': 'Soedan',
      'SO': 'Somalië',
      'ES': 'Spanje',
      'LK': 'Sri Lanka',
      'SR': 'Suriname',
      'SJ': 'Svalbard en Jan Mayen',
      'SZ': 'Swaziland',
      'SY': 'Syrië',
      'TJ': 'Tadzjikistan',
      'TW': 'Taiwan',
      'TZ': 'Tanzania',
      'TH': 'Thailand',
      'TG': 'Togo',
      'TK': 'Tokelau',
      'TO': 'Tonga',
      'TT': 'Trinidad en Tobago',
      'TD': 'Tsjaad',
      'CZ': 'Tsjechië',
      'TN': 'Tunesië',
      'TR': 'Turkije',
      'TM': 'Turkmenistan',
      'TC': 'Turks- en Caicoseilanden',
      'TV': 'Tuvalu',
      'UY': 'Uruguay',
      'VU': 'Vanuatu',
      'VA': 'Vaticaanstad',
      'VE': 'Venezuela',
      'GB': 'Verenigd Koninkrijk',
      'AE': 'Verenigde Arabische Emiraten',
      'US': 'Verenigde Staten',
      'VN': 'Vietnam',
      'WF': 'Wallis en Futuna',
      'EH': 'Westelijke Sahara',
      'BY': 'Wit-Rusland',
      'ZM': 'Zambia',
      'ZW': 'Zimbabwe',
      'ZA': 'Zuid-Afrika',
      'GS': 'Zuid-Georgië en Zuidelijke Sandwicheilanden',
      'KR': 'Zuid-Korea',
      'SE': 'Zweden',
      'CH': 'Zwitserland'
    },
    property: {
      'name': 'Titel',
      'description': 'Beschrijving',
      'labels': 'Labels',
      'calendarSummary': 'Kalendersamenvatting',
      'image': 'Afbeelding',
      'location': 'Locatie',
      'address': 'Adres',
      'organizer': 'Organisator',
      'priceInfo': 'Prijsinformatie',
      'kansentarief': 'Kansentarief',
      'bookingInfo': 'Reservatie-info',
      'contactPoint': 'Contactinfo',
      'creator': 'Auteur',
      'terms.theme': 'Thema',
      'terms.eventtype': 'Type',
      'created': 'Datum aangemaakt',
      'modified': 'Datum laatste aanpassing',
      'publisher': 'Auteur',
      'available': 'Embargodatum',
      'endDate': 'Einddatum',
      'startDate': 'Begindatum',
      'calendarType': 'Tijd type',
      'sameAs': 'Externe IDs',
      'typicalAgeRange': 'Leeftijd',
      'language': 'Taal',
      'audience': 'Toegang'
    },
    preview: {
      tabs: {
        'data': 'Gegevens',
        'history': 'Historiek',
        'publication': 'Publicatie'
      },
      'not_found': 'Pagina niet gevonden',
      'not_found_help': 'Deze pagina kon niet gevonden worden.',
      'loading': 'Aan het laden...',
      'edit': 'Bewerken',
      'duplicate': 'Kopiëren en aanpassen',
      'delete': 'Verwijderen',
      'title': 'Titel',
      'type': 'Type',
      'entrance': 'Toegang',
      'description': 'Beschrijving',
      'no_description': 'Geen beschrijving',
      'where': 'Waar',
      'when': 'Wanneer',
      'labels': 'Labels',
      'labels_error': 'Het toevoegen van het label \'{{labelName}}\' is niet gelukt.',
      'labels_success': 'Het label \'{{addedLabel}}\' werd succesvol toegevoegd.',
      'organizer': 'Organisatie',
      'no_organizer': 'Geen organisatie-informatie',
      'price': 'Prijs',
      'free': 'Gratis',
      'currency': 'euro',
      'no_price': 'Geen prijsinformatie',
      'age_label': 'Geschikt voor',
      'all_ages': 'Alle leeftijden',
      'no_age': 'Geen leeftijdsinformatie',
      'publiq_url': 'Bekijk op UiT in Vlaanderen',
      'translate': 'Vertalen'
    },
    translate: {
      'ready': 'Klaar met vertalen',
      'translate': 'vertalen',
      'original': 'Origineel',
      'edit': 'bewerken',
      'translation': 'Vertaling',
      'description': 'Beschrijving',
      'title': 'Titel',
      'tariff': 'Prijstarief',
      'address': 'Adres',
      'street': 'Straat en nummer'
    },
    labels: {
      'what': 'Met een label voeg je korte, specifieke trefwoorden toe.',
      'invalid': 'Dit lijkt een ongeldig label. Een label',
      'chars': 'bestaat enkel uit letters of cijfers',
      'excluded': 'bevat enkel \'-\' en \'_\', maar mag niet met deze tekens beginnen',
      'length': 'telt 2 tot 50 karakters'
    },
    calendarSummary: {
      'openinghours': 'meerdere tijdstippen',
      'from': 'Van',
      'till': 'tot',
      'permanent': 'Permanent'
    },
    moderate: {
      'validate': 'Valideren',
      'approve': 'Goedkeuren',
      'approved': 'Goedgekeurd',
      'reject': 'Afkeuren',
      'rejected': 'Afgekeurd',
      'continue_validation': 'Verder valideren'
    },
    cultuurkuur: {
      'info': 'Dit evenement bevat <a target=\"_blank\" href=\"{{previewLink}}\">extra informatie</a> voor scholen en leerkrachten.',
      'subject': 'Onderwerp',
      'target_group': 'Doelgroep',
      'levels': 'Geschikt voor',
      'grades': 'onderwijsgraden',
      'edit_link': 'Wijzig op cultuurkuur.be',
      'incomplete_help': 'Vervolledig dit evenement op cultuurkuur.be met extra informatie voor scholen en leerkrachten.',
      'continue': 'Doorgaan'
    },
    booking: {
      'label': 'Reservatie',
      'no_booking': 'Geen reservatie-informatie'
    },
    contact: {
      'label': 'Contact',
      'or': 'of',
      'no_contact': 'Geen contactinformatie'
    },
    imageDetail: {
      'label': 'Afbeeldingen',
      'alt_image': 'Afbeelding {{index}}',
      'main_image': 'Hoofdafbeelding',
      'no_images': 'Geen afbeeldingen'
    },
    prices: {
      'title': 'Prijzen toevoegen',
      'base': 'Basistarief',
      'target_group': 'Doelgroep',
      'free': 'Gratis',
      'currency': 'euro',
      'add_price': 'Prijs invoeren',
      'add_tarriff': 'Tarief toevoegen',
      'error': 'Er ging iets fout bij het opslaan van de prijs.',
      'invalid': 'Deze prijsinformatie lijkt ongeldig en kan je daarom niet bewaren.',
      'invalid_tip1': 'Noteer decimalen met een komma.',
      'invalid_tip2': 'Laat geen enkel rij leeg, vul steeds een doelgroep en een bedrag in.',
      'invalid_tip3': 'Geef maximum twee cijfers na de komma.',
      'close': 'Sluiten',
      'save': 'Bewaren'
    },
    location: {
      'title': 'Nieuwe locatie toevoegen',
      'name': 'Naam locatie',
      'name_validation': 'De naam van de locatie is een verplicht veld.',
      'street': 'Straat en nummer',
      'street_validation': 'Straat is een verplicht veld.',
      'city': 'Gemeente',
      'category': 'Categorie',
      'category_help': 'Kies een categorie die deze locatie het best omschrijft.',
      'category_validation': 'Categorie is een verplicht veld.',
      'error': 'Er ging iets fout tijdens het opslaan van je locatie.',
      'invalid_street': 'Dit lijkt een ongeldig adres. Wanneer je spaties gebruikt in het adres, mogen er na de laatste spatie niet meer dan 15 karakters staan.',
      'cancel': 'Annuleren',
      'add': 'Toevoegen',
      'zip': 'Postcode'
    },
    eventForm: {
      'langWarning': 'Opgelet, je (be)werkt in een andere taal: {{language}}. Is dit niet de bedoeling, neem dan contact op met vragen@uitdatabank.be.',
      step1: {
        'title': 'Wat wil je toevoegen?',
        'label_event': 'Een evenement',
        'show_everything': 'Toon alles',
        'or': 'of',
        'location_label': 'Een locatie',
        'change': 'Wijzigen',
        'refine': 'Verfijn'
      },
      step2: {
        'date_help_event': 'Wanneer vindt dit evenement of deze activiteit plaats?',
        'date_help_place': 'Wanneer is deze plaats of locatie open?',
      },
      step3: {
        'title_event': 'Waar vindt dit evenement of deze activiteit plaats?',
        'title_place': 'Waar is deze plaats of locatie?',
        'choose_city': 'Kies een gemeente',
        'choose_city_helper': 'bv. Gent of 9000',
        'choose_residence': 'Kies een woonplaats',
        'choose_residence_helper': 'bv. Groningen of Amsterdam',
        'placeholder_city': 'Gemeente of postcode',
        'problem_city': 'Er was een probleem tijdens het ophalen van de steden',
        'change': 'Wijzigen',
        'choose_location': 'Kies een locatie',
        'placeholder_location': 'Naam of adres',
        'location_not_found': 'Locatie niet gevonden?',
        'add_location': 'Een locatie toevoegen',
        'location_error': 'Er was een probleem tijdens het ophalen van de locaties',
        'street': 'Straat en nummer',
        'placeholder_street': 'Kerkstraat 1',
        'street_validate': 'Straat en nummer is een verplicht veld.',
        'street_validate_long': 'Dit lijkt een ongeldig adres. Wanneer je spaties gebruikt in het adres, mogen er na de laatste spatie niet meer dan 15 karakters staan.',
        'ok': 'OK',
        'zip': 'Postcode'
      },
      step4: {
        'basic_data': 'Basisgegevens',
        'name_event': 'Naam van het evenement',
        'name_place': 'Naam van de locatie',
        'help_event': 'Gebruik een <strong>sprekende titel</strong>, bv. \"Fietsen langs kapelletjes\", \"De Sage van de Eenhoorn\".',
        'help_place': 'Gebruik de <strong>officiële benaming</strong>, bv. \"Gravensteen\", \"Abdijsite Herkenrode\", \"Cultuurcentrum De Werf\".',
        'help_description': 'Een <strong>uitgebreide beschrijving</strong> kan je in stap 5 toevoegen.',
        'info_missing': 'Je vulde niet alle verplichte informatie in:',
        'save_error': 'Er ging iets fout tijdens het opslaan van je activiteit. Gelieve later opnieuw te proberen.',
        'continue': 'Doorgaan',
        'doubles_title': 'Vermijd dubbel werk',
        'doubles_help': 'We vonden gelijkaardige items. Controleer deze eerder ingevoerde items.',
        'sure': 'Ben je zeker dat je \"{{name}}\" wil toevoegen?',
        'return_dashboard': 'Nee, keer terug naar dashboard',
        'yes_continue': 'Ja, doorgaan met invoeren',
        suggestions: {
          'from': 'Van',
          'till': 'tot',
          'permanent': 'Permanent'
        }
      },
      step5: {
        'expose_event': 'Laat je evenement extra opvallen',
        'expose_place': 'Laat deze locatie extra opvallen',
        'title': 'Titel',
        'description': 'Beschrijving',
        'add_text': 'Tekst toevoegen',
        'required_200': 'De eerste 200 tekens zijn het belangrijkst om een nieuw publiek aan te spreken.',
        'required_still': 'Nog',
        'required_signs': 'tekens.',
        'required_200_help': 'Plaats de belangrijkste boodschap in de eerste 200 tekens. Je kan nog verder aanvullen met achtergrondinformatie.',
        'empty': 'Leegmaken',
        'tip_route': 'Geef hier een wervende omschrijving van de route. Vermeld in deze tekst <strong>hoe</strong> de route wordt afgelegd (per fiets, per boot, ...), de mogelijke tussenstops, de <strong>duur</strong>, <strong>afstand</strong> en hoe de route <strong>begeleid</strong> is (met gids, brochure of wegwijzers).',
        'tip_rondleiding': 'Geef hier een wervende omschrijving van de rondleiding. Vermeld het <strong>max. aantal personen</strong> per groepje, <strong>hoe</strong> de rondleiding wordt georganiseerd (doorlopend, met intervallen of op vaste tijdstippen) en of er <strong>speciale aandachtspunten</strong> zijn (vb. laarzen aangewezen).',
        'tip_monument': 'Geef hier een wervende omschrijving van het monument. Geef ook aan indien het monument slechts beperkt opengesteld is (vb. enkel salons).',
        'description_error': 'Er ging iets fout bij het opslaan van de beschrijving.',
        'organizer': 'Organisatie',
        'add_organizer': 'Organisatie toevoegen',
        'choose_organizer': 'Kies een organisatie',
        'organizer_not_found': 'Organisatie niet gevonden?',
        'add_new_organizer': 'Nieuwe organisator toevoegen',
        'organizer_error': 'Er ging iets fout bij het opslaan van de organisator.',
        'contact': 'Contact & reservatie',
        'add_contact': 'Contactinformatie toevoegen',
        'website': 'Website',
        'phone': 'Telefoonnummer',
        'e-mail': 'E-mailadres',
        'use_booking': 'Gebruik voor reservatie',
        'booking_exposure': 'Hoe mag deze link verschijnen?',
        'buy_tickets': 'Koop tickets',
        'reserve_places': 'Reserveer plaatsen',
        'check_availability': 'Controleer beschikbaarheid',
        'subscribe': 'Schrijf je in',
        'add_more_contact': 'Meer contactgegevens toevoegen',
        'contact_error': 'Er ging iets fout bij het opslaan van de contact info.',
        'facilities': 'Toegankelijkheid',
        'add_facility': 'Voorzieningen toevoegen',
        'facility_inapplicable': 'Niet van toepassing',
        'change': 'Wijzigen',
        'image_help': 'Voeg een afbeelding toe zodat je bezoekers je activiteit beter herkennen.',
        'images': 'Afbeeldingen',
        'copyright': 'Copyright',
        'delete': 'Verwijderen',
        'main_image': 'Maak hoofdafbeelding',
        'add_image': 'Afbeelding toevoegen',
        age: {
          'age_label': 'Geschikt voor',
          'All ages': 'Alle leeftijden',
          'Toddlers': 'Peuters',
          'Preschoolers': 'Kleuters',
          'Kids': 'Kinderen',
          'Youngsters': 'Jongeren',
          'Adults': 'Volwassenen',
          'Seniors': 'Senioren',
          'Custom': 'Andere',
          'from': 'Van',
          'till': 'tot',
          'age': 'jaar'
        },
        priceInfo: {
          'price_label': 'Prijs',
          'add_prices': 'Prijzen toevoegen',
          'free': 'Gratis',
          'prices': 'Prijzen',
          'change': 'Wijzigen',
          'currency': 'euro'
        },
        reservationPeriod: {
          'add_reservation_period': 'Reservatieperiode toevoegen',
          'reservation_period': 'Reservatie periode',
          'from': 'Van',
          'till': 'Tot'
        }
      },
      publish: {
        'publish_now': 'Meteen publiceren',
        'publish_later': 'Later publiceren',
        'edit_done': 'Klaar met bewerken',
        'online_from': 'Online vanaf'
      },
      timeTracker: {
        'automatic_saved': 'Automatisch bewaard om',
        'hour': 'uur',
      },
      embargo: {
        'title': 'Kies een publicatiedatum',
        'help': 'Vanaf wanneer mag dit online verschijnen? <em class="text-info"><i class="fa fa-exclamation-circle" aria-hidden="true"></i> Opgelet, deze datum kan je maar één keer instellen.</em>',
        'error_past': 'Een publicatiedatum kan niet in het verleden liggen.',
        'error_empty': 'Kies een publicatiedatum.',
        'cancel': 'Annuleren',
        'ready': 'Klaar met bewerken'
      }
    },
    calendar: {
      'one_more_days': 'Eén of meerdere dagen',
      'or': 'of',
      'default_days': 'Vaste dagen per week',
      'start_label': 'Start',
      'end_label': 'Einde',
      'whole_day_label': 'Hele dag',
      'start_hour_label': 'Beginuur',
      'end_hour_label': 'Einduur',
      'add_days': 'Dag(en) toevoegen',
      period: {
        'title': 'Start- en einddatum',
        'from': 'Van',
        'till': 'Tot',
        'alert': 'Geef zowel een begin- als einddatum in. De einddatum kan niet voor de begindatum vallen.'
      },
      openingHours: {
        'permanent_title': '24/24, 7/7',
        'permanent_subtitle': 'Elke dag, ieder uur',
        'add_hours': 'Uren toevoegen',
        'opening_hours': 'Openingsuren',
        'change': 'Wijzigen',
        'days': 'Dagen',
        'from': 'Van',
        'till': 'Tot',
        'more_hours': 'Meer openingstijden toevoegen',
        'cancel': 'Annuleren',
        'save': 'Opslaan'
      }
    },
    'facilityLabel': {
      'motor': 'Voorzieningen voor personen met een motorische beperking',
      'visual': 'Voorzieningen voor personen met een visuele beperking',
      'hearing': 'Voorzieningen voor personen met een auditieve beperking',
      'other': 'Andere voorzieningen',
      'place': 'Voorzieningen op deze locatie',
      'mental': 'Voorzieningen voor personen met een verstandelijke beperking'
    },
    audience: {
      'entrance': 'Toegang',
      'everyone': 'Voor iedereen',
      'members': 'Enkel voor leden',
      'members_help': 'Je item wordt enkel gepubliceerd op kanalen voor verenigingen en hun leden.',
      'education': 'Specifiek voor scholen',
      'education_help': 'Je item wordt enkel gepubliceerd op cultuureducatieve kanalen zoals cultuurkuur.be. Na het publiceren kan je nog specifieke informatie voor scholen toevoegen.'
    },
    workflowStatus: {
      'label': 'Publicatiestatus',
      'id': 'ID',
      'DRAFT': 'Niet gepubliceerd',
      'READY_FOR_VALIDATION': 'Gepubliceerd',
      'APPROVED': 'Gepubliceerd',
      'REJECTED': 'Publicatie afgewezen',
      'DELETED': 'Niet gepubliceerd',
      'rules': 'Bekijk de regels',
      'rejected_full': 'Dit item werd afgewezen voor publicatie.'
    },
    queryFieldGroup: {
      'what': 'Wat',
      'where': 'Waar',
      'when': 'Wanneer',
      'input-information': 'Invoerdersinformatie',
      'translations': 'Vertalingen',
      'other': 'Andere'
    },
    'queryFieldLabel': {
      'cdbid': 'identificatiecode (CDBID)',
      'offertype': 'type (aanbod)',
      'keywords': 'label',
      'title': 'titel',
      'category_eventtype_name': 'type (activiteit)',
      'locationtype': 'type (locatie)',
      'category_theme_name': 'thema',
      'text': 'tekst',
      'city': 'gemeente (naam)',
      'zipcode': 'postcode',
      'location_id': 'locatie (id)',
      'country': 'land',
      'location_label': 'locatie (naam)',
      'category_flandersregion_name': 'regio / gemeente',
      'date': 'datum',
      'permanent': 'permanent',
      'lastupdated': 'laatst aangepast',
      'creationdate': 'gecreëerd',
      'createdby': 'gecreëerd door',
      'availablefrom': 'datum beschikbaar',
      'detail_lang': 'vertaling',
      'organiser_keywords': 'label organisatie',
      'organiser_id': 'organisatie (id)',
      'agefrom': 'leeftijd',
      'price': 'prijs',
      'organiser_label': 'organisatie (naam)',
      'category_facility_name': 'voorzieningen',
      'category_targetaudience_name': 'doelgroep',
      'startdate': 'startdatum',
      'enddate': 'einddatum',
      'lastupdatedby': 'laatst aangepast door',
      'category_publicscope_name': 'publieksbereik'
    },
    'EVENT-EXPORT': {
      'QUERY-IS-MISSING': 'Een export is pas mogelijk nadat je een zoekopdracht hebt uitgevoerd',
      'TOO-MANY-ITEMS': 'Een manuele export met meer dan {{limit}} items is niet mogelijk. Contacteer vragen@uitdatabank.be voor een oplossing op maat.'
    },
    'AANBOD_INVOEREN': 'Aanbod invoeren',
    'AANBOD_BEWERKEN': 'Aanbod bewerken',
    'AANBOD_MODEREREN': 'Aanbod modereren',
    'AANBOD_VERWIJDEREN': 'Aanbod verwijderen',
    'ORGANISATIES_BEHEREN': 'Organisaties beheren',
    'GEBRUIKERS_BEHEREN': 'Gebruikers beheren',
    'LABELS_BEHEREN': 'Labels beheren',
    'VOORZIENINGEN_BEWERKEN': 'Voorzieningen bewerken',
    'ORGANISATIES_BEWERKEN': 'Organisaties bewerken',
    'event type missing': 'Koos je een type in <a href="#wat" class="alert-link">stap 1</a>?',
    'timestamp missing': 'Koos je een datum in <a href="#wanneer" class="alert-link">stap 2</a>?',
    'start or end date missing': 'Koos je een begin- en einddatum in <a href="#wanneer" class="alert-link">stap 2</a>?',
    'when missing': 'Maakte je een keuze in <a href="#wanneer" class="alert-link">stap 2</a>?',
    'place missing for event': 'Koos je een plaats in <a href="#waar" class="alert-link">stap 3</a>?',
    'location missing for place': 'Koos je een locatie in <a href="#waar" class="alert-link">stap 3</a>?',
    'title is missing': 'Gaf je je aanbod een titel in <a href="#titel" class="alert-link">stap 4</a>?',
    'UNIQUE_ORGANIZER_NOTICE': 'Om organisaties in de UiTdatabank uniek bij te houden, vragen we elke organisatie een unieke & geldige hyperlink.',
    'OPENING_HOURS_ERROR': {
      'openAndClose': 'Vul alle openings- en sluitingstijden in.',
      'dayOfWeek': 'Kies minstens één dag in elke rij die je toevoegde.',
      'openIsBeforeClose': 'Gelieve een sluitingstijd in te geven die later is dan de openingstijd.'
    },
    'TIME_SPAN_REQUIREMENTS': {
      'timedWhenNotAllDay': 'Een eind- en beginuur zijn verplicht wanneer een evenement niet de hele dag duurt.',
      'startBeforeEndDay': 'De einddatum kan niet voor de begindatum vallen.',
      'startBeforeEnd': 'Het einduur kan niet voor het beginuur vallen.'
    },
    uitpas: {
      uitpasInfo: {
        'uitpas': 'UiTPAS',
        'uitpas_alert': 'Dit is een UiTPAS organisator. Selecteer een prijs om specifieke UiTPAS-informatie toe te voegen.',
        'uitpas_info': 'Dit is een UiTPAS activiteit.',
        'cantChangePrice': 'Voor dit evenement zijn al UiTPAS-tickets verkocht met de bestaande prijsinformatie. Je kan de prijsinformatie niet meer wijzigen.',
        'cantChangeOrganiser': 'Voor dit evenement zijn al UiTPAS-tickets verkocht. Je kan de organisatie niet meer wijzigen.',
        'unavailable': 'UiTPAS kan momenteel niet bereikt worden, probeer het later opnieuw of contacteer de helpdesk (vragen@uitdatabank.be).'
      },
      cardSystems: {
        'card_systems': 'Kaartsystemen',
        'choose': '--Selecteer een verdeelsleutel--',
        'retry': 'Opnieuw registreren',
        'unavailable': 'kan UiTPAS momenteel niet bereiken, probeer het later opnieuw of contacteer de helpdesk (vragen@uitdatabank.be)'
      }
    },
    images: {
      'agreement': 'Je staat op het punt (een) afbeelding(en) toe te voegen en openbaar te verspreiden. Je dient daartoe alle geldende auteurs- en portretrechten te respecteren, alsook alle andere toepasselijke wetgeving. Je kan daarvoor aansprakelijk worden gehouden, zoals vastgelegd in de',
      'conditions': 'algemene voorwaarden',
      'copyright_info': 'Meer informatie over copyright',
      'description': 'Beschrijving',
      'copyright': 'Copyright',
      'copyright_help': 'Vermeld de naam van de rechtenhoudende fotograaf. Vul alleen de naam van je eigen vereniging of organisatie in als je zelf de rechten bezit (minimum 3 karakters).',
      'cancel': 'Annuleren',
      'agree': 'Akkoord',
      upload: {
        'select_image': 'Selecteer je foto',
        'choose_file': 'Kies bestand',
        'max_filesize': 'De maximale grootte van je afbeelding is {{maxFileSize}} en heeft als type .jpeg, .gif of .png',
        'upload': 'Opladen'
      },
      edit: {
        'title': 'Afbeelding info bewerken',
        'description_help': 'Een goede beschrijving van je afbeelding wordt gelezen door zoekmachines en gebruikers met een visuele beperking.',
        'save_error': 'Er ging iets mis bij het opslaan van de afbeelding.',
        'update': 'Bijwerken'
      },
      remove: {
        'title': 'Afbeeldingen verwijderen',
        'sure': 'Ben je zeker dat je deze afbeelding wil verwijderen?',
        'save_error': 'Er ging iets mis bij het verwijderen van de afbeelding.',
      }
    },
    organizer: {
      modal: {
        'title': 'Nieuwe organisatie toevoegen',
        'avoid_doubles': 'Vermijd dubbel werk',
        'unique_notice': 'Om organisaties in de UiTdatabank uniek bij te houden, vragen we elke organisatie een unieke & geldige hyperlink.',
        'website': 'Website',
        'alert_warning': 'Dit adres is al gebruikt door de organisatie \'{{organizerName}}\'. Geef een unieke website of',
        'alert_button': 'gebruik {{organizerName}} als organisatie',
        'name_help': 'De officiële publieke naam van de organisatie.',
        'name_required': 'Gelieve een naam in te vullen',
        'add_confirm': 'Ben je zeker dat je \"{{newOrganizerName}}\" wil toevoegen als organisatie? Dubbele invoer van organisaties is niet toegelaten.',
        'doubles': 'We vonden deze gelijkaardige items:',
        'select': 'Selecteren',
        'your_input': 'Jij voerde in:',
        'still_enter': 'Toch invoeren',
        'save_error': 'Er ging iets fout tijdens het opslaan van je organisatie.',
        'address_error': 'Gelieve een geldig adres in te vullen.',
        'contact_error': 'Gelieve alle contactinfo correct in te vullen.',
        'close': 'Sluiten',
        'save': 'Bewaren',
        'label_name': 'Naam'
      },
      address: {
        'label_street': 'Straat en nummer',
        'help_street': 'Gelieve straat en nummer in te geven.',
        'label_city': 'Gemeente',
        'label_residence': 'Woonplaats',
        'help_city': 'Er was een probleem tijdens het ophalen van de steden.',
        'error_city': 'Gelieve een gemeente in te geven.',
        'change': 'Wijzigen',
        'zip': 'Postcode'
      },
      contact: {
        'title': 'Contact',
        'enter_url': 'Geef een URL in',
        'enter_email': 'Geef een e-mailadres in',
        'enter_phone': 'Geef een telefoonnummer in<small class="text-muted">, bv. 011 32 43 54</small>',
        'required': 'Gelieve dit veld niet leeg te laten.',
        'valid_url': 'Gelieve een geldige url in te vullen.',
        'valid_email': 'Gelieve een geldig e-mailadres in te vullen.',
        'valid_phone': 'Gelieve een geldig telefoonnummer in te vullen.',
        'cancel': 'Annuleren',
        'add': 'Toevoegen',
        'add_phone': 'Telefoonnummer toevoegen',
        'add_email': 'E-mailadres toevoegen',
        'add_url': 'Andere website toevoegen'
      }
    },
    duplicate: {
      title: 'Kopiëren en aanpassen',
      description: 'Je staat op het punt een evenement te kopiëren. Kies een tijdstip voor dit evenement.',
      error: 'Er ging iets mis tijdens het aanmaken van een kopie!'
    },
    dashboard: {
      'welcome': 'Welkom,',
      'no_items': 'Je hebt nog geen items toegevoegd.',
      'add_activity': 'Een activiteit of locatie toevoegen?',
      'recent': 'Recent',
      'add': 'Toevoegen',
      directive: {
        'no_publish': 'Niet gepubliceerd!',
        'online': 'Online op',
        'edit': 'Bewerken',
        'example': 'Voorbeeld',
        'delete': 'Verwijderen',
        'expired_event': 'Afgelopen evenement'
      },
      delete: {
        'sure': 'Ben je zeker dat je \"{{name}}\" wil verwijderen?',
        'error_location': 'De locatie \"{{name}}\" kan niet verwijderd worden omdat er activiteiten gepland zijn.',
        'error': 'Er ging iets fout bij het verwijderen van de activiteit.',
        'cancel': 'Annuleren',
        'delete': 'Verwijderen'
      }
    },
    offerTypes: {
      'Concert': 'Concert',
      'Theatervoorstelling': 'Theatervoorstelling',
      'Lezing of congres': 'Lezing of congres',
      'Dansvoorstelling': 'Dansvoorstelling',
      'Festival': 'Festival',
      'Film': 'Film',
      'Sportwedstrijd bekijken': 'Sportwedstrijd bekijken',
      'Cursus of workshop': 'Cursus of workshop',
      'Sport en beweging': 'Sport en beweging',
      'Kamp of vakantie': 'Kamp of vakantie',
      'Begeleide rondleiding': 'Begeleide  rondleiding',
      'Route': 'Route',
      'Spel of quiz': 'Spel of quiz',
      'Party of fuif': 'Party of fuif',
      'Kermis of feestelijkheid': 'Kermis of feestelijkheid',
      'Congres of studiedag': 'Congres of studiedag',
      'Eten en drinken': 'Eten en drinken',
      'Thema of pretpark': 'Thema of pretpark',
      'Theater': 'Theater',
      'Jeugdhuis of jeugdcentrum': 'Jeugdhuis of jeugdcentrum',
      'Cultuur- of ontmoetingscentrum': 'Cultuur- of ontmoetingscentrum',
      'Discotheek': 'Discotheek',
      'Bibliotheek of documentatiecentrum': 'Bibliotheek of documentatiecentrum',
      'Bioscoop': 'Bioscoop',
      'Horeca': 'Horeca',
      'Openbare ruimte': 'Openbare ruimte',
      'Tentoonstelling': 'Tentoonstelling',
      'Markt of braderie': 'Markt of braderie',
      'Natuur, park of tuin': 'Natuur, park of tuin',
      'Beurs': 'Beurs',
      'Monument': 'Monument',
      'Opendeurdag': 'Opendeurdag',
      'Recreatiedomein of centrum': 'Recreatiedomein of centrum',
      'Park of tuin': 'Park of tuin',
      'Archeologische Site': 'Archeologische Site',
      'School of onderwijscentrum': 'School of onderwijscentrum',
      'Sportcentrum': 'Sportcentrum',
      'Winkel': 'Winkel',
      'Museum of galerij': 'Museum of galerij',
      'Zaal of expohal': 'Zaal of expohal'
    },
    offerThemes: {
      'Antiek en brocante': 'Antiek en brocante',
      'Architectuur': 'Architectuur',
      'Audiovisuele kunst': 'Audiovisuele kunst',
      'Beeldhouwkunst': 'Beeldhouwkunst',
      'Fotografie': 'Fotografie',
      'Grafiek': 'Grafiek',
      'Installatiekunst': 'Installatiekunst',
      'Schilderkunst': 'Schilderkunst',
      'Decoratieve kunst': 'Decoratieve kunst',
      'Design': 'Design',
      'Mode': 'Mode',
      'Meerdere kunstvormen': 'Meerdere kunstvormen',
      'Ballet en klassieke dans': 'Ballet en klassieke dans',
      'Volksdans en werelddans': 'Volksdans en werelddans',
      'Stijl en salondansen': 'Stijl en salondansen',
      'Moderne dans': 'Moderne dans',
      'Erfgoed': 'Erfgoed',
      'Actie en avontuur': 'Actie en avontuur',
      'Animatie en kinderfilms': 'Animatie en kinderfilms',
      'Documentaires en reportages': 'Documentaires en reportages',
      'Griezelfilm of horror': 'Griezelfilm of horror',
      'Historische film': 'Historische film',
      'Komedie': 'Komedie',
      'Kortfilm': 'Kortfilm',
      'Filmmusical': 'Filmmusical',
      'Drama': 'Drama',
      'Science fiction': 'Science fiction',
      'Cinefiel': 'Cinefiel',
      'Thriller': 'Thriller',
      'Meerdere filmgenres': 'Meerdere filmgenres',
      'Geschiedenis': 'Geschiedenis',
      'Gezondheid en wellness': 'Gezondheid en wellness',
      'Landbouw en platteland': 'Landbouw en platteland',
      'Milieu en natuur': 'Milieu en natuur',
      'Literatuur': 'Literatuur',
      'Poëzie': 'Poëzie',
      'Fictie': 'Fictie',
      'Non fictie': 'Non fictie',
      'Strips': 'Strips',
      'Klassieke muziek': 'Klassieke muziek',
      'Jazz en blues': 'Jazz en blues',
      'Pop en rock': 'Pop en rock',
      'Hiphop, r&b en rap': 'Hiphop, r&b en rap',
      'Dance': 'Dance',
      'Folk en wereldmuziek': 'Folk en wereldmuziek',
      'Amusementsmuziek': 'Amusementsmuziek',
      'Politiek en maatschappij': 'Politiek en maatschappij',
      'Creativiteit': 'Creativiteit',
      'Computer en techniek': 'Computer en techniek',
      'Opvoeding': 'Opvoeding',
      'Persoon en relaties': 'Persoon en relaties',
      'Interculturele vorming': 'Interculturele vorming',
      'Kunst en kunsteducatie': 'Kunst en kunsteducatie',
      'Gezondheid en zorg': 'Gezondheid en zorg',
      'Samenleving': 'Samenleving',
      'Bal en racketsport': 'Bal en racketsport',
      'Atletiek, wandelen en fietsen': 'Atletiek, wandelen en fietsen',
      'Zwemmen en watersport': 'Zwemmen en watersport',
      'Fitness, gymnastiek, dans en vechtsport': 'Fitness, gymnastiek, dans en vechtsport',
      'Outdoor en adventure': 'Outdoor en adventure',
      'Lucht en motorsport': 'Lucht en motorsport',
      'Volkssporten': 'Volkssporten',
      'Omnisport en andere': 'Omnisport en andere',
      'Tekst- en muziektheater': 'Tekst- en muziektheater',
      'Humor en comedy': 'Humor en comedy',
      'Musical': 'Musical',
      'Figuren en poppentheater': 'Figuren en poppentheater',
      'Opera en operette': 'Opera en operette',
      'Mime en bewegingstheater': 'Mime en bewegingstheater',
      'Wetenschap': 'Wetenschap',
      'Zingeving, filosofie en religie': 'Zingeving, filosofie en religie',
      'Thema onbepaald': 'Thema onbepaald',
      'Circus': 'Circus',
      'Voeding': 'Voeding',
      'Economie': 'Economie',
      'Avontuur': 'Avontuur',
      'Natuur': 'Natuur',
      'Sport': 'Sport',
      'Technologie': 'Technologie',
      'Koken': 'Koken'
    },
    offerThemesGroups: {
      'Dans': 'Dans',
      'Kunst en erfgoed': 'Kunst en erfgoed',
      'Muziek': 'Muziek',
      'Sport': 'Sport',
      'Varia': 'Varia'
    },
    weekdays: {
      monday: {
        label: 'Ma',
        name: 'Maandag'
      },
      tuesday: {
        label: 'Di',
        name: 'Dinsdag'
      },
      wednesday: {
        label: 'Wo',
        name: 'Woensdag'
      },
      thursday: {
        label: 'Do',
        name: 'Donderdag'
      },
      friday: {
        label: 'Vr',
        name: 'Vrijdag'
      },
      saturday: {
        label: 'Za',
        name: 'Zaterdag'
      },
      sunday: {
        label: 'Zo',
        name: 'Zondag'
      }
    }
  }
);
})();

// Source: src/core/translations/french-translations.constant.js
(function () {
'use strict';
// jscs:disable maximumLineLength

/**
 * @ngdoc service
 * @name udbApp.udbFrenchTranslations
 * @description
 * # udbFrenchTranslations
 * Constant in the udbApp.
 */
angular.module('udb.core')
  .constant('udbFrenchTranslations',
  {
    'BE': 'Belgique',
    'NL': 'Pays-Bas',
    'EN_ADJECTIVE': 'Anglais',
    'FR_ADJECTIVE': 'Français',
    'DE_ADJECTIVE': 'Duitse',
    'NL_ADJECTIVE': 'Nederlandse',
    'datepicker': {
      'CURRENT': 'Aujourd\'hui',
      'CLEAR': 'Supprimer',
      'CLOSE': 'Fermer'
    },
    '=': 'égale',
    '><': 'entre',
    '+': 'égale',
    '!': 'n\'égale pas',
    '-': 'n\'égale pas',
    '>': 'est plus grand ou égal',
    '<': 'est plus petit ou égal',
    '>_DATE': 'plus tard que',
    '<_DATE': 'plus tôt que',
    '=_DATE': 'égale',
    '><_DATE': 'entre',
    'choix': {
      'everyone': 'tout le monde',
      'members': 'membres',
      'education': 'éducation',
      'asc': 'ascendant',
      'desc': 'descendant',
      'today': 'aujourd\'hui',
      'tomorrow': 'demain',
      'thisweekend': 'ce week-end',
      'nextweekend': 'le week-end prochain',
      'next7days': 'les 7 jours suivants',
      'next14days': 'les 14 jours suivants',
      'next30days': 'les 30 jours suivants',
      'next3months': 'les 3 mois suivants',
      'next6months': 'les 6 mois suivants',
      'next12months': 'les 12 mois suivants',
      'permanent': 'permanent',
      'event': 'événement',
      'place': 'location',
      'actor': 'acteur',
      'production': 'production',
      'nl': 'néerlandais',
      'fr': 'français',
      'en': 'anglais',
      'de': 'allemand',
      'AF': 'Afghanistan',
      'AX': 'Îles Åland',
      'AL': 'Albanie',
      'DZ': 'Algérie',
      'AS': 'Samoa américaines',
      'VI': 'Îles Vierges des États-Unis',
      'UM': 'Îles mineures éloignées des États-Unis',
      'AD': 'Andorre',
      'AO': 'Angola',
      'AI': 'Anguilla',
      'AQ': 'Antarctique',
      'AG': 'Antigua-et-Barbuda',
      'AR': 'Argentine',
      'AM': 'Arménie',
      'AW': 'Aruba',
      'AU': 'Australie',
      'AZ': 'Azerbaïdjan',
      'BS': 'Bahamas',
      'BH': 'Bahreïn',
      'BD': 'Bangladesh',
      'BB': 'Barbade',
      'BE': 'Belgique',
      'BZ': 'Belize',
      'BJ': 'Bénin',
      'BM': 'Bermudes',
      'BT': 'Bhoutan',
      'BO': 'Bolivie',
      'BA': 'Bosnie-Herzégovine',
      'BW': 'Botswana',
      'BV': 'Île Bouvet',
      'BR': 'Brésil',
      'IO': 'Territoire britannique de l\'océan Indien',
      'VG': 'Îles Vierges britanniques',
      'BN': 'Brunei',
      'BG': 'Bulgarie',
      'BF': 'Burkina Faso',
      'BI': 'Burundi',
      'KH': 'Cambodge',
      'CA': 'Canada',
      'KY': 'Îles Caïmans',
      'CF': 'République centrafricaine',
      'CL': 'Chili',
      'CN': 'Chine',
      'CX': 'Île Christmas',
      'CC': 'Îles Cocos',
      'CO': 'Colombie',
      'KM': 'Comores',
      'CG': 'République du Congo',
      'CD': 'République démocratique du Congo',
      'CK': 'Îles Cook',
      'CR': 'Costa Rica',
      'CU': 'Cuba',
      'CY': 'Chypre',
      'DK': 'Danemark',
      'DJ': 'Djibouti',
      'DM': 'Dominique',
      'DO': 'République dominicaine',
      'DE': 'Allemagne',
      'EC': 'Équateur',
      'EG': 'Égypte',
      'SV': 'Salvador',
      'GQ': 'Guinée équatoriale',
      'ER': 'Érythrée',
      'EE': 'Estonie',
      'ET': 'Éthiopie',
      'FO': 'Îles Féroé',
      'FK': 'Malouines',
      'FJ': 'Fidji',
      'PH': 'Philippines',
      'FI': 'Finlande',
      'FR': 'France',
      'GF': 'Guyane',
      'PF': 'Polynésie française',
      'TF': 'Terres australes et antarctiques françaises',
      'GA': 'Gabon',
      'GM': 'Gambie',
      'GE': 'Géorgie',
      'GH': 'Ghana',
      'GI': 'Gibraltar',
      'GD': 'Grenade',
      'GR': 'Grèce',
      'GL': 'Groenland',
      'GP': 'Guadeloupe',
      'GU': 'Guam',
      'GT': 'Guatemala',
      'GG': 'Guernesey',
      'GN': 'Guinée',
      'GW': 'Guinée-Bissau',
      'GY': 'Guyana',
      'HT': 'Haïti',
      'HM': 'Îles Heard-et-MacDonald',
      'IM': 'Île de Man',
      'HN': 'Honduras',
      'HU': 'Hongrie',
      'HK': 'Hong Kong',
      'IS': 'Islande',
      'IE': 'Irlande ',
      'IN': 'Inde',
      'ID': 'Indonésie',
      'IQ': 'Irak',
      'IR': 'Iran',
      'IL': 'Israël',
      'IT': 'Italie',
      'CI': 'Côte d\'Ivoire',
      'JM': 'Jamaïque',
      'JP': 'Japon',
      'YE': 'Yémen',
      'JE': 'Jersey',
      'JO': 'Jordanie',
      'CV': 'Cap-Vert',
      'CM': 'Cameroun',
      'KZ': 'Kazakhstan',
      'KE': 'Kenya',
      'KG': 'Kirghizistan',
      'KI': 'Kiribati',
      'KW': 'Koweït',
      'HR': 'Croatie',
      'LA': 'Laos',
      'LS': 'Lesotho',
      'LV': 'Lettonie',
      'LB': 'Liban',
      'LR': 'Liberia',
      'LY': 'Libye',
      'LI': 'Liechtenstein',
      'LT': 'Lituanie',
      'LU': 'Luxembourg',
      'MO': 'Macao',
      'MK': 'République de Macédoine',
      'MG': 'Madagascar',
      'MW': 'Malawi',
      'MV': 'Maldives',
      'MY': 'Malaisie',
      'ML': 'Mali',
      'MT': 'Malte',
      'MA': 'Maroc',
      'MH': 'Îles Marshall',
      'MQ': 'Martinique',
      'MR': 'Mauritanie',
      'MU': 'Maurice',
      'YT': 'Mayotte',
      'MX': 'Mexique',
      'FM': 'Micronésie',
      'MD': 'Moldavie',
      'MC': 'Monaco',
      'MN': 'Mongolie',
      'ME': 'Monténégro',
      'MS': 'Montserrat',
      'MZ': 'Mozambique',
      'MM': 'Birmanie',
      'NA': 'Namibie',
      'NR': 'Nauru',
      'NL': 'Pays-Bas',
      'AN': 'Antilles néerlandaises',
      'NP': 'Népal',
      'NI': 'Nicaragua',
      'NC': 'Nouvelle-Calédonie',
      'NZ': 'Nouvelle-Zélande',
      'NE': 'Niger',
      'NG': 'Nigeria',
      'NU': 'Niue',
      'KP': 'Corée du Nord',
      'MP': 'Îles Mariannes du Nord',
      'NO': 'Norvège',
      'NF': 'Île Norfolk',
      'UG': 'Ouganda',
      'UA': 'Ukraine',
      'UZ': 'Ouzbékistan',
      'OM': 'Oman',
      'ZZ': 'Inconnu',
      'TL': 'Timor oriental',
      'AT': 'Autriche',
      'PK': 'Pakistan',
      'PW': 'Palaos',
      'PS': 'Palestine',
      'PA': 'Panama',
      'PG': 'Papouasie-Nouvelle-Guinée',
      'PY': 'Paraguay',
      'PE': 'Pérou',
      'PN': 'Îles Pitcairn',
      'PL': 'Pologne',
      'PT': 'Portugal',
      'PR': 'Porto Rico',
      'QA': 'Qatar',
      'RO': 'Roumanie',
      'RU': 'Russie',
      'RW': 'Rwanda',
      'RE': 'La Réunion',
      'BL': 'Saint-Barthélemy',
      'KN': 'Saint-Christophe-et-Niévès',
      'LC': 'Sainte-Lucie',
      'PM': 'Saint-Pierre-et-Miquelon',
      'VC': 'Saint-Vincent-et-les Grenadines',
      'SB': 'Salomon',
      'WS': 'Samoa',
      'SM': 'Saint-Marin',
      'ST': 'Sao Tomé-et-Principe',
      'SA': 'Arabie saoudite',
      'SN': 'Sénégal',
      'RS': 'Serbie',
      'CS': 'Serbie-et-Monténégro, ',
      'SC': 'Seychelles',
      'SL': 'Sierra Leone',
      'SG': 'Singapour',
      'SH': 'Sainte-Hélène, Ascension et Tristan da Cunha',
      'MF': 'Saint-Martin',
      'SI': 'Slovénie',
      'SK': 'Slovaquie',
      'SD': 'Soudan',
      'SO': 'Somalie',
      'ES': 'Espagne',
      'LK': 'Sri Lanka',
      'SR': 'Suriname',
      'SJ': 'Svalbard et ile Jan Mayen',
      'SZ': 'Swaziland',
      'SY': 'Syrie',
      'TJ': 'Tadjikistan',
      'TW': 'Taïwan / (République de Chine (Taïwan))',
      'TZ': 'Tanzanie',
      'TH': 'Thaïlande',
      'TG': 'Togo',
      'TK': 'Tokelau',
      'TO': 'Tonga',
      'TT': 'Trinité-et-Tobago',
      'TD': 'Tchad',
      'CZ': 'Tchéquie',
      'TN': 'Tunisie',
      'TR': 'Turquie',
      'TM': 'Turkménistan',
      'TC': 'Îles Turques-et-Caïques',
      'TV': 'Tuvalu',
      'UY': 'Uruguay',
      'VU': 'Vanuatu',
      'VA': 'Saint-Siège(État de la Cité du Vatican)',
      'VE': 'Venezuela',
      'GB': 'Royaume-Uni',
      'AE': 'Émirats arabes unis',
      'US': 'États-Unis',
      'VN': 'Viêt Nam',
      'WF': 'Wallis-et-Futuna',
      'EH': 'République arabe sahraouie démocratique',
      'BY': 'Biélorussie',
      'ZM': 'Zambie',
      'ZW': 'Zimbabwe',
      'ZA': 'Afrique du Sud',
      'GS': 'Géorgie du Sud-et-les Îles Sandwich du Sud',
      'KR': 'Corée du Sud',
      'SE': 'Suède',
      'CH': 'Suisse'
    },
    property: {
      'name': 'Titre',
      'description': 'Description',
      'labels': 'Labels',
      'calendarSummary': 'Aperçu du calendre',
      'image': 'Image',
      'location': 'Location',
      'address': 'Adresse',
      'organizer': 'Organisateur',
      'priceInfo': 'Information du prix',
      'kansentarief': 'Allocataires sociaux',
      'bookingInfo': 'Info réservation',
      'contactPoint': 'Info contact',
      'creator': 'Auteur',
      'terms.theme': 'Thème',
      'terms.eventtype': 'Type',
      'created': 'Date création',
      'modified': 'Date dernière modification',
      'publisher': 'Auteur',
      'available': 'Disponible',
      'endDate': 'Date fin',
      'startDate': 'Date départ',
      'calendarType': 'Type temps',
      'sameAs': 'IDs externes',
      'typicalAgeRange': ' ge',
      'language': 'Langue',
      'audience': 'Accès'
    },
    preview: {
      tabs: {
        'data': 'Données',
        'history': 'Historique',
        'publication': 'Publication'
      },
      'not_found': 'Page introuvable',
      'not_found_help': 'Cette page n\'a pas pu être trouvée.',
      'loading': 'Chargement...',
      'edit': 'Modifier',
      'duplicate': 'Copier et modifier',
      'delete': 'Supprimer',
      'title': 'Titre',
      'type': 'Type',
      'entrance': 'Entrée',
      'description': 'Description',
      'no_description': 'Aucune description',
      'where': 'Où',
      'when': 'Quand',
      'labels': 'Labels',
      'labels_error': 'Le label \'{{labelName}}\' n\'a pas pu être ajouté.',
      'labels_success': 'Le label \'{{addedLabel}}\' a été ajouté avec succès.',
      'organizer': 'Organisation',
      'no_organizer': 'Pas d\'information de l\'organisation',
      'price': 'Prix',
      'free': 'Gratis',
      'currency': 'euro',
      'no_price': 'Pas d\'information du prix',
      'age_label': 'Adapté à',
      'all_ages': 'Tous les âges',
      'no_age': 'Pas d\'information de l\'âge',
      'publiq_url': 'Voir sur UiT in Vlaanderen',
      'translate': 'Traduire'
    },
    translate: {
      'ready': 'Prêt à traduire',
      'translate': 'traduire',
      'original': 'Original',
      'translation': 'Traduction',
      'description': 'Description',
      'title': 'Titre',
      'tariff': 'Prix',
      'address': 'Adres',
      'street': 'Rue et numéro'
    },
    labels: {
      'what': 'Ajoutez des mots clés courts et spécifiques.',
      'invalid': 'Cela semble être un label invalide. Un label ',
      'chars': 'se compose uniquement de lettres ou de chiffres',
      'excluded': 'ne contient que \'-\' et \'_\', mais ne peut pas commençer avec ces caractères',
      'length': 'compte de 2 à 50 caractères'
    },
    calendarSummary: {
      'openinghours': 'plusieurs moments',
      'from': 'De',
      'till': 'à',
      'permanent': 'Permanent'
    },
    moderate: {
      'validate': 'Valider',
      'approve': 'Approuver',
      'approved': 'Approuvé',
      'reject': 'Rejeter',
      'rejected': 'Rejeté',
      'continue_validation': 'Continuer la validation'
    },
    cultuurkuur: {
      'info': 'Cet événement contient <a target=\"_blank\" href=\"{{previewLink}}\">de l\'information extra</a> pour les écoles et les enseignants.',
      'subject': 'Sujet',
      'target_group': 'Public cible',
      'levels': 'Adapté à',
      'grades': 'degrés d\'éducation',
      'edit_link': 'Modifier sur cultuurkuur.be',
      'incomplete_help': 'Introduisez cet événement sur cultuurkuur.be avec de l\'information extra pour les écoles et les enseignants.',
      'continue': 'Continuer'
    },
    booking: {
      'label': 'Réservation',
      'no_booking': 'Pas d\'information de réservation'
    },
    contact: {
      'label': 'Contact',
      'or': 'ou',
      'no_contact': 'Pas d\'information du contact'
    },
    imageDetail: {
      'label': 'Images',
      'alt_image': 'Image {{index}}',
      'main_image': 'Image principale',
      'no_images': 'Pas d\'images'
    },
    prices: {
      'title': 'Ajouter des prix',
      'base': 'Tarif de base',
      'target_group': 'Public cible',
      'free': 'Gratuit',
      'currency': 'euro',
      'add_price': 'Ajouter prix',
      'add_tarriff': 'Ajouter tarif',
      'error': 'Il y a eu une erreur dans l\'enregistrement du prix.',
      'invalid': 'Cette information du prix semble invalide et ne peut pas être enregistrée.',
      'invalid_tip1': 'Notez les décimales avec une virgule.',
      'invalid_tip2': 'Ne laissez aucune ligne vide, remplissez toujours un public cible et un montant.',
      'invalid_tip3': 'Donnez au maximum deux chiffres après la virgule.',
      'close': 'Fermer',
      'save': 'Sauver'
    },
    location: {
      'title': 'Ajouter une nouvelle location',
      'name': 'Nom location',
      'name_validation': 'Le nom de la location est un domaine obligatoire.',
      'street': 'Rue et numéro',
      'street_validation': 'Rue est un domaine obligatoire.',
      'city': 'Commune',
      'category': 'Catégorie',
      'category_help': 'Choisissez une catégorie qui décrit le mieux cette location.',
      'category_validation': 'Catégorie est un domaine obligatoire.',
      'error': 'Il y a eu une erreur durant l\'enregistrement de la location.',
      'invalid_street': 'Cela semble une adresse invalide. Si vous utilisez des espaces dans l\'adresse, vous ne pouvez pas avoir plus de 15 caractères après le dernier espace.',
      'cancel': 'Annuler',
      'add': 'Ajouter'
    },
    eventForm: {
      'langWarning': 'Attention, vous éditez dans une autre langue: {{language}}. Quand ceci n\'est pas l\'intention, s\'il vous plaît contacter avec vragen@uitdatabank.be',
      step1: {
        'title': 'Qu\'est-ce que vous voulez ajouter?',
        'label_event': 'Un événement',
        'show_everything': 'Montrez tout',
        'or': 'ou',
        'location_label': 'Une location',
        'change': 'Modifier',
        'refine': 'Raffiner'
      },
      step2: {
        'date_help_event': 'L\'événement ou l\'activité a lieu quand?',
        'date_help_place': 'Cet endroit ou cette location est ouvert(e) quand?',
      },
      step3: {
        'title_event': 'L\'événement ou l\'activité a lieu où?',
        'title_place': 'Où se trouve cet endroit ou cette location?',
        'choose_city': 'Choisissez une commune',
        'placeholder_city': 'Commune ou code postal',
        'problem_city': 'Il y a eu un problème durant la collection des villes',
        'change': 'Modifier',
        'choose_location': 'Choisissez une location',
        'placeholder_location': 'Nom ou adresse',
        'location_not_found': 'La location n\'a pas été trouvée?',
        'add_location': 'Ajouter une location',
        'location_error': 'Il y a eu un problème dans la collection des locations',
        'street': 'Rue et numéro',
        'placeholder_street': 'Rue de l\'église 1',
        'straat_validate': 'Rue et numéro sont des domaines obligatoires.',
        'street_validate_long': 'Cela semble une adresse invalide. Si vous utilisez des espaces dans l\'adresse, vous ne pouvez pas avoir plus de 15 caractères après le dernier espace.',
        'ok': 'OK'
      },
      step4: {
        'basic_data': 'Données de base',
        'name_event': 'Nom de l\'événement',
        'name_place': 'Nom de la location',
        'help_event': 'Utilisez un <strong>titre saillant</strong>, p.ex. \"Rouler à vélo le long des chapelles\", \"La Sage de la Licorne\".',
        'help_place': 'Utilisez la <strong>dénomination officielle</strong>, bv. \"Gravensteen\", \"Site de l\'abbaye Herkenrode\", \"Centre culturel De Werf\".',
        'help_description': 'Vous pouvez ajouter une <strong>description détaillée</strong> dans l\'étape 5.',
        'info_missing': 'Vous n\'avez pas introduit toutes les informations demandées:',
        'save_error': 'Il y a eu une erreur dans l\'enregistrement de l\'activité. Veuillez essayer plus tard.',
        'continue': 'Continuer',
        'doubles_title': 'Évitez les doubles emplois',
        'doubles_help': 'Nous avons trouvé des éléments similaires. Controlez les éléments importés auparavant.',
        'sure': 'Vous êtes sûr que vous voulez ajouter \"{{name}}\" ?',
        'return_dashboard': 'Non, retourner au tableau de bord',
        'yes_continue': 'Oui, procéder l\'importation',
        suggestions: {
          'from': 'De',
          'till': 'à',
          'permanent': 'Permanent'
        }
      },
      step5: {
        'expose_event': 'Faites remarquer votre événement encore plus',
        'expose_place': 'Faites remarquer cette location encore plus',
        'title': 'Titre',
        'description': 'Description',
        'add_text': 'Ajouter texte',
        'required_200': 'Pour attirer un nouveau public, les 200 premiers symboles sont les plus importants.',
        'required_still': 'Encore',
        'required_signs': 'symboles.',
        'required_200_help': 'Intégrez le message le plus important dans les 200 premiers symboles. Vous pouvez ensuite ajouter des informations générales.',
        'empty': 'Vider',
        'tip_route': 'Donnez ici une description saillante de la route. Mentionnez dans ce texte <strong>comment</strong> la route est parcourue (à vélo, en bateau, ...), les escales possibles, la <strong>durée</strong>, <strong>distance</strong> et comment la route est <strong>accompagnée</strong> (avec guide, brochure ou panneaux).',
        'tip_rondleiding': 'Donnez ici une description saillante du tour. Mentionnez le <strong>nombre max. de personnes</strong> par groupe, <strong>comment</strong> le tour est organisé (de manière permanente, avec intervalles ou à des temps fixes) et s\'il y a des <strong>préoccupations spéciales</strong> (p.ex. bottes recommandées).',
        'tip_monument': 'Donnez ici une description saillante du monument. Indiquez également si l\'ouverture du monument est limitée (p.ex. seulement des salons).',
        'description_error': 'Il y a eu une erreur dans l\'enregistrement de la description.',
        'organizer': 'Organisation',
        'add_organizer': 'Ajouter l\'organisation',
        'choose_organizer': 'Choisissez une organisation',
        'organizer_not_found': 'L\'organisation n\'a pas été trouvée?',
        'add_new_organizer': 'Ajouter un nouvel organisateur',
        'organizer_error': 'Il y a eu une erreur dans l\'enregistrement de l\'organisateur.',
        'contact': 'Contact & réservation',
        'add_contact': 'Ajouter de l\'information du contact',
        'website': 'Site web',
        'phone': 'Numéro de téléphone',
        'e-mail': 'Adresse mail',
        'use_booking': 'Utiliser pour la réservation',
        'booking_exposure': 'Comment ce lien peut-il apparaître?',
        'buy_tickets': 'Achetez des tickets',
        'reserve_places': 'Réservez des places',
        'check_availability': 'Controlez la disponibilité',
        'subscribe': 'Inscrivez-vous',
        'add_more_contact': 'Ajoutez plus d\'informations du contact',
        'contact_error': 'Il y a eu une erreur dans l\'enregistrement de l\'information du contact.',
        'facilities': 'Accessibilité',
        'add_facility': 'Ajouter des dispositions',
        'facility_inapplicable': 'Pas d\'application',
        'change': 'Modifier',
        'image_help': 'Ajoutez une image de sorte que les visiteurs reconnaissent mieux votre activité.',
        'images': 'Images',
        'copyright': 'Copyright',
        'delete': 'Supprimer',
        'main_image': 'Créer image principale',
        'add_image': 'Ajouter image',
        age: {
          'age_label': 'Adapté à',
          'All ages': 'De tous âges',
          'Toddlers': 'Tout-petits',
          'Preschoolers': 'Enfants d\'âge préscolaire',
          'Kids': 'Enfants',
          'Youngsters': 'Jeunes',
          'Adults': 'Adultes',
          'Seniors': 'Aînés',
          'Custom': 'Autres',
          'from': 'De',
          'till': 'à',
          'age': 'ans'
        },
        priceInfo: {
          'price_label': 'Prix',
          'add_prices': 'Ajouter prix',
          'free': 'Gratuit',
          'prices': 'Prix',
          'change': 'Modifier',
          'currency': 'euro'
        },
        reservationPeriod: {
          'add_reservation_period': 'Ajouter une période de réservation',
          'reservation_period': 'Période de réservation',
          'from': 'De',
          'till': 'À'
        }
      },
      publish: {
        'publish_now': 'Publier immédiatement',
        'publish_later': 'Publier plus tard',
        'edit_done': 'Modification terminée',
        'online_from': 'En ligne à partir de'
      },
      timeTracker: {
        'automatic_saved': 'Sauvegardé automatic à',
        'hour': 'heures',
      },
      embargo: {
        'title': 'Choisissez une date de publication',
        'help': 'A partir de quand cela peut-il apparaître en ligne? <em class="text-info"><i class="fa fa-exclamation-circle" aria-hidden="true"></i> Attention, vous pouvez définier cette date une seule fois.</em>',
        'error_past': 'Une date de publication ne peut pas être antérieure.',
        'error_empty': 'Choisissez une date de publication.',
        'cancel': 'Annuler',
        'ready': 'Prêt à modifier'
      }
    },
    calendar: {
      'one_more_days': 'Une ou plusieurs journées',
      'or': 'ou',
      'default_days': 'Journées fixes',
      'start_label': 'Départ',
      'end_label': 'Fin',
      'whole_day_label': 'Toute la journée',
      'start_hour_label': 'Heure de départ',
      'end_hour_label': 'Heure de fin',
      'add_days': 'Ajouter des jours',
      period: {
        'title': 'Date de départ et de fin',
        'from': 'De',
        'till': 'À',
        'alert': 'Introduisez la date de départ ainsi que la date de fin. La date de fin ne peut pas tomber avant la date de départ.'
      },
      openingHours: {
        'permanent_title': '24/24, 7/7',
        'permanent_subtitle': 'Chaque jour, chaque heure',
        'add_hours': 'Ajouter des heures',
        'opening_hours': 'Heures d\'ouverture',
        'change': 'Modifier',
        'days': 'Jours',
        'from': 'De',
        'till': 'À',
        'more_hours': 'Ajouter plus d\'heures d\'ouverture',
        'cancel': 'Annuler',
        'save': 'Sauver'
      }
    },
    'facilityLabel': {
      'motor': 'Dispositions pour des personnes de motricité réduite',
      'visual': 'Dispositions pour des malvoyants',
      'hearing': 'Dispositions pour des personnes d\'une limitation auditive',
      'other': 'Autres dispositions',
      'place': 'Dispositions de cette location'
    },
    audience: {
      'entrance': 'Accès',
      'everyone': 'Pour tout le monde',
      'members': 'Seulement pour des membres',
      'members_help': 'Ton item est seulement publié sur des chaînes pour des associations et leurs membres.',
      'education': 'Spécifiquement pour des écoles',
      'education_help': 'Ton item est seulement publié sur des chaînes d\'éducation culturelle. Après la publication tu peux encore ajouter de l\'information spécifique pour des écoles.'
    },
    workflowStatus: {
      'label': 'État de publication',
      'id': 'ID',
      'DRAFT': 'Pas publié',
      'READY_FOR_VALIDATION': 'Prêt à être publié',
      'APPROVED': 'Publié',
      'REJECTED': 'Publication rejetée',
      'DELETED': 'Pas publié',
      'rules': 'Regardez les règles',
      'rejected_full': 'Cet item a été rejeté.'
    },
    queryFieldGroup: {
      'what': 'Quoi',
      'where': 'Où',
      'when': 'Quand',
      'input-information': 'Information input',
      'translations': 'Traductions',
      'other': 'Autres'
    },
    'queryFieldLabel': {
      'cdbid': 'code d\'identification (CDBID)',
      'offertype': 'type (offre)',
      'keywords': 'label',
      'title': 'titre',
      'category_eventtype_name': 'type (activité)',
      'locationtype': 'type (location)',
      'category_theme_name': 'thème',
      'text': 'texte',
      'city': 'commune (nom)',
      'zipcode': 'code postal',
      'location_id': 'location (id)',
      'country': 'pays',
      'location_label': 'location (nom)',
      'category_flandersregion_name': 'région / commune',
      'date': 'date',
      'permanent': 'permanent',
      'lastupdated': 'modifié dernièrement',
      'creationdate': 'créé',
      'createdby': 'créé par',
      'availablefrom': 'disponible le',
      'detail_lang': 'traduction',
      'organiser_keywords': 'label organisation',
      'organiser_id': 'organisation (id)',
      'agefrom': 'âge',
      'price': 'prix',
      'organiser_label': 'organisation (nom)',
      'category_facility_name': 'dispositions',
      'category_targetaudience_name': 'public cible',
      'startdate': 'date de départ',
      'enddate': 'date de fin',
      'lastupdatedby': 'modifié dernièrement par',
      'category_publicscope_name': 'portée de public'
    },
    'EVENT-EXPORT': {
      'QUERY-IS-MISSING': 'Une exportation est seulement possible après avoir exécuté une recherche',
      'TOO-MANY-ITEMS': 'Une exportation manuelle contenant plus de {{limit}} items n\'est pas possible. Contactez vragen@uitdatabank.be pour une solution sur mesure.'
    },
    'AANBOD_INVOEREN': 'Importer l\'offre',
    'AANBOD_BEWERKEN': 'Modifier l\'offre',
    'AANBOD_MODEREREN': 'Modérer l\'offre',
    'AANBOD_VERWIJDEREN': 'Supprimer l\'offre',
    'ORGANISATIES_BEHEREN': 'Gérer les organisations',
    'GEBRUIKERS_BEHEREN': 'Gérer les utilisateurs',
    'LABELS_BEHEREN': 'Gérer les labels',
    'VOORZIENINGEN_BEWERKEN': 'Modifier les dispositions',
    'ORGANISATIES_BEWERKEN': 'Modifier les organisations',
    'event type missing': 'Avez-vous choisi un type en <a href="#quoi" class="alert-link">étape 1</a>?',
    'timestamp missing': 'Avez-vous choisi une date en <a href="#quand" class="alert-link">étape 2</a>?',
    'start or end date missing': 'Avez-vous choisi une date de départ et de fin en <a href="#quand" class="alert-link">étape 2</a>?',
    'when missing': 'Avez-vous fait un choix en <a href="#quand" class="alert-link">étape 2</a>?',
    'place missing for event': 'Avez-vous choisi un lieu en <a href="#où" class="alert-link">étape 3</a>?',
    'location missing for place': 'Avez-vous choisi une location en <a href="#où" class="alert-link">étape 3</a>?',
    'title is missing': 'Avez-vous choisi une titre en <a href="#titel" class="alert-link">étape 4</a>?',
    'UNIQUE_ORGANIZER_NOTICE': 'Afin de vérifier que chaque organisation dans la base de données soit unique, nous demandons pour chaque organisation un lien hypertexte unique et valable.',
    'OPENING_HOURS_ERROR': {
      'openAndClose': 'Introduisez toutes les heures d\'ouverture et de fermeture.',
      'dayOfWeek': 'Choisissez au moins un jour dans chaque ligne que vous avez ajoutée.',
      'openIsBeforeClose': 'Veuillez introduire une heure de fermeture qui tombe plus tard que l\'heure d\'ouverture.'
    },
    'TIME_SPAN_REQUIREMENTS': {
      'timedWhenNotAllDay': 'L\'heure de départ et de fin est obligatoire quand un événement ne dure pas toute la journée.',
      'startBeforeEndDay': 'La date de fin ne peut pas tomber avant la date de départ.',
      'startBeforeEnd': 'L\'heure de fin ne peut pas tomber avant l\'heure de départ.'
    },
    uitpas: {
      uitpasInfo: {
        'uitpas': 'UiTPAS',
        'uitpas_alert': 'Ceci est un organisateur UiTPAS. Sélectionnez le prix afin d\'ajouter de l\'information spécifique concernant UiTPAS.',
        'uitpas_info': 'Ceci est une activité UiTPAS.',
        'cantChangePrice': 'Pour cet événement des tickets ont été vendus dont l\'information du prix existe déjà. Vous ne pouvez plus modifier l\'information du prix.',
        'cantChangeOrganiser': 'Pour cet événement des tickets UiTPAS ont déjà été vendus. Vous ne pouvez plus modifier l\'organisation.',
        'unavailable': 'UiTPAS n\'est pas disponible pour l\'instant, essayez plus tard ou contactez le helpdesk (vragen@uitdatabank.be).'
      },
      cardSystems: {
        'card_systems': '<Systèmes des cartes',
        'choose': '--Sélectionnez une clé de répartition--',
        'retry': 'Enregistrer à nouveau',
        'unavailable': 'ne peut pas joindre UiTPAS, essayez plus tard ou contactez le helpdesk (vragen@uitdatabank.be)'
      }
    },
    images: {
      'agreement': 'Vous êtes sur le point d\'ajouter une ou plusieurs images et de les diffuser publiquement. Pour ceci il faut respecter tous les droits d\'auteur et de portrait applicables, ainsi que d\'autres législations en vigueur. Sinon, vous pouvez être rendu responsable, comme convenu dans les',
      'conditions': 'conditions générales',
      'copyright_info': 'Plus d\'informations sur le copyright',
      'description': 'Description',
      'copyright': 'Copyright',
      'copyright_help': 'Mentionnez le nom de photographe légitime. Introduisez seulement le nom de votre propre association ou organisation si vous êtes propriétaire vous-même des droits (au moins 3 caractères).',
      'cancel': 'Annuler',
      'agree': 'Accepter',
      upload: {
        'select_image': 'Sélectionnez votre photo',
        'choose_file': 'Choisissez fichier',
        'max_filesize': 'La dimension maximale de votre image est {{maxFileSize}} et a comme type .jpeg, .gif of .png',
        'upload': 'Télécharger'
      },
      edit: {
        'title': 'Modifier l\'information de l\'image',
        'description_help': 'Une bonne description de l\'image est lue par les moteurs de recherche et des utilisateurs malvoyants.',
        'save_error': 'Il y a eu une erreur dans l\'enregistrement de l\'image.',
        'update': 'actualiser'
      },
      remove: {
        'title': 'Supprimer l\'image',
        'sure': 'Vous êtes sûr de vouloir supprimer cette image?',
        'save_error': 'Il y a eu une erreur dans la suppression de l\'image.',
      }
    },
    organizer: {
      modal: {
        'title': 'Ajouter une nouvelle organisation',
        'avoid_doubles': 'Évitez les doubles emplois',
        'unique_notice': 'Afin de vérifier que chaque organisation dans la base de données soit unique, nous demandons pour chaque organisation un lien hypertexte unique et valable.',
        'website': 'Site web',
        'alert_warning': 'Cette adresse est déjà utilisée par l\'organisation \'{{organizerName}}\'. Donnez un site web unique ou',
        'alert_button': 'utilisez {{organizerName}} comme organisation',
        'name_help': 'Le nom public officiel de l\'organisation.',
        'name_required': 'Veuillez introduire un nom',
        'add_confirm': 'Vous êtes sûr d\'ajouter \"{{newOrganizerName}}\" comme organisation? La  double importation d\'organisations n\'est pas permise.',
        'doubles': 'Nous avons trouvé des items similaires:',
        'select': 'Sélectionner',
        'your_input': 'Vous avez importé:',
        'still_enter': 'Importer quand même',
        'save_error': 'Il y a eu une erreur dans l\'enregistrement de l\'organisation.',
        'address_error': 'Veuillez introduire une adresse valable.',
        'contact_error': 'Veuillez introduire l\'information du contact correctement.',
        'close': 'Fermer',
        'save': 'Sauver',
        'label_name': 'Nom'
      },
      address: {
        'label_street': 'Rue et numéro',
        'help_street': 'Veuillez introduire la rue et le numéro.',
        'label_city': 'Commune',
        'placeholder_city': 'Commune of code postal',
        'help_city': 'Il y a eu un problème dans la collection des villes.',
        'error_city': 'Veuillez introduire une commune.',
        'change': 'Modifier'
      },
      contact: {
        'title': 'Contact',
        'enter_url': 'Donnez un lien hypertexte',
        'enter_email': 'Introduisez une adresse mail',
        'enter_phone': 'Introduisez un numéro de téléphone<small class="text-muted">, p.ex. 011 32 43 54</small>',
        'required': 'Veuillez compléter ce domaine.',
        'valid_url': 'Veuillez introduire un lien hypertexte valable.',
        'valid_email': 'Veuillez introduire une adresse mail valable.',
        'valid_phone': 'Veuillez introduire un numéro de téléphone valable.',
        'cancel': 'Annuler',
        'add': 'Ajouter',
        'add_phone': 'Ajouter un numéro de téléphone',
        'add_email': 'Ajouter une adresse mail',
        'add_url': 'Ajouter un autre site web'
      }
    },
    duplicate: {
      title: 'Copier et modifier',
      description: 'Vous êtes sur le point de copier cet événement. Choisissez un moment pour cet événement.',
      error: 'Il y a eu une erreur dans la création d\'une copie!'
    },
    dashboard: {
      'welcome': 'Bienvenue,',
      'no_items': 'Vous n\'avez pas encore ajouté des items.',
      'add_activity': 'Ajouter une activité ou une location?',
      'recent': 'Récent',
      'add': 'Ajouter',
      directive: {
        'no_publish': 'Pas publié!',
        'online': 'En ligne le',
        'edit': 'Modifier',
        'example': 'Exemple',
        'delete': 'Supprimer',
        'expired_event': 'Événement terminé'
      },
      delete: {
        'sure': 'Vous êtes sûr de vouloir supprimer \"{{name}}\"?',
        'error_location': 'La location \"{{name}}\" ne peut pas être supprimée car des activités y ont encore lieu.',
        'error': 'Il y a eu une erreur dans la suppression de l\'activité.',
        'cancel': 'Annuler',
        'delete': 'Supprimer'
      }
    },
    offerTypes: {
      'Concert': 'Concert',
      'Theatervoorstelling': 'Théâtre',
      'Lezing of congres': 'Conférence ou congrès',
      'Dansvoorstelling': 'Spectacle de danse',
      'Festival': 'Festival',
      'Toeristisch evenement': 'Événement touristique',
      'Film': 'Cinéma',
      'Sportwedstrijd bekijken': 'Assister à une compétition sportive',
      'Cursus of workshop': 'Cours ou atelier',
      'Sportactiviteit': 'Activité sportive',
      'Kamp of vakantie': 'Camp de vacance',
      'Begeleide rondleiding': 'Tour ou excursion guidé',
      'Route': 'Route',
      'Spel of quiz': 'Jeu ou quiz',
      'Party of fuif': 'Soirée',
      'Kermis of feestelijkheid': 'Foire ou festivité',
      'Congres of studiedag': 'Congrès ou journée d\'étude',
      'Eten en drinken': 'Manger et boire',
      'Thema of pretpark': 'Parc à thème ou parc d\'attractions',
      'Theater': 'Théâtre',
      'Jeugdhuis of jeugdcentrum': 'Maison de jeunes ou centre de jeunesse',
      'Cultuur- of ontmoetingscentrum': 'Centre culturel ou centre de réunion',
      'Discotheek': 'Discothèque',
      'Bibliotheek of documentatiecentrum': 'Bibliothèque ou centre de documentation',
      'Bioscoop': 'Cinéma',
      'Horeca': 'Horeca',
      'Openbare ruimte': 'Espace public',
      'Tentoonstelling': 'Exposition',
      'Markt of braderie': 'Marché ou braderie',
      'Natuurgebied of park': 'Zone naturel ou parc',
      'Beurs': 'Foire / exposition',
      'Monument': 'Monument',
      'Opendeurdag': 'Journée portes ouvertes',
      'Recreatiedomein of centrum': 'Centre de loisirs ou centre de récréation',
      'Park of tuin': 'Jardin ou parc',
      'Archeologische Site': 'Site Archeologique',
      'School of onderwijscentrum': 'École ou centre éducatif',
      'Sportcentrum': 'Centre sportif',
      'Winkel': 'Magasin',
      'Museum of galerij': 'Musée ou galerie',
      'Zaal of expohal': 'Hall ou salle d\'expo'
    },
    offerThemes: {
      'Antiek en brocante': 'Antiquités ou brocantes',
      'Architectuur': 'Architecture',
      'Audiovisuele kunst': 'Arts audiovisuels',
      'Beeldhouwkunst': 'Sculpture',
      'Fotografie': 'Photographie',
      'Grafiek': 'Art grafique',
      'Installatiekunst': 'Art d\'installation',
      'Schilderkunst': 'Peinture',
      'Decoratieve kunst': 'Arts décoratives',
      'Design': 'Design',
      'Mode': 'Mode',
      'Meerdere kunstvormen': 'Arts multiples',
      'Ballet en klassieke dans': 'Ballet et danse classique',
      'Volksdans en werelddans': 'Danse folklorique et mondiale',
      'Stijl en salondansen': 'Danse de salon et stylée',
      'Moderne dans': 'Danse moderne',
      'Erfgoed': 'Patrimoine',
      'Avontuur': 'Aventure',
      'Natuur': 'Nature',
      'Sport': 'Sport',
      'Technologie': 'La technologie',
      'Koken': 'La cuisine',
      'Actie en avontuur': 'Action et aventure',
      'Animatie en kinderfilms': 'Films animés et films pour enfants',
      'Documentaires en reportages': 'Documentaires et reportages',
      'Griezelfilm of horror': 'Films d\'épouvantes ou orreurs',
      'Historische film': 'Films historiques',
      'Komedie': 'Comédie',
      'Kortfilm': 'Court métrage',
      'Filmmusical': 'Comédie musicale',
      'Drama': 'Films dramatiques',
      'Science fiction': 'Science fiction',
      'Cinefiel': 'Cinéphile',
      'Thriller': 'Films à suspense',
      'Meerdere filmgenres': 'Films de tous genres',
      'Geschiedenis': 'Histoire',
      'Gezondheid en wellness': 'Santé et bien-être',
      'Landbouw en platteland': 'Agriculture et campagne',
      'Milieu en natuur': 'Environnement et nature',
      'Literatuur': 'Litérature',
      'Poezie': 'Poésie',
      'Fictie': 'Fiction',
      'Non fictie': 'Non fiction',
      'Strips': 'Bandes dessinés',
      'Klassieke muziek': 'Musique classique',
      'Jazz en blues': 'Jazz et blues',
      'Pop en rock': 'Pop et rock',
      'Hiphop, r&b en rap': 'Hiphop, r&b et rap',
      'Dance': 'Dance',
      'Folk en wereldmuziek': 'Musique folklorique et mondiale',
      'Amusementsmuziek': 'Cabaret',
      'Politiek en maatschappij': 'Politique et société',
      'Creativiteit': 'Créativité',
      'Computer en techniek': 'Ordinateurs et technologie',
      'Opvoeding': 'Éducation',
      'Persoon en relaties': 'Hommes et relations',
      'Interculturele vorming': 'Formation interculturelle',
      'Kunst en kunsteducatie': 'Arts et formation artistique',
      'Gezondheid en zorg': 'Santé et soins',
      'Samenleving': 'Vivre en société',
      'Bal en racketsport': 'Sports au ballons et raquettes',
      'Atletiek, wandelen en fietsen': 'Athlétisme, marche et cyclisme',
      'Zwemmen en watersport': 'Natation et sports nautiques',
      'Fitness, gymnastiek, dans en vechtsport': 'Fitness, gymnastique, danse et arts martiaux',
      'Outdoor en adventure': 'Plein air et aventure',
      'Lucht en motorsport': 'Sports aero et moteurs',
      'Volkssporten': 'Sports folkloriques',
      'Omnisport en andere': 'Omnisports et autres',
      'Tekst en muziektheater': 'Théâtre dramatique et musical',
      'Humor en comedy': 'Comédie',
      'Musical': 'Comédie musicale',
      'Figuren en poppentheater': 'Théâtre de marionnettes',
      'Opera en operette': 'Opéra et opérette',
      'Mime en bewegingstheater': 'Mime et theéâtre de mouvements',
      'Wetenschap': 'Science',
      'Zingeving, filosofie en religie': 'Sense de la vie, philosophie et religion',
      'Thema onbepaald': 'Thème non défini',
      'Circus': 'Cirque',
      'Voeding': 'Nutrition',
      'Economie': 'Économie'
    },
    offerThemesGroups: {
      'Dans': 'Dance',
      'Kunst en erfgoed': 'Art et Patrimoine',
      'Muziek': 'Musique',
      'Sport': 'Sport',
      'Varia': 'Divers'
    },
    weekdays: {
      monday: {
        label: 'lun.',
        name: 'Lundi'
      },
      tuesday: {
        label: 'mar.',
        name: 'Mardi'
      },
      wednesday: {
        label: 'mer.',
        name: 'Mercredi'
      },
      thursday: {
        label: 'jeu.',
        name: 'Jeudi'
      },
      friday: {
        label: 'ven.',
        name: 'Vendredi'
      },
      saturday: {
        label: 'sam.',
        name: 'Samedi'
      },
      sunday: {
        label: 'dim.',
        name: 'Dimanche'
      }
    }
  }
);
})();

// Source: src/core/udb-api.service.js
(function () {
'use strict';

/**
 * @typedef {Object} UiTIDUser
 * @property {string} id        The UiTID of the user.
 * @property {string} nick      A user nickname.
 */

/**
 * @typedef {Object} PagedCollection
 * @property {string} @context
 * @property {string} @type
 * @property {int} itemsPerPage
 * @property {int} totalItems
 * @property {Object[]} member
 */

/**
 * @typedef {Object} OfferIdentifier
 * @property {string} @id
 * @property {string} @type
 */

/**
 * @typedef {Object} Permission
 * @property {string} @key
 * @property {string} @name
 */

/**
 * @typedef {Object} ApiProblem
 * @property {URL} type
 * @property {string} title
 * @property {string} detail
 * @property {URL} instance
 * @property {Number} status
 */

/**
 * @typedef {Object} CommandInfo
 * @property {string} commandId
 */

/**
 * @readonly
 * @enum {string}
 */
var OfferTypes = {
  EVENT: 'event',
  PLACE: 'place'
};

/**
 * @ngdoc service
 * @name udb.core.udbApi
 * @description
 * # udbApi
 * udb api service
 */
angular
  .module('udb.core')
  .service('udbApi', UdbApi);

/* @ngInject */
function UdbApi(
  $q,
  $http,
  appConfig,
  $cookies,
  uitidAuth,
  $cacheFactory,
  UdbEvent,
  UdbPlace,
  UdbOrganizer,
  Upload,
  $translate
) {
  var apiUrl = appConfig.baseApiUrl;
  var defaultApiConfig = {
    withCredentials: true,
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer ' + uitidAuth.getToken(),
      'X-Api-Key': _.get(appConfig, 'apiKey')
    },
    params: {}
  };
  var offerCache = $cacheFactory('offerCache');

  function withoutAuthorization(apiConfig) {
    var config = _.cloneDeep(apiConfig);
    config.withCredentials = false;
    /**
     * @todo: use _.unset when lodash is updated to v4: https://lodash.com/docs/4.17.4#unset
     */
    delete config.headers.Authorization;

    return config;
  }

  this.mainLanguage = $translate.use() || 'nl';

  /**
   * Removes an item from the offerCache.
   * @param {string} id - The uuid of the offer.
   */
  this.removeItemFromCache = function (id) {
    var offer = offerCache.get(id);

    if (offer) {
      offerCache.remove(id);
    }
  };

  this.createSavedSearch = function (name, queryString) {
    var post = {
      name: name,
      query: queryString
    };
    return $http
      .post(appConfig.baseUrl + 'saved-searches/', post, defaultApiConfig)
      .then(returnUnwrappedData);
  };

  this.getSavedSearches = function () {
    return $http
      .get(appConfig.baseUrl + 'saved-searches/', defaultApiConfig)
      .then(returnUnwrappedData);
  };

  this.deleteSavedSearch = function (searchId) {
    return $http
      .delete(appConfig.baseUrl + 'saved-searches/' + searchId, defaultApiConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} queryString - The query used to find offers.
   * @param {number} [start] - From which offset the result set should start.
   * @returns {Promise.<PagedCollection>} A promise that signals a successful retrieval of
   *  search results or a failure.
   */
  this.findOffers = function (queryString, start) {
    var offset = start || 0,
        searchParams = {
          start: offset,
          disableDefaultFilters: true
        };
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.params = searchParams;

    if (queryString.length) {
      searchParams.q = queryString;
    }

    return $http
      .get(appConfig.baseUrl + 'offers/', withoutAuthorization(requestOptions))
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} queryString - The query used to find events.
   * @param {number} [start] - From which event offset the result set should start.
   * @returns {Promise.<PagedCollection>} A promise that signals a successful retrieval of
   *  search results or a failure.
   */
  this.findEvents = function (queryString, start) {
    var offset = start || 0,
        searchParams = {
          start: offset
        };
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.params = searchParams;

    if (queryString.length) {
      searchParams.query = queryString;
    }

    return $http
      .get(apiUrl + 'search', requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} queryString - The query used to find offer to moderate.
   * @param {number} [start] - From which offset the result set should start.
   * @param {number} [itemsPerPage] - How many items should be in the result set.
   * @returns {Promise.<PagedCollection>} A promise that signals a successful retrieval of
   *  search results or a failure.
   */
  this.findToModerate = function (queryString, start, itemsPerPage) {
    return find(appConfig.baseUrl + 'moderation', queryString, start, itemsPerPage);
  };

  /**
   * @param {URL} offerLocation
   * @return {UdbPlace|UdbEvent}
   */
  this.getOffer = function(offerLocation) {
    var deferredOffer = $q.defer();
    var offer = offerCache.get(offerLocation);

    function cacheAndResolveOffer(jsonOffer) {
      var type = jsonOffer['@id'].split('/').reverse()[1];

      var offer = (type === 'event') ? new UdbEvent() : new UdbPlace();
      offer.parseJson(jsonOffer);
      offerCache.put(offerLocation, offer);
      deferredOffer.resolve(offer);
    }

    if (offer) {
      deferredOffer.resolve(offer);
    } else {
      $http
        .get(offerLocation.toString(), defaultApiConfig)
        .success(cacheAndResolveOffer)
        .error(deferredOffer.reject);
    }

    return deferredOffer.promise;
  };

  this.getOrganizerByLDId = function(organizerLDId) {
    var organizerId = organizerLDId.split('/').pop();
    return this.getOrganizerById(organizerId);
  };

  // TODO: Give organizers their own cache instead of using offer?
  this.getOrganizerById = function(organizerId) {
    var deferredOrganizer = $q.defer();

    var organizer = offerCache.get(organizerId);

    if (organizer) {
      deferredOrganizer.resolve(organizer);
    } else {
      var organizerRequest  = $http.get(
        appConfig.baseUrl + 'organizers/' + organizerId, defaultApiConfig
      );

      organizerRequest.success(function(jsonOrganizer) {
        var organizer = new UdbOrganizer();
        organizer.parseJson(jsonOrganizer);
        offerCache.put(organizerId, organizer);
        deferredOrganizer.resolve(organizer);
      });
    }
    return deferredOrganizer.promise;
  };

  /**
   * @param {number} start
   * @param {number} limit
   * @param {string|null} website
   * @param {string|null} name
   *
   * @return {Promise.<PagedCollection>}
   */
  this.findOrganisations = function(start, limit, website, name) {
    var params = {
      limit: limit ? limit : 10,
      start: start ? start : 0,
      embed: true
    };
    if (website) { params.website = website; }
    if (name) { params.name = name; }

    var configWithQueryParams = _.set(withoutAuthorization(defaultApiConfig), 'params', params);

    return $http
      .get(appConfig.baseUrl + 'organizers/', configWithQueryParams)
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} organizerId
   * @param {string} labelName
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.addLabelToOrganizer = function(organizerId, labelName) {
    return $http
      .put(appConfig.baseUrl + 'organizers/' + organizerId + '/labels/' + labelName, {}, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   * @param {string} labelName
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.deleteLabelFromOrganizer = function(organizerId, labelName) {
    return $http
        .delete(appConfig.baseUrl + 'organizers/' + organizerId + '/labels/' + labelName, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };
  /**
   * @param {string} organizerId
   * @param {string} website
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.updateOrganizerWebsite = function(organizerId, website) {
    var params = {
      url: website
    };

    return $http
        .put(appConfig.baseUrl + 'organizers/' + organizerId + '/url', params, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   * @param {string} name
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.updateOrganizerName = function(organizerId, name) {
    var params = {
      name: name
    };

    return $http
        .put(appConfig.baseUrl + 'organizers/' + organizerId + '/name', params, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   * @param {Object} address
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.updateOrganizerAddress = function(organizerId, address) {

    return $http
        .put(appConfig.baseUrl + 'organizers/' + organizerId + '/address', address, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} organizerId
   * @param {Array} contact
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.updateOrganizerContact = function(organizerId, contact) {

    return $http
        .put(appConfig.baseUrl + 'organizers/' + organizerId + '/contactPoint', contact, defaultApiConfig)
        .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {URL} eventId
   * @return {*}
   */
  this.getHistory = function (eventId) {
    return $http
      .get(eventId + '/history', defaultApiConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @returns {Promise.<UiTIDUser>}
   *   A promise with the credentials of the currently logged in user.
   */
  this.getMe = function () {
    var deferredUser = $q.defer();
    var activeUser = uitidAuth.getUser();

    function storeAndResolveUser (userData) {
      var user = {
        id: userData.id,
        nick: userData.nick
      };

      $cookies.putObject('user', user);
      deferredUser.resolve(user);
    }

    if (activeUser) {
      deferredUser.resolve(activeUser);
    } else if (uitidAuth.getToken()) {
      // set the freshest, newest token
      defaultApiConfig.headers.Authorization = 'Bearer ' + uitidAuth.getToken();

      $http
        .get(appConfig.baseUrl + 'user', defaultApiConfig)
        .success(storeAndResolveUser)
        .error(deferredUser.reject);
    } else {
      deferredUser.reject();
    }

    return deferredUser.promise;
  };

  /**
   * Get my user permissions
   */
  this.getMyPermissions = function () {
    var deferredPermissions = $q.defer();
    var token = uitidAuth.getToken();

    // cache the permissions with user token
    // == will need to fetch permissions for each login
    function storeAndResolvePermissions (permissionsList) {
      offerCache.put(token, permissionsList);
      deferredPermissions.resolve(permissionsList);
    }

    if (token) {
      var permissions = offerCache.get(token);
      if (!permissions) {
        $http
          .get(appConfig.baseUrl + 'user/permissions/', defaultApiConfig)
          .success(storeAndResolvePermissions)
          .error(deferredPermissions.reject);
      } else {
        deferredPermissions.resolve(permissions);
      }
    } else {
      deferredPermissions.reject();
    }

    return deferredPermissions.promise;
  };

  /**
   * Get the editing permission for an offer.

   * @param {URL} offerLocation
   */
  this.hasPermission = function(offerLocation) {
    return $http.get(
      offerLocation + '/permission',
      defaultApiConfig
    ).then(function (response) {
      return response.data.hasPermission ? $q.resolve() : $q.reject();
    });
  };

  /**
   * @param {OfferIdentifier[]} offers
   * @param {string} label
   * @return {Promise}
   */
  this.labelOffers = function (offers, label) {
    return $http.post(appConfig.baseUrl + 'offers/labels',
      {
        'label': label,
        'offers': offers
      },
      defaultApiConfig
    );
  };

  /**
   * @param {string} query
   * @param {string} label
   * @return {Promise}
   */
  this.labelQuery = function (query, label) {
    return $http.post(appConfig.baseUrl + 'query/labels',
      {
        'label': label,
        'query': query
      },
      defaultApiConfig
    );
  };

  /**
   *
   * @param {string} query
   * @param {string} [email]
   * @param {string} format
   * @param {string[]} properties
   * @param {boolean} perDay
   * @param {URL[]} selection
   * @param {Object} [customizations]
   * @return {*}
   */
  this.exportEvents = function (query, email, format, properties, perDay, selection, customizations) {

    var exportData = {
      query: query,
      selection: _.map(selection, function (url) {
        return url.toString();
      }),
      order: {},
      include: properties,
      perDay: perDay,
      customizations: customizations || {}
    };

    if (email) {
      exportData.email = email;
    }

    return $http.post(appConfig.baseUrl + 'events/export/' + format, exportData, defaultApiConfig);
  };

  /**
   * @param {URL} offerLocation
   * @param {string} propertyName
   *  'title' or 'description'
   * @param {string} language
   *  ISO 639-1 language code: https://en.wikipedia.org/wiki/ISO_639-1
   *  Languages known to be supported: nl, en, fr, de.
   * @param {string} translation
   *
   * @return {Promise}
   */
  this.translateProperty = function (offerLocation, propertyName, language, translation) {
    var translationData = {};
    translationData[propertyName] = translation;

    if (propertyName === 'name') {
      propertyName = 'title';
    }

    return $http.post(
      offerLocation + '/' + language + '/' + propertyName,
      translationData,
      defaultApiConfig
    );
  };

  this.translateAddress = function (offerId, language, translation) {
    return $http.put(
        appConfig.baseUrl + 'places/' + offerId + '/address/' + language,
        {
          addressCountry: translation.addressCountry,
          addressLocality: translation.addressLocality,
          postalCode: translation.postalCode,
          streetAddress: translation.streetAddress
        },
        defaultApiConfig
    );
  };

  var offerPropertyPaths = {
    typicalAgeRange: 'typical-age-range'
  };

  /**
   * Update the property for a given id.
   *
   * @param {URL} offerLocation
   *   The location of the offer to update
   * @param {string} property
   *   Property to update
   * @param {string} value
   *   Value to save
   */
  this.updateProperty = function(offerLocation, property, value) {
    // TODO: having both in path and updateData is duplicate
    var updateData = {};
    updateData[property] = value;
    var path = offerPropertyPaths[property] ? offerPropertyPaths[property] : property;

    return $http.post(
      offerLocation +  '/' + path,
      updateData,
      defaultApiConfig
    );
  };

  this.updatePriceInfo = function(offerLocation, price) {
    return $http.put(
      offerLocation + '/priceInfo',
      price,
      defaultApiConfig
    );
  };

  /**
   * @param {URL} offerLocation
   *   The location of the offer to update
   * @param {string[]} facilities
   *   A list of facility ids
   */
  this.updateOfferFacilities = function (offerLocation, facilities) {
    return $http.put(
      offerLocation + '/facilities/',
      {facilities: facilities},
      defaultApiConfig
    );
  };

  /**
   * @param {URL} offerLocation
   * @param {string} label
   *
   * @return {Promise}
   */
  this.labelOffer = function (offerLocation, label) {
    return $http.post(
      offerLocation + '/labels',
      {'label': label},
      defaultApiConfig
    );
  };

  /**
   * @param {URL} offerLocation
   * @param {string} label
   *
   * @return {Promise}
   */
  this.unlabelOffer = function (offerLocation, label) {
    // @see https://stackoverflow.com/questions/332872/encode-url-in-javascript
    return $http
      .delete(offerLocation + '/labels/' + encodeURIComponent(label), defaultApiConfig)
      .catch(returnApiProblem);
  };

  /**
   * @param {EventFormData} offer
   *
   * @return {Promise.<URL>}
   */
  this.deleteOffer = function (offer) {
    return $http['delete'](
      offer['@id'],
      defaultApiConfig
    );
  };

  /**
   * @param {udbOrganizer} organization
   *
   * @return {Promise.<Object|ApiProblem>}
   */
  this.deleteOrganization = function (organization) {
    return $http
      .delete(organization['@id'], defaultApiConfig)
      .then(returnJobData, returnApiProblem);
  };

  /**
   * @param {string} type   either 'place' or 'event'
   * @param {EventFormData} offer
   *
   * @return {Promise.<URL>}
   */
  this.createOffer = function (type, offer) {
    return $http.post(
      appConfig.baseUrl + type,
      offer,
      defaultApiConfig
    ).then(function(response) {
      return new URL(response.data.url);
    });
  };

  /**
   * @param {URL} offerLocation
   * @param {string} description
   * @param {string} purpose
   */
  this.createVariation = function (offerLocation, description, purpose) {
    var activeUser = uitidAuth.getUser(),
        requestData = {
          'owner': activeUser.id,
          'purpose': purpose,
          'same_as': offerLocation.toString(),
          'description': description
        };

    return $http.post(
      appConfig.baseUrl + 'variations/',
      requestData,
      defaultApiConfig
    );
  };

  /**
   * @param {string} variationId
   * @param {string} description
   */
  this.editDescription = function (variationId, description) {
    return $http.patch(
      appConfig.baseUrl + 'variations/' + variationId,
      {'description': description},
      defaultApiConfig
    );
  };

  /**
   * @param {URL} placeLocation
   * @returns {OfferIdentifier[]}
   */
  this.findEventsAtPlace = function(placeLocation) {
    function unwrapEvents(wrappedEvents) {
      var eventIdentifiers = _.map(wrappedEvents.events, function(event) {
        return {'@id': appConfig.baseUrl + 'event/' + event['@id']};
      });
      return $q.resolve(eventIdentifiers);
    }

    return $http
      .get(placeLocation + '/events', defaultApiConfig)
      .then(function (response) {
        return returnUnwrappedData(response)
          .then(unwrapEvents);
      });
  };

  /**
   * Create a new organizer.
   */
  this.createOrganizer = function(organizer) {
    return $http.post(
      appConfig.baseUrl + 'organizers/',
      organizer,
      defaultApiConfig
    );
  };

  /**
   * Update the major info of an offer.
   * @param {URL} offerLocation
   * @param {EventFormData} info
   */
  this.updateMajorInfo = function(offerLocation, info) {
    return $http.post(
      offerLocation + '/major-info',
      info,
      defaultApiConfig
    );
  };

  /**
   * Delete the typical age range for an offer.
   * @param {URL} offerLocation
   */
  this.deleteTypicalAgeRange = function(offerLocation) {

    return $http.delete(
      offerLocation + '/typical-age-range',
      defaultApiConfig
    );
  };

  /**
   * Delete the organizer for an offer.
   * @param {URL} offerLocation
   * @param {string} organizerId
   */
  this.deleteOfferOrganizer = function(offerLocation, organizerId) {

    return $http.delete(
      offerLocation + '/organizer/' + organizerId,
      defaultApiConfig
    );
  };

  /**
   * @param {string} variationId
   */
  this.deleteVariation = function (variationId) {
    return $http.delete(
      appConfig.baseUrl + 'variations/' + variationId,
      defaultApiConfig
    );
  };

  /**
   * Add a new image.
   * @param {URL} itemLocation
   * @param {string} imageId
   * @return {Promise}
   */
  this.addImage = function(itemLocation, imageId) {

    var postData = {
      mediaObjectId: imageId
    };

    return $http
      .post(
        itemLocation + '/images',
        postData,
        defaultApiConfig
      )
      .then(returnJobData);
  };

  /**
   * Update the image info of an item.
   * @param {URL} itemLocation
   * @param {string} imageId
   * @param {string} description
   * @param {string} copyrightHolder
   * @return {Promise}
   *
   */
  this.updateImage = function(itemLocation, imageId, description, copyrightHolder) {
    var postData = {
      description: description,
      copyrightHolder: copyrightHolder
    };

    return $http
      .post(
        itemLocation + '/images/' + imageId,
        postData,
        defaultApiConfig
      )
      .then(returnJobData);
  };

  /**
   * Remove an image from an item.
   *
   * @param {URL} itemLocation
   * @param {string} imageId
   *
   * @return {Promise}
   */
  this.removeImage = function(itemLocation, imageId) {
    return $http.delete(
      itemLocation + '/images/' + imageId,
      defaultApiConfig
    ).then(returnJobData);
  };

  /**
   * Select the main image for an item.
   *
   * @param {URL} itemLocation
   * @param {string} imageId
   *
   * @return {Promise.<Object>}
   */
  this.selectMainImage = function(itemLocation, imageId) {
    var postData = {
      mediaObjectId: imageId
    };

    return $http
      .post(
        itemLocation + '/images/main',
        postData,
        defaultApiConfig
      )
      .then(returnJobData);
  };

  /**
   * @param {URL} itemLocation
   * @param {('everyone'|'members'|'education')} audienceType
   *
   * @returns {Promise.<CommandInfo|ApiProblem>}
   */
  this.setAudienceType = function (itemLocation, audienceType) {
    return $http
      .put(itemLocation.toString() + '/audience', {'audienceType': audienceType}, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {object} response
   *  The response that is returned when creating a job.
   *
   * @return {Promise.<Object>}
   *  The object containing the job data
   */
  function returnJobData(response) {
    return $q.resolve(response.data);
  }

  this.getOfferVariations = function (ownerId, purpose, offerUrl) {
    var parameters = {
      'owner': ownerId,
      'purpose': purpose,
      'same_as': offerUrl
    };

    var config = _.cloneDeep(defaultApiConfig);
    config.params = _.pick(parameters, _.isString);

    return $http.get(
      appConfig.baseUrl + 'variations/',
      config
    );
  };

  this.getVariation = function (variationId) {
    var deferredVariation = $q.defer();

    var variationRequest = $http.get(
      appConfig.baseUrl + 'variations/' + variationId, defaultApiConfig);

    variationRequest.success(function (jsonEvent) {
      var event = new UdbEvent(jsonEvent);
      deferredVariation.resolve(event);
    });

    variationRequest.error(function () {
      deferredVariation.reject();
    });

    return deferredVariation.promise;
  };

  function returnUnwrappedData(response) {
    return $q.resolve(response.data);
  }

  /**
   * @param {int} page
   * @return {Promise.<PagedCollection>}
   */
  this.getDashboardItems = function(page) {
    var requestConfig = _.cloneDeep(defaultApiConfig);
    if (page > 1) {
      requestConfig.params.page = page;
    }

    return $http
      .get(appConfig.baseUrl + 'dashboard/items', requestConfig)
      .then(returnUnwrappedData);
  };

  this.uploadMedia = function (imageFile, description, copyrightHolder, language) {
    var uploadOptions = {
      url: appConfig.baseUrl + 'images/',
      fields: {
        description: description,
        copyrightHolder: copyrightHolder,
        language: language
      },
      file: imageFile
    };
    var config = _.assign(defaultApiConfig, uploadOptions);

    return Upload.upload(config);
  };

  this.getMedia = function (imageId) {
    return $http
      .get(
        appConfig.baseUrl + 'media/' + imageId,
        defaultApiConfig
      )
      .then(returnUnwrappedData);
  };

  /**
   * @param {string}  name
   * @param {boolean} isVisible
   * @param {boolean} isPrivate
   * @param {string}  [parentId]
   * @return {Promise.<Object|ApiProblem>}
   */
  this.createLabel = function (name, isVisible, isPrivate, parentId) {
    var labelData = {
      name: name,
      visibility: isVisible ? 'visible' : 'invisible',
      privacy: isPrivate ? 'private' : 'public'
    };

    if (parentId) {
      labelData.parentId = parentId;
    }

    return $http
      .post(appConfig.baseUrl + 'labels/', labelData, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} labelId
   * @param {string} command
   * @return {Promise.<Object|ApiProblem>}
   */
  this.updateLabel = function (labelId, command) {
    return $http.patch(
      appConfig.baseUrl + 'labels/' + labelId,
      {'command': command},
      defaultApiConfig
    ).then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {uuid} labelId
   * @return {Promise.<Object|ApiProblem>}
   */
  this.deleteLabel = function (labelId) {
    return $http
      .delete(appConfig.baseUrl + 'labels/' + labelId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {uuid} labelId
   * @return {Promise.<Label>}
   */
  this.getLabelById = function (labelId) {
    return $http
      .get(appConfig.baseUrl + 'labels/' + labelId, defaultApiConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} query
   *  Matches case-insensitive and any part of a label.
   * @param {Number} [limit]
   *  The limit of results per page.
   * @param {Number} [start]
   * @return {Promise.<PagedCollection>}
   */
  this.findLabels = function (query, limit, start) {
    var requestConfig = _.cloneDeep(defaultApiConfig);
    requestConfig.params = {
      query: query,
      limit: limit ? limit : 30,
      start: start ? start : 0
    };

    return $http
      .get(appConfig.baseUrl + 'labels/', requestConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {uuid} roleId
   * @return {Promise.<Role>}
   */
  this.getRoleById = function (roleId) {
    return $http
      .get(appConfig.baseUrl + 'roles/' + roleId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} query
   *  Matches case-insensitive and any part of a label.
   * @param {Number} [limit]
   *  The limit of results per page.
   * @param {Number} [start]
   * @return {Promise.<PagedCollection>}
   */
  this.findRoles = function (query, limit, start) {
    var requestConfig = _.cloneDeep(defaultApiConfig);
    requestConfig.params = {
      query: query,
      limit: limit ? limit : 30,
      start: start ? start : 0
    };

    return $http
      .get(appConfig.baseUrl + 'roles/', requestConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {string}  name
   * @return {Promise.<Object|ApiProblem>} Object containing created roleId
   */
  this.createRole = function (name) {
    var roleData = {
      name: name
    };

    return $http
      .post(appConfig.baseUrl + 'roles/', roleData, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {uuid}    roleId
   * @param {string}  name
   * @return {Promise.<Object|ApiProblem>} Object containing created roleId
   */
  this.updateRoleName = function (roleId, name) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=RenameRole';

    var updateData = {
      'name': name
    };

    return $http
      .patch(appConfig.baseUrl + 'roles/' + roleId, updateData, requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {uuid}    roleId
   * @param {string}  constraint
   * @return {Promise.<Object|ApiProblem>} Object containing created roleId
   */
  this.updateRoleConstraint = function (roleId, constraint) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=SetConstraint';

    var updateData = {
      'constraint': constraint
    };

    return $http
      .patch(appConfig.baseUrl + 'roles/' + roleId, updateData, requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @return {Promise.Array<Permission>}
   */
  this.getPermissions = function () {
    var requestConfig = defaultApiConfig;

    return $http
      .get(appConfig.baseUrl + 'permissions/', requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role to retrieve permissions for
   * @return {Promise.Array<Permission>}
   */
  this.getRolePermissions = function (roleId) {
    var requestConfig = defaultApiConfig;
    return $http
      .get(appConfig.baseUrl + 'roles/' + roleId + '/permissions/', requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role to retrieve users for
   * @return {Promise.Array<User>}
   */
  this.getRoleUsers = function (roleId) {
    var requestConfig = defaultApiConfig;
    return $http
      .get(appConfig.baseUrl + 'roles/' + roleId + '/users/', requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} permissionKey
   *  The key for the permission
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  this.addPermissionToRole = function (permissionKey, roleId) {
    var requestConfig = defaultApiConfig;

    return $http
      .put(appConfig.baseUrl + 'roles/' + roleId + '/permissions/' + permissionKey, {}, requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} permissionKey
   *  The key for the permission
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  this.removePermissionFromRole = function (permissionKey, roleId) {
    var requestConfig = defaultApiConfig;

    return $http
      .delete(appConfig.baseUrl + 'roles/' + roleId + '/permissions/' + permissionKey, requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} userId
   *  The id of the user
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  this.addUserToRole = function (userId, roleId) {
    var requestConfig = defaultApiConfig;

    return $http
      .put(appConfig.baseUrl + 'roles/' + roleId + '/users/' + userId, {}, requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} email
   *  A valid email address with a specific domain. The wildcard '*' can be used in the local part.
   * @param {Number} [limit]
   *  The limit of results per page.
   * @param {Number} [start]
   * @return {Promise.<PagedCollection>}
   */
  this.findUsersByEmail = function (email, limit, start) {
    var requestConfig = _.cloneDeep(defaultApiConfig);
    requestConfig.params = {
      email: email ? email : '',
      limit: limit ? limit : 30,
      start: start ? start : 0
    };

    return $http
      .get(appConfig.baseUrl + 'users/', requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} email
   *  The e-mailaddress of a user.
   * @return {Promise}
   */
  this.findUserWithEmail = function(email) {
    var requestConfig = _.cloneDeep(defaultApiConfig);

    return $http
      .get(appConfig.baseUrl + 'users/emails/' + email, requestConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {uuid} roleId
   *  The uuid of the role to be removed.
   * @return {Promise}
   */
  this.removeRole = function (roleId) {
    return $http
      .delete(appConfig.baseUrl + 'roles/' + roleId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role to retrieve labels for
   * @return {Promise.Array<Permission>}
   */
  this.getRoleLabels = function (roleId) {
    return $http
      .get(appConfig.baseUrl + 'roles/' + roleId + '/labels/', defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role
   * @param {string} labelId
   *  The id of the label to be added
   * @return {Promise}
   */
  this.addLabelToRole = function (roleId, labelId) {
    return $http
      .put(appConfig.baseUrl + 'roles/' + roleId + '/labels/' + labelId, {}, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role
   * @param {string} labelId
   *  The id of the label to be removed
   * @return {Promise}
   */
  this.removeLabelFromRole = function (roleId, labelId) {
    return $http
      .delete(appConfig.baseUrl + 'roles/' + roleId + '/labels/' + labelId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} roleId
   *  roleId for the role
   * @param {string} userId
   *  The id of the user to be removed
   * @return {Promise}
   */
  this.removeUserFromRole = function (roleId, userId) {
    return $http
      .delete(appConfig.baseUrl + 'roles/' + roleId + '/users/' + userId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} userId
   *
   * @returns {Promise.<User>}
   */
  this.getUser = function(userId) {
    return $http
      .get(appConfig.baseUrl + 'users/' + userId, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} userId
   *
   * @return {Promise.<Object[]>}
   */
  this.getUserRoles = function (userId) {
    return $http
      .get(appConfig.baseUrl + 'users/' + userId + '/roles/', defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @return {Promise.<Object[]>}
   */
  this.getMyRoles = function () {
    return $http
      .get(appConfig.baseUrl + 'user/roles/', defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {URL} offerUrl
   * @param {string} domainModel
   * @param {string} reason (optional)
   */
  this.patchOffer = function (offerUrl, domainModel, reason) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=' + domainModel;

    var updateData = {
      'reason': reason
    };

    return $http
      .patch(offerUrl, (reason ? updateData : {}), requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {URL} offerUrl
   * @param {Date} [publicationDate]
   * @returns {Promise.<Object|ApiProblem>}
   */
  this.publishOffer = function (offerUrl, publicationDate) {
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.headers['Content-Type'] = 'application/ld+json;domain-model=Publish';
    var data = publicationDate instanceof Date ? {publicationDate: publicationDate} : {};

    return $http
      .patch(offerUrl.toString(), data, requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  };

  this.getCalendarSummary = function(offerUrl, format) {
    var plainConfig = _.cloneDeep(defaultApiConfig);
    plainConfig.headers.Accept = 'text/html';

    return $http
      .get(offerUrl + '/calendar-summary?format=' + format, plainConfig)
      .then(returnUnwrappedData);
  };

  /**
   * @param {URL} eventUrl
   * @param {Object} newCalendarData
   * @return {Promise.<Object|ApiProblem>} Object containing the duplicate info
   */
  this.duplicateEvent = function(eventUrl, newCalendarData) {
    return $http
      .post(eventUrl + '/copies/', newCalendarData, defaultApiConfig)
      .then(returnUnwrappedData, returnApiProblem);
  };

  /**
   * @param {string} path - The path to direct the HTTP request to.
   * @param {string} queryString - The query used to find events.
   * @param {number} [start] - From which event offset the result set should start.
   * @param {number} [itemsPerPage] - How many items should be in the result set.
   * @returns {Promise.<PagedCollection>} A promise that signals a successful retrieval of
   *  search results or a failure.
   */
  function find(path, queryString, start, itemsPerPage) {
    var offset = start || 0,
      limit = itemsPerPage || 30,
      searchParams = {
        start: offset,
        limit: limit
      };
    var requestOptions = _.cloneDeep(defaultApiConfig);
    requestOptions.params = searchParams;

    if (queryString.length) {
      searchParams.query = queryString;
    }

    return $http
      .get(path, requestOptions)
      .then(returnUnwrappedData, returnApiProblem);
  }

  /**
   * @param {Object} errorResponse
   * @return {Promise.<ApiProblem>}
   */
  function returnApiProblem(errorResponse) {
    if (errorResponse) {
      var problem = {
        type: new URL(_.get(errorResponse, 'data.type', appConfig.baseUrl + 'problem')),
        title: _.get(errorResponse, 'data.title', 'Something went wrong.'),
        detail: _.get(errorResponse, 'data.detail', 'We failed to perform the requested action!'),
        status: errorResponse.status
      };

      return $q.reject(problem);
    }
  }
}
UdbApi.$inject = ["$q", "$http", "appConfig", "$cookies", "uitidAuth", "$cacheFactory", "UdbEvent", "UdbPlace", "UdbOrganizer", "Upload", "$translate"];
})();

// Source: src/core/udb-event.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.UdbEvent
 * @description
 * # UdbEvent
 * UdbEvent factory
 */
angular
  .module('udb.core')
  .factory('UdbEvent', UdbEventFactory);

/* @ngInject */
function UdbEventFactory(EventTranslationState, UdbPlace, UdbOrganizer) {

  var EventPricing = {
    FREE: 'free',
    UNKNOWN: 'unknown',
    PAYED: 'payed'
  };

  function getCategoryLabel(jsonEvent, domain) {
    var label;
    var category = _.find(jsonEvent.terms, function (category) {
      return category.domain === domain;
    });

    if (category) {
      label = category.label;
    }

    return category;
  }

  function getPricing(jsonEvent) {
    var pricing = EventPricing.UNKNOWN;

    if (jsonEvent.bookingInfo && jsonEvent.bookingInfo.length > 0) {
      var price = parseFloat(jsonEvent.bookingInfo[0].price);
      if (price > 0) {
        pricing = EventPricing.PAYED;
      } else {
        pricing = EventPricing.FREE;
      }
    }

    return pricing;
  }

  function updateTranslationState(event) {

    var languages = {'en': false, 'fr': false, 'de': false},
        properties = ['name', 'description'];

    _.forEach(languages, function (language, languageKey) {
      var translationCount = 0,
          state;

      _.forEach(properties, function (property) {
        if (event[property] && event[property][languageKey]) {
          ++translationCount;
        }
      });

      if (translationCount) {
        if (translationCount === properties.length) {
          state = EventTranslationState.ALL;
        } else {
          state = EventTranslationState.SOME;
        }
      } else {
        state = EventTranslationState.NONE;
      }

      languages[languageKey] = state;
    });

    event.translationState = languages;
  }

  /**
   * Get the images that exist for this event.
   */
  function getImages(jsonEvent) {
    var images = [];
    if (jsonEvent.mediaObject) {
      for (var i = 0; i < jsonEvent.mediaObject.length; i++) {
        if (jsonEvent.mediaObject[i]['@type'] === 'schema:ImageObject') {
          images.push(jsonEvent.mediaObject[i]);
        }
      }
    }
    return images;

  }

  /**
   * @class UdbEvent
   * @constructor
   * @param {object}  jsonEvent
   */
  var UdbEvent = function (jsonEvent) {
    this.id = '';
    this.name = {};
    this.place = {};
    this.type = {};
    this.theme = {};
    /** @type {OpeningHoursData[]} **/
    this.openingHours = [];

    if (jsonEvent) {
      this.parseJson(jsonEvent);
    }
  };

  UdbEvent.prototype = {
    parseJson: function (jsonEvent) {
      this.id = jsonEvent['@id'].split('/').pop();
      this['@id'] = jsonEvent['@id'];
      this['@type'] = jsonEvent['@type'];
      this.apiUrl = new URL(jsonEvent['@id']);
      this.name = jsonEvent.name || {};
      this.description = angular.copy(jsonEvent.description) || {};
      this.calendarSummary = jsonEvent.calendarSummary;
      this.location = new UdbPlace(jsonEvent.location);
      // @todo Use getImages() later on.
      this.image = jsonEvent.image;
      this.images = _.reject(getImages(jsonEvent), 'contentUrl', jsonEvent.image);
      this.labels = _.union(jsonEvent.labels, jsonEvent.hiddenLabels);
      if (jsonEvent.organizer) {
        // if it's a full organizer object, parse it as one
        if (jsonEvent.organizer['@id']) {
          this.organizer = new UdbOrganizer(jsonEvent.organizer);
        } else {
          // just create an object
          this.organizer = {
            name: jsonEvent.organizer.name,
            email: jsonEvent.organizer.email ? (jsonEvent.organizer.email[0] || '-') : '-',
            phone: jsonEvent.organizer.phone ? (jsonEvent.organizer.phone[0] || '-') : '-'
          };
        }
      }
      if (jsonEvent.bookingInfo && jsonEvent.bookingInfo.length > 0) {
        this.price = parseFloat(jsonEvent.bookingInfo[0].price);
      }
      this.pricing = getPricing(jsonEvent);
      this.priceInfo = jsonEvent.priceInfo || [];
      this.publisher = jsonEvent.publisher || '';
      this.created = new Date(jsonEvent.created);
      this.modified = new Date(jsonEvent.modified);
      this.creator = jsonEvent.creator || '';
      this.type = getCategoryLabel(jsonEvent, 'eventtype') || '';
      this.theme = getCategoryLabel(jsonEvent, 'theme') || '';
      this.calendarType = jsonEvent.calendarType || '';
      this.startDate = jsonEvent.startDate;
      this.endDate = jsonEvent.endDate;
      this.subEvent = jsonEvent.subEvent || [];
      this.openingHours = jsonEvent.openingHours || [];
      this.mediaObject = jsonEvent.mediaObject || [];
      this.typicalAgeRange = jsonEvent.typicalAgeRange || '';
      this.bookingInfo = jsonEvent.bookingInfo || {};
      if (this.bookingInfo.urlLabel) {
        this.bookingInfo.urlLabel = _.get(
          jsonEvent.bookingInfo.urlLabel,
          jsonEvent.mainLanguage,
          jsonEvent.bookingInfo.urlLabel
        );
      }
      this.contactPoint = jsonEvent.contactPoint || {
        'url': [],
        'phone': [],
        'email': []
      };
      this.url = 'event/' + this.id;
      this.sameAs = jsonEvent.sameAs;
      this.additionalData = jsonEvent.additionalData || {};
      if (jsonEvent.typicalAgeRange) {
        this.typicalAgeRange = jsonEvent.typicalAgeRange;
      }
      if (jsonEvent.available) {
        this.available = jsonEvent.available;
      }
      if (jsonEvent.workflowStatus) {
        this.workflowStatus = jsonEvent.workflowStatus;
      }
      this.availableFrom = jsonEvent.availableFrom;
      this.uitpasData = {};

      this.audience = {
        audienceType: _.get(jsonEvent, 'audience.audienceType', 'everyone')
      };

      this.educationFields = [];
      this.educationLevels = [];
      this.educationTargetAudience = [];

      if (jsonEvent.terms) {
        this.educationFields = _.filter(jsonEvent.terms, 'domain', 'educationfield');
        this.educationLevels = _.filter(jsonEvent.terms, 'domain', 'educationlevel');
        this.educationTargetAudience = _.filter(jsonEvent.terms, function(term) {
          var leerlingenId = '2.1.14.0.0';
          var leerkrachtenId = '2.1.13.0.0';
          return (term.domain === 'targetaudience' && (term.id === leerlingenId || term.id === leerkrachtenId));
        });
      }

      this.facilities = _.filter(_.get(jsonEvent, 'terms', []), {domain: 'facility'});
      this.mainLanguage = jsonEvent.mainLanguage || 'nl';
      this.languages = jsonEvent.languages || [];
    },

    /**
     * Set the name of the event for a given langcode.
     */
    setName: function(name, langcode) {
      this.name[langcode] = name;
    },

    /**
     * Get the name of the event for a given langcode.
     */
    getName: function(langcode) {
      return this.name[langcode];
    },

    /**
     * Set the event type for this event.
     */
    setEventType: function(id, label) {
      this.type = {
        'id' : id,
        'label' : label,
        'domain' : 'eventtype',
      };
    },

    /**
     * Get the event type for this event.
     */
    getEventType: function() {
      return this.type;
    },

    /**
     * Get the label for the event type.
     */
    getEventTypeLabel: function() {
      return this.type.label ? this.type.label : '';
    },

    /**
     * Set the event type for this event.
     */
    setTheme: function(id, label) {
      this.theme = {
        'id' : id,
        'label' : label,
        'domain' : 'thema',
      };
    },

    /**
     * Get the event type for this event.
     */
    getTheme: function() {
      return this.theme;
    },

    /**
     * Get the label for the theme.
     */
    getThemeLabel: function() {
      return this.theme.label ? this.theme.label : '';
    },

    /**
     * Reset the opening hours.
     */
    resetOpeningHours: function() {
      this.openingHours = [];
    },

    /**
     * Get the opening hours for this event.
     *
     * @returns {OpeningHoursData[]}
     */
    getOpeningHours: function() {
      return this.openingHours;
    },

    /**
     * Set the location of this event.
     */
    setLocation: function(location) {
      this.location = location;
    },

    /**
     * Get the calendar for this event.
     */
    getLocation: function() {
      return this.location;
    },

    /**
     * Label the event with a label or a list of labels
     * @param {string|string[]} label
     */
    label: function (label) {
      var newLabels = [];
      var existingLabels = this.labels;

      if (_.isArray(label)) {
        newLabels = label;
      }

      if (_.isString(label)) {
        newLabels = [label];
      }

      newLabels = _.filter(newLabels, function (newLabel) {
        var similarLabel = _.find(existingLabels, function (existingLabel) {
          return existingLabel.toUpperCase() === newLabel.toUpperCase();
        });

        return !similarLabel;
      });

      this.labels = _.union(this.labels, newLabels);
    },

    /**
     * Unlabel a label from an event
     * @param {string} labelName
     */
    unlabel: function (labelName) {
      _.remove(this.labels, function (label) {
        return label === labelName;
      });
    },
    updateTranslationState: function (event) {
      event = event || this;
      updateTranslationState(event);
    },
    isExpired: function () {
      return this.calendarType !== 'permanent' && (new Date(this.endDate) < new Date());
    },
    hasFutureAvailableFrom: function() {
      var tomorrow = moment(new Date()).add(1, 'days');
      tomorrow.hours(0);
      tomorrow.minutes(0);
      tomorrow.seconds(0);
      if (this.availableFrom || this.availableFrom !== '') {
        var publicationDate = new Date(this.availableFrom);
        if (tomorrow < publicationDate) {
          return true;
        }
        else {
          return false;
        }
      } else {
        return false;
      }
    }
  };

  return (UdbEvent);
}
UdbEventFactory.$inject = ["EventTranslationState", "UdbPlace", "UdbOrganizer"];
})();

// Source: src/core/udb-organizer.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.core.directive:udbOrganizer
 * @description
 * # udbOrganizer
 */
angular
  .module('udb.core')
  .directive('udbOrganizer', udbOrganizer);

/* @ngInject */
function udbOrganizer(udbApi) {
  var event = {
    restrict: 'A',
    link: function postLink(scope, iElement, iAttrs) {

      // The organizer object that's returned from the server
      var organizer;

      if (!scope.organizer.title) {
        scope.fetching = true;
        var promise = udbApi.getOrganizerByLDId(scope.organizer.id);

        promise.then(function (organizerObject) {
          scope.organizer = organizerObject;
          scope.fetching = false;
        });
      } else {
        scope.fetching = false;
      }

    }
  };

  return event;
}
udbOrganizer.$inject = ["udbApi"];
})();

// Source: src/core/udb-organizer.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.UdbOrganizer
 * @description
 * # UdbOrganizer
 * UdbOrganizer factory
 */
angular
  .module('udb.core')
  .factory('UdbOrganizer', UdbOrganizerFactory);

/* @ngInject */
function UdbOrganizerFactory(UitpasLabels) {

  function isUitpas(organizer) {
    return hasUitpasLabel(organizer.labels) ||
      hasUitpasLabel(organizer.hiddenLabels);
  }

  function hasUitpasLabel(labels) {
    return arrayToLowerCase(labels) &&
        !_.isEmpty(_.intersection(arrayToLowerCase(labels), _.values(arrayToLowerCase(UitpasLabels))));
  }

  function arrayToLowerCase(array) {
    var lowerCaseArray = [];
    _.each(array, function(element, key) {
      lowerCaseArray[key] = element.toLowerCase();
    });

    return lowerCaseArray;
  }

  function getFirst(jsonOrganizer, path) {
    return _
      .chain(jsonOrganizer)
      .get(path, [])
      .first()
      .value();
  }

  /**
   * @class UdbOrganizer
   * @constructor
   */
  var UdbOrganizer = function (jsonOrganizer) {
    this.id = '';
    this.name = '';

    if (jsonOrganizer) {
      this.parseJson(jsonOrganizer);
    }
  };

  UdbOrganizer.prototype = {
    parseJson: function (jsonOrganizer) {
      this['@id'] = jsonOrganizer['@id'];
      this.id = jsonOrganizer['@id'].split('/').pop();
      // 1. Main language is now a required property.
      // Organizers can be created in a given main language.
      // 2. Previous projections had a default main language of nl.
      // 3. Even older projections had a non-translated name.
      // @todo @mainLanguage after a full replay only case 1 needs to be supported.
      this.name = _.get(jsonOrganizer.name, jsonOrganizer.mainLanguage, null) ||
          _.get(jsonOrganizer.name, 'nl', null) ||
        _.get(jsonOrganizer, 'name', '');
      this.address = _.get(jsonOrganizer.address, jsonOrganizer.mainLanguage, null) ||
          _.get(jsonOrganizer.address, 'nl', null) || jsonOrganizer.address || [];
      this.email = getFirst(jsonOrganizer, 'contactPoint.email');
      this.phone = getFirst(jsonOrganizer, 'contactPoint.phone');
      this.url = jsonOrganizer.url;
      this.contactPoint = jsonOrganizer.contactPoint;
      this.labels = _.union(jsonOrganizer.labels, jsonOrganizer.hiddenLabels);
      this.hiddenLabels = jsonOrganizer.hiddenLabels || [];
      this.isUitpas = isUitpas(jsonOrganizer);
      this.created = new Date(jsonOrganizer.created);
      this.deleted = Boolean(jsonOrganizer.workflowStatus === 'DELETED');
    }
  };

  return (UdbOrganizer);
}
UdbOrganizerFactory.$inject = ["UitpasLabels"];
})();

// Source: src/core/udb-organizers.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.organizers
 * @description
 * Service for organizers.
 */
angular
  .module('udb.core')
  .service('udbOrganizers', UdbOrganizers);

/* @ngInject */
function UdbOrganizers($q, udbApi, udbUitpasApi, UdbOrganizer) {

  /**
   * @param {string} name
   *  The name of the organizer to fuzzy search against.
   *
   * @return {Promise.<UdbOrganizer[]>}
   */
  this.suggestOrganizers = function(name) {
    var deferredOrganizer = $q.defer();

    function returnOrganizerSuggestions(pagedOrganizers) {
      var organizers = _.map(pagedOrganizers.member, function (jsonOrganizer) {
        return new UdbOrganizer(jsonOrganizer);
      });

      deferredOrganizer.resolve(organizers);
    }

    udbApi
      .findOrganisations(0, 10, null, name)
      .then(returnOrganizerSuggestions);

    return deferredOrganizer.promise;
  };

  this.findOrganizersWebsite = function(website) {
    return udbApi
        .findOrganisations(0, 10, website, null);
  };

  this.findOrganizersCardsystem = function(organizerId) {
    return udbUitpasApi
        .findOrganisationsCardSystems(organizerId);
  };

}
UdbOrganizers.$inject = ["$q", "udbApi", "udbUitpasApi", "UdbOrganizer"];
})();

// Source: src/core/udb-place.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.UdbTimestamps
 * @description
 * # UdbTimestamps
 * Contains timestamps info for the calendar
 */
angular
  .module('udb.core')
  .factory('UdbPlace', UdbPlaceFactory);

/* @ngInject */
function UdbPlaceFactory(EventTranslationState, placeCategories, UdbOrganizer) {

  function getCategoryByType(jsonPlace, domain) {
    var category = _.find(jsonPlace.terms, function (category) {
      return category.domain === domain;
    });

    if (category) {
      return category;
    }

    return;
  }

  /**
   * Return all categories for a given type.
   */
  function getCategoriesByType(jsonPlace, domain) {
    var categories = [];

    if (jsonPlace.terms) {
      for (var i = 0; i < jsonPlace.terms.length; i++) {
        if (jsonPlace.terms[i].domain === domain) {
          categories.push(jsonPlace.terms[i]);
        }
      }
    }

    return categories;
  }

  function updateTranslationState(place) {
    var languages = {'en': false, 'fr': false, 'de': false},
        properties = ['name', 'description'];

    _.forEach(languages, function (language, languageKey) {
      var translationCount = 0,
          state;

      _.forEach(properties, function (property) {
        if (place[property] && place[property][languageKey]) {
          ++translationCount;
        }
      });

      if (translationCount) {
        if (translationCount === properties.length) {
          state = EventTranslationState.ALL;
        } else {
          state = EventTranslationState.SOME;
        }
      } else {
        state = EventTranslationState.NONE;
      }

      languages[languageKey] = state;
    });

    place.translationState = languages;
  }

  /**
   * Get the images that exist for this event.
   */
  function getImages(jsonPlace) {

    var images = [];
    if (jsonPlace.mediaObject) {
      for (var i = 0; i < jsonPlace.mediaObject.length; i++) {
        if (jsonPlace.mediaObject[i]['@type'] === 'schema:ImageObject') {
          images.push(jsonPlace.mediaObject[i]);
        }
      }
    }

    return images;

  }

  /**
   * @class UdbPlace
   * @constructor
   */
  var UdbPlace = function (placeJson) {
    this.id = '';
    this.name = {};
    this.type = '';
    this.theme = {};
    this.calendar = {};
    this.address = {};
    /*this.address = {
      'addressCountry' : 'BE',
      'addressLocality' : '',
      'postalCode' : '',
      'streetAddress' : ''
    };*/

    if (placeJson) {
      this.parseJson(placeJson);
    }
  };

  UdbPlace.prototype = {
    parseJson: function (jsonPlace) {

      this.id = jsonPlace['@id'] ? jsonPlace['@id'].split('/').pop() : '';
      this['@id'] = jsonPlace['@id'];
      this['@type'] = jsonPlace['@type'];
      if (jsonPlace['@id']) {
        this.apiUrl = new URL(jsonPlace['@id']);
      }
      this.name = jsonPlace.name || {};
      //this.address = (jsonPlace.address && jsonPlace.address.nl) || jsonPlace.address || this.address;
      this.address = jsonPlace.address || {};
      this.theme = getCategoryByType(jsonPlace, 'theme') || {};
      this.description = angular.copy(jsonPlace.description) || {};
      this.calendarType = jsonPlace.calendarType || '';
      this.startDate = jsonPlace.startDate;
      this.endDate = jsonPlace.endDate;
      this.openingHours = jsonPlace.openingHours || [];
      this.typicalAgeRange = jsonPlace.typicalAgeRange || '';
      this.priceInfo = jsonPlace.priceInfo || [];
      this.bookingInfo = jsonPlace.bookingInfo || {};
      if (this.bookingInfo.urlLabel) {
        this.bookingInfo.urlLabel = _.get(
          jsonPlace.bookingInfo.urlLabel,
          jsonPlace.mainLanguage,
          jsonPlace.bookingInfo.urlLabel
        );
      }
      this.contactPoint = jsonPlace.contactPoint || {
        'url': [],
        'phone': [],
        'email': []
      };
      if (jsonPlace.organizer) {
        // if it's a full organizer object, parse it as one
        if (jsonPlace.organizer['@id']) {
          this.organizer = new UdbOrganizer(jsonPlace.organizer);
        } else {
          // just create an object
          this.organizer = {
            name: jsonPlace.organizer.name,
            email: jsonPlace.organizer.email ? (jsonPlace.organizer.email[0] || '-') : '-',
            phone: jsonPlace.organizer.phone ? (jsonPlace.organizer.phone[0] || '-') : '-'
          };
        }
      }
      this.image = jsonPlace.image;
      this.images = _.reject(getImages(jsonPlace), 'contentUrl', jsonPlace.image);
      this.labels = _.union(jsonPlace.labels, jsonPlace.hiddenLabels);
      this.mediaObject = jsonPlace.mediaObject || [];
      this.facilities = getCategoriesByType(jsonPlace, 'facility') || [];
      this.additionalData = jsonPlace.additionalData || {};
      if (jsonPlace['@id']) {
        this.url = 'place/' + this.id;
      }
      this.creator = jsonPlace.creator;
      if (jsonPlace.created) {
        this.created = new Date(jsonPlace.created);
      }
      this.modified = jsonPlace.modified;

      if (jsonPlace.terms) {
        var place = this;

        // Only add terms related to locations.
        angular.forEach(jsonPlace.terms, function (term) {
          angular.forEach(placeCategories, function(category) {
            if (term.id === category.id) {
              place.type = term;
              return;
            }
          });
        });
      }

      if (jsonPlace.workflowStatus) {
        this.workflowStatus = jsonPlace.workflowStatus;
      }

      if (jsonPlace.availableFrom) {
        this.availableFrom = jsonPlace.availableFrom;
      }

      this.facilities = _.filter(_.get(jsonPlace, 'terms', []), {domain: 'facility'});
      this.mainLanguage = jsonPlace.mainLanguage || 'nl';
      this.languages = jsonPlace.languages || [];
    },

    /**
     * Set the name of the event for a given langcode.
     */
    setName: function(name, langcode) {
      this.name[langcode] = name;
    },

    /**
     * Get the name of the event for a given langcode.
     */
    getName: function(langcode) {
      return this.name[langcode];
    },

    /**
     * Set the event type for this event.
     */
    setEventType: function(id, label) {
      this.type = {
        'id' : id,
        'label' : label,
        'domain' : 'eventtype',
      };
    },

    /**
     * Get the event type for this event.
     */
    getEventType: function() {
      return this.type;
    },

    /**
     * Get the label for the event type.
     */
    getEventTypeLabel: function() {
      return this.type.label ? this.type.label : '';
    },

    /**
     * Set the event type for this event.
     */
    setTheme: function(id, label) {
      this.theme = {
        'id' : id,
        'label' : label,
        'domain' : 'thema',
      };
    },

    /**
     * Get the event type for this event.
     */
    getTheme: function() {
      return this.theme;
    },

    /**
     * Get the label for the theme.
     */
    getThemeLabel: function() {
      return this.theme.label ? this.theme.label : '';
    },

    /**
     * Reset the opening hours.
     */
    resetOpeningHours: function() {
      this.openinghours = [];
    },

    /**
     * Get the opening hours for this event.
     *
     * @returns {OpeningHoursData[]}
     */
    getOpeningHours: function() {
      return this.openinghours;
    },

    setCountry: function(country) {
      this.address.country = country;
    },

    setLocality: function(locality) {
      this.address.addressLocality = locality;
    },

    setPostal: function(postalCode) {
      this.address.postalCode = postalCode;
    },

    setStreet: function(street) {
      this.address.streetAddress = street;
    },

    getCountry: function() {
      return this.address.country;
    },

    getLocality: function() {
      return this.address.addressLocality;
    },

    getPostal: function() {
      return this.address.postalCode;
    },

    getStreet: function(street) {
      return this.address.streetAddress;
    },

    /**
     * Label the event with a label or a list of labels
     * @param {string|string[]} label
     */
    label: function (label) {
      var newLabels = [];
      var existingLabels = this.labels;

      if (_.isArray(label)) {
        newLabels = label;
      }

      if (_.isString(label)) {
        newLabels = [label];
      }

      newLabels = _.filter(newLabels, function (newLabel) {
        var similarLabel = _.find(existingLabels, function (existingLabel) {
          return existingLabel.toUpperCase() === newLabel.toUpperCase();
        });

        return !similarLabel;
      });

      this.labels = _.union(this.labels, newLabels);
    },

    /**
     * Unlabel a label from an event
     * @param {string} labelName
     */
    unlabel: function (labelName) {
      _.remove(this.labels, function (label) {
        return label === labelName;
      });
    },

    updateTranslationState: function (event) {
      event = event || this;
      updateTranslationState(event);
    },

    hasFutureAvailableFrom: function() {
      var tomorrow = moment(new Date()).add(1, 'days');
      tomorrow.hours(0);
      tomorrow.minutes(0);
      tomorrow.seconds(0);
      if (this.availableFrom || this.availableFrom !== '') {
        var publicationDate = new Date(this.availableFrom);
        if (tomorrow < publicationDate) {
          return true;
        }
        else {
          return false;
        }
      } else {
        return false;
      }
    }

  };

  return (UdbPlace);
}
UdbPlaceFactory.$inject = ["EventTranslationState", "placeCategories", "UdbOrganizer"];
})();

// Source: src/core/udb3-content.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.Udb3Content
 * @description
 * Service to get udb3 content.
 */
angular
  .module('udb.core')
  .service('udb3Content', Udb3Content);

/* @ngInject */
function Udb3Content($q, $http, appConfig) {

  /**
   * Get the udb3 content for the current user.
   */

  this.getUdb3ContentForCurrentUser = function() {

    return $http.get(appConfig.baseApiUrl + 'udb3_content_current_user');

  };

}
Udb3Content.$inject = ["$q", "$http", "appConfig"];
})();

// Source: src/core/uitid-auth.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.core.uitidAuth
 * @description
 * # uitidAuth
 * Service in the udb.core.
 */
angular
  .module('udb.core')
  .service('uitidAuth', UitidAuth);

/* @ngInject */
function UitidAuth($window, $location, appConfig, $cookies) {

  function removeCookies () {
    $cookies.remove('token');
    $cookies.remove('user');
  }

  function buildBaseUrl() {
    var baseUrl = $location.protocol() + '://' + $location.host();
    var port = $location.port();

    return (port === 80) ? baseUrl : baseUrl + ':' + port;
  }

  /**
   * Log the active user out.
   */
  this.logout = function () {
    var destination = buildBaseUrl(),
      logoutUrl = appConfig.authUrl + 'logout';

    removeCookies();

    // redirect to login page
    logoutUrl += '?destination=' + encodeURIComponent(destination);
    $window.location.href = logoutUrl;
  };

  /**
   * Login by redirecting to UiTiD
   */
  this.login = function (language) {
    var currentLocation = $location.absUrl(),
        loginUrl = appConfig.authUrl + 'connect';

    removeCookies();

    // redirect to login page
    loginUrl += '?destination=' + encodeURIComponent(currentLocation) + '&lang=' + language;
    $window.location.href = loginUrl;
  };

  this.register = function (language) {
    var currentLocation = $location.absUrl(),
        registrationUrl = appConfig.authUrl + 'register';

    removeCookies();

    // redirect to login page
    registrationUrl += '?destination=' + encodeURIComponent(currentLocation) + '&lang=' + language;
    $window.location.href = registrationUrl;
  };

  this.setToken = function (token) {
    $cookies.put('token', token);
  };

  /**
   * @return {string|undefined}
   *  The JWToken of the currently logged in user or undefined.
   */
  this.getToken = function () {
    var service = this;
    var currentToken = $cookies.get('token');

    // check if a new JWT is set in the search parameters and parse it
    var queryParameters = $location.search();
    var newToken = queryParameters.jwt;

    if (newToken && newToken !== currentToken) {
      currentToken = newToken;
      service.setToken(newToken);
      $location.search('jwt', null);
    }

    return currentToken;
  };

  // TODO: Have this method return a promise, an event can be broadcast to keep other components updated.
  /**
   * Returns the currently logged in user
   */
  this.getUser = function () {
    return $cookies.getObject('user');
  };
}
UitidAuth.$inject = ["$window", "$location", "appConfig", "$cookies"];
})();

// Source: src/cultuurkuur/event-cultuurkuur.component.js
(function () {
'use strict';

angular
  .module('udb.cultuurkuur')
  .component('udbEventCultuurkuurComponent', {
    bindings: {
      event: '<',
      permission: '<'
    },
    templateUrl: 'templates/event-cultuurkuur.html',
    controller: EventCultuurKuurComponentController
  });

/**
 * @ngInject
 */
function EventCultuurKuurComponentController(appConfig) {
  var cm = this,
      cultuurkuurUrl = _.get(appConfig, 'cultuurkuurUrl');

  cm.previewLink = cultuurkuurUrl + 'agenda/e//' + cm.event.id + getUTMParameters('preview1.0');
  cm.editLink = cultuurkuurUrl + 'event/' + cm.event.id + '/edit' + getUTMParameters('edit1.0');
  cm.continueLink = cultuurkuurUrl + 'event/' + cm.event.id + '/edit' + getUTMParameters('continue1.0');
  cm.isIncomplete = (cm.event.educationFields.length === 0 && cm.event.educationLevels.length === 0);

  cm.cultuurKuurInfo = {
    levels : _.pluck(cm.event.educationLevels, 'label'),
    fields : _.pluck(cm.event.educationFields, 'label'),
    targetAudience : _.pluck(cm.event.educationTargetAudience, 'label')
  };

  cm.forSchools = cm.event.audience.audienceType === 'education';

  function getUTMParameters(type) {
    return '?utm_source=uitdatabank.be' +
    '&utm_medium=referral' +
    '&utm_campaign=udb3' +
    '&utm_content=' +
    type;
  }
}
EventCultuurKuurComponentController.$inject = ["appConfig"];
})();

// Source: src/dashboard/components/dashboard-event-item.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.dashboard.directive:udbDashboardEventItem
 * @description
 *  Renders a dashboard item for place
 */
angular
  .module('udb.dashboard')
  .directive('udbDashboardEventItem', udbDashboardEventItem);

/* @ngInject */
function udbDashboardEventItem() {
  var dashboardEventItemDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'offerCtrl',
    templateUrl: 'templates/dashboard-item.directive.html'
  };

  return dashboardEventItemDirective;
}
})();

// Source: src/dashboard/components/dashboard-place-item.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.dashboard.directive:udbDashboardPlaceItem
 * @description
 *  Renders a dashboard item for place.
 */
angular
  .module('udb.dashboard')
  .directive('udbDashboardPlaceItem', udbDashboardPlaceItem);

/* @ngInject */
function udbDashboardPlaceItem() {
  var dashboardPlaceItemDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'offerCtrl',
    templateUrl: 'templates/dashboard-item.directive.html'
  };

  return dashboardPlaceItemDirective;
}
})();

// Source: src/dashboard/components/event-delete-confirm-modal.controller.js
(function () {

'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventDeleteConfirmModalCtrl
 * @description
 * # EventDeleteConfirmModalCtrl
 * Modal to delete an event.
 */
angular
  .module('udb.dashboard')
  .controller('EventDeleteConfirmModalCtrl', EventDeleteConfirmModalController);

/* @ngInject */
function EventDeleteConfirmModalController($scope, $uibModalInstance, eventCrud, item) {

  $scope.item = item;
  $scope.saving = false;
  $scope.error = false;

  $scope.cancelRemoval = cancelRemoval;
  $scope.deleteEvent = deleteEvent;

  /**
   * Delete the event.
   */
  function deleteEvent() {
    $scope.error = false;
    $scope.saving = true;

    function showError() {
      $scope.saving = false;
      $scope.error = true;
    }

    eventCrud
      .deleteOffer(item)
      .then($uibModalInstance.close)
      .catch(showError);
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancelRemoval() {
    $uibModalInstance.dismiss();
  }

}
EventDeleteConfirmModalController.$inject = ["$scope", "$uibModalInstance", "eventCrud", "item"];
})();

// Source: src/dashboard/components/place-delete-confirm-modal.controller.js
(function () {

'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:PlaceDeleteConfirmModalCtrl
 * @description
 * # PlaceDeleteConfirmModalCtrl
 * Modal to delete an event.
 */
angular
  .module('udb.dashboard')
  .controller('PlaceDeleteConfirmModalCtrl', PlaceDeleteConfirmModalController);

/* @ngInject */
function PlaceDeleteConfirmModalController(
  $scope,
  $uibModalInstance,
  eventCrud,
  place,
  events,
  appConfig
) {
  $scope.place = place;
  $scope.saving = false;
  $scope.events = events ? events : [];
  $scope.hasEvents = $scope.events.length > 0;
  $scope.baseUrl = appConfig.udb3BaseUrl;
  $scope.cancelRemoval = cancelRemoval;
  $scope.deletePlace = deletePlace;

  function deletePlace() {
    $scope.saving = true;
    $scope.error = false;

    function showError() {
      $scope.saving = false;
      $scope.error = true;
    }

    eventCrud
      .deleteOffer(place)
      .then($uibModalInstance.close)
      .catch(showError);
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancelRemoval() {
    $uibModalInstance.dismiss();
  }

}
PlaceDeleteConfirmModalController.$inject = ["$scope", "$uibModalInstance", "eventCrud", "place", "events", "appConfig"];
})();

// Source: src/dashboard/dashboard.controller.js
(function () {
(function () {
  'use strict';

  /**
   * @ngdoc function
   * @name udbApp.controller:DashboardCtrl
   * @description
   * # DashboardCtrl
   * dashboard
   */
  angular
    .module('udb.dashboard')
    .controller('DashboardController', DashboardController);

  /* @ngInject */
  function DashboardController(
      $document,
      $uibModal,
      udbApi,
      eventCrud,
      offerLocator,
      SearchResultViewer,
      appConfig,
      moment,
      $sanitize
  ) {

    var dash = this;

    dash.pagedItemViewer = new SearchResultViewer(50, 1);
    dash.openDeleteConfirmModal = openDeleteConfirmModal;
    dash.updateItemViewer = updateItemViewer;
    dash.username = '';
    dash.hideOnlineDate = false;

    if (typeof(appConfig.addOffer) !== 'undefined') {
      if (typeof(appConfig.addOffer.toggle) !== 'undefined') {
        dash.toggleAddOffer = appConfig.addOffer.toggle;

        if (appConfig.addOffer.toggle) {
          if (typeof(appConfig.addOffer.expirationDate) !== 'undefined' ||
              appConfig.addOffer.expirationDate !== '') {
            if (moment().isAfter(moment(appConfig.addOffer.expirationDate))) {
              dash.toggleAddOffer = false;
            }
            else {
              dash.toggleAddOffer = true;
            }
          }
        }
      }
      else {
        dash.toggleAddOffer = true;
      }

      if (typeof(appConfig.addOffer.expirationMessage) !== 'undefined' ||
          appConfig.addOffer.expirationMessage !== '') {
        dash.addOfferExpirationMessage = appConfig.addOffer.expirationMessage;
      }
      else {
        dash.addOfferExpirationMessage = '';
      }
    }
    else {
      dash.toggleAddOffer = true;
    }

    if (typeof(appConfig.offerEditor.defaultPublicationDate) !== 'undefined') {
      var defaultPublicationDate = appConfig.offerEditor.defaultPublicationDate;
      if (defaultPublicationDate !== '') {
        dash.hideOnlineDate = true;
      }
    }

    if (typeof(appConfig.publicationRulesLink) !== 'undefined') {
      var publicationRulesLink = appConfig.publicationRulesLink;
      if (publicationRulesLink !== '') {
        dash.publicationRulesLink = publicationRulesLink;
      }
    }

    udbApi
      .getMe()
      .then(greetUser);

    function greetUser(user) {
      dash.username = user.nick;
    }

    /**
     * @param {PagedCollection} results
     */
    function setItemViewerResults(results) {
      offerLocator.addPagedCollection(results);
      dash.pagedItemViewer.setResults(results);
      $document.scrollTop(0);
    }

    function updateItemViewer() {
      udbApi
        .getDashboardItems(dash.pagedItemViewer.currentPage)
        .then(setItemViewerResults);
    }
    updateItemViewer();

    function openEventDeleteConfirmModal(item) {
      var modalInstance = $uibModal.open({
        templateUrl: 'templates/event-delete-confirm-modal.html',
        controller: 'EventDeleteConfirmModalCtrl',
        resolve: {
          item: function () {
            return item;
          }
        }
      });
      modalInstance.result.then(updateItemViewerOnJobFeedback);
    }

    function openPlaceDeleteConfirmModal(place) {

      function displayModal(place, events) {
        var modalInstance = $uibModal.open({
          templateUrl: 'templates/place-delete-confirm-modal.html',
          controller: 'PlaceDeleteConfirmModalCtrl',
          resolve: {
            place: function () {
              return place;
            },
            events: function () {
              return events;
            }
          }
        });

        modalInstance.result.then(updateItemViewerOnJobFeedback);
      }

      function showModalWithEvents(events) {
        displayModal(place, events);
      }

      // Check if this place has planned events.
      eventCrud
        .findEventsAtPlace(place.apiUrl)
        .then(showModalWithEvents);
    }

    /**
     * @param {EventCrudJob} job
     */
    function updateItemViewerOnJobFeedback(job) {
      function unlockItem() {
        job.item.showDeleted = false;
      }

      job.task.promise.then(updateItemViewer, unlockItem);
    }

    /**
     * Open the confirmation modal to delete an event/place.
     *
     * @param {Object} item
     */
    function openDeleteConfirmModal(item) {
      var itemType = item['@id'].indexOf('event') === -1 ? 'place' : 'event';

      // Fix for III-2625. Escaping single quotes won't work here.
      item.name = item.name.replace(/'/g, '');

      if (itemType === 'event') {
        openEventDeleteConfirmModal(item);
      }
      else {
        openPlaceDeleteConfirmModal(item);
      }
    }
  }
  DashboardController.$inject = ["$document", "$uibModal", "udbApi", "eventCrud", "offerLocator", "SearchResultViewer", "appConfig", "moment", "$sanitize"];

})();
})();

// Source: src/dashboard/dashboard.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.dashboard.directive:dashboard.html
 * @description
 * # udb dashboard directive
 */
angular
  .module('udb.dashboard')
  .directive('udbDashboard', udbDashboardDirective);

/* @ngInject */
function udbDashboardDirective() {
  return {
    templateUrl: 'templates/dashboard.html',
    controller: 'DashboardController',
    controllerAs: 'dash',
    restrict: 'EA'
  };
}
})();

// Source: src/duplication/event-duplication-calendar.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:DuplicationCalendarController
 * @description
 * # Duplication Calendar Controller
 */
angular
  .module('udb.duplication')
  .controller('DuplicationCalendarController', DuplicationCalendarController);

/* @ngInject */
function DuplicationCalendarController(EventFormData, OpeningHoursCollection, $rootScope, $controller, $scope) {
  var calendar = this;
  var duplicateFormData = EventFormData.clone();

  function duplicateTimingChanged(formData) {
    $rootScope.$emit('duplicateTimingChanged', formData);
  }

  $controller('BaseCalendarController', {calendar: calendar, $scope: $scope});

  calendar.init(duplicateFormData, _.cloneDeep(OpeningHoursCollection));

  calendar.formData
    .timingChanged$
    .subscribe(duplicateTimingChanged);
}
DuplicationCalendarController.$inject = ["EventFormData", "OpeningHoursCollection", "$rootScope", "$controller", "$scope"];
})();

// Source: src/duplication/event-duplication-calendar.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.duplication.directive:udbEventDuplicationCalendar
 * @description
 *  Shows the calendar when you try to create a duplicate event.
 */
angular
  .module('udb.duplication')
  .directive('udbEventDuplicationCalendar', udbEventDuplicationCalendar);

/* @ngInject */
function udbEventDuplicationCalendar() {
  return {
    restrict: 'AE',
    controller: 'DuplicationCalendarController',
    controllerAs: 'calendar',
    templateUrl: 'templates/form-event-calendar.component.html'
  };
}
})();

// Source: src/duplication/event-duplication-footer.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.duplication.component:udbEventDuplicationFooter
 * @description
 * # Event Duplication Footer
 * Footer component for migrating events
 */
angular
  .module('udb.duplication')
  .component('udbEventDuplicationFooter', {
    templateUrl: 'templates/event-duplication-footer.component.html',
    controller: EventDuplicationFooterController,
    controllerAs: 'duplication'
  });

function pickFirstEventArgument(event) {
  return event[1];
}

/* @ngInject */
function EventDuplicationFooterController($rootScope, eventDuplicator, $state, rx) {
  var controller = this;
  var duplicateTimingChanged$ = $rootScope
    .$eventToObservable('duplicateTimingChanged')
    .map(pickFirstEventArgument);
  var createDuplicate$ = rx.createObservableFunction(controller, 'createDuplicate');

  var duplicateFormData$ = duplicateTimingChanged$.startWith(false);

  duplicateFormData$
    .subscribe(function (duplicateFormData) {
      controller.readyForDuplication = !!duplicateFormData;
    });

  createDuplicate$
    .withLatestFrom(duplicateFormData$, function (createDuplicate, duplicateFormData) {
      if (duplicateFormData) {
        showAsyncDuplication();
        eventDuplicator
          .duplicate(duplicateFormData)
          .then(showDuplicate, showAsyncError);
      }
    })
    .subscribe();

  /**
   * @param {string} duplicateId
   */
  function showDuplicate(duplicateId) {
    $state.go('split.eventEdit', {id: duplicateId});
  }

  function showAsyncError() {
    controller.asyncError = true;
    controller.duplicating = false;
  }

  function showAsyncDuplication() {
    controller.asyncError = false;
    controller.duplicating = true;
  }
}
EventDuplicationFooterController.$inject = ["$rootScope", "eventDuplicator", "$state", "rx"];
})();

// Source: src/duplication/event-duplication-step.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.duplication.component:udbEventDuplicationStep
 * @description
 * # Event Duplication Step
 * Step component for migrating events
 */
angular
  .module('udb.duplication')
  .component('udbEventDuplicationStep', {
    templateUrl: 'templates/event-duplication-step.component.html',
    controller: EventDuplicationStepController,
    controllerAs: 'duplication'
  });

/* @ngInject */
function EventDuplicationStepController(EventFormData) {
  var controller = this;

  controller.eventId = EventFormData.id;

  controller.readyToDuplicate = function () {
    return false;
  };
}
EventDuplicationStepController.$inject = ["EventFormData"];
})();

// Source: src/duplication/event-duplicator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.duplication.eventDuplicator
 * @description
 * Event Duplicator Service
 */
angular
  .module('udb.duplication')
  .service('eventDuplicator', EventDuplicatorService);

/* @ngInject */
function EventDuplicatorService(udbApi, offerLocator) {
  var calendarDataProperties = [
    'calendar'
  ];

  /**
   * @param {object} duplicateInfo
   * @return {string}
   */
  function rememberDuplicateLocationAndReturnId(duplicateInfo) {
    offerLocator.add(duplicateInfo.eventId, duplicateInfo.url);

    return duplicateInfo.eventId;
  }

  /**
   * Duplicate an event using form date with the new timing info
   * @param {EventFormData} formData
   * @return {Promise.<string>}
   *  promises the duplicate id
   */
  this.duplicate = function(formData) {
    var calendarData = _.pick(formData, calendarDataProperties);

    return udbApi
      .duplicateEvent(formData.apiUrl, calendarData.calendar)
      .then(rememberDuplicateLocationAndReturnId);
  };
}
EventDuplicatorService.$inject = ["udbApi", "offerLocator"];
})();

// Source: src/entry/components/job-logo-states.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.entry.JobLogoStates
 * @description
 * # JobLogoStates
 * All the possible job logo states defined as a constant
 */
angular
  .module('udb.entry')
  .constant('JobLogoStates',
  /**
   * Enum for job logo states
   * @readonly
   * @enum {string}
   */
  {
    WARNING: 'warning',
    COMPLETE: 'complete',
    BUSY: 'busy',
    IDLE: 'idle'
  });
})();

// Source: src/entry/components/job-logo.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.entry.controller:JobLogoController
 * @description
 * # Job logo controller
 * Controller of the udb.entry
 */
angular
  .module('udb.entry')
  .controller('JobLogoController', JobLogoController);

/* @ngInject */
function JobLogoController(JobLogoStates, jobLogger, $rootScope) {
  var jl = this;

  /**
   * Calculate the current state the logo should be in
   * @return {boolean} current state
   */
  jl.updateCurrentState = function () {
    var stateChecks = [
      {
        state: JobLogoStates.WARNING,
        check: !_.isEmpty(jobLogger.getFailedJobs())
      },
      {
        state: JobLogoStates.COMPLETE,
        check: !_.isEmpty(jobLogger.getFinishedExportJobs())
      },
      {
        state: JobLogoStates.BUSY,
        check: jobLogger.hasActiveJobs()
      },
      {
        state: JobLogoStates.IDLE,
        // if you get this far there are no visible jobs
        check: true
      }
    ];

    var currentState = _.find(stateChecks, function (stateCheck) {
      return stateCheck.check;
    }).state;

    jl.state = currentState;
  };

  jl.getState = function () {
    return jl.state;
  };

  // set the initial state
  jl.updateCurrentState();

  $rootScope.$on('jobListsUpdated', jl.updateCurrentState);
}
JobLogoController.$inject = ["JobLogoStates", "jobLogger", "$rootScope"];
})();

// Source: src/entry/components/job-logo.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.entry.directive:jobLogo
 * @description
 * # udbJobLogo
 */
angular
  .module('udb.entry')
  .directive('udbJobLogo', udbJobLogo);

/* @ngInject */
function udbJobLogo() {
  var directive = {
    templateUrl: 'templates/job-logo.directive.html',
    restrict: 'EA',
    link: link,
    controllerAs: 'jl',
    controller: 'JobLogoController'
  };
  return directive;

  function link(scope, element, attrs) {
  }
}
})();

// Source: src/entry/crud/event-crud-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.EventCreationJob
 * @description
 * This Is the factory that creates an event creation job.
 */
angular
  .module('udb.entry')
  .factory('EventCrudJob', EventCrudJobFactory);

/* @ngInject */
function EventCrudJobFactory(BaseJob, $q, JobStates) {

  /**
   * @class EventCrudJob
   * @constructor
   * @param {string} commandId
   * @param {EventFormData} item
   * @param {string} action
   */
  var EventCrudJob = function (commandId, item, action) {
    BaseJob.call(this, commandId);
    this.item = item;
    this.action = action;
    this.task = $q.defer();
  };

  EventCrudJob.prototype = Object.create(BaseJob.prototype);
  EventCrudJob.prototype.constructor = EventCrudJob;

  EventCrudJob.prototype.finish = function () {
    BaseJob.prototype.finish.call(this);
    this.task.resolve(this.item.apiUrl);
  };

  EventCrudJob.prototype.fail = function () {
    BaseJob.prototype.fail.call(this);
    this.task.reject();
  };

  EventCrudJob.prototype.getDescription = function() {

    switch (this.action) {

      case 'createEvent':
        return 'Evenement toevoegen: "' + this.item.name.nl + '".';

      case 'createPlace':
        return 'Locatie toevoegen: "' + this.item.name.nl + '".';

      case 'updateDescription':
        return 'Beschrijving aanpassen: "' + this.item.name.nl + '".';

      case 'updateTypicalAgeRange':
        return 'Leeftijd aanpassen: "' + this.item.name.nl + '".';

      case 'updateOrganizer':
        return 'Organisator aanpassen: "' + this.item.name.nl + '".';

      case 'createOrganizer':
        return 'Organisatie toevoegen: "' + this.item.name.nl + '".';

      case 'deleteOrganizer':
        return 'Organisatie verwijderen: "' + this.item.name.nl + '".';

      case 'updateContactPoint':
        return 'Contact informatie aanpassen: "' + this.item.name.nl + '".';

      case 'updateBookingInfo':
        return 'Reservatie informatie aanpassen: "' + this.item.name.nl + '".';

      case 'updateExtraInfo':
        return 'Extra informatie aanpassen: "' + this.item.name.nl + '".';

      case 'updateFacilities':
        return 'Voorzieningen aanpassen: "' + this.item.name.nl + '".';

      case 'addImage':
        return 'Afbeelding toevoegen: "' + this.item.name.nl + '".';

      case 'updateImage':
        return 'Afbeelding aanpassen: "' + this.item.name.nl + '".';

      case 'deleteImage':
        return 'Afbeelding verwijderen: "' + this.item.name.nl + '".';

      case 'updateMajorInfo':
        return 'Hoofdinformatie aanpassen: "' +  this.item.name.nl + '".';

      case 'updatePriceInfo':
        return 'Prijsinformatie aanpassen: "' + this.item.name.nl + '".';

      case 'publishOffer':
        return 'Aanbod publiceren: "' + this.item.name.nl + '".';

    }

  };

  return (EventCrudJob);
}
EventCrudJobFactory.$inject = ["BaseJob", "$q", "JobStates"];
})();

// Source: src/entry/crud/event-crud.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.eventCrud
 * @description
 * Service for creating / updating events.
 */
angular
  .module('udb.entry')
  .service('eventCrud', EventCrud);

/* @ngInject */
function EventCrud(
  jobLogger,
  udbApi,
  udbUitpasApi,
  EventCrudJob,
  DeleteOfferJob,
  $rootScope,
  $q,
  offerLocator
) {

  var service = this;

  /**
   * @param {EventFormData} formData
   */
  function pickMajorInfoFromFormData(formData) {
    return _.pick(formData, function(property, name) {
      var isStream = name.charAt(name.length - 1) === '$';
      return (_.isDate(property) || !_.isEmpty(property)) && !isStream;
    });
  }

  /**
   * Creates a new offer and add the job to the logger.
   *
   * @param {EventFormData}  eventFormData
   *  The form data required to create an offer.
   *
   * @return {Promise.<EventFormData>}
   */
  service.createOffer = function (eventFormData) {

    var type = eventFormData.isEvent ? 'event' : 'place';

    var updateEventFormData = function(url) {
      eventFormData.apiUrl = url;
      eventFormData.id = url.toString().split('/').pop();

      offerLocator.add(eventFormData.id, eventFormData.apiUrl);
      $rootScope.$emit('eventFormSaved', eventFormData);

      udbApi
        .getOffer(url)
        .then(function(offer) {
          $rootScope.$emit('offerCreated', offer);
        });

      return eventFormData;
    };

    var majorInfo = pickMajorInfoFromFormData(eventFormData);

    return udbApi
      .createOffer(type, majorInfo)
      .then(updateEventFormData);
  };

  /**
   * Find all the events that take place here.
   *
   * @param {URL} url
   *
   * @return {Promise.<OfferIdentifier[]>}
   */
  service.findEventsAtPlace = function(url) {
    return udbApi.findEventsAtPlace(url);
  };

  /**
   * Delete an offer.
   *
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise.<EventCrudJob>}
   */
  service.deleteOffer = function (offer) {
    function logJobAndFlagAsDeleted(response) {
      var jobData = response.data;
      var job = new DeleteOfferJob(jobData.commandId, offer);
      offer.showDeleted = true;
      jobLogger.addJob(job);

      return $q.resolve(job);
    }

    return udbApi
      .deleteOffer(offer)
      .then(logJobAndFlagAsDeleted);
  };

  /**
   * Update the major info of an event / place.
   * @param {EventFormData} eventFormData
   */
  service.updateMajorInfo = function(eventFormData) {
    var majorInfo = pickMajorInfoFromFormData(eventFormData);

    udbApi
      .updateMajorInfo(eventFormData.apiUrl, majorInfo)
      .then(jobCreatorFactory(eventFormData, 'updateItem'));
  };

  /**
   * Creates a new organizer.
   */
  service.createOrganizer = function(organizer) {
    return udbApi.createOrganizer(organizer);
  };

  /**
   * Update the main language description and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise.<EventCrudJob>}
   */
  service.updateDescription = function(item) {
    return udbApi
      .translateProperty(item.apiUrl, 'description', item.mainLanguage, item.description[item.mainLanguage])
      .then(jobCreatorFactory(item, 'updateDescription'));
  };

  /**
   * Update the adress of a place and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise.<EventCrudJob>}
   */
  service.translateAddress = function(item) {
    return updateOfferProperty(item, 'typicalAgeRange', 'updateTypicalAgeRange');
  };

  /**
   * Update the typical age range and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise.<EventCrudJob>}
   */
  service.updateTypicalAgeRange = function(item) {
    return updateOfferProperty(item, 'typicalAgeRange', 'updateTypicalAgeRange');
  };

  /**
   * Update the typical age range and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise.<EventCrudJob>}
   */
  service.deleteTypicalAgeRange = function(item) {
    return udbApi
      .deleteTypicalAgeRange(item.apiUrl)
      .then(jobCreatorFactory(item, 'updateTypicalAgeRange'));
  };

  /**
   * Update the connected organizer and it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise.<EventCrudJob>}
   */
  service.updateOrganizer = function(item) {
    return udbApi
      .updateProperty(item.apiUrl, 'organizer', item.organizer.id)
      .then(jobCreatorFactory(item, 'updateOrganizer'));
  };

  /**
   * Delete the organizer for the event / place.
   *
   * @param {EventFormData} item
   * @returns {Promise.<EventCrudJob>}
   */
  service.deleteOfferOrganizer = function(item) {
    return udbApi
      .deleteOfferOrganizer(item.apiUrl, item.organizer.id)
      .then(jobCreatorFactory(item, 'deleteOrganizer'));
  };

  /**
   * Update UiTPAS info for the event.
   *
   * @param {EventFormData} item
   * @returns {Promise.<EventCrudJob>}
   */
  service.updateEventUitpasData = function(item) {
    return udbUitpasApi
        .updateEventUitpasData(item.usedDistributionKeys, item.id)
        .then(jobCreatorFactory(item, 'updateUitpasInfo'));
  };

  /**
   * Get the Uitpas data from an event.
   * @param {string} cdbid
   * @returns {Promise}
   */
  service.getEventUitpasData = function(cdbid) {
    return udbUitpasApi.getEventUitpasData(cdbid);
  };

  /**
   * @param {EventFormData} item
   * @param {string} jobName
   *
   * @return {Function}
   *  Return a job creator that takes an http job creation response and turns it into a EventCrudJob promise.
   */
  function jobCreatorFactory(item, jobName) {
    function jobCreator(response) {
      var jobData = response.data ? response.data : response;
      var job = new EventCrudJob(jobData.commandId, item, jobName);
      addJobAndInvalidateCache(jobLogger, job);

      return $q.resolve(job);
    }

    return jobCreator;
  }

  /**
   * Update the price info and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise.<EventCrudJob>}
   */
  service.updatePriceInfo = function(item) {
    return udbApi
      .updatePriceInfo(item.apiUrl, item.priceInfo)
      .then(function (response) {
        var jobData = response.data;
        var job = new EventCrudJob(jobData.commandId, item, 'updatePriceInfo');
        addJobAndInvalidateCache(jobLogger, job);

        return $q.resolve(job);
      });
  };

  /**
   * Update the contact point and add it to the job logger.
   *
   * @param {EventFormData} item
   * @returns {Promise.<EventCrudJob>}
   */
  service.updateContactPoint = function(item) {
    return updateOfferProperty(item, 'contactPoint', 'updateContactInfo');
  };

  /**
   * Update the booking info and add it to the job logger.
   *
   * @param {EventFormData} item
   *
   * @returns {Promise.<EventCrudJob>}
   */
  service.updateBookingInfo = function(item) {
    var allowedProperties = [
      'url',
      'urlLabel',
      'email',
      'phone',
      'availabilityStarts',
      'availabilityEnds'
    ];

    var bookingInfo =  _.pick(item.bookingInfo, function(property, propertyName) {
      return _.includes(allowedProperties, propertyName) && (_.isDate(property) || !_.isEmpty(property));
    });

    if (bookingInfo.availabilityStarts) {
      bookingInfo.availabilityStarts = bookingInfo.availabilityStarts;
    }

    if (bookingInfo.availabilityEnds) {
      bookingInfo.availabilityEnds = bookingInfo.availabilityEnds;
    }

    if (!_.has(bookingInfo, 'url')) {
      bookingInfo = _.omit(bookingInfo, 'urlLabel');
    }

    if (_.intersection(_.keysIn(bookingInfo), ['url', 'phone', 'email']).length === 0) {
      bookingInfo = {};
    }

    return udbApi
      .updateProperty(item.apiUrl, 'bookingInfo', bookingInfo)
      .then(jobCreatorFactory(item, 'updateBookingInfo'));
  };

  /**
   * @param {EventFormData} offer
   * @param {string} propertyName
   * @param {string} jobName
   *
   * @return {Promise.<EventCrudJob>}
   */
  function updateOfferProperty(offer, propertyName, jobName) {
    return udbApi
      .updateProperty(offer.apiUrl, propertyName, offer[propertyName])
      .then(function (response) {
        var jobData = response.data;
        var job = new EventCrudJob(jobData.commandId, offer, jobName);
        addJobAndInvalidateCache(jobLogger, job);

        return $q.resolve(job);
      });
  }

  /**
   * @param {udbEvent|udbPlace} item
   * @param {Object[]} facilities
   *
   * @return {Promise.<EventCrudJob>}
   */
  service.updateFacilities = function(item, facilities) {
    return udbApi
      .updateOfferFacilities(item.apiUrl, _.map(facilities, 'id'))
      .then(jobCreatorFactory(item, 'updateFacilities'));
  };

  /**
   * Add a new image to the item.
   *
   * @param {EventFormData} item
   * @param {MediaObject} image
   * @returns {Promise.<EventCrudJob>}
   */
  service.addImage = function(item, image) {
    var imageId = image.id || image['@id'].split('/').pop();

    return udbApi
      .addImage(item.apiUrl, imageId)
      .then(jobCreatorFactory(item, 'addImage'));
  };

  /**
   * Update an image of the item.
   *
   * @param {EventFormData} item
   * @param {MediaObject} image
   * @param {string} description
   * @param {string} copyrightHolder
   * @returns {Promise.<EventCrudJob>}
   */
  service.updateImage = function(item, image, description, copyrightHolder) {
    var imageId = image['@id'].split('/').pop();

    return udbApi
      .updateImage(item.apiUrl, imageId, description, copyrightHolder)
      .then(jobCreatorFactory(item, 'updateImage'));
  };

  /**
   * Remove an image from an item.
   *
   * @param {EventFormData} item
   * @param {image} image
   * @returns {Promise.<EventCrudJob>}
   */
  service.removeImage = function(item, image) {
    var imageId = image['@id'].split('/').pop();

    return udbApi
      .removeImage(item.apiUrl, imageId)
      .then(jobCreatorFactory(item, 'removeImage'));
  };

  /**
   * Select the main image for an item.
   *
   * @param {EventFormData} item
   * @param {image} image
   * @returns {Promise.<EventCrudJob>}
   */
  service.selectMainImage = function (item, image) {
    var imageId = image['@id'].split('/').pop();

    return udbApi
      .selectMainImage(item.apiUrl, imageId)
      .then(jobCreatorFactory(item, 'selectMainImage'));
  };

  /**
   * Select the main image for an item.
   *
   * @param {EventFormData} item
   * @param {string} audienceType
   * @returns {Promise.<EventCrudJob>}
   */
  service.setAudienceType = function (item, audienceType) {
    return udbApi
      .setAudienceType(item.apiUrl, audienceType)
      .then(jobCreatorFactory(item, 'setAudienceType'));
  };

  /**
   * @param {EventFormData} offer
   * @param {Date} [publicationDate]
   *
   * @return {Promise.<EventCrudJob>}
   */
  service.publishOffer = function(offer, publicationDate) {
    return udbApi
      .publishOffer(offer.apiUrl, publicationDate)
      .then(function (response) {
        var job = new EventCrudJob(response.commandId, offer, 'publishOffer');

        addJobAndInvalidateCache(jobLogger, job);

        return $q.resolve(job);
      });
  };

  /**
   * @param {Object} event Angular event object
   * @param {EventFormData} eventFormData
   */
  function updateMajorInfo(event, eventFormData) {
    service.updateMajorInfo(eventFormData);
  }

  /**
   * @param {JobLogger} jobLogger
   * @param {EventCrudJob} job
     */
  function addJobAndInvalidateCache(jobLogger, job) {
    jobLogger.addJob(job);

    // unvalidate cache on success
    job.task.promise.then(function (offerLocation) {
      udbApi.removeItemFromCache(offerLocation.toString());
    }, function() {});
  }

  $rootScope.$on('eventTypeChanged', updateMajorInfo);
  $rootScope.$on('eventThemeChanged', updateMajorInfo);
  $rootScope.$on('eventTimingChanged', updateMajorInfo);
  $rootScope.$on('eventTitleChanged', updateMajorInfo);
}
EventCrud.$inject = ["jobLogger", "udbApi", "udbUitpasApi", "EventCrudJob", "DeleteOfferJob", "$rootScope", "$q", "offerLocator"];
})();

// Source: src/entry/delete/delete-offer-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.DeleteOfferJob
 * @description
 * This is the factory that creates jobs to delete events and places.
 */
angular
  .module('udb.entry')
  .factory('DeleteOfferJob', DeleteOfferJobFactory);

/* @ngInject */
function DeleteOfferJobFactory(BaseJob, $q, JobStates) {

  /**
   * @class DeleteOfferJob
   * @constructor
   * @param {string} commandId
   * @param {UdbEvent|UdbPlace} item
   */
  var DeleteOfferJob = function (commandId, item) {
    BaseJob.call(this, commandId);

    this.item = item;
    this.task = $q.defer();
  };

  DeleteOfferJob.prototype = Object.create(BaseJob.prototype);
  DeleteOfferJob.prototype.constructor = DeleteOfferJob;

  DeleteOfferJob.prototype.finish = function () {
    BaseJob.prototype.finish.call(this);

    if (this.state !== JobStates.FAILED) {
      this.task.resolve();
    }
  };

  DeleteOfferJob.prototype.fail = function () {
    BaseJob.prototype.fail.call(this);

    this.task.reject();
  };

  DeleteOfferJob.prototype.getDescription = function() {
    return 'Item verwijderen: "' +  this.item.name + '".';
  };

  return (DeleteOfferJob);
}
DeleteOfferJobFactory.$inject = ["BaseJob", "$q", "JobStates"];
})();

// Source: src/entry/editing/offer-editor.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.offerEditor
 * @description
 * # offerEditor
 * Service in the udb.entry.
 */
angular
  .module('udb.entry')
  .service('offerEditor', OfferEditor);

/* @ngInject */
function OfferEditor(jobLogger, udbApi, VariationCreationJob, BaseJob, $q, variationRepository) {
  var editor = this;
  /**
   * Edit the description of an offer. We never edit the original offer but use a variation instead.
   *
   * @param {UdbEvent|UdbPlace} offer        The original offer
   * @param {string}   description           The new description text
   * @param {string}   [purpose=personal]    The purpose of the variation that will be edited
   */
  this.editDescription = function (offer, description, purpose) {
    var deferredUpdate = $q.defer();
    var variationPromise = variationRepository.getPersonalVariation(offer);

    var removeDescription = function (variation) {
      editor
        .deleteVariation(offer, variation.id)
        .then(revertToOriginal, rejectUpdate);
    };

    function rejectUpdate(errorResponse) {
      deferredUpdate.reject(errorResponse.data);
    }

    function revertToOriginal() {
      deferredUpdate.resolve(false);
    }

    var handleCreationJob = function (jobData) {
      var variation = angular.copy(offer);
      variation.description.nl = description;
      var variationCreationJob = new VariationCreationJob(jobData.data.commandId, offer.id);
      jobLogger.addJob(variationCreationJob);

      variationCreationJob.task.promise.then(function (jobInfo) {
        variation.id = jobInfo['offer_variation_id']; // jshint ignore:line
        variationRepository.save(offer['@id'], variation);
        deferredUpdate.resolve();
      }, rejectUpdate);
    };

    var createVariation = function () {
      purpose = purpose || 'personal';

      udbApi
        .createVariation(offer.apiUrl, description, purpose)
        .then(handleCreationJob, rejectUpdate);
    };

    var editDescription = function (variation) {
      var editRequest = udbApi.editDescription(variation.id, description);

      editRequest.success(function (jobData) {
        variation.description.nl = description;
        jobLogger.addJob(new BaseJob(jobData.commandId));
        deferredUpdate.resolve();
      });

      editRequest.error(rejectUpdate);
    };

    if (description) {
      variationPromise.then(editDescription, createVariation);
    } else {
      variationPromise.then(removeDescription, revertToOriginal);
    }

    return deferredUpdate.promise;
  };

  this.deleteVariation = function (offer, variationId) {
    var deletePromise = udbApi.deleteVariation(variationId);

    deletePromise.success(function (jobData) {
      jobLogger.addJob(new BaseJob(jobData.commandId));
      variationRepository.remove(offer['@id']);
    });

    return deletePromise;
  };
}
OfferEditor.$inject = ["jobLogger", "udbApi", "VariationCreationJob", "BaseJob", "$q", "variationRepository"];
})();

// Source: src/entry/editing/variation-creation-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.VariationCreationJob
 * @description
 * # Variation Creation Job
 * This Is the factory that creates a variation creation job
 */
angular
  .module('udb.entry')
  .factory('VariationCreationJob', VariationCreationJobFactory);

/* @ngInject */
function VariationCreationJobFactory(BaseJob, JobStates, $q) {

  /**
   * @class VariationCreationJob
   * @constructor
   * @param {string} commandId
   * @param {string} offerId
   */
  var VariationCreationJob = function (commandId, offerId) {
    BaseJob.call(this, commandId);
    this.task = $q.defer();
    this.offerId = offerId;
  };

  VariationCreationJob.prototype = Object.create(BaseJob.prototype);
  VariationCreationJob.prototype.constructor = VariationCreationJob;

  VariationCreationJob.prototype.finish = function () {
    if (this.state !== JobStates.FAILED) {
      this.state = JobStates.FINISHED;
      this.finished = new Date();
    }
    this.progress = 100;
  };

  VariationCreationJob.prototype.info = function (jobInfo) {
    this.task.resolve(jobInfo);
  };

  VariationCreationJob.prototype.fail = function () {
    this.finished = new Date();
    this.state = JobStates.FAILED;
    this.progress = 100;
    this.task.reject('Failed to create a variation for offer with id: ' + this.offerId);
  };

  return (VariationCreationJob);
}
VariationCreationJobFactory.$inject = ["BaseJob", "JobStates", "$q"];
})();

// Source: src/entry/labelling/offer-label-batch-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.OfferLabelBatchJob
 * @description
 * # BaseJob
 * This Is the factory that creates an event export job
 */
angular
  .module('udb.entry')
  .factory('OfferLabelBatchJob', OfferLabelBatchJobFactory);

/* @ngInject */
function OfferLabelBatchJobFactory(BaseJob, JobStates) {

  /**
   * @class OfferLabelBatchJob
   * @constructor
   * @param {string} commandId
   * @param {string[]} offers
   * @param {string} label
   */
  var OfferLabelBatchJob = function (commandId, offers, label) {
    BaseJob.call(this, commandId);
    this.events = offers;
    this.addEventsAsTask(offers);
    this.label = label;
  };

  OfferLabelBatchJob.prototype = Object.create(BaseJob.prototype);
  OfferLabelBatchJob.prototype.constructor = OfferLabelBatchJob;

  OfferLabelBatchJob.prototype.addEventsAsTask = function (offers) {
    var job = this;
    _.forEach(offers, function (offer) {
      job.addTask({id: offer});
    });
  };

  OfferLabelBatchJob.prototype.getDescription = function () {
    var job = this,
        description;

    if (this.state === JobStates.FAILED) {
      description = 'Labelen van evenementen mislukt';
    } else {
      description = 'Label ' + job.events.length + ' items met "' + job.label + '"';
    }

    return description;
  };

  return (OfferLabelBatchJob);
}
OfferLabelBatchJobFactory.$inject = ["BaseJob", "JobStates"];
})();

// Source: src/entry/labelling/offer-label-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.OfferLabelJob
 * @description
 * # Event Label Job
 * This Is the factory that creates an event label job
 */
angular
  .module('udb.entry')
  .factory('OfferLabelJob', OfferLabelJobFactory);

/* @ngInject */
function OfferLabelJobFactory(BaseJob, JobStates) {

  /**
   * @class OfferLabelJob
   * @constructor
   * @param {string} commandId
   * @param {UdbEvent|UdbPlace} offer
   * @param {string} label
   * @param {boolean} unlabel set to true when unlabeling
   */
  var OfferLabelJob = function (commandId, offer, label, unlabel) {
    BaseJob.call(this, commandId);
    this.offer = offer;
    this.label = label;
    this.unlabel = !!unlabel || false;
  };

  OfferLabelJob.prototype = Object.create(BaseJob.prototype);
  OfferLabelJob.prototype.constructor = OfferLabelJob;

  OfferLabelJob.prototype.getDescription = function () {
    var job = this,
        description;

    if (job.state === JobStates.FAILED) {
      description = 'Labelen van evenement mislukt';
    } else {
      if (job.unlabel) {
        description = 'Verwijder label "' + job.label + '" van "' + job.offer.name.nl + '"';
      } else {
        description = 'Label "' + job.offer.name.nl + '" met "' + job.label + '"';
      }
    }

    return description;
  };

  return (OfferLabelJob);
}
OfferLabelJobFactory.$inject = ["BaseJob", "JobStates"];
})();

// Source: src/entry/labelling/offer-label-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.entry.controller:OfferLabelModalCtrl
 * @description
 * # OfferLabelModalCtrl
 * Controller of the udb.entry
 */
angular
  .module('udb.entry')
  .controller('OfferLabelModalCtrl', OfferLabelModalCtrl);

/* @ngInject */
function OfferLabelModalCtrl($uibModalInstance) {
  var lmc = this;
  // ui-select can't get to this scope variable unless you reference it from the $parent scope.
  // seems to be 1.3 specific issue, see: https://github.com/angular-ui/ui-select/issues/243
  lmc.labels = [];
  lmc.close = close;
  lmc.ok = ok;
  lmc.labelNames = '';
  /**
   * This label-selection list used to contain labels that were last used by the user.
   * The endpoint to get these labels has been removed so we can no longer fetch them.
   * @see {@link https://jira.uitdatabank.be/browse/III-1708} for further information.
   */
  lmc.labelSelection = [];
  lmc.alert = false;
  lmc.minimumInputLength = 2;
  lmc.maxInputLength = 255;

  function ok() {
    // reset error msg
    lmc.alert = false;

    // Get the labels selected by checkbox
    var checkedLabels = lmc.labelSelection.filter(function (label) {
      return label.selected;
    }).map(function (label) {
      return label.name;
    });

    //add the labels
    var inputLabels = parseLabelInput(lmc.labelNames);

    if (lmc.alert) {
      return;
    }

    // join arrays and remove doubles
    var labels = _.union(checkedLabels, inputLabels);

    $uibModalInstance.close(labels);
  }

  function close() {
    $uibModalInstance.dismiss('cancel');
  }

  function areLengthCriteriaMet(length) {
    return (length >= lmc.minimumInputLength && length <= lmc.maxInputLength);
  }

  function parseLabelInput(stringWithLabels) {
    //split sting into array of labels
    var labels = stringWithLabels.split(';');

    // trim whitespaces
    labels = _.each(labels, function (label, index) {
      labels[index] = label.trim();
    });

    // remove empty strings
    labels = _.without(labels, '');

    var i;
    for (i = 0; i < labels.length; i++) {
      if (!areLengthCriteriaMet(labels[i].length)) {
        lmc.alert = 'Een label mag minimum 2 en maximum 255 karakters bevatten.';
        break;
      }
    }

    return labels;
  }
}
OfferLabelModalCtrl.$inject = ["$uibModalInstance"];
})();

// Source: src/entry/labelling/offer-labeller.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.evenLabeller
 * @description
 * # offerLabeller
 * Service in the udb.entry.
 */
angular
  .module('udb.entry')
  .service('offerLabeller', OfferLabeller);

/* @ngInject */
function OfferLabeller(jobLogger, udbApi, OfferLabelJob, OfferLabelBatchJob, QueryLabelJob, $q, $uibModal) {
  var offerLabeller = this;

  /**
   * A helper function to create and log jobs
   *
   * This partial function takes a constructor for a specific job type and passes on the arguments.
   *
   * @param {BaseJob} jobType
   *  A job type that's based on BaseJob.
   */
  function jobCreatorFactory(jobType) {
    var args =  Array.prototype.slice.call(arguments);
    var info = args.shift(); // contains a function with argument info etc.

    function jobCreator(response) {
      args.unshift(response.data.commandId);
      args.unshift(info); // needs to be the first element
      var job = new (Function.prototype.bind.apply(jobType, args))();

      jobLogger.addJob(job);

      return $q.resolve(job);
    }

    return jobCreator;
  }

  /**
   * Label an event with a label
   * @param {UdbEvent|UdbPlace} offer
   * @param {string} labelName
   */
  this.label = function (offer, labelName) {
    var result = {
      success: false,
      name: labelName
    };

    return udbApi
      .labelOffer(offer.apiUrl, labelName)
      .then(jobCreatorFactory(OfferLabelJob, offer, labelName))
      .then(function(response) {
        offer.label(labelName);
        result.success = true;
        result.message = response.id;
        return result;
      })
      .catch(function(error) {
        result.message = error.data.title;
        return result;
      });
  };

  /**
   * Unlabel a label from an event
   * @param {UdbEvent|UdbPlace} offer
   * @param {string} labelName
   *
   * @return {Promise.<OfferLabelJob|ApiProblem>}
   */
  this.unlabel = function (offer, labelName) {
    function eagerlyUnlabelAndPassOnResponse(response) {
      offer.unlabel(labelName);
      return response;
    }

    return udbApi
      .unlabelOffer(offer.apiUrl, labelName)
      .then(eagerlyUnlabelAndPassOnResponse)
      .then(jobCreatorFactory(OfferLabelJob, offer, labelName, true));
  };

  /**
   * @param {OfferIdentifier[]} offers
   * @param {string} labelName
   */
  this.labelOffersById = function (offers, labelName) {
    return udbApi
      .labelOffers(offers, labelName)
      .then(jobCreatorFactory(OfferLabelBatchJob, offers, labelName));
  };

  /**
   *
   * @param {string} query
   * @param {string} labelName
   * @param {Number} eventCount
   */
  this.labelQuery = function (query, labelName, eventCount) {
    eventCount = eventCount || 0;

    return udbApi
      .labelQuery(query, labelName)
      .then(jobCreatorFactory(QueryLabelJob, eventCount, labelName));
  };

  /**
   * @param {string} labelName
   * @param {Number} [maxItems]
   * @return {Promise.<Label[]>}
   */
  offerLabeller.getSuggestions = function (labelName, maxItems) {
    var max = typeof maxItems !== 'undefined' ?  maxItems : 5;
    /** @param {PagedCollection} pagedSearchResults */
    function returnSimilarLabels(pagedSearchResults) {
      return pagedSearchResults.member;
    }

    return udbApi
      .findLabels(labelName, max)
      .then(returnSimilarLabels);
  };
}
OfferLabeller.$inject = ["jobLogger", "udbApi", "OfferLabelJob", "OfferLabelBatchJob", "QueryLabelJob", "$q", "$uibModal"];
})();

// Source: src/entry/labelling/query-label-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.QueryLabelJob
 * @description
 * # BaseJob
 * This Is the factory that creates an event export job
 */
angular
  .module('udb.entry')
  .factory('QueryLabelJob', QueryLabelJobFactory);

/* @ngInject */
function QueryLabelJobFactory(BaseJob) {

  /**
   * @class QueryLabelJob
   * @constructor
   * @param {string} commandId
   * @param {number} eventCount
   * @param {string} label
   */
  var QueryLabelJob = function (commandId, eventCount, label) {
    BaseJob.call(this, commandId);
    this.eventCount = eventCount;
    this.label = label;
  };

  QueryLabelJob.prototype = Object.create(BaseJob.prototype);
  QueryLabelJob.prototype.constructor = QueryLabelJob;

  QueryLabelJob.prototype.getTaskCount = function () {
    return this.eventCount;
  };

  QueryLabelJob.prototype.getDescription = function() {
    var job = this;
    return 'Label ' + job.eventCount + ' evenementen met label "' + job.label + '".';
  };

  return (QueryLabelJob);
}
QueryLabelJobFactory.$inject = ["BaseJob"];
})();

// Source: src/entry/logging/base-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.BaseJob
 * @description
 * # BaseJob
 * This Is the factory that creates base jobs
 */
angular
  .module('udb.entry')
  .factory('BaseJob', BaseJobFactory);

/* @ngInject */
function BaseJobFactory(JobStates) {

  /**
   * @class BaseJob
   * @constructor
   * @param {string}        commandId       - The commandId assigned to this job by the server
   *
   * @property {object[]}   tasks           - A list of tasks
   * @property {string}     id              - The command ID that uniquely identifies this job
   * @property {number}     progress        - Percentage based progress (0-100)
   * @property {Date}       created         - The date this job was returned by the server and created
   * @property {string}     state           - One of the job states defined in JobStates
   * @property {number} completedTaskCount  - Keeps count of the completed tasks to render the view
   */
  var BaseJob = function (commandId) {
    this.id = commandId;
    this.state = JobStates.CREATED;
    this.progress = 0;
    this.created = new Date();
    this.finished = null;
    this.tasks = [];
    this.completedTaskCount = 0;
  };

  /**
   * Always define the constructor, also when you use this class' prototype to prevent any weird stuff.
   * @type {Function}
   */
  BaseJob.prototype.constructor = BaseJob;

  // The following functions are used to update the job state based on feedback of the server.

  BaseJob.prototype.fail = function () {
    this.finished = new Date();
    this.state = JobStates.FAILED;
    this.progress = 100;
  };

  BaseJob.prototype.start = function () {
    this.state = JobStates.STARTED;
  };

  BaseJob.prototype.finish = function () {
    if (this.state !== JobStates.FAILED) {
      this.state = JobStates.FINISHED;
      this.finished = new Date();
    }
    this.progress = 100;
  };

  /**
   * Update the event with additional job data. This method does nothing by default but can be used by more specific
   * job types.
   *
   * @param {object}  jobData
   */
  BaseJob.prototype.info = function (jobData) {
  };

  /**
   * Renders the job description based on its details.
   * Overwrite this function if you want to show a more customized message.
   *
   * @return {string}
   */
  BaseJob.prototype.getDescription = function () {
    return 'Job with id: ' + this.id;
  };

  /**
   * Returns a date string to use for the job log based on job state.
   *
   * @return {string}
   */
  BaseJob.prototype.getLogDateByState = function () {
    if (_.contains([JobStates.FAILED, JobStates.FINISHED], this.state) && this.finished !== null) {
      return this.finished;
    }
    return this.created;
  };

  /**
   * This name is used by the job directive to find the right template.
   * The name will prepended with 'templates/' and a appended with '.template.html'.
   * A Grunt task is set up to automatically include the templates following this format when exporting the project.
   *
   * @return {string}
   */
  BaseJob.prototype.getTemplateName = function () {
    var templateName;

    if (this.state === JobStates.FAILED) {
      templateName = 'failed-job';
    } else {
      templateName = 'base-job';
    }

    return templateName;
  };

  /**
   * Adds a simple task with a unique id property to the job.
   *
   * @param {object} task
   */
  BaseJob.prototype.addTask = function (task) {

    var duplicateTask = _.find(this.tasks, {id: task.id});

    if (!duplicateTask) {
      this.tasks.push(task);
    }
  };

  BaseJob.prototype.getTaskCount = function () {
    return this.tasks.length;
  };

  /**
   * Find a task based on the task data received from the server.
   * Currently all tasks are identifiable by an event_id property.
   *
   * @param {object} taskData
   * @return {object}
   */
  BaseJob.prototype.findTask = function (taskData) {
    var taskId = taskData['event_id'], // jshint ignore:line
        task = _.find(this.tasks, {id: taskId});

    if (!task) {
      task = {id: taskId};
      this.addTask(task);
    }

    return task;
  };

  // These functions are used to update this job's task state based on feedback from the server.

  BaseJob.prototype.failTask = function (taskData) {
    var task = this.findTask(taskData);

    if (task) {
      task.state = 'failed';
      this.updateProgress();
    }
  };

  BaseJob.prototype.finishTask = function (taskData) {
    var task = this.findTask(taskData);

    if (task) {
      task.state = 'finished';
      this.updateProgress();
    }
  };

  /**
   * Update job progress and completed task count.
   * This information is used to render the view of batch jobs.
   */
  BaseJob.prototype.updateProgress = function () {
    var job = this;

    ++job.completedTaskCount;
    job.progress = (job.completedTaskCount / job.getTaskCount()) * 100;
  };

  return (BaseJob);
}
BaseJobFactory.$inject = ["JobStates"];
})();

// Source: src/entry/logging/job-log.component.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.entry.component:udbJobLog
 * @description
 * # udbJobLog
 */
angular
  .module('udb.entry')
  .component('udbJobLog', {
    controller: JobLogController,
    controllerAs: 'logger',
    templateUrl: 'templates/job-log.component.html'
  });

/* @ngInject */
function JobLogController(jobLogger, $scope) {
  var controller = this;

  controller.getQueuedJobs = jobLogger.getQueuedJobs;
  controller.getFinishedExportJobs = jobLogger.getFinishedExportJobs;
  controller.getFailedJobs = jobLogger.getFailedJobs;
  controller.hideJobLog = jobLogger.toggleJobLog;
  controller.isVisible = jobLogger.isVisible;

  $scope.hideJob = jobLogger.hideJob;
}
JobLogController.$inject = ["jobLogger", "$scope"];
})();

// Source: src/entry/logging/job-logger.service.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.entry.jobLogger
 * @description
 * # jobLogger
 * Service in the udb.entry.
 */
angular
  .module('udb.entry')
  .service('jobLogger', JobLogger);

/* @ngInject */
function JobLogger(udbSocket, JobStates, EventExportJob, $rootScope) {
  var logger = this,
      jobs = [],
      queuedJobs = [],
      failedJobs = [],
      finishedExportJobs = [],
      startedExportJobs = [],
      hiddenJobs = [];

  /**
   * Finds a job  by id
   * @param {string}  jobId
   * @returns {BaseJob|undefined}
   */
  function findJob(jobId) {
    return _.find(jobs, {id: jobId});
  }

  function jobStarted(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.start(data);
      console.log('job with id: ' + job.id + ' started');
      updateJobLists();
    }
  }

  function jobInfo(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.info(data);
      console.log('job with id: ' + job.id + ' received some info.');
    }
  }

  function jobFinished(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.finish(data);
      console.log('job with id: ' + job.id + ' finished');
      updateJobLists();
    }
  }

  function jobFailed(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.fail(data);
      console.log('job with id: ' + job.id + ' failed');
      updateJobLists();
    }
  }

  function taskFinished(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.finishTask(data);
      console.log('Task of job with id: ' + job.id + ' finished.');
    }
  }

  function taskFailed(data) {
    var job = findJob(data['job_id']);

    if (job) {
      job.failTask(data);
      console.log('Task of job with id: ' + job.id + ' failed. Error message: ' + data.error);
    }
  }

  function updateJobLists() {
    var visibleJobs = _.difference(jobs, hiddenJobs),
        newJobs = _.filter(visibleJobs, {state: JobStates.CREATED}),
        activeJobs = _.filter(visibleJobs, {state: JobStates.STARTED});

    failedJobs = _.filter(visibleJobs, {state: JobStates.FAILED});
    startedExportJobs = _.filter(visibleJobs, function (job) {
      return job instanceof EventExportJob && job.state === JobStates.STARTED;
    });
    finishedExportJobs = _.filter(visibleJobs, function (job) {
      return job instanceof EventExportJob && job.state === JobStates.FINISHED;
    });
    queuedJobs = activeJobs.concat(newJobs);
    $rootScope.$emit('jobListsUpdated');
  }

  /**
   * Mark a job as hidden
   * @param {BaseJob} job
   */
  function hideJob(job) {
    hiddenJobs = _.union(hiddenJobs, [job]);
    updateJobLists();
  }

  udbSocket.on('event_was_labelled', taskFinished);
  udbSocket.on('event_was_not_labelled', taskFailed);
  udbSocket.on('task_completed', taskFinished);
  udbSocket.on('job_started', jobStarted);
  udbSocket.on('job_info', jobInfo);
  udbSocket.on('job_finished', jobFinished);
  udbSocket.on('job_failed', jobFailed);

  this.hasActiveJobs = function () {
    return !!queuedJobs.length;
  };

  this.addJob = function (job) {
    jobs.unshift(job);
    console.log('job with id: ' + job.id + ' created');
    updateJobLists();
  };

  this.getQueuedJobs = function () {
    return queuedJobs;
  };

  this.getFailedJobs = function () {
    return failedJobs;
  };

  this.getFinishedExportJobs = function () {
    return finishedExportJobs;
  };

  this.getStartedExportJobs = function () {
    return startedExportJobs;
  };

  this.hideJob = hideJob;

  this.toggleJobLog = function() {
    logger.visible = !logger.visible;
  };

  /**
   * @return {boolean}
   */
  this.isVisible = function () {
    return logger.visible;
  };
}
JobLogger.$inject = ["udbSocket", "JobStates", "EventExportJob", "$rootScope"];
})();

// Source: src/entry/logging/job-states.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.entry.JobStates
 * @description
 * # JobStates
 * All the possible job states defined as a constant
 */
angular
  .module('udb.entry')
  .constant('JobStates',
  /**
   * Enum for job states
   * @readonly
   * @enum {string}
   */
  {
    CREATED: 'created',
    STARTED: 'started',
    FAILED: 'failed',
    FINISHED: 'finished'
  });
})();

// Source: src/entry/logging/job.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.entry.directive:udbJob
 * @description
 * # udb search directive
 */
angular
  .module('udb.entry')
  .directive('udbJob', jobDirective);

/* @ngInject */
function jobDirective() {
  var job = {
    template: '<div ng-include="jobTemplateUrl"></div>',
    restrict: 'E',
    link: function(scope, element, attrs) {
      scope.jobTemplateUrl = 'templates/' + scope.job.getTemplateName() + '.template.html';

      // batch job info
      scope.taskCount = 0;
      scope.completedTaskCount = 0;

    }
  };

  return job;
}
})();

// Source: src/entry/logging/udb-socket.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.udbSocket
 * @description
 * # udbSocket
 * Factory in the udb.entry.
 */
angular
  .module('udb.entry')
  .factory('udbSocket', UdbSocketFactory);

/* @ngInject */
function UdbSocketFactory (socketFactory, appConfig) {
  var udbSocket = io.connect(appConfig.socketUrl);

  var socket = socketFactory({
    ioSocket: udbSocket
  });

  return socket;
}
UdbSocketFactory.$inject = ["socketFactory", "appConfig"];
})();

// Source: src/entry/logging/work-indicator.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.entry.directive:udbWorkIndicator
 * @description
 * # udbWorkIndicator
 */
angular
  .module('udb.entry')
  .directive('udbWorkIndicator', udbWorkIndicator);

/* @ngInject */
function udbWorkIndicator ($window, jobLogger) {
  return {
    restrict: 'C',
    link: function postLink(scope, element, attrs) {
      scope.working = false;

      $window.setInterval(function () {
        scope.working = jobLogger.hasActiveJobs();
        element.toggleClass('working', scope.working);
      }, 2000);
    }
  };
}
udbWorkIndicator.$inject = ["$window", "jobLogger"];
})();

// Source: src/entry/translation/offer-translation-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.OfferTranslationJob
 * @description
 * # Offer Label Job
 * This Is the factory that creates an offer label job
 */
angular
  .module('udb.entry')
  .factory('OfferTranslationJob', OfferTranslationJobFactory);

/* @ngInject */
function OfferTranslationJobFactory(BaseJob, JobStates) {

  /**
   * @class OfferTranslationJob
   * @constructor
   * @param {string} commandId
   * @param {UdbEvent|UdbPlace} offer
   * @param {string} property
   * @param {string} language
   * @param {string} translation
   */
  var OfferTranslationJob = function (commandId, offer, property, language, translation) {
    BaseJob.call(this, commandId);
    this.offer = offer;
    this.property = property;
    this.language = language;
    this.translation = translation;
  };

  OfferTranslationJob.prototype = Object.create(BaseJob.prototype);
  OfferTranslationJob.prototype.constructor = OfferTranslationJob;

  OfferTranslationJob.prototype.getDescription = function () {
    var job = this,
        description;

    if (this.state === JobStates.FAILED) {
      description = 'Vertalen van aanbod mislukt';
    } else {
      var propertyName;

      switch (job.property) {
        case 'name':
          propertyName = 'titel';
          break;
        case 'description':
          propertyName = 'omschrijving';
          break;
        default:
          propertyName = job.property;
      }

      description = 'Vertaal ' + propertyName + ' van "' + job.offer.name.nl + '"';
    }

    return description;
  };

  return (OfferTranslationJob);
}
OfferTranslationJobFactory.$inject = ["BaseJob", "JobStates"];
})();

// Source: src/entry/translation/offer-translator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.offerTranslator
 * @description
 * # offerTranslator
 * Service in the udb.entry.
 */
angular
  .module('udb.entry')
  .service('offerTranslator', OfferTranslator);

/* @ngInject */
function OfferTranslator(jobLogger, udbApi, OfferTranslationJob) {

  /**
   * Translates an offer property to a given language and adds the job to the logger
   *
   * @param {UdbEvent|UdbPlace} offer The offer that needs translating
   * @param {string}  property  The name of the property to translate
   * @param {string}  language  The abbreviation of the translation language
   * @param {string}  translation Translation to save
   */
  this.translateProperty = function (offer, property, language, translation) {
    function logTranslationJob(response) {
      var jobData = response.data;

      if (property === 'title') {
        property = 'name';
      }

      offer[property][language] = translation;
      var job = new OfferTranslationJob(jobData.commandId, offer, property, language, translation);
      jobLogger.addJob(job);
    }

    return udbApi
      .translateProperty(offer.apiUrl, property, language, translation)
      .then(logTranslationJob);
  };

  this.translateAddress = function (offer, language, translation) {
    function logTranslationJob(response) {
      var jobData = response.data;

      offer.address[language] = translation;
      var job = new OfferTranslationJob(jobData.commandId, offer, 'address', language, translation);
      jobLogger.addJob(job);
    }

    return udbApi
        .translateAddress(offer.id, language, translation)
        .then(logTranslationJob);
  };
}
OfferTranslator.$inject = ["jobLogger", "udbApi", "OfferTranslationJob"];
})();

// Source: src/event-detail/event-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-detail.directive:event-detail.html
 * @description
 * # udb event-detail directive
 */
angular
  .module('udb.event-detail')
  .directive('udbEventDetail', udbEventDetailDirective);

/* @ngInject */
function udbEventDetailDirective() {
  return {
    templateUrl: 'templates/event-detail.html',
    restrict: 'EA',
    controller: EventDetail // jshint ignore:line
  };
}
})();

// Source: src/event-detail/ui/booking-info-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.event-detail.component:BookingInfoDetail
 * @description
 * # udbBookingInfoDetail
 */
angular
  .module('udb.event-detail')
  .directive('udbBookingInfoDetail', function () {
    return {
      templateUrl: 'templates/booking-info-detail.directive.html',
      controller: BookingInfoDetailController,
      restrict: 'A',
      scope: {
        bookingInfo: '<udbBookingInfoDetail'
      }
    };
  });

/* @ngInject */
function BookingInfoDetailController($scope) {
  $scope.isEmpty = _.isEmpty;
  $scope.hasAtLeastOneContactPoint = function() {
    return $scope.bookingInfo.phone || $scope.bookingInfo.url || $scope.bookingInfo.email;
  };
}
BookingInfoDetailController.$inject = ["$scope"];
})();

// Source: src/event-detail/ui/contact-point-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.event-detail.component:ContactPointDetail
 * @description
 * # udbContactPointDetail
 */
angular
  .module('udb.event-detail')
  .directive('udbContactPointDetail', function () {
    return {
      templateUrl: 'templates/contact-point-detail.directive.html',
      controller: ContactPointDetailController,
      restrict: 'A',
      scope: {
        contactPoint: '<udbContactPointDetail'
      }
    };
  });

/* @ngInject */
function ContactPointDetailController($scope) {
  $scope.isEmpty = function (contactPoint) {
    return _(contactPoint).values().flatten().isEmpty();
  };
}
ContactPointDetailController.$inject = ["$scope"];
})();

// Source: src/event-detail/ui/event-detail.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.event-detail.controller:EventDetailController
 * @description
 * # EventDetailController
 * Event Detail controller
 */
angular
    .module('udb.event-detail')
    .controller('EventDetailController', EventDetail);

/* @ngInject */
function EventDetail(
  $scope,
  eventId,
  udbApi,
  jsonLDLangFilter,
  variationRepository,
  offerEditor,
  $state,
  $uibModal,
  $q,
  $window,
  offerLabeller,
  $translate,
  appConfig,
  ModerationService,
  RolePermission,
  authorizationService
) {
  var activeTabId = 'data';
  var controller = this;
  var disableVariations = _.get(appConfig, 'disableVariations');

  $q.when(eventId, function(offerLocation) {
    $scope.eventId = offerLocation;

    var offer = udbApi.getOffer(offerLocation);
    var permission = udbApi.hasPermission(offerLocation);

    offer.then(showOffer, failedToLoad);

    $q.all([permission, offer])
      .then(grantPermissions, denyAllPermissions);

    permission.catch(denyAllPermissions);
  });

  /**
   * Grant permissions based on permission-data.
   * @param {Array} permissionsData
   *  The first array-item is assumed to be true, if the user is not owner the permission check rejects.
   *  The second value holds the offer itself.
   */
  function grantPermissions(permissionsData) {
    var event = permissionsData[1];

    authorizationService
        .getPermissions()
        .then(function(userPermissions) {
          var mayAlwaysDelete = _.filter(userPermissions, function(permission) {
            return permission === RolePermission.GEBRUIKERS_BEHEREN;
          });

          if (mayAlwaysDelete.length) {
            $scope.mayAlwaysDelete = true;
          }
        })
        .finally(function() {
          if ($scope.mayAlwaysDelete) {
            $scope.permissions = {editing: true, duplication: true};
          }
          else {
            $scope.permissions = {editing: !event.isExpired(), duplication: true};
          }
        });
  }

  function denyAllPermissions() {
    $scope.permissions = {editing: false, duplication: false};
  }

  function getModerationItems(roles) {
    var query = '';

    _.forEach(roles, function(role) {
      if (role.constraint) {
        query += (query ? ' OR ' : '') + '(' + role.constraint + ')';
      }
    });
    query = (query ? '(' + query + ')' : '');
    query = '(' + query + ' AND cdbid:' + $scope.event.id + ')';
    return ModerationService
      .find(query, 10, 0)
      .then(function(searchResult) {
        return searchResult;
      });
  }

  $scope.eventIdIsInvalid = false;
  $scope.labelAdded = labelAdded;
  $scope.labelRemoved = labelRemoved;
  $scope.eventHistory = undefined;
  $scope.calendarSummary = undefined;

  $scope.tabs = [
    {
      id: 'data'
    },
    {
      id: 'history'
    },
    {
      id: 'publication'
    }
  ];
  $scope.deleteEvent = function () {
    openEventDeleteConfirmModal($scope.event);
  };
  $scope.isEmpty = _.isEmpty;

  var language = $translate.use() || 'nl';
  $scope.language = language;
  var cachedEvent;

  function showHistory(eventHistory) {
    $scope.eventHistory = eventHistory;
  }

  function showCalendarSummary(calendarSummary) {
    $scope.calendarSummary = calendarSummary;
  }

  function notifyCalendarSummaryIsUnavailable() {
    $scope.calendarSummary = false;
  }

  function showOffer(event) {
    cachedEvent = event;

    if (cachedEvent.calendarType === 'permanent') {
      showCalendarSummary('Altijd open');
    } else {
      udbApi
        .getCalendarSummary($scope.eventId, 'lg')
        .then(showCalendarSummary, notifyCalendarSummaryIsUnavailable);
    }

    $scope.event = jsonLDLangFilter(event, language, true);
    $scope.allAges =  !(/\d/.test(event.typicalAgeRange));
    $scope.noAgeInfo = event.typicalAgeRange === '';

    $scope.eventIdIsInvalid = false;

    if (!disableVariations) {
      variationRepository
        .getPersonalVariation(event)
        .then(showVariation);
    }

    hasContactPoint();
    hasBookingInfo();

    ModerationService
      .getMyRoles()
      .then(function(roles) {
        var filteredRoles = _.filter(roles, function(role) {
          var canModerate = _.filter(role.permissions, function(permission) {
            return permission === RolePermission.AANBOD_MODEREREN;
          });
          return canModerate.length > 0;
        });

        if (filteredRoles.length) {
          getModerationItems(roles).then(function(result) {
            angular.forEach(result.member, function(member) {
              if (member['@id'] === $scope.eventId) {
                $scope.moderationPermission = true;
              }
            });
          });
        }
      });
  }

  function showVariation(variation) {
    $scope.event.description = variation.description[language];
  }

  function failedToLoad() {
    $scope.eventIdIsInvalid = true;
  }

  $scope.eventLocation = function (event) {
    var location = jsonLDLangFilter(event.location, language, true);

    var eventLocation = [
      location.name
    ];

    if (event.location.type) {
      eventLocation.push(event.location.type.label);
    }

    if (event.location.address.streetAddress) {
      eventLocation.push(event.location.address.streetAddress);
    }

    if (event.location.address.addressLocality) {
      eventLocation.push(event.location.address.addressLocality);
    }

    return eventLocation.join(', ');
  };

  $scope.eventIds = function (event) {
    return _.union([event.id], event.sameAs);
  };

  $scope.isUrl = function (potentialUrl) {
    return /^(https?)/.test(potentialUrl);
  };

  $scope.isTabActive = function (tabId) {
    return tabId === activeTabId;
  };

  $scope.updateDescription = function(description) {
    if ($scope.event.description !== description) {
      var updatePromise = offerEditor.editDescription(cachedEvent, description);

      updatePromise.finally(function () {
        if (!description) {
          $scope.event.description = cachedEvent.description[language];
        }
      });

      return updatePromise;
    }
  };

  $scope.makeTabActive = function (tabId) {
    activeTabId = tabId;

    if (tabId === 'history' && !$scope.eventHistory) {
      udbApi.getHistory($scope.eventId).then(showHistory);
    }
  };

  $scope.openEditPage = function() {
    var eventLocation = $scope.eventId.toString();
    var id = eventLocation.split('/').pop();

    $state.go('split.eventEdit', {id: id});
  };

  $scope.openTranslatePage = function() {
    var eventLocation = $scope.eventId.toString();
    var id = eventLocation.split('/').pop();
    $state.go('split.eventTranslate', {id: id});
  };

  function goToDashboard() {
    $state.go('split.footer.dashboard');
  }

  /**
   * @param {EventCrudJob} job
   */
  controller.goToDashboardOnJobCompletion = function(job) {
    job.task.promise
      .then(goToDashboard);
  };

  function openEventDeleteConfirmModal(item) {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-delete-confirm-modal.html',
      controller: 'EventDeleteConfirmModalCtrl',
      resolve: {
        item: function () {
          return item;
        }
      }
    });

    modalInstance.result
      .then(controller.goToDashboardOnJobCompletion);
  }

  /**
   * @param {Label} newLabel
   */
  function labelAdded(newLabel) {
    var similarLabel = _.find(cachedEvent.labels, function (label) {
      return newLabel.name.toUpperCase() === label.toUpperCase();
    });

    if (similarLabel) {
      $window.alert('Het label "' + newLabel.name + '" is reeds toegevoegd als "' + similarLabel + '".');
    }
    else {
      offerLabeller.label(cachedEvent, newLabel.name)
        .then(function(response) {
          if (response.success) {
            $scope.labelResponse = 'success';
            $scope.addedLabel = response.name;
          }
          else {
            $scope.labelResponse = 'error';
            $scope.labelsError = response;
          }
          $scope.event.labels = angular.copy(cachedEvent.labels);
        });
    }
  }

  function clearLabelsError() {
    $scope.labelResponse = '';
    $scope.labelsError = '';
  }

  /**
   * @param {ApiProblem} problem
   */
  function showUnlabelProblem(problem) {
    $scope.event.labels = angular.copy(cachedEvent.labels);
    $scope.labelResponse = 'unlabelError';
    $scope.labelsError = problem.title;
  }

  /**
   * @param {Label} label
   */
  function labelRemoved(label) {
    clearLabelsError();

    offerLabeller
      .unlabel(cachedEvent, label.name)
      .catch(showUnlabelProblem);
  }

  function hasContactPoint() {
    var nonEmptyContactTypes = _.filter(
      $scope.event.contactPoint,
      function(value) {
        return value.length > 0;
      }
    );

    $scope.hasContactPointResults = (nonEmptyContactTypes.length > 0);
  }

  function hasBookingInfo() {
    var bookingInfo = $scope.event.bookingInfo;
    $scope.hasBookingInfoResults = !(bookingInfo.phone === '' && bookingInfo.email === '' && bookingInfo.url === '');
  }

  $scope.translateAudience = function (type) {
    return $translate.instant('audience.' + type);
  };

  $scope.translateType = function (type) {
    // Work around for III-2695
    var translatedString = $translate.instant('offerTypes.' + type);
    if (_.includes(translatedString, 'offerTypes.')) {
      return type;
    }
    else {
      return translatedString;
    }
  };

  $scope.finishedLoading = function() {
    return ($scope.event && $scope.permissions);
  };
}
EventDetail.$inject = ["$scope", "eventId", "udbApi", "jsonLDLangFilter", "variationRepository", "offerEditor", "$state", "$uibModal", "$q", "$window", "offerLabeller", "$translate", "appConfig", "ModerationService", "RolePermission", "authorizationService"];
})();

// Source: src/event_form/calendar-labels.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc constant
 * @name udb.event-form.calendarLabels
 * @description
 * # calendarLabels
 * Form calendar labels
 */
angular
  .module('udb.event-form')
  .constant('calendarLabels',
    /**
     * list of calendar labels
     * @readonly
     */
    [
      {'label': 'Eén of meerdere dagen', 'id' : 'single', 'eventOnly' : true},
      {'label': 'Van ... tot ... ', 'id' : 'periodic', 'eventOnly' : true},
      {'label' : 'Permanent', 'id' : 'permanent', 'eventOnly' : false}
    ]);
})();

// Source: src/event_form/components/age/age-input.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbAgeInput
 * @description
 * # Age input parsing and formatting
 */
angular
  .module('udb.event-form')
  .directive('udbAgeInput', AgeInputDirective);

/* @ngInject */
function AgeInputDirective() {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {
      function ensureAge(value) {
        var number = parseInt(value);

        if (isNaN(number)) {
          controller.$setViewValue(undefined);
          controller.$render();
          return undefined;
        }

        var age = Math.abs(number);

        if (age.toString() !== value) {
          controller.$setViewValue(age.toString());
          controller.$render();
        }

        return age;
      }

      controller.$formatters.push(ensureAge);
      controller.$parsers.splice(0, 0, ensureAge);
    }
  };
}
})();

// Source: src/event_form/components/age/form-age.controller.js
(function () {
'use strict';

/**
 * @ngdoc controller
 * @name udb.event-form:FormAgeController
 * @var FormAgeController fagec
 * @description
 * # FormAgeController
 * Controller for the form age component
 */
angular
  .module('udb.event-form')
  .controller('FormAgeController', FormAgeController);

/* @ngInject */
function FormAgeController($scope, EventFormData, eventCrud, $translate) {
  var controller = this;
  /**
   * Enum for age ranges.
   * @readonly
   * @enum {Object}
   */
  var AgeRangeEnum = Object.freeze({
    'ALL': {label: 'All ages'},
    'TODDLERS': {label: 'Toddlers', min: 0, max: 2},
    'PRESCHOOLERS': {label: 'Preschoolers', min: 3, max: 5},
    'KIDS': {label: 'Kids', min: 6, max: 11},
    'YOUNGSTERS': {label: 'Youngsters', min: 12, max: 17},
    'ADULTS': {label: 'Adults', min: 18},
    'SENIORS': {label: 'Seniors', min: 65},
    'CUSTOM': {label: 'Custom'}
  });

  controller.ageRanges = angular.copy(AgeRangeEnum);
  controller.activeAgeRange = undefined;
  controller.minAge = undefined;
  controller.maxAge = undefined;
  controller.setAgeRangeByType = setAgeRangeByType;
  controller.delayedSaveAgeRange = _.debounce(digestSaveAgeRange, 1000);
  controller.instantSaveAgeRange = instantSaveAgeRange;
  controller.error = '';
  controller.formData = undefined;

  init(EventFormData);

  /**
   * Save the age range based on current controller min and max values.
   *
   * If the controller values do not change the old form data, no update will happen.
   */
  function saveAgeRange() {
    clearError();
    var min = controller.minAge;
    var max = controller.maxAge;
    var oldAgeRange = controller.formData.getTypicalAgeRange();

    if (oldAgeRange && oldAgeRange.min === min && oldAgeRange.max === max) {
      return;
    }

    if (_.isNumber(min) && _.isNumber(max) && min > max) {
      showError('De maximumleeftijd kan niet lager zijn dan de minimumleeftijd.'); return;
    }

    controller.formData.setTypicalAgeRange(min, max);
    eventCrud.updateTypicalAgeRange(controller.formData);
  }

  function digestSaveAgeRange() {
    $scope.$apply(saveAgeRange);
  }

  function instantSaveAgeRange() {
    controller.delayedSaveAgeRange.cancel();
    saveAgeRange();
  }

  function showError(errorMessage) {
    controller.error = errorMessage;
  }

  function clearError() {
    controller.error = '';
  }

  /**
   * Create a matcher with a min and max age that takes an age range object.
   *
   * @param {number} min
   * @param {number} max
   * @returns {Function}
   */
  function rangeMatcher(min, max) {
    return function (ageRange) {
      var fixedRange = (ageRange.min === min && ageRange.max === max);
      var customRange = !(isNaN(min) && isNaN(max)) && ageRange === AgeRangeEnum.CUSTOM;

      return fixedRange ? fixedRange : customRange;
    };
  }

  /**
   * @param {EventFormData} formData
   */
  function init(formData) {
    controller.formData = formData;
    var ageRange = formData.getTypicalAgeRange();

    if (ageRange) {
      showRange(ageRange.min, ageRange.max);
    }
  }

  /**
   * @param {number} min
   * @param {number} max
   */
  function showRange(min, max) {
    var activeAgeRangeType = _.findKey(AgeRangeEnum, rangeMatcher(min, max));
    controller.minAge = min;
    controller.maxAge = max;
    controller.rangeInputEnabled = activeAgeRangeType && activeAgeRangeType !== 'ALL';
    controller.activeAgeRange = activeAgeRangeType;
  }

  /**
   * @param {string} type
   */
  function setAgeRangeByType(type) {
    var ageRange = AgeRangeEnum[type];

    if (ageRange) {
      if (type !== 'CUSTOM') {
        controller.minAge = ageRange.min;
        controller.maxAge = ageRange.max;
      }

      controller.rangeInputEnabled = type !== 'ALL';
      controller.activeAgeRange = type;

      saveAgeRange();
    }
  }

  $scope.translateAgeRange = function (ageRange) {
    return $translate.instant('eventForm.step5.age.' + ageRange);
  };
}
FormAgeController.$inject = ["$scope", "EventFormData", "eventCrud", "$translate"];
})();

// Source: src/event_form/components/age/form-age.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbFormAge
 * @description
 * # Target age component for offer forms
 */
angular
  .module('udb.event-form')
  .directive('udbFormAge', FormAgeDirective);

/* @ngInject */
function FormAgeDirective() {
  return {
    templateUrl: 'templates/form-age.html',
    restrict: 'EA',
    controller: 'FormAgeController',
    controllerAs: 'fagec'
  };
}
})();

// Source: src/event_form/components/audience/form-audience.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.event-form:FormAudienceController
 * @description
 * # FormAudienceController
 * Controller for the form audience component
 */
angular
  .module('udb.event-form')
  .controller('FormAudienceController', FormAudienceController);

/* @ngInject */
function FormAudienceController(EventFormData, eventCrud, appConfig) {
  var controller = this;
  var componentDisabled = _.get(appConfig, 'offerEditor.disableAudience');

  controller.enabled = !componentDisabled && EventFormData.isEvent;
  controller.audienceType = EventFormData.audienceType;
  controller.setAudienceType = setAudienceType;

  function setAudienceType(audienceType) {
    eventCrud.setAudienceType(EventFormData, audienceType);
  }
}
FormAudienceController.$inject = ["EventFormData", "eventCrud", "appConfig"];
})();

// Source: src/event_form/components/audience/form-audience.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbFormAudience
 * @description
 * # Target audience component for event forms
 */
angular
  .module('udb.event-form')
  .directive('udbFormAudience', FormAudienceDirective);

/* @ngInject */
function FormAudienceDirective() {
  return {
    templateUrl: 'templates/form-audience.html',
    restrict: 'EA',
    controller: 'FormAudienceController',
    controllerAs: 'fac'
  };
}
})();

// Source: src/event_form/components/auto-scroll.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbAutoScroll
 * @description
 * auto scrolls to the attached element when focused.
 */
angular
  .module('udb.event-form')
  .directive('udbAutoScroll', AutoScroll);

/* @ngInject */
function AutoScroll($document) {
  return {
    restrict: 'A',
    link: link
  };

  function link(scope, element) {
    var scrollDuration = 1000;
    var easeInOutQuad = function (t) {
      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    };

    element.on('click focusin', scrollToTarget);

    function scrollToTarget(event) {
      $document.scrollTo(event.target, 100, scrollDuration, easeInOutQuad);
    }
  }
}
AutoScroll.$inject = ["$document"];
})();

// Source: src/event_form/components/calendar/base-calendar.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} TimeSpan
 * @property {Date} start
 * @property {Date} end
 * @property {boolean} allDay
 */

/**
 * @ngdoc function
 * @name udbApp.controller:BaseCalendarController
 * @description
 * # Base Calendar Controller
 */
angular
  .module('udb.event-form')
  .controller('BaseCalendarController', BaseCalendarController);

/* @ngInject */
function BaseCalendarController(calendar, $scope) {
  calendar.type = '';
  calendar.setType = setType;
  calendar.createTimeSpan = createTimeSpan;
  calendar.timeSpans = [];
  calendar.timeSpanRequirements = [];
  calendar.removeTimeSpan = removeTimeSpan;
  calendar.weeklyRecurring = false;
  calendar.delayedTimeSpanChanged = _.debounce(digestTimeSpanChanged, 1000);
  calendar.instantTimeSpanChanged = instantTimeSpanChanged;
  calendar.toggleAllDay = toggleAllDay;
  calendar.init = init;

  /**
   * @param {EventFormData} formData
   * @param {OpeningHoursCollection} openingHoursCollection
   */
  function init(formData, openingHoursCollection) {
    calendar.formData = formData;
    calendar.timeSpans = !_.isEmpty(formData.calendar.timeSpans) ? formData.calendar.timeSpans : [];
    calendar.setType(formData.calendar.calendarType ? formData.calendar.calendarType : 'single');
    calendar.openingHoursCollection = openingHoursCollection;
  }

  function isTypeWeeklyRecurring(type) {
    return type === 'permanent' || type === 'periodic';
  }

  /**
   * @param {string} calendarType
   */
  function setType(calendarType) {
    calendar.formData.setCalendarType(calendarType);
    calendar.type = calendarType;
    calendar.weeklyRecurring = isTypeWeeklyRecurring(calendarType);

    if (calendarType === 'single' && _.isEmpty(calendar.timeSpans)) {
      initTimeSpans();
    }
  }

  function initTimeSpans() {
    calendar.timeSpans = [
      {
        allDay: true,
        start: moment().startOf('day').toDate(),
        end: moment().endOf('day').toDate()
      }
    ];
  }

  function createTimeSpan() {
    if (_.isEmpty(calendar.timeSpans)) {
      initTimeSpans();
      calendar.instantTimeSpanChanged();
    } else {
      calendar.timeSpans.push(_.cloneDeep(_.last(calendar.timeSpans)));
      // Do not trigger timeSpanChanged to prevent saving duplicates.
    }
  }

  /**
   * @param {Object} timeSpan
   */
  function removeTimeSpan(timeSpan) {
    if (calendar.timeSpans.length > 1) {
      calendar.timeSpans = _.without(calendar.timeSpans, timeSpan);
      calendar.instantTimeSpanChanged();
    }
  }

  function digestTimeSpanChanged() {
    $scope.$apply(timeSpanChanged);
  }

  function instantTimeSpanChanged() {
    calendar.delayedTimeSpanChanged.cancel();
    timeSpanChanged();
  }

  function toggleAllDay(timeSpan) {
    if (timeSpan.allDay) {
      timeSpan.start = moment(timeSpan.start).set({'hour': 0, 'minute': 0, 'millisecond': 0}).toDate();
      timeSpan.end = moment(timeSpan.end).endOf('day').toDate();
    }
    else {
      timeSpan.start = moment(timeSpan.start).set({'hour': moment().startOf('hour').format('H'), 'minute': 0}).toDate();
      timeSpan.end = moment(timeSpan.end).set(
          {'hour': moment().startOf('hour').add(4, 'h').format('H') , 'minute': 0, 'second': 0}
      ).toDate();
    }
    instantTimeSpanChanged();
  }

  function timeSpanChanged() {
    var unmetRequirements = _.map(calendar.timeSpans, validateTimeSpan);

    if (!_.isEmpty(_.flatten(unmetRequirements))) {
      showTimeSpanRequirements(unmetRequirements);
    } else {
      if (calendar.timeSpans.length > 1) {
        if (calendar.type !== 'multiple') {
          setType('multiple');
        }
      } else if (calendar.type !== 'single') {
        setType('single');
      }
      clearTimeSpanRequirements();
      _.each(calendar.timeSpans, function(timeSpan) {
        if (timeSpan.allDay) {
          timeSpan.start = moment(timeSpan.start).startOf('day').toDate();
          timeSpan.end = moment(timeSpan.end).endOf('day').toDate();
        }
      });
      calendar.formData.saveTimeSpans(calendar.timeSpans);
    }
  }

  function clearTimeSpanRequirements() {
    calendar.timeSpanRequirements = [];
  }

  function showTimeSpanRequirements(unmetRequirements) {
    calendar.timeSpanRequirements = unmetRequirements;
  }

  /**
   * Validates a time-span and returns a list of unmet requirements.
   *
   * @param {TimeSpan} timeSpan
   * @return {string[]}
   */
  function validateTimeSpan(timeSpan) {
    var requirements = {
      'timedWhenNotAllDay': function (timeSpan) {
        return !timeSpan.allDay && (!timeSpan.start || !timeSpan.end);
      },
      'startBeforeEndDay': function (timeSpan) {
        return timeSpan.start && timeSpan.end && moment(timeSpan.start).isAfter(timeSpan.end, 'day');
      },
      'startBeforeEnd': function (timeSpan) {
        return !timeSpan.allDay &&
            (timeSpan.start && timeSpan.end) &&
            moment(timeSpan.start).isSame(timeSpan.end, 'day') &&
            moment(timeSpan.start).isAfter(timeSpan.end);
      }
    };

    var unmetRequirements = _.pick(requirements, function (check) {
      return check(timeSpan);
    });

    return _.keys(unmetRequirements);
  }
}
BaseCalendarController.$inject = ["calendar", "$scope"];
})();

// Source: src/event_form/components/calendar/form-calendar-datepicker.component.js
(function () {
'use strict';

angular
  .module('udb.event-form')
  .component('udbFormCalendarDatepicker', {
    templateUrl: 'templates/form-calendar-datepicker.component.html',
    controller: FormCalendarDatepickerController,
    require: {
      ngModel: '^ngModel'
    },
    bindings: {
      disabled: '=ngDisabled'
    },
    controllerAs: 'datepicker'
  });

/** @inject */
function FormCalendarDatepickerController(appConfig) {
  var datepicker = this;
  var options = {
    minDate: new Date(),
    showWeeks: false,
    customClass: getDayClass
  };

  datepicker.$onInit = function() {
    datepicker.isOpen = false;
    datepicker.options = options;
    datepicker.ngModel.$render = function () {
      datepicker.date = new Date(datepicker.ngModel.$viewValue);
    };
  };

  datepicker.open = function() {
    datepicker.isOpen = true;
  };

  datepicker.changed = function() {
    if (datepicker.date) {
      var time = moment(datepicker.ngModel.$viewValue);
      var day = moment(datepicker.date).hour(time.hour()).minute(time.minute());
      datepicker.ngModel.$setViewValue(day.toDate());
    }
  };

  function getDayClass(data) {
    if (appConfig.calendarHighlight.date !== '') {
      var dayToCheck = moment(data.date);
      var highlightDate = moment(appConfig.calendarHighlight.date);

      if (dayToCheck.isSame(highlightDate, data.mode)) {
        return appConfig.calendarHighlight.extraClass;
      }
    }
  }
}

FormCalendarDatepickerController.$inject = ['appConfig'];
})();

// Source: src/event_form/components/calendar/form-calendar-period.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:FormCalendarPeriod
 * @description
 * # Form Calendar Period
 */
angular
  .module('udb.event-form')
  .component('udbFormCalendarPeriod', {
    templateUrl: 'templates/form-calendar-period.component.html',
    controller: FormCalendarPeriodComponentController,
    bindings: {
      formData: '='
    }
  });

function FormCalendarPeriodComponentController() {
  var controller = this;
  controller.calendarType = controller.formData.calendar.calendarType;
}
})();

// Source: src/event_form/components/calendar/form-calendar-timepicker.component.js
(function () {
'use strict';

angular
  .module('udb.event-form')
  .component('udbFormCalendarTimepicker', {
    templateUrl: 'templates/form-calendar-timepicker.component.html',
    controller: FormCalendarTimepickerController,
    require: {
      ngModel: '^ngModel'
    },
    controllerAs: 'timepicker'
  });

/** @inject */
function FormCalendarTimepickerController() {
  var timepicker = this;

  timepicker.$onInit = function() {
    timepicker.ngModel.$render = function () {
      timepicker.time = new Date(timepicker.ngModel.$viewValue);
    };
  };

  timepicker.changed = function() {
    if (timepicker.time) {
      timepicker.ngModel.$setViewValue(timepicker.time);
    }
  };
}
})();

// Source: src/event_form/components/calendar/form-calendar.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:FormCalendarController
 * @description
 * # Form Calendar Controller
 */
angular
  .module('udb.event-form')
  .controller('FormCalendarController', FormCalendarController);

/* @ngInject */
function FormCalendarController(EventFormData, OpeningHoursCollection, $scope, $controller) {
  var calendar = this;

  $controller('BaseCalendarController', {calendar: calendar, $scope: $scope});

  calendar.init(EventFormData, OpeningHoursCollection);
}
FormCalendarController.$inject = ["EventFormData", "OpeningHoursCollection", "$scope", "$controller"];
})();

// Source: src/event_form/components/calendar/form-event-calendar.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.event-form.component:udbFormEventCalendar
 * @description
 * # Form Calendar
 * The form calendar component for events.
 */
angular
  .module('udb.event-form')
  .component('udbFormEventCalendar', {
    templateUrl: 'templates/form-event-calendar.component.html',
    controller: 'FormCalendarController',
    controllerAs: 'calendar'
  });
})();

// Source: src/event_form/components/calendar/form-place-calendar.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.event-form.component:udbFormPlaceCalendar
 * @description
 * # Form Place Calendar
 * The form calendar component for places.
 */
angular
  .module('udb.event-form')
  .component('udbFormPlaceCalendar', {
    templateUrl: 'templates/form-place-calendar.component.html',
    controller: 'FormCalendarController',
    controllerAs: 'calendar'
  });
})();

// Source: src/event_form/components/image-edit/event-form-image-edit.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormImageEditController
 * @description
 * # EventFormImageEditController
 * Modal for uploading images.
 */
angular
  .module('udb.event-form')
  .controller('EventFormImageEditController', EventFormImageEditController);

/* @ngInject */
function EventFormImageEditController(
  $scope,
  $uibModalInstance,
  EventFormData,
  eventCrud,
  /** @type {MediaObject} **/
  mediaObject
) {

  // Scope vars.
  $scope.saving = false;
  $scope.error = false;
  $scope.description = mediaObject.description || '';
  $scope.copyrightHolder = mediaObject.copyrightHolder || '';

  // Scope functions.
  $scope.cancel = cancel;
  $scope.updateImageInfo = updateImageInfo;
  $scope.allFieldsValid = allFieldsValid;

  /**
   * Cancel the modal.
   */
  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  /**
   * Update the
   */
  function updateImageInfo() {
    var description = $scope.description,
        copyrightHolder = $scope.copyrightHolder;

    function displayErrors() {
      $scope.saving = false;
      $scope.error = true;
    }

    function updateEventFormDataAndClose() {
      var updatedMediaObject = angular.copy(mediaObject);
      updatedMediaObject.description = description;
      updatedMediaObject.copyrightHolder = copyrightHolder;

      EventFormData.updateMediaObject(updatedMediaObject);
      $uibModalInstance.close(updatedMediaObject);
    }

    eventCrud
      .updateImage(EventFormData, mediaObject, description, copyrightHolder)
      .then(updateEventFormDataAndClose, displayErrors);
  }

  function allFieldsValid() {
    return $scope.description && $scope.copyrightHolder && $scope.copyrightHolder.length >= 3;
  }
}
EventFormImageEditController.$inject = ["$scope", "$uibModalInstance", "EventFormData", "eventCrud", "mediaObject"];
})();

// Source: src/event_form/components/image-remove/event-form-image-remove.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormImageRemoveController
 * @description
 * # EventFormImageRemoveController
 * Modal for removing images from an offer.
 */
angular
  .module('udb.event-form')
  .controller('EventFormImageRemoveController', EventFormImageRemoveController);

/* @ngInject */
function EventFormImageRemoveController($scope, $uibModalInstance, EventFormData, eventCrud, image) {

  // Scope vars.
  $scope.saving = false;
  $scope.error = false;

  // Scope functions.
  $scope.cancel = cancel;
  $scope.removeImage = removeImage;

  /**
   * Cancel the modal.
   */
  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  function showError() {
    $scope.error = true;
    $scope.saving = false;
  }

  function triggerLoadingState() {
    $scope.saving = true;
    $scope.error = false;
  }

  function removeImage() {
    triggerLoadingState();

    function updateEventFormDataAndCloseModal() {
      EventFormData.removeMediaObject(image);
      $scope.saving = false;
      $uibModalInstance.close();
    }

    eventCrud
      .removeImage(EventFormData, image)
      .then(updateEventFormDataAndCloseModal, showError);
  }
}
EventFormImageRemoveController.$inject = ["$scope", "$uibModalInstance", "EventFormData", "eventCrud", "image"];
})();

// Source: src/event_form/components/image-upload/event-form-image-upload.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormImageUploadController
 * @description
 * # EventFormImageUploadController
 * Modal for uploading images.
 */
angular
  .module('udb.event-form')
  .controller('EventFormImageUploadController', EventFormImageUploadController);

/* @ngInject */
function EventFormImageUploadController(
  $scope,
  $uibModalInstance,
  EventFormData,
  eventCrud,
  appConfig,
  MediaManager,
  $q,
  copyrightNegotiator
) {

  // Scope vars.
  $scope.userAgreementUrl = _.get(appConfig, 'media.userAgreementUrl', '/user-agreement');
  $scope.copyrightUrl = _.get(appConfig, 'media.copyrightUrl', '/copyright');
  $scope.saving = false;
  $scope.error = false;
  $scope.showAgreements = !copyrightNegotiator.confirmed();
  $scope.modalTitle = 'Afbeelding toevoegen';
  $scope.description = '';
  $scope.copyright = '';
  $scope.maxFileSize = _.get(appConfig, 'media.fileSizeLimit', '1MB');

  // Scope functions.
  $scope.acceptAgreements = acceptAgreements;
  $scope.cancel = cancel;
  $scope.addImage = uploadAndAddImage;
  $scope.clearError = clearError;
  $scope.selectFile = selectFile;
  $scope.allFieldsValid = allFieldsValid;

  var invalidFileErrors = {
    'default': 'Het geselecteerde bestand voldoet niet aan onze voorwaarden.',
    'maxSize': 'Het bestand dat je probeert te uploaden is te groot. De maximum grootte is ' + $scope.maxFileSize + '.'
  };

  /**
   * Accept the agreements.
   */
  function acceptAgreements() {
    $scope.modalTitle = 'Nieuwe afbeelding toevoegen';
    $scope.showAgreements = false;
    copyrightNegotiator.confirm();
  }

  /**
   * Cancel the modal.
   */
  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  function clearError() {
    $scope.error = false;
  }

  function selectFile(file, invalidFiles) {
    $scope.selectedFile = file ? file : null;

    // Check if the selected file is invalid and show an error else clear any existing error messages.
    if (invalidFiles.length) {
      var knownError = invalidFileErrors[invalidFiles[0].$error];
      $scope.error = knownError ? knownError : invalidFileErrors.default;
    } else {
      clearError();
    }
  }

  function uploadAndAddImage() {
    // Abort if no valid file is selected.
    if (!$scope.selectedFile) {
      $scope.error = 'Er is geen bestand geselecteerd';
      return;
    }

    $scope.saving = true;

    var description = $scope.description,
        copyrightHolder = $scope.copyright,
        deferredAddition = $q.defer(),
        language = EventFormData.mainLanguage ? EventFormData.mainLanguage : 'nl';

    function displayError(errorResponse) {
      var errorMessage = errorResponse.data.title;
      var error = 'Er ging iets mis bij het opslaan van de afbeelding.';

      switch (errorMessage) {
        case 'The uploaded file is not an image.':
          error = 'Het geüpload bestand is geen geldige afbeelding. ' +
            'Enkel bestanden met de extenties .jpeg, .gif of .png zijn toegelaten.';
          break;
        case 'The file size of the uploaded image is too big.':
          error = 'Het geüpload bestand is te groot.';
          break;
      }

      $scope.saving = false;
      $scope.error = error;
    }

    /**
     * @param {MediaObject} mediaObject
     */
    function addImageToEvent(mediaObject) {
      function updateEventFormAndResolve() {
        $scope.saving = false;
        EventFormData.addImage(mediaObject);
        deferredAddition.resolve(mediaObject);
        $uibModalInstance.close(mediaObject);
      }

      eventCrud
        .addImage(EventFormData, mediaObject)
        .then(updateEventFormAndResolve, displayError);
    }

    MediaManager
      .createImage($scope.selectedFile, description, copyrightHolder, language)
      .then(addImageToEvent, displayError);

    return deferredAddition.promise;
  }

  function allFieldsValid() {
    return $scope.description && $scope.copyright && $scope.selectedFile && $scope.copyright.length >= 3;
  }
}
EventFormImageUploadController.$inject = ["$scope", "$uibModalInstance", "EventFormData", "eventCrud", "appConfig", "MediaManager", "$q", "copyrightNegotiator"];
})();

// Source: src/event_form/components/opening-hours-editor/opening-hours-editor.modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc controller
 * @name udb.event-form.controller:OpeningHoursEditorModalController
 * @description
 * # OpeningHoursEditorModalController
 * Controller for editing opening hours
 */
angular
  .module('udb.event-form')
  .controller('OpeningHoursEditorModalController', OpeningHoursEditorModalController);

/* @ngInject */
function OpeningHoursEditorModalController($uibModalInstance, openingHoursCollection) {
  var controller = this;
  var originalOpeningHoursList;

  init(openingHoursCollection);
  controller.saveOpeningHours = saveOpeningHours;
  controller.createNewOpeningHours = createNewOpeningHours;
  controller.removeOpeningHours = removeOpeningHours;
  controller.errors = {};

  function init(openingHoursCollection) {
    originalOpeningHoursList = _.cloneDeep(openingHoursCollection.getOpeningHours());

    if (originalOpeningHoursList.length === 0) {
      openingHoursCollection.createNewOpeningHours();
    }

    controller.openingHoursCollection = openingHoursCollection;
  }

  function saveOpeningHours() {
    clearErrors();
    var errors = controller.openingHoursCollection.validate();

    if (_.isEmpty(errors)) {
      $uibModalInstance.close(controller.openingHoursCollection.serialize());
    } else {
      showErrors(errors);
    }
  }

  /**
   * @param {string[]} errorList
   */
  function showErrors(errorList) {
    controller.errors = errorList;
  }

  function clearErrors() {
    controller.errors = {};
  }

  function createNewOpeningHours() {
    controller.openingHoursCollection.createNewOpeningHours();
  }

  function removeOpeningHours(openingHours) {
    controller.openingHoursCollection.removeOpeningHours(openingHours);
    clearErrors();
  }
}
OpeningHoursEditorModalController.$inject = ["$uibModalInstance", "openingHoursCollection"];
})();

// Source: src/event_form/components/openinghours/opening-hours-data-collection.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.event-form.service:OpeningHoursCollection
 * @description
 * Contains data needed for opening hours.
 */
angular
  .module('udb.event-form')
  .factory('OpeningHoursCollection', OpeningHoursCollectionFactory);

/* @ngInject */
function OpeningHoursCollectionFactory(moment, $translate) {

  var validationRequirements = {
    'openAndClose': opensAndCloses,
    'dayOfWeek': hasDayOfWeek,
    'openIsBeforeClose': openIsBeforeClose
  };

  var weekdays = {
    'monday': {label: translateWeekdayLabel('monday'), name: translateWeekdayName('monday'), open: false},
    'tuesday': {label: translateWeekdayLabel('tuesday'), name: translateWeekdayName('tuesday'), open: false},
    'wednesday': {label: translateWeekdayLabel('wednesday'), name: translateWeekdayName('wednesday'), open: false},
    'thursday': {label: translateWeekdayLabel('thursday'), name: translateWeekdayName('thursday'), open: false},
    'friday': {label: translateWeekdayLabel('friday'), name: translateWeekdayName('friday'), open: false},
    'saturday': {label: translateWeekdayLabel('saturday'), name: translateWeekdayName('saturday'), open: false},
    'sunday': {label: translateWeekdayLabel('sunday'), name: translateWeekdayName('sunday'), open: false}
  };

  function translateWeekdayLabel(day) {
    return $translate.instant('weekdays.' + day + '.label');
  }

  function translateWeekdayName(day) {
    return $translate.instant('weekdays.' + day + '.name');
  }

  /**
   * @param {OpeningHours[]} openingHoursList
   * @returns {boolean}
   */
  function opensAndCloses(openingHoursList) {
    return _.all(_.map(openingHoursList, function (openingHours) {
      return openingHours.opensAsDate instanceof Date && openingHours.closesAsDate instanceof Date;
    }));
  }

  /**
   * @param {OpeningHours[]} openingHoursList
   * @returns {boolean}
   */
  function openIsBeforeClose(openingHoursList) {
    return _.all(_.map(openingHoursList, function (openingHours) {
      return moment(openingHours.opensAsDate).isBefore(openingHours.closesAsDate);
    }));
  }

  /**
   * @param {OpeningHours[]} openingHoursList
   * @returns {boolean}
   */
  function hasDayOfWeek(openingHoursList) {
    return _.all(_.map(openingHoursList, function (openingHours) {
      return !_.isUndefined(_.find(openingHours.dayOfWeek, 'open'));
    }));
  }

  /**
   * @param {OpeningHours[]} openingHoursList
   *
   * @returns {OpeningHours[]}
   */
  function prepareOpeningHoursForDisplay(openingHoursList) {
    angular.forEach (openingHoursList, function(openingHour, key) {
      openingHour.opens = moment(openingHour.opensAsDate).format('HH:mm');
      openingHour.closes = moment(openingHour.closesAsDate).format('HH:mm');
      openingHour.label = _.pluck(_.filter(openingHour.dayOfWeek, 'open'), 'name').join(', ');
    });

    return openingHoursList;
  }

  /**
   * @class OpeningHoursCollection
   */
  var openingHoursCollection = {
    openingHours: [],

    /**
     * Get the opening hours.
     */
    getOpeningHours: function() {
      return this.openingHours;
    },

    /**
     * Set the opening hours.
     */
    setOpeningHours: function(openingHours) {
      this.openingHours = prepareOpeningHoursForDisplay(openingHours);
    },

    /**
     * @param {OpeningHours} openingHours
     */
    removeOpeningHours: function (openingHours) {
      var openingHoursList = this.openingHours;

      this.setOpeningHours(_.without(openingHoursList, openingHours));
    },

    /**
     * Create new opening hours and append them to the list of existing hours.
     */
    createNewOpeningHours: function () {
      var openingHoursList = this.openingHours || [];
      var openingHours = {
        'dayOfWeek': _.cloneDeep(weekdays),
        'opens': '00:00',
        'opensAsDate': new Date(1970, 0, 1),
        'closes': '00:00',
        'closesAsDate': new Date(1970, 0, 1)
      };

      openingHoursList.push(openingHours);

      this.setOpeningHours(openingHoursList);
    },

    /**
     * {object[]} jsonOpeningHoursList
     */
    deserialize: function (jsonOpeningHoursList) {
      this.setOpeningHours(_.map(jsonOpeningHoursList, function (jsonOpeningHours) {
        return {
          'dayOfWeek': _.mapValues(weekdays, function (weekday, day) {
            var dayOfWeek = _.cloneDeep(weekday);
            dayOfWeek.open = _.includes(jsonOpeningHours.dayOfWeek, day);

            return dayOfWeek;
          }),
          'opens': jsonOpeningHours.opens || '00:00',
          'opensAsDate':
            jsonOpeningHours.opens ?
              resetDay(moment(jsonOpeningHours.opens, 'HH:mm')).toDate() :
              new Date(1970, 0, 1),
          'closes': jsonOpeningHours.closes || '00:00',
          'closesAsDate':
            jsonOpeningHours.closes ?
              resetDay(moment(jsonOpeningHours.closes, 'HH:mm')).toDate() :
              new Date(1970, 0, 1)
        };
      }));

      return this;
    },

    serialize: function () {
      return _.map(this.openingHours, function (openingHours) {
        return {
          dayOfWeek: _.keys(omitClosedDays(openingHours.dayOfWeek)),
          opens: moment(openingHours.opensAsDate).format('HH:mm'),
          closes: moment(openingHours.closesAsDate).format('HH:mm')
        };
      });
    },

    /**
     * returns a list of errors
     *
     * @returns {string[]}
     */
    validate: function () {
      var openingHours = this.openingHours;

      return _(validationRequirements)
        .pick(function (requirementCheck) {
          return !requirementCheck(openingHours);
        })
        .keys()
        .value();
    }
  };

  /**
   * Takes a moment object and returns a new one with the day reset to the beginning of unix time.
   *
   * @param {object} moment
   *  a moment object
   * @returns {object}
   */
  function resetDay(moment) {
    return moment.clone().year(1970).dayOfYear(1);
  }

  function omitClosedDays(dayOfWeek) {
    return _.pick(dayOfWeek, function(weekday) {
      return weekday.open;
    });
  }

  return openingHoursCollection;
}
OpeningHoursCollectionFactory.$inject = ["moment", "$translate"];
})();

// Source: src/event_form/components/openinghours/openinghours.component.js
(function () {
'use strict';

/**
 * @typedef {Object} OpeningHours
 * @property {Date} opensAsDate
 * @property {Date} closesAsDate
 * @property {string} opens
 * @property {string} closes
 * @property {string[]} dayOfWeek
 */

angular
  .module('udb.event-form')
  .component('udbEventFormOpeningHours', {
    bindings: {
      openingHoursCollection: '=openingHours',
      formData: '='
    },
    templateUrl: 'templates/event-form-openinghours.html',
    controller: OpeningHourComponentController,
    controllerAs: 'cm'
  });

/**
 * @ngInject
 */
function OpeningHourComponentController($uibModal) {
  var cm = this;

  cm.edit = openEditorModal;

  function openEditorModal() {
    var editorModal = $uibModal.open({
      templateUrl: 'templates/opening-hours-editor.modal.html',
      controller: 'OpeningHoursEditorModalController',
      controllerAs: 'ohemc',
      size: 'lg',
      resolve: {
        openingHoursCollection: function () {
          return angular.copy(cm.openingHoursCollection);
        }
      }
    });

    editorModal.result.then(saveOpeningHours);
  }

  /**
   *
   * @param {OpeningHoursData[]} openingHoursList
   */
  function saveOpeningHours(openingHoursList) {
    cm.formData.saveOpeningHours(openingHoursList);
    cm.openingHoursCollection.deserialize(openingHoursList);
  }
}
OpeningHourComponentController.$inject = ["$uibModal"];
})();

// Source: src/event_form/components/organizer-address/organizer-address.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormOrganizerAddressController
 * @description
 * # EventFormOrganizerAddressController
 * Modal for setting the reservation period.
 */
angular
    .module('udb.event-form')
    .component('udbOrganizerAddress', {
      templateUrl: 'templates/organizer-address.html',
      controller: OrganizerAddressComponent,
      controllerAs: 'oac',
      bindings: {
        address: '=',
        onUpdate: '&'
      }
    });

/* @ngInject */
function OrganizerAddressComponent($scope, Levenshtein, citiesBE, citiesNL, appConfig) {
  var controller = this;

  controller.availableCountries = appConfig.offerEditor.countries;
  controller.defaultCountry = _.find(controller.availableCountries, function(country) { return country.default; });
  controller.selectedCountry = controller.defaultCountry;
  controller.address.addressCountry = controller.selectedCountry.code;

  controller.cities = controller.selectedCountry.code === 'BE' ? citiesBE : citiesNL;
  controller.selectedCity = '';
  controller.requiredAddress = false;

  if (controller.address.addressLocality) {
    controller.selectedCity = controller.address.postalCode + ' ' + controller.address.addressLocality;
    controller.requiredAddress = true;
  }

  controller.streetHasErrors = false;
  controller.cityHasErrors = false;
  controller.addressHasErrors = false;

  controller.validateAddress = validateAddress;
  controller.filterCities = filterCities;
  controller.orderByLevenshteinDistance = orderByLevenshteinDistance;
  controller.selectCity = selectCity;
  controller.changeCitySelection = changeCitySelection;
  controller.changeCountrySelection = changeCountrySelection;

  $scope.$on('organizerAddressSubmit', function () {
    controller.organizerAddressForm.$setSubmitted();
    reset();
    validateAddress();
  });

  function reset() {
    controller.streetHasErrors = false;
    controller.cityHasErrors = false;
    controller.addressHasErrors = false;
  }

  function validateAddress() {
    reset();
    if (controller.requiredAddress) {
      if (controller.address.streetAddress === '' ||
          controller.address.streetAddress === undefined) {
        controller.streetHasErrors = true;
      }
      if (controller.selectedCity === '') {
        controller.cityHasErrors = true;
      }
    }
    else {
      if ((controller.address.streetAddress === '' ||
          controller.address.streetAddress === undefined) && controller.selectedCity !== '') {
        controller.streetHasErrors = true;
      }

      if (controller.selectedCity === '' && controller.address.streetAddress !== '') {
        controller.cityHasErrors = true;
      }
    }
    sendUpdate();
  }

  function filterCities(value) {
    return function (city) {
      var length = value.length;
      var words = value.match(/\w+/g);
      var labelMatches = words.filter(function (word) {
        return city.label.toLowerCase().indexOf(word.toLowerCase()) !== -1;
      });

      return labelMatches.length >= words.length;
    };
  }

  function orderByLevenshteinDistance(value) {
    return function (city) {
      return new Levenshtein(value, city.label);
    };
  }

  /**
   * Select City.
   */
  function selectCity($item, $label) {
    if (controller.selectedCountry.code === 'BE') {
      controller.address.postalCode = $item.zip;
    }

    controller.address.addressLocality = $item.name;

    controller.cityAutocompleteTextField = '';
    controller.selectedCity = $label;
    validateAddress();
  }

  /**
   * Change a city selection.
   */
  function changeCitySelection() {
    controller.address.postalCode = '';
    controller.address.addressLocality = '';

    controller.selectedCity = '';
    controller.cityAutocompleteTextField = '';
    validateAddress();
  }

  /**
   * Change a city selection.
   */
  function changeCountrySelection() {
    if (controller.selectedCountry.code === 'NL') {
      controller.cities = citiesNL;
    }
    else {
      controller.cities = citiesBE;
    }
    controller.address.addressCountry = controller.selectedCountry.code;
    changeCitySelection();
  }

  function sendUpdate() {
    controller.addressHasErrors = controller.streetHasErrors || controller.cityHasErrors;
    controller.onUpdate({error: controller.addressHasErrors});
  }
}
OrganizerAddressComponent.$inject = ["$scope", "Levenshtein", "citiesBE", "citiesNL", "appConfig"];
})();

// Source: src/event_form/components/organizer-contact/organizer-contact.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormOrganizerAddressController
 * @description
 * # EventFormOrganizerAddressController
 * Modal for setting the reservation period.
 */
angular
    .module('udb.event-form')
    .component('udbOrganizerContact', {
      templateUrl: 'templates/organizer-contact.html',
      controller: OrganizerContactComponent,
      controllerAs: 'occ',
      bindings: {
        contact: '=',
        onUpdate: '&'
      }
    });

/* @ngInject */
function OrganizerContactComponent($scope) {
  var controller = this;

  controller.newContact = {};

  controller.addingContactEntry = false;
  controller.isPristine = true;
  controller.validateContact = validateContact;
  controller.addOrganizerContactEntry = addOrganizerContactEntry;
  controller.cancelOrganizerContactEntry = cancelOrganizerContactEntry;
  controller.addOrganizerContactInfo = addOrganizerContactInfo;
  controller.deleteOrganizerContactInfo = deleteOrganizerContactInfo;
  controller.sendUpdate = sendUpdate;

  $scope.$on('organizerContactSubmit', function() {
    controller.organizerContactWrapper.$setSubmitted();
  });

  function validateContact() {
    if (_.find(controller.contact, {'value': ''}) ||
        _.find(controller.contact, {'value': undefined}) ||
        (controller.organizerContactWrapper.$invalid &&  controller.organizerContactWrapper.$dirty)) {
      controller.contactHasErrors = true;
    }
    else {
      controller.contactHasErrors = false;
    }
    sendUpdate();
  }

  function resetOrganizerContactEntry() {
    controller.newContact = {
      type : '',
      value : ''
    };
  }

  /**
   * Add a contact info entry for an organizer.
   */
  function addOrganizerContactEntry(type) {
    controller.newContact = {
      type : type,
      value : ''
    };
    controller.isPristine = true;
    controller.addingContactEntry = true;
  }

  /**
   * Add a contact info entry for an organizer.
   */
  function cancelOrganizerContactEntry() {
    resetOrganizerContactEntry();
    controller.addingContactEntry = false;
    controller.isPristine = true;
  }

  /* */
  function addOrganizerContactInfo() {
    validateContact();
    if (!controller.contactHasErrors) {
      controller.contact.push(controller.newContact);
      resetOrganizerContactEntry();
      controller.addingContactEntry = false;
      controller.isPristine = true;
      sendUpdate();
    }
  }

  /**
   * Remove a given key of the contact info.
   */
  function deleteOrganizerContactInfo(index) {
    controller.contact.splice(index, 1);
    validateContact();
  }

  function sendUpdate() {
    controller.onUpdate({error: controller.contactHasErrors});
  }

  $scope.$watch(function() {
    return controller.newContact;
  }, function(value) {
    if (value && value.value && value.value !== '') {
      controller.isPristine = false;
    }
  }, true);
}
OrganizerContactComponent.$inject = ["$scope"];
})();

// Source: src/event_form/components/organizer/event-form-organizer-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormOrganizerModalController
 * @description
 * # EventFormOrganizerModalController
 * Modal for adding an organizer.
 */
angular
  .module('udb.event-form')
  .controller('EventFormOrganizerModalController', EventFormOrganizerModalController);

/* @ngInject */
function EventFormOrganizerModalController(
  $scope,
  $uibModalInstance,
  udbOrganizers,
  UdbOrganizer,
  eventCrud,
  $q,
  organizerName,
  OrganizerManager,
  appConfig,
  citiesBE,
  citiesNL
) {

  var controller = this;

  // Scope vars.
  $scope.organizer = organizerName;
  $scope.organizersWebsiteFound = false;
  $scope.organizersFound = false;
  $scope.saving = false;
  $scope.error = false;
  $scope.addressError = false;
  $scope.contactError = false;
  $scope.showWebsiteValidation = false;
  $scope.showValidation = false;
  $scope.organizers = [];
  $scope.selectedCity = '';
  $scope.disableSubmit = true;

  $scope.newOrganizer = {
    mainLanguage: 'nl',
    website: 'http://',
    name : $scope.organizer,
    address : {
      streetAddress : '',
      addressLocality : '',
      postalCode: '',
      addressCountry : ''
    },
    contact: []
  };

  // Scope functions.
  $scope.cancel = cancel;
  $scope.validateWebsite = validateWebsite;
  $scope.updateName = updateName;
  $scope.validateAddress = validateAddress;
  $scope.validateContact = validateContact;
  $scope.validateNewOrganizer = validateNewOrganizer;
  $scope.selectOrganizer = selectOrganizer;
  $scope.saveOrganizer = saveOrganizer;

  /**
   * Cancel the modal.
   */
  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  /**
   * Validate the website of new organizer.
   */
  function validateWebsite() {
    $scope.showWebsiteValidation = true;

    if (!$scope.organizerForm.website.$valid) {
      $scope.showWebsiteValidation = false;
      return;
    }
    udbOrganizers
        .findOrganizersWebsite($scope.newOrganizer.website)
        .then(function (data) {
          // Set the results for the duplicates modal,
          if (data.totalItems > 0) {
            $scope.organizersWebsiteFound = true;
            $scope.firstOrganizerFound = new UdbOrganizer(data.member[0]);
            $scope.showWebsiteValidation = false;
            $scope.disableSubmit = true;
          }
          else {
            $scope.showWebsiteValidation = false;
            $scope.organizersWebsiteFound = false;
            $scope.firstOrganizerFound = '';
            if ($scope.newOrganizer.name) {
              $scope.disableSubmit = false;
            }
          }
        }, function() {
          $scope.websiteError = true;
          $scope.showWebsiteValidation = false;
        });
  }

  /**
   * When the name is changed by a user, submit state needs to be updated also.
   */
  function updateName() {
    if ($scope.newOrganizer.name && !$scope.websiteError) {
      $scope.disableSubmit = false;
    } else {
      $scope.disableSubmit = true;
    }
  }

  function validateAddress(error) {
    $scope.addressError = error;
  }

  function validateContact(error) {
    $scope.contactError = error;
  }

  /**
   * Validate the new organizer.
   */
  function validateNewOrganizer() {

    $scope.showValidation = true;
    // Forms are automatically known in scope.
    if (!$scope.organizerForm.$valid) {
      return;
    }

    $scope.$broadcast('organizerAddressSubmit');
    $scope.$broadcast('organizerContactSubmit');

    // resolve for now, will re-introduce duplicate detection later on
    var promise = $q.resolve([]);

    $scope.error = false;
    $scope.saving = true;

    if ($scope.addressError || $scope.contactError) {
      $scope.error = true;
      $scope.saving = false;
      return;
    }

    promise.then(function (data) {

      // Set the results for the duplicates modal,
      if (data.length > 0) {
        $scope.organizersFound = true;
        $scope.organizers = data;
        $scope.saving = false;
      }
      // or save the event immediately if no duplicates were found.
      else {
        saveOrganizer();
      }

    }, function() {
      $scope.error = true;
      $scope.saving = false;
    });

  }

  /**
   * Select the organizer that should be used.
   */
  function selectOrganizer(organizer) {
    $uibModalInstance.close(organizer);
  }

  /**
   * Save the new organizer in db.
   */
  function saveOrganizer() {

    $scope.saving = true;
    $scope.saveError = false;

    var organizer = _.clone($scope.newOrganizer);
    // remove the address when it's empty
    if (
      !organizer.address.streetAddress &&
      !organizer.address.addressLocality &&
      !organizer.address.postalCode
    ) {
      delete organizer.address;
    }

    eventCrud
      .createOrganizer(organizer)
      .then(function(jsonResponse) {
        var defaultOrganizerLabel = _.get(appConfig, 'offerEditor.defaultOrganizerLabel');
        if (typeof(defaultOrganizerLabel) !== 'undefined' &&
            defaultOrganizerLabel !== '') {
          OrganizerManager
            .addLabelToOrganizer(jsonResponse.data.organizerId, defaultOrganizerLabel);
        }
        $scope.newOrganizer.id = jsonResponse.data.organizerId;
        selectOrganizer($scope.newOrganizer);
        $scope.saving = false;
      }, function() {
        $scope.saveError = true;
        $scope.saving = false;
      });
  }

}
EventFormOrganizerModalController.$inject = ["$scope", "$uibModalInstance", "udbOrganizers", "UdbOrganizer", "eventCrud", "$q", "organizerName", "OrganizerManager", "appConfig", "citiesBE", "citiesNL"];
})();

// Source: src/event_form/components/place/event-form-place-modal.controller.js
(function () {
(function () {
  'use strict';

  /**
   * @ngdoc function
   * @name udbApp.controller:EventFormPlaceModalController
   * @description
   * # EventFormPlaceModalController
   * Modal for adding an place.
   */
  angular
    .module('udb.event-form')
    .controller('EventFormPlaceModalController', EventFormPlaceModalController);

  /* @ngInject */
  function EventFormPlaceModalController(
      $scope,
      $uibModalInstance,
      eventCrud,
      UdbPlace,
      location,
      categories,
      title,
      $translate
  ) {

    $scope.categories = categories;
    $scope.location = location;
    $scope.title = title;

    // Scope vars.
    $scope.newPlace = getDefaultPlace();
    $scope.newPlace.eventType.id = getFirstCategoryId();
    $scope.showValidation = false;
    $scope.invalidStreet = false;
    $scope.saving = false;
    $scope.error = false;

    // Scope functions.
    $scope.addLocation = addLocation;
    $scope.resetAddLocation = resetAddLocation;
    $scope.translateEventTypes = translateEventTypes;

    /**
     * Get the default Place data
     * @returns {undefined}
     */
    function getDefaultPlace() {
      return {
        name: $scope.title,
        eventType: {
          id: ''
        },
        address: {
          addressCountry: $scope.location.address.addressCountry,
          addressLocality: $scope.location.address.addressLocality,
          postalCode: $scope.location.address.postalCode,
          streetAddress: '',
          locationNumber : ''
        }
      };
    }

    /**
     * Reset the location field(s).
     * @returns {undefined}
     */
    function resetAddLocation() {

      // Clear the current place data.
      $scope.newPlace = getDefaultPlace();

      // Close the modal.
      $uibModalInstance.dismiss();

    }
    /**
     * Adds a location.
     * @returns {undefined}
     */
    function addLocation() {

      // Forms are automatically known in scope.
      $scope.showValidation = true;
      if (!$scope.placeForm.$valid) {
        return;
      }

      if (!validateAddress($scope.newPlace.address.streetAddress)) {
        $scope.error = true;
        $scope.invalidStreet = true;
        return;
      }

      savePlace();
    }

    /**
     * Save the new place in db.
     */
    function savePlace() {

      $scope.saving = true;
      $scope.error = false;

      // Convert this place data to a Udb-place.
      var eventTypeLabel = '';
      for (var i = 0; i < $scope.categories.length; i++) {
        if ($scope.categories[i].id === $scope.newPlace.eventType.id) {
          eventTypeLabel = $scope.categories[i].label;
          break;
        }
      }

      var udbPlace = new UdbPlace();
      udbPlace.name = $scope.newPlace.name;
      udbPlace.calendar.calendarType = 'permanent';
      udbPlace.type = {
        id : $scope.newPlace.eventType.id,
        label : eventTypeLabel,
        domain : 'eventtype'
      };
      udbPlace.address = {
        addressCountry : $scope.newPlace.address.addressCountry,
        addressLocality : $scope.newPlace.address.addressLocality,
        postalCode : $scope.newPlace.address.postalCode,
        streetAddress : $scope.newPlace.address.streetAddress
      };
      udbPlace.mainLanguage = $translate.use() || 'nl';

      function showError() {
        $scope.saving = false;
        $scope.error = true;
      }

      function passOnPlaceData(eventFormData) {
        udbPlace.id = eventFormData.id;
        selectPlace(udbPlace);
        $scope.saving = true;
        $scope.error = false;
      }

      eventCrud
        .createOffer(udbPlace)
        .then(passOnPlaceData, showError);
    }

    /**
     * Select the place that should be used.
     *
     * @param {string} place
     *   Name of the place
     */
    function selectPlace(place) {
      $uibModalInstance.close(place);
    }

    /**
     * @return {string}
     */
    function getFirstCategoryId() {
      var sortedCategories = $scope.categories.sort(
        function(a, b) {
          return a.label.localeCompare(b.label);
        });
      return sortedCategories[0].id;
    }

    function getNumberFromStreetAddress(streetAddress) {
      return streetAddress.split(' ').pop();
    }

    function validateAddress(streetAddress) {
      var maximumNumberLength = 15;
      return getNumberFromStreetAddress(streetAddress).length <= maximumNumberLength;
    }

    function translateEventTypes(type) {
      return $translate.instant('offerTypes.' + type);
    }
  }
  EventFormPlaceModalController.$inject = ["$scope", "$uibModalInstance", "eventCrud", "UdbPlace", "location", "categories", "title", "$translate"];

})();
})();

// Source: src/event_form/components/price-form-modal/price-form-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:PriceFormModalController
 * @description
 * # PriceFormModalController
 * Modal for adding and editing prices.
 */
angular
  .module('udb.event-form')
  .controller('PriceFormModalController', PriceFormModalController);

/* @ngInject */
function PriceFormModalController(
  $uibModalInstance,
  EventFormData,
  price,
  $filter,
  $scope
) {
  var pfmc = this;
  var originalPrice = [];

  pfmc.unsetPriceItemFree = unsetPriceItemFree;
  pfmc.setPriceItemFree = setPriceItemFree;
  pfmc.deletePriceItem = deletePriceItem;
  pfmc.showPriceDelete = showPriceDelete;
  pfmc.addPriceItem = addPriceItem;
  pfmc.cancelEditPrice = cancelEditPrice;
  pfmc.validatePrice = validatePrice;

  function init() {
    pfmc.mainLanguage = EventFormData.mainLanguage;
    pfmc.price = angular.copy(price);
    originalPrice = angular.copy(price);

    if (pfmc.price.length === 0) {
      var name = {};
      name[pfmc.mainLanguage] = 'Basistarief';
      var priceItem = {
        category: 'base',
        name: name,
        priceCurrency: 'EUR',
        price: ''
      };
      pfmc.price.push(priceItem);
    } else {
      angular.forEach(pfmc.price, function(info) {
        info.price = $filter('currency')(info.price, ',', 0);
      });
    }

    pfmc.priceError = false;
    pfmc.invalidPrice = false;
    pfmc.savingPrice = false;
    pfmc.formPriceSubmitted = false;
  }

  init();

  function unsetPriceItemFree(key) {
    pfmc.price[key].price = '';
  }

  function setPriceItemFree(key) {
    pfmc.price[key].price = '0,00';
    pfmc.priceForm.$setDirty();
  }

  function deletePriceItem(key) {
    pfmc.price.splice(key, 1);
    pfmc.priceForm.$setDirty();
  }

  function showPriceDelete(key) {
    return key !== 0;
  }

  function addPriceItem() {
    var priceItem = {
      category: 'tariff',
      name: {},
      priceCurrency: 'EUR',
      price: ''
    };
    priceItem.name[pfmc.mainLanguage] = '';
    pfmc.price.push(priceItem);
  }

  function cancelEditPrice() {
    pfmc.price = angular.copy(originalPrice);
    originalPrice = [];

    pfmc.invalidPrice = false;
    pfmc.priceError = false;
    pfmc.formPriceSubmitted = false;

    $uibModalInstance.dismiss('cancel');
  }

  function validatePrice() {
    pfmc.formPriceSubmitted = true;
    if (pfmc.priceForm.$valid) {
      pfmc.priceError = false;
      pfmc.invalidPrice = false;
      save();
    }
    else {
      pfmc.invalidPrice = true;
    }
  }

  function save() {
    angular.forEach(pfmc.price, function(info) {
      info.price = parseFloat(info.price.replace(',', '.'));
    });
    EventFormData.priceInfo = pfmc.price;
    $uibModalInstance.close();
  }

}
PriceFormModalController.$inject = ["$uibModalInstance", "EventFormData", "price", "$filter", "$scope"];
})();

// Source: src/event_form/components/price-info/price-info.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormPriceInfoController
 * @description
 * # EventFormImageUploadController
 * Modal for setting the reservation period.
 */
angular
  .module('udb.event-form')
  .component('priceInfo', {
    templateUrl: 'templates/priceInfo.html',
    controller: PriceInfoComponent,
    bindings: {
      price: '<',
      eventId: '<',
      organizer: '<'
    }
  });

/* @ngInject */
function PriceInfoComponent($uibModal, EventFormData, eventCrud, $rootScope, udbUitpasApi, $translate) {

  var controller = this;
  controller.mainLanguage = EventFormData.mainLanguage;

  controller.setPriceFree = setPriceFree;
  controller.changePrice = changePrice;
  controller.openModal = openModal;
  controller.$onInit = init;

  function setPriceFree() {

    if (controller.price.length === 0) {
      var language = controller.mainLanguage;
      var priceObjectName = {};
      $translate('prices.base').then(function (translations) {
        priceObjectName[language] = translations;
        controller.price = [
          {
            category: 'base',
            name: priceObjectName,
            priceCurrency: 'EUR',
            price: 0
          }
        ];

        EventFormData.priceInfo = controller.price;

        var promise = eventCrud.updatePriceInfo(EventFormData);
        promise.then(function() {
          $rootScope.$emit('eventFormSaved', EventFormData);
          if (!_.isEmpty(controller.price)) {
            controller.priceCssClass = 'state-complete';
          }
        });
      });
    }
  }

  function changePrice() {
    if (controller.organizer && controller.price.length > 0) {
      // check ticketsales
      udbUitpasApi.getTicketSales(controller.eventId, controller.organizer).then(function(hasTicketSales) {
        if (hasTicketSales) {
          controller.hasTicketSales = hasTicketSales;
        } else {
          openModal();
        }
      }, function() {
        controller.hasUitpasError = true;
      });
    }
    else {
      openModal();
    }
  }

  function openModal() {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/price-form-modal.html',
      controller: 'PriceFormModalController',
      controllerAs: 'pfmc',
      size: 'lg',
      resolve: {
        price: function () {
          return controller.price;
        }
      }
    });

    modalInstance.result.then(savePrice, cancelPrice);
  }

  function init() {
    controller.price = EventFormData.priceInfo;

    if (controller.price.length) {
      controller.priceCssClass = 'state-complete';
    }
    else {
      controller.priceCssClass = '';
    }
  }

  function savePrice() {
    controller.savingPrice = true;
    controller.price = EventFormData.priceInfo;

    controller.editPrice = false;

    var promise = eventCrud.updatePriceInfo(EventFormData);
    promise.then(function() {
      $rootScope.$emit('eventFormSaved', EventFormData);
      if (!_.isEmpty(controller.price)) {
        controller.priceCssClass = 'state-complete';
      }
      controller.savingPrice = false;
      controller.formPriceSubmitted = false;
    }, function () {
      controller.priceError = true;
      controller.savingPrice = false;
      controller.formPriceSubmitted = false;
    });
  }

  function cancelPrice() {
    controller.price = EventFormData.priceInfo;
  }
}
PriceInfoComponent.$inject = ["$uibModal", "EventFormData", "eventCrud", "$rootScope", "udbUitpasApi", "$translate"];
})();

// Source: src/event_form/components/publish-modal/event-form-publish-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormPublishModalController
 * @description
 * # EventFormPublishModalController
 * Modal for postponing a publish.
 */
angular
  .module('udb.event-form')
  .controller('EventFormPublishModalController', EventFormPublishModalController);

/* @ngInject */
function EventFormPublishModalController($uibModalInstance, eventFormData, publishEvent) {
  var efpmc = this;
  efpmc.error = '';
  efpmc.hasPublicationDate = false;
  efpmc.publicationDate = eventFormData.availableFrom;
  efpmc.maxDate = moment(eventFormData.getFirstStartDate()).subtract(1, 'days').toDate();
  efpmc.opened = false;
  efpmc.dismiss = dismiss;
  efpmc.savePublicationDate = savePublicationDate;
  efpmc.onFocus = onFocus;
  efpmc.toggleDatePicker = toggleDatePicker;

  var tomorrow = moment()
    .add(1, 'days')
    .startOf('day')
    .toDate();

  efpmc.drp = {
    dateFormat: 'dd/MM/yyyy',
    startOpened: false,
    options: {
      minDate: tomorrow,
      maxDate: efpmc.maxDate,
      showWeeks: false
    }
  };

  function toggleDatePicker() {
    efpmc.opened = !efpmc.opened;
  }

  function dismiss() {
    $uibModalInstance.dismiss();
  }

  function onFocus() {
    efpmc.drp.startOpened = !efpmc.drp.startOpened;
  }

  function savePublicationDate() {
    if (!efpmc.publicationDate) {
      efpmc.error = 'empty';
    } else if (tomorrow <= efpmc.publicationDate) {
      eventFormData.availableFrom = new Date(efpmc.publicationDate.getFullYear(), efpmc.publicationDate.getMonth(),
      efpmc.publicationDate.getDate(), 0, 0, 0);
      publishEvent();
      $uibModalInstance.close();
    } else {
      efpmc.error = 'past';
    }
  }

}
EventFormPublishModalController.$inject = ["$uibModalInstance", "eventFormData", "publishEvent"];
})();

// Source: src/event_form/components/reservation-period/reservation-period.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:ReservationPeriodController
 * @description
 * # ReservationPeriodController
 */
angular
  .module('udb.event-form')
  .controller('ReservationPeriodController', ReservationPeriodController);

/* @ngInject */
function ReservationPeriodController($scope, EventFormData, eventCrud, $rootScope) {

  var controller = this;

  $scope.haveBookingPeriod = false;
  $scope.bookingPeriodInfoCssClass = 'state-incomplete';
  $scope.savingBookingPeriodInfo = false;
  $scope.bookingPeriodInfoError = false;
  $scope.availabilityStarts = '';
  $scope.availabilityEnds = '';
  $scope.errorMessage = '';
  $scope.popup1 = {
    opened: false
  };

  $scope.popup2 = {
    opened: false
  };

  $scope.validateBookingPeriod = validateBookingPeriod;
  $scope.saveBookingPeriod = saveBookingPeriod;
  $scope.deleteBookingPeriod = deleteBookingPeriod;
  $scope.changeHaveBookingPeriod = changeHaveBookingPeriod;
  $scope.initBookingPeriodForm = initBookingPeriodForm;

  // Options for the datepicker
  $scope.dateOptions = {
    formatYear: 'yyyy',
    maxDate: new Date(2020, 5, 22),
    minDate: new Date(),
    startingDay: 1
  };

  initBookingPeriodForm();

  controller.bookingPeriodSaved = function () {
    $rootScope.$emit('bookingPeriodSaved', EventFormData);
  };

  function validateBookingPeriod() {
    if ($scope.availabilityStarts > $scope.availabilityEnds) {
      $scope.errorMessage = 'De gekozen einddatum moet na de startdatum vallen.';
      return;
    }
    $scope.errorMessage = '';
    saveBookingPeriod();
  }

  function saveBookingPeriod() {
    if (moment($scope.availabilityStarts).isValid() && moment($scope.availabilityEnds).isValid()) {
      EventFormData.bookingInfo.availabilityStarts = moment($scope.availabilityStarts).format();
      EventFormData.bookingInfo.availabilityEnds = moment($scope.availabilityEnds).format();
    } else {
      EventFormData.bookingInfo.availabilityStarts = '';
      EventFormData.bookingInfo.availabilityEnds = '';
    }

    $scope.savingBookingPeriodInfo = true;
    $scope.bookingPeriodInfoError = false;

    var promise = eventCrud.updateBookingInfo(EventFormData);
    promise.then(function() {
      controller.bookingPeriodSaved();
      $scope.bookingPeriodInfoCssClass = 'state-complete';
      $scope.savingBookingPeriodInfo = false;
      $scope.bookingPeriodInfoError = false;
    }, function() {
      $scope.savingBookingPeriodInfo = false;
      $scope.bookingPeriodInfoError = true;
    });
  }

  function deleteBookingPeriod() {
    $scope.availabilityStarts = '';
    $scope.availabilityEnds = '';
    $scope.haveBookingPeriod = false;
    saveBookingPeriod();
  }

  function changeHaveBookingPeriod() {
    if (!$scope.haveBookingPeriod) {
      $scope.haveBookingPeriod = true;
    }
  }

  $scope.open1 = function() {
    $scope.popup1.opened = true;
  };

  $scope.open2 = function() {
    $scope.popup2.opened = true;
  };

  function initBookingPeriodForm() {
    if (EventFormData.bookingInfo.availabilityStarts ||
      EventFormData.bookingInfo.availabilityEnds) {
      $scope.haveBookingPeriod = true;
    }

    if (EventFormData.bookingInfo.availabilityStarts) {
      $scope.availabilityStarts = new Date(EventFormData.bookingInfo.availabilityStarts);
    }
    else {
      $scope.availabilityStarts = new Date();
    }

    if (EventFormData.bookingInfo.availabilityEnds) {
      $scope.availabilityEnds = new Date(EventFormData.bookingInfo.availabilityEnds);
    }
    else {
      $scope.availabilityEnds = new Date();
    }
  }
}
ReservationPeriodController.$inject = ["$scope", "EventFormData", "eventCrud", "$rootScope"];
})();

// Source: src/event_form/components/reservation-period/reservation-period.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.event_form.directive:udbReservationPeriod
 * @description
 * # reservation period selection for event form
 */
angular
  .module('udb.event-form')
  .directive('udbReservationPeriod', ReservationPeriodDirective);

/* @ngInject */
function ReservationPeriodDirective() {

  return {
    restrict: 'AE',
    controller: 'ReservationPeriodController',
    templateUrl: 'templates/reservation-period.html'
  };

}
})();

// Source: src/event_form/components/save-time-tracker/save-time-tracker.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEventFormSaveTimeTracker
 * @description
 * Tracks the time of when an event form was last saved.
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormSaveTimeTracker', TimeTrackerDirective);

/* @ngInject */
function TimeTrackerDirective($rootScope) {

  var template =
    '<div class="save-time-tracker small" ng-if="::timeLastSaved">' +
    '<span translate-once="eventForm.timeTracker.automatic_saved"></span> ' +
    '<span class="time-last-saved" ng-bind="timeLastSaved | date:\'HH:mm\'"></span> ' +
    '<span translate-once="eventForm.timeTracker.hour"></span>' +
    '</div>';

  return {
    template: template,
    restrict: 'EA',
    link: link
  };

  function link(scope) {
    scope.timeLastSaved = undefined;

    function refreshTimeLastSaved() {
      scope.timeLastSaved = new Date();
    }

    var eventFormSavedListener = $rootScope.$on('eventFormSaved', refreshTimeLastSaved);
    scope.$on('$destroy', eventFormSavedListener);
  }
}
TimeTrackerDirective.$inject = ["$rootScope"];
})();

// Source: src/event_form/components/suggestions/event-preview.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEventPreview
 * @description
 *  Previews an event provided by a result viewer.
 */
angular
  .module('udb.event-form')
  .directive('udbEventPreview', udbEventPreview);

/* @ngInject */
function udbEventPreview() {
  var eventPreviewDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'eventCtrl',
    templateUrl: 'templates/event-preview.directive.html'
  };

  return eventPreviewDirective;
}
})();

// Source: src/event_form/components/suggestions/event-suggestion.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEventSuggestion
 * @description
 *  Displays the event suggestions provided by a result viewer.
 */
angular
  .module('udb.event-form')
  .directive('udbEventSuggestion', udbEventSuggestion);

/* @ngInject */
function udbEventSuggestion() {
  var eventSuggestionDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'eventCtrl',
    templateUrl: 'templates/event-suggestion.directive.html'
  };

  return eventSuggestionDirective;
}
})();

// Source: src/event_form/components/suggestions/place-preview.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbPlacePreview
 * @description
 *  Previews a place provided by a result viewer.
 */
angular
  .module('udb.event-form')
  .directive('udbPlacePreview', udbPlacePreview);

/* @ngInject */
function udbPlacePreview() {
  var placePreviewDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'placeCtrl',
    templateUrl: 'templates/place-preview.directive.html'
  };

  return placePreviewDirective;
}
})();

// Source: src/event_form/components/suggestions/place-suggestion.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbPlaceSuggestion
 * @description
 * # udbPlaceSuggestion
 */
angular
  .module('udb.event-form')
  .directive('udbPlaceSuggestion', udbPlaceSuggestion);

/* @ngInject */
function udbPlaceSuggestion() {
  var placeSuggestionDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'placeCtrl',
    templateUrl: 'templates/place-suggestion.directive.html'
  };

  return placeSuggestionDirective;
}
})();

// Source: src/event_form/components/suggestions/suggestion-preview-modal.controller.js
(function () {
(function () {
  'use strict';

  /**
   * @ngdoc function
   * @name udbApp.controller:SuggestionPreviewModalController
   * @description
   * Provides a controller to preview suggestions
   */
  angular
    .module('udb.event-form')
    .controller('SuggestionPreviewModalController', SuggestionPreviewModalController);

  /* @ngInject */
  function SuggestionPreviewModalController(
    $scope,
    $uibModalInstance,
    selectedSuggestionId,
    resultViewer,
    suggestionType
  ) {

    /**
     * A factory that helps look for the items in a result viewer by id.
     *
     * @param {string} itemId
     *  The UUID of an UDB item.
     *
     * @return {Function}
     *  A function that can be used as a callback that looks through result viewer items
     */
    function itemIdentifier(itemId) {
      return function(item) {
        return item['@id'].indexOf(itemId) !== -1;
      };
    }

    $scope.previousSuggestion = previousSuggestion;
    $scope.nextSuggestion = nextSuggestion;
    $scope.currentSuggestionId = selectedSuggestionId;
    $scope.currentSuggestionIndex = _.findIndex(resultViewer.events, itemIdentifier(selectedSuggestionId));
    $scope.closePreview = closePreview;
    $scope.suggestionCount = resultViewer.totalItems;
    $scope.currentSuggestion = _.find(resultViewer.events, itemIdentifier(selectedSuggestionId));
    $scope.suggestions = resultViewer.events;
    $scope.suggestionType = suggestionType;

    function previousSuggestion() {
      var previousIndex = $scope.currentSuggestionIndex - 1;
      var suggestion = resultViewer.events[previousIndex.toString()];

      if (suggestion) {
        $scope.currentSuggestion = suggestion;
        $scope.currentSuggestionIndex = previousIndex;
      } else {
        closePreview();
      }
    }

    function nextSuggestion() {
      var nextIndex = $scope.currentSuggestionIndex + 1;
      var suggestion = resultViewer.events[nextIndex.toString()];

      if (suggestion) {
        $scope.currentSuggestion = suggestion;
        $scope.currentSuggestionIndex = nextIndex;
      } else {
        closePreview();
      }
    }

    function closePreview() {
      $uibModalInstance.close();
    }

  }
  SuggestionPreviewModalController.$inject = ["$scope", "$uibModalInstance", "selectedSuggestionId", "resultViewer", "suggestionType"];

})();
})();

// Source: src/event_form/components/validators/contact-info-validation.directive.js
(function () {
'use strict';

/**
* @ngdoc directive
* @name udb.event-form.directive:udbContactInfoValidation
* @description
* # directive for contact info validation
*/
angular
  .module('udb.event-form')
  .directive('udbContactInfoValidation', UdbContactInfoValidationDirective);

function UdbContactInfoValidationDirective() {

  var URL_REGEXP = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/;
  var EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;

  return {
    restrict: 'A',
    require: 'ngModel',
    link: link
  };

  function link (scope, elem, attrs, ngModel) {
    // Scope methods.
    scope.loadInfo = loadInfo;
    scope.validateInfo = validateInfo;
    scope.clearInfo = clearInfo;
    scope.infoErrorMessage = '';

    scope.$on('organizerContactRefresh', function() {
      validateInfo();
    });

    function loadInfo() {
      if (ngModel.$modelValue.value !== '') {
        ngModel.$setValidity('contactinfo', true);
        scope.infoErrorMessage = '';
        validateInfo();
      }
    }

    /**
     * Validate the entered info.
     */
    function validateInfo() {

      if (ngModel.$modelValue.value === '' || ngModel.$modelValue.value === undefined) {
        scope.infoErrorMessage = 'Gelieve dit veld niet leeg te laten.';
        ngModel.$setValidity('contactinfo', false);
      }
      else {
        if (ngModel.$modelValue.type === 'email' && !EMAIL_REGEXP.test(ngModel.$modelValue.value)) {
          scope.infoErrorMessage = 'Gelieve een geldig e-mailadres in te vullen.';
          ngModel.$setValidity('contactinfo', false);
        }
        else if (ngModel.$modelValue.type === 'url') {
          var viewValue = ngModel.$viewValue;

          if (!URL_REGEXP.test(viewValue.value)) {
            scope.infoErrorMessage = 'Gelieve een geldige url in te vullen.';
            ngModel.$setValidity('contactinfo', false);
          }
        }
      }
    }

    /**
     * Clear the entered info when switching type.
     */
    function clearInfo() {
      ngModel.$modelValue.value = '';
      ngModel.$modelValue.booking = false;
      scope.infoErrorMessage = '';
      ngModel.$setValidity('contactinfo', true);
    }

  }
}
})();

// Source: src/event_form/copyright-negotiator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.event-form.copyrightNegotiator
 * @description
 * # copyrightNegotiator
 * Service in the udb.event-form.
 */
angular
  .module('udb.event-form')
  .service('copyrightNegotiator', CopyrightNegotiator);

/* @ngInject */
function CopyrightNegotiator($cookies) {
  var service = this;
  var CookieKey = 'copyright-agreement-confirmed';

  service.confirm = function () {
    var expirationDate = moment().add(1, 'year').toDate();
    var agreement = {
      confirmed: true
    };

    $cookies.putObject(
      CookieKey,
      agreement,
      {
        expires: expirationDate
      }
    );
  };

  service.confirmed = function () {
    var agreement = $cookies.getObject(CookieKey);
    return agreement ? agreement.confirmed : false;
  };
}
CopyrightNegotiator.$inject = ["$cookies"];
})();

// Source: src/event_form/event-form-data.factory.js
(function () {
'use strict';

/**
 * @typedef {Object} EventType
 * @property {string} id
 * @property {string} label
 */

/**
 * @typedef {Object} EventTheme
 * @property {string} id
 * @property {string} label
 */

/**
 * @typedef {Object} MediaObject
 * @property {string} @id
 * @property {string} @type
 * @property {string} id
 * @property {string} url
 * @property {string} thumbnailUrl
 * @property {string} description
 * @property {string} copyrightHolder
 */

/**
 * @typedef {Object} BookingInfo
 * @property {string} url
 * @property {Object} urlLabel
 * @property {string} email
 * @property {string} phone
 */

/**
 * @typedef {Object} OpeningHoursData
 * @property {string} opens
 * @property {string} closes
 * @property {string[]} dayOfWeek
 */

/**
 * @ngdoc service
 * @name udb.core.EventFormData
 * @description
 * Contains data needed for the steps in the event form.
 */
angular
  .module('udb.event-form')
  .factory('EventFormData', EventFormDataFactory);

/* @ngInject */
function EventFormDataFactory(rx, calendarLabels, moment, OpeningHoursCollection, appConfig, $translate) {

  /**
   * @class EventFormData
   */
  var eventFormData = {
    /**
     * Initialize the properties with default data
     */
    init: function() {
      this.apiUrl = '';
      this.isEvent = true; // Is current item an event.
      this.isPlace = false; // Is current item a place.
      this.showStep1 = true;
      this.showStep2 = false;
      this.showStep3 = false;
      this.showStep4 = false;
      this.showStep5 = false;
      this.majorInfoChanged = false;
      // Properties that will be copied to UdbEvent / UdbPlace.
      this.id = '';
      this.mainLanguage = $translate.use() || 'nl';
      this.name = '';
      this.description = {};
      // Events have a location
      this.location = {
        'id' : null,
        'name': '',
        'address': {
          'addressCountry': 'BE',
          'addressLocality': '',
          'postalCode': '',
          'streetAddress': ''
        }
      };
      // Places only have an address
      this.address = {
        'addressCountry': 'BE',
        'addressLocality': '',
        'postalCode': '',
        'streetAddress': ''
      };
      this.place = {};
      /** @type {EventType} */
      this.type = {};
      /** @type {EventTheme} */
      this.theme = {};
      //
      this.calendar = {};
      this.calendar.calendarType = '';
      this.calendar.timeSpans = [];
      this.calendar.openingHours = [];
      //
      this.typicalAgeRange = '';
      this.organizer = {};
      this.contactPoint = {
        url : [],
        phone : [],
        email : []
      };
      this.facilities = [];
      /** @type {BookingInfo} **/
      this.bookingInfo = {};
      /** @type {MediaObject[]} **/
      this.mediaObjects = [];
      this.image = [];
      this.additionalData = {};
      this.priceInfo = [];
      this.workflowStatus = 'DRAFT';
      this.availableFrom = '';
      /**
       * @type {string[]}
       */
      this.labels = [];

      this.audienceType = 'everyone';

      this.timingChanged$ = rx.createObservableFunction(this, 'timingChangedCallback');

    },

    clone: function () {
      var clone = _.cloneDeep(this);
      clone.timingChanged$ = rx.createObservableFunction(clone, 'timingChangedCallback');

      return clone;
    },

    /**
     * Show the given step.
     * @param {number} stepNumber
     */
    showStep: function(stepNumber) {
      this['showStep' + stepNumber] = true;
    },

    /**
     * Hide the given step.
     * @param {number} stepNumber
     */
    hideStep: function (stepNumber) {
      this['showStep' + stepNumber] = false;
    },

    /**
     * Set the name of the offer for a given langcode.
     */
    setName: function(name, langcode) {
      this.name[langcode] = name;
    },

    /**
     * Get the name of the offer for a given langcode.
     */
    getName: function(langcode) {
      return this.name[langcode];
    },

    /**
     * Gets the mainLanguage for a offer.
     */
    getMainLanguage: function() {
      return this.mainLanguage;
    },

    /**
     * Sets the mainLanguage for a offer.
     */
    setMainLanguage: function(langcode) {
      this.mainLanguage = langcode;
    },

    /**
     * Set the description for a given langcode.
     */
    setDescription: function(description, langcode) {
      this.description[langcode] = description;
    },

    /**
     * Get the description for a given langcode.
     */
    getDescription: function(langcode) {
      return this.description[langcode];
    },

    /**
     * Set the event type and clear the selected theme.
     * @param {EventType} eventType
     */
    setEventType: function(eventType) {
      this.type = eventType;
      this.removeTheme();
    },

    removeType: function () {
      this.type = {};
    },

    /**
     * Get the event type.
     * @return {EventType}
     */
    getEventType: function() {
      return this.type;
    },

    /**
     * Get the label for the event type.
     */
    getEventTypeLabel: function() {
      return this.type.label ? this.type.label : '';
    },

    /**
     * Set the theme.
     * @param {EventTheme} theme
     */
    setTheme: function(theme) {
      this.theme = theme;
    },

    removeTheme: function () {
      this.theme = {};
    },

    /**
     * Get the theme.
     * @return {EventTheme}
     */
    getTheme: function() {
      return this.theme;
    },

    /**
     * Get the label for the theme.
     */
    getThemeLabel: function() {
      return this.theme.label ? this.theme.label : '';
    },

    getPeriodicStartDate : function() {
      return this.calendar.startDate;
    },

    setPeriodicStartDate: function(startDate) {
      this.calendar.startDate = startDate;
    },

    getPeriodicEndDate : function() {
      return this.calendar.endDate;
    },

    setPeriodicEndDate: function(endDate) {
      this.calendar.endDate = endDate;
    },

    /**
     * Reset the location.
     */
    resetLocation: function(location) {
      this.location = {
        'id' : null,
        'name': '',
        'address': {
          'addressCountry': 'BE',
          'addressLocality': '',
          'postalCode': '',
          'streetAddress': ''
        }
      };
    },

    /**
     * Set the location.
     */
    setLocation: function(location) {
      this.location = location;
    },

    /**
     * Get the calendar.
     */
    getLocation: function() {
      return this.location;
    },

    /**
     * @param {Date|string} start
     * @param {Date|string} end
     *  An empty string when not set.
     */
    addTimeSpan: function(start, end) {
      var allDay = moment(start).format('HH:mm') === '00:00' && moment(end).format('HH:mm') === '23:59';
      this.calendar.timeSpans.push({
        'start': moment(start).toISOString(),
        'end': moment(end).toISOString(),
        'allDay': allDay
      });
    },

    /**
     * Reset the calendar.
     */
    resetCalendar: function() {
      this.calendar.timeSpans = [];
      this.calendar.calendarType = '';
      this.calendar.activeCalendarLabel = '';
      this.calendar.activeCalendarType = '';
    },

    /**
     * Get the earliest date of an offer, or null for permanent events
     */
    getFirstStartDate: function() {
      var firstStartDate = null;
      if (this.calendar.calendarType === 'single' || this.calendar.calendarType === 'multiple') {
        firstStartDate = _.first(this.calendar.timeSpans).start;
      }

      if (eventFormData.calendar.calendarType === 'periodic') {
        firstStartDate = this.calendar.startDate;
      }
      return firstStartDate;
    },

    /**
     * Get the earliest date of an offer, or null for permanent events
     */
    getLastEndDate: function() {
      var lastEndDate = null;
      if (this.calendar.calendarType === 'single' || this.calendar.calendarType === 'multiple') {
        lastEndDate = _.last(this.calendar.timeSpans).end;
      }

      if (eventFormData.calendar.calendarType === 'periodic') {
        lastEndDate = this.calendar.endDate;
      }
      return lastEndDate;
    },

    /**
     * Get the type that will be saved.
     */
    getType: function() {
      return this.isEvent ? 'event' : 'place';
    },

    /**
     * Reset the selected organizers.
     */
    resetOrganizer: function() {
      this.organizer = {};
    },

    /**
     * Reset the contact point.
     */
    resetContactPoint: function() {
      this.contactPoint = {
        url : [],
        phone : [],
        email : []
      };
    },

    /**
     * Sets the booking info array.
     *
     * @param {BookingInfo} bookingInfo
     */
    setBookingInfo : function(bookingInfo) {
      this.bookingInfo = bookingInfo;
    },

    /**
     * Add a new image.
     *
     * @param {MediaObject} mediaObject
     */
    addImage : function(mediaObject) {
      this.mediaObjects = _.union(this.mediaObjects, [mediaObject]);
    },

    /**
     * Edit a media object.
     */
    editMediaObject : function(indexToEdit, url, thumbnailUrl, description, copyrightHolder) {
      this.image[indexToEdit] = {
        url : url,
        thumbnailUrl : thumbnailUrl,
        description : description,
        copyrightHolder : copyrightHolder
      };
      this.image[indexToEdit]['@type'] = 'ImageObject';
    },

    /**
     * Update the info of the given media object.
     * @param {MediaObject} updatedMediaObject
     */
    updateMediaObject: function (updatedMediaObject)  {
      this.mediaObjects = _.map(this.mediaObjects, function (existingMediaObject) {
        var mediaObject;

        if (existingMediaObject['@id'] === updatedMediaObject['@id']) {
          mediaObject = updatedMediaObject;
        } else {
          mediaObject = existingMediaObject;
        }

        return mediaObject;
      });
    },

    /**
     * Remove a media object from this item.
     *
     *@param {MediaObject} mediaObject
     */
    removeMediaObject: function(mediaObject) {
      this.mediaObjects = _.reject(this.mediaObjects, {'@id': mediaObject['@id']});
    },

    /**
     * Select the main image for this item.
     *
     * @param {mediaObject} image
     */
    selectMainImage: function (image) {
      var reindexedMedia = _.without(this.mediaObjects, image);
      reindexedMedia.unshift(image);

      this.mediaObjects = reindexedMedia;
    },

    /**
     * @param {number|undefined} min
     * @param {number|undefined} max
     */
    setTypicalAgeRange: function(min, max) {
      this.typicalAgeRange = (isNaN(min) ? '' : min) + '-' + (isNaN(max) ? '' : max);
    },

    /**
     * Get the typical age range as an object or undefined when no range is set.
     * When the offer is intended for all ages, you do get a range but both min and max will be undefined.
     *
     * @return {{min: number|undefined, max: number|undefined}|undefined}
     */
    getTypicalAgeRange: function () {
      if (_.isEmpty(this.typicalAgeRange)) {
        return;
      }

      var ageRange = {min: undefined, max: undefined};
      var rangeArray = this.typicalAgeRange.split('-');

      if (rangeArray[0]) {ageRange.min =  parseInt(rangeArray[0]);}
      if (rangeArray[1]) {ageRange.max =  parseInt(rangeArray[1]);}

      return ageRange;
    },

    /**
     * Check if the timing of the event is periodic and has a valid range.
     * @return {boolean}
     */
    hasValidPeriodicRange: function () {
      var startDate = this.getPeriodicStartDate();
      var endDate = this.getPeriodicEndDate();

      return this.calendar.calendarType === 'periodic' && !!startDate && !!endDate && startDate < endDate;
    },

    /**
     * Init the calendar for the current selected calendar type.
     */
    initCalendar: function () {
      var formData = this;
      var calendarType = _.findWhere(calendarLabels, {id: formData.calendar.calendarType});
      if (calendarType) {
        this.calendar.activeCalendarLabel = calendarType.label;
        this.calendar.activeCalendarType = formData.calendar.calendarType;
      }
    },

    timingChanged: function () {
      this.showStep(3);
      this.timingChangedCallback(this);
    },

    initOpeningHours: function(openingHours) {
      OpeningHoursCollection.deserialize(openingHours);
    },

    /**
     * Click listener on the calendar type buttons.
     * Activate the selected calendar type.
     */
    setCalendarType: function (type) {
      var formData = this;

      // Check if previous calendar type was the same.
      // If so, we don't need to create new opening hours. Just show the previous entered data.
      if (formData.calendar.calendarType === type) {
        return;
      }

      // A type is chosen, start a complete new calendar, removing old data
      formData.resetCalendar();
      formData.calendar.calendarType = type;

      if (formData.calendar.calendarType === 'single') {
        if (appConfig.calendarHighlight.date) {
          formData.addTimeSpan(
              new Date(appConfig.calendarHighlight.date),
              appConfig.calendarHighlight.startTime || '',
              appConfig.calendarHighlight.startTime ?
                  moment(appConfig.calendarHighlight.date + ' ' +
                      appConfig.calendarHighlight.startTime, 'YYYY-MM-DD HH:mm').toDate() : '',
              appConfig.calendarHighlight.endTime || '',
              appConfig.endTime ?
                  moment(appConfig.calendarHighlight.date + ' ' +
                      appConfig.calendarHighlight.endTime, 'YYYY-MM-DD HH:mm').toDate() : ''
          );
        } else {
          formData.addTimeSpan(moment(), moment());
        }
      }

      if (formData.calendar.calendarType === 'permanent') {
        formData.calendar.startDate = undefined;
        formData.calendar.endDate = undefined;
        formData.timingChanged();
      }

      if (formData.calendar.calendarType === 'periodic') {
        formData.calendar.startDate = moment().startOf('day').toDate();
        formData.calendar.endDate = moment().add(1, 'y').startOf('day').toDate();
        formData.timingChanged();
      }

      formData.initCalendar();

      if (formData.id) {
        formData.majorInfoChanged = true;
      }

    },

    /**
     * Check if the given timeSpan is a valid date object.
     * @param {Object} timeSpan
     * @returns {boolean}
     */
    isValidDate: function(timeSpan) {
      return timeSpan instanceof Date;
    },

    /**
     * Toggle the starthour field for given timeSpan.
     * @param {Object} timeSpan
     *   Timespan to change
     */
    toggleStartHour: function(timeSpan) {
      // If we hide the textfield, empty all other time fields.
      if (!timeSpan.showStartHour) {
        timeSpan.start.setHours(0);
        timeSpan.start.setMinutes(0);
        timeSpan.end.setHours(0);
        timeSpan.end.setMinutes(0);
        this.timingChanged();
      }
      else {
        var startHour = moment(timeSpan.date);
        var endHour = moment(timeSpan.date).endOf('day');

        timeSpan.startHour = startHour.format('HH:mm');
        timeSpan.startHourAsDate = startHour.toDate();
        timeSpan.endHour = endHour.format('HH:mm');
        timeSpan.endHourAsDate = endHour.toDate();
        timeSpan.showEndHour = false;
      }
    },

    /**
     * Toggle the endhour field for given timeSpan
     * @param {Object} timeSpan
     *   Timestamp to change
     */
    toggleEndHour: function(timeSpan) {
      var endHourAsDate = timeSpan.date;
      // If we hide the textfield, empty also the input.
      if (!timeSpan.showEndHour) {
        endHourAsDate.setHours(23);
        endHourAsDate.setMinutes(59);

        timeSpan.endHour = '23:59';
        timeSpan.endHourAsDate = endHourAsDate;
        this.timingChanged();
      }
      else {
        var nextThreeHours = moment(timeSpan.startHourAsDate).add(3, 'hours').minutes(0);
        endHourAsDate.setHours(nextThreeHours.hours());
        endHourAsDate.setMinutes(nextThreeHours.minutes());

        timeSpan.endHour = moment(endHourAsDate).format('HH:mm');
        timeSpan.endHourAsDate = endHourAsDate;
      }
    },

    hoursChanged: function (timeSpan) {
      var startHourAsDate;
      var endHourAsDate;
      if (timeSpan.showStartHour || timeSpan.showEndHour) {
        if (timeSpan.showStartHour) {
          if (timeSpan.startHourAsDate !== undefined) {
            startHourAsDate = moment(timeSpan.startHourAsDate);
          }
          else {
            startHourAsDate = moment(timeSpan.startHourAsDate);
            startHourAsDate.hours(0);
            startHourAsDate.minutes(0);
          }
          timeSpan.startHour = startHourAsDate.format('HH:mm');
        }

        if (timeSpan.showEndHour) {
          // if the endhour is invalid, send starthour to backend.
          if (timeSpan.endHourAsDate !== undefined) {
            endHourAsDate = moment(timeSpan.endHourAsDate);
          }
          else {
            endHourAsDate = startHourAsDate;
          }
          timeSpan.endHour = endHourAsDate.format('HH:mm');
        }
        this.timingChanged();
      }
    },

    saveOpeningHours: function (openingHours) {
      this.calendar.openingHours = openingHours;
      this.timingChanged();
    },

    saveTimeSpans: function (timeSpans) {
      this.calendar.timeSpans = timeSpans;
      this.calendar.startDate = this.getFirstStartDate();
      this.calendar.endDate = this.getLastEndDate();
      this.timingChanged();
    },

    periodicTimingChanged: function () {
      var formData = this;

      if (formData.id) {
        //TODO: this was wrapping the code below, not sure why...
      }

      if (formData.hasValidPeriodicRange()) {
        formData.periodicRangeError = false;
        formData.timingChanged();
      } else {
        formData.periodicRangeError = true;
      }
    }
  };

  // initialize the data
  eventFormData.init();

  return eventFormData;
}
EventFormDataFactory.$inject = ["rx", "calendarLabels", "moment", "OpeningHoursCollection", "appConfig", "$translate"];
})();

// Source: src/event_form/event-form.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormController
 * @description
 * # EventFormController
 * Init the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormController', EventFormController);

/* @ngInject */
function EventFormController(
    $scope,
    offerId,
    EventFormData,
    udbApi,
    moment,
    jsonLDLangFilter,
    $q,
    appConfig,
    $translate
) {

  // Other controllers won't load until this boolean is set to true.
  $scope.loaded = false;
  $scope.showLangWarning = false;

  // Make sure we start off with clean data every time this controller gets called
  EventFormData.init();

  $q.when(offerId)
    .then(fetchOffer, startCreating);

  function startCreating() {

    EventFormData.initOpeningHours([]);

    var calendarConfig = _.get(appConfig, 'calendarHighlight');

    if (EventFormData.isEvent && calendarConfig && calendarConfig.date) {
      preselectDate(calendarConfig);
    }

    $scope.language = EventFormData.mainLanguage;
    $scope.loaded = true;
  }

  function preselectDate(calendarConfig) {
    EventFormData.calendar.calendarType = 'single';
    EventFormData.addTimeSpan(
      calendarConfig.startTime ? moment(calendarConfig.date + ' ' + calendarConfig.startTime, 'YYYY-MM-DD HH:mm') : '',
      calendarConfig.endTime ? moment(calendarConfig.date + ' ' + calendarConfig.endTime, 'YYYY-MM-DD HH:mm') : ''
    );
    EventFormData.initCalendar();
    //EventFormData.showStep(3);
  }

  /**
   * @param {string|null} offerId
   */
  function fetchOffer(offerId) {
    if (!offerId) {
      startCreating();
    } else {
      udbApi
        .getOffer(offerId)
        .then(startEditing);
    }
  }

  /**
   *
   * @param {UdbPlace|UdbEvent} offer
   */
  function startEditing(offer) {
    var offerType = offer.url.split('/').shift();

    if (offerType === 'event') {
      EventFormData.isEvent = true;
      EventFormData.isPlace = false;
      copyItemDataToFormData(offer);

      // Copy location.
      if (offer.location && offer.location.id) {
        var location = jsonLDLangFilter(offer.location, offer.mainLanguage, true);
        EventFormData.location = {
          id : location.id.split('/').pop(),
          name : location.name,
          address : location.address
        };
      }

      EventFormData.audienceType = offer.audience.audienceType;
    }

    if (offerType === 'place') {
      EventFormData.isEvent = false;
      EventFormData.isPlace = true;
      copyItemDataToFormData(offer);

      // Places only have an address
      if (offer.address) {
        var translatedOffer = jsonLDLangFilter(offer, offer.mainLanguage, true);
        EventFormData.address = translatedOffer.address;
      }
    }

    if ($translate.use() !== $scope.language) {
      $scope.showLangWarning = true;
    }
  }

  /**
   * Copy all item data to form data so it can be used for edting.
   * var {UdbEvent|UdbPlace} item
   */
  function copyItemDataToFormData(item) {

    // Properties that exactly match.
    var sameProperties = [
      'id',
      'type',
      'theme',
      'openingHours',
      'description',
      'typicalAgeRange',
      'organizer',
      'bookingInfo',
      'contactPoint',
      'priceInfo',
      'facilities',
      'image',
      'additionalData',
      'apiUrl',
      'workflowStatus',
      'availableFrom',
      'labels',
      'mainLanguage'
    ];

    for (var i = 0; i < sameProperties.length; i++) {
      if (item[sameProperties[i]]) {
        EventFormData[sameProperties[i]] = item[sameProperties[i]];
      }
    }

    if (item.mediaObject) {
      EventFormData.mediaObjects = item.mediaObject || [];

      if (item.image) {
        var mainImage = _.find(EventFormData.mediaObjects, {'contentUrl': item.image});
        EventFormData.selectMainImage(mainImage);
      }
    }

    // 1. Main language is now a required property.
    // Events can be created in a given main language.
    // 2. Previous projections had a default main language of nl.
    // 3. Even older projections had a non-translated name.
    // @todo @mainLanguage after a full replay only case 1 needs to be supported.
    EventFormData.name = _.get(item.name, item.mainLanguage, null) ||
        _.get(item.name, 'nl', null) ||
        _.get(item, 'name', '');

    // Prices tariffs can be translated since III-2545
    // @todo @mainLanguage after a full replay only case 1 needs to be supported.

    if (!_.isEmpty(EventFormData.priceInfo)) {
      if (!EventFormData.priceInfo[0].name.nl && !EventFormData.priceInfo[0].name.en &&
        !EventFormData.priceInfo[0].name.fr && !EventFormData.priceInfo[0].name.de) {
        EventFormData.priceInfo = _.map(EventFormData.priceInfo, function(item) {
          var priceInfoInDutch = _.cloneDeep(item);
          priceInfoInDutch.name = {'nl': item.name};
          item = priceInfoInDutch;
          return item;
        });
      }
    }

    EventFormData.calendar.calendarType = item.calendarType; // === 'multiple' ? 'single' : item.calendarType;

    // Set correct date object for start and end.
    if (item.startDate) {
      EventFormData.calendar.startDate = moment(item.startDate).toDate();
    }

    if (item.endDate) {
      EventFormData.calendar.endDate = moment(item.endDate).toDate();
    }

    // SubEvents are timeSpans.
    if (item.calendarType === 'multiple' && item.subEvent) {
      for (var j = 0; j < item.subEvent.length; j++) {
        var subEvent = item.subEvent[j];
        EventFormData.addTimeSpan(subEvent.startDate, subEvent.endDate);
      }
    }
    else if (item.calendarType === 'single') {
      EventFormData.addTimeSpan(item.startDate, item.endDate);
    }

    if (EventFormData.calendar.calendarType) {
      EventFormData.initCalendar();
    }

    EventFormData.initOpeningHours(_.get(EventFormData, 'openingHours', []));

    $scope.language = EventFormData.mainLanguage;
    $scope.loaded = true;
    EventFormData.showStep(1);
    EventFormData.showStep(2);
    EventFormData.showStep(3);
    EventFormData.showStep(4);
    EventFormData.showStep(5);

  }
}
EventFormController.$inject = ["$scope", "offerId", "EventFormData", "udbApi", "moment", "jsonLDLangFilter", "$q", "appConfig", "$translate"];
})();

// Source: src/event_form/event-form.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:event-form.html
 * @description
 * # udb event form directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventForm', EventFormDirective);

/* @ngInject */
function EventFormDirective() {
  return {
    templateUrl: 'templates/event-form.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:event-form-extras.html
 * @description
 * # event form extras. Default empty, decorate it to add custom extras.
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormExtras', EventFormExtras);

/* @ngInject */
function EventFormExtras() {
  return {
    template: '',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep1', EventFormStep1Directive);

/* @ngInject */
function EventFormStep1Directive() {
  return {
    templateUrl: 'templates/event-form-step1.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep2', EventFormStep2Directive);

/* @ngInject */
function EventFormStep2Directive() {
  return {
    templateUrl: 'templates/event-form-step2.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep3', EventFormStep3Directive);

/* @ngInject */
function EventFormStep3Directive() {
  return {
    templateUrl: 'templates/event-form-step3.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep4', EventFormStep4Directive);

/* @ngInject */
function EventFormStep4Directive() {
  return {
    templateUrl: 'templates/event-form-step4.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormStep5', EventFormStep5Directive);

/* @ngInject */
function EventFormStep5Directive() {
  return {
    templateUrl: 'templates/event-form-step5.html',
    restrict: 'EA',
  };
}

/**
 * @ngdoc directive
 * @name udb.event-form.directive:udbEventFormPublish
 * @description
 * # udb event form publish directive
 */
angular
  .module('udb.event-form')
  .directive('udbEventFormPublish', EventFormPublishDirective);

/* @ngInject */
function EventFormPublishDirective() {
  return {
    templateUrl: 'templates/event-form-publish.html',
    restrict: 'EA',
    controller: 'EventFormPublishController',
    controllerAs: 'efpc'
  };
}
})();

// Source: src/event_form/http-prefix.directive.js
(function () {
'use strict';

angular
  .module('udb.event-form')
  .directive('udbHttpPrefix', HttpPrefixDirective);

function HttpPrefixDirective() {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {
      function ensureHttpPrefix(value) {
        // Need to add prefix if we don't have http:// prefix already AND we don't have part of it
        if (value && !/^(https?):\/\//i.test(value) && !isPrefixed(value)) {
          controller.$setViewValue('http://' + value);
          controller.$render();
          return 'http://' + value;
        }
        else {
          return value;
        }
      }

      function isPrefixed(value) {
        return 'http://'.indexOf(value) === 0 || 'https://'.indexOf(value) === 0;
      }

      controller.$formatters.push(ensureHttpPrefix);
      controller.$parsers.splice(0, 0, ensureHttpPrefix);
    }
  };
}
})();

// Source: src/event_form/steps/event-form-publish.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep3Controller
 * @description
 * # EventFormStep3Controller
 * Step 3 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormPublishController', EventFormPublishController);

/* @ngInject */
function EventFormPublishController(
    appConfig,
    EventFormData,
    eventCrud,
    OfferWorkflowStatus,
    $q,
    $location,
    $uibModal
) {

  var controller = this;

  controller.publish = publish;
  controller.canPublishLater = canPublishLater;
  controller.publishLater = publishLater;
  controller.preview = preview;
  controller.isDraft = isDraft;
  controller.saving = false;

  // main storage for event form.
  controller.eventFormData = EventFormData;

  var defaultPublicationDate = _.get(appConfig, 'offerEditor.defaultPublicationDate');
  controller.hasNoDefault = isNaN(Date.parse(defaultPublicationDate));
  if (!controller.hasNoDefault && isDraft) {
    controller.eventFormData.availableFrom = defaultPublicationDate;
  }

  function canPublishLater() {
    var tomorrow = moment()
      .add(1, 'days')
      .startOf('day')
      .toDate();

    var startDate = controller.eventFormData.getFirstStartDate();

    if (startDate && startDate < tomorrow) {
      return false;
    }

    return controller.hasNoDefault && isDraft(controller.eventFormData.workflowStatus);
  }

  function publish() {
    controller.saving = true;
    controller.error = '';
    eventCrud
      .publishOffer(EventFormData, controller.eventFormData.availableFrom)
      .then(function(job) {
        job.task.promise
          .then(setEventAsReadyForValidation)
          .then(redirectToDetailPage)
          .catch(function() {
            controller.error = 'Dit event kon niet gepubliceerd worden, gelieve later opnieuw te proberen.';
          });
      });
  }

  function publishLater() {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-publish-modal.html',
      controller: 'EventFormPublishModalController',
      controllerAs: 'efpmc',
      resolve: {
        eventFormData: function () {
          return controller.eventFormData;
        },
        publishEvent : function() {
          return controller.publish;
        }
      }
    });
  }

  function setEventAsReadyForValidation() {
    EventFormData.workflowStatus = OfferWorkflowStatus.READY_FOR_VALIDATION;
    return $q.resolve();
  }

  function redirectToDetailPage() {
    $location.path('/' + EventFormData.getType() + '/' + EventFormData.id + '/published');
  }

  function preview() {
    $location.path('/' + EventFormData.getType() + '/' + EventFormData.id + '/saved');
  }

  function isDraft(status) {
    return (status === OfferWorkflowStatus.DRAFT);
  }
}
EventFormPublishController.$inject = ["appConfig", "EventFormData", "eventCrud", "OfferWorkflowStatus", "$q", "$location", "$uibModal"];
})();

// Source: src/event_form/steps/event-form-step1.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep1Controller
 * @description
 * # EventFormStep1Controller
 * Step 1 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep1Controller', EventFormStep1Controller);
// .filter('groupBy', GroupByFilter);

/* @ngInject */
function EventFormStep1Controller($scope, $rootScope, EventFormData, eventCategories, placeCategories, $translate) {

  var controller = this;

  // main storage for event form.
  $scope.eventFormData = EventFormData;

  // Categories, event types, places.
  $scope.eventTypeLabels = eventCategories;
  $scope.placeLabels = placeCategories;

  $scope.canRefine = false;
  $scope.canRefineByGroups = false;
  $scope.showAllEventTypes = false;
  $scope.showAllPlaces = false;
  $scope.eventThemeLabels = [];
  $scope.eventGroupLabels = [];

  $scope.activeEventType = '';
  $scope.activeEventTypeLabel = '';
  $scope.activeTheme = '';
  $scope.activeThemeLabel = '';

  $scope.splitTypes = true;

  /**
   * Update the event type and theme picker.
   * @param {EventFormData} eventFormData
   */
  controller.updateEventTypeAndThemePicker = function (eventFormData) {
    var eventTypeId = eventFormData.getEventType().id;
    var eventThemeId = eventFormData.getTheme().id;

    var eventTypes = _.union(eventCategories, placeCategories);
    var type = _.findWhere(eventTypes, {id: eventTypeId});
    var theme;

    if (type) {
      $scope.activeEventType = type.id;
      $scope.activeEventTypeLabel = $translate.instant('offerTypes.' + type.label);
      $scope.eventThemeLabels = type.themes;
      $scope.eventGroupLabels = type.groups;

      if (type.themes) {
        theme = _.findWhere(type.themes, {id: eventThemeId});
      }

      if (type.groups) {
        var selectedGroup = _.find(type.groups, function(group) {
          return _.where(group.themes, {id: eventThemeId}).length > 0;
        });
        if (selectedGroup) {
          theme = _.findWhere(selectedGroup.themes, {id: eventThemeId});
        }
      }
    } else {
      $scope.activeEventType = '';
      $scope.activeEventTypeLabel = '';
    }

    if (theme) {
      $scope.activeTheme = theme.id;
      $scope.activeThemeLabel = $translate.instant('offerThemes.' + theme.label);
    } else {
      $scope.activeTheme = '';
      $scope.activeThemeLabel = '';
    }

    $scope.canRefine = type && !_.isEmpty(type.themes) && !theme;

    $scope.canRefineByGroups = type && !_.isEmpty(type.groups) && !theme;

  };

  /**
   * Click listener on the event type buttons.
   * Activate the selected event type.
   */
  function setEventType(eventType, isEvent) {
    // Check if previous event type was the same.
    // If so, just show the previous entered data.
    if (EventFormData.id === eventType.id) {
      return;
    }

    $scope.activeEventType = eventType.id;

    // User selected an event.
    if (isEvent) {
      EventFormData.isEvent = true;
      EventFormData.isPlace = false;
    }
    // User selected a place.
    else {

      // Reset calendar if user switched to permanent.
      if (EventFormData.calendar.calendarType !== 'permanent') {
        EventFormData.resetCalendar();
      }

      EventFormData.isEvent = false;
      EventFormData.isPlace = true;

      // Places are default permanent. Users should not see a selection.
      EventFormData.calendar.calendarType = 'permanent';
    }

    EventFormData.setEventType(eventType);

    // Keep track of changes.
    if (EventFormData.id) {
      $rootScope.$emit('eventTypeChanged', EventFormData);
    }

    controller.updateEventTypeAndThemePicker(EventFormData);

    EventFormData.showStep(2);
    EventFormData.showStep(3);
  }

  /**
   * Click listener to reset the event type. User can select a new event type.
   */
  controller.resetEventType = function () {
    EventFormData.removeType();
    controller.updateEventTypeAndThemePicker(EventFormData);
  };

  /**
   * Click listener to set the active theme.
   * @param {EventTheme} theme
   */
  function setTheme(theme) {
    // Check if previous event theme was the same.
    // If so, just show the previous entered data.
    if (EventFormData.getTheme().id === theme.id) {
      return;
    }

    EventFormData.setTheme(theme);
    EventFormData.showStep(2);
    controller.updateEventTypeAndThemePicker(EventFormData);
    controller.eventThemeChanged(EventFormData);
  }

  /**
   * Reset the active theme which in turns updates the data to render the picker and notifies other components.
   */
  controller.resetTheme = function() {
    EventFormData.removeTheme();
    controller.updateEventTypeAndThemePicker(EventFormData);
    controller.eventThemeChanged(EventFormData);
  };

  controller.eventThemeChanged = function(EventFormData) {
    if (EventFormData.id) {
      $rootScope.$emit('eventThemeChanged', EventFormData);
    }
  };

  /**
   * Click listener to toggle the event types list.
   */
  function toggleEventTypes() {
    $scope.showAllEventTypes = !$scope.showAllEventTypes;
  }

  /**
   * Click listener to toggle th places list.
   */
  function togglePlaces() {
    $scope.showAllPlaces = !$scope.showAllPlaces;
  }

  $scope.setEventType = setEventType;
  $scope.resetEventType = controller.resetEventType;
  $scope.toggleEventTypes = toggleEventTypes;
  $scope.togglePlaces = togglePlaces;
  $scope.setTheme = setTheme;
  $scope.resetTheme = controller.resetTheme;

  controller.init = function (EventFormData) {
    if (EventFormData.id) {
      controller.updateEventTypeAndThemePicker(EventFormData);
      $scope.splitTypes = false;
    }

    if (_.where($scope.eventTypeLabels, {primary: true}).length === $scope.eventTypeLabels.length) {
      $scope.showAllEventTypes = true;
    }

    if (_.where($scope.placeLabels, {primary: true}).length === $scope.placeLabels.length) {
      $scope.showAllPlaces = true;
    }
  };

  $scope.translateOfferTypes = function (type) {
    return $translate.instant('offerTypes.' + type);
  };

  $scope.translateOfferThemes = function (theme) {
    return $translate.instant('offerThemes.' + theme);
  };

  $scope.translateOfferThemesGroups = function (group) {
    return $translate.instant('offerThemesGroups.' + group);
  };

  controller.init(EventFormData);
}
EventFormStep1Controller.$inject = ["$scope", "$rootScope", "EventFormData", "eventCategories", "placeCategories", "$translate"];
})();

// Source: src/event_form/steps/event-form-step2.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep2Controller
 * @description
 * # EventFormStep2Controller
 * Step 2 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep2Controller', EventFormStep2Controller);

/* @ngInject */
function EventFormStep2Controller($scope, $rootScope, EventFormData) {
  var controller = this;

  // Scope vars.
  // main storage for event form.
  $scope.eventFormData = EventFormData;

  /**
   * Mark the major info as changed.
   */
  controller.eventTimingChanged = function() {
    if (EventFormData.id) {
      $rootScope.$emit('eventTimingChanged', EventFormData);
    }
  };

  EventFormData
    .timingChanged$
    .subscribe(controller.eventTimingChanged);
}
EventFormStep2Controller.$inject = ["$scope", "$rootScope", "EventFormData"];
})();

// Source: src/event_form/steps/event-form-step3.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} City
 * @property {string} zip
 * @property {string} name
 */

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep3Controller
 * @description
 * # EventFormStep3Controller
 * Step 3 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep3Controller', EventFormStep3Controller);

/* @ngInject */
function EventFormStep3Controller(
    $scope,
    EventFormData,
    cityAutocomplete,
    placeCategories,
    $uibModal,
    citiesBE,
    citiesNL,
    Levenshtein,
    eventCrud,
    $rootScope,
    $translate,
    jsonLDLangFilter,
    appConfig
) {

  var controller = this;

  function getEmptyLocation() {
    var emptyLocation = {
      'id' : null,
      'name': '',
      'address': {
        'addressCountry': '',
        'addressLocality': '',
        'postalCode': '',
        'streetAddress': ''
      }
    };

    return _.cloneDeep(emptyLocation);
  }

  var language = $translate.use() || 'nl';

  // Scope vars.
  // main storage for event form.
  $scope.eventFormData = EventFormData;

  $scope.categories = placeCategories;

  // Autocomplete model field for the City/Postal code.
  $scope.cityAutocompleteTextField = '';

  // Autocomplete model field for the Location.
  $scope.locationAutocompleteTextField = '';

  $scope.availableCountries = appConfig.offerEditor.countries;
  $scope.defaultCountry = _.find($scope.availableCountries, function(country) { return country.default; });
  $scope.selectedCountry = $scope.defaultCountry;

  // Autocomplete helper vars.
  $scope.searchingCities = false;
  $scope.cityAutoCompleteError = false;
  $scope.loadingPlaces = false;
  $scope.locationAutoCompleteError = false;
  $scope.locationsSearched = false;

  $scope.selectedCity = '';
  $scope.selectedLocation = undefined;
  $scope.placeStreetAddress = '';
  $scope.openPlaceModal = openPlaceModal;

  // Validation.
  $scope.showValidation = false;

  // Convenient scope variables for current controller (in multistep).
  $scope.locationsForCity = [];

  // Scope functions.

  $scope.cities = $scope.selectedCountry.code === 'BE' ? citiesBE : citiesNL;

  $scope.changeCountrySelection = changeCountrySelection;
  $scope.changeCitySelection = changeCitySelection;
  $scope.changeLocationSelection = changeLocationSelection;
  $scope.setPlaceStreetAddress = setPlaceStreetAddress;
  $scope.changePlaceStreetAddress = changePlaceStreetAddress;
  $scope.setMajorInfoChanged = setMajorInfoChanged;
  $scope.filterCities = function(value) {
    return function (city) {
      var length = value.length;
      var words = value.match(/.+/g);
      var labelMatches = words.filter(function (word) {
        return city.label.toLowerCase().indexOf(word.toLowerCase()) !== -1;
      });

      return labelMatches.length >= words.length;
    };
  };
  $scope.orderByLevenshteinDistance = function(value) {
    return function (city) {
      return new Levenshtein(value, city.label);
    };
  };

  /**
   * @param {City} city
   * @param {string} $label
   */
  controller.selectCity = function (city, $label) {

    var zipcode = city.zip,
        name = city.name;

    var newAddressInfo = {
      postalCode: zipcode,
      addressLocality: name,
      addressCountry: $scope.selectedCountry.code
    };

    if (EventFormData.isPlace) {
      var currentAddress = $scope.eventFormData.address;
      $scope.eventFormData.address = _.merge(getEmptyLocation().address, currentAddress, newAddressInfo);
    } else { //assume an event
      var newLocationInfo = {address: newAddressInfo};
      var currentLocation = $scope.eventFormData.getLocation();
      var newLocation = _.merge(getEmptyLocation(), currentLocation, newLocationInfo);
      EventFormData.setLocation(newLocation);
    }

    $scope.cityAutocompleteTextField = '';
    $scope.selectedCity = $label;
    $scope.selectedLocation = undefined;

    setMajorInfoChanged();

    controller.getLocations(city);
  };
  $scope.selectCity = controller.selectCity;

  /**
   * Change a city selection.
   */
  function changeCitySelection() {
    EventFormData.resetLocation();
    $scope.selectedCity = '';
    $scope.placeStreetAddress = '';
    $scope.cityAutocompleteTextField = '';
    $scope.locationsSearched = false;
    $scope.locationAutocompleteTextField = '';
    controller.stepUncompleted();
  }

  /**
   * Change a country selection.
   */
  function changeCountrySelection() {
    if ($scope.selectedCountry.code === 'NL') {
      $scope.cities = citiesNL;
    }
    else {
      $scope.cities = citiesBE;
    }
    changeCitySelection();
  }

  /**
   * Select location.
   * @returns {undefined}
   */
  controller.selectLocation = function ($item, $model, $label) {

    var selectedLocation = _.find($scope.locationsForCity, function (location) {
      return location.id === $model;
    });

    // Assign selection, hide the location field and show the selection.
    $scope.selectedLocation = selectedLocation;
    $scope.locationAutocompleteTextField = '';

    var location = EventFormData.getLocation();
    location.id = $model;
    location.name = $label;
    location.address = selectedLocation.address;
    EventFormData.setLocation(location);

    controller.stepCompleted();
    setMajorInfoChanged();
    $rootScope.$emit('locationSelected', location);

  };
  $scope.selectLocation = controller.selectLocation;

  /**
   * Change selected location.
   * @returns {undefined}
   */
  function changeLocationSelection() {

    // Reset only the location data of the location.
    var location = EventFormData.getLocation();
    location.id = '';
    location.name = '';
    EventFormData.setLocation(location);

    $scope.selectedLocation = false;
    $scope.locationAutocompleteTextField = '';
    $scope.locationsSearched = false;

    controller.stepUncompleted();
  }

  /**
   * Get locations for Event.
   * @returns {undefined}
   * @param {Object} city
   */
  controller.getLocations = function (city) {

    function showErrorAndReturnEmptyList () {
      $scope.locationAutoCompleteError = true;
      return [];
    }

    function updateLocationsAndReturnList (locations) {
      // Loop over all locations to check if location is translated.
      _.each(locations, function(location, key) {
        locations[key] = jsonLDLangFilter(locations[key], language, true);
      });
      $scope.locationsForCity = locations;
      return locations;
    }

    function clearLoadingState() {
      $scope.locationsSearched = false;
      $scope.loadingPlaces = false;
    }

    $scope.loadingPlaces = true;
    $scope.locationAutoCompleteError = false;

    if ($scope.selectedCountry.code === 'BE') {
      return cityAutocomplete
        .getPlacesByZipcode(city.zip, 'BE')
        .then(updateLocationsAndReturnList, showErrorAndReturnEmptyList)
        .finally(clearLoadingState);
    }
    if ($scope.selectedCountry.code === 'NL') {
      return cityAutocomplete
        .getPlacesByCity(city.label, 'NL')
        .then(updateLocationsAndReturnList, showErrorAndReturnEmptyList)
        .finally(clearLoadingState);
    }
  };

  controller.cityHasLocations = function () {
    return $scope.locationsForCity instanceof Array && $scope.locationsForCity.length > 0;
  };
  $scope.cityHasLocations = controller.cityHasLocations;

  controller.locationSearched = function () {
    $scope.locationsSearched = true;
  };
  $scope.locationSearched = controller.locationSearched;

  controller.filterCityLocations = function (filterValue) {
    return function (location) {
      var words = filterValue.match(/\w+/g).filter(function (word) {
        return word.length > 2;
      });
      var addressMatches = words.filter(function (word) {
        return location.address.streetAddress.toLowerCase().indexOf(word.toLowerCase()) !== -1;
      });
      var nameMatches = words.filter(function (word) {
        return location.name.toLowerCase().indexOf(word.toLowerCase()) !== -1;
      });

      return addressMatches.length + nameMatches.length >= words.length;
    };
  };
  $scope.filterCityLocations = controller.filterCityLocations;

  controller.orderCityLocations = function (filterValue) {
    return function (location) {
      return new Levenshtein(location, location.name + '' + location.address.streetAddress);
    };
  };
  $scope.orderCityLocations = controller.orderCityLocations;

  /**
   * Open the place modal.
   */
  function openPlaceModal() {

    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-place-modal.html',
      controller: 'EventFormPlaceModalController',
      resolve: {
        location: function () {
          return $scope.eventFormData.location;
        },
        categories: function () {
          return $scope.categories;
        },
        title: function () {
          return $scope.locationAutocompleteTextField;
        }
      }
    });

    /**
     * @param {UdbPlace} place
     */
    function setEventFormDataPlace(place) {

      // Assign the just saved place to the event form data.
      EventFormData.place = place;

      // Assign selection, hide the location field and show the selection.
      $scope.selectedCity = place.address.postalCode + ' ' + place.address.addressLocality;

      var location = {
        'id' : place.id,
        'name': place.name,
        'address': {
          'addressCountry': $scope.selectedCountry.code,
          'addressLocality': place.address.addressLocality,
          'postalCode': place.address.postalCode,
          'streetAddress': place.address.streetAddress
        }
      };
      EventFormData.setLocation(location);
      $scope.selectedLocation = angular.copy(location);

      controller.stepCompleted();
    }

    modalInstance.result
      .then(setEventFormDataPlace);
  }

  function getNumberFromStreetAddress(streetAddress) {
    return streetAddress.split(' ').pop() || '';
  }

  function validateAddress(streetAddress) {
    if (streetAddress) {
      var maximumNumberLength = 15;
      return getNumberFromStreetAddress(streetAddress).length <= maximumNumberLength;
    }
  }

  /**
   * Set the street address for a Place.
   *
   * @param {string} streetAddress
   */
  function setPlaceStreetAddress(streetAddress) {
    // Forms are automatically known in scope.
    $scope.showValidation = true;
    $scope.step3Form.street.$setValidity('invalid', true);
    if (!$scope.step3Form.$valid) {
      return;
    }

    if (!validateAddress(streetAddress)) {
      $scope.step3Form.street.$setValidity('invalid', false);
      return;
    }

    var currentAddress = EventFormData.address;
    var newAddressInfo = {
      streetAddress: streetAddress,
      postalCode: $scope.newPlacePostalCode
    };

    EventFormData.address = _.merge(getEmptyLocation().address, currentAddress, newAddressInfo);
    $scope.placeStreetAddress = streetAddress;

    controller.stepCompleted();
  }

  /**
   * Change StreetAddress
   */
  function changePlaceStreetAddress() {
    $scope.newPlaceStreetAddress = $scope.placeStreetAddress ? $scope.placeStreetAddress : '';
    $scope.placeStreetAddress = '';
    $scope.showValidation = false;
    controller.stepUncompleted();
  }

  /**
   * Mark the major info as changed.
   */
  function setMajorInfoChanged() {
    if (EventFormData.id) {
      EventFormData.majorInfoChanged = true;
    }
  }

  controller.stepCompleted = function () {
    EventFormData.showStep(4);

    if (EventFormData.id) {
      eventCrud.updateMajorInfo(EventFormData);
    }
  };

  controller.stepUncompleted = function () {
    if (!EventFormData.id) {
      EventFormData.hideStep(4);
    }
  };

  controller.init = function (EventFormData) {
    var address;

    // Set location data when the form data contains an Event with a location
    if (EventFormData.isEvent && EventFormData.location.name) {
      address = _.get(EventFormData, 'location.address');
      controller.getLocations(address.postalCode);
      if (EventFormData.location.name) {
        $scope.selectedLocation = angular.copy(EventFormData.location);
      }
    }

    // Set the address when the form contains Place address info
    if (EventFormData.isPlace && EventFormData.address.postalCode) {
      address = EventFormData.address;

      $scope.placeStreetAddress = address.streetAddress;
    }

    if (address) {
      $scope.selectedCity = address.addressLocality;
      $scope.selectedCountry = _.find($scope.availableCountries, function(country) {
        return country.code === address.addressCountry;
      });
    }
  };

  controller.init(EventFormData);
}
EventFormStep3Controller.$inject = ["$scope", "EventFormData", "cityAutocomplete", "placeCategories", "$uibModal", "citiesBE", "citiesNL", "Levenshtein", "eventCrud", "$rootScope", "$translate", "jsonLDLangFilter", "appConfig"];
})();

// Source: src/event_form/steps/event-form-step4.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep4Controller
 * @description
 * # EventFormStep4Controller
 * Step 4 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep4Controller', EventFormStep4Controller);

/* @ngInject */
function EventFormStep4Controller(
  $scope,
  EventFormData,
  searchApiSwitcher,
  appConfig,
  SearchResultViewer,
  eventCrud,
  $rootScope,
  $uibModal
) {

  var controller = this;
  var ignoreDuplicates = _.get(appConfig, 'offerEditor.ignoreDuplicates', false);

  // Scope vars.
  // main storage for event form.
  $scope.eventFormData = EventFormData;

  $scope.titleInputOptions = {updateOn: 'change blur'};

  $scope.infoMissing = false;
  $scope.duplicatesSearched = false;
  $scope.saving = false;
  $scope.error = false;

  $scope.validateEvent = validateEvent;
  $scope.saveEvent = createOffer;
  $scope.resultViewer = new SearchResultViewer();
  $scope.eventTitleChanged = eventTitleChanged;
  $scope.previewSuggestedItem = previewSuggestedItem;

  // Check if we need to show the leave warning
  window.onbeforeunload = function (event) {
    if (EventFormData.majorInfoChanged) {
      return 'Bent u zeker dat je de pagina wil verlaten? Gegevens die u hebt ingevoerd worden niet opgeslagen.';
    }
  };

  /**
   * Validate date after step 4 to enter step 5.
   */
  function validateEvent() {

    // First check if all data is correct.
    $scope.infoMissing = false;
    $scope.missingInfo = [];

    if (!EventFormData.type.id) {
      $scope.missingInfo.push('event type missing');
    }

    if (EventFormData.calendarType === 'single' && EventFormData.timestamps[0].date === '') {
      $scope.missingInfo.push('timestamp missing');
    }
    else if (EventFormData.calendarType === 'periodic' &&
      (EventFormData.startDate === '' || EventFormData.endDate === '')
    ) {
      $scope.missingInfo.push('start or end date missing');
    }
    else if (EventFormData.calendarType === '') {
      $scope.missingInfo.push('when missing');
    }

    if (EventFormData.isEvent && !EventFormData.location.id) {
      $scope.missingInfo.push('place missing for event');
    }
    else if (EventFormData.isPlace && !EventFormData.address.streetAddress) {
      $scope.missingInfo.push('address missing for place');
    }

    if (EventFormData.name === '') {
      $scope.missingInfo.push('title is missing');
    }

    if ($scope.missingInfo.length > 0) {
      $scope.infoMissing = true;
      return;
    }

    if (ignoreDuplicates) {
      createOffer();
    }
    else {
      suggestExistingOffers(EventFormData);
    }

  }

  /**
   * @param {EventFormData} formData
   */
  function suggestExistingOffers(formData) {
    $scope.saving = true;
    $scope.error = false;

    $scope.resultViewer.loading = true;
    $scope.duplicatesSearched = true;

    findDuplicates(formData).then(showDuplicates, showMajorInfoError);
  }

  /**
   * @param {PagedCollection} pagedDuplicates
   */
  function showDuplicates(pagedDuplicates) {

    // Set the results for the duplicates modal,
    if (pagedDuplicates.totalItems > 0) {
      $scope.saving = false;
      $scope.resultViewer.setResults(pagedDuplicates);
    }
    // or save the event immediately if no duplicates were found.
    else {
      createOffer();
    }
  }

  function findDuplicates(data) {
    var conditions = duplicateSearchConditions(data);

    var expressions = [];
    angular.forEach(conditions, function (value, key) {
      expressions.push(key + ':"' + value + '"');
    });

    var queryString = expressions.join(' AND ');

    return searchApiSwitcher.findOffers(queryString);
  }

  /**
   * Duplicates are searched for by identical properties:
   * - title is the same
   * - on the same location
   */
  function duplicateSearchConditions(data) {
    return searchApiSwitcher.getDuplicateSearchConditions(data);
  }

  /**
   * Save Event for the first time.
   */
  function createOffer() {

    resetMajorInfoError();

    var eventCrudPromise;
    eventCrudPromise = eventCrud.createOffer(EventFormData);

    eventCrudPromise.then(function(newEventFormData) {
      EventFormData = newEventFormData;
      EventFormData.majorInfoChanged = false;

      $scope.saving = false;
      $scope.resultViewer = new SearchResultViewer();
      $scope.titleInputOptions = {updateOn: 'change blur'};
      EventFormData.showStep(5);

    }, showMajorInfoError);

  }

  function resetMajorInfoError() {
    $scope.error = false;
    $scope.saving = true;
  }

  function showMajorInfoError() {
    // Error while saving.
    $scope.error = true;
    $scope.saving = false;
  }

  controller.eventFormSaved = function () {
    $rootScope.$emit('eventFormSaved', EventFormData);
  };

  /**
   * Notify that the title of an event has changed.
   */
  function eventTitleChanged() {
    if (EventFormData.id && EventFormData.name !== '') {
      $rootScope.$emit('eventTitleChanged', EventFormData);
    }
  }

  /**
   * Open the organizer modal.
   *
   * @param {object} item
   *  An item to preview from the suggestions in the current result viewer.
   */
  function previewSuggestedItem(item) {
    $uibModal.open({
      templateUrl: 'templates/suggestion-preview-modal.html',
      controller: 'SuggestionPreviewModalController',
      resolve: {
        selectedSuggestionId: function () {
          return item.id;
        },
        resultViewer: function () {
          return $scope.resultViewer;
        },
        suggestionType: function () {
          return EventFormData.getType();
        }
      }
    });
  }

}
EventFormStep4Controller.$inject = ["$scope", "EventFormData", "searchApiSwitcher", "appConfig", "SearchResultViewer", "eventCrud", "$rootScope", "$uibModal"];
})();

// Source: src/event_form/steps/event-form-step5.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} ContactInfoItem
 * @property {ContactInfoTypeEnum} type
 * @property {boolean} booking
 * @property {string} value
 */

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormStep5Controller
 * @description
 * # EventFormStep5Controller
 * Step 5 of the event form
 */
angular
  .module('udb.event-form')
  .controller('EventFormStep5Controller', EventFormStep5Controller);

/* @ngInject */
function EventFormStep5Controller(
    $scope,
    EventFormData,
    eventCrud,
    udbOrganizers,
    $uibModal,
    $rootScope,
    appConfig,
    udbUitpasApi,
    $translate
  ) {

  var controller = this;
  var URL_REGEXP = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/;
  /**
   * Enum for contact info types.
   * @readonly
   * @enum {string}
   */
  var ContactInfoTypeEnum = Object.freeze({
    EMAIL: 'email',
    PHONE: 'phone',
    URL: 'url'
  });

  // Scope vars.
  $scope.eventFormData = EventFormData; // main storage for event form.
  $scope.mainLanguage = EventFormData.getMainLanguage();

  // Description vars.
  $scope.description = EventFormData.getDescription($scope.mainLanguage);
  $scope.descriptionCssClass = $scope.description ? 'state-complete' : 'state-incomplete';
  $scope.savingDescription = false;
  $scope.descriptionError = false;
  $scope.originalDescription = '';

  // Organizer vars.
  $scope.organizerCssClass = EventFormData.organizer.name ? 'state-complete' : 'state-incomplete';
  $scope.organizer = '';
  $scope.emptyOrganizerAutocomplete = false;
  $scope.loadingOrganizers = false;
  $scope.organizerError = false;
  $scope.savingOrganizer = false;

  // Price info
  $scope.disablePriceInfo = _.get(appConfig.offerEditor, 'disablePriceInfo');

  // Booking & tickets vars.
  $scope.editBookingPhone = !EventFormData.bookingInfo.phone;
  $scope.editBookingEmail = !EventFormData.bookingInfo.email;
  $scope.editBookingUrl = !EventFormData.bookingInfo.url;
  $scope.bookingModel = {
    urlRequired : false,
    emailRequired : false,
    phoneRequired : false,
    url : EventFormData.bookingInfo.urlLabel ? EventFormData.bookingInfo.url : '',
    urlLabel : {},
    urlLabelCustom : '',
    phone : EventFormData.bookingInfo.phone ? EventFormData.bookingInfo.phone : '',
    email : EventFormData.bookingInfo.email ? EventFormData.bookingInfo.email : ''
  };
  $scope.newBookingModel = {};

  $scope.bookingOptions = [
    {value: 'buy_tickets', label: translateBookingInfoUrlLabels('buy_tickets')},
    {value: 'reserve_places', label: translateBookingInfoUrlLabels('reserve_places')},
    {value: 'check_availability', label: translateBookingInfoUrlLabels('check_availability')},
    {value: 'subscribe', label: translateBookingInfoUrlLabels('subscribe')}
  ];

  if (EventFormData.bookingInfo.urlLabel) {
    if (typeof EventFormData.bookingInfo.urlLabel === 'string') {
      $scope.bookingModel.urlLabel[$scope.mainLanguage] =
          _.findWhere($scope.bookingOptions,
              {label: EventFormData.bookingInfo.urlLabel}
          );
    }
    else {
      $scope.bookingModel.urlLabel[$scope.mainLanguage] =
          _.findWhere($scope.bookingOptions,
              {label: EventFormData.bookingInfo.urlLabel[$scope.mainLanguage]}
          );
    }
  }
  else {
    $scope.bookingModel.urlLabel[$scope.mainLanguage] = $scope.bookingOptions[1];
  }

  // Add urlLabel to the option list when it is not in the options list.
  // This is mostly the case when the user is editing in another language as the offer's mainLanguage.
  if (!_.find($scope.bookingOptions, $scope.bookingModel.urlLabel[$scope.mainLanguage])) {
    $scope.bookingOptions.unshift($scope.bookingModel.urlLabel[$scope.mainLanguage]);
  }

  $scope.viaWebsite =  !EventFormData.bookingInfo.url;
  $scope.viaEmail = !EventFormData.bookingInfo.email;
  $scope.viaPhone = !EventFormData.bookingInfo.phone;
  $scope.websitePreviewEnabled = false;
  $scope.bookingPeriodPreviewEnabled = false;
  $scope.bookingPeriodShowValidation = false;
  $scope.bookingInfoCssClass = 'state-incomplete';

  // Booking info vars.
  $scope.toggleBookingType = toggleBookingType;
  $scope.saveBookingInfo = saveBookingInfo;
  $scope.removeDuplicateContactBooking = removeDuplicateContactBooking;
  $scope.saveWebsitePreview = saveWebsitePreview;
  $scope.enableWebsitePreview = enableWebsitePreview;
  $scope.showBookingOption = showBookingOption;
  $scope.deleteBookingInfo = deleteBookingInfo;
  $scope.removeBookingInfo = removeBookingInfo;
  $scope.hasBookingInfo = hasBookingInfo;
  $scope.translateBookingInfoUrlLabels = translateBookingInfoUrlLabels;

  // Contactinfo vars.
  $scope.contactInfoCssClass = 'state-incomplete';
  $scope.savingContactInfo = false;
  $scope.contactInfoError = false;
  $scope.contactInfo = [];

  // Description functions.
  $scope.alterDescription = alterDescription;
  $scope.focusDescription = focusDescription;
  $scope.saveDescription = saveDescription;
  $scope.countCharacters = countCharacters;

  // Organizer functions.
  $scope.getOrganizers = getOrganizers;
  $scope.selectOrganizer = selectOrganizer;
  $scope.deleteOrganizerHandler = deleteOrganizerHandler;
  $scope.openOrganizerModal = openOrganizerModal;

  // Contact info functions.
  $scope.deleteContactInfo = deleteContactInfo;
  $scope.saveContactInfo = saveContactInfo;
  $scope.addContactInfo = addContactInfo;

  // Uitpas info
  $scope.hasTicketSales = false;
  $scope.hasUitpasError = false;

  // Image upload functions.
  $scope.openUploadImageModal = openUploadImageModal;
  $scope.removeImage = removeImage;
  $scope.editImage = editImage;
  $scope.selectMainImage = selectMainImage;
  // Init the controller for editing.
  initEditForm();

  /**
   * Alter description: used for adding and editing the description.
   */
  function alterDescription() {
    $scope.descriptionCssClass = 'state-filling';
  }

  function focusDescription () {
    $scope.descriptionInfoVisible = true;
    $scope.originalDescription = $scope.description;
  }

  /**
   * Save the description.
   */
  function saveDescription(allowEmpty) {

    if (allowEmpty) {
      $scope.description = '';
    }

    // only update description when there is one, it's not empty and it's not already saved; or when we allow empty
    var emptyAllowed = ($scope.description && $scope.description !== '') || allowEmpty;
    var notTheSame = ($scope.description !== $scope.originalDescription) || allowEmpty;
    if (emptyAllowed && notTheSame) {

      $scope.descriptionInfoVisible = false;
      $scope.savingDescription = true;
      $scope.descriptionError = false;

      EventFormData.setDescription(
        $scope.description.replace(new RegExp(String.fromCharCode(31), 'g'), ''),
        $scope.mainLanguage
      );

      var promise = eventCrud.updateDescription(EventFormData, $scope.description);
      promise.then(function() {

        $scope.savingDescription = false;
        controller.eventFormSaved();

        // Toggle correct class.
        if ($scope.description) {
          $scope.descriptionCssClass = 'state-complete';
        }
        else {
          $scope.descriptionCssClass = 'state-incomplete';
        }

      },
       // Error occured, show message.
      function() {
        $scope.savingDescription = false;
        $scope.descriptionError = true;
      });
    }
  }
  /**
   * Count characters in the description.
   */
  function countCharacters() {
    if ($scope.description) {
      return $scope.description.length;
    }
  }

  controller.eventFormSaved = function () {
    $rootScope.$emit('eventFormSaved', EventFormData);
  };

  /**
   * Auto-complete callback for organizers.
   * @param {String} value
   *  Suggest organizers based off of this value.
   *
   * @return {UdbOrganizer[]}
   */
  function getOrganizers(value) {
    function suggestExistingOrNewOrganiser (organizers) {
      $scope.emptyOrganizerAutocomplete = organizers.length <= 0;
      $scope.loadingOrganizers = false;

      return organizers;
    }

    $scope.loadingOrganizers = true;
    return udbOrganizers
      .suggestOrganizers(value)
      .then(suggestExistingOrNewOrganiser);
  }

  /**
   * Select listener on the typeahead.
   * @param {Organizer} organizer
   */
  function selectOrganizer(organizer) {
    controller.saveOrganizer(organizer);
  }

  controller.showAsyncOrganizerError = function() {
    $scope.organizerError = true;
    $scope.savingOrganizer = false;
  };

  function deleteOrganizerHandler() {
    if (EventFormData.priceInfo.length > 0) {
      udbUitpasApi.getTicketSales($scope.eventFormData.id, $scope.eventFormData.organizer)
        .then(
          function(hasTicketSales) {
            if (hasTicketSales) {
              $scope.hasTicketSales = hasTicketSales;
            }
            else {
              deleteOrganizer();
            }
          }, function() {
            $scope.hasUitpasError = true;
          });
    }
    else {
      deleteOrganizer();
    }
  }

  /**
   * Delete the selected organiser.
   */
  function deleteOrganizer() {
    function resetOrganizer() {
      controller.eventFormSaved();
      EventFormData.resetOrganizer();
      $rootScope.$emit('eventOrganizerDeleted', {});
      $scope.organizerCssClass = 'state-incomplete';
      $scope.savingOrganizer = false;
    }

    $scope.organizerError = false;
    eventCrud
      .deleteOfferOrganizer(EventFormData)
      .then(resetOrganizer, controller.showAsyncOrganizerError);
  }

  /**
   * Open the organizer modal.
   */
  function openOrganizerModal() {
    var modalInstance = $uibModal.open({
      backdrop: 'static',
      templateUrl: 'templates/event-form-organizer-modal.html',
      controller: 'EventFormOrganizerModalController',
      resolve: {
        organizerName: function () {
          return $scope.organizer;
        }
      }
    });

    function updateOrganizerInfo () {
      $scope.organizer = '';
      $scope.emptyOrganizerAutocomplete = false;
      if (EventFormData.organizer.id) {
        $scope.organizerCssClass = 'state-complete';
      }
      else {
        $scope.organizerCssClass = 'state-incomplete';
      }
    }

    modalInstance.result.then(controller.saveOrganizer, updateOrganizerInfo);
  }

  /**
   * Persist the organizer for the active event.
   * @param {Organizer} organizer
   */
  controller.saveOrganizer = function (organizer) {
    function resetOrganizerFeedback() {
      $scope.emptyOrganizerAutocomplete = false;
      $scope.organizerError = false;
      $scope.savingOrganizer = true;
      $scope.organizer = '';
    }

    function markOrganizerAsCompleted() {
      controller.eventFormSaved();
      $rootScope.$emit('eventOrganizerSelected', organizer);
      $scope.organizerCssClass = 'state-complete';
      $scope.savingOrganizer = false;
    }

    EventFormData.organizer = organizer;
    resetOrganizerFeedback();
    eventCrud
      .updateOrganizer(EventFormData)
      .then(markOrganizerAsCompleted, controller.showAsyncOrganizerError);
  };

  /**
   * Add an additional field to fill out contact info. Show the fields when none were shown before.
   */
  function addContactInfo() {
    if (_.isEmpty($scope.contactInfo)) {
      $scope.contactInfoCssClass = 'state-filling';
    }

    $scope.contactInfo.push({type: ContactInfoTypeEnum.PHONE, value: '', booking: false});
  }

  /**
   * Delete a given contact info item.
   */
  function deleteContactInfo(index) {
    $scope.contactInfo.splice(index, 1);

    if (_.isEmpty($scope.contactInfo)) {
      $scope.contactInfoCssClass = 'state-incomplete';
    }

    saveContactInfo();
  }

  /**
   * Save the contact info.
   */
  function saveContactInfo() {

    $scope.savingContactInfo = true;
    $scope.contactInfoError = false;

    // Only save with valid input.
    if ($scope.contactInfoForm.$valid) {

      EventFormData.resetContactPoint();

      _.forEach($scope.contactInfo, function (contactInfoItem) {
        if (contactInfoItem.booking) {
          toggleBookingType(contactInfoItem);
        } else {
          if (!_.isEmpty(contactInfoItem.value) && _.includes(ContactInfoTypeEnum, contactInfoItem.type)) {
            EventFormData
              .contactPoint[contactInfoItem.type]
              .push(contactInfoItem.value);
          }
        }
      });

      var promise = eventCrud.updateContactPoint(EventFormData);
      promise.then(function() {
        controller.eventFormSaved();
        if (!_.isEmpty($scope.contactInfo)) {
          $scope.contactInfoCssClass = 'state-complete';
        }
        $scope.savingContactInfo = false;
      }, function() {
        $scope.contactInfoError = true;
        $scope.savingContactInfo = false;
      });

    }
  }

  /**
   * @param {ContactInfoItem} contactInfoItem
   * @return {boolean}
   */
  function showBookingOption(contactInfoItem) {
    var bookingInfoOfSameType = _.find($scope.contactInfo, {type: contactInfoItem.type, booking: true});

    return contactInfoItem.booking || !bookingInfoOfSameType;
  }

  /**
   * @return {boolean}
   */
  function hasBookingInfo()
  {
    var bookingInfo = _.find($scope.contactInfo, {booking: true});
    return !!bookingInfo;
  }

  /**
   * Toggle the booking type and check if info should be deleted.
   *
   * @param {ContactInfoItem} contactInfoItem
   */
  function toggleBookingType(contactInfoItem) {
    var type = contactInfoItem.type,
        newValue = contactInfoItem.booking ? contactInfoItem.value : '';

    if ($scope.bookingModel[type] !== newValue) {
      $scope.bookingModel[type] = newValue;
      saveBookingInfo();
    }
  }

  /**
   * @param {string} type
   */
  function removeBookingInfo(type) {
    if (!_.includes(ContactInfoTypeEnum, type)) {
      return;
    }

    $scope.bookingModel[type] = '';
    saveBookingInfo();
  }

  /**
   * Save the website preview settings.
   */
  function saveWebsitePreview() {
    $scope.websitePreviewEnabled = false;
    EventFormData.bookingInfo.urlLabel = $scope.bookingModel.urlLabel;
    if ($scope.bookingModel.urlLabelCustom !== '') {
      EventFormData.bookingInfo.urlLabel = $scope.bookingModel.urlLabelCustom;
    }
    saveBookingInfo();
  }

  /**
   * Enable the website preview modal.
   */
  function enableWebsitePreview() {
    $scope.websitePreviewEnabled = true;
  }

  /**
   * Delete a given contact info item.
   */
  function deleteBookingInfo(element, index) {
    $scope.contactInfo[index].booking = false;
    toggleBookingType(element);

    $scope.contactInfo.splice(index, 1);

    if (_.isEmpty($scope.contactInfo)) {
      $scope.contactInfoCssClass = 'state-incomplete';
    }
  }

  function formatBookingInfoUrlLabel(urlLabel) {
    var returnValue = {};
    returnValue[$scope.mainLanguage] = urlLabel[$scope.mainLanguage].label;
    return returnValue;
  }

  /**
   * Saves the booking info
   */
  function saveBookingInfo() {
    var urlLabel = {};
    urlLabel[$scope.mainLanguage] = translateBookingInfoUrlLabels('reserve_places');

    // Make sure all default values are set.
    EventFormData.bookingInfo = angular.extend({}, {
      url : '',
      urlLabel : urlLabel,
      email : '',
      phone : '',
      availabilityStarts :
        EventFormData.bookingInfo.availabilityStarts ?
          moment(EventFormData.bookingInfo.availabilityStarts).format() :
          '',
      availabilityEnds :
        EventFormData.bookingInfo.availabilityEnds ?
          moment(EventFormData.bookingInfo.availabilityEnds).format() :
          ''
    }, $scope.bookingModel);

    EventFormData.bookingInfo.urlLabel = formatBookingInfoUrlLabel(EventFormData.bookingInfo.urlLabel);

    $scope.savingBookingInfo = true;
    $scope.bookingInfoError = false;

    var promise = eventCrud.updateBookingInfo(EventFormData);
    promise.then(function() {
      controller.eventFormSaved();
      $scope.bookingInfoCssClass = 'state-complete';
      $scope.savingBookingInfo = false;
      $scope.bookingInfoError = false;
      removeDuplicateContactBooking();
    }, function() {
      $scope.savingBookingInfo = false;
      $scope.bookingInfoError = true;
    });
  }

  function removeDuplicateContactBooking() {
    var url = $scope.bookingModel.url;
    var phone = $scope.bookingModel.phone;
    var email = $scope.bookingModel.email;

    $scope.contactInfo.some(function (element) {
      return element.value === url;
    });

    $scope.contactInfo.some(function (element) {
      return element.value === phone;
    });

    $scope.contactInfo.some(function (element) {
      return element.value === email;
    });

    saveContactInfo();
  }

  /**
   * Open the upload modal.
   */
  function openUploadImageModal() {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-image-upload.html',
      controller: 'EventFormImageUploadController'
    });
  }

  /**
   * Open the modal to edit an image of the item.
   *
   * @param {MediaObject} image
   *    The media object of the image to edit.
   */
  function editImage(image) {
    $uibModal.open({
      templateUrl: 'templates/event-form-image-edit.html',
      controller: 'EventFormImageEditController',
      resolve: {
        mediaObject: function () {
          return image;
        }
      }
    });
  }

  /**
   * Open the modal to remove an image.
   *
   * @param {MediaObject} image
   *    The media object of the image to remove from the item.
   */
  function removeImage(image) {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-image-remove.html',
      controller: 'EventFormImageRemoveController',
      resolve: {
        image: function () {
          return image;
        }
      }
    });
  }

  /**
   * Select the main image for an item.
   *
   * @param {MediaObject} image
   *    The media object of the image to select as the main image.
   */
  function selectMainImage(image) {
    function updateImageOrder() {
      EventFormData.selectMainImage(image);
    }

    eventCrud
      .selectMainImage(EventFormData, image)
      .then(updateImageOrder);
  }

  /**
   * Init this step for editing.
   */
  function initEditForm() {
    $scope.contactInfo = _.flatten(
      _.map(EventFormData.contactPoint, function (contactInfo, type) {
        return _.contains(ContactInfoTypeEnum, type) ? _.map(contactInfo, function (contactInfoItem) {
          return {type: type, value: contactInfoItem, booking: false};
        }) : [];
      })
    );

    // III-963 put booking items into the contactInfo array
    if (EventFormData.bookingInfo.url) {
      $scope.contactInfo.push({type: 'url', value: EventFormData.bookingInfo.url, booking: true});
    }

    if (EventFormData.bookingInfo.phone) {
      $scope.contactInfo.push({type: 'phone', value: EventFormData.bookingInfo.phone, booking: true});
    }

    if (EventFormData.bookingInfo.email) {
      $scope.contactInfo.push({type: 'email', value: EventFormData.bookingInfo.email, booking: true});
    }

    // Set correct css class for contact info.
    if ($scope.contactInfo.length > 0) {
      $scope.contactInfoCssClass = 'state-complete';
    }

    if (EventFormData.priceInfo) {
      $scope.price = EventFormData.priceInfo;
      $scope.priceCssClass = 'state-complete';
    }

  }

  function translateBookingInfoUrlLabels(label) {
    return $translate.instant('eventForm.step5.' + label);
  }

}
EventFormStep5Controller.$inject = ["$scope", "EventFormData", "eventCrud", "udbOrganizers", "$uibModal", "$rootScope", "appConfig", "udbUitpasApi", "$translate"];
})();

// Source: src/export/event-export-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.EventExportJob
 * @description
 * # BaseJob
 * This Is the factory that creates an event export job
 */
angular
  .module('udb.entry')
  .factory('EventExportJob', EventExportJobFactory);

/* @ngInject */
function EventExportJobFactory(BaseJob, JobStates, ExportFormats) {

  /**
   * @class EventExportJob
   * @constructor
   * @param   {string}    commandId
   * @param   {number}    eventCount
   * @param   {string}    format
   * @param   {Object}    details
   */
  var EventExportJob = function (commandId, eventCount, format, details) {
    BaseJob.call(this, commandId);
    this.exportUrl = '';
    this.eventCount = eventCount;
    this.format = format;
    this.extension = _.find(ExportFormats, {type: format}).extension;
    this.details = details;
  };

  EventExportJob.prototype = Object.create(BaseJob.prototype);
  EventExportJob.prototype.constructor = EventExportJob;

  EventExportJob.prototype.getTemplateName = function () {
    var templateName;

    switch (this.state) {
      case JobStates.FINISHED:
        templateName = 'export-job';
        break;
      case JobStates.FAILED:
        templateName = 'failed-job';
        break;
      default:
        templateName = 'base-job';
    }

    return templateName;
  };

  EventExportJob.prototype.getDescription = function () {
    var description = '';

    if (this.state === JobStates.FAILED) {
      description = 'Exporteren van evenementen mislukt';
    } else {
      description = 'Document .' + this.extension + ' met ' + this.eventCount + ' evenementen';
    }

    return description;
  };

  EventExportJob.prototype.info = function (jobData) {
    if (jobData.location) {
      this.exportUrl = jobData.location;
    }
  };

  EventExportJob.prototype.getTaskCount = function () {
    return this.eventCount;
  };

  return (EventExportJob);
}
EventExportJobFactory.$inject = ["BaseJob", "JobStates", "ExportFormats"];
})();

// Source: src/export/event-export.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.export.controller:EventExportController
 * @description
 * # EventExportController
 * Controller of the udb.export
 */
angular
  .module('udb.export')
  .controller('EventExportController', EventExportController);

/* @ngInject */
function EventExportController($uibModalInstance, eventExporter, ExportFormats, udbApi, appConfig) {

  var exporter = this;

  exporter.exportLogoUrl = appConfig.exportLogoUrl;

  exporter.dayByDay = false;

  exporter.eventProperties = [
    {name: 'name', include: true, sortable: false, excludable: false},
    {name: 'description', include: false, sortable: false, excludable: true},
    {name: 'labels', include: false, sortable: false, excludable: true},
    {name: 'calendarSummary', include: true, sortable: false, excludable: false},
    {name: 'image', include: false, sortable: false, excludable: true},
    {name: 'location', include: true, sortable: false, excludable: false},
    {name: 'address', include: true, sortable: false, excludable: true},
    {name: 'organizer', include: false, sortable: false, excludable: true},
    {name: 'priceInfo', include: false, sortable: false, excludable: true},
    {name: 'kansentarief', include: false, sortable: false, excludable: true, format: ExportFormats.OOXML},
    {name: 'contactPoint', include: false, sortable: false, excludable: true},
    {name: 'bookingInfo', include: false, sortable: false, excludable: true},
    {name: 'creator', include: false, sortable: false, excludable: true},
    {name: 'terms.theme', include: true, sortable: false, excludable: true},
    {name: 'terms.eventtype', include: true, sortable: false, excludable: true},
    {name: 'created', include: false, sortable: false, excludable: true},
    {name: 'modified', include: false, sortable: false, excludable: true},
    {name: 'available', include: false, sortable: false, excludable: true},
    {name: 'endDate', include: false, sortable: false, excludable: true},
    {name: 'startDate', include: false, sortable: false, excludable: true},
    {name: 'calendarType', include: false, sortable: false, excludable: true},
    {name: 'sameAs', include: false, sortable: false, excludable: true},
    {name: 'typicalAgeRange', include: false, sortable: false, excludable: true},
    {name: 'language', include: false, sortable: false, excludable: true},
    {name: 'audience', include: false, sortable: false, excludable: true, format: ExportFormats.OOXML}
  ];

  exporter.exportFormats = _.map(ExportFormats);

  exporter.brands = appConfig.exportBrands;
  exporter.restrictedBrands = appConfig.restrictedExportBrands;

  udbApi.getMyRoles().then(function(roles) {
    angular.forEach(roles, function(value, key) {
      exporter.brands = exporter.brands.concat(_.where(exporter.restrictedBrands, {role : roles[key].uuid}));
    });
  });

  exporter.customizations = {
    brand: exporter.brands[0].name,
    logo: exporter.exportLogoUrl + exporter.brands[0].logo,
    title: '',
    subtitle: '',
    footer: '',
    publisher: ''
  };

  /**
   * A map of all the possible export steps.
   * You can add a callback to its incomplete property which will be used to check if a step is completed.
   */
  exporter.exportSteps = {
    format: {
      name: 'format',
      incomplete: function () {
        var format = exporter.format,
            isCustomizable = !!_.find(exporter.exportFormats, {type: format, customizable: true});

        if (isCustomizable) {
          exporter.steps = [
            exporter.exportSteps.format,
            exporter.exportSteps.customize,
            exporter.exportSteps.confirm
          ];
        } else {
          exporter.steps = [
            exporter.exportSteps.format,
            exporter.exportSteps.filter,
            exporter.exportSteps.confirm
          ];
        }

        return !format;
      }
    },
    customize: {
      name: 'customize',
      incomplete: function () {
        return !exporter.customizations.brand || !exporter.customizations.title;
      }
    },
    filter: {
      name: 'filter',
      incomplete: function () {
        return !_.find(exporter.eventProperties, function (property) {
          return property.include === true;
        });
      }
    },
    confirm: {
      name: 'confirm'
    }
  };

  /**
   * This is a list of steps that the user has to navigate through.
   */
  exporter.steps = [
    exporter.exportSteps.format,
    exporter.exportSteps.confirm
  ];

  var activeStep = 0;
  exporter.nextStep = function () {
    if (exporter.isStepCompleted()) {
      setActiveStep(activeStep + 1);
    }
    else {
      exporter.hasErrors = true;
    }
  };

  exporter.previousStep = function () {
    setActiveStep(activeStep - 1);
  };

  exporter.isStepCompleted = function () {

    if (activeStep === -1) {
      return true;
    }

    var incompleteCheck = exporter.steps[activeStep].incomplete;
    return ((typeof incompleteCheck === 'undefined') || (typeof incompleteCheck === 'function' && !incompleteCheck()));
  };

  function setActiveStep(stepIndex) {
    if (stepIndex < 0) {
      activeStep = 0;
    } else if (stepIndex > exporter.steps.length) {
      activeStep = exporter.steps.length;
    } else {
      activeStep = stepIndex;
    }
  }

  exporter.isOnFirstStep = function () {
    return activeStep === 0;
  };

  exporter.getActiveStepName = function () {

    if (activeStep === -1) {
      return 'finished';
    }

    return exporter.steps[activeStep].name;
  };

  exporter.onLastStep = function () {
    return activeStep >= (exporter.steps.length - 1);
  };

  exporter.export = function () {

    var exportFormat = _.find(exporter.exportFormats, {type: exporter.format}),
        isCustomized = exportFormat && exportFormat.customizable === true,
        includedProperties,
        customizations;

    if (isCustomized) {
      customizations = exporter.customizations;
      customizations.logo = exporter.exportLogoUrl + exporter.selectedBrand.logo;
      customizations.brand = exporter.selectedBrand.name;
      includedProperties = [];
    } else {
      customizations = {};
      includedProperties = _.pluck(_.filter(exporter.eventProperties, 'include'), 'name');
    }

    eventExporter.export(exporter.format, exporter.email, includedProperties, exporter.dayByDay, customizations);
    activeStep = -1;
  };

  exporter.format = exporter.exportFormats[0].type;
  exporter.email = '';

  exporter.close = function () {
    $uibModalInstance.dismiss('cancel');
  };

  exporter.eventCount = eventExporter.activeExport.eventCount;
}
EventExportController.$inject = ["$uibModalInstance", "eventExporter", "ExportFormats", "udbApi", "appConfig"];
})();

// Source: src/export/event-exporter.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.entry.eventExporter
 * @description
 * # eventExporter
 * Event Exporter Service
 */
angular
  .module('udb.export')
  .service('eventExporter', eventExporter);

/* @ngInject */
function eventExporter(jobLogger, udbApi, EventExportJob, $cookies) {

  var ex = this; // jshint ignore:line

  ex.activeExport = {
    query: {},
    eventCount: 0,
    selection: []
  };

  /**
   * Send the active export job to the server
   *
   * @param {'json'|'csv'}  format
   * @param {string}        email
   * @param {string[]}      properties
   * @param {boolean}       perDay
   * @param {Object}        customizations
   *
   * @return {object}
   */
  ex.export = function (format, email, properties, perDay, customizations) {
    var queryString = ex.activeExport.query.queryString,
        selection = ex.activeExport.selection || [],
        eventCount = ex.activeExport.eventCount,
        brand = customizations.brand || '',
        details = null,
        user = $cookies.getObject('user');

    var jobPromise = udbApi.exportEvents(queryString, email, format, properties, perDay, selection, customizations);
    details = {
        format : format,
        user : user.id,
        brand : brand,
        queryString : queryString
      };

    jobPromise.success(function (jobData) {
      var job = new EventExportJob(jobData.commandId, eventCount, format, details);
      jobLogger.addJob(job);
      job.start();
    });

    return jobPromise;
  };
}
eventExporter.$inject = ["jobLogger", "udbApi", "EventExportJob", "$cookies"];
})();

// Source: src/export/export-formats.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc constant
 * @name udb.export.ExportFormats
 * @description
 * # ExportFormats
 * Event export formats
 */
angular
  .module('udb.export')
  .constant('ExportFormats',
  /**
   * Enum for export formats
   * @readonly
   * @enum {string}
   */
  {
    OOXML: {
      type: 'ooxml',
      extension: 'xlsx',
      label: 'Office Open XML (Excel)',
      description: 'Het standaard formaat van Excel vanaf Microsoft Office 2007.'
    },
    PDF: {
      type: 'pdf',
      label: 'Als PDF',
      extension: 'pdf',
      description: 'Druk snel en eenvoudig items uit de UiTdatabank af. Kies een Vlieg, UiT-, of UiTPAS-sjabloon.',
      customizable: true
    },
    JSON: {
      type: 'json',
      label: 'Als json',
      extension: 'json',
      description: 'Exporteren naar event-ld om de informatie voor ontwikkelaars beschikbaar te maken.'
    }
  });
})();

// Source: src/export/export-modal-buttons.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.export.directive:udbExportModalButtons
 * @description
 * # udbExportModalButtons
 */
angular
  .module('udb.export')
  .directive('udbExportModalButtons', udbExportModalButtons);

/* @ngInject */
function udbExportModalButtons() {
  return {
    templateUrl: 'templates/export-modal-buttons.directive.html',
    restrict: 'E'
  };
}
})();

// Source: src/management/components/query-search-bar.component.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.search.directive:udbSearchBar
 * @description
 * # udbQuerySearchBar
 */
angular
  .module('udb.management')
  .component('udbQuerySearchBar', {
    templateUrl: 'templates/query-search-bar.html',
    controller: QuerySearchBarComponent,
    controllerAs: 'qsb',
    bindings: {
      onChange: '&',
      searchLabel: '@'
    }
  });

/* @ngInject */
function QuerySearchBarComponent() {
  var qsb = this;

  qsb.queryString = '';
  qsb.find = find;

  /**
   * Search with a given query string and update the search bar or use the one currently displayed in the search bar
   *
   * @param {String} [queryString]
   */
  function find(queryString) {
    var query = typeof queryString !== 'undefined' ? queryString : qsb.queryString;

    qsb.queryString = query;
    qsb.onChange({query: query});
  }
}
})();

// Source: src/management/directives/form-group.directive.js
(function () {
'use strict';

angular
  .module('udb.management')
  .directive('udbFormGroup', FormGroupDirective);

function FormGroupDirective() {
  return {
    restrict: 'A',
    require: '^form',
    link: function (scope, element, attributes, formController) {
      var inputElement = element[0].querySelector('[name]');
      var field = angular.element(inputElement);
      var fieldName = field.attr('name');

      field.bind('blur', function () {
        var isInvalid = formController[fieldName].$invalid;
        element
          .toggleClass('has-error', isInvalid)
          .toggleClass('has-success', !isInvalid);
      });
    }
  };
}
})();

// Source: src/management/labels/label-creator.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:LabelCreatorController
 * @description
 * # LabelCreatorController
 */
angular
  .module('udb.management.labels')
  .controller('LabelCreatorController', LabelCreatorController);

/** @ngInject */
function LabelCreatorController(LabelManager, $uibModal, $state) {
  var creator = this;
  creator.creating = false;
  creator.create = create;
  creator.label = {
    name: '',
    isPrivate: false,
    isVisible: true
  };

  function create() {
    function goToOverview(jobInfo) {
      $state.go('split.manageLabels.list');
    }

    creator.creating = true;
    LabelManager
      .create(creator.label.name, creator.label.isVisible, creator.label.isPrivate)
      .then(goToOverview, showProblem)
      .finally(function () {
        creator.creating = false;
      });
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return problem.title + ' ' + problem.detail;
          }
        }
      }
    );
  }
}
LabelCreatorController.$inject = ["LabelManager", "$uibModal", "$state"];
})();

// Source: src/management/labels/label-editor.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:LabelEditorController
 * @description
 * # LabelEditorController
 */
angular
  .module('udb.management.labels')
  .controller('LabelEditorController', LabelEditorController);

/** @ngInject */
function LabelEditorController(LabelManager, $uibModal, $stateParams, $q) {
  var editor = this;
  editor.updateVisibility = updateVisibility;
  editor.updatePrivacy = updatePrivacy;
  editor.saving = false;
  editor.renaming = false;
  editor.save = save;

  function rename() {
    function showRenamedLabel(jobInfo) {
      loadLabel(jobInfo.labelId);
    }

    editor.renaming = true;
    LabelManager
      .copy(editor.label)
      .then(showRenamedLabel, showProblem)
      .finally(function () {
        editor.renaming = false;
      });
  }

  function save() {
    editor.saving = true;

    var promisses = [];
    var checkRenaming = editor.originalLabel.name !== editor.label.name;

    if (checkRenaming) {
      rename();
    }

    else {
      if (editor.originalLabel.isVisible !== editor.label.isVisible) {
        promisses.push(updateVisibility());
      }

      if (editor.originalLabel.isPrivate !== editor.label.isPrivate) {
        promisses.push(updatePrivacy());
      }

      $q.all(promisses).finally(function() {
          editor.saving = false;
        }).catch(showProblem);
    }
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    loadLabel(editor.label.uuid);
    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return problem.title + ' ' + problem.detail;
          }
        }
      }
    );
  }

  function loadLabelFromParams() {
    var id = $stateParams.id;
    loadLabel(id);
  }

  /**
   *
   * @param {Label} label
   */
  function showLabel(label) {
    editor.label = label;
    getVisibility(label);
    getPrivacy(label);
    editor.originalLabel = _.cloneDeep(editor.label);
  }

  function loadLabel(id) {
    editor.loadingError = false;
    editor.label = false;
    LabelManager
      .get(id)
      .then(showLabel, showLoadingError);
  }

  function getVisibility(label) {
    if (label.visibility === 'visible') {
      label.isVisible = true;
    }
    else {
      label.isVisible = false;
    }

    return label;
  }

  function getPrivacy(label) {
    if (label.privacy === 'public') {
      label.isPrivate = false;
    }
    else {
      label.isPrivate = true;
    }

    return label;
  }

  function showLoadingError () {
    editor.loadingError = 'Label niet gevonden!';
  }

  function updateVisibility () {
    var isVisible = editor.label.isVisible;

    return isVisible ? LabelManager.makeVisible(editor.label) : LabelManager.makeInvisible(editor.label);
  }

  function updatePrivacy () {
    var isPrivate = editor.label.isPrivate;

    return isPrivate ? LabelManager.makePrivate(editor.label) : LabelManager.makePublic(editor.label);
  }

  loadLabelFromParams();
}
LabelEditorController.$inject = ["LabelManager", "$uibModal", "$stateParams", "$q"];
})();

// Source: src/management/labels/label-manager.service.js
(function () {
'use strict';

/**
 * @typedef {Object} Label
 * @property {string}   id
 * @property {string}   name
 * @property {boolean}  isVisible
 * @property {boolean}  isPrivate
 */

/**
 * @ngdoc service
 * @name udb.management.labels
 * @description
 * # Label Manager
 * This service allows you to lookup labels and perform actions on them.
 */
angular
  .module('udb.management.labels')
  .service('LabelManager', LabelManager);

/* @ngInject */
function LabelManager(udbApi, jobLogger, BaseJob, $q) {
  var service = this;

  /**
   * @param {string} query
   * @param {int} limit
   * @param {int} start
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(query, limit, start) {
    return udbApi.findLabels(query, limit, start);
  };

  /**
   * @param {string|uuid} labelIdentifier
   *  The name or uuid of a label.
   * @return {Promise.<Label>}
   */
  service.get = function(labelIdentifier) {
    return udbApi.getLabelById(labelIdentifier);
  };

  /**
   * @param {string} name
   * @param {boolean} isVisible
   * @param {boolean} isPrivate
   *
   * @return {Promise.<BaseJob>}
   */
  service.create = function (name, isVisible, isPrivate) {
    return udbApi
      .createLabel(name, isVisible, isPrivate)
      .then(createNewLabelJob);
  };

  /**
   * @param {Label} label
   * @return {Promise.<BaseJob>}
   */
  service.copy = function (label) {
    return udbApi
      .createLabel(label.name, label.isVisible, label.isPrivate, label.uuid)
      .then(createNewLabelJob);
  };

  /**
   * @param {Label} label
   * @return {Promise.<BaseJob>}
   */
  service.delete = function (label) {
    return udbApi
      .deleteLabel(label.uuid)
      .then(logLabelJob);
  };

  /**
   * @param {Label} label
   * @return {Promise.<BaseJob>}
   */
  service.makeInvisible = function (label) {
    return udbApi
      .updateLabel(label.uuid, 'MakeInvisible')
      .then(logLabelJob);
  };

  /**
   * @param {Label} label
   * @return {Promise.<BaseJob>}
   */
  service.makeVisible = function (label) {
    return udbApi
      .updateLabel(label.uuid, 'MakeVisible')
      .then(logLabelJob);
  };

  /**
   *
   * @param {Label} label
   * @return {Promise.<BaseJob>}
   */
  service.makePrivate = function (label) {
    return udbApi
      .updateLabel(label.uuid, 'MakePrivate')
      .then(logLabelJob);
  };

  /**
   * @param {Label} label
   * @return {Promise.<BaseJob>}
   */
  service.makePublic = function (label) {
    return udbApi
      .updateLabel(label.uuid, 'MakePublic')
      .then(logLabelJob);
  };

  /**
   * @param {Object} commandInfo
   * @return {Promise.<BaseJob>}
   */
  function logLabelJob(commandInfo) {
    var job = new BaseJob(commandInfo.commandId);
    jobLogger.addJob(job);

    return $q.resolve(job);
  }

  /**
   * @param {Object} commandInfo
   * @return {Promise.<BaseJob>}
   */
  function createNewLabelJob(commandInfo) {
    var job = new BaseJob(commandInfo.commandId);
    job.labelId = commandInfo.uuid;
    jobLogger.addJob(job);

    return $q.resolve(job);
  }
}
LabelManager.$inject = ["udbApi", "jobLogger", "BaseJob", "$q"];
})();

// Source: src/management/labels/labels-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:LabelsListController
 * @description
 * # LabelsListController
 */
angular
  .module('udb.management.labels')
  .controller('LabelsListController', LabelsListController);

/* @ngInject */
function LabelsListController(SearchResultGenerator, rx, $scope, LabelManager) {
  var llc = this;

  var itemsPerPage = 10;
  var minQueryLength = 3;
  var query$ = rx.createObservableFunction(llc, 'queryChanged');
  var filteredQuery$ = query$.filter(ignoreShortQueries);
  var page$ = rx.createObservableFunction(llc, 'pageChanged');
  var searchResultGenerator = new SearchResultGenerator(LabelManager, filteredQuery$, page$, itemsPerPage);
  var searchResult$ = searchResultGenerator.getSearchResult$();

  /**
   * @param {string} query
   * @return {boolean}
   */
  function ignoreShortQueries(query) {
    if (llc.query === '') {
      return true;
    }
    else {
      return query.length >= minQueryLength;
    }
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    llc.problem = problem;
  }

  function clearProblem()
  {
    llc.problem = false;
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      llc.searchResult = {};
    } else {
      clearProblem();
      llc.searchResult = searchResult;
    }

    llc.loading = false;
  }

  llc.loading = false;
  llc.query = '';
  llc.page = 0;
  llc.minQueryLength = minQueryLength;

  query$
    .safeApply($scope, function (query) {
      llc.query = query;
    })
    .subscribe();

  searchResult$
    .safeApply($scope, showSearchResult)
    .subscribe();

  filteredQuery$
    .merge(page$)
    .safeApply($scope, function () {
      llc.loading = true;
    })
    .subscribe();
}
LabelsListController.$inject = ["SearchResultGenerator", "rx", "$scope", "LabelManager"];
})();

// Source: src/management/labels/semicolon-label-check.directive.js
(function () {
'use strict';

angular
  .module('udb.management.labels')
  .directive('udbSemicolonLabelCheck', SemicolonLabelCheckDirective);

/** @ngInject */
function SemicolonLabelCheckDirective($q) {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {

      function hasNoSemicolons(name) {
        return name === undefined || (name.indexOf(';') === -1);
      }

      controller.$validators.semicolonLabel = hasNoSemicolons;
    }
  };
}
SemicolonLabelCheckDirective.$inject = ["$q"];
})();

// Source: src/management/labels/unique-label.directive.js
(function () {
'use strict';

angular
  .module('udb.management.labels')
  .directive('udbUniqueLabel', UniqueLabelDirective);

/** @ngInject */
function UniqueLabelDirective(LabelManager, $q) {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {
      function isUnique(labelName) {
        if (controller.$isEmpty(labelName)) {
          return $q.when();
        }

        var deferredUniqueCheck = $q.defer();

        LabelManager
          .get(labelName)
          .then(deferredUniqueCheck.reject, deferredUniqueCheck.resolve);

        return deferredUniqueCheck.promise;
      }

      controller.$asyncValidators.uniqueLabel = isUnique;
    }
  };
}
UniqueLabelDirective.$inject = ["LabelManager", "$q"];
})();

// Source: src/management/list-item-defaults.factory.js
(function () {
'use strict';

/**
 * @typedef {Object} ManagementListItem
 * @property {string} name
 * @property {RolePermission} permission
 * @property {number} notificationCount
 * @property {number} index
 * @property {string} sref
 * @property {string} icon
 */

/**
 * @ngdoc service
 * @name udb.management.listItemDefaults
 * @description
 * # Management list item defaults
 * These are the defaut values for the list items you can show in the app side bar.
 */
angular
  .module('udb.management')
  .factory('managementListItemDefaults', listItemDefaults);

/**
 * @ngInject
 * @return {ManagementListItem[]}
 */
function listItemDefaults(RolePermission) {
  return [
    {
      name: 'Valideren',
      permission: RolePermission.AANBOD_MODEREREN,
      notificationCount: 0,
      index: 1,
      sref: 'management.moderation.list',
      icon: 'fa-flag'
    },
    {
      name: 'Gebruikers',
      permission: RolePermission.GEBRUIKERS_BEHEREN,
      notificationCount: 0,
      index: 2,
      sref: 'management.users.list',
      icon: 'fa-user'
    },
    {
      name: 'Rollen',
      permission: RolePermission.GEBRUIKERS_BEHEREN,
      notificationCount: 0,
      index: 3,
      sref: 'split.manageRoles.list',
      icon: 'fa-users'
    },
    {
      name: 'Labels',
      permission: RolePermission.LABELS_BEHEREN,
      notificationCount: 0,
      index: 4,
      sref: 'split.manageLabels.list',
      icon: 'fa-tag'
    },
    {
      name: 'Organisaties',
      permission: RolePermission.ORGANISATIES_BEHEREN,
      notificationCount: 0,
      index: 5,
      sref: 'management.organizers.search',
      icon: 'fa-slideshare'
    }
  ];
}
listItemDefaults.$inject = ["RolePermission"];
})();

// Source: src/management/list-items.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.management.listItems
 * @description
 * # Management list items
 * Return the management list items to show in the sidebar as  a promise.
 */
angular
  .module('udb.management')
  .factory('managementListItems', listItems);

/**
 * @ngInject
 * @return {Promise.<ManagementListItem[]>}
 */
function listItems(
  RolePermission,
  authorizationService,
  ModerationService,
  $q,
  managementListItemDefaults
) {
  var globalPermissionListItems = authorizationService
    .getPermissions()
    .then(generateListItems);

  var moderationListItems = ModerationService
    .getMyRoles()
    .then(generateModerationListItems);

  return $q
    .all([globalPermissionListItems, moderationListItems])
    .then(_.flatten);

  /**
   * @param {Role[]} roles
   * @return {number}
   */
  function countOffersWaitingForValidation(roles) {
    var query = '';

    _.forEach(roles, function(role) {
      if (role.constraint) {
        query += (query ? ' OR ' : '') + role.constraint;
      }
    });
    query = (query ? '(' + query + ')' : '');
    return ModerationService
      .find(query, 10, 0)
      .then(function(searchResult) {
        return searchResult.totalItems;
      });
  }

  /**
   *
   * @param {number} waitingOfferCount
   * @return {ManagementListItem}
   */
  function generateModerationListItem(waitingOfferCount) {
    var defaultModerationListItem = _.find(
      managementListItemDefaults,
      {permission: RolePermission.AANBOD_MODEREREN}
    );

    var moderationListItem = angular.copy(defaultModerationListItem);
    moderationListItem.notificationCount = waitingOfferCount;

    return moderationListItem;
  }

  /**
   * @param {Role[]} userRoles
   * @return {Promise.<ManagementListItem[]>}
   */
  function generateModerationListItems(userRoles) {
    var deferredListItems = $q.defer();

    var moderationRoles = _.filter(userRoles, function(role) {
      return _.includes(role.permissions, RolePermission.AANBOD_MODEREREN);
    });

    if (moderationRoles.length > 0) {
      countOffersWaitingForValidation(moderationRoles)
        .then(generateModerationListItem)
        .then(function(moderationListItem) {
          deferredListItems.resolve([moderationListItem]);
        });
    } else {
      deferredListItems.resolve([]);
    }

    return deferredListItems.promise;
  }

  /**
   * @param {RolePermission[]} userPermissions
   * @return {Promise.<ManagementListItem[]>}
   */
  function generateListItems(userPermissions) {
    var globalUserPermissions = _.without(userPermissions, RolePermission.AANBOD_MODEREREN);

    var listItems = _.filter(managementListItemDefaults, function (listItem) {
      return _.includes(globalUserPermissions, listItem.permission);
    });

    return $q.resolve(listItems);
  }
}
listItems.$inject = ["RolePermission", "authorizationService", "ModerationService", "$q", "managementListItemDefaults"];
})();

// Source: src/management/moderation/components/moderation-offer/moderation-offer.component.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.management.moderation.directive:udbModerationOffer
 * @description
 * # udbModerationOffer
 */
angular
  .module('udb.management.moderation')
  .component('udbModerationOffer', {
    templateUrl: 'templates/moderation-offer.html',
    controller: ModerationOfferComponent,
    controllerAs: 'moc',
    bindings: {
      continue: '@',
      offerId: '@',
      offerType: '@'
    }
  });

/* @ngInject */
function ModerationOfferComponent(ModerationService, jsonLDLangFilter, OfferWorkflowStatus, $uibModal) {
  var moc = this;
  var defaultLanguage = 'nl';

  moc.loading = true;
  moc.offer = {};
  moc.sendingJob = false;
  moc.error = false;

  moc.isReadyForValidation = isReadyForValidation;
  moc.isApproved = isApproved;
  moc.isRejected = isRejected;
  moc.approve = approve;
  moc.askForRejectionReasons = askForRejectionReasons;
  moc.continueValidation = continueValidation;

  // fetch offer
  ModerationService
    .getModerationOffer(moc.offerId)
    .then(function(offer) {
      offer.updateTranslationState();
      moc.offer = jsonLDLangFilter(offer, defaultLanguage);
    })
    .catch(showLoadingError)
    .finally(function() {
      moc.loading = false;
    });

  function showLoadingError(problem) {
    showProblem(problem || {title:'Dit aanbod kon niet geladen worden.'});
  }

  function continueValidation() {
    return moc.continue === 'true';
  }

  function isReadyForValidation() {
    return moc.offer.workflowStatus === OfferWorkflowStatus.READY_FOR_VALIDATION;
  }

  function isApproved() {
    return moc.offer.workflowStatus === OfferWorkflowStatus.APPROVED;
  }

  function isRejected() {
    return moc.offer.workflowStatus === OfferWorkflowStatus.REJECTED;
  }

  function approve() {
    moc.sendingJob = true;
    moc.error = false;
    ModerationService
      .approve(moc.offer)
      .then(function() {
        moc.offer.workflowStatus = OfferWorkflowStatus.APPROVED;
      })
      .catch(showProblem)
      .finally(function() {
        moc.sendingJob = false;
      });
  }

  function askForRejectionReasons() {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/reject-offer-confirm-modal.html',
      controller: 'RejectOfferConfirmModalCtrl'
    });

    modalInstance.result.then(reject);
  }

  /**
   * @param {string} reason
   *  DUPLICATE
   *  INAPPROPRIATE
   *  or a custom reason
   */
  function reject(reason) {
    if (reason === 'DUPLICATE') {
      flagAsDuplicate();
    } else if (reason === 'INAPPROPRIATE') {
      flagAsInappropriate();
    } else {
      rejectWithReason(reason);
    }
  }

  /**
   * an offer can be rejected without a reason added.
   */
  function rejectWithReason(reason) {
    moc.sendingJob = true;
    moc.error = false;
    ModerationService
      .reject(moc.offer, reason)
      .then(function() {
        moc.offer.workflowStatus = OfferWorkflowStatus.REJECTED;
      })
      .catch(showProblem)
      .finally(function() {
        moc.sendingJob = false;
      });
  }

  function flagAsDuplicate() {
    moc.sendingJob = true;
    moc.error = false;
    ModerationService
      .flagAsDuplicate(moc.offer)
      .then(function() {
        moc.offer.workflowStatus = OfferWorkflowStatus.REJECTED;
      })
      .catch(showProblem)
      .finally(function() {
        moc.sendingJob = false;
      });
  }

  function flagAsInappropriate() {
    moc.sendingJob = true;
    moc.error = false;
    ModerationService
      .flagAsInappropriate(moc.offer)
      .then(function() {
        moc.offer.workflowStatus = OfferWorkflowStatus.REJECTED;
      })
      .catch(showProblem)
      .finally(function() {
        moc.sendingJob = false;
      });
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    moc.error = problem.title + (problem.detail ? ' ' + problem.detail : '');
  }
}
ModerationOfferComponent.$inject = ["ModerationService", "jsonLDLangFilter", "OfferWorkflowStatus", "$uibModal"];
})();

// Source: src/management/moderation/components/moderation-summary/moderation-summary.component.js
(function () {
'use strict';

/**
 * @ngdoc component
 * @name udb.management.moderation:udbModerationSummaryComponent
 * @description
 * # udbModerationSummary
 */
angular
  .module('udb.management.moderation')
  .component('udbModerationSummary', {
    templateUrl: 'templates/moderation-summary.html',
    controller: ModerationSummaryComponent,
    controllerAs: 'moc',
    bindings: {
      offerId: '@',
      offerType: '@'
    }
  });

/* @ngInject */
function ModerationSummaryComponent(ModerationService, jsonLDLangFilter, OfferWorkflowStatus) {
  var moc = this;
  var defaultLanguage = 'nl';

  moc.loading = true;
  moc.offer = {};
  moc.sendingJob = false;
  moc.error = false;

  // fetch offer
  ModerationService
    .getModerationOffer(moc.offerId)
    .then(function(offer) {
      offer.updateTranslationState();
      moc.offer = jsonLDLangFilter(offer, defaultLanguage);
    })
    .catch(showLoadingError)
    .finally(function() {
      moc.loading = false;
    });

  function showLoadingError(problem) {
    showProblem(problem || {title:'Dit aanbod kon niet geladen worden.'});
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    moc.error = problem.title + (problem.detail ? ' ' + problem.detail : '');
  }
}
ModerationSummaryComponent.$inject = ["ModerationService", "jsonLDLangFilter", "OfferWorkflowStatus"];
})();

// Source: src/management/moderation/components/reject-offer-confirm-modal.controller.js
(function () {

'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:RoleDeleteConfirmModalCtrl
 * @description
 * # RoleDeleteConfirmModalCtrl
 * Modal to delete a role.
 */
angular
  .module('udb.management.moderation')
  .controller('RejectOfferConfirmModalCtrl', RejectOfferConfirmModalCtrl);

/* @ngInject */
function RejectOfferConfirmModalCtrl($scope, $uibModalInstance, $q) {

  $scope.cancel = cancel;
  $scope.reject = reject;
  $scope.response = {};

  /**
   * Delete the role.
   */
  function reject() {
    var answer;
    $scope.error = false;

    // if no type chosen or the reason hasn't been filled in for OTHER
    if (!$scope.response.type ||
          ($scope.response.type === 'OTHER' &&
            (!$scope.response.reason || !$scope.response.reason.length))) {
      $scope.error = 'Gelieve een reden op te geven.';
      return;
    }

    if ($scope.response.type === 'OTHER') {
      answer = $scope.response.reason;
    } else {
      answer = $scope.response.type;
    }

    $uibModalInstance.close($q.resolve(answer));
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancel() {
    $uibModalInstance.dismiss();
  }

}
RejectOfferConfirmModalCtrl.$inject = ["$scope", "$uibModalInstance", "$q"];
})();

// Source: src/management/moderation/moderation-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:ModerationListController
 * @description
 * # ModerationListController
 */
angular
  .module('udb.management.moderation')
  .controller('ModerationListController', ModerationListController);

/**
 * @ngInject
 * @constructor
 *
 * @param {ModerationService} ModerationService
 * @param {Object} $uibModal
 * @param {RolePermission} RolePermission
 */
function ModerationListController(
  ModerationService,
  $uibModal,
  RolePermission,
  SearchResultGenerator,
  rx,
  $scope,
  $q,
  $document
) {
  var moderator = this;

  var query$, page$, searchResultGenerator, searchResult$;
  var itemsPerPage = 10;

  moderator.roles = [];

  moderator.loading = true;
  moderator.errorMessage = false;
  moderator.selectedRole = {};
  moderator.searchResult = {};

  moderator.findModerationContent = findModerationContent;

  // load the current user's moderation roles
  ModerationService
    .getMyRoles()
    .then(filterModeratorRoles)
    .then(configureObservables)
    .catch(showProblem) // stop loading when there's an error
    .finally(function() {
      moderator.loading = false;
    });

  function configureObservables(currentRole) {
    // configure observables for searching items
    query$ = rx.createObservableFunction(moderator, 'queryChanged');
    page$ = rx.createObservableFunction(moderator, 'pageChanged');
    searchResultGenerator = new SearchResultGenerator(
      ModerationService, query$, page$, itemsPerPage, currentRole.constraint
    );
    searchResult$ = searchResultGenerator.getSearchResult$();

    // show search results
    searchResult$
      .safeApply($scope, showSearchResult)
      .subscribe();

    // show loading screen on query change
    query$
      .safeApply($scope, function () {
        moderator.loading = true;
      })
      .subscribe();

    page$.subscribe(function () {
      $document.scrollTop(0);
    });

    return $q.resolve();
  }

  function filterModeratorRoles(roles) {
    // only show roles with moderator permission
    var filteredRoles = _.filter(roles, function(role) {
      var canModerate = _.filter(role.permissions, function(permission) {
        return permission === RolePermission.AANBOD_MODEREREN;
      });
      return canModerate.length > 0;
    });

    if (filteredRoles.length) {
      moderator.roles = filteredRoles;
      moderator.selectedRole = moderator.roles[0];

      return $q.resolve(moderator.selectedRole);
    }

    // when no roles were found aka no current role is set
    // don't bother continueing
    return $q.reject({title:'Er is huidig geen moderator rol gekoppeld aan jouw gebruiker.'});
  }

  function findModerationContent(currentRole) {
    moderator.queryChanged(currentRole.constraint);
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      moderator.searchResult = {};
    } else {
      moderator.searchResult = searchResult;
    }

    moderator.loading = false;
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    moderator.errorMessage = problem.title + (problem.detail ? ' ' + problem.detail : '');

    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return moderator.errorMessage;
          }
        }
      }
    );
  }
}
ModerationListController.$inject = ["ModerationService", "$uibModal", "RolePermission", "SearchResultGenerator", "rx", "$scope", "$q", "$document"];
})();

// Source: src/management/moderation/moderation.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.management.moderation
 * @description
 * # Moderation Manager
 * This service allows you to lookup moderation lists and approve/reject/... Offers.
 */
angular
  .module('udb.management.moderation')
  .service('ModerationService', ModerationService);

/* @ngInject */
function ModerationService(udbApi, OfferWorkflowStatus, jobLogger, BaseJob, $q) {
  var service = this;

  /**
   * @return {Promise.<Role[]>}
   */
  service.getMyRoles = function() {
    return udbApi.getMyRoles();
  };

  /**
   * Find moderation items
   *
   * @param {string} queryString
   * @param {int} itemsPerPage
   * @param {int} offset
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(queryString, itemsPerPage, offset) {
    var moderationFilter = 'wfstatus:"readyforvalidation" AND startdate:[NOW TO *]';
    queryString = (queryString ? '(' + queryString + ')' + ' AND ' : '') + moderationFilter;

    return udbApi
      .findToModerate(queryString, offset, itemsPerPage);
  };

  /**
   * @param {string} offerId
   *
   * @return {Promise.<Offer>}
   */
  service.getModerationOffer = function(offerId) {
    return udbApi.getOffer(new URL(offerId));
  };

  /**
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise.<BaseJob>}
   */
  service.approve = function(offer) {
    return udbApi
      .patchOffer(offer['@id'], 'Approve')
      .then(logModerationJob);
  };

  /**
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise.<BaseJob>}
   */
  service.reject = function(offer, reason) {
    return udbApi
      .patchOffer(offer['@id'], 'Reject', reason)
      .then(logModerationJob);
  };

  /**
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise.<BaseJob>}
   */
  service.flagAsDuplicate = function(offer) {
    return udbApi
      .patchOffer(offer['@id'], 'FlagAsDuplicate')
      .then(logModerationJob);
  };

  /**
   * @param {UdbPlace|UdbEvent} offer
   *
   * @return {Promise.<BaseJob>}
   */
  service.flagAsInappropriate = function(offer) {
    return udbApi
      .patchOffer(offer['@id'], 'FlagAsInappropriate')
      .then(logModerationJob);
  };

  /**
   * @param {Object} commandInfo
   * @return {Promise.<BaseJob>}
   */
  function logModerationJob(commandInfo) {
    var job = new BaseJob(commandInfo.commandId);
    jobLogger.addJob(job);

    return $q.resolve(job);
  }
}
ModerationService.$inject = ["udbApi", "OfferWorkflowStatus", "jobLogger", "BaseJob", "$q"];
})();

// Source: src/management/moderation/workflow.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.management.moderation.OfferWorkflowStatus
 * @description
 * # OfferWorkflowStatus
 * All the possible workflow states defined as a constant
 */
angular
  .module('udb.management.moderation')
  .constant('OfferWorkflowStatus',
    /**
     * Enum for workflowStatus
     * @readonly
     * @name OfferWorkflowStatus
     * @enum {string}
     */
    {
      'DRAFT': 'DRAFT',
      'READY_FOR_VALIDATION': 'READY_FOR_VALIDATION',
      'APPROVED': 'APPROVED',
      'REJECTED': 'REJECTED',
      'DELETED': 'DELETED'
    }
  );
})();

// Source: src/management/organizers/delete/organization-delete-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udbApp.management.organizers.CreateDeleteOrganizerJob
 * @description
 * # Oragnizer deletion job
 * This factory creates a job that tracks organizer deletion.
 */
angular
  .module('udb.management.organizers')
  .factory('CreateDeleteOrganizerJob', CreateDeleteOrganizerFactory);

/* @ngInject */
function CreateDeleteOrganizerFactory(BaseJob, JobStates, $q) {

  /**
   * @class CreateDeleteOrganizerJob
   * @constructor
   * @param {string} commandId
   */
  var CreateDeleteOrganizerJob = function (commandId) {
    BaseJob.call(this, commandId);
    this.task = $q.defer();
  };

  CreateDeleteOrganizerJob.prototype = Object.create(BaseJob.prototype);
  CreateDeleteOrganizerJob.prototype.constructor = CreateDeleteOrganizerJob;

  CreateDeleteOrganizerJob.prototype.finish = function () {
    if (this.state !== JobStates.FAILED) {
      this.state = JobStates.FINISHED;
      this.finished = new Date();
      this.task.resolve();
    }
    this.progress = 100;
  };

  CreateDeleteOrganizerJob.prototype.fail = function () {
    this.finished = new Date();
    this.state = JobStates.FAILED;
    this.progress = 100;
    this.task.reject('Failed to delete the organization');
  };

  return (CreateDeleteOrganizerJob);
}
CreateDeleteOrganizerFactory.$inject = ["BaseJob", "JobStates", "$q"];
})();

// Source: src/management/organizers/delete/organization-delete.modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc controller
 * @name udbApp.management.organizers.controller:OrganizationDeleteModalController
 * @var OrganizationDeleteModalController odc
 * @description
 * # OrganizationDeleteModalController
 * Modal to delete an organization
 */
angular
  .module('udb.management.organizers')
  .controller('OrganizationDeleteModalController', OrganizationDeleteModalController);

/* @ngInject */
function OrganizationDeleteModalController($uibModalInstance, OrganizerManager, organization) {
  var controller = this;

  controller.organization = organization;
  controller.saving = false;
  controller.error = false;

  controller.cancelRemoval = cancelRemoval;
  controller.deleteOrganization = deleteOrganization;

  /**
   * Delete the role.
   */
  function deleteOrganization() {
    controller.error = false;
    controller.saving = true;

    function showError() {
      controller.saving = false;
      controller.error = true;
    }

    OrganizerManager
      .delete(organization)
      .then($uibModalInstance.close)
      .catch(showError);
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancelRemoval() {
    $uibModalInstance.dismiss();
  }
}
OrganizationDeleteModalController.$inject = ["$uibModalInstance", "OrganizerManager", "organization"];
})();

// Source: src/management/organizers/edit/organizer-edit.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:OrganizerEditController
 * @description
 * # OrganizerEditController
 */
angular
  .module('udb.management.organizers')
  .controller('OrganizerEditController', OrganizerEditController);

/* @ngInject */
function OrganizerEditController(
    OrganizerManager,
    udbOrganizers,
    $state,
    $stateParams,
    $q,
    $scope
  ) {
  var controller = this;
  var organizerId = $stateParams.id;

  controller.contact = [];
  controller.showWebsiteValidation = false;
  controller.urlError = false;
  controller.websiteError = false;
  controller.nameError = false;
  controller.addressError = false;
  controller.contactError = false;
  controller.hasErrors = false;
  controller.disableSubmit = true;
  controller.saveError = false;

  controller.validateWebsite = validateWebsite;
  controller.validateName = validateName;
  controller.validateAddress = validateAddress;
  controller.validateContact = validateContact;
  controller.checkChanges = checkChanges;
  controller.validateOrganizer = validateOrganizer;
  controller.cancel = cancel;

  var oldOrganizer = {};
  var oldContact = [];
  var isUrlChanged = false;
  var isNameChanged = false;
  var isAddressChanged = false;
  var isContactChanged = false;

  loadOrganizer(organizerId);

  function loadOrganizer(organizerId) {
    OrganizerManager.removeOrganizerFromCache(organizerId);

    OrganizerManager
      .get(organizerId)
      .then(showOrganizer);
  }

  /**
   * @param {udbOrganizer} organizer
   */
  function showOrganizer(organizer) {
    if (_.isEmpty(organizer.address)) {
      organizer.address = {
        streetAddress : '',
        addressLocality : '',
        postalCode: '',
        addressCountry : ''
      };
    }
    controller.organizer = organizer;
    oldOrganizer = _.cloneDeep(organizer);
    controller.originalName = oldOrganizer.name;

    if (controller.organizer.contactPoint !== null) {
      _.forEach(controller.organizer.contactPoint, function(contactArray, key) {
        _.forEach(contactArray, function(value) {
          controller.contact.push({type: key, value: value});
        });
      });
      oldContact = _.cloneDeep(controller.contact);
    }
  }

  /**
   * Validate the website of new organizer.
   */
  function validateWebsite() {
    controller.showWebsiteValidation = true;

    if (!controller.organizerEditForm.website.$valid) {
      controller.showWebsiteValidation = false;
      controller.urlError = true;
      return;
    }

    udbOrganizers
        .findOrganizersWebsite(controller.organizer.url)
        .then(function (data) {
          controller.urlError = false;
          if (data.totalItems > 0) {
            if (data.member[0].name === controller.originalName) {
              controller.showWebsiteValidation = false;
              controller.organizersWebsiteFound = false;
            }
            else {
              controller.organizersWebsiteFound = true;
              controller.showWebsiteValidation = false;
            }
          }
          else {
            controller.showWebsiteValidation = false;
            controller.organizersWebsiteFound = false;
          }
        }, function () {
          controller.websiteError = true;
          controller.showWebsiteValidation = false;
        })
        .finally(function() {
          checkChanges();
        });
  }

  function validateName() {
    if (!controller.organizerEditForm.name.$valid) {
      controller.nameError = true;
    }
    else {
      controller.nameError = false;
    }

    checkChanges();
  }

  function validateAddress(error) {
    controller.addressError = error;
    checkChanges();
  }

  function validateContact(error) {
    controller.contactError = error;
    checkChanges();
  }

  /**
   * Validate the new organizer.
   */
  function validateOrganizer() {
    controller.showValidation = true;
    if (!controller.organizerEditForm.$valid || controller.organizersWebsiteFound ||
        controller.websiteError || controller.urlError || controller.nameError ||
        controller.addressError || controller.contactError) {
      controller.hasErrors = true;
      controller.disableSubmit = true;
      $scope.$broadcast('organizerAddressSubmit');
      $scope.$broadcast('organizerContactSubmit');
      return;
    }

    saveOrganizer();
  }

  function checkChanges() {
    isUrlChanged = !_.isEqual(controller.organizer.url, oldOrganizer.url);
    isNameChanged = !_.isEqual(controller.organizer.name, oldOrganizer.name);
    isAddressChanged = !_.isEqual(controller.organizer.address, oldOrganizer.address);
    isContactChanged = !_.isEqual(controller.contact, oldContact);

    if (isUrlChanged || isNameChanged || isAddressChanged || isContactChanged) {
      controller.disableSubmit = false;
    }
    else {
      controller.disableSubmit = true;
    }

    if (controller.organizerEditForm.$valid && !controller.organizersWebsiteFound &&
        !controller.websiteError && !controller.urlError && !controller.nameError &&
        !controller.addressError && !controller.contactError) {
      controller.hasErrors = false;
    }
  }

  function saveOrganizer() {
    var promises = [];

    if (isUrlChanged) {
      promises.push(OrganizerManager.updateOrganizerWebsite(organizerId, controller.organizer.url));
    }

    if (isNameChanged) {
      promises.push(OrganizerManager.updateOrganizerName(organizerId, controller.organizer.name));
    }

    if (isAddressChanged) {
      promises.push(OrganizerManager.updateOrganizerAddress(organizerId, controller.organizer.address));
    }

    if (isContactChanged) {
      promises.push(OrganizerManager.updateOrganizerContact(organizerId, controller.contact));
    }

    promises.push(OrganizerManager.removeOrganizerFromCache(organizerId));

    $q.all(promises)
        .then(function() {
          $state.go('management.organizers.search', {}, {reload: true});
        })
        .catch(function () {
          controller.hasErrors = true;
          controller.saveError = true;
        });
  }

  function cancel() {
    OrganizerManager.removeOrganizerFromCache(organizerId);
    $state.go('management.organizers.search', {}, {reload: true});
  }
}
OrganizerEditController.$inject = ["OrganizerManager", "udbOrganizers", "$state", "$stateParams", "$q", "$scope"];
})();

// Source: src/management/organizers/organizer-detail.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:OrganizerDetailController
 * @description
 * # OrganizerDetailController
 */
angular
  .module('udb.management.organizers')
  .controller('OrganizerDetailController', OrganizerDetailController);

/* @ngInject */
function OrganizerDetailController(OrganizerManager, $uibModal, $stateParams, $location) {
  var controller = this;
  var organizerId = $stateParams.id;

  // labels scope variables and functions
  controller.labelSaving = false;
  controller.addLabel = addLabel;
  controller.deleteLabel = deleteLabel;
  controller.labelResponse = '';
  controller.labelsError = '';
  controller.deleteOrganization = deleteOrganization;

  loadOrganizer(organizerId);

  function loadOrganizer(organizerId) {
    OrganizerManager
      .get(organizerId)
      .then(showOrganizer);
  }

  /**
   * @param {udbOrganizer} organizer
   */
  function showOrganizer(organizer) {
    controller.organizer = organizer;
  }

  function addLabel(label) {
    controller.labelSaving = true;
    clearLabelsError();

    OrganizerManager
      .addLabelToOrganizer(organizerId, label.name)
      .catch(showProblem)
      .finally(function() {
        controller.labelSaving = false;
        removeFromCache();
      });
  }

  function deleteLabel(label) {
    controller.labelSaving = true;
    clearLabelsError();
    removeFromCache();

    OrganizerManager
        .deleteLabelFromOrganizer(organizerId, label.name)
        .catch(showUnlabelProblem)
        .finally(function() {
          controller.labelSaving = false;
        });
  }

  function removeFromCache() {
    OrganizerManager.removeOrganizerFromCache(organizerId);
  }

  function clearLabelsError() {
    controller.labelResponse = '';
    controller.labelsError = '';
  }

  function goToOrganizerOverview() {
    $location.path('/manage/organizations');
  }

  function goToOrganizerOverviewOnJobCompletion(job) {
    job.task.promise.then(goToOrganizerOverview);
  }

  function deleteOrganization() {
    openOrganizationDeleteConfirmModal(controller.organizer);
  }

  function openOrganizationDeleteConfirmModal(organizer) {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/organization-delete.modal.html',
      controller: 'OrganizationDeleteModalController',
      controllerAs: 'odc',
      resolve: {
        organization: function () {
          return organizer;
        }
      }
    });

    modalInstance.result
      .then(goToOrganizerOverviewOnJobCompletion);
  }

  /**
   * @param {ApiProblem} problem
   */
  function showUnlabelProblem(problem) {
    loadOrganizer(organizerId);
    controller.labelResponse = 'unlabelError';
    controller.labelsError = problem.title;
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    controller.errorMessage = problem.title + (problem.detail ? ' ' + problem.detail : '');

    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return controller.errorMessage;
          }
        }
      }
    );
  }
}
OrganizerDetailController.$inject = ["OrganizerManager", "$uibModal", "$stateParams", "$location"];
})();

// Source: src/management/organizers/organizer-manager.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.management.organizers
 * @description
 * # Organizer Manager
 * This service allows you to lookup organizers and perform actions on them.
 */
angular
  .module('udb.management.organizers')
  .service('OrganizerManager', OrganizerManager);

/* @ngInject */
function OrganizerManager(udbApi, jobLogger, BaseJob, $q, $rootScope, CreateDeleteOrganizerJob) {
  var service = this;

  /**
   * @param {UdbOrganizer} organization
   */
  service.delete = function (organization) {
    return udbApi
      .deleteOrganization(organization)
      .then(logOrganizationDeleted(organization));
  };

  /**
   * @param {UdbOrganizer} organization
   * @return {Function}
   */
  function logOrganizationDeleted(organization) {
    /**
     * @param {Object} commandInfo
     * @return {Promise.<CreateDeleteOrganizerJob>}
     */
    return function (commandInfo) {
      var job = new CreateDeleteOrganizerJob(commandInfo.commandId);
      jobLogger.addJob(job);
      $rootScope.$emit('organizationDeleted', organization);
      return $q.resolve(job);
    };

  }

  /**
   * @param {string} query
   * @param {int} limit
   * @param {int} start
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(query, limit, start) {
    return udbApi.findOrganisations(start, limit, null, query);
  };

  /**
   * @param {string} organizerId
   *
   * @returns {Promise.<UdbOrganizer>}
   */
  service.get = function(organizerId) {
    return udbApi.getOrganizerById(organizerId);
  };

  /**
   * @param {string} organizerId
   * @param {string} labelUuid
   *
   * @returns {Promise}
   */
  service.addLabelToOrganizer = function(organizerId, labelUuid) {
    return udbApi
      .addLabelToOrganizer(organizerId, labelUuid)
      .then(logUpdateOrganizerJob);
  };

  /**
   * @param {string} organizerId
   * @param {string} labelUuid
   *
   * @returns {Promise}
   */
  service.deleteLabelFromOrganizer = function(organizerId, labelUuid) {
    return udbApi
      .deleteLabelFromOrganizer(organizerId, labelUuid)
      .then(logUpdateOrganizerJob);
  };

  /**
   * Removes an organizer from the cache.
   * @param {string} organizerId
   */
  service.removeOrganizerFromCache = function(organizerId) {
    return udbApi.removeItemFromCache(organizerId);
  };

  /**
   * Update the unique url of a specific organizer.
   * @param {string} organizerId
   * @param {string} website
   *
   * @returns {Promise}
   */
  service.updateOrganizerWebsite = function(organizerId, website) {
    return udbApi
        .updateOrganizerWebsite(organizerId, website)
        .then(logUpdateOrganizerJob);
  };

  /**
   * Update the name of a specific organizer.
   * @param {string} organizerId
   * @param {string} name
   *
   * @returns {Promise}
   */
  service.updateOrganizerName = function(organizerId, name) {
    return udbApi
        .updateOrganizerName(organizerId, name)
        .then(logUpdateOrganizerJob);
  };

  /**
   * Update the address of a specific organizer.
   * @param {string} organizerId
   * @param {Object} address
   *
   * @returns {Promise}
   */
  service.updateOrganizerAddress = function(organizerId, address) {
    return udbApi
        .updateOrganizerAddress(organizerId, address)
        .then(logUpdateOrganizerJob);
  };

  /**
   * Update contact info of a specific organizer.
   * @param {string} organizerId
   * @param {Array} contact
   *
   * @returns {Promise}
   */
  service.updateOrganizerContact = function(organizerId, contact) {
    return udbApi
        .updateOrganizerContact(organizerId, contact)
        .then(logUpdateOrganizerJob);
  };

  /**
   * @param {Object} commandInfo
   * @return {Promise.<BaseJob>}
   */
  function logUpdateOrganizerJob(commandInfo) {
    var job = new BaseJob(commandInfo.commandId);
    jobLogger.addJob(job);

    return $q.resolve(job);
  }
}
OrganizerManager.$inject = ["udbApi", "jobLogger", "BaseJob", "$q", "$rootScope", "CreateDeleteOrganizerJob"];
})();

// Source: src/management/organizers/search/organization-search-item.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.management.organizers.directive:udbOrganizationSearchItem
 * @var udbOrganizationSearchItem osic
 * @description
 * # Organizer search item Directive
 */
angular
  .module('udb.management.organizers')
  .directive('udbOrganizationSearchItem', OrganizationSearchItem);

function OrganizationSearchItem() {
  return {
    restrict: 'A',
    templateUrl: 'templates/organization-search-item.html',
    bindToController: {
      organizationSearchItem: '<udbOrganizationSearchItem'
    },
    controller: OrganizationSearchItemController,
    controllerAs: 'osic'
  };
}

/* @ngInject */
function OrganizationSearchItemController(udbApi, $rootScope) {
  var controller = this;
  var organizationDeletedListener = $rootScope.$on('organizationDeleted', matchAndMarkAsDeleted);

  udbApi
    .getOrganizerByLDId(controller.organizationSearchItem['@id'])
    .then(showOrganization);

  /**
   *
   * @param {UdbOrganizer} organization
   */
  function showOrganization(organization) {
    controller.organization = organization;
  }

  function markAsDeleted() {
    organizationDeletedListener();
    controller.organizationDeleted = true;
  }

  /**
   * @param {Object} angularEvent
   * @param {UdbOrganizer} deletedOrganization
   */
  function matchAndMarkAsDeleted(angularEvent, deletedOrganization) {
    if (!controller.organization) {
      return;
    }

    if (controller.organization.id === deletedOrganization.id) {
      markAsDeleted();
    }
  }
}
OrganizationSearchItemController.$inject = ["udbApi", "$rootScope"];
})();

// Source: src/management/organizers/search/organization-search.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.management.organizers.controller:OrganizationSearchController
 * @description
 * # Organization Search Controller
 */
angular
  .module('udb.management.organizers')
  .controller('OrganizationSearchController', OrganizationSearchController);

/**
 * @inject
 */
function OrganizationSearchController(SearchResultGenerator, rx, $scope, OrganizerManager) {
  var controller = this;

  var itemsPerPage = 10;
  var minQueryLength = 3;
  var query$ = rx.createObservableFunction(controller, 'queryChanged');
  var filteredQuery$ = query$.filter(ignoreShortQueries(minQueryLength));
  var page$ = rx.createObservableFunction(controller, 'pageChanged');
  var searchResultGenerator = new SearchResultGenerator(OrganizerManager, filteredQuery$, page$, itemsPerPage);
  var searchResult$ = searchResultGenerator.getSearchResult$();

  /**
   * @param {number} minQueryLength
   * @return {Function}
   */
  function ignoreShortQueries(minQueryLength) {
    /**
     * @param {string} query
     */
    return function (query) {
      return query === '' || query.length >= minQueryLength;
    };
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    controller.problem = problem;
  }

  function clearProblem()
  {
    controller.problem = false;
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      controller.searchResult = {};
    } else {
      clearProblem();
      controller.searchResult = searchResult;
    }

    controller.loading = false;
  }

  controller.loading = false;
  controller.query = '';
  controller.page = 0;
  controller.minQueryLength = minQueryLength;

  query$
    .safeApply($scope, function (query) {
      controller.query = query;
    })
    .subscribe();

  searchResult$
    .safeApply($scope, showSearchResult)
    .subscribe();

  filteredQuery$
    .merge(page$)
    .safeApply($scope, function () {
      controller.loading = true;
    })
    .subscribe();
}
OrganizationSearchController.$inject = ["SearchResultGenerator", "rx", "$scope", "OrganizerManager"];
})();

// Source: src/management/roles/components/role-delete-confirm-modal.controller.js
(function () {

'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:RoleDeleteConfirmModalCtrl
 * @description
 * # RoleDeleteConfirmModalCtrl
 * Modal to delete a role.
 */
angular
  .module('udb.management.roles')
  .controller('RoleDeleteConfirmModalCtrl', RoleDeleteConfirmModalController);

/* @ngInject */
function RoleDeleteConfirmModalController($scope, $uibModalInstance, RoleManager, item) {

  $scope.item = item;
  $scope.saving = false;
  $scope.error = false;

  $scope.cancelRemoval = cancelRemoval;
  $scope.deleteRole = deleteRole;

  /**
   * Delete the role.
   */
  function deleteRole() {
    $scope.error = false;
    $scope.saving = true;

    function showError() {
      $scope.saving = false;
      $scope.error = true;
    }

    RoleManager
      .deleteRole(item)
      .then($uibModalInstance.close)
      .catch(showError);
  }

  /**
   * Cancel, modal dismiss.
   */
  function cancelRemoval() {
    $uibModalInstance.dismiss();
  }

}
RoleDeleteConfirmModalController.$inject = ["$scope", "$uibModalInstance", "RoleManager", "item"];
})();

// Source: src/management/roles/delete-role-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.management.roles.DeleteRoleJob
 * @description
 * This is the factory that creates jobs to delete roles.
 */
angular
  .module('udb.management.roles')
  .factory('DeleteRoleJob', DeleteRoleJobFactory);

/* @ngInject */
function DeleteRoleJobFactory(BaseJob, $q, JobStates) {

  /**
   * @class DeleteRoleJob
   * @constructor
   * @param {string} commandId
   * @param {Role} role
   */
  var DeleteRoleJob = function (commandId, role) {
    BaseJob.call(this, commandId);

    this.role = role;
    this.task = $q.defer();
  };

  DeleteRoleJob.prototype = Object.create(BaseJob.prototype);
  DeleteRoleJob.prototype.constructor = DeleteRoleJob;

  DeleteRoleJob.prototype.finish = function () {
    BaseJob.prototype.finish.call(this);

    if (this.state !== JobStates.FAILED) {
      this.task.resolve();
    }
  };

  DeleteRoleJob.prototype.fail = function () {
    BaseJob.prototype.fail.call(this);

    this.task.reject();
  };

  DeleteRoleJob.prototype.getDescription = function() {
    return 'Rol verwijderen: "' +  this.role.name + '".';
  };

  return (DeleteRoleJob);
}
DeleteRoleJobFactory.$inject = ["BaseJob", "$q", "JobStates"];
})();

// Source: src/management/roles/permission.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.management.roles.Permission
 * @description
 * # Permission
 * All the possible job states defined as a constant
 */
angular
  .module('udb.management.roles')
  .constant('RolePermission',
    /**
     * Enum for permissions
     * @readonly
     * @name RolePermission
     * @enum {string}
     */
    {
      'AANBOD_BEWERKEN': 'AANBOD_BEWERKEN',
      'AANBOD_MODEREREN': 'AANBOD_MODEREREN',
      'AANBOD_VERWIJDEREN': 'AANBOD_VERWIJDEREN',
      'ORGANISATIES_BEWERKEN': 'ORGANISATIES_BEWERKEN',
      'ORGANISATIES_BEHEREN': 'ORGANISATIES_BEHEREN',
      'GEBRUIKERS_BEHEREN': 'GEBRUIKERS_BEHEREN',
      'LABELS_BEHEREN': 'LABELS_BEHEREN',
      'VOORZIENINGEN_BEWERKEN': 'VOORZIENINGEN_BEWERKEN'
    }
  );
})();

// Source: src/management/roles/role-form.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} TranslatedPermission
 * @property {RolePermission} key
 * @property {string} name
 */

/**
 * @ngdoc function
 * @name udbApp.controller:RoleFormController
 * @description
 * # RoleFormController
 */
angular
  .module('udb.management.roles')
  .controller('RoleFormController', RoleFormController);

/**
 * @ngInject
 * @constructor
 *
 * @param {RoleManager} RoleManager
 * @param {UserManager} UserManager
 * @param {Object} $uibModal
 * @param {Object} $stateParams
 * @param {Object} $q
 * @param {Function} $translate
 * @param {RolePermission} RolePermission
 */
function RoleFormController(
  RoleManager,
  UserManager,
  $uibModal,
  $stateParams,
  $q,
  $translate,
  RolePermission
) {
  var editor = this;
  var roleId = $stateParams.id;

  editor.saving = false;
  editor.loadedRole = false;
  editor.loadedRolePermissions = false;
  editor.loadedRoleUsers = false;
  editor.loadedRoleLabels = false;
  editor.addingUser = false;
  editor.role = {
    permissions: [],
    users: [],
    labels: []
  };
  /**
   * @type {TranslatedPermission[]}
   */
  editor.availablePermissions = [];
  editor.originalRole = {
    permissions: [],
    users: [],
    labels: []
  };
  editor.errorMessage = false;
  editor.editName = false;
  editor.editConstraint = false;

  editor.addUser = addUser;
  editor.addLabel = addLabel;
  editor.createRole = createRole;
  editor.removeLabel = removeLabel;
  editor.removeUser = removeUser;
  editor.updatePermission = updatePermission;
  editor.updateName = updateName;
  editor.updateConstraint = updateConstraint;

  function init() {
    getAllRolePermissions()
      .then(function(permissions) {
        editor.availablePermissions = permissions;
        return roleId ? loadRole(roleId) : $q.resolve();
      })
      .catch(showProblem) // stop loading when there's an error
      .finally(function() {
        // no matter what resest loading indicators
        editor.loadedRole = true;
        editor.loadedRolePermissions = true;
        editor.loadedRoleUsers = true;
        editor.loadedRoleLabels = true;
      });
  }

  function loadRole(roleId) {
    return RoleManager
      .get(roleId)
      .then(function(role) {
        editor.role = role;

        editor.role.users = [];
        editor.role.labels = [];
        editor.role.permissions = _.filter(editor.availablePermissions, function (permission) {
          return _.contains(role.permissions, permission.key);
        });
      }, function(problem) {
        problem.detail = problem.title;
        problem.title = 'De rol kon niet gevonden worden.';
        return $q.reject(problem);
      })
      .then(function () {
        return loadRoleUsers(roleId);
      })
      .then(function () {
        return loadRoleLabels(roleId);
      });
  }

  /**
   * @return {TranslatedPermission[]}
   */
  function getAllRolePermissions() {
    var permissionIds = _.values(RolePermission);

    function formatTranslatedPermissions(translations) {
      return _.map(translations, function (translation, translationId) {
        return {
          key: translationId,
          name: translation
        };
      });
    }

    return $translate(permissionIds)
      .then(formatTranslatedPermissions);
  }

  function loadRoleUsers(roleId) {
    return RoleManager
      .getRoleUsers(roleId)
      .then(function (users) {
        editor.role.users = users;
      }, function(problem) {
        problem.detail = problem.title;
        problem.title = 'De leden van deze rol konden niet geladen worden.';
        return $q.reject(problem);
      });
  }

  function loadRoleLabels(roleId) {
    return RoleManager
      .getRoleLabels(roleId)
      .then(function (labels) {
        editor.role.labels = labels;
      }, function(problem) {
        problem.detail = problem.title;
        problem.title = 'De labels van deze rol konden niet geladen worden.';
        return $q.reject(problem);
      });
  }

  function roleCreated (response) {
    roleId = response.roleId;
    // set uuid because a GET role would have a uuid as well
    editor.role.uuid = roleId;
    editor.originalRole.uuid = roleId;
  }

  function createRole() {
    if (!editor.role.uuid && editor.role.name) {
      RoleManager
        .create(editor.role.name)
        .then(roleCreated, showProblem)
        .finally(function () {
          editor.saving = false;
        });
    }
  }

  function updateConstraint() {
    editor.saving = true;
    RoleManager
      .updateRoleConstraint(roleId, editor.role.constraint)
      .then(function() {
        editor.editConstraint = false;
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  function updateName() {
    editor.saving = true;
    RoleManager
      .updateRoleName(roleId, editor.role.name)
      .then(function() {
        editor.editName = false;
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  /**
   *
   * @param {RolePermission} permission
   */
  function updatePermission(permission) {
    editor.loadedRolePermissions = false;
    var permissionUpdate = $q.reject();

    if (_.find(editor.role.permissions, {key: permission.key})) {
      editor.role.permissions = _.reject(editor.role.permissions, {key: permission.key});
      permissionUpdate = RoleManager.removePermissionFromRole(permission.key, roleId);
    } else {
      editor.role.permissions.push(permission);
      permissionUpdate = RoleManager.addPermissionToRole(permission.key, roleId);
    }

    permissionUpdate
      .catch(showProblem)
      .finally(function() {
        editor.loadedRolePermissions = true;
      })
    ;
  }

  function addLabel(label) {
    editor.saving = true;

    RoleManager
      .addLabelToRole(roleId, label.uuid)
      .then(function () {
        editor.role.labels.push(label);
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  function removeLabel(label) {
    editor.saving = true;

    RoleManager
      .removeLabelFromRole(roleId, label.uuid)
      .then(function () {
        var pos = editor.role.labels.indexOf(label);
        editor.role.labels.splice(pos, 1);
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  function removeUser(user) {
    var role = _.pick(editor.role, ['uuid', 'name', 'constraint']);

    editor.saving = true;

    RoleManager
      .removeUserFromRole(role, user)
      .then(function () {
        var pos = editor.role.users.indexOf(user);
        editor.role.users.splice(pos, 1);
      }, showProblem)
      .finally(function() {
        editor.saving = false;
      });
  }

  function addUser() {
    editor.addingUser = true;
    var userAdded = false;

    UserManager
      .findUserWithEmail(editor.email)
      .then(function(user) {
        var userExists = false;
        userAdded = user;

        angular.forEach(editor.role.users, function(roleUser) {
          if (roleUser.uuid === user.uuid) {
            userExists = true;
          }
        });

        if (userExists) {
          return $q.reject({
            title: 'De gebruiker hangt al aan deze rol.'
          });
        } else {
          return user;
        }
      })
      .then(function(user) {
        var role = _.pick(editor.role, ['uuid', 'name', 'constraint']);
        return RoleManager.addUserToRole(user, role);
      })
      .then(function() {
        editor.role.users.push(userAdded);
        editor.form.email.$setViewValue('');
        editor.form.email.$setPristine(true);
        editor.form.email.$render();
      })
      .catch(showProblem)
      .finally(function() {
        editor.addingUser = false;
      });
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    editor.errorMessage = problem.title + (problem.detail ? ' ' + problem.detail : '');

    var modalInstance = $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'sm',
        resolve: {
          errorMessage: function() {
            return editor.errorMessage;
          }
        }
      }
    );
  }

  init();
}
RoleFormController.$inject = ["RoleManager", "UserManager", "$uibModal", "$stateParams", "$q", "$translate", "RolePermission"];
})();

// Source: src/management/roles/role-manager.service.js
(function () {
'use strict';

/**
 * @typedef {Object} Role
 * @property {string}   uuid
 * @property {string}   name
 * @property {string}   constraint
 * @property {RolePermission[]} permissions
 */

/**
 * @typedef {Object} roleUpdate
 * @property {string} @name
 * @property {string} @constraint
 */

/**
 * @ngdoc service
 * @name udb.management.roles
 * @description
 * # Role Manager
 * This service allows you to lookup roles and perform actions on them.
 */
angular
  .module('udb.management.roles')
  .service('RoleManager', RoleManager);

/* @ngInject */
function RoleManager(udbApi, jobLogger, BaseJob, $q, DeleteRoleJob, UserRoleJob) {
  var service = this;

  /**
   * @param {string} query
   * @param {int} limit
   * @param {int} start
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(query, limit, start) {
    return udbApi.findRoles(query, limit, start);
  };

  /**
   * @param {string|uuid} roleIdentifier
   *  The name or uuid of a role.
   * @return {Promise.<Role>}
   */
  service.get = function(roleIdentifier) {
    return udbApi.getRoleById(roleIdentifier);
  };

  /**
   * @param {string|uuid} roleId
   *  The name or uuid of a role.
   * @return {Promise.<Role>}
   */
  service.getRolePermissions = function(roleId) {
    return udbApi.getRolePermissions(roleId);
  };

  /**
   * @param {string|uuid} roleId
   *  The name or uuid of a role.
   * @return {Promise.<Role>}
   */
  service.getRoleUsers = function(roleId) {
    return udbApi.getRoleUsers(roleId);
  };

  /**
   * @param {string} name
   *  The name of the new role.
   * @return {Promise.<Role>}
   */
  service.create = function(name) {
    return udbApi.createRole(name);
  };

  /**
   * @param {RolePermission} permission
   *  The permission to add to the role
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  service.addPermissionToRole = function(permission, roleId) {
    return udbApi
      .addPermissionToRole(permission, roleId)
      .then(logRoleJob);
  };

  /**
   * @param {RolePermission} permission
   *  The key for the permission
   * @param {string} roleId
   *  roleId for the role
   * @return {Promise}
   */
  service.removePermissionFromRole = function(permission, roleId) {
    return udbApi
      .removePermissionFromRole(permission, roleId)
      .then(logRoleJob);
  };

  /**
   * @param {User} user
   *  The user you want to add a role to
   * @param {Role} role
   *  The role you want added to the user
   * @return {Promise.<UserRoleJob>}
   */
  service.addUserToRole = function(user, role) {
    return udbApi
      .addUserToRole(user.uuid, role.uuid)
      .then(userRoleJobCreator(user, role));
  };

  /**
   * @param {uuid} roleId
   * @param {string} name
   * @return {Promise}
   */
  service.updateRoleName = function(roleId, name) {
    return udbApi
      .updateRoleName(roleId, name)
      .then(logRoleJob);
  };

  /**
   * @param {uuid} roleId
   * @param {string} constraint
   * @return {Promise}
   */
  service.updateRoleConstraint = function(roleId, constraint) {
    return udbApi
      .updateRoleConstraint(roleId, constraint)
      .then(logRoleJob);
  };

  /**
   * @param {uuid} roleId
   * @param {uuid} labelId
   * @return {Promise.<BaseJob>}
   */
  service.addLabelToRole = function(roleId, labelId) {
    return udbApi
      .addLabelToRole(roleId, labelId)
      .then(logRoleJob);
  };

  /**
   * @param {uuid} roleId
   * @return {Promise}
   */
  service.getRoleLabels = function(roleId) {
    return udbApi
      .getRoleLabels(roleId);
  };

  /**
   * @param {uuid} roleId
   * @param {uuid} labelId
   * @return {Promise.<BaseJob>}
   */
  service.removeLabelFromRole = function(roleId, labelId) {
    return udbApi
      .removeLabelFromRole(roleId, labelId)
      .then(logRoleJob);
  };

  /**
   * @param {Role} role
   * @param {User} user
   * @return {Promise.<UserRoleJob>}
   */
  service.removeUserFromRole = function(role, user) {
    return udbApi
      .removeUserFromRole(role.uuid, user.uuid)
      .then(userRoleJobCreator(user, role));
  };

  /**
   * @param {Role} role
   * @return {Promise}
   */
  service.deleteRole = function (role) {
    function logDeleteJob(jobData) {
      var job = new DeleteRoleJob(jobData.commandId, role);
      jobLogger.addJob(job);

      return $q.resolve(job);
    }

    return udbApi
      .removeRole(role.uuid)
      .then(logDeleteJob);
  };

  /**
   * @param {Object} commandInfo
   * @return {Promise.<BaseJob>}
   */
  function logRoleJob(commandInfo) {
    var job = new BaseJob(commandInfo.commandId);
    jobLogger.addJob(job);

    return $q.resolve(job);
  }

  /**
   * Returns a callable function that takes a command info and returns a user role job promise.
   *
   * @param {User} user
   * @param {Role} role
   */
  function userRoleJobCreator(user, role) {
    /**
     * @param {CommandInfo} commandInfo
     * @return {Promise.<UserRoleJob>}
     */
    return function(commandInfo) {
      var job = new UserRoleJob(commandInfo.commandId, user, role);
      jobLogger.addJob(job);

      return $q.resolve(job);
    };
  }
}
RoleManager.$inject = ["udbApi", "jobLogger", "BaseJob", "$q", "DeleteRoleJob", "UserRoleJob"];
})();

// Source: src/management/roles/roles-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:RolesListController
 * @description
 * # RolesListController
 */
angular
  .module('udb.management.roles')
  .controller('RolesListController', RolesListController);

/* @ngInject */
function RolesListController(SearchResultGenerator, rx, $scope, RoleManager, $uibModal, $state, $document) {
  var rlc = this;

  var itemsPerPage = 10;
  var minQueryLength = 3;

  var query$ = rx.createObservableFunction(rlc, 'queryChanged');
  var filteredQuery$ = query$.filter(ignoreShortQueries);
  var page$ = rx.createObservableFunction(rlc, 'pageChanged');
  var searchResultGenerator = new SearchResultGenerator(RoleManager, filteredQuery$, page$, itemsPerPage);
  var searchResult$ = searchResultGenerator.getSearchResult$();

  /**
   * Filter applied on query-stream to ignore too short queries
   * @param {string} query
   * @return {boolean}
   */
  function ignoreShortQueries(query) {
    if (rlc.query === '') {
      return true;
    }
    else {
      return query.length >= minQueryLength;
    }
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    rlc.problem = problem;
  }

  function clearProblem()
  {
    rlc.problem = false;
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      rlc.searchResult = {};
    } else {
      clearProblem();
      rlc.searchResult = searchResult;
    }

    rlc.loading = false;
  }

  function openDeleteConfirmModal(role) {
    var modalInstance = $uibModal.open({
        templateUrl: 'templates/role-delete-confirm-modal.html',
        controller: 'RoleDeleteConfirmModalCtrl',
        resolve: {
          item: function () {
            return role;
          }
        }
      });
    modalInstance.result.then(function() {
      $state.reload();
    });
    // TODO: $state.reload isn't the best way to do it, better have another stream
  }
  rlc.openDeleteConfirmModal = openDeleteConfirmModal;

  rlc.loading = false;
  rlc.query = '';
  rlc.page = 0;
  rlc.minQueryLength = minQueryLength;

  query$
    .safeApply($scope, function (query) {
      rlc.query = query;
    })
    .subscribe();

  searchResult$
    .safeApply($scope, showSearchResult)
    .subscribe();

  filteredQuery$
    .merge(page$)
    .safeApply($scope, function () {
      rlc.loading = true;
    })
    .subscribe();

  page$
    .subscribe(function () {
      $document.scrollTop(0);
    });
}
RolesListController.$inject = ["SearchResultGenerator", "rx", "$scope", "RoleManager", "$uibModal", "$state", "$document"];
})();

// Source: src/management/roles/search-label.component.js
(function () {
'use strict';

angular
  .module('udb.management.roles')
  .component('udbSearchLabel', {
    templateUrl: 'templates/search-label.html',
    controller: LabelSearchComponent,
    controllerAs: 'select',
    bindings: {
      labelAdded: '&',
      labelRemoved: '&'
    }
  });

/** @ngInject */
function LabelSearchComponent(LabelManager) {
  var select = this;
  /** @type {Label[]} */
  select.availableLabels = [];
  select.suggestLabels = suggestLabels;
  select.minimumInputLength = 2;
  select.findDelay = 300;
  select.label = null;

  function findSuggestions(name) {
    LabelManager
      .find(name, 6, 0)
      .then(function(results) {
        setAvailableLabels(results.member);
      })
      .finally(function () {
        select.refreshing = false;
      });
  }

  function suggestLabels(name) {
    select.refreshing = true;
    setAvailableLabels([]);
    findSuggestions(name);
  }

  /** @param {Label[]} labels */
  function setAvailableLabels(labels) {
    select.availableLabels = labels;
  }
}
LabelSearchComponent.$inject = ["LabelManager"];
})();

// Source: src/management/roles/unique-role.directive.js
(function () {
'use strict';

angular
  .module('udb.management.roles')
  .directive('udbUniqueRole', UniqueRoleDirective);

/** @ngInject */
function UniqueRoleDirective(RoleManager, $q) {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, element, attrs, controller) {
      function isUnique(roleName) {
        if (controller.$isEmpty(roleName)) {
          return $q.when();
        }

        var deferredUniqueCheck = $q.defer();

        RoleManager
          .get(roleName)
          .then(deferredUniqueCheck.reject, deferredUniqueCheck.resolve);

        return deferredUniqueCheck.promise;
      }

      controller.$asyncValidators.uniqueRole = isUnique;
    }
  };
}
UniqueRoleDirective.$inject = ["RoleManager", "$q"];
})();

// Source: src/management/search-result-generator.factory.js
(function () {
'use strict';

/**
 * @ngdoc factory
 * @name udb.management.SearchResultGenerator
 * @description
 * # Search Result Generator
 * Provides a stream of paged search results.
 */
angular
  .module('udb.management')
  .factory('SearchResultGenerator', SearchResultGenerator);

/* @ngInject */
function SearchResultGenerator(rx) {
  /**
   * @class SearchResultGenerator
   * @constructor
   * @param {Object} searchService
   * @param {Observable} query$
   * @param {Observable} page$
   * @param {Number} itemsPerPage
   */
  var SearchResultGenerator = function (searchService, query$, page$, itemsPerPage, start) {
    start = start || '';
    this.searchService = searchService;
    this.itemsPerPage = itemsPerPage;
    this.query$ = query$.debounce(300).startWith(start);
    this.offset$ = page$.map(pageToOffset(itemsPerPage)).startWith(0);

    this.searchParameters$ = rx.Observable.combineLatest(
      this.query$,
      this.offset$,
      combineQueryParameters
    );
  };

  SearchResultGenerator.prototype.constructor = SearchResultGenerator;

  /**
   * @param {string} query
   * @param {Number} offset
   * @return {{query: *, offset: *}}
   */
  function combineQueryParameters(query, offset) {
    return {query: query, offset: offset};
  }

  /**
   * @param {Number} itemsPerPage
   * @return {Function}
   */
  function pageToOffset(itemsPerPage) {
    return function(page) {
      return (page - 1) * itemsPerPage;
    };
  }

  /**
   * @param {{query: *, offset: *}} searchParameters
   * @return {Observable.<PagedCollection|Object>}
   */
  SearchResultGenerator.prototype.find = function (searchParameters) {
    var generator = this;

    return rx.Observable
      .fromPromise(
        generator.searchService.find(
          searchParameters.query,
          generator.itemsPerPage,
          searchParameters.offset
        )
      )
      .catch(function(searchError) {
        return rx.Observable.just({error : searchError});
      });
  };

  SearchResultGenerator.prototype.getSearchResult$ = function () {
    var generator = this;

    return generator.searchParameters$
      .flatMap(generator.find.bind(generator));
  };

  return (SearchResultGenerator);
}
SearchResultGenerator.$inject = ["rx"];
})();

// Source: src/management/search.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.management.SearchService
 * @description
 * # Search Service
 * This is a placeholder service to feed the search result generator.
 */
angular
  .module('udb.management')
  .service('SearchService', SearchService);

/* @ngInject */
function SearchService($q) {
  var service = this;

  /**
   * @param {string} query
   * @param {int} limit
   * @param {int} start
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function(query, limit, start) {
    return $q.resolve({
      '@context': 'http://www.w3.org/ns/hydra/context.jsonld',
      '@type': 'PagedCollection',
      'itemsPerPage': 10,
      'totalItems': 0,
      'member': [],
      'firstPage': 'http://du.de/items?page=1',
      'lastPage': 'http://du.de/items?page=1',
      'nextPage': 'http://du.de/items?page=1'
    });
  };
}
SearchService.$inject = ["$q"];
})();

// Source: src/management/users/user-editor.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} RoleAction
 * @property {Role} item
 * @property {ActionCallback} perform
 *  The API action that has to be performed for this action.
 */

/**
 * @callback ActionCallback
 * @param {Promise.<UserRoleJob>} job
 */

/**
 * @ngdoc function
 * @name udbApp.controller:UserEditorController
 * @description
 * # UserEditorController
 */
angular
  .module('udb.management.users')
  .controller('UserEditorController', UserEditorController);

/* @ngInject */
function UserEditorController(UserManager, RoleManager, $stateParams, $q) {
  var editor = this;
  var userId = $stateParams.id;

  loadUser(userId);

  function loadUser(userId) {
    UserManager
      .get(userId)
      .then(showUser);

    UserManager
      .getRoles(userId)
      .then(showUserRoles);
  }

  /**
   * @param {User} user
   */
  function showUser(user) {
    editor.user = user;
  }

  /**
   * @param {Role[]} roles
   */
  function showUserRoles(roles) {
    editor.roles = roles;
  }

  /**
   * @param {Role} role
   */
  editor.deleteRole = function (role) {
    var deleteRoleAction = {
      role: role,
      style: 'list-group-item-danger',
      perform: _.once(function () {
        return RoleManager
          .removeUserFromRole(role, editor.user)
          .then(returnTaskPromise);
      }),
      undo: function () {
        console.log('¯\\_(ツ)_/¯');
      }
    };

    editor.queueAction(deleteRoleAction);
  };

  function returnTaskPromise(job) {
    return $q.when(job.task.promise);
  }

  /**
   * @param {RoleAction} action
   */
  editor.queueAction = function (action) {
    var currentActions = editor.actions ? editor.actions : [];

    if (!editor.getRoleAction(action.role)) {
      currentActions.push(action);
      editor.actions = currentActions;
    }
  };

  /**
   * @param {Role} role
   */
  editor.getRoleStyle = function(role) {
    var action = editor.getRoleAction(role);

    return action ? action.style : null;
  };

  /**
   * @param {Role} role
   */
  editor.getRoleAction =  function (role) {
    return _.find(editor.actions, {
      role: {
        uuid: role.uuid
      }
    });
  };

  /**
   * @param {string} roleName
   * @return {Promise.<Role[]>}
   */
  editor.lookupRoles = function (roleName) {
    return RoleManager
      .find(roleName, 20)
      .then(function (pagedRoleCollection) {
        return _.reject(pagedRoleCollection.member, function (role) {
          return _.find(editor.roles, {uuid: role.uuid});
        });
      });
  };

  /**
   * @param {Role} role
   */
  editor.addRole = function (role) {
    if (_.find(editor.roles, {uuid: role.uuid})) {
      return; // do nothing when the user already has the role
    }

    editor.roles.push(role);
    editor.roleLookupName = '';

    var addRoleAction = {
      role: role,
      style: 'list-group-item-success',
      perform: _.once(function () {
        return RoleManager
          .addUserToRole(editor.user, role)
          .then(returnTaskPromise);
      }),
      undo: function () {
        editor.roles = _.reject(editor.roles, {uuid: role.uuid});
      }
    };

    editor.queueAction(addRoleAction);
  };

  editor.save = function() {
    editor.saving = true;
    var actionPromises = _.map(editor.actions, performAction);

    $q.all(actionPromises)
      .then(function () {
        loadUser(userId);
        editor.saving = false;
        editor.actions = [];
      });
  };

  /**
   * @param {RoleAction} action
   */
  function performAction(action) {
    return action
      .perform()
      .catch(action.undo);
  }

  /**
   * @param {Role} role
   */
  editor.undoAction = function(role) {
    var action = editor.getRoleAction(role);
    action.undo();

    editor.actions = _.reject(
      editor.actions,
      {
        role: {
          uuid: role.uuid
        }
      }
    );
  };
}
UserEditorController.$inject = ["UserManager", "RoleManager", "$stateParams", "$q"];
})();

// Source: src/management/users/user-manager.service.js
(function () {
'use strict';

/**
 * @typedef {Object} User
 * @property {string}   uuid
 * @property {string}   email
 * @property {string}   username
 */

/**
 * @ngdoc service
 * @name udb.management.users
 * @description
 * # User Manager
 * This service allows you to lookup users and perform actions on them.
 */
angular
  .module('udb.management.users')
  .service('UserManager', UserManager);

/* @ngInject */
function UserManager(udbApi, $q) {
  var service = this;

  /**
   * @param {string} email
   *  A valid email address with a specific domain. The wildcard '*' can be used in the local part.
   * @param {int} limit
   * @param {int} start
   *
   * @return {Promise.<PagedCollection>}
   */
  service.find = function (email, limit, start) {
    return udbApi.findUsersByEmail(email, limit, start);
  };

  /**
   * @param {string} email
   *
   * @returns {Promise}
   *
   */
  service.findUserWithEmail = function(email) {
    return udbApi.findUserWithEmail(email);
  };

  /**
   * @param {string} userId
   *
   * @returns {Promise.<User>}
   */
  service.get = function(userId) {
    return udbApi.getUser(userId);
  };

  /**
   * @param {string} userId
   *
   * @return {Promise.<Role[]>}
   */
  service.getRoles = function (userId) {
    return udbApi.getUserRoles(userId);
  };
}
UserManager.$inject = ["udbApi", "$q"];
})();

// Source: src/management/users/user-role-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.management.users.UserRoleJob
 * @description
 * # User Role Job
 * This Is the factory that creates a user role job
 */
angular
  .module('udb.management.users')
  .factory('UserRoleJob', UserRoleJobFactory);

/* @ngInject */
function UserRoleJobFactory(BaseJob, JobStates, $q) {

  /**
   * @class UserRoleJob
   * @constructor
   * @param {string} commandId
   * @param {User} user
   * @param {Role} role
   */
  var UserRoleJob = function (commandId, user, role) {
    BaseJob.call(this, commandId);

    this.role = role;
    this.user = user;
    this.task = $q.defer();
  };

  UserRoleJob.prototype = Object.create(BaseJob.prototype);
  UserRoleJob.prototype.constructor = UserRoleJob;

  UserRoleJob.prototype.finish = function () {
    BaseJob.prototype.finish.call(this);

    if (this.state !== JobStates.FAILED) {
      this.task.resolve();
    }
  };

  UserRoleJob.prototype.fail = function () {
    BaseJob.prototype.fail.call(this);

    this.task.reject();
  };

  UserRoleJob.prototype.getDescription = function () {
    var job = this,
      description;

    var failedDescriptionTemplate = _.template(
      'Het toekennen of verwijderen van de rol: "${role.name}" is mislukt voor "${user.username}".'
    );
    var descriptionTemplate = _.template(
      'Toevoegen of verwijderen van de rol: "${role.name}" voor gebruiker "${user.username}".'
    );

    if (this.state === JobStates.FAILED) {
      description = failedDescriptionTemplate(job);
    } else {
      description = descriptionTemplate(job);
    }

    return description;
  };

  return (UserRoleJob);
}
UserRoleJobFactory.$inject = ["BaseJob", "JobStates", "$q"];
})();

// Source: src/management/users/users-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:UsersListController
 * @description
 * # UsersListController
 */
angular
  .module('udb.management.users')
  .controller('UsersListController', UsersListController);

/* @ngInject */
function UsersListController(SearchResultGenerator, rx, $scope, UserManager, $uibModal, $state, $document) {
  var ulc = this;

  var itemsPerPage = 20;
  var minQueryLength = 3;

  ulc.query = '';
  ulc.problem = false;
  ulc.loading = true;
  ulc.query = '';
  ulc.page = 0;
  ulc.minQueryLength = minQueryLength;

  var query$ = rx.createObservableFunction(ulc, 'queryChanged');
  var filteredQuery$ = query$.filter(ignoreShortQueries);
  var page$ = rx.createObservableFunction(ulc, 'pageChanged');
  var searchResultGenerator = new SearchResultGenerator(UserManager, filteredQuery$, page$, itemsPerPage);
  var searchResult$ = searchResultGenerator.getSearchResult$();

  /**
   * @param {string} query
   * @return {boolean}
   */
  function ignoreShortQueries(query) {
    if (ulc.query === '') {
      return true;
    }
    else {
      return query.length >= minQueryLength;
    }
  }

  /**
   * @param {ApiProblem} problem
   */
  function showProblem(problem) {
    ulc.problem = problem;
  }

  function clearProblem()
  {
    ulc.problem = false;
  }

  /**
   * @param {(PagedCollection|ApiProblem)} searchResult
   */
  function showSearchResult(searchResult) {
    var problem = searchResult.error;

    if (problem) {
      showProblem(problem);
      ulc.searchResult = {};
    } else {
      clearProblem();
      ulc.searchResult = searchResult;
    }

    ulc.loading = false;
  }

  function openDeleteConfirmModal(user) {
    var modalInstance = $uibModal.open({
        templateUrl: 'templates/user-delete-confirm-modal.html',
        controller: 'UserDeleteConfirmModalCtrl',
        resolve: {
          item: function () {
            return user;
          }
        }
      });
    modalInstance.result.then($state.reload);
  }
  ulc.openDeleteConfirmModal = openDeleteConfirmModal;

  query$
    .safeApply($scope, function (query) {
      ulc.query = query;
    })
    .subscribe();

  searchResult$
    .safeApply($scope, showSearchResult)
    .subscribe();

  filteredQuery$
    .merge(page$)
    .safeApply($scope, function () {
      ulc.loading = true;
    })
    .subscribe();

  page$.subscribe(function () {
    $document.scrollTop(0);
  });
}
UsersListController.$inject = ["SearchResultGenerator", "rx", "$scope", "UserManager", "$uibModal", "$state", "$document"];
})();

// Source: src/media/create-image-job.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.media.CreateImageJob
 * @description
 * # Image creation job
 * This factory creates a job that tracks image creation.
 */
angular
  .module('udb.media')
  .factory('CreateImageJob', CreateImageJobFactory);

/* @ngInject */
function CreateImageJobFactory(BaseJob, JobStates, $q) {

  /**
   * @class CreateImageJob
   * @constructor
   * @param {string} commandId
   */
  var CreateImageJob = function (commandId) {
    BaseJob.call(this, commandId);
    this.task = $q.defer();
  };

  CreateImageJob.prototype = Object.create(BaseJob.prototype);
  CreateImageJob.prototype.constructor = CreateImageJob;

  CreateImageJob.prototype.finish = function () {
    if (this.state !== JobStates.FAILED) {
      this.state = JobStates.FINISHED;
      this.finished = new Date();
    }
    this.progress = 100;
  };

  CreateImageJob.prototype.info = function (jobInfo) {
    this.task.resolve(jobInfo);
  };

  CreateImageJob.prototype.fail = function () {
    this.finished = new Date();
    this.state = JobStates.FAILED;
    this.progress = 100;
    this.task.reject('Failed to create an image object');
  };

  return (CreateImageJob);
}
CreateImageJobFactory.$inject = ["BaseJob", "JobStates", "$q"];
})();

// Source: src/media/media-manager.service.js
(function () {
'use strict';

/**
 * @typedef {Object} MediaObject
 * @property {string}   @id
 * @property {string}   @type
 * @property {string}   contentUrl
 * @property {string}   thumbnailUrl
 * @property {string}   description
 * @property {string}   copyrightHolder
 */

/**
 * @ngdoc function
 * @name udb.media.service:MediaManager
 * @description
 * # MediaManager
 * Service to manage media.
 */
angular
  .module('udb.media')
  .service('MediaManager', MediaManager);

/**
 * @ngInject
 */
function MediaManager(jobLogger, appConfig, CreateImageJob, $q, udbApi) {
  var service = this;

  /**
   * @param {File} imageFile
   * @param {string} description
   * @param {string} copyrightHolder
   *
   * @return {Promise.<MediaObject>}
   */
  service.createImage = function(imageFile, description, copyrightHolder, language) {
    var deferredMediaObject = $q.defer();
    var allowedFileExtensions = ['png', 'jpeg', 'jpg', 'gif'];

    function getFileExtension(filename) {
      return filename.split('/').pop();
    }

    function isAllowedFileExtension(fileExtension) {
      return allowedFileExtensions.indexOf(fileExtension) >= 0;
    }

    function logCreateImageJob(uploadResponse) {
      var jobData = uploadResponse.data;
      var job = new CreateImageJob(jobData  .commandId);
      jobLogger.addJob(job);

      job.task.promise
        .then(fetchAndReturnMedia);
    }

    function fetchAndReturnMedia(jobInfo) {
      var imageId = _.get(jobInfo, 'file_id');
      service
        .getImage(imageId)
        .then(deferredMediaObject.resolve, deferredMediaObject.reject);
    }

    if (!isAllowedFileExtension(getFileExtension(imageFile.type))) {
      deferredMediaObject.reject({
        data: {
          title: 'The uploaded file is not an image.'
        }
      });
    } else {
      udbApi
        .uploadMedia(imageFile, description, copyrightHolder, language)
        .then(logCreateImageJob, deferredMediaObject.reject);
    }

    return deferredMediaObject.promise;
  };

  /**
   * @param {string} imageId
   *
   * @return {Promise.<MediaObject>}
   */
  service.getImage = function (imageId) {
    function returnMediaObject(data) {
      var mediaObject = data;
      mediaObject.id = imageId;

      return $q.resolve(mediaObject);
    }

    return udbApi
      .getMedia(imageId)
      .then(returnMediaObject);
  };
}
MediaManager.$inject = ["jobLogger", "appConfig", "CreateImageJob", "$q", "udbApi"];
})();

// Source: src/migration/event-migration-footer.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.migration.component:udbEventMigrationFooter
 * @description
 * # Event Migration Footer
 * Footer component for migrating events
 */
angular
  .module('udb.migration')
  .component('udbEventMigrationFooter', {
    templateUrl: 'templates/event-migration-footer.component.html',
    controller: EventMigrationFooterController,
    controllerAs: 'migration'
  });

/* @ngInject */
function EventMigrationFooterController(EventFormData, $stateParams, $state) {
  var controller = this;

  controller.completeMigration = completeMigration;
  controller.destination = $stateParams.destination;
  controller.migrationReady = migrationReady;

  function completeMigration () {
    if (migrationReady()) {
      $state.go($stateParams.destination.state, {id: EventFormData.id});
    }
  }

  function migrationReady () {
    return !!_.get(EventFormData, 'location.id');
  }
}
EventMigrationFooterController.$inject = ["EventFormData", "$stateParams", "$state"];
})();

// Source: src/migration/event-migration.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.migration.eventMigration
 * @description
 * Event Migration Service
 */
angular
  .module('udb.migration')
  .service('eventMigration', EventMigrationService);

/* @ngInject */
function EventMigrationService() {
  var service = this;

  var migrationRequirements = {
    location: hasKnownLocation
  };

  /**
   * @param {udbEvent} event
   */
  function hasKnownLocation(event) {
    return !!_.get(event, 'location.id');
  }

  /**
   * @param {udbEvent} event
   *
   * @return string[]
   *  A list of migrations steps needed to meet all requirements.
   */
  service.checkRequirements = function (event) {
    var migrationSteps = _(migrationRequirements)
      .pick(function (requirementCheck) {
        return !requirementCheck(event);
      })
      .keys();

    return migrationSteps.value();
  };

}
})();

// Source: src/offer_translate/components/address/translate.address.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateAddressController
 * @description
 * # TranslateAddressController
 * Controller for the address translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateAddress', {
      templateUrl: 'templates/translate-address.html',
      controller: TranslateAddressController,
      controllerAs: 'tac',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateAddressController(offerTranslator) {
  var controller = this;

  controller.translatedAddresses = {};

  controller.originalAddress = _.get(controller.offer.address, controller.offer.mainLanguage, '') ||
      _.get(controller.offer.address, 'nl', '') ||
      _.get(controller.offer, 'address', '');

  controller.translatedAddresses = _.get(controller.offer, 'address');
  _.forEach(controller.activeLanguages, function(language, key) {
    if (controller.translatedAddresses[key] === undefined) {
      controller.translatedAddresses[key] = {
        postalCode: controller.originalAddress.postalCode,
        addressLocality: controller.originalAddress.addressLocality,
        addressCountry: controller.originalAddress.addressCountry
      };
    }
  });

  controller.saveTranslatedAddress = saveTranslatedAddress;

  function saveTranslatedAddress(language) {

    offerTranslator
        .translateAddress(controller.offer, language, controller.translatedAddresses[language]);
  }
}
TranslateAddressController.$inject = ["offerTranslator"];
})();

// Source: src/offer_translate/components/description/translate-description.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateDescriptionController
 * @description
 * # TranslateDescriptionController
 * Controller for the description translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateDescription', {
      templateUrl: 'templates/translate-description.html',
      controller: TranslateDescriptionController,
      controllerAs: 'ttd',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateDescriptionController(offerTranslator) {
  var controller = this;

  controller.translatedDescriptions = {};
  controller.originalDescription = _.get(controller.offer.description, controller.offer.mainLanguage, '') ||
      _.get(controller.offer.description, 'nl', '') ||
      _.get(controller.offer, 'description', '');
  controller.originalDescription = _.isEmpty(controller.originalDescription) ? '' : controller.originalDescription;

  controller.translatedDescriptions = _.get(controller.offer, 'description');

  controller.saveTranslatedDescription = saveTranslatedDescription;

  function saveTranslatedDescription(language) {
    offerTranslator
        .translateProperty(controller.offer, 'description', language, controller.translatedDescriptions[language])
        .then(function() {
          //
        });
  }
}
TranslateDescriptionController.$inject = ["offerTranslator"];
})();

// Source: src/offer_translate/components/images/translate-images.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateImagesController
 * @description
 * # TranslateImagesController
 * Controller for the images translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateImages', {
      templateUrl: 'templates/translate-images.html',
      controller: TranslateImagesController,
      controllerAs: 'tic',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateImagesController($uibModal, eventCrud, MediaManager, EventFormData) {
  var controller = this;

  EventFormData.init();

  controller.eventFormData = EventFormData;
  if (controller.offer.mediaObject) {
    EventFormData.mediaObjects = controller.offer.mediaObject || [];
  }
  EventFormData.name = controller.offer.name;
  EventFormData.apiUrl = controller.offer.apiUrl;
  EventFormData.mainLanguage = controller.offer.mainLanguage;

  controller.openUploadImageModal = openUploadImageModal;
  controller.removeImage = removeImage;
  controller.editImage = editImage;
  controller.copyImage = copyImage;

  /**
   * Open the upload modal.
   */
  function openUploadImageModal(language) {
    EventFormData.mainLanguage = language;
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-image-upload.html',
      controller: 'EventFormImageUploadController',
      resolve: {
        EventFormData: function () {
          return EventFormData;
        }
      }
    });
  }

  function copyImage(image, language) {
    var blob = null;
    var xhr = new XMLHttpRequest();
    xhr.open('GET', image.contentUrl);
    xhr.responseType = 'blob';
    xhr.onload = function() {
      blob = xhr.response;
      MediaManager
          .createImage(blob, image.description, image.copyrightHolder, language)
          .then(
              addImageToEvent, displayError
          );
    };
    xhr.send();
  }

  /**
   * Open the modal to edit an image of the item.
   *
   * @param {MediaObject} image
   *    The media object of the image to edit.
   */
  function editImage(image) {
    $uibModal.open({
      templateUrl: 'templates/event-form-image-edit.html',
      controller: 'EventFormImageEditController',
      resolve: {
        EventFormData: function () {
          return EventFormData;
        },
        mediaObject: function () {
          return image;
        }
      }
    });
  }

  /**
   * Open the modal to remove an image.
   *
   * @param {MediaObject} image
   * The media object of the image to remove from the item.
   */
  function removeImage(image) {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/event-form-image-remove.html',
      controller: 'EventFormImageRemoveController',
      resolve: {
        EventFormData: function () {
          return EventFormData;
        },
        image: function () {
          return image;
        }
      }
    });
  }

  /**
   * @param {MediaObject} mediaObject
   */
  function addImageToEvent(mediaObject) {
    function updateImageForm() {
      EventFormData.addImage(mediaObject);
    }

    eventCrud
        .addImage(EventFormData, mediaObject)
        .then(updateImageForm, displayError);
  }

  function displayError(errorResponse) {
    var errorMessage = errorResponse.data.title;
    var error = 'Er ging iets mis bij het opslaan van de afbeelding.';

    switch (errorMessage) {
      case 'The uploaded file is not an image.':
        error = 'Het geüpload bestand is geen geldige afbeelding. ' +
            'Enkel bestanden met de extenties .jpeg, .gif of .png zijn toegelaten.';
        break;
      case 'The file size of the uploaded image is too big.':
        error = 'Het geüpload bestand is te groot.';
        break;
    }

    controller.saving = false;
    controller.error = error;
  }
}
TranslateImagesController.$inject = ["$uibModal", "eventCrud", "MediaManager", "EventFormData"];
})();

// Source: src/offer_translate/components/tariffs/translate-tariffs.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateTariffsController
 * @description
 * # TranslateTariffsController
 * Controller for the tariffs translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateTariffs', {
      templateUrl: 'templates/translate-tariffs.html',
      controller: TranslateTariffsController,
      controllerAs: 'ttsc',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateTariffsController(eventCrud) {
  var controller = this;

  controller.translatedTariffs = [];

  controller.originalTariffs = getOriginalTariffs();
  controller.translatedTariffs = getTranslatedTariffs();

  controller.saveTranslatedTariffs = saveTranslatedTariffs;

  function saveTranslatedTariffs() {
    for (var key in controller.offer.priceInfo) {
      if (key > 0) {
        var originalTariff = {};
        originalTariff[controller.offer.mainLanguage] = controller.originalTariffs[key - 1];
        controller.offer.priceInfo[key].name =
            _.merge(originalTariff, controller.translatedTariffs[key - 1]);
      }
    }

    eventCrud.updatePriceInfo(controller.offer);
  }

  function getOriginalTariffs() {
    var originalTariffs = [];
    for (var key in controller.offer.priceInfo) {
      if (key > 0) {
        originalTariffs.push(
            controller.offer.priceInfo[key].name[controller.offer.mainLanguage] ?
                controller.offer.priceInfo[key].name[controller.offer.mainLanguage] :
                controller.offer.priceInfo[key].name);
      }
    }

    return originalTariffs;
  }

  function getTranslatedTariffs() {
    var translatedTariffs = [];
    for (var key in controller.offer.priceInfo) {
      if (key > 0) {
        translatedTariffs.push(controller.offer.priceInfo[key].name);
      }
    }

    return translatedTariffs;
  }
}
TranslateTariffsController.$inject = ["eventCrud"];
})();

// Source: src/offer_translate/components/title/translate-title.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.offer-translate:TranslateTitleController
 * @description
 * # TranslateTitleController
 * Controller for the title translation component
 */
angular
    .module('udb.offer-translate')
    .component('offerTranslateTitle', {
      templateUrl: 'templates/translate-title.html',
      controller: TranslateTitleController,
      controllerAs: 'ttc',
      bindings: {
        offer: '<',
        activeLanguages: '<'
      }
    });

/* @ngInject */
function TranslateTitleController(offerTranslator) {
  var controller = this;

  controller.translatedNames = {};
  controller.originalName = _.get(controller.offer.name, controller.offer.mainLanguage, null) ||
      _.get(controller.offer.name, 'nl', null) ||
      _.get(controller.offer, 'name', '');

  controller.translatedNames = _.get(controller.offer, 'name');

  controller.saveTranslatedName = saveTranslatedName;

  function saveTranslatedName(language) {
    offerTranslator
        .translateProperty(controller.offer, 'name', language, controller.translatedNames[language])
        .then(function() {
          //
        });
  }
}
TranslateTitleController.$inject = ["offerTranslator"];
})();

// Source: src/offer_translate/offer-translate.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:OfferTranslateController
 * @description
 * # OffertranslateController
 * Init the event form
 */
angular
  .module('udb.offer-translate')
  .controller('OfferTranslateController', OfferTranslateController);

/* @ngInject */
function OfferTranslateController(
    $scope,
    offerId,
    udbApi,
    jsonLDLangFilter,
    $q,
    $translate,
    $state
) {

  $scope.apiUrl = '';
  $scope.loaded = false;
  $scope.mainLanguage = '';
  $scope.languages = ['nl', 'fr', 'en', 'de'];
  $scope.activeLanguages = {
    'nl': {'active': false, 'main': false},
    'fr': {'active': false, 'main': false},
    'en': {'active': false, 'main': false},
    'de': {'active': false, 'main': false}
  };

  // Functions
  $scope.openEditPage = openEditPage;
  $scope.goToDashboard = goToDashboard;

  $q.when(offerId)
    .then(fetchOffer, offerNotFound);

  function startTranslating(offer) {
    $scope.language = $translate.use() || 'nl';
    $scope.cachedOffer = offer;
    $scope.apiUrl = offer.apiUrl;
    $scope.mainLanguage = offer.mainLanguage ? offer.mainLanguage : 'nl';
    $scope.translatedOffer = jsonLDLangFilter(offer, $scope.language, true);
    $scope.originalName = $scope.translatedOffer.name;

    $scope.offerType = offer.url.split('/').shift();
    if ($scope.offerType === 'event') {
      $scope.isEvent = true;
      $scope.isPlace = false;
    } else {
      $scope.isEvent = false;
      $scope.isPlace = true;
    }

    _.forEach($scope.cachedOffer.name, function(name, language) {
      $scope.activeLanguages[language].active = true;
    });

    $scope.activeLanguages[$scope.mainLanguage].main = true;

    $scope.loaded = true;
  }

  function offerNotFound() {
    console.log('offer not found');
  }

  /**
   * @param {string|null} offerId
   */
  function fetchOffer(offerId) {
    if (!offerId) {
      offerNotFound();
    } else {
      udbApi
        .getOffer(offerId)
        .then(startTranslating);
    }
  }

  function openEditPage() {
    var offerLocation = $scope.cachedOffer.id.toString();
    var id = offerLocation.split('/').pop();
    $state.go('split.eventEdit', {id: id});
  }

  function goToDashboard() {
    $state.go('split.footer.dashboard');
  }
}
OfferTranslateController.$inject = ["$scope", "offerId", "udbApi", "jsonLDLangFilter", "$q", "$translate", "$state"];
})();

// Source: src/offer_translate/offer-translate.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:offer-translate.html
 * @description
 * # udb offer translate directive
 */
angular
  .module('udb.offer-translate')
  .directive('udbOfferTranslate', OfferTranslateDirective);

/* @ngInject */
function OfferTranslateDirective() {
  return {
    templateUrl: 'templates/offer-translate.html',
    restrict: 'EA',
  };
}
})();

// Source: src/place-detail/place-detail.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.place-detail.directive:place-detail.html
 * @description
 * # udb place-detail directive
 */
angular
  .module('udb.place-detail')
  .directive('udbPlaceDetail', udbPlaceDetailDirective);

/* @ngInject */
function udbPlaceDetailDirective() {
  return {
    templateUrl: 'templates/place-detail.html',
    restrict: 'EA',
    controller: PlaceDetail // jshint ignore:line
  };
}
})();

// Source: src/place-detail/ui/place-detail.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.place-detail.controller:PlaceDetailController
 * @description
 * # PlaceDetailController
 * Place Detail controller
 */
angular
    .module('udb.place-detail')
    .controller('PlaceDetailController', PlaceDetail);

/* @ngInject */
function PlaceDetail(
  $scope,
  placeId,
  udbApi,
  $state,
  jsonLDLangFilter,
  variationRepository,
  offerEditor,
  eventCrud,
  $uibModal,
  $q,
  $window,
  offerLabeller,
  appConfig,
  $translate
) {
  var activeTabId = 'data';
  var controller = this;
  var disableVariations = _.get(appConfig, 'disableVariations');
  var language = $translate.use() || 'nl';

  $q.when(placeId, function (offerLocation) {
    $scope.placeId = offerLocation;

    var offer = udbApi.getOffer(offerLocation);
    var permission = udbApi.hasPermission(offerLocation);

    offer.then(showOffer, failedToLoad);

    $q.all([permission, offer])
      .then(grantPermissions, denyAllPermissions);

    permission.catch(denyAllPermissions);
  });

  function grantPermissions() {
    $scope.permissions = {editing: true};
  }

  function denyAllPermissions() {
    $scope.permissions = {editing: false};
  }

  $scope.placeIdIsInvalid = false;

  // labels scope variables and functions
  $scope.labelAdded = labelAdded;
  $scope.labelRemoved = labelRemoved;
  $scope.labelResponse = '';
  $scope.labelsError = '';
  $scope.finishedLoading = false;

  $scope.placeHistory = [];
  $scope.tabs = [
    {
      id: 'data'
    },
    {
      id: 'publication'
    }
  ];
  $scope.deletePlace = function () {
    openPlaceDeleteConfirmModal($scope.place);
  };

  $scope.language = language;
  var cachedPlace;

  function showOffer(place) {
    cachedPlace = place;

    $scope.place = jsonLDLangFilter(place, language, true);
    $scope.placeIdIsInvalid = false;

    if (typeof $scope.place.description === 'object') {
      $scope.place.description = $scope.place.description[language];
      if ($scope.place.description === undefined) {
        $scope.place.description = '';
      }
    }

    if (!disableVariations) {
      variationRepository
        .getPersonalVariation(place)
        .then(showVariation);
    }

    $scope.finishedLoading = true;
  }

  function showVariation(variation) {
    $scope.place.description = variation.description[language];
  }

  function failedToLoad(reason) {
    $scope.placeIdIsInvalid = true;
  }

  $scope.placeLocation = function (place) {

    if (place.address.addressLocality) {
      return place.address.addressLocality;
    }

    return '';
  };

  $scope.isTabActive = function (tabId) {
    return tabId === activeTabId;
  };

  $scope.makeTabActive = function (tabId) {
    activeTabId = tabId;
  };

  $scope.openEditPage = function() {
    var placeLocation = $scope.placeId.toString();
    var id = placeLocation.split('/').pop();

    $state.go('split.placeEdit', {id: id});
  };

  $scope.openTranslatePage = function() {
    var placeLocation = $scope.placeId.toString();
    var id = placeLocation.split('/').pop();

    $state.go('split.placeTranslate', {id: id});
  };

  $scope.updateDescription = function(description) {
    if ($scope.place.description !== description) {
      var updatePromise = offerEditor.editDescription(cachedPlace, description);

      updatePromise.finally(function () {
        if (!description) {
          $scope.place.description = cachedPlace.description[language];
        }
      });

      return updatePromise;
    }
  };

  function goToDashboard() {
    $state.go('split.footer.dashboard');
  }

  /**
   * @param {EventCrudJob} job
   */
  controller.goToDashboardOnJobCompletion = function(job) {
    job.task.promise
      .then(goToDashboard);
  };

  function openPlaceDeleteConfirmModal(item) {

    function displayModal(place, events) {
      var modalInstance = $uibModal.open({
        templateUrl: 'templates/place-delete-confirm-modal.html',
        controller: 'PlaceDeleteConfirmModalCtrl',
        resolve: {
          place: function () {
            return place;
          },
          events: function () {
            return events;
          }
        }
      });

      modalInstance.result
        .then(controller.goToDashboardOnJobCompletion);
    }

    // Check if this place has planned events.
    eventCrud
      .findEventsAtPlace(item.apiUrl)
      .then(function(events) {
        displayModal(item, events);
      });
  }

  /**
   * @param {Label} newLabel
   */
  function labelAdded(newLabel) {
    var similarLabel = _.find(cachedPlace.labels, function (label) {
      return newLabel.name.toUpperCase() === label.toUpperCase();
    });

    if (similarLabel) {
      $window.alert('Het label "' + newLabel.name + '" is reeds toegevoegd als "' + similarLabel + '".');
    } else {
      offerLabeller.label(cachedPlace, newLabel.name)
        .then(function(response) {
          if (response.success) {
            $scope.labelResponse = 'success';
            $scope.addedLabel = response.name;
          }
          else {
            $scope.labelResponse = 'error';
            $scope.labelsError = response;
          }
          $scope.place.labels = angular.copy(cachedPlace.labels);
        });
    }
  }

  function clearLabelsError() {
    $scope.labelResponse = '';
    $scope.labelsError = '';
  }

  /**
   * @param {ApiProblem} problem
   */
  function showUnlabelProblem(problem) {
    $scope.place.labels = angular.copy(cachedPlace.labels);
    $scope.labelResponse = 'unlabelError';
    $scope.labelsError = problem.title;
  }

  /**
   * @param {Label} label
   */
  function labelRemoved(label) {
    clearLabelsError();

    offerLabeller
      .unlabel(cachedPlace, label.name)
      .catch(showUnlabelProblem);
  }

  $scope.translateType = function (type) {
    // Work around for III-2695
    var translatedString = $translate.instant('offerTypes.' + type);
    if (_.includes(translatedString, 'offerTypes.')) {
      return type;
    }
    else {
      return translatedString;
    }
  };
}
PlaceDetail.$inject = ["$scope", "placeId", "udbApi", "$state", "jsonLDLangFilter", "variationRepository", "offerEditor", "eventCrud", "$uibModal", "$q", "$window", "offerLabeller", "appConfig", "$translate"];
})();

// Source: src/router/offer-locator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udbApp.OfferLocator
 * @description
 * Index and locate offers by UUID.
 */
angular.module('udb.router')
  .service('offerLocator', OfferLocator);

/* @ngInject */
function OfferLocator($q, searchApiSwitcher) {
  // An associative array with UUIDs pointing to locations.
  // eg: 0586DF1-89D7-42F6-9804-DAE8878C2617 -> http://du.de/event/0586DF1-89D7-42F6-9804-DAE8878C2617
  var locations = {};

  // public methods
  this.get = get;
  this.add = add;
  this.addPagedCollection = addPagedCollection;

  /**
   * @param {string} uuid
   * @param {URL} location
   */
  function add(uuid, location) {
    locations[uuid] = location;
  }

  /**
   * @param {PagedCollection} offerCollection
   */
  function addPagedCollection(offerCollection) {
    _.each(offerCollection.member, function (item) {
      var offerLocation = item['@id'];
      var offerUuid = offerLocation.split('/').pop();
      add(offerUuid, offerLocation);
    });
  }

  /**
   * @param {string} uuid
   * @return {Promise.<URL>}
   */
  function get(uuid) {
    var knownLocation = locations[uuid];

    if (knownLocation) {
      return $q.resolve(knownLocation);
    } else {
      return findLocation(uuid);
    }
  }

  /**
   * @param {string} uuid
   * @return {Promise.<URL>}
   */
  function findLocation(uuid) {
    var deferredLocation = $q.defer();

    function cacheAndResolveLocation(pagedSearchResults) {
      if (pagedSearchResults.totalItems === 1) {
        var location = pagedSearchResults.member[0]['@id'];
        add(uuid, location);
        deferredLocation.resolve(location);
      } else {
        deferredLocation.reject('Unable to determine the exact offer for this uuid.');
      }
    }

    var queryString = 'cdbid:"' + uuid + '"';
    if (searchApiSwitcher.getApiVersion() > 2) {
      queryString = 'id:"' + uuid + '"';
    }

    searchApiSwitcher
      .findOffers(queryString)
      .then(cacheAndResolveLocation)
      .catch(deferredLocation.reject);

    return deferredLocation.promise;
  }
}
OfferLocator.$inject = ["$q", "searchApiSwitcher"];
})();

// Source: src/saved-searches/components/delete-search-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.entry.controller:DeleteSearchModalController
 * @description
 * # DeleteSearchModalController
 * Controller of the udb.entry
 */
angular
  .module('udb.saved-searches')
  .controller('DeleteSearchModalController', DeleteSearchModalController);

/* @ngInject */
function DeleteSearchModalController($scope, $uibModalInstance) {

  var confirm = function () {
    $uibModalInstance.close();
  };

  var cancel = function () {
    $uibModalInstance.dismiss('cancel');
  };

  $scope.cancel = cancel;
  $scope.confirm = confirm;
}
DeleteSearchModalController.$inject = ["$scope", "$uibModalInstance"];
})();

// Source: src/saved-searches/components/save-search-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.entry.controller:SaveSearchModalController
 * @description
 * # SaveSearchModalController
 * Controller of the udb.entry
 */
angular
  .module('udb.saved-searches')
  .controller('SaveSearchModalController', SaveSearchModalController);

/* @ngInject */
function SaveSearchModalController($scope, $uibModalInstance) {

  var ok = function () {
    var name = $scope.queryName;
    $scope.wasSubmitted = true;

    if (name) {
      $uibModalInstance.close(name);
    }
  };

  var cancel = function () {
    $uibModalInstance.dismiss('cancel');
  };

  $scope.cancel = cancel;
  $scope.ok = ok;
  $scope.queryName = '';
  $scope.wasSubmitted = false;
}
SaveSearchModalController.$inject = ["$scope", "$uibModalInstance"];
})();

// Source: src/saved-searches/components/save-search.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.savedSearches.directive:udbSaveSearch
 * @description
 * # udbSaveSearch
 */
angular
  .module('udb.saved-searches')
  .directive('udbSaveSearch', udbSaveSearch);

/* @ngInject */
function udbSaveSearch(savedSearchesService, $uibModal) {
  var directive = {
    link: link,
    templateUrl: 'templates/save-search.directive.html',
    restrict: 'AE',
    scope: {
      queryString: '=udbQueryString'
    }
  };
  return directive;

  function link(scope, element, attrs, controllers) {
    scope.saveSearch = function () {
      var modal = $uibModal.open({
        templateUrl: 'templates/save-search-modal.html',
        controller: 'SaveSearchModalController'
      });

      modal.result.then(function (name) {
        savedSearchesService
          .createSavedSearch(name, scope.queryString)
          .catch(displayErrorModal);
      });
    };
  }

  function displayErrorModal() {
    $uibModal.open(
      {
        templateUrl: 'templates/unexpected-error-modal.html',
        controller: 'UnexpectedErrorModalController',
        size: 'lg',
        resolve: {
          errorMessage: function() {
            return 'Het opslaan van de zoekopdracht is mislukt. Controleer de verbinding en probeer opnieuw.';
          }
        }
      }
    );
  }
}
udbSaveSearch.$inject = ["savedSearchesService", "$uibModal"];
})();

// Source: src/saved-searches/udb.saved-searches.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.saved-searches.savedSearchesService
 * @description
 * # savedSearchesService
 * Service in udb.saved-searches.
 */
angular
  .module('udb.saved-searches')
  .service('savedSearchesService', SavedSearchesService);

/* @ngInject */
function SavedSearchesService($q, $http, appConfig, $rootScope, udbApi) {
  var apiUrl = appConfig.baseUrl;
  var defaultApiConfig = {
    withCredentials: true,
    headers: {
      'Content-Type': 'application/json'
    }
  };
  var savedSearches = [];
  var ss = this;

  ss.createSavedSearch = function(name, query) {
    return udbApi.createSavedSearch(name, query).then(function () {
      savedSearches.push({'name': name, 'query': query});
      savedSearchesChanged();

      return $q.resolve();
    });
  };

  ss.getSavedSearches = function () {
    return udbApi.getSavedSearches().then(function (data) {
      savedSearches = data;
      return $q.resolve(data);
    });
  };

  ss.deleteSavedSearch = function (searchId) {
    return udbApi.deleteSavedSearch(searchId).then(function () {
      _.remove(savedSearches, {id: searchId});
      savedSearchesChanged();

      return $q.resolve();
    });
  };

  function savedSearchesChanged () {
    $rootScope.$emit('savedSearchesChanged', savedSearches);
  }
}
SavedSearchesService.$inject = ["$q", "$http", "appConfig", "$rootScope", "udbApi"];

})();

// Source: src/saved-searches/ui/saved-searches-list.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.saved-searches-list.controller:SavedSearchesListController
 * @description
 * # SavedSearchesListController
 * Saved searches list controller
 */
angular
  .module('udb.saved-searches')
  .controller('SavedSearchesListController', SavedSearchesList);

/* @ngInject */
function SavedSearchesList($scope, savedSearchesService, $uibModal, $rootScope) {

  $scope.savedSearches = [];

  $scope.editorOptions = {
    mode: 'solr',
    lineWrapping: true,
    readOnly: true
  };

  $scope.codemirrorLoaded = function(editorInstance) {
    editorInstance.on('focus', function () {
      editorInstance.execCommand('selectAll');
    });

    editorInstance.on('blur', function() {
      editorInstance.setCursor(0, 0, true);
    });
  };

  // get the current saved searches and watch for changes
  var savedSearchesPromise = savedSearchesService.getSavedSearches();
  savedSearchesPromise.then(function (savedSearches) {
    $scope.savedSearches = savedSearches;
  });
  $rootScope.$on('savedSearchesChanged', function (event, savedSearches) {
    $scope.savedSearches = savedSearches;
  });

  this.deleteSavedSearch = function(searchId) {
    var modal = $uibModal.open({
      templateUrl: 'templates/delete-search-modal.html',
      controller: 'DeleteSearchModalController'
    });

    modal.result.then(function () {
      var savedSearchPromise = savedSearchesService.deleteSavedSearch(searchId);

      savedSearchPromise
        .catch(function() {
          var modalInstance = $uibModal.open({
            templateUrl: 'templates/unexpected-error-modal.html',
            controller: 'UnexpectedErrorModalController',
            size: 'lg',
            resolve: {
              errorMessage: function() {
                return 'Het verwijderen van de zoekopdracht is mislukt. Controleer de verbinding en probeer opnieuw.';
              }
            }
          });
        });
    });
  };

  $scope.deleteSavedSearch = this.deleteSavedSearch;
}
SavedSearchesList.$inject = ["$scope", "savedSearchesService", "$uibModal", "$rootScope"];
})();

// Source: src/search/components/event-link.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEventLink
 * @description
 *  Renders a link for an event.
 */
angular
  .module('udb.event-form')
  .directive('udbEventLink', udbEventLink);

/* @ngInject */
function udbEventLink() {
  var eventLinkDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'eventCtrl',
    templateUrl: 'templates/event-link.directive.html'
  };

  return eventLinkDirective;
}
})();

// Source: src/search/components/label-select.component.js
(function () {
'use strict';

angular
  .module('udb.search')
  .component('udbLabelSelect', {
    templateUrl: 'templates/label-select.html',
    controller: LabelSelectComponent,
    controllerAs: 'select',
    bindings: {
      labels: '<',
      labelAdded: '&',
      labelRemoved: '&'
    }
  });

/** @ngInject */
function LabelSelectComponent(offerLabeller, $q) {
  var select = this;
  /** @type {Label[]} */
  select.availableLabels = [];
  select.suggestLabels = suggestLabels;
  select.createLabel = createLabel;
  select.areLengthCriteriaMet = areLengthCriteriaMet;
  select.areContentCriteriaMet = areContentCriteriaMet;
  /** @type {Label[]} */
  select.labels = objectifyLabels(select.labels);
  select.minimumInputLength = 2;
  select.maxInputLength = 50;
  select.currentLabel = '';
  select.onSelect = onSelect;
  select.onRemove = onRemove;

  select.$onChanges = updateLabels;

  /**
   * @param {Object} bindingChanges
   * @see https://code.angularjs.org/1.5.9/docs/guide/component
   */
  function updateLabels(bindingChanges) {
    select.labels = objectifyLabels(_.get(bindingChanges, 'labels.currentValue', select.labels));
  }

  select.regex = /^([a-zA-Z0-9ŠŽšœžŸÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ]{1}[a-zA-Z0-9ŠŽšœžŸÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ_-\s]+)$/;

  function onSelect(item) {
    select.currentLabel = '';
    select.labelAdded({label: item});
    select.labels.push(item);
  }

  function onRemove(label) {
    select.currentLabel = '';
    select.labelRemoved({label: label});
    select.labels = _.without(select.labels, label);
  }

  /**
   * @param {string[]|Label[]} labels
   * @return {Label[]}
   */
  function objectifyLabels(labels) {
    return _.map(select.labels, function (label) {
      return _.isString(label) ? {name:label} : label;
    });
  }

  function areLengthCriteriaMet(length) {
    return (length >= select.minimumInputLength && length <= select.maxInputLength);
  }

  function areContentCriteriaMet(labelName) {
    return select.regex.test(labelName);
  }

  function createLabel(labelName) {
    if (areContentCriteriaMet(labelName)) {

      var similarLabel = _.find(select.labels, function (existingLabel) {
        return existingLabel.name.toUpperCase() === labelName.toUpperCase();
      });
      if (!similarLabel && select.areLengthCriteriaMet(labelName.length) && select.areContentCriteriaMet(labelName)) {
        return {name:labelName};
      }
    }

  }

  function findSuggestions(name) {
    return offerLabeller
      .getSuggestions(name, 6)
      .then(function(labels) {
        labels.push({name: name});
        return setAvailableLabels(labels);
      });
  }

  function suggestLabels(name) {
    if (areContentCriteriaMet(name)) {
      setAvailableLabels([]);
      return findSuggestions(name);
    } else {
      setAvailableLabels([]);
    }
  }

  /** @param {Label[]} labels */
  function setAvailableLabels(labels) {
    select.availableLabels = _.chain(labels)
      .filter(function(label) {
        return areContentCriteriaMet(label.name);
      })
      .reject(function(label) {
        return _.find(select.labels, {'name': label.name});
      })
      .uniq(function (label) {
        return label.name.toUpperCase();
      })
      .value();
    return select.availableLabels;
  }
}
LabelSelectComponent.$inject = ["offerLabeller", "$q"];
})();

// Source: src/search/components/offer-accessibility-info.component.js
(function () {
'use strict';

angular
  .module('udb.search')
  .component('udbOfferAccessibilityInfo', {
    templateUrl: 'templates/offer-accessibility-info.component.html',
    controller: AccessibilityInfoController,
    bindings: {
      'offerType': '<',
      'offer': '='
    }
  });

/* @ngInject */
function AccessibilityInfoController(facilities, $uibModal) {
  var controller = this;

  controller.changeFacilities = function () {
    var modalInstance = $uibModal.open({
      templateUrl: 'templates/search-facilities-modal.html',
      controller: 'SearchFacilitiesModalController',
      resolve: {
        offer: function () {
          return controller.offer;
        },
        facilities: function () {
          return 'place' === controller.offerType ? _.pick(facilities, 'place') : _.omit(facilities, 'place');
        }
      }
    });
  };
}
AccessibilityInfoController.$inject = ["facilities", "$uibModal"];
})();

// Source: src/search/components/query-editor-daterangepicker.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbQueryEditorDaterangepicker
 * @description
 * # udbQueryEditorDaterangepicker
 */
angular
  .module('udb.search')
  .directive('udbQueryEditorDaterangepicker', udbQueryEditorDaterangepicker);

/* @ngInject */
function udbQueryEditorDaterangepicker($translate, uibDatepickerPopupConfig) {
  return {
    templateUrl: 'templates/query-editor-daterangepicker.directive.html',
    restrict: 'E',
    link: function postLink(scope, element, attrs) {

      var dateRangePicker = {
        startOpened: false,
        endOpened: false,
        dateFormat: 'dd/MM/yyyy'
      };

      $translate(['datepicker.CURRENT', 'datepicker.CLEAR', 'datepicker.CLOSE']).then(function (translations) {
        uibDatepickerPopupConfig.currentText = translations['datepicker.CURRENT'];
        uibDatepickerPopupConfig.clearText = translations['datepicker.CLEAR'];
        uibDatepickerPopupConfig.closeText = translations['datepicker.CLOSE'];
      });

      dateRangePicker.openStart = function ($event) {
        $event.preventDefault();
        $event.stopPropagation();

        dateRangePicker.startOpened = true;
        dateRangePicker.endOpened = false;
      };

      dateRangePicker.openEnd = function ($event) {
        $event.preventDefault();
        $event.stopPropagation();

        dateRangePicker.startOpened = false;
        dateRangePicker.endOpened = true;
      };

      scope.drp = dateRangePicker;
    }
  };
}
udbQueryEditorDaterangepicker.$inject = ["$translate", "uibDatepickerPopupConfig"];

angular
  .module('udb.search')
  .directive('datepickerPopup', datepickerPopup);

/* @ngInject */
function datepickerPopup() {
  return {
    restrict: 'EAC',
    require: 'ngModel',
    link: function (scope, element, attr, controller) {
      //remove the default formatter from the input directive to prevent conflict
      controller.$formatters.shift();
    }
  };
}
})();

// Source: src/search/components/query-editor-field.controller.js
(function () {
'use strict';

/**
 * @ngdoc controller
 * @name udb.search.controller:QueryEditorField
 * @description
 * # QueryEditorFieldController
 */
angular
  .module('udb.search')
  .controller('QueryEditorFieldController', QueryEditorFieldController);

/* @ngInject */
function QueryEditorFieldController($scope) {

  function getParentGroup() {
    var parentGroup;

    if (isSubGroup()) {
      parentGroup = $scope.$parent.field;
    } else {
      parentGroup = $scope.rootGroup;
    }

    return parentGroup;
  }

  function getOperatorClass() {
    var operatorClass;
    if (isSubGroup() && $scope.$index === 0) {
      operatorClass = 'AND';
    } else {
      operatorClass = $scope.$index ? 'OR' : 'FIRST';
    }

    return operatorClass;
  }

  function isSubGroup() {
    var parentGroup = $scope.$parent;
    return parentGroup.field.type === 'group';
  }

  function canRemoveField() {
    var group = $scope.rootGroup;
    return (group.nodes.length > 1);
  }

  $scope.addField = function (index) {
    $scope.qe.addField(getParentGroup(), index);
  };

  $scope.removeField = function (index) {
    $scope.qe.removeField(getParentGroup(), index, $scope.rootGroup);
  };

  $scope.addSubGroup = function (index) {
    var rootGroup = $scope.rootGroup,
      treeGroupId = _.uniqueId(),
      group = getParentGroup();

    group.treeGroupId = treeGroupId;

    if (isSubGroup()) {
      index = _.findIndex(rootGroup.nodes, function (group) {
        return group.treeGroupId === treeGroupId;
      });
    }

    $scope.qe.addSubGroup(rootGroup, index);
  };

  $scope.isSubGroup = isSubGroup;
  $scope.getOperatorClass = getOperatorClass;
  $scope.canRemoveField = canRemoveField;
}
QueryEditorFieldController.$inject = ["$scope"];
})();

// Source: src/search/components/query-editor-field.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbQueryEditorField
 * @description
 * # udbQueryEditorField
 */
angular
  .module('udb.search')
  .directive('udbQueryEditorField', udbQueryEditorField);

/* @ngInject */
function udbQueryEditorField(searchApiSwitcher) {
  return searchApiSwitcher.getQueryEditorFieldDefinition();
}
udbQueryEditorField.$inject = ["searchApiSwitcher"];
})();

// Source: src/search/components/query-editor.controller.js
(function () {
'use strict';

/**
 * @typedef {Object} OfferType
 * @property {string} id
 * @property {string} label
 */

/**
 * @ngdoc directive
 * @name udb.search.controller:QueryEditorController
 * @description
 * # QueryEditorController
 */
angular
  .module('udb.search')
  .controller('QueryEditorController', QueryEditorController);

/* @ngInject */
function QueryEditorController(
  queryFields,
  LuceneQueryBuilder,
  taxonomyTerms,
  fieldTypeTransformers,
  searchHelper,
  $translate,
  $rootScope,
  eventTypes,
  placeTypes
) {
  var qe = this,
      queryBuilder = LuceneQueryBuilder;

  qe.fieldOptions = _.filter(queryFields, 'editable');

  // use the first occurrence of a group name to order it against the other groups
  var orderedGroups = _.chain(qe.fieldOptions)
    .map(function (field) {
           return field.group;
         })
    .uniq()
    .value();

  _.forEach(qe.fieldOptions, function (field) {
    var fieldName = 'queryFieldLabel.' + field.name,
        fieldGroup = 'queryFieldGroup.' + field.group;

    $translate([fieldName, fieldGroup]).then(function (translations) {
      field.label = translations[fieldName];
      field.groupIndex = _.indexOf(orderedGroups, field.group);
      field.groupLabel = translations[fieldGroup];
    });
  });

  qe.getDefaultQueryTree = function () {
    return {
      type: 'root',
      nodes: [
        {
          type: 'group',
          operator: 'OR',
          nodes: [
            {
              name: 'title',
              field: 'name.\\*',
              term: '',
              fieldType: 'tokenized-string',
              transformer: '+'
            }
          ]
        }
      ]
    };
  };
  qe.groupedQueryTree = searchHelper.getQueryTree() || qe.getDefaultQueryTree();

  // Holds options for both term and choice query-field types
  qe.transformers = {};
  qe.termOptions = _.groupBy(taxonomyTerms, function (term) {
    return 'category_' + term.domain + '_name';
  });
  qe.termOptions.locationtype = placeTypes;
  qe.termOptions['category_eventtype_name'] = eventTypes; // jshint ignore:line
  _.forEach(queryFields, function (field) {
    if (field.type === 'choice') {
      qe.termOptions[field.name] = field.options;
    }
    qe.transformers[field.name] = fieldTypeTransformers[field.type];
  });

  /**
   * Update the search input field with the data from the query editor
   */
  qe.updateQueryString = function () {
    searchHelper.setQueryTree(qe.groupedQueryTree);
    $rootScope.$emit('searchSubmitted');
    qe.stopEditing();
  };

  qe.stopEditing = function () {
    $rootScope.$emit('stopEditingQuery');
  };

  /**
   * Add a field to a group
   *
   * @param  {object}  group       The group to add the field to
   * @param {number}  fieldIndex  The index of the field after which to add
   */
  qe.addField = function (group, fieldIndex) {

    var insertIndex = fieldIndex + 1,
        field = {
          field: 'name.\\*',
          name: 'title',
          term: '',
          fieldType: 'tokenized-string',
          transformer: '+'
        };

    group.nodes.splice(insertIndex, 0, field);

    if (group.nodes.length) {
      group.type = 'group';
    }
  };

  /**
   * Remove a field from a group
   *
   * @param {object}    group       The group to delete a field from
   * @param {number}    fieldIndex  The index of the field to delete
   * @param {object=}   rootGroup   The root group of the field to delete
   */
  qe.removeField = function (group, fieldIndex, rootGroup) {
    if (rootGroup.nodes.length > 1) {
      group.nodes.splice(fieldIndex, 1);
    }

    qe.cleanUpGroups();
  };

  qe.cleanUpGroups = function () {
    qe.removeEmptyGroups();
    qe.unwrapSubGroups();
  };

  qe.unwrapSubGroups = function () {
    var root = qe.groupedQueryTree;

    _.forEach(root.nodes, function (group) {
      var firstNode = group.nodes[0];

      if (firstNode.nodes) {
        var firstNodeChildren = firstNode.nodes;
        group.nodes.splice(0, 1);
        _.forEach(firstNodeChildren, function (node, index) {
          group.nodes.splice(index, 0, node);
        });
      }
    });
  };

  qe.removeEmptyGroups = function () {
    var root = qe.groupedQueryTree;

    _.forEach(root.nodes, function (group) {
      _.remove(group.nodes, function (node) {
        return node.nodes && node.nodes.length === 0;
      });
    });
  };

  qe.toggleExcludeGroup = function (group) {
    group.excluded = !group.excluded;
  };

  qe.canRemoveGroup = function () {
    return !qe.hasSingleGroup();
  };

  qe.removeGroup = function (groupIndex) {
    if (qe.canRemoveGroup()) {
      var root = qe.groupedQueryTree,
          group = root.nodes[groupIndex];

      if (qe.canRemoveGroup() && group) {
        root.nodes.splice(groupIndex, 1);
      }
    }
  };

  qe.resetGroups = function () {
    qe.groupedQueryTree = qe.getDefaultQueryTree();
  };

  /**
   * Add a field group
   */
  qe.addGroup = function () {
    var root = qe.groupedQueryTree;
    var group = {
      type: 'group',
      operator: 'OR',
      nodes: [
        {
          field: 'name.\\*',
          name: 'title',
          term: '',
          fieldType: 'tokenized-string',
          transformer: '+'
        }
      ]
    };

    root.nodes.push(group);
  };

  qe.addSubGroup = function (parentGroup, fieldIndex) {
    var group = {
      type: 'group',
      operator: 'AND',
      nodes: [
        {
          field: 'name.\\*',
          name: 'title',
          term: '',
          fieldType: 'tokenized-string',
          transformer: '+'
        }
      ]
    };

    parentGroup.nodes.splice(fieldIndex + 1, 0, group);
  };

  qe.fieldTypeSelected = function (field) {
    var fieldName = field.name,
        queryField = _.find(queryFields, function (field) {
          return field.name === fieldName;
        });

    if (queryField) {
      field.field = queryField.field;
    }

    if (field.fieldType !== queryField.type) {
      // TODO: Maybe try to do a type conversion?
      if (queryField.type === 'date-range') {
        field.lowerBound = moment().startOf('day').toDate();
        field.upperBound = moment().endOf('day').toDate();
        field.inclusive = true;
      } else {
        field.term = '';
        field.lowerBound = undefined;
        field.upperBound = undefined;
        field.inclusive = undefined;
      }

      if (queryField.type === 'check') {
        field.term = queryField.name;
      }

      if (queryField.type === 'number') {
        field.inclusive = true;
      }

      if (!field.transformer || !_.contains(fieldTypeTransformers[queryField.type], field.transformer)) {
        field.transformer = _.first(fieldTypeTransformers[queryField.type]);
      }

      field.fieldType = queryField.type;
    }
  };

  qe.hasSingleGroup = function () {
    return (qe.groupedQueryTree.nodes.length === 1);
  };
}
QueryEditorController.$inject = ["queryFields", "LuceneQueryBuilder", "taxonomyTerms", "fieldTypeTransformers", "searchHelper", "$translate", "$rootScope", "eventTypes", "placeTypes"];
})();

// Source: src/search/components/query-editor.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbQueryEditor
 * @description
 * # udbQueryEditor
 */
angular
  .module('udb.search')
  .directive('udbQueryEditor', udbQueryEditor);

/* @ngInject */
function udbQueryEditor(searchApiSwitcher) {
  return {
    templateUrl: 'templates/query-editor.directive.html',
    restrict: 'EA',
    controllerAs: 'qe',
    controller: searchApiSwitcher.getQueryEditorController()
  };
}
udbQueryEditor.$inject = ["searchApiSwitcher"];
})();

// Source: src/search/components/sapi2.query-editor.controller.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.controller:sapi2QueryEditorController
 * @description
 * # sapi2QueryEditorController
 */
angular
  .module('udb.search')
  .controller('sapi2QueryEditorController', Sapi2QueryEditorController);

Sapi2QueryEditorController.$inject = [
  'sapi2QueryFields',
  'sapi2QueryBuilder',
  'taxonomyTerms',
  'sapi2FieldTypeTransformers',
  'searchHelper',
  '$translate',
  '$rootScope'
];
function Sapi2QueryEditorController(
  queryFields,
  LuceneQueryBuilder,
  taxonomyTerms,
  fieldTypeTransformers,
  searchHelper,
  $translate,
  $rootScope
) {
  var qe = this,
    queryBuilder = LuceneQueryBuilder;

  qe.fields = _.filter(queryFields, 'editable');

  // use the first occurrence of a group name to order it against the other groups
  var orderedGroups = _.chain(qe.fields)
    .map(function (field) {
      return field.group;
    })
    .uniq()
    .value();

  _.forEach(qe.fields, function (field) {
    var fieldName = 'queryFieldLabel.' + field.name,
      fieldGroup = 'queryFieldGroup.' + field.group;

    $translate([fieldName, fieldGroup]).then(function (translations) {
      field.label = translations[fieldName];
      field.groupIndex = _.indexOf(orderedGroups, field.group);
      field.groupLabel = translations[fieldGroup];
    });
  });

  qe.getDefaultQueryTree = function () {
    return {
      type: 'root',
      nodes: [
        {
          type: 'group',
          operator: 'OR',
          nodes: [
            {
              field: 'title',
              term: '',
              fieldType: 'tokenized-string',
              transformer: '+'
            }
          ]
        }
      ]
    };
  };
  qe.groupedQueryTree = searchHelper.getQueryTree() || qe.getDefaultQueryTree();

  // Holds options for both term and choice query-field types
  qe.transformers = {};
  qe.termOptions = _.groupBy(taxonomyTerms, function (term) {
    return 'category_' + term.domain + '_name';
  });
  _.forEach(queryFields, function (field) {
    if (field.type === 'choice') {
      qe.termOptions[field.name] = field.options;
    }
    qe.transformers[field.name] = fieldTypeTransformers[field.type];
  });

  /**
   * Update the search input field with the data from the query editor
   */
  qe.updateQueryString = function () {
    searchHelper.setQueryTree(qe.groupedQueryTree);
    $rootScope.$emit('searchSubmitted');
    qe.stopEditing();
  };

  qe.stopEditing = function () {
    $rootScope.$emit('stopEditingQuery');
  };

  /**
   * Add a field to a group
   *
   * @param  {object}  group       The group to add the field to
   * @param {number}  fieldIndex  The index of the field after which to add
   */
  qe.addField = function (group, fieldIndex) {

    var insertIndex = fieldIndex + 1,
      field = {
        field: 'title',
        term: '',
        fieldType: 'tokenized-string',
        transformer: '+'
      };

    group.nodes.splice(insertIndex, 0, field);

    if (group.nodes.length) {
      group.type = 'group';
    }
  };

  /**
   * Remove a field from a group
   *
   * @param {object}    group       The group to delete a field from
   * @param {number}    fieldIndex  The index of the field to delete
   * @param {object=}   rootGroup   The root group of the field to delete
   */
  qe.removeField = function (group, fieldIndex, rootGroup) {
    if (rootGroup.nodes.length > 1) {
      group.nodes.splice(fieldIndex, 1);
    }

    qe.cleanUpGroups();
  };

  qe.cleanUpGroups = function () {
    qe.removeEmptyGroups();
    qe.unwrapSubGroups();
  };

  qe.unwrapSubGroups = function () {
    var root = qe.groupedQueryTree;

    _.forEach(root.nodes, function (group) {
      var firstNode = group.nodes[0];

      if (firstNode.nodes) {
        var firstNodeChildren = firstNode.nodes;
        group.nodes.splice(0, 1);
        _.forEach(firstNodeChildren, function (node, index) {
          group.nodes.splice(index, 0, node);
        });
      }
    });
  };

  qe.removeEmptyGroups = function () {
    var root = qe.groupedQueryTree;

    _.forEach(root.nodes, function (group) {
      _.remove(group.nodes, function (node) {
        return node.nodes && node.nodes.length === 0;
      });
    });
  };

  qe.toggleExcludeGroup = function (group) {
    group.excluded = !group.excluded;
  };

  qe.canRemoveGroup = function () {
    return !qe.hasSingleGroup();
  };

  qe.removeGroup = function (groupIndex) {
    if (qe.canRemoveGroup()) {
      var root = qe.groupedQueryTree,
        group = root.nodes[groupIndex];

      if (qe.canRemoveGroup() && group) {
        root.nodes.splice(groupIndex, 1);
      }
    }
  };

  qe.resetGroups = function () {
    qe.groupedQueryTree = qe.getDefaultQueryTree();
  };

  /**
   * Add a field group
   */
  qe.addGroup = function () {
    var root = qe.groupedQueryTree;
    var group = {
      type: 'group',
      operator: 'OR',
      nodes: [
        {
          field: 'title',
          term: '',
          fieldType: 'tokenized-string',
          transformer: '+'
        }
      ]
    };

    root.nodes.push(group);
  };

  qe.addSubGroup = function (parentGroup, fieldIndex) {
    var group = {
      type: 'group',
      operator: 'AND',
      nodes: [
        {
          field: 'title',
          term: '',
          fieldType: 'tokenized-string',
          transformer: '+'
        }
      ]
    };

    parentGroup.nodes.splice(fieldIndex + 1, 0, group);
  };

  qe.updateFieldType = function (field) {
    var fieldName = field.field,
      queryField = _.find(queryFields, function (field) {
        return field.name === fieldName;
      });

    if (field.fieldType !== queryField.type) {
      // TODO: Maybe try to do a type conversion?
      if (queryField.type === 'date-range') {
        field.lowerBound = moment().startOf('day').toDate();
        field.upperBound = moment().endOf('day').toDate();
        field.inclusive = true;
      } else {
        field.term = '';
        field.lowerBound = undefined;
        field.upperBound = undefined;
        field.inclusive = undefined;
      }

      if (queryField.type === 'check') {
        field.term = 'TRUE';
      }

      if (queryField.type === 'number') {
        field.inclusive = true;
      }

      if (!field.transformer || !_.contains(fieldTypeTransformers[queryField.type], field.transformer)) {
        field.transformer = _.first(fieldTypeTransformers[queryField.type]);
      }

      field.fieldType = queryField.type;
    }
  };

  qe.hasSingleGroup = function () {
    return (qe.groupedQueryTree.nodes.length === 1);
  };
}
})();

// Source: src/search/components/search-bar.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbSearchBar
 * @description
 * # udbSearchBar
 */
angular
  .module('udb.search')
  .directive('udbSearchBar', udbSearchBar);

/* @ngInject */
function udbSearchBar(searchHelper, $rootScope, $uibModal, savedSearchesService, searchApiSwitcher) {
  return {
    templateUrl: 'templates/search-bar.directive.html',
    restrict: 'E',
    link: function postLink(scope, element, attrs) {

      var searchBar = {
        queryString: '',
        hasErrors: false,
        errors: '',
        isEditing: false,
        savedSearches: []
      };

      var editorModal;

      searchBar.editQuery = function () {
        $rootScope.$emit('startEditingQuery');
        searchBar.isEditing = true;

        editorModal = $uibModal.open({
          templateUrl: 'templates/query-editor-modal.html',
          controller: searchApiSwitcher.getQueryEditorController(),
          controllerAs: 'qe',
          size: 'lg'
        });
      };

      /**
       * Search with a given query string and update the search bar or use the one currently displayed in the search bar
       *
       * @param {String} [queryString]
       */
      searchBar.find = function (queryString) {
        var query = typeof queryString !== 'undefined' ? queryString : searchBar.queryString;

        searchBar.queryString = query;
        searchHelper.setQueryString(query);
        $rootScope.$emit('searchSubmitted');
      };

      /**
       * When the user manually changes the query field the current query tree should be cleared
       */
      searchBar.queryChanged = function() {
        searchHelper.clearQueryTree();
      };

      scope.sb = searchBar;

      /**
       * Update the search bar with the info from a query object.
       *
       * @param {Object} event
       * @param {Object} query
       */
      searchBar.updateQuery = function(event, query) {
        searchBar.queryString = query.queryString;

        if (query.errors && query.errors.length) {
          scope.sb.hasErrors = true;
          scope.sb.errors = formatErrors(query.errors);
        } else {
          scope.sb.hasErrors = false;
          scope.sb.errors = '';
        }
      };

      function formatErrors(errors) {
        var formattedErrors = '';

        _.forEach(errors, function (error) {
          formattedErrors += (error + '\n');
        });

        return formattedErrors;
      }

      /**
       * Show the first 5 items from a list of saved searches.
       *
       * @param {Object[]} savedSearches
       */
      function showSavedSearches(savedSearches) {
        searchBar.savedSearches = _.take(savedSearches, 5);
      }

      savedSearchesService
        .getSavedSearches()
        .then(showSavedSearches);

      var savedSearchesChangedListener = $rootScope.$on('savedSearchesChanged', function (event, savedSearches) {
        showSavedSearches(savedSearches);
      });

      var stopEditingQueryListener = $rootScope.$on('stopEditingQuery', function () {
        scope.sb.isEditing = false;
        if (editorModal) {
          editorModal.dismiss();
        }
      });

      var searchQueryChangedListener = $rootScope.$on('searchQueryChanged', searchBar.updateQuery);

      scope.$on('$destroy', savedSearchesChangedListener);
      scope.$on('$destroy', stopEditingQueryListener);
      scope.$on('$destroy', searchQueryChangedListener);
    }
  };
}
udbSearchBar.$inject = ["searchHelper", "$rootScope", "$uibModal", "savedSearchesService", "searchApiSwitcher"];
})();

// Source: src/search/event-types.value.js
(function () {
'use strict';

/**
 * @ngdoc value
 * @name udb.search.eventTypes
 * @description
 * # Event Types
 * A list of types you can use to find events.
 */
angular
  .module('udb.search')
  .value('eventTypes', [
    {label: 'Begeleide rondleiding', id: '0.7.0.0.0'},
    {label: 'Beurs', id: '0.6.0.0.0'},
    {label: 'Concert', id: '0.50.4.0.0'},
    {label: 'Cursus of workshop', id: '0.3.1.0.0'},
    {label: 'Dansvoorstelling', id: '0.54.0.0.0'},
    {label: 'Eten en drinken', id: '1.50.0.0.0'},
    {label: 'Festival', id: '0.5.0.0.0'},
    {label: 'Film', id: '0.50.6.0.0'},
    {label: 'Kamp of vakantie', id: '0.57.0.0.0'},
    {label: 'Kermis of feestelijkheid', id: '0.28.0.0.0'},
    {label: 'Lezing of congres', id: '0.3.2.0.0'},
    {label: 'Markt of braderie', id: '0.37.0.0.0'},
    {label: 'Opendeurdag', id: '0.12.0.0.0'},
    {label: 'Party of fuif', id: '0.49.0.0.0'},
    {label: 'Route', id: '0.17.0.0.0'},
    {label: 'Spel of quiz', id: '0.50.21.0.0'},
    {label: 'Sport en beweging', id: '0.59.0.0.0 '},
    {label: 'Sportwedstrijd bekijken', id: '0.19.0.0.0'},
    {label: 'Tentoonstelling', id: '0.0.0.0.0'},
    {label: 'Theatervoorstelling', id: '0.55.0.0.0'}
  ]);
})();

// Source: src/search/filters/currency.filter.js
(function () {
'use strict';

/**
 * @ngdoc filter
 * @name udb.search.filter:currency
 * @function
 * @description
 * # currency
 * Custom currency filter to display event prices
 */
angular
  .module('udb.search')
  .filter('currency', CurrencyFilter);

/* @ngInject */
function CurrencyFilter() {
  return function (number, currencyCode) {
    var currencies = {
      // Source: Interinstitutional Style Guide of the EU
      // Chapter 7.3.3. Rules for expressing monetary units
      // http://publications.europa.eu/code/en/en-370303.htm
      EUR: {
        symbol: '',
        thousand: '.',
        decimal: ',',
        format: '%s%v',
        precision: 2
      }
    };

    var currency = currencies[currencyCode];
    // Default to Euro if the currency is not defined
    if (!currency) {
      currency = currencies.EUR;
    }

    return accounting.formatMoney(number, currency);
  };
}
})();

// Source: src/search/filters/imagesbyLanguage.filter.js
(function () {
'use strict';

/**
 * @ngdoc filter
 * @name udb.search.filter:imagesByLanguage
 * @function
 * @description
 * # jsonLDLang
 * Filter JsonLD objects by language.
 */
angular.module('udb.search')
  .filter('imagesByLanguage', imagesByLanguageFilter);

/* @ngInject */
function imagesByLanguageFilter() {
  return function (mediaObjects, preferredLanguage) {

    var filtered = _.filter(mediaObjects, function(mediaObject) {
      if (typeof mediaObject !== 'undefined') {
        return mediaObject['@type'] === 'schema:ImageObject' &&
          (mediaObject.inLanguage === preferredLanguage || angular.isUndefined(mediaObject.inLanguage));
      }
    });
    return filtered;
  };
}
})();

// Source: src/search/filters/json-ld-lang.filter.js
(function () {
'use strict';

/**
 * @ngdoc filter
 * @name udb.search.filter:jsonLDLang
 * @function
 * @description
 * # jsonLDLang
 * Filter JsonLD objects by language.
 */
angular.module('udb.search')
  .filter('jsonLDLang', JsonLDLangFilter);

/* @ngInject */
function JsonLDLangFilter() {
  return function (jsonLDObject, preferredLanguage, shouldFallback) {
    var translatedJsonLDObject = _.cloneDeep(jsonLDObject);
    translatedJsonLDObject = translateProperties(translatedJsonLDObject, preferredLanguage, shouldFallback);
    return translatedJsonLDObject;
  };
}

function isALanguageKey(key) {
  return key.length === 2;
}

function translateProperties(jsonLDProperty, preferredLanguage, shouldFallback) {
  jsonLDProperty = _.each(jsonLDProperty, function(val, key) {
    if (_.isObject(val)) {
      var allKeys = Object.keys(val);
      if (allKeys.length > 0 && allKeys.every(isALanguageKey)) {
        if (val[preferredLanguage]) {
          jsonLDProperty[key] = val[preferredLanguage];
        } else {
          if (shouldFallback) {
            var fallbackLanguage = allKeys[0];
            var translatedProperty = val[fallbackLanguage];
            jsonLDProperty[key] = translatedProperty;
          }
        }
      } else {
        val = translateProperties(val, preferredLanguage, shouldFallback);
      }
    }
  });
  return jsonLDProperty;
}
})();

// Source: src/search/place-types.value.js
(function () {
'use strict';

/**
 * @ngdoc value
 * @name udb.search.placeTypes
 * @description
 * # Place Types
 * A list of types you can use to find places.
 */
angular
  .module('udb.search')
  .value('placeTypes', [
    {label: 'Archeologische site', id:'3CuHvenJ+EGkcvhXLg9Ykg'},
    {label: 'Bibliotheek of documentatiecentrum', id: 'kI7uAyn2uUu9VV6Z3uWZTA'},
    {label: 'Bioscoop', id: 'BtVNd33sR0WntjALVbyp3w'},
    {label: 'Cultuur- of ontmoetingscentrum', id: 'Yf4aZBfsUEu2NsQqsprngw'},
    {label: 'Discotheek', id: 'YVBc8KVdrU6XfTNvhMYUpg'},
    {label: 'Horeca', id: 'ekdc4ATGoUitCa0e6me6xA'},
    {label: 'Jeugdhuis of jeugdcentrum', id: 'JCjA0i5COUmdjMwcyjNAFA'},
    {label: 'Monument', id: '0.14.0.0.0'},
    {label: 'Museum of galerij', id: 'GnPFp9uvOUyqhOckIFMKmg'},
    {label: 'Natuur, park of tuin', id: '0.15.0.0.0'},
    {label: 'Openbare ruimte', id: '0.8.0.0.0'},
    {label: 'Recreatiedomein of centrum', id: '0.53.0.0.0'},
    {label: 'School of onderwijscentrum', id: 'rJRFUqmd6EiqTD4c7HS90w'},
    {label: 'Sportcentrum', id: 'eBwaUAAhw0ur0Z02i5ttnw'},
    {label: 'Thema of pretpark', id: '0.41.0.0.0'},
    {label: 'Winkel', id: 'VRC6HX0Wa063sq98G5ciqw'},
    {label: 'Zaal of expohal', id: 'OyaPaf64AEmEAYXHeLMAtA'},
  ]);
})();

// Source: src/search/services/field-type-transformers.value.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.fieldTypeTransformers
 * @description
 * # fieldTypeTransformers
 * Value in udb.search module.
 */
angular
  .module('udb.search')
  .value('fieldTypeTransformers', {
    'string': ['=', '!'],
    'tokenized-string': ['+', '-'],
    'choice': ['=', '!'],
    'term': ['=', '!'],
    'number': ['=', '><', '<', '>'],
    'check': ['='],
    'date-range': ['=', '><', '<', '>']
});
})();

// Source: src/search/services/query-builder.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udbApp.LuceneQueryBuilder
 * @description
 * # LuceneQueryBuilder
 * Service in the udb.search.
 */
angular.module('udb.search')
  .service('LuceneQueryBuilder', LuceneQueryBuilder);

/* @ngInject */
function LuceneQueryBuilder(LuceneQueryParser, QueryTreeValidator, QueryTreeTranslator, queryFields, taxonomyTerms) {
  var implicitToken = '<implicit>';

  this.translate = function (query) {
    QueryTreeTranslator.translateQueryTree(query.queryTree);
  };

  this.validate = function (query) {
    QueryTreeValidator.validate(query.queryTree, query.errors);
  };

  this.isValid = function (query) {
    this.translate(query);
    this.validate(query);

    return query.errors.length === 0;
  };

  this.parseQueryString = function (query) {
    try {
      query.queryTree = LuceneQueryParser.parse(query.queryString);
    } catch (e) {
      query.errors.push(e.message);
    }

    return query.queryTree;
  };

  /**
   *
   * @param {string} queryString
   */
  this.createQuery = function (queryString) {
    var query = {
      originalQueryString: queryString,
      queryString: queryString,
      queryTree: {},
      errors: []
    };

    this.parseQueryString(query);

    return query;
  };

  var printTerm = function (node) {
    var term = node.term,
        isRangeExpression = (node.lowerBound || node.upperBound);

    if (isRangeExpression) {
      var min = node.lowerBound || '*',
          max = node.upperBound || '*',
          inclusive = node.inclusive;

      if (min instanceof Date) {
        min = moment(min).format();
      }
      if (max instanceof Date) {
        max = moment(max).format();
      }

      term = min + ' TO ' + max;

      if (inclusive) {
        term = '[' + term + ']';
      } else {
        term = '{' + term + '}';
      }
    } else {
      // if the term is a phrase surround it with double quotes
      if (node.quoted || term.indexOf(' ') !== -1) {
        term = '"' + term + '"';
      }

      // check for fuzzy search modifier
      if (node.similarity) {
        term += ('~' + node.similarity);
      }

      // check for proximity modifier
      if (node.proximity) {
        term += ('~' + node.proximity);
      }

      // check for prefix modifier
      if (node.prefix) {
        term = node.prefix + term;
      }

      // check for boost modifier
      if (node.boost) {
        term += ('^' + node.boost);
      }
    }

    return term;
  };

  var unparseNode = function (branch, depth, sentence) {

    if (branch.left) {
      var result,
          operator = (branch.operator === implicitToken) ? ' ' : (' ' + branch.operator + ' ');

      if (branch.right) {
        result = unparseNode(branch.left, depth + 1, sentence);
        result += operator;
        result += unparseNode(branch.right, depth + 1, sentence);

        if (depth > 0) {
          result = '(' + result + ')';
        }

        if (branch.field && branch.field !== implicitToken) {
          result = (branch.field + ':') + result;
        }

      } else {
        var singleTransformedGroupedTerm = branch.field && (branch.left.field === implicitToken) && branch.left.prefix;

        result = singleTransformedGroupedTerm ?
          branch.field + ':(' + printTerm(branch.left) + ')' :
          unparseNode(branch.left, depth + 1, sentence);
      }

      return result;

    } else {
      var fieldQuery = '',
          term = printTerm(branch);

      if (branch.field !== implicitToken && branch.field !== null) {
        var fieldPrefix = '';

        if (_.contains(['!', '+', '-'], branch.transformer)) {
          fieldPrefix = branch.transformer;
        }

        fieldQuery += (fieldPrefix + branch.field + ':');
      }

      fieldQuery += term;

      return sentence += fieldQuery;
    }
  };

  this.unparse = function (query) {
    query.queryString = this.unparseQueryTree(query.queryTree);
    return query.queryString;
  };

  this.unparseQueryTree = function (queryTree) {
    var queryString = '';

    if (queryTree.left) {
      queryString = unparseNode(queryTree, 0, '');
    }

    return queryString;
  };

  function printTreeField(field) {
    if (field.fieldType === 'date-range') {
      cleanUpDateRangeField(field);
    }
    var transformedField = transformField(field);
    return transformedField.field + printTerm(transformedField);
  }

  /**
   * @description
   * Unparse a grouped field information tree to a query string
   *
   * @param   {object}  groupedTree     A tree structure with field groups
   * @return  {string}  A query string
   */
  this.unparseGroupedTree = function (groupedTree) {
    var root = groupedTree;
    var queryString = '';

    _.forEach(root.nodes, function (node, nodeIndex) {
      var nodeString = '';
      if (node.type === 'group') {
        var group = node;

        _.forEach(group.nodes, function (field, fieldIndex) {

          // check if the field is actually a sub group
          if (field.type === 'group') {

            var subGroup = field,
                subGroupString = ' ';

            if (subGroup.nodes.length === 1) {
              var singleField = subGroup.nodes[0];
              subGroupString += subGroup.operator + ' ' + printTreeField(singleField);
            } else {
              subGroupString += subGroup.operator + ' (';
              _.forEach(subGroup.nodes, function (field, fieldIndex) {
                if (fieldIndex) {
                  subGroupString += ' OR ';
                }
                subGroupString += printTreeField(field);
              });
              subGroupString += ')';
            }

            nodeString += subGroupString;
          } else {
            if (fieldIndex) {
              nodeString += ' ' + node.operator + ' ';
            }

            nodeString += printTreeField(field);

            var nextIndex = fieldIndex + 1;
            if (fieldIndex && nextIndex < group.nodes.length && group.nodes[nextIndex].type === 'group') {
              nodeString = '(' + nodeString + ')';
            }
          }
        });

        if (root.nodes.length > 1 && group.nodes.length > 1) {
          nodeString = '(' + nodeString + ')';
        }
      } else {
        console.log('Expecting a group but found: ' + node.type);
      }

      // do not prepend the first node with an operator
      if (nodeIndex || node.excluded) {
        var operator = node.excluded ? 'NOT' : 'OR';
        queryString += ' ' + operator + ' ';
      }
      queryString += nodeString;
    });

    return queryString;
  };

  function cleanUpDateRangeField(field) {
    if (field.transformer === '=' && moment(field.lowerBound).isValid()) {
      field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      field.upperBound = moment(field.lowerBound).endOf('day').toDate();
    }

    if (field.transformer === '><') {
      if (moment(field.lowerBound).isValid()) {
        field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      } else {
        field.lowerBound = '*';
      }

      if (moment(field.upperBound).isValid()) {
        field.upperBound = moment(field.upperBound).endOf('day').toDate();
      } else {
        field.upperBound = '*';
      }
    }

    if (field.transformer === '<') {
      if (moment(field.upperBound).isValid()) {
        field.upperBound = moment(field.upperBound).endOf('day').toDate();
      } else {
        field.upperBound = moment().endOf('day').toDate();
      }
    }

    if (field.transformer === '>') {
      if (moment(field.lowerBound).isValid()) {
        field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      } else {
        field.lowerBound = moment().startOf('day').toDate();
      }
    }
  }

  function transformField(originalField) {
    var field = _.clone(originalField);
    var isFieldImplicit = field.field === implicitToken;
    var fieldOperator = '';

    switch (field.transformer) {
      case '!':
        fieldOperator = '!';
        break;
      case '-':
        fieldOperator = '-';
        break;
      case '<':
        field.lowerBound = '*';
        break;
      case '>':
        field.upperBound = '*';
        break;
      case '=':
        if (field.fieldType !== 'date-range') {
          field.upperBound = undefined;
          field.lowerBound = undefined;
        }
        break;
    }

    field.field = fieldOperator + (isFieldImplicit ? '' : field.field + ':');

    return field;
  }

  /**
   * @description
   * Generate a grouped field information tree from a query tree
   * The query tree should not nest different operators deeper than 2 levels.
   * Modifiers will be ignored.
   *
   * @param   {object}  queryTree   - The queryTree to get information from
   *
   * @return  {object}              - A grouped field information tree
   */
  this.groupQueryTree = function (queryTree) {
    var groupedFieldTree = {
      type: 'root',
      nodes: [],
      operator: queryTree.operator || 'OR'
    };

    // If the query tree of an empty search is used, add a default field and group
    if (!queryTree.left) {
      var group = {
        type: 'field',
        operator: 'OR',
        nodes: [
          {
            field: 'name.\\*',
            name: 'title',
            term: '',
            fieldType: 'tokenized-string',
            transformer: '+'
          }
        ]
      };
      groupedFieldTree.nodes.push(group);
    } else {
      this.groupNode(queryTree, groupedFieldTree);
      this.cleanUpGroupedFieldTree(groupedFieldTree);
    }

    return groupedFieldTree;
  };

  /**
   * @description
   * Clean up a field tree after grouping.
   * Used by groupQueryTree to cleanse a freshly grouped tree.
   *
   * @param {object} groupedFieldTree
   */
  this.cleanUpGroupedFieldTree = function (groupedFieldTree) {
    _.forEach(groupedFieldTree.nodes, function (fieldGroup) {
      // This property is just used to track implicit fields and can be removed when switching groups.
      delete fieldGroup.implicitField;

      // Switch the type of the node to field instead of group if it only contains one field.
      if (fieldGroup.nodes && fieldGroup.nodes.length === 1) {
        fieldGroup.type = 'field';
      }

      // Replace any remaining implicitly declared operators with OR.
      // Assuming the following term grouping syntax was used "field:(term1 term2)".
      if (fieldGroup.operator === implicitToken) {
        fieldGroup.operator = 'OR';
      }

      // add field-query type and map options for term and choice fields
      _.forEach(fieldGroup.nodes, function (field) {

        // Find the field-query field type
        var fieldType = _.find(queryFields, function (fieldType) {
          return fieldType.name === field.field;
        });

        // Set the type and map options depending on field type
        if (fieldType) {
          field.fieldType = fieldType.type;

          // terms should be matched to their domain and used as the field-query field
          // if no matching taxonomy term is found the query-field should be removed
          if (fieldType.type === 'term') {
            var taxonomyTerm = _.find(taxonomyTerms, function (term) {
              return term.label.toUpperCase() === field.term.toUpperCase();
            });

            if (taxonomyTerm) {
              var domainFieldName = 'category_' + taxonomyTerm.domain + '_name';
              field.field = domainFieldName;
              field.term = taxonomyTerm.label;
            } else {
              field.invalid = true;
            }
          }

          // Look up options for choice field-query
          if (fieldType.type === 'choice') {
            var option = _.find(fieldType.options, function (option) {
              return option === field.term.toUpperCase();
            });

            if (option) {
              field.term = option;
            } else {
              field.invalid = true;
            }
          }

          // Make sure boolean field-query values are either true or false
          if (fieldType.type === 'check') {
            var trueValue = fieldType.name,
                falseValue = '(!' + fieldType.name + ')';

            if (!(field.term === trueValue || field.term === falseValue)) {
              field.invalid = true;
            }
          }

          if (fieldType.type === 'tokenized-string') {
            if (!field.transformer || field.transformer === '=') {
              field.transformer = '+';
            }

            if (field.transformer === '!') {
              field.transformer = '-';
            }
          }

          if (fieldType.type === 'string') {
            if (!field.transformer || field.transformer === '+') {
              field.transformer = '=';
            }

            if (field.transformer === '-') {
              field.transformer = '!';
            }
          }

          // Numbers can be a single or ranged term
          // The editor only handles ranges that have one of the boundaries set to infinity
          if (fieldType.type === 'number') {
            if (field.term) {
              field.transformer = '=';
            } else {
              if (field.upperBound && field.lowerBound === '*') {
                field.transformer = '<';
              } else if (field.lowerBound && field.upperBound === '*') {
                field.transformer = '>';
              } else {
                field.transformer = '=';
                field.term = field.lowerBound || field.upperBound;
                field.lowerBound = undefined;
                field.upperBound = undefined;
              }
            }
          }

          if (fieldType.type === 'date-range') {
            var startDate = moment(field.lowerBound),
                endDate = moment(field.upperBound);

            if (startDate.isValid() && endDate.isValid()) {
              if (startDate.isSame(endDate, 'day')) {
                field.transformer = '=';
              } else {
                field.transformer = '><';
              }
            } else {
              if (!startDate.isValid() && endDate.isValid()) {
                field.transformer = '<';
              }

              if (!endDate.isValid() && startDate.isValid()) {
                field.transformer = '>';
              }
            }
          }
        }

      });
    });
  };

  /**
   * @description
   * Group a node in a query tree branch.
   * You should not need to call this method directly, use groupQueryTree instead.
   *
   * @param {object}  branch        - The branch of a query tree
   * @param {object}  fieldTree     - The field tree that will be returned
   * @param {object}  [fieldGroup]  - Keeps track of the current field group
   */
  this.groupNode = function (branch, fieldTree, fieldGroup) {
    // if the operator is implicit, you're dealing with grouped terms eg: field:(term1 term2)
    if (branch.operator === implicitToken) {
      branch.operator = 'OR';
    }
    if (!fieldGroup || branch.operator && (branch.operator !== fieldGroup.operator)) {
      var newFieldGroup = {
        type: 'group',
        operator: branch.operator || 'OR',
        nodes: []
      };

      fieldTree.nodes.push(newFieldGroup);
      fieldGroup = newFieldGroup;
    }

    // Track the last used field name to apply to implicitly defined terms
    if (branch.field && branch.field !== implicitToken) {
      fieldGroup.implicitField = branch.field;
    }

    if (branch.term || (branch.lowerBound && branch.upperBound)) {
      var field = branch.field;

      // Handle implicit field names by using the last used field name
      if (field === implicitToken) {
        if (fieldGroup.implicitField) {
          field = fieldGroup.implicitField;
        } else {
          throw 'Field name is implicit and not defined elsewhere.';
        }
      }

      fieldGroup.nodes.push(makeField(branch, field));
    }

    if (branch.left) {
      this.groupNode(branch.left, fieldTree, fieldGroup);
      if (branch.right) {
        this.groupNode(branch.right, fieldTree, fieldGroup);
      }
    }
  };

  /**
   * @description
   * Generate a field object that's used to render the query editor fields.
   *
   * @param {object} node The node with all the necessary information
   * @return {object} A field object used to render the query editor
   */
  function makeField(node, fieldName) {
    var fieldType = _.find(queryFields, function (type) {
          return type.name === node.field;
        }),
        field = {
          field: fieldName || node.field,
          fieldType: fieldType || 'string',
          transformer: node.transformer || '='
        };

    if (node.lowerBound || node.upperBound) {
      field.lowerBound = node.lowerBound || undefined;
      field.upperBound = node.upperBound || undefined;
      field.inclusive = node.inclusive || true;
    } else {
      field.term = node.term || undefined;
    }

    return field;
  }
}
LuceneQueryBuilder.$inject = ["LuceneQueryParser", "QueryTreeValidator", "QueryTreeTranslator", "queryFields", "taxonomyTerms"];
})();

// Source: src/search/services/query-field-translations.constant.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.queryFieldTranslations
 * @description
 * # queryFieldTranslations
 * Value in the udb.search.
 */
angular
  .module('udb.search')
  .constant('queryFieldTranslations', {
    sapi2: {
      'TYPE' : 'type',
      'CDBID' : 'cdbid',
      'LOCATION_ID' : 'location_id',
      'ORGANISER_ID' : 'organiser_id',
      'TITLE' : 'title',
      'KEYWORDS' : 'keywords',
      'CITY' : 'city',
      'ORGANISER_KEYWORDS': 'organiser_keywords',
      'ZIPCODE' : 'zipcode',
      'COUNTRY' : 'country',
      'CATEGORY_NAME' : 'category_name',
      'AGEFROM' : 'agefrom',
      'DETAIL_LANG' : 'detail_lang',
      'PRICE' : 'price',
      'STARTDATE' : 'startdate',
      'ENDDATE' : 'enddate',
      'ORGANISER_LABEL' : 'organiser_label',
      'LOCATION_LABEL' : 'location_label',
      'EXTERNALID' : 'externalid',
      'LASTUPDATED' : 'lastupdated',
      'CREATIONDATE' : 'creationdate',
      'CREATEDBY' : 'createdby',
      'PERMANENT' : 'permanent',
      'CATEGORY_EVENTTYPE_NAME' : 'category_eventtype_name',
      'LOCATIONTYPE' : 'locationtype',
      'OFFERTYPE' : 'offertype',
      'CATEGORY_THEME_NAME' : 'category_theme_name',
      'CATEGORY_FACILITY_NAME' : 'category_facility_name',
      'CATEGORY_TARGETAUDIENCE_NAME' : 'category_targetaudience_name',
      'CATEGORY_FLANDERSREGION_NAME' : 'category_flandersregion_name',
      'AVAILABLEFROM' : 'availablefrom'
    },
    en: {
      'TEXT': 'text',
      'KEYWORDS' : 'label',
      'PHYSICAL_GIS' : 'geo',
      'CATEGORY_NAME' : 'category',
      'DETAIL_LANG' : 'translation',
      'ORGANISER_LABEL' : 'organiser',
      'LOCATION_LABEL' : 'location',
      'CREATIONDATE' : 'created',
      'CATEGORY_EVENTTYPE_NAME' : 'eventtype',
      'LOCATIONTYPE' : 'locationtype',
      'OFFERTYPE' : 'offertype',
      'CATEGORY_THEME_NAME' : 'theme',
      'CATEGORY_FACILITY_NAME' : 'facility',
      'CATEGORY_TARGETAUDIENCE_NAME' : 'targetaudience',
      'CATEGORY_FLANDERSREGION_NAME' : 'region',
      'AVAILABLEFROM' : 'available',
      'LOCATION_ID' : 'locationid',
      'ORGANISER_ID' : 'organizationid',
      'DATE' : 'date'
    },
    fr: {
      'LOCATION_LABEL': 'location',
      'TITLE': 'titre'
    },
    nl: {
      'TYPE' : 'type',
      'TEXT': 'tekst',
      'LOCATION_ID' : 'locatieid',
      'ORGANISER_ID' : 'organisatieid',
      'TITLE' : 'titel',
      'KEYWORDS' : 'label',
      'CITY' : 'stad',
      'ORGANISER_KEYWORDS': 'organisatielabel',
      'ZIPCODE' : 'postcode',
      'COUNTRY' : 'land',
      'CATEGORY_NAME' : 'categorie',
      'AGEFROM' : 'leeftijd',
      'DETAIL_LANG' : 'vertaling',
      'PRICE' : 'prijs',
      'DATE' : 'datum',
      'STARTDATE' : 'startdatum',
      'ENDDATE' : 'einddatum',
      'ORGANISER_LABEL' : 'organisatienaam',
      'LOCATION_LABEL' : 'locatienaam',
      'EXTERNALID' : 'externalid',
      'LASTUPDATED' : 'laatst_aangepast',
      'CREATIONDATE' : 'gecreëerd',
      'CREATEDBY' : 'gecreëerd_door',
      'PERMANENT' : 'permanent',
      'CATEGORY_EVENTTYPE_NAME' : 'type',
      'LOCATIONTYPE' : 'locatietype',
      'OFFERTYPE' : 'aanbodtype',
      'CATEGORY_THEME_NAME' : 'thema',
      'CATEGORY_FACILITY_NAME' : 'voorzieningen',
      'CATEGORY_TARGETAUDIENCE_NAME' : 'doelgroep',
      'CATEGORY_FLANDERSREGION_NAME' : 'gemeente',
      'AVAILABLEFROM' : 'datum_beschikbaar'
    }
  });
})();

// Source: src/search/services/query-fields.value.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.queryFields
 * @description
 * Query field types:
 * - string
 * - string
 * - choice
 * - check
 * - date-range
 * - term
 *
 * When displayed in the editor, the first occurrence of a group name will determine its order in relation to the other
 * groups.
 */
angular
  .module('udb.search')
  .value('queryFields', [
    {name: 'cdbid', field:'id', type: 'string', group: 'what', editable: true},
    {name: 'offertype', field:'_type', type: 'choice', group: 'what', editable: true, options: ['event', 'place']},
    {name: 'keywords', field: 'labels', type: 'string', group: 'what', editable: true},
    {name: 'title', field: 'name.\\*', type: 'tokenized-string', group: 'what', editable: true},
    {name: 'category_eventtype_name', field:'terms.label', type: 'term', group: 'what', editable: true},
    {name: 'locationtype', field:'terms.label', type: 'term', group: 'what', editable: true},
    {name: 'category_theme_name', field:'terms.label', type: 'term', group: 'what', editable: true},
    {name: 'text', field:'<implicit>', type: 'tokenized-string', group: 'what', editable: true},

    {name: 'city', field:'address.\\*.addressLocality', type: 'string', group:'where', editable: true},
    {name: 'zipcode', field:'address.\\*.postalCode', type: 'string', group:'where', editable: true},
    {name: 'location_id', field:'location.id', type: 'string', group:'where', editable: true},
    {name: 'country', field: 'address.\\*.addressCountry', type: 'choice', group:'where', editable: false, options: ['AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'YE', 'YT', 'ZA', 'ZM']},
    {name: 'location_label', field: 'location.name.\\*', type: 'tokenized-string', group:'where', editable: true},
    {name: 'category_flandersregion_name', field:'regions', type: 'term' , group:'where', editable: true},

    {name: 'date', field:'dateRange', type: 'date-range', group:'when', editable: true},
    {name: 'permanent', field:'calendarType', type:'check', group:'when', editable: true},

    {name: 'lastupdated', field: 'modified', type: 'date-range', group:'input-information', editable: true},
    {name: 'creationdate', field: 'created', type: 'date-range', group:'input-information', editable: true},
    {name: 'createdby', field: 'creator', type: 'string', group:'input-information', editable: true},
    {name: 'availablefrom', field: 'availableRange', type: 'date-range', group:'input-information', editable: true},

    {name: 'detail_lang', field: 'languages', type: 'choice', group:'translations', editable: true, options: ['nl', 'fr', 'en', 'de']},

    {name: 'organiser_keywords', field: 'organizer.labels', type: 'string', group: 'other', editable: true},
    {name: 'organiser_id', field: 'organizer.id', type: 'string', group: 'other', editable: true},
    {name: 'agefrom', field:'typicalAgeRange', type: 'number', group: 'other', editable: true},
    {name: 'price', field: 'price', type: 'number' , group: 'other', editable: true},
    {name: 'organiser_label', field: 'organizer.name.\\*', type: 'tokenized-string', group: 'other', editable: true},
    {name: 'category_facility_name', field:'location.terms.label', type: 'term', group: 'other', editable: true},
    {name: 'category_targetaudience_name', field: 'audienceType', type: 'choice', group: 'other', editable: true, options: ['everyone', 'members', 'education']},

    // The following fields are supported but not named and do not show up in the builder
    // https://github.com/cultuurnet/udb3-search-docs/blob/master/advanced-queries.md#supported-fields
    {field: 'calendarType', type: 'string'},
    {field: 'workflowStatus', type: 'choice', options: ['DRAFT', 'READY_FOR_VALIDATION', 'APPROVED', 'REJECTED', 'DELETED']},
    {field: 'name.nl', type: 'tokenized-string'},
    {field: 'name.fr', type: 'tokenized-string'},
    {field: 'name.de', type: 'tokenized-string'},
    {field: 'name.en', type: 'tokenized-string'},
    {field: 'description.nl', type: 'tokenized-string'},
    {field: 'description.fr', type: 'tokenized-string'},
    {field: 'description.de', type: 'tokenized-string'},
    {field: 'description.en', type: 'tokenized-string'},
    {field: 'terms.id', type: 'string'},
    {field: 'mediaObjectsCount', type: 'number'},
    {field: 'address.\\*.streetAddress', type: 'string'},
    {field: 'location.id', type: 'string'},
    {field: 'location.name.nl', type: 'tokenized-string'},
    {field: 'location.name.fr', type: 'tokenized-string'},
    {field: 'location.name.de', type: 'tokenized-string'},
    {field: 'location.name.en', type: 'tokenized-string'},
    {field: 'location.terms.id', type: 'string'},
    {field: 'organizer.id', type: 'string'},
    {field: 'organizer.name.nl', type: 'tokenized-string'},
    {field: 'organizer.name.fr', type: 'tokenized-string'},
    {field: 'organizer.name.de', type: 'tokenized-string'},
    {field: 'organizer.name.en', type: 'tokenized-string'},

    // Start- and end-date have been dropped in favor of a single date field. Keep these around to map SAPI2 translations.
    {name: 'startdate', field:'dateRange', type: 'date-range'},
    {name: 'enddate', field:'dateRange', type: 'date-range'}
  ]);
})();

// Source: src/search/services/query-tree-translator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.QueryTreeTranslator
 * @description
 * # QueryTreeTranslator
 * Service in the udb.search.
 */
angular
  .module('udb.search')
  .service('QueryTreeTranslator', QueryTreeTranslator);

/* @ngInject */
function QueryTreeTranslator(queryFieldTranslations, queryFields) {
  /**
   * @param {string} field    - The field to translate.
   * @param {string} srcLang  - To source language to translate from.
   */
  var translateField = function (field, srcLang) {
    var translatableFieldName = _.findKey(queryFieldTranslations[srcLang], function (src) {
      return src === field;
    });

    var queryField = (undefined === translatableFieldName) ?
      undefined :
      _.find(queryFields, {name: translatableFieldName.toLowerCase()});

    return (undefined === queryField) ? field : queryField.field;
  };

  var translateNode = function (node, depth) {
    var left = node.left || false,
      right = node.right || false,
      nodes = [];

    if (left) {
      nodes.push(left);
    }
    if (right) {
      nodes.push(right);
    }

    for (var i = 0, len = nodes.length; i < len; i++) {
      var iNode = nodes[i];
      if (typeof iNode === 'object') {
        translateNode(iNode, depth + 1);
      }
    }

    if (node.field) {
      node.field = translateField(node.field, 'sapi2');
      node.field = translateField(node.field, 'en');
      node.field = translateField(node.field, 'nl');
    }

  };

  this.translateQueryTree = function (queryTree) {
    return translateNode(queryTree, 0);
  };
}
QueryTreeTranslator.$inject = ["queryFieldTranslations", "queryFields"];
})();

// Source: src/search/services/query-tree-validator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.QueryTreeValidator
 * @description
 * # QueryTreeValidator
 * Service in the udb.search.
 */
angular.module('udb.search')
  .service('QueryTreeValidator', QueryTreeValidator);

/* @ngInject */
function QueryTreeValidator(queryFields) {

  var validFields = _.union(_.map(queryFields, 'field'), ['_exists_']),
      implicitToken = '<implicit>',
      validParentFields = _(validFields)
        .filter(function (field) {
          return field.indexOf('.') > 0;
        })
        .map(function (field) {
          var fields = field.split('.');
          fields.pop();
          return fields.join('.');
        })
        .value();

  var validateFields = function (current, depth, errors) {
    var left = current.left || false,
      right = current.right || false,
      nodes = [];

    if (left) {
      nodes.push(left);
    }
    if (right) {
      nodes.push(right);
    }

    for (var i = 0, len = nodes.length; i < len; i++) {
      var node = nodes[i];
      if (typeof node === 'object') {
        validateFields(node, depth + 1, errors);
      }
    }

    var queryField = current.field;
    if (typeof(queryField) !== 'undefined') {
      var field = _.trim(queryField, '.\\*');
      var fieldHasWildcard = queryField !== field;

      if (field !== null && field !== implicitToken) {
        if (fieldHasWildcard) {
          if (!_.contains(validParentFields, field)) {
            errors.push(field + ' is not a valid parent search field that can be used with a wildcard');
          }
        } else {
          if (!_.contains(validFields, field)) {
            errors.push(field + ' is not a valid search field');
          }
        }
      }
    }
  };

  this.validate = function (queryTree, errors) {
    validateFields(queryTree, 0, errors);
  };

}
QueryTreeValidator.$inject = ["queryFields"];
})();

// Source: src/search/services/sapi2.field-type-transformers.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.sapi2FieldTypeTransformers
 * @description
 * # sapi2FieldTypeTransformers
 * Value in udb.search module.
 */
angular
  .module('udb.search')
  .value('sapi2FieldTypeTransformers', {
    'string': ['=', '!'],
    'tokenized-string': ['+', '-'],
    'choice': ['=', '!'],
    'term': ['=', '!'],
    'number': ['=', '<', '>'],
    'check': ['='],
    'date-range': ['=', '><', '<', '>']
  });
})();

// Source: src/search/services/sapi2.query-builder.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udbApp.sapi2QueryBuilder
 * @description
 * # sapi2QueryBuilder
 * Service in the udb.search.
 */
angular.module('udb.search')
  .service('sapi2QueryBuilder', QueryBuilder);

QueryBuilder.$inject = [
  'LuceneQueryParser',
  'sapi2QueryTreeValidator',
  'sapi2QueryTreeTranslator',
  'sapi2QueryFields',
  'taxonomyTerms'
];
function QueryBuilder(LuceneQueryParser, QueryTreeValidator, QueryTreeTranslator, queryFields, taxonomyTerms) {
  var implicitToken = '<implicit>';

  this.translate = function (query) {
    QueryTreeTranslator.translateQueryTree(query.queryTree);
  };

  this.validate = function (query) {
    QueryTreeValidator.validate(query.queryTree, query.errors);
  };

  this.isValid = function (query) {
    this.translate(query);
    this.validate(query);

    return query.errors.length === 0;
  };

  this.parseQueryString = function (query) {
    try {
      query.queryTree = LuceneQueryParser.parse(query.queryString);
    } catch (e) {
      query.errors.push(e.message);
    }

    return query.queryTree;
  };

  /**
   *
   * @param {string} queryString
   */
  this.createQuery = function (queryString) {
    var query = {
      originalQueryString: queryString,
      queryString: queryString,
      queryTree: {},
      errors: []
    };

    this.parseQueryString(query);

    return query;
  };

  var printTerm = function (node) {
    var term = node.term,
      isRangeExpression = (node.lowerBound || node.upperBound);

    if (isRangeExpression) {
      var min = node.lowerBound || '*',
        max = node.upperBound || '*',
        inclusive = node.inclusive;

      if (min instanceof Date) {
        min = min.toISOString();
      }
      if (max instanceof Date) {
        max = max.toISOString();
      }

      term = min + ' TO ' + max;

      if (inclusive) {
        term = '[' + term + ']';
      } else {
        term = '{' + term + '}';
      }
    } else {
      // if the term is a phrase surround it with double quotes
      if (node.quoted || term.indexOf(' ') !== -1) {
        term = '"' + term + '"';
      }

      // check for fuzzy search modifier
      if (node.similarity) {
        term += ('~' + node.similarity);
      }

      // check for proximity modifier
      if (node.proximity) {
        term += ('~' + node.proximity);
      }

      // check for prefix modifier
      if (node.prefix) {
        term = node.prefix + term;
      }

      // check for boost modifier
      if (node.boost) {
        term += ('^' + node.boost);
      }
    }

    return term;
  };

  var unparseNode = function (branch, depth, sentence) {

    if (branch.left) {
      var result,
        operator = (branch.operator === implicitToken) ? ' ' : (' ' + branch.operator + ' ');

      if (branch.right) {
        result = unparseNode(branch.left, depth + 1, sentence);
        result += operator;
        result += unparseNode(branch.right, depth + 1, sentence);

        if (depth > 0) {
          result = '(' + result + ')';
        }

        if (branch.field && branch.field !== implicitToken) {
          result = (branch.field + ':') + result;
        }

      } else {
        result = unparseNode(branch.left, depth + 1, sentence);
      }

      return result;

    } else {
      var fieldQuery = '',
        term = printTerm(branch);

      if (branch.field !== implicitToken && branch.field !== null) {
        var fieldPrefix = '';

        if (_.contains(['!', '+', '-'], branch.transformer)) {
          fieldPrefix = branch.transformer;
        }

        fieldQuery += (fieldPrefix + branch.field + ':');
      }

      fieldQuery += term;

      return sentence += fieldQuery;
    }

    if (depth === 0) {
      return sentence;
    }
  };

  this.unparse = function (query) {
    query.queryString = this.unparseQueryTree(query.queryTree);
    return query.queryString;
  };

  this.unparseQueryTree = function (queryTree) {
    var queryString = '';

    if (queryTree.left) {
      queryString = unparseNode(queryTree, 0, '');
    }

    return queryString;
  };

  function printTreeField(field) {
    if (field.fieldType === 'date-range') {
      cleanUpDateRangeField(field);
    }
    var transformedField = transformField(field);
    return transformedField.field + ':' + printTerm(transformedField);
  }

  /**
   * @description
   * Unparse a grouped field information tree to a query string
   *
   * @param   {object}  groupedTree     A tree structure with field groups
   * @return  {string}  A query string
   */
  this.unparseGroupedTree = function (groupedTree) {
    var root = groupedTree;
    var queryString = '';

    _.forEach(root.nodes, function (node, nodeIndex) {
      var nodeString = '';
      if (node.type === 'group') {
        var group = node;

        _.forEach(group.nodes, function (field, fieldIndex) {

          // check if the field is actually a sub group
          if (field.type === 'group') {

            var subGroup = field,
              subGroupString = ' ';

            if (subGroup.nodes.length === 1) {
              var singleField = subGroup.nodes[0];
              subGroupString += subGroup.operator + ' ' + printTreeField(singleField);
            } else {
              subGroupString += subGroup.operator + ' (';
              _.forEach(subGroup.nodes, function (field, fieldIndex) {
                if (fieldIndex) {
                  subGroupString += ' OR ';
                }
                subGroupString += printTreeField(field);
              });
              subGroupString += ')';
            }

            nodeString += subGroupString;
          } else {
            if (fieldIndex) {
              nodeString += ' ' + node.operator + ' ';
            }

            nodeString += printTreeField(field);

            var nextIndex = fieldIndex + 1;
            if (fieldIndex && nextIndex < group.nodes.length && group.nodes[nextIndex].type === 'group') {
              nodeString = '(' + nodeString + ')';
            }
          }
        });

        if (root.nodes.length > 1 && group.nodes.length > 1) {
          nodeString = '(' + nodeString + ')';
        }
      } else {
        console.log('Expecting a group but found: ' + node.type);
      }

      // do not prepend the first node with an operator
      if (nodeIndex || node.excluded) {
        var operator = node.excluded ? 'NOT' : 'OR';
        queryString += ' ' + operator + ' ';
      }
      queryString += nodeString;
    });

    return queryString;
  };

  function cleanUpDateRangeField(field) {
    if (field.transformer === '=' && moment(field.lowerBound).isValid()) {
      field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      field.upperBound = moment(field.lowerBound).endOf('day').toDate();
    }

    if (field.transformer === '><') {
      if (moment(field.lowerBound).isValid()) {
        field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      } else {
        field.lowerBound = '*';
      }

      if (moment(field.upperBound).isValid()) {
        field.upperBound = moment(field.upperBound).endOf('day').toDate();
      } else {
        field.upperBound = '*';
      }
    }

    if (field.transformer === '<') {
      if (moment(field.upperBound).isValid()) {
        field.upperBound = moment(field.upperBound).endOf('day').toDate();
      } else {
        field.upperBound = moment().endOf('day').toDate();
      }
    }

    if (field.transformer === '>') {
      if (moment(field.lowerBound).isValid()) {
        field.lowerBound = moment(field.lowerBound).startOf('day').toDate();
      } else {
        field.lowerBound = moment().startOf('day').toDate();
      }
    }
  }

  function transformField(originalField) {
    var field = _.clone(originalField);

    switch (field.transformer) {
      case '!':
        field.field = '!' + field.field;
        break;
      case '-':
        field.field = '-' + field.field;
        break;
      case '<':
        field.lowerBound = '*';
        break;
      case '>':
        field.upperBound = '*';
        break;
      case '=':
        if (field.fieldType !== 'date-range') {
          field.upperBound = undefined;
          field.lowerBound = undefined;
        }
        break;
    }

    return field;
  }

  /**
   * @description
   * Generate a grouped field information tree from a query tree
   * The query tree should not nest different operators deeper than 2 levels.
   * Modifiers will be ignored.
   *
   * @param   {object}  queryTree   - The queryTree to get information from
   *
   * @return  {object}              - A grouped field information tree
   */
  this.groupQueryTree = function (queryTree) {
    var groupedFieldTree = {
      type: 'root',
      nodes: [],
      operator: queryTree.operator || 'OR'
    };

    // If the query tree of an empty search is used, add a default field and group
    if (!queryTree.left) {
      var group = {
        type: 'field',
        operator: 'OR',
        nodes: [
          {
            field: 'title',
            term: '',
            fieldType: 'tokenized-string',
            transformer: '+'
          }
        ]
      };
      groupedFieldTree.nodes.push(group);
    } else {
      this.groupNode(queryTree, groupedFieldTree);
      this.cleanUpGroupedFieldTree(groupedFieldTree);
    }

    return groupedFieldTree;
  };

  /**
   * @description
   * Clean up a field tree after grouping.
   * Used by groupQueryTree to cleanse a freshly grouped tree.
   *
   * @param {object} groupedFieldTree
   */
  this.cleanUpGroupedFieldTree = function (groupedFieldTree) {
    _.forEach(groupedFieldTree.nodes, function (fieldGroup) {
      // This property is just used to track implicit fields and can be removed when switching groups.
      delete fieldGroup.implicitField;

      // Switch the type of the node to field instead of group if it only contains one field.
      if (fieldGroup.nodes && fieldGroup.nodes.length === 1) {
        fieldGroup.type = 'field';
      }

      // Replace any remaining implicitly declared operators with OR.
      // Assuming the following term grouping syntax was used "field:(term1 term2)".
      if (fieldGroup.operator === implicitToken) {
        fieldGroup.operator = 'OR';
      }

      // add field-query type and map options for term and choice fields
      _.forEach(fieldGroup.nodes, function (field) {

        // Find the field-query field type
        var fieldType = _.find(queryFields, function (fieldType) {
          return fieldType.name === field.field;
        });

        // Set the type and map options depending on field type
        if (fieldType) {
          field.fieldType = fieldType.type;

          // terms should be matched to their domain and used as the field-query field
          // if no matching taxonomy term is found the query-field should be removed
          if (fieldType.type === 'term') {
            var taxonomyTerm = _.find(taxonomyTerms, function (term) {
              return term.label.toUpperCase() === field.term.toUpperCase();
            });

            if (taxonomyTerm) {
              var domainFieldName = 'category_' + taxonomyTerm.domain + '_name';
              field.field = domainFieldName;
              field.term = taxonomyTerm.label;
            } else {
              field.invalid = true;
            }
          }

          // Look up options for choice field-query
          if (fieldType.type === 'choice') {
            var option = _.find(fieldType.options, function (option) {
              return option === field.term.toUpperCase();
            });

            if (option) {
              field.term = option;
            } else {
              field.invalid = true;
            }
          }

          // Make sure boolean field-query values are either true or false
          if (fieldType.type === 'check') {
            if (_.contains(['TRUE', 'FALSE'], field.term.toUpperCase())) {
              field.term = field.term.toUpperCase();
            } else {
              field.invalid = true;
            }
          }

          if (fieldType.type === 'tokenized-string') {
            if (!field.transformer || field.transformer === '=') {
              field.transformer = '+';
            }

            if (field.transformer === '!') {
              field.transformer = '-';
            }
          }

          if (fieldType.type === 'string') {
            if (!field.transformer || field.transformer === '+') {
              field.transformer = '=';
            }

            if (field.transformer === '-') {
              field.transformer = '!';
            }
          }

          // Numbers can be a single or ranged term
          // The editor only handles ranges that have one of the boundaries set to infinity
          if (fieldType.type === 'number') {
            if (field.term) {
              field.transformer = '=';
            } else {
              if (field.upperBound && field.lowerBound === '*') {
                field.transformer = '<';
              } else if (field.lowerBound && field.upperBound === '*') {
                field.transformer = '>';
              } else {
                field.transformer = '=';
                field.term = field.lowerBound || field.upperBound;
                field.lowerBound = undefined;
                field.upperBound = undefined;
              }
            }
          }

          if (fieldType.type === 'date-range') {
            var startDate = moment(field.lowerBound),
              endDate = moment(field.upperBound);

            if (startDate.isValid() && endDate.isValid()) {
              if (startDate.isSame(endDate, 'day')) {
                field.transformer = '=';
              } else {
                field.transformer = '><';
              }
            } else {
              if (!startDate.isValid() && endDate.isValid()) {
                field.transformer = '<';
              }

              if (!endDate.isValid() && startDate.isValid()) {
                field.transformer = '>';
              }
            }
          }
        }

      });
    });
  };

  /**
   * @description
   * Group a node in a query tree branch.
   * You should not need to call this method directly, use groupQueryTree instead.
   *
   * @param {object}  branch        - The branch of a query tree
   * @param {object}  fieldTree     - The field tree that will be returned
   * @param {object}  [fieldGroup]  - Keeps track of the current field group
   */
  this.groupNode = function (branch, fieldTree, fieldGroup) {
    // if the operator is implicit, you're dealing with grouped terms eg: field:(term1 term2)
    if (branch.operator === implicitToken) {
      branch.operator = 'OR';
    }
    if (!fieldGroup || branch.operator && (branch.operator !== fieldGroup.operator)) {
      var newFieldGroup = {
        type: 'group',
        operator: branch.operator || 'OR',
        nodes: []
      };

      fieldTree.nodes.push(newFieldGroup);
      fieldGroup = newFieldGroup;
    }

    // Track the last used field name to apply to implicitly defined terms
    if (branch.field && branch.field !== implicitToken) {
      fieldGroup.implicitField = branch.field;
    }

    if (branch.term || (branch.lowerBound && branch.upperBound)) {
      var field = branch.field;

      // Handle implicit field names by using the last used field name
      if (field === implicitToken) {
        if (fieldGroup.implicitField) {
          field = fieldGroup.implicitField;
        } else {
          throw 'Field name is implicit and not defined elsewhere.';
        }
      }

      fieldGroup.nodes.push(makeField(branch, field));
    }

    if (branch.left) {
      this.groupNode(branch.left, fieldTree, fieldGroup);
      if (branch.right) {
        this.groupNode(branch.right, fieldTree, fieldGroup);
      }
    }
  };

  /**
   * @description
   * Generate a field object that's used to render the query editor fields.
   *
   * @param {object} node The node with all the necessary information
   * @return {object} A field object used to render the query editor
   */
  function makeField(node, fieldName) {
    var fieldType = _.find(queryFields, function (type) {
        return type.name === node.field;
      }),
      field = {
        field: fieldName || node.field,
        fieldType: fieldType || 'string',
        transformer: node.transformer || '='
      };

    if (node.lowerBound || node.upperBound) {
      field.lowerBound = node.lowerBound || undefined;
      field.upperBound = node.upperBound || undefined;
      field.inclusive = node.inclusive || true;
    } else {
      field.term = node.term || undefined;
    }

    return field;
  }
}
})();

// Source: src/search/services/sapi2.query-fields.value.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.sapi2QueryFields
 * @description
 * Query field types:
 * - string
 * - string
 * - choice
 * - check
 * - date-range
 * - term
 *
 * When displayed in the editor, the first occurrence of a group name will determine its order in relation to the other
 * groups.
 */
angular
  .module('udb.search')
  .value('sapi2QueryFields', [
    {name: 'cdbid', type: 'string', group: 'what', editable: true},
    {name: 'keywords', type: 'string', group: 'what', editable: true},
    {name: 'title', type: 'tokenized-string', group: 'what', editable: true},
    {name: 'category_eventtype_name', type: 'term', group: 'what', editable: true},
    {name: 'category_theme_name', type: 'term', group: 'what', editable: true},

    {name: 'city', type: 'string', group:'where', editable: true},
    {name: 'zipcode', type: 'string', group:'where', editable: true},
    {name: 'country', type: 'choice', group:'where', editable: false, options: ['AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'YE', 'YT', 'ZA', 'ZM']},
    {name: 'location_label', type: 'tokenized-string', group:'where', editable: true},
    {name: 'category_flandersregion_name', type: 'term' , group:'where', editable: true},

    {name: 'startdate', type: 'date-range', group:'when', editable: true},
    {name: 'enddate', type: 'date-range', group:'when', editable: true},
    {name: 'permanent', type: 'check', group:'when', editable: true},

    {name: 'lastupdated', type: 'date-range', group:'input-information', editable: true},
    {name: 'lastupdatedby', type: 'string', group:'input-information', editable: true},
    {name: 'creationdate', type: 'date-range', group:'input-information', editable: true},
    {name: 'createdby', type: 'string', group:'input-information', editable: true},
    {name: 'availablefrom', type: 'date-range', group:'input-information', editable: true},

    {name: 'detail_lang', type: 'choice', group:'translations', editable: true, options: ['nl', 'fr', 'en', 'de']},

    {name: 'organiser_keywords', type: 'string', group: 'other', editable: true},
    {name: 'agefrom', type: 'number', group: 'other', editable: true},
    {name: 'price', type: 'number' , group: 'other', editable: true},
    {name: 'organiser_label', type: 'tokenized-string', group: 'other', editable: true},
    {name: 'category_facility_name', type: 'term', group: 'other', editable: true},
    {name: 'category_targetaudience_name', type: 'term', group: 'other', editable: true},
    {name: 'category_publicscope_name', type: 'term', group: 'other', editable: true},

    {name: 'like_count', type: 'number'},
    {name: 'recommend_count', type: 'number'},
    {name: 'attend_count', type: 'number'},
    {name: 'comment_count', type: 'number'},
    {name: 'category_name', type: 'term'},
    {name: 'externalid', type: 'string'},
    {name: 'private', type: 'check'},
    {name: 'physical_gis', type: 'string'}
  ]);
})();

// Source: src/search/services/sapi2.query-tree-translator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.sapi2QueryTreeTranslator
 * @description
 * # QueryTreeTranslator
 * Service in the udb.search.
 */
angular
  .module('udb.search')
  .service('sapi2QueryTreeTranslator', QueryTreeTranslator);

/* @ngInject */
function QueryTreeTranslator(queryFieldTranslations) {

  var translations = queryFieldTranslations;

  /**
   * @param {string} field    - The field to translate.
   * @param {string} srcLang  - To source language to translate from.
   */
  var translateField = function (field, srcLang) {
    var translation = field,
      identifier = _.findKey(translations[srcLang], function (src) {
        return src === field;
      });

    if (identifier) {
      translation = identifier.toLowerCase();
    }

    return translation;
  };

  var translateNode = function (node, depth) {
    var left = node.left || false,
      right = node.right || false,
      nodes = [];

    if (left) {
      nodes.push(left);
    }
    if (right) {
      nodes.push(right);
    }

    for (var i = 0, len = nodes.length; i < len; i++) {
      var iNode = nodes[i];
      if (typeof iNode === 'object') {
        translateNode(iNode, depth + 1);
      }
    }

    if (node.field) {
      node.field = translateField(node.field, 'en');
      node.field = translateField(node.field, 'nl');
    }

  };

  this.translateQueryTree = function (queryTree) {
    return translateNode(queryTree, 0);
  };
}
QueryTreeTranslator.$inject = ["queryFieldTranslations"];
})();

// Source: src/search/services/sapi2.query-tree-validator.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.sapi2QueryTreeValidator
 * @description
 * # sapi2QueryTreeValidator
 * Service in the udb.search.
 */
angular.module('udb.search')
  .service('sapi2QueryTreeValidator', QueryTreeValidator);

QueryTreeValidator.$inject = ['sapi2QueryFields'];
function QueryTreeValidator(queryFields) {

  var validFieldNames = _.union(_.map(queryFields, 'name'), ['_exists_']),
    implicitToken = '<implicit>',
    validParentFieldNames = _(validFieldNames)
      .filter(function (fieldName) {
        return fieldName.indexOf('.') > 0;
      })
      .map(function (fieldName) {
        return fieldName.split('.')[0];
      })
      .value();

  var validateFields = function (current, depth, errors) {
    var left = current.left || false,
      right = current.right || false,
      nodes = [];

    if (left) {
      nodes.push(left);
    }
    if (right) {
      nodes.push(right);
    }

    for (var i = 0, len = nodes.length; i < len; i++) {
      var node = nodes[i];
      if (typeof node === 'object') {
        validateFields(node, depth + 1, errors);
      }
    }

    var field = current.field;
    if (typeof(field) !== 'undefined') {

      var fieldName = _.trim(field, '.\\*');
      var fieldHasWildcard = field !== fieldName;

      if (fieldName !== null && fieldName !== implicitToken) {

        if (fieldHasWildcard) {
          if (!_.contains(validParentFieldNames, fieldName)) {
            errors.push(fieldName + ' is not a valid parent search field that can be used with a wildcard');
          }
        } else {
          if (!_.contains(validFieldNames, fieldName)) {
            errors.push(fieldName + ' is not a valid search field');
          }
        }
      }
    }
  };

  this.validate = function (queryTree, errors) {
    validateFields(queryTree, 0, errors);
  };

}
})();

// Source: src/search/services/search-api-switcher.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.searchApiSwitcher
 * @description
 * # searchApiSwitcher
 * This service provides context to switch between SAPI2 and SAPI3
 */
angular
  .module('udb.search')
  .service('searchApiSwitcher', SearchApiSwitcher);

/* @ngInject */
function SearchApiSwitcher(appConfig, udbApi, $cookies, sapi2QueryBuilder, LuceneQueryBuilder) {
  var switcher = this;
  var apiVersionCookieKey = 'search-api-version';
  var defaultApiVersion = _.get(appConfig, 'search.defaultApiVersion', '2');
  switcher.getApiVersion = getApiVersion;

  /**
   * @returns {Number}
   */
  function getApiVersion() {
    return parseInt($cookies.get(apiVersionCookieKey) || defaultApiVersion);
  }

  /**
   * @param {string} queryString
   * @param {number} start
   * @returns {Promise.<PagedCollection>}
   */
  switcher.findOffers = function (queryString, start) {
    start = start || 0;
    return (getApiVersion() > 2) ? udbApi.findOffers(queryString, start) : udbApi.findEvents(queryString, start);
  };

  /**
   * @param {EventFormData} formData
   * @returns {object}
   */
  switcher.getDuplicateSearchConditions = function (formData) {
    var location = formData.getLocation();

    if (getApiVersion() > 2) {
      if (formData.isEvent) {
        /*jshint camelcase: false*/
        /*jscs:disable requireCamelCaseOrUpperCaseIdentifiers */
        return {
          'name.\\*': formData.name.nl,
          'location.name.\\*' : location.name
        };
      }
      else {
        /*jshint camelcase: false */
        return {
          'name.\\*': formData.name.nl,
          'postalCode': formData.address.postalCode,
          'labels': 'UDB3 place'
        };
      }
    } else {
      if (formData.isEvent) {
        /*jshint camelcase: false*/
        /*jscs:disable requireCamelCaseOrUpperCaseIdentifiers */
        return {
          text: formData.name.nl,
          location_label : location.name
        };
      }
      else {
        /*jshint camelcase: false */
        return {
          text: formData.name.nl,
          zipcode: formData.address.postalCode,
          keywords: 'UDB3 place'
        };
      }
    }
  };

  /**
   * @returns {object}
   *  An angular directive definition object.
   */
  switcher.getQueryEditorFieldDefinition = function() {
    if (getApiVersion() > 2) {
      return {
        templateUrl: 'templates/query-editor-field.directive.html',
        restrict: 'E',
        controller: 'QueryEditorFieldController'
      };
    } else {
      return {
        templateUrl: 'templates/sapi2.query-editor-field.directive.html',
        restrict: 'E',
        controller: 'QueryEditorFieldController'
      };
    }
  };

  /**
   * @returns {string}
   *  A query editor controller name.
   */
  switcher.getQueryEditorController = function() {
    if (getApiVersion() > 2) {
      return 'QueryEditorController';
    } else {
      return 'sapi2QueryEditorController';
    }
  };

  /**
   * @returns {object}
   *  A query builder instance.
   */
  switcher.getQueryBuilder = function () {
    if (getApiVersion() > 2) {
      return LuceneQueryBuilder;
    } else {
      return sapi2QueryBuilder;
    }
  };
}
SearchApiSwitcher.$inject = ["appConfig", "udbApi", "$cookies", "sapi2QueryBuilder", "LuceneQueryBuilder"];
})();

// Source: src/search/services/search-helper.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.searchHelper
 * @description
 * # searchHelper
 * Service in the udb.search.
 */
angular
  .module('udb.search')
  .service('searchHelper', SearchHelper);

/* @ngInject */
function SearchHelper(searchApiSwitcher, $rootScope) {
  var query = null;
  var queryTree = null;
  var queryBuilder = searchApiSwitcher.getQueryBuilder();

  this.clearQueryTree = function () {
    queryTree = null;
  };

  /**
   *
   * @param {string} queryString
   * @param {boolean} forceUpdate
   *  Set to true to emit a "searchQueryChanged" even if the query has not changed.
   *  A possible use-case is navigating back to the search page and reloading the same query.
   */
  this.setQueryString = function (queryString, forceUpdate) {
    var newQuery = false;

    if (!query || query.queryString !== queryString) {
      newQuery = queryBuilder.createQuery(queryString);
      queryBuilder.isValid(newQuery);
      this.setQuery(newQuery);
      queryTree = null;
    }

    if (query && !newQuery && forceUpdate) {
      this.setQuery(query);
    }
  };

  this.setQueryTree = function (groupedQueryTree) {
    var queryString = queryBuilder.unparseGroupedTree(groupedQueryTree);
    var newQuery = queryBuilder.createQuery(queryString);
    queryBuilder.isValid(newQuery);
    this.setQuery(newQuery);

    queryTree = groupedQueryTree;
  };

  this.setQuery = function (searchQuery) {
    query = searchQuery;
    $rootScope.$emit('searchQueryChanged', searchQuery);
  };

  this.getQuery = function () {
    return query;
  };

  this.getQueryTree = function () {
    return angular.copy(queryTree);
  };
}
SearchHelper.$inject = ["searchApiSwitcher", "$rootScope"];
})();

// Source: src/search/services/search-result-viewer.factory.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.SearchResultViewer
 * @description
 * # SearchResultViewer
 * Search result viewer factory
 */
angular
  .module('udb.search')
  .factory('SearchResultViewer', SearchResultViewerFactory);

function SearchResultViewerFactory() {

  var SelectionState = {
    ALL: {'name': 'all', 'icon': 'fa-check-square'},
    NONE: {'name': 'none', 'icon': 'fa-square-o'},
    SOME: {'name': 'some', 'icon': 'fa-minus-square'}
  };

  var identifyItem = function (event) {
    return event['@id'].split('/').pop();
  };

  /**
   * @class SearchResultViewer
   * @constructor
   * @param    {number}     pageSize        The number of items shown per page
   * @param    {number}     activePage
   *
   * @property {object[]}   events          A list of json-LD event objects
   * @property {number}     pageSize        The current page size
   * @property {number}     totalItems      The total items found
   * @property {number}     currentPage     The index of the current page without zeroing
   * @property {boolean}    loading         A flag to indicate the period between changing of the query and
   *                                        receiving of the results.
   * @property {object}     eventProperties A list of event properties that can be shown complementary
   * @property {array}      eventSpecifics  A list of specific event info that can be shown exclusively
   * @property {SelectionState} selectionState Enum that keeps the state of selected results
   */
  var SearchResultViewer = function (pageSize, activePage) {
    this.pageSize = pageSize || 30;
    this.events = [];
    this.totalItems = 0;
    this.currentPage = activePage || 1;
    this.loading = true;
    this.lastQuery = null;
    this.eventProperties = {
      description: {name: 'Beschrijving', visible: false},
      labels: {name: 'Labels', visible: false},
      image: {name: 'Afbeelding', visible: false}
    };
    this.eventSpecifics = [
      {id: 'input', name: 'Invoer-informatie'}
    ];
    this.activeSpecific = this.eventSpecifics[0];
    this.selectedOffers = [];
    this.selectionState = SelectionState.NONE;
    this.querySelected = false;
  };

  SearchResultViewer.prototype = {
    enableSpecifics: function (specifics) {
      this.eventSpecifics = _.uniq(_.union(this.eventSpecifics, specifics), 'id');
    },
    toggleSelection: function () {
      var state = this.selectionState;

      if (state === SelectionState.SOME || state === SelectionState.ALL) {
        this.deselectPageItems();
        if (this.querySelected) {
          this.deselectAll();
          this.querySelected = false;
        }
      } else {
        this.selectPageItems();
      }
    },
    selectQuery: function () {
      this.querySelected = true;
      this.selectPageItems();
    },
    updateSelectionState: function () {
      var selectedOffers = this.selectedOffers,
          selectedPageItems = _.filter(this.events, function (event) {
            return _.contains(selectedOffers, event);
          });

      if (selectedPageItems.length === this.pageSize) {
        this.selectionState = SelectionState.ALL;
      } else if (selectedPageItems.length > 0) {
        this.selectionState = SelectionState.SOME;
      } else {
        this.selectionState = SelectionState.NONE;
      }
    },
    toggleSelect: function (offer) {

      // Prevent toggling individual items when the whole query is selected
      if (this.querySelected) {
        return;
      }

      // select the offer from the result viewer events
      // it's this "event" that will get stored
      var theOffer = _.filter(this.events, function (event) {
            return offer['@id'] === event['@id'];
          }).pop();

      var selectedOffers = this.selectedOffers,
          isSelected = _.contains(selectedOffers, theOffer);

      if (isSelected) {
        _.remove(selectedOffers, function (selectedOffer) {
          return selectedOffer['@id'] === theOffer['@id'];
        });
      } else {
        selectedOffers.push(theOffer);
      }

      this.updateSelectionState();
    },
    deselectAll: function () {
      this.selectedOffers = [];
      this.selectionState = SelectionState.NONE;
    },
    deselectPageItems: function () {
      var selectedOffers = this.selectedOffers;
      _.forEach(this.events, function (event) {
        _.remove(selectedOffers, function (offer) {
          return offer['@id'] === event['@id'];
        });
      });

      this.selectionState = SelectionState.NONE;
    },
    selectPageItems: function () {
      var events = this.events,
          selectedOffers = this.selectedOffers;

      _.each(events, function (event) {
        selectedOffers.push(event);
      });

      this.selectedOffers = _.uniq(selectedOffers);
      this.selectionState = SelectionState.ALL;
    },
    isOfferSelected: function (offer) {
      // get the right offer object from the events list
      var theOffer = _.filter(this.events, function (event) {
            return offer['@id'] === event['@id'];
          }).pop();

      return _.contains(this.selectedOffers, theOffer);
    },
    /**
     * @param {PagedCollection} pagedResults
     */
    setResults: function (pagedResults) {
      var viewer = this;

      viewer.pageSize = pagedResults.itemsPerPage || 30;
      viewer.events = pagedResults.member || [];
      viewer.totalItems = pagedResults.totalItems || 0;

      viewer.loading = false;
      if (this.querySelected) {
        this.selectPageItems();
      }
      this.updateSelectionState();
    },
    queryChanged: function (query) {
      this.loading = true;
      this.selectedOffers = [];
      this.querySelected = false;

      // prevent the initial search from resetting the active page
      if (this.lastQuery && this.lastQuery !== query) {
        this.currentPage = 1;
      }

      this.lastQuery = query;
    },
    activateSpecific: function (specific) {
      this.activeSpecific = specific;
    },
    /**
     * Checks if at least one of the event properties is visible
     * @return {boolean}
     */
    isShowingProperties: function () {
      var property = _.find(this.eventProperties, function (property) {
        return property.visible;
      });

      return !!property;
    }
  };

  return (SearchResultViewer);
}
})();

// Source: src/search/services/variation-repository.service.js
(function () {
'use strict';

/**
 * @ngdoc service
 * @name udb.search.variationRepository
 * @description
 * # variationRepository
 * Service in the udb.search.
 */
angular
  .module('udb.search')
  .service('variationRepository', VariationRepository);

/* @ngInject */
function VariationRepository(udbApi, $cacheFactory, $q, UdbEvent, $rootScope, UdbPlace) {

  var requestChain = $q.when();
  var interruptRequestChain = false;
  var personalVariationCache = $cacheFactory('personalVariationCache');

  this.getPersonalVariation = function (offer) {
    var deferredVariation =  $q.defer(),
        personalVariation = personalVariationCache.get(offer['@id']);

    if (personalVariation) {
      if (personalVariation === 'no-personal-variation') {
        deferredVariation.reject('there is no personal variation for offer with url: ' + offer['@id']);
      } else {
        deferredVariation.resolve(personalVariation);
      }
    } else {
      var userPromise = udbApi.getMe();

      userPromise
        .then(function(user) {
          requestChain = requestChain.then(
            requestVariation(user.id, 'personal', offer['@id'], deferredVariation)
          );
        });
    }

    return deferredVariation.promise;
  };

  function requestVariation(userId, purpose, offerUrl, deferredVariation) {
    return function () {
      var offerLocation = offerUrl.toString();

      if (interruptRequestChain) {
        deferredVariation.reject('interrupting request for offer variation located at: ' + offerLocation);
        return deferredVariation;
      }

      var personalVariationRequest = udbApi.getOfferVariations(userId, purpose, offerUrl, deferredVariation);

      personalVariationRequest.success(function (variations) {
        var jsonPersonalVariation = _.first(variations.member);
        if (jsonPersonalVariation) {
          var variation;
          if (jsonPersonalVariation['@context'] === '/api/1.0/event.jsonld') {
            variation = new UdbEvent(jsonPersonalVariation);
          } else if (jsonPersonalVariation['@context'] === '/api/1.0/place.jsonld') {
            variation = new UdbPlace(jsonPersonalVariation);
          }
          personalVariationCache.put(offerLocation, variation);
          deferredVariation.resolve(variation);
        } else {
          personalVariationCache.put(offerLocation, 'no-personal-variation');
          deferredVariation.reject('there is no personal variation for the offer located at: ' + offerLocation);
        }
      });

      personalVariationRequest.error(function () {
        deferredVariation.reject('no variations found for offer located at: ' + offerLocation);
      });

      return personalVariationRequest.then();
    };
  }

  /**
   * @param {string} offerLocation
   * @param {(UdbPlace|UdbEvent)} variation
   */
  this.save = function (offerLocation, variation) {
    personalVariationCache.put(offerLocation, variation);
  };

  /**
   * @param {string} offerLocation
   */
  this.remove = function (offerLocation) {
    personalVariationCache.remove(offerLocation);
  };

  $rootScope.$on('$locationChangeStart', function() {
    interruptRequestChain = true;
    requestChain = requestChain.finally(function () {
      interruptRequestChain = false;
    });
  });
}
VariationRepository.$inject = ["udbApi", "$cacheFactory", "$q", "UdbEvent", "$rootScope", "UdbPlace"];
})();

// Source: src/search/ui/event-translation-state.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc constant
 * @name udb.search.EventTranslationState
 * @description
 * # EventTranslationState
 * Event translation state
 */
angular
  .module('udb.search')
  .constant(
  'EventTranslationState',
  /**
   * Enum for event translation states
   * @readonly
   * @enum {string}
   */
  {
    ALL: {'name': 'all', 'icon': 'fa-circle'},
    NONE: {'name': 'none', 'icon': 'fa-circle-o'},
    SOME: {'name': 'some', 'icon': 'fa-dot-circle-o'}
  }
);
})();

// Source: src/search/ui/event.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udbEvent
 */
angular
  .module('udb.search')
  .directive('udbEvent', udbEvent);

/* @ngInject */
function udbEvent() {
  var eventDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'eventCtrl',
    templateUrl: 'templates/event.directive.html'
  };

  return eventDirective;
}
})();

// Source: src/search/ui/offer.controller.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.controller:OfferController
 * @description
 * # OfferController
 */
angular
  .module('udb.search')
  .controller('OfferController', OfferController);

/* @ngInject */
function OfferController(
  udbApi,
  $scope,
  jsonLDLangFilter,
  EventTranslationState,
  offerTranslator,
  offerLabeller,
  $window,
  offerEditor,
  variationRepository,
  $q,
  appConfig,
  $uibModal,
  $translate
) {
  var controller = this;
  var cachedOffer;
  var defaultLanguage = $translate.use() || 'nl';

  controller.translation = false;
  controller.activeLanguage = defaultLanguage;
  controller.languageSelector = [
    {'lang': 'fr'},
    {'lang': 'en'},
    {'lang': 'de'}
  ];
  controller.labelRemoved = labelRemoved;

  controller.init = function () {
    if (!$scope.event.title) {
      controller.fetching = true;

      return udbApi
        .getOffer($scope.event['@id'])
        .then(function (offerObject) {
          var sortedFacilities = offerObject.facilities.sort(
            function(a, b) {
              return a.label.localeCompare(b.label);
            });
          offerObject.facilities = sortedFacilities;

          cachedOffer = offerObject;
          cachedOffer.updateTranslationState();

          $scope.event = jsonLDLangFilter(cachedOffer, defaultLanguage, true);
          $scope.offerType = $scope.event.url.split('/').shift();
          $scope.translatedOfferType = $translate.instant('offerTypes.' + $scope.event.type.label);
          controller.offerExpired = $scope.offerType === 'event' ? offerObject.isExpired() : false;
          controller.hasFutureAvailableFrom = offerObject.hasFutureAvailableFrom();
          controller.fetching = false;
          watchLabels();
          return cachedOffer;
        });
    } else {
      controller.fetching = false;
    }
  };

  // initialize controller and take optional event actions
  $q.when(controller.init())
    // translate location before fetching the maybe non-existant variation
    // a variation does not change the location
    .then(translateLocation)
    .then(fetchPersonalVariation)
    .then(ifOfferIsEvent)
    .finally(function () {
      controller.editable = true;
    });

  function ifOfferIsEvent(offer) {
    if (offer && $scope.event.url.split('/').shift() === 'event') {
      return $q.resolve(offer);
    } else {
      return $q.reject();
    }
  }

  function watchLabels() {
    $scope.$watch(function () {
      return cachedOffer.labels;
    }, function (labels) {
      $scope.event.labels = angular.copy(labels);
    });
  }

  controller.hasActiveTranslation = function () {
    var offer = cachedOffer;
    return offer && offer.translationState[controller.activeLanguage] !== EventTranslationState.NONE;
  };

  controller.getLanguageTranslationIcon = function (lang) {
    var icon = EventTranslationState.NONE.icon;

    if (cachedOffer && lang) {
      icon = cachedOffer.translationState[lang].icon;
    }

    return icon;
  };

  controller.translate = function () {
    controller.applyPropertyChanges('name');
    controller.applyPropertyChanges('description');
  };

  /**
   * Sets the provided language as active or toggles it off when already active
   *
   * @param {String} lang
   */
  controller.toggleLanguage = function (lang) {
    if (lang === controller.activeLanguage) {
      controller.stopTranslating();
    } else {
      controller.activeLanguage = lang;
      controller.translation = jsonLDLangFilter(cachedOffer, controller.activeLanguage);
    }
  };

  controller.hasPropertyChanged = function (propertyName) {
    var lang = controller.activeLanguage,
        translation = controller.translation;

    return controller.translation && cachedOffer[propertyName][lang] !== translation[propertyName];
  };

  controller.undoPropertyChanges = function (propertyName) {
    var lang = controller.activeLanguage,
        translation = controller.translation;

    if (translation) {
      translation[propertyName] = cachedOffer[propertyName][lang];
    }
  };

  controller.applyPropertyChanges = function (propertyName) {
    var translation = controller.translation[propertyName];
    translateEventProperty(propertyName, translation, propertyName);
  };

  controller.stopTranslating = function () {
    controller.translation = undefined;
    controller.activeLanguage = defaultLanguage;
  };

  function translateEventProperty(property, translation, apiProperty) {
    var language = controller.activeLanguage,
        udbProperty = apiProperty || property;

    if (translation && translation !== cachedOffer[property][language]) {
      offerTranslator
        .translateProperty(cachedOffer, udbProperty, language, translation)
        .then(cachedOffer.updateTranslationState(cachedOffer));
    }
  }

  // Labelling
  /**
   * @param {Label} newLabel
   */
  controller.labelAdded = function (newLabel) {
    var similarLabel = _.find(cachedOffer.labels, function (label) {
      return newLabel.name.toUpperCase() === label.toUpperCase();
    });
    if (similarLabel) {
      $scope.$apply(function () {
        $scope.event.labels = angular.copy(cachedOffer.labels);
      });
      $window.alert('Het label "' + newLabel.name + '" is reeds toegevoegd als "' + similarLabel + '".');
    } else {
      offerLabeller.label(cachedOffer, newLabel.name)
        .then(function(response) {
          if (response.success) {
            controller.labelResponse = 'success';
            controller.addedLabel = response.name;
          }
          else {
            controller.labelResponse = 'error';
            controller.labelsError = response;
          }
          $scope.event.labels = angular.copy(cachedOffer.labels);
        });
    }
  };

  function clearLabelsError() {
    controller.labelResponse = '';
    controller.labelsError = '';
  }

  /**
   * @param {ApiProblem} problem
   */
  function showUnlabelProblem(problem) {
    $scope.event.labels = angular.copy(cachedOffer.labels);
    controller.labelResponse = 'unlabelError';
    controller.labelsError = problem.title;
  }

  /**
   * @param {Label} label
   */
  function labelRemoved(label) {
    clearLabelsError();

    offerLabeller
      .unlabel(cachedOffer, label.name)
      .catch(showUnlabelProblem);
  }

  /**
   * @param {(UdbPlace|UdbEvent)}offer
   * @return {Promise}
   */
  function fetchPersonalVariation(offer) {
    var disableVariations = _.get(appConfig, 'disableVariations');
    if (!disableVariations) {
      return variationRepository
        .getPersonalVariation(offer)
        .then(function (personalVariation) {
          $scope.event.description = personalVariation.description[defaultLanguage];
          return personalVariation;
        }, function () {
          return $q.reject();
        });
    } else {
      return $q.reject();
    }
  }

  /**
   * @param {UdbEvent} event
   * @return {Promise}
   */
  function translateLocation(event) {
    if ($scope.event.location) {
      $scope.event.location = jsonLDLangFilter($scope.event.location, defaultLanguage);
    }
    return $q.resolve(event);
  }

  // Editing
  controller.updateDescription = function (description) {
    if ($scope.event.description !== description) {
      var updatePromise = offerEditor.editDescription(cachedOffer, description);

      updatePromise.finally(function () {
        if (!description) {
          $scope.event.description = cachedOffer.description[defaultLanguage];
        }
      });

      return updatePromise;
    }
  };
}
OfferController.$inject = ["udbApi", "$scope", "jsonLDLangFilter", "EventTranslationState", "offerTranslator", "offerLabeller", "$window", "offerEditor", "variationRepository", "$q", "appConfig", "$uibModal", "$translate"];
})();

// Source: src/search/ui/place.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbPlace
 * @description
 * # udbPlace
 */
angular
  .module('udb.search')
  .directive('udbPlace', udbPlace);

/* @ngInject */
function udbPlace() {
  var placeDirective = {
    restrict: 'AE',
    controller: 'OfferController',
    controllerAs: 'placeCtrl',
    templateUrl: 'templates/place.directive.html'
  };

  return placeDirective;
}
})();

// Source: src/search/ui/search-facilities-modal.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:SearchFacilitiesModalController
 * @description
 * # SearchFacilitiesModalController
 * Modal for selecting facilities.
 */
angular
  .module('udb.event-form')
  .controller('SearchFacilitiesModalController', SearchFacilitiesModalController);

/* @ngInject */
function SearchFacilitiesModalController($scope, $uibModalInstance, offer, eventCrud, facilities) {
  $scope.saving = false;
  $scope.error = false;
  $scope.cancel = cancel;
  $scope.saveFacilities = saveFacilities;
  $scope.facilities = preselectFacilities(facilities);

  function preselectFacilities(facilities) {
    return _.mapValues(facilities, function (facilityType) {
      return _.map(facilityType, function (facility) {
        return _.assign(facility, {
          selected: !!_.find(offer.facilities, {id: facility.id})
        });
      });
    });
  }

  function cancel() {
    $uibModalInstance.dismiss('cancel');
  }

  function saveFacilities() {
    showSaving();

    var newFacilites = _.where(
      _.flatten(_.map($scope.facilities)),
      {selected: true}
    );

    function persistAndClose() {
      offer.facilities = newFacilites;
      closeModal();
    }

    eventCrud
      .updateFacilities(offer, newFacilites)
      .then(persistAndClose, showError);
  }

  function closeModal() {
    $scope.saving = false;
    $uibModalInstance.close();
  }

  function showError() {
    $scope.error = true;
    $scope.saving = false;
  }

  function showSaving() {
    $scope.saving = true;
    $scope.error = false;
  }
}
SearchFacilitiesModalController.$inject = ["$scope", "$uibModalInstance", "offer", "eventCrud", "facilities"];
})();

// Source: src/search/ui/search.controller.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udb.search.controller:SearchCtrl
 * @description
 * # SearchCtrl
 * Search controller
 */
angular
  .module('udb.search')
  .controller('SearchController', SearchController);

/* @ngInject */
function SearchController(
  $scope,
  udbApi,
  $window,
  $location,
  $uibModal,
  SearchResultViewer,
  offerLabeller,
  offerLocator,
  searchHelper,
  $rootScope,
  eventExporter,
  $translate,
  searchApiSwitcher,
  authorization,
  authorizationService
) {
  var queryBuilder = searchApiSwitcher.getQueryBuilder();

  function getSearchQuery() {
    return searchHelper.getQuery();
  }

  function getCurrentPage() {
    var currentPage = 1;
    var searchParams = $location.search();

    if (searchParams.page) {
      currentPage = parseInt(searchParams.page);
    }

    return currentPage;
  }

  $scope.resultViewer = new SearchResultViewer(30, getCurrentPage());
  $scope.realQuery = false;
  $scope.activeQuery = false;
  $scope.queryEditorShown = false;
  $scope.currentPage = getCurrentPage();

  var additionalSpecifics = [
    {id: 'accessibility', name: 'Toegankelijkheidsinformatie', permission: authorization.editFacilities}
  ];
  authorizationService
    .getPermissions()
    .then(function (userPermissions) {
      var specifics = _.filter(
        additionalSpecifics,
        function (specific) {
          return !_.has(specific, 'permission') || _.contains(userPermissions, specific.permission);
        }
      );

      $scope.resultViewer.enableSpecifics(specifics);
    })
  ;

  /**
   * Fires off a search for offers using a plain query string or a query object.
   * @param {String|Query} query A query string or object to search with.
   */
  var findOffers = function (query) {
    var offset = ($scope.resultViewer.currentPage - 1) * $scope.resultViewer.pageSize;
    var queryString = typeof query === 'string' ? query : query.queryString;
    var pageSearchParameter = $scope.resultViewer.currentPage > 1 ? String($scope.resultViewer.currentPage) : null;

    $location.search({
      'query': getSearchQuery().queryString || null,
      'page': pageSearchParameter
    });

    $scope.resultViewer.loading = true;

    searchApiSwitcher
      .findOffers(queryString, offset)
      .then(function (pagedEvents) {
        offerLocator.addPagedCollection(pagedEvents);
        $scope.resultViewer.setResults(pagedEvents);
      });
  };

  /**
   * @param {Query} query A query object used to update the interface and result viewer.
   */
  var updateQuery = function (query) {
    $scope.activeQuery = query;

    if (queryBuilder.isValid(query)) {
      var realQuery = queryBuilder.unparse(query);
      $scope.resultViewer.queryChanged(realQuery);
      findOffers(realQuery);

      if (realQuery !== query.originalQueryString) {
        $scope.realQuery = realQuery;
      } else {
        $scope.realQuery = false;
      }
    }
  };

  var labelSelection = function () {

    var selectedOffers = $scope.resultViewer.selectedOffers;

    if (!selectedOffers.length) {
      $window.alert('First select the events you want to label.');
      return;
    }

    var modal = $uibModal.open({
      templateUrl: 'templates/offer-label-modal.html',
      controller: 'OfferLabelModalCtrl',
      controllerAs: 'lmc'
    });

    modal.result.then(function (labels) {

      _.each(selectedOffers, function (offer) {
        var eventPromise;

        eventPromise = udbApi.getOffer(new URL(offer['@id']));

        eventPromise.then(function (event) {
          event.label(labels);
        });
      });

      _.each(labels, function (label) {
        offerLabeller.labelOffersById(selectedOffers, label);
      });
    });
  };

  function labelActiveQuery() {
    var query = $scope.activeQuery,
      eventCount = $scope.resultViewer.totalItems;

    if (queryBuilder.isValid(query)) {
      var modal = $uibModal.open({
        templateUrl: 'templates/offer-label-modal.html',
        controller: 'OfferLabelModalCtrl',
        controllerAs: 'lmc'
      });

      modal.result.then(function (labels) {
        // eagerly label all cached events on the first page
        var selectedIds = $scope.resultViewer.selectedIds;
        _.each(selectedIds, function (eventId) {
          var eventPromise = udbApi.getEventById(eventId);

          eventPromise.then(function (event) {
            event.label(labels);
          });
        });

        _.each(labels, function (label) {
          offerLabeller.labelQuery(query.queryString, label, eventCount);
        });
      });
    } else {
      $window.alert('provide a valid query to label');
    }
  }

  var label = function () {
    var labellingQuery = $scope.resultViewer.querySelected;

    if (labellingQuery) {
      labelActiveQuery();
    } else {
      labelSelection();
    }
  };

  function exportEvents() {
    var exportingQuery = $scope.resultViewer.querySelected,
        query = $scope.activeQuery,
        eventCount,
        selectedIds = [];

    if (exportingQuery) {
      eventCount = $scope.resultViewer.totalItems;
    } else {
      selectedIds = _.chain($scope.resultViewer.selectedOffers)
        .filter({'@type': 'Event'})
        .map(function(offer) {
          return new URL(offer['@id']);
        })
        .value();

      if (!selectedIds.length) {
        $window.alert('First select the events you want to label.');
        return;
      } else {
        eventCount = selectedIds.length;
      }
    }

    eventExporter.activeExport.query = query;
    eventExporter.activeExport.eventCount = eventCount;
    eventExporter.activeExport.selection = selectedIds;

    var exportLimit = 5000;

    var tooManyItems = eventCount >= exportLimit;

    if (tooManyItems) {
      $translate('EVENT-EXPORT.TOO-MANY-ITEMS', {limit: exportLimit}).then(function(message) {
        $window.alert(message);
      });
    }
    else {
      if (query && query.queryString.length && queryBuilder.isValid(query)) {
        var modal = $uibModal.open({
          templateUrl: 'templates/event-export-modal.html',
          controller: 'EventExportController',
          controllerAs: 'exporter',
          size: 'lg'
        });
      } else {
        $translate('EVENT-EXPORT.QUERY-IS-MISSING').then(function(message) {
          $window.alert(message);
        });
      }
    }
  }

  $scope.exportEvents = exportEvents;
  $scope.label = label;

  $scope.startEditing = function () {
    $scope.queryEditorShown = true;
  };

  $scope.stopEditing = function () {
    $scope.queryEditorShown = false;
  };

  function queryChanged(event, newQuery) {
    updateQuery(newQuery);
  }

  // Because the uib pagination directive is messed up and overrides the initial page to 1,
  // you have to silence and revert it.
  var initialChangeSilenced = $scope.currentPage === 1;
  $scope.pageChanged = function () {
    var newPageNumber = $scope.currentPage;

    if (!initialChangeSilenced) {
      $scope.currentPage = $scope.resultViewer.currentPage;
      initialChangeSilenced = true;
    } else {
      $scope.resultViewer.currentPage = newPageNumber;

      findOffers($scope.activeQuery);
      $window.scroll(0, 0);
    }
  };

  /**
   * Get the query string from the URI params
   *
   * @return {null|string}
   */
  function getQueryStringFromParams() {
    var queryString = null;
    var searchParams = $location.search();

    if (searchParams.query) {
      queryString = searchParams.query;
    }

    return queryString;
  }

  var initListeners = _.once(function () {
    var searchQueryChangedListener = $rootScope.$on('searchQueryChanged', queryChanged);
    var startEditingQueryListener = $rootScope.$on('startEditingQuery', $scope.startEditing);
    var stopEditingQueryListener = $rootScope.$on('stopEditingQuery', $scope.stopEditing);

    $scope.$on('$destroy', startEditingQueryListener);
    $scope.$on('$destroy', searchQueryChangedListener);
    $scope.$on('$destroy', stopEditingQueryListener);
  });

  initListeners();
}
SearchController.$inject = ["$scope", "udbApi", "$window", "$location", "$uibModal", "SearchResultViewer", "offerLabeller", "offerLocator", "searchHelper", "$rootScope", "eventExporter", "$translate", "searchApiSwitcher", "authorization", "authorizationService"];
})();

// Source: src/search/ui/search.directive.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.directive:udbEvent
 * @description
 * # udb search directive
 */
angular
  .module('udb.search')
  .directive('udbSearch', searchDirective);

/* @ngInject */
function searchDirective() {
  return {
    templateUrl: 'templates/search.html',
    restrict: 'EA',
    controller: 'SearchController'
  };
}
})();

// Source: src/uitpas/components/card-systems/card-system-selector.component.js
(function () {
'use strict';

/**
 * @typedef {Object} Cardsystem
 * @property {string} id
 *  a number serialized as a string
 * @property {string} name
 * @property {DistributionKey[]} distributionKeys
 * @property {DistributionKey|undefined} [assignedDistributionKey]
 */

/**
 * @ngdoc function
 * @name udbApp.controller:CardSystemSelector
 * @description
 * # CardSystemSelector
 * Component for setting UiTPAS info.
 */
angular
  .module('udb.uitpas')
  .component('cardSystemSelector', {
    templateUrl: 'templates/card-systems.html',
    controller: CardSystemsController,
    controllerAs: 'cardSystemSelector',
    bindings: {
      organisation: '<',
      offerData: '<'
    }
  });

/* @ngInject */
function CardSystemsController($q, udbUitpasApi, $rootScope) {
  var controller = this;
  var organisation = controller.organisation;
  var offerData = controller.offerData;
  controller.$onInit = init;
  controller.refresh = refresh;

  function init() {
    $q
      .all([
        udbUitpasApi.getEventCardSystems(offerData.id),
        udbUitpasApi.findOrganisationsCardSystems(organisation.id)
      ])
      .then(showCardSystems, showUitpasUnavailableNotice);
  }

  function showUitpasUnavailableNotice() {
    controller.uitpasUnavailable = true;
  }

  function hideUitpasUnavailableNotice() {
    controller.uitpasUnavailable = undefined;
  }

  function refresh() {
    controller.availableCardSystems = undefined;
    hideUitpasUnavailableNotice();
    unlockCardSystems();
    init();
  }

  function showCardSystems(cardSystemCollections) {
    var eventCardSystems = cardSystemCollections[0],
        organisationCardSystems = cardSystemCollections[1];

    controller.availableCardSystems = _.map(organisationCardSystems, function (cardSystem) {
      return _.assign(cardSystem, {
        assignedDistributionKey: findAssignedDistributionKey(eventCardSystems, cardSystem),
        active: !!_.find(eventCardSystems, {id: cardSystem.id})
      });
    });
  }

  /**
   * @param {CardSystem[]} cardSystemCollection
   * @param {CardSystem} cardSystem
   *
   * @return {(DistributionKey|null)}
   */
  function findAssignedDistributionKey(cardSystemCollection, cardSystem) {
    var matchingCardSystem = _.find(cardSystemCollection, {id: cardSystem.id});

    return _.first(
      (!matchingCardSystem || _.isEmpty(matchingCardSystem.distributionKeys)) ?
        cardSystem.distributionKeys :
        matchingCardSystem.distributionKeys
    );
  }

  /**
   * @param {CardSystem} cardSystem
   */
  controller.distributionKeyAssigned = function(cardSystem) {
    if (!cardSystem.assignedDistributionKey) {
      throw 'card system distribution key is missing';
    }

    controller.persistingCardSystems = true;

    return udbUitpasApi
      .addEventCardSystemDistributionKey(offerData.id, cardSystem.id, cardSystem.assignedDistributionKey.id)
      .then(function () {
        $rootScope.$emit('uitpasDataSaved');
        unlockCardSystems();
        return $q.resolve();
      });
  };

  function unlockCardSystems() {
    controller.persistingCardSystems = false;
  }

  /**
   * @param {CardSystem} cardSystem
   * @return {Promise}
   */
  function assignKeyAndOrCardSystem(cardSystem) {
    return cardSystem.assignedDistributionKey ?
      controller.distributionKeyAssigned(cardSystem) :
      udbUitpasApi.addEventCardSystem(offerData.id, cardSystem.id);
  }

  /**
   * @param {CardSystem} cardSystem
   */
  controller.activeCardSystemsChanged = function(cardSystem) {
    controller.persistingCardSystems = true;
    var activeCardSystemsUpdated = cardSystem.active ?
      assignKeyAndOrCardSystem(cardSystem) :
      udbUitpasApi.removeEventCardSystem(offerData.id, cardSystem.id);

    function revertCardSystemStatus() {
      cardSystem.active = !cardSystem.active;
      showUitpasUnavailableNotice();
    }

    function notifyUitpasDataSaved () {
      $rootScope.$emit('uitpasDataSaved');
    }

    activeCardSystemsUpdated
      .then(notifyUitpasDataSaved, revertCardSystemStatus)
      .finally(unlockCardSystems);
  };
}
CardSystemsController.$inject = ["$q", "udbUitpasApi", "$rootScope"];
})();

// Source: src/uitpas/components/uitpas-info/uitpas-info.component.js
(function () {
'use strict';

/**
 * @ngdoc function
 * @name udbApp.controller:EventFormUitpasInfoController
 * @description
 * # EventFormUitpasInfoController
 * Component for setting UiTPAS info.
 */
angular
  .module('udb.uitpas')
  .component('uitpasInfo', {
    templateUrl: 'templates/uitpasInfo.html',
    controller: UitpasInfoComponent,
    controllerAs: 'upic',
    bindings: {
      organizer: '<',
      price: '<'
    }
  });

/* @ngInject */
function UitpasInfoComponent(
  $scope,
  $rootScope,
  EventFormData
) {
  var controller = this;

  $scope.showUitpasInfo = false;
  $scope.uitpasCssClass = 'state-incomplete';
  controller.listeners = [];
  controller.showCardSystems = false;

  controller.$onInit = init;
  controller.$onDestroy = destroy;

  /**
   *
   * @param {Object} angularEvent
   * @param {EventFormData} offerData
   */
  controller.showCardSystemsIfPriceIsSelected = function(angularEvent, offerData) {
    controller.showCardSystems = offerData.priceInfo && !!offerData.priceInfo.length;
  };

  controller.markUitpasDataAsCompleted = function () {
    $scope.uitpasCssClass = 'state-complete';
  };

  controller.updateOrganizer = function (angularEvent, organization) {
    controller.organizer = organization;
    showOrganizer(organization);
  };

  function showOrganizer(organization) {
    if (organization) {
      $scope.showUitpasInfo = _.get(controller, 'organizer.isUitpas', false) && EventFormData.isEvent;
      controller.showCardSystems = controller.price && !!controller.price.length;
    } else {
      controller.showCardSystems = false;
      $scope.showUitpasInfo = false;
    }
  }

  function init() {
    controller.eventFormData = EventFormData;
    showOrganizer(controller.organizer);

    controller.listeners = [
      $rootScope.$on('eventFormSaved', controller.showCardSystemsIfPriceIsSelected),
      $rootScope.$on('eventOrganizerSelected', controller.updateOrganizer),
      $rootScope.$on('eventOrganizerDeleted', controller.updateOrganizer),
      $rootScope.$on('uitpasDataSaved', controller.markUitpasDataAsCompleted)
    ];
  }

  function destroy() {
    _.invoke(controller.listeners, 'call');
  }
}
UitpasInfoComponent.$inject = ["$scope", "$rootScope", "EventFormData"];
})();

// Source: src/uitpas/default-uitpas-labels.constant.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.uitpas.DefaultUitpasLabels
 * @description
 * # Default UiTPAS Labels
 *
 * All the known UiTPAS labels that link an organizer to card-systems on 2017-03-30.
 * This file used to be updated each time labels changed but now acts as a placeholder.
 *
 * The actual labels should be fetched when building or bootstrapping your app and written to the UitpasLabels constant.
 * The UiTPAS service should have an endpoint with all the labels for your environment.
 * e.g.: https://uitpas.uitdatabank.be/labels for production
 */
angular
  .module('udb.uitpas')
  .constant('DefaultUitpasLabels',
  /**
   * Enum for UiTPAS labels
   * @readonly
   * @enum {string}
   */
  {
    'PASPARTOE': 'Paspartoe',
    'UITPAS': 'UiTPAS',
    'UITPAS_GENT': 'UiTPAS Gent',
    'UITPAS_OOSTENDE': 'UiTPAS Oostende',
    'UITPAS_REGIO_AALST': 'UiTPAS Regio Aalst',
    'UITPAS_DENDER': 'UiTPAS Dender',
    'UITPAS_ZUIDWEST': 'UiTPAS Zuidwest',
    'UITPAS_MECHELEN': 'UiTPAS Mechelen',
    'UITPAS_KEMPEN': 'UiTPAS Kempen',
    'UITPAS_MAASMECHELEN': 'UiTPAS Maasmechelen',
    'UITPAS_LEUVEN': 'UiTPAS Leuven',
    'UITPAS_LIER': 'UiTPAS Lier',
    'UITPAS_HEIST-OP-DEN-BERG': 'UiTPAS Heist-op-den-Berg',
    'UITPAS_MEETJESLAND': 'UiTPAS Meetjesland',
    'UITPAS_WESTHOEK': 'UiTPAS Westhoek'
  });
})();

// Source: src/uitpas/organisation-suggestion.controller.js
(function () {
'use strict';

/**
 * @ngdoc directive
 * @name udb.search.controller:OfferController
 * @description
 * # OfferController
 */
angular
  .module('udb.uitpas')
  .controller('OrganisationSuggestionController', OrganisationSuggestionController);

/* @ngInject */
function OrganisationSuggestionController($scope) {
  var controller = this;
  controller.organisation = $scope.organisation;
  controller.query = $scope.query;
}
OrganisationSuggestionController.$inject = ["$scope"];
})();

// Source: src/uitpas/organisation-suggestion.directive.js
(function () {
'use strict';

angular
  .module('udb.uitpas')
  .directive('uitpasOrganisationSuggestion', uitpasOrganisationSuggestion);

/* @ngInject */
function uitpasOrganisationSuggestion() {
  return {
    templateUrl: 'templates/organisation-suggestion.directive.html',
    controller: 'OrganisationSuggestionController',
    controllerAs: 'os',
    scope: {
      organisation: '<',
      query: '<'
    },
    restrict: 'A'
  };
}
})();

// Source: src/uitpas/udb-uitpas-api.service.js
(function () {
'use strict';

/**
 * @typedef {Object} CardSystem
 * @property {string} id
 *  a number serialized as a string
 * @property {string} name
 * @property {DistributionKey[]} distributionKeys
 */

/**
 * @typedef {Object} DistributionKey
 * @property {string} id
 *  a number serialized as a string
 * @property {string} name
 *  the name of the key including the price, eg: "CC De Werf - 1,5 EUR / dag"
 */

angular
  .module('udb.uitpas')
  .service('udbUitpasApi', UdbUitpasApi);

function UdbUitpasApi($q, $http, appConfig, uitidAuth, $timeout, moment) {
  var uitpasApiUrl = _.get(appConfig, 'uitpasUrl');
  var uitpasMaxDelay = _.get(appConfig, 'uitpasMaxDelay', 8);
  var defaultApiConfig = {
    withCredentials: true,
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer ' + uitidAuth.getToken()
    },
    params: {}
  };

  /**
   * Events are automatically registered by UiTPAS but there can be some delay.
   * In the meantime the UiTPAS API will not known about the event.
   * Make sure to poke UiTPAS a few times before giving up.
   *
   * An empty collection is returned if UiTPAS repeatedly fails on an event.
   *
   * @param {string} eventId
   * @return {Promise.<CardSystem[]>}
   */
  this.getEventCardSystems = function(eventId) {
    function request () {
      return $http.get(uitpasApiUrl + 'events/' + eventId + '/cardSystems/', defaultApiConfig);
    }

    var until = moment().add(uitpasMaxDelay, 's');

    return retry(request, 2, until).then(returnCardSystemCollection);
  };

  /**
   * getTicketSales
   * @param {string} eventId
   * @param {Organizer} organizer
   * @return {Promise.<hasTicketSales>}
   */
  this.getTicketSales = function(eventId, organizer) {
    var deferred = $q.defer();
    var until = moment().add(uitpasMaxDelay, 's');

    function request () {
      return $http.get(uitpasApiUrl + 'events/' + eventId, defaultApiConfig);
    }

    function returnTicketSales(response) {
      return response.data.hasTicketSales;
    }

    if (organizer.isUitpas) {
      deferred.resolve(retry(request, 2, until).then(returnTicketSales));
    } else {
      deferred.resolve(false);
    }

    return deferred.promise;
  };

  /**
   * @param {string} organizerId of the organizer
   * @return {Promise.<CardSystem[]>}
   */
  this.findOrganisationsCardSystems = function(organizerId) {
    return $http
      .get(uitpasApiUrl + 'organizers/' + organizerId + '/cardSystems/', defaultApiConfig)
      .then(returnCardSystemCollection);
  };

  /**
   * @param {CardSystem} cardSystem
   * @returns {CardSystem}
   */
  function convertDistributionKeysToList(cardSystem) {
    if ('object' === typeof cardSystem.distributionKeys) {
      cardSystem.distributionKeys = _.values(cardSystem.distributionKeys);
    }

    return cardSystem;
  }

  /**
   * @param {object} response
   *  Angular HTTP response
   * @return {CardSystem[]}
   */
  function returnCardSystemCollection(response) {
    var cardSystemCollection = 'object' === typeof response.data ? _.values(response.data) : response.data;
    return $q.resolve(_.map(cardSystemCollection, convertDistributionKeysToList));
  }

  /**
   * @param {string} eventId
   * @param {string} cardSystemId
   * @return {Promise.<Object>}
   */
  this.addEventCardSystem = function(eventId, cardSystemId) {
    return $http
      .put(
        uitpasApiUrl + 'events/' + eventId + '/cardSystems/' + cardSystemId,
        null,
        defaultApiConfig
      )
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} eventId
   * @param {string} cardSystemId
   * @return {Promise.<Object>}
   */
  this.removeEventCardSystem = function(eventId, cardSystemId) {
    return $http
      .delete(
        uitpasApiUrl + 'events/' + eventId + '/cardSystems/' + cardSystemId,
        defaultApiConfig
      )
      .then(returnUnwrappedData);
  };

  /**
   * @param {string} eventId
   * @param {string} cardSystemId
   * @param {string} distributionKeyId
   * @return {Promise.<Object>}
   */
  this.addEventCardSystemDistributionKey = function(eventId, cardSystemId, distributionKeyId) {
    return $http
      .put(
        uitpasApiUrl + 'events/' + eventId + '/cardSystems/' + cardSystemId + '/distributionKey/' + distributionKeyId,
        null,
        defaultApiConfig
      )
      .then(returnUnwrappedData);
  };

  function returnUnwrappedData(response) {
    return $q.resolve(response.data);
  }

  /**
   * @param {function} repeatable
   *  A promise returning function without arguments.
   *
   * @param {number} delay
   *  The number of seconds to delay after a response before firing a consecutive request.
   *
   * @param {moment} limit
   *  The moment that marks the time limit.
   */
  function retry(repeatable, delay, limit) {
    function retryLater(error) {
      return moment().add(delay, 'seconds').isAfter(limit) ?
        $q.reject(error) :
        $timeout(function () {
          return retry(repeatable, delay, limit);
        }, delay);
    }

    return repeatable().catch(retryLater);
  }
}
UdbUitpasApi.$inject = ["$q", "$http", "appConfig", "uitidAuth", "$timeout", "moment"];
})();

// Source: src/uitpas/uitpas-labels.provider.js
(function () {
'use strict';

/* jshint sub: true */

/**
 * @ngdoc service
 * @name udb.uitpas.UitpasLabelsProvider
 * @description
 * # UiTPAS Labels Provider
 *
 * All the known UiTPAS labels that link an organizer to card-systems on 2017-03-01 are in the DefaultUitpasLabels
 * constant. The file used to be updated each time labels changed but now acts as a placeholder.
 *
 * The actual labels should be fetched when building or bootstrapping your app and written to the ExtermalUitpasLabels
 * constant. The UiTPAS service should have an endpoint with all the labels for your environment.
 * e.g.: https://uitpas.uitdatabank.be/labels for production
 */
angular
  .module('udb.uitpas')
  .provider('UitpasLabels', UitpasLabelsProvider);

function UitpasLabelsProvider() {
  var customUitpasLabels;

  /**
   * Configure the UiTPAS labels by providing a map of {LABEL_KEY: label name}
   * @param {object} labels
   */
  this.useLabels = function(labels) {
    customUitpasLabels = labels;
  };

  this.$get = ['DefaultUitpasLabels', function(DefaultUitpasLabels) {
    return !!customUitpasLabels ? customUitpasLabels : DefaultUitpasLabels;
  }];
}
})();

// Source: .tmp/udb3-angular.templates.js
(function () {
angular.module('udb.core').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('templates/calendar-summary.directive.html',
    "<span ng-if=\"offer.calendarType\" ng-switch=\"offer.calendarType\">\n" +
    "\n" +
    "  <span ng-switch-when=\"single\">\n" +
    "    <span ng-bind=\"::offer.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "\n" +
    "    <span ng-if=\"showOpeningHours\">\n" +
    "      <span ng-if=\"getOpeningHoursCount(offer) == 1\">\n" +
    "        <span translate-once=\"calendarSummary.from | uppercase\"></span> <span ng-bind=\"::offer.openingHours[0].startDate | date: 'HH:mm'\"></span>\n" +
    "        <span translate-once=\"calendarSummary.till\"></span> <span ng-bind=\"::offer.openingHours[0].endDate | date: 'HH:mm'\"></span>\n" +
    "      </span>\n" +
    "      <span ng-if=\"getOpeningHoursCount(offer) > 1\" translate-once=\"calendarSummary.openinghours\"></span>\n" +
    "    </span>\n" +
    "  </span>\n" +
    "\n" +
    "  <span ng-switch-when=\"multiple\">\n" +
    "      <span translate-once=\"calendarSummary.from\"></span> <span ng-bind=\"::offer.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "      <span translate-once=\"calendarSummary.till\"></span> <span ng-bind=\"::offer.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "  </span>\n" +
    "\n" +
    "  <span ng-switch-when=\"periodic\">\n" +
    "     <span translate-once=\"calendarSummary.from\"></span> <span ng-bind=\"::offer.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "     <span translate-once=\"calendarSummary.till\"></span> <span ng-bind=\"::offer.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "  </span>\n" +
    "\n" +
    "  <span ng-switch-when=\"permanent\" translate-once=\"calendarSummary.permanent\"></span>\n" +
    "\n" +
    "</span>"
  );


  $templateCache.put('templates/image-detail.directive.html',
    "<tr ng-class=\"::{muted: !images.length}\">\n" +
    "    <td>\n" +
    "        <span class=\"row-label\" translate-once=\"imageDetail.label\"></span>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::images.length\">\n" +
    "        <ul class=\"list-unstyled media-list\">\n" +
    "            <li ng-repeat=\"image in images | imagesByLanguage:language track by image.contentUrl\" class=\"media\">\n" +
    "                <div class=\"media-left\">\n" +
    "                    <a target=\"_blank\" href=\"{{image.contentUrl}}\">\n" +
    "                        <img class=\"media-object\"\n" +
    "                             src=\"{{image.contentUrl}}?height=100\"\n" +
    "                             alt=\"{{::translateImageDetail('alt_image', {index: $index}) }}\">\n" +
    "                    </a>\n" +
    "                </div>\n" +
    "                <div class=\"media-body\">\n" +
    "                   <span ng-if=\"$first\" class=\"label label-default\" translate-once=\"imageDetail.main_image\"></span>\n" +
    "                    <p>{{image.description}}</p>\n" +
    "                    <p class=\"text-muted\">&copy; {{image.copyrightHolder}}</p>\n" +
    "                </div>\n" +
    "                <hr ng-if=\"!$last\">\n" +
    "            </li>\n" +
    "        </ul>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::!images.length\" translate-once=\"imageDetail.no_images\"></td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/udb.workflow-status.directive.html',
    "<tr>\n" +
    "    <td><span class=\"row-label\" translate-once=\"workflowStatus.label\"></span></td>\n" +
    "    <td ng-if=\"cm.event.workflowStatus !== 'REJECTED'\">\n" +
    "        <span ng-if=\"cm.event.available\" ng-bind=\"cm.event.available | date: 'dd/MM/yyyy'\">\n" +
    "                    </span>\n" +
    "        <span ng-if=\"!cm.event.available && !cm.event.availableFrom\">{{::cm.status | translate }}</span>\n" +
    "        <span ng-if=\"!cm.event.available && cm.event.availableFrom\">Online vanaf {{cm.event.availableFrom | date: 'dd/MM/yyyy'}}</span>\n" +
    "    </td>\n" +
    "    <td ng-if=\"cm.event.workflowStatus === 'REJECTED'\">\n" +
    "      <p><span translate-once=\"workflowStatus.rejected_full\"></span>&nbsp;<a ng-href=\"{{::cm.publicationRulesLink}}\" target=\"_blank\"><span translate-once=\"workflowStatus.rules\"></span></a></p>\n" +
    "    </td>\n" +
    "</tr>\n" +
    "<tr ng-if=\"cm.event.workflowStatus !== 'REJECTED'\">\n" +
    "    <td><span class=\"row-label\" translate-once=\"workflowStatus.id\"></span></td>\n" +
    "    <td>\n" +
    "        <ul>\n" +
    "            <li>\n" +
    "                <span ng-bind=\"cm.event.id\"></span>\n" +
    "            </li>\n" +
    "            <li>\n" +
    "                <a ng-href=\"{{cm.getPublicUrl(cm.event.id)}}\" translate-once=\"preview.publiq_url\"></a>\n" +
    "            </li>\n" +
    "            <li ng-repeat=\"sameAs in cm.sameAsRelations(cm.event)\"><span ng-bind=\"sameAs\"></span></li>\n" +
    "        </ul>\n" +
    "    </td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/unexpected-error-modal.html',
    "<div class=\"modal-body\">\n" +
    "  <p ng-bind=\"errorMessage\"></p>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button class=\"btn btn-primary\" ng-click=\"dismiss()\">sluiten</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-cultuurkuur.html',
    "<div class=\"cultuurkuur-component\">\n" +
    "    <p ng-if=\"::!$ctrl.permission && $ctrl.forSchools\"><i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i> <span translate-once=\"cultuurkuur.info\" translate-values=\"{ previewLink: '{{$ctrl.previewLink}}' }\"></span></p>\n" +
    "    <div ng-if=\"::$ctrl.permission\">\n" +
    "        <div ng-if=\"::!$ctrl.isIncomplete\" class=\"row\">\n" +
    "            <p ng-if=\"$ctrl.forSchools\"><i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i> <span translate-once=\"cultuurkuur.info\" translate-values=\"{ previewLink: '{{$ctrl.previewLink}}' }\"></span></p>\n" +
    "            <div class=\"panel panel-default\">\n" +
    "                <div class=\"panel-body\">\n" +
    "                    <div class=\"row\">\n" +
    "                        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 cultuurkuur-logo\">\n" +
    "                            <div ng-if=\"::($ctrl.cultuurKuurInfo.fields.length > 0)\" class=\"row\">\n" +
    "                                <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                    <strong>Onderwerp</strong>\n" +
    "                                </div>\n" +
    "                                <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                    <p ng-repeat=\"field in ::$ctrl.cultuurKuurInfo.fields\" ng-bind=\"::field\"></p>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                            <div ng-if=\"$ctrl.cultuurKuurInfo.targetAudience.length > 0\" class=\"row\">\n" +
    "                                <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                    <strong>Doelgroep</strong>\n" +
    "                                </div>\n" +
    "                                <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                    <p ng-repeat=\"target in ::$ctrl.cultuurKuurInfo.targetAudience\" ng-bind=\"::target\"></p>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                            <div ng-if=\"$ctrl.cultuurKuurInfo.levels.length > 0\" class=\"row\">\n" +
    "                                <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n" +
    "                                    <strong>Geschikt voor</strong>\n" +
    "                                </div>\n" +
    "                                <div ng-if=\"$ctrl.cultuurKuurInfo.levels.length <= 4\" class=\"col-xs-5 col-sm-5 col-md-5 col-lg-5\">\n" +
    "                                    <p ng-repeat=\"level in ::$ctrl.cultuurKuurInfo.levels\" ng-bind=\"::level\"></p>\n" +
    "                                </div>\n" +
    "                                <div ng-if=\"$ctrl.cultuurKuurInfo.levels.length > 4\" class=\"col-xs-5 col-sm-5 col-md-5 col-lg-5\">\n" +
    "                                    <a role=\"button\" data-toggle=\"collapse\" href=\"#level\" aria-expanded=\"false\" aria-controls=\"level\"> {{$ctrl.cultuurKuurInfo.levels.length}} onderwijsgraden</a>\n" +
    "                                    <div class=\"collapse\" id=\"level\">\n" +
    "                                        <div>\n" +
    "                                            <p ng-repeat=\"level in ::$ctrl.cultuurKuurInfo.levels\" ng-bind=\"::level\"></p>\n" +
    "\n" +
    "                                        </div>\n" +
    "                                    </div>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "                <div class=\"panel-footer\"> <a ng-href=\"{{::$ctrl.editLink}}\" target=\"_blank\">Wijzig op cultuurkuur.be</a>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"alert alert-info\" ng-if=\"::$ctrl.isIncomplete && $ctrl.forSchools\">\n" +
    "            <p>Vervolledig dit evenement op cultuurkuur.be met extra informatie voor scholen en leerkrachten.</p>\n" +
    "            <a ng-href=\"{{::$ctrl.continueLink}}\" target=\"_blank\" class=\"btn btn-default btn-info\">Doorgaan</a>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/dashboard-item.directive.html',
    "<td>\n" +
    "  <strong>\n" +
    "    <a ng-href=\"{{ event.url  + '/preview' }}\" ng-bind=\"::event.name\"></a>\n" +
    "  </strong>\n" +
    "  <span ng-if=\"event.workflowStatus==='DELETED' || event.workflowStatus==='DRAFT' \" class=\"label label-default\" translate-once=\"workflowStatus.DRAFT\"></span>\n" +
    "  <span class=\"label label-default\" ng-if=\"offerCtrl.hasFutureAvailableFrom && !offerCtrl.offerExpired && event.workflowStatus!=='DRAFT' && !offerCtrl.hideOnlineDate\">Online op <span ng-bind=\"::event.availableFrom | date:'yyyy-MM-dd'\"></span></span>\n" +
    "  <span ng-if=\"event.workflowStatus==='REJECTED'\"><span class=\"label label-default\" translate-once=\"workflowStatus.REJECTED\">Publicatie afgewezen</span><small>&nbsp;<a ng-href=\"{{::dash.publicationRulesLink}}\" target=\"blank\" translate-once=\"workflowStatus.rules\"></a></small></span>\n" +
    "  <br/>\n" +
    "  <small>\n" +
    "    <span class=\"dashboard-item-type\" ng-bind=\"::translatedOfferType\"></span>\n" +
    "    <span ng-if=\"event.calendarType && (offerType === 'event' || (event.calendarType !== 'permanent' && offerType === 'place'))\">\n" +
    "      <span> - </span>\n" +
    "      <udb-calendar-summary offer=\"event\" show-opening-hours=\"true\"></udb-calendar-summary>\n" +
    "    </span>\n" +
    "  </small>\n" +
    "</td>\n" +
    "\n" +
    "<td ng-if=\"!offerCtrl.fetching\">\n" +
    "  <span ng-if=\"::!offerCtrl.offerExpired\">\n" +
    "    <div class=\"pull-right btn-group\" uib-dropdown>\n" +
    "      <a class=\"btn btn-default\" ng-href=\"{{ event.url + '/edit' }}\" translate-once=\"dashboard.directive.edit\"></a>\n" +
    "      <button type=\"button\" class=\"btn btn-default\" uib-dropdown-toggle><span class=\"caret\"></span></button>\n" +
    "      <ul uib-dropdown-menu role=\"menu\">\n" +
    "        <li role=\"menuitem\">\n" +
    "          <a ng-href=\"{{ event.url  + '/preview' }}\" translate-once=\"dashboard.directive.example\"></a>\n" +
    "        </li>\n" +
    "        <li class=\"divider\"></li>\n" +
    "        <li role=\"menuitem\">\n" +
    "          <a href=\"\" ng-click=\"dash.openDeleteConfirmModal(event)\" translate-once=\"dashboard.directive.delete\"></a>\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "    </div>\n" +
    "  </span>\n" +
    "  <span ng-if=\"::offerCtrl.offerExpired\">\n" +
    "    <div class=\"pull-right\">\n" +
    "      <span class=\"text-muted\" translate-once=\"dashboard.directive.expired_event\"></span>\n" +
    "    </div>\n" +
    "  </span>\n" +
    "</td>\n"
  );


  $templateCache.put('templates/event-delete-confirm-modal.html',
    "<div class=\"modal-body\">\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <p translate-once=\"dashboard.delete.sure\"\n" +
    "           translate-values=\"{ name: '{{item.name}}' }\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"alert alert-danger\"\n" +
    "           ng-show=\"error\"\n" +
    "           translate-once=\"dashboard.delete.error\">\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button\n" +
    "          type=\"button\"\n" +
    "          class=\"btn btn-default\"\n" +
    "          ng-click=\"cancelRemoval()\"\n" +
    "          translate-once=\"dashboard.delete.cancel\">\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"deleteEvent()\">\n" +
    "    <span translate-once=\"dashboard.delete.delete\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place-delete-confirm-modal.html',
    "<div class=\"modal-body\">\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "      <div class=\"col-xs-12\" ng-if=\"!hasEvents\">\n" +
    "        <p translate-once=\"dashboard.delete.sure\" translate-values=\"{ name: '{{ place.name }}' }\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-xs-12\" ng-if=\"hasEvents\">\n" +
    "        <p translate-once=\"dashboard.delete.error_location\" translate-values=\"{ name: '{{ place.name }}'}\"></p>\n" +
    "\n" +
    "        <ul>\n" +
    "          <li ng-click=\"$dismiss('navigating away')\" ng-repeat=\"event in events\" udb-event-link ng-hide=\"fetching\"></li>\n" +
    "        </ul>\n" +
    "\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"alert alert-danger\" ng-show=\"error\" translate-once=\"dashboard.delete.error\">\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancelRemoval()\" translate-once=\"dashboard.delete.cancel\">\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-disabled=\"hasEvents\" ng-click=\"deletePlace()\">\n" +
    "    <span translate-once=\"dashboard.delete.delete\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/dashboard.html',
    "<h1 class=\"title\" id=\"page-title\">\n" +
    "  <span translate-once=\"dashboard.welcome\"></span> <span ng-bind=\"dash.username\"></span>\n" +
    "</h1>\n" +
    "\n" +
    "<div class=\"text-center\" ng-show=\"dash.pagedItemViewer.loading\">\n" +
    "  <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"udb-dashboard-header\">\n" +
    "  <!-- udb-dashboard-header -->\n" +
    "</div>\n" +
    "\n" +
    "<div ng-cloak ng-show=\"!dash.pagedItemViewer.loading\">\n" +
    "\n" +
    "  <div class=\"row udb-dashboard\">\n" +
    "    <div class=\"col-xs-12\">\n" +
    "\n" +
    "      <div class=\"alert alert-info\" ng-if=\"!dash.toggleAddOffer && dash.addOfferExpirationMessage\">\n" +
    "        <span ng-bind-html=\"::dash.addOfferExpirationMessage\"></span>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"panel panel-default no-new no-data\" ng-hide=\"dash.pagedItemViewer.events.length\">\n" +
    "        <div class=\"panel-body text-center\">\n" +
    "          <p class=\"text-center\"><span translate-once=\"dashboard.no_items\"></span>\n" +
    "            <span ng-if=\"dash.toggleAddOffer\"><br/><a href=\"event\" translate-once=\"dashboard.add_activity\"></a></span>\n" +
    "          </p>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-show=\"dash.pagedItemViewer.events.length\">\n" +
    "\n" +
    "        <div class=\"clearfix\">\n" +
    "          <p class=\"invoer-title\"><span class=\"block-header\" translate-once=\"dashboard.recent\"></span>\n" +
    "            <span class=\"pull-right\" ng-if=\"dash.toggleAddOffer\">\n" +
    "              <a class=\"btn btn-primary\" href=\"event\"><i class=\"fa fa-plus-circle\"></i> <span translate-once=\"dashboard.add\"></span></a>\n" +
    "            </span>\n" +
    "          </p>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"panel panel-default\">\n" +
    "          <table class=\"table\">\n" +
    "            <tbody>\n" +
    "              <tr udb-dashboard-event-item\n" +
    "                  ng-if=\"event['@type'] === 'Event'\"\n" +
    "                  class=\"dashboard-item\" ng-class=\"{'deleting': event.showDeleted}\"\n" +
    "                  ng-repeat-start=\"event in dash.pagedItemViewer.events\">\n" +
    "              </tr>\n" +
    "              <tr udb-dashboard-place-item\n" +
    "                  ng-if=\"event['@type'] === 'Place'\"\n" +
    "                  class=\"dashboard-item\" ng-class=\"{'deleting': event.showDeleted}\"\n" +
    "                  ng-repeat-end>\n" +
    "              </tr>\n" +
    "            </tbody>\n" +
    "          </table>\n" +
    "          <div class=\"panel-footer\">\n" +
    "            <uib-pagination\n" +
    "              total-items=\"dash.pagedItemViewer.totalItems\"\n" +
    "              ng-model=\"dash.pagedItemViewer.currentPage\"\n" +
    "              items-per-page=\"dash.pagedItemViewer.pageSize\"\n" +
    "              ng-show=\"dash.pagedItemViewer.totalItems > 0\"\n" +
    "              max-size=\"10\"\n" +
    "              ng-change=\"dash.updateItemViewer()\">\n" +
    "            </uib-pagination>\n" +
    "          </div>\n" +
    "\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-duplication-footer.component.html',
    "<div class=\"event-validation\">\n" +
    "    <button class=\"btn btn-success\"\n" +
    "            ng-disabled=\"duplication.duplicating\"\n" +
    "            ng-click=\"duplication.createDuplicate()\"\n" +
    "            role=\"button\"\n" +
    "            ng-class=\"{disabled: !duplication.readyForDuplication}\"\n" +
    "            translate-once=\"duplicate.title\"></button>\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"duplication.duplicating\"></i>\n" +
    "    <span ng-show=\"duplication.asyncError\" translate-once=\"duplicate.error\"></span>\n" +
    "</div>"
  );


  $templateCache.put('templates/event-duplication-step.component.html',
    "<h1 class=\"title\" translate-once=\"duplicate.title\"></h1>\n" +
    "\n" +
    "<div class=\"alert alert-info\" role=\"alert\" translate-once=\"duplicate.description\"></div>\n" +
    "\n" +
    "<udb-event-duplication-calendar></udb-event-duplication-calendar>\n"
  );


  $templateCache.put('templates/event-duplication.html',
    "<div class=\"offer-form\" ng-if=\"loaded\">\n" +
    "    <udb-event-duplication-step></udb-event-duplication-step>\n" +
    "    <udb-event-duplication-footer></udb-event-duplication-footer>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/job-logo.directive.html',
    "<div id=\"indicator\" class=\"{{jl.getState()}}\">\n" +
    "  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n" +
    "    <g class=\"warning\">\n" +
    "      <circle cx=\"20\" cy=\"40\" r=\"10\" id=\"warning-background\"></circle>\n" +
    "      <circle fill=\"#ED1C24\" cx=\"20\" cy=\"40\" r=\"8\" id=\"warning-circle\"></circle>\n" +
    "      <g transform=\"translate(-50,-1.666667)\">\n" +
    "        <path fill=\"#FFFFFF\"\n" +
    "              d=\"M68.798,45.538c0-0.383,0.103-0.672,0.308-0.868s0.504-0.294,0.896-0.294c0.378,0,0.671,0.1,0.878,0.301 c0.208,0.201,0.312,0.488,0.312,0.861c0,0.36-0.104,0.644-0.314,0.851S70.375,46.7,70.001,46.7c-0.383,0-0.679-0.102-0.889-0.304 S68.798,45.907,68.798,45.538z M70.842,43.2h-1.668l-0.349-6.679h2.365L70.842,43.2z\"\n" +
    "              id=\"warning-remark\"></path>\n" +
    "      </g>\n" +
    "    </g>\n" +
    "\n" +
    "    <g class=\"busy\" fill-rule=\"evenodd\" fill=\"none\">\n" +
    "      <circle cx=\"20\" cy=\"40\" r=\"10\" id=\"busy-background\"></circle>\n" +
    "      <g stroke-width=\"2\" transform=\"translate(14 34)\" class=\"busy-spinner\">\n" +
    "        <path d=\"M12 6c0-6-6-6-6-6\" transform=\"rotate(308.674 6 6)\">\n" +
    "          <animateTransform repeatCount=\"indefinite\" dur=\"1s\" to=\"360 6 6\" from=\"0 6 6\" type=\"rotate\"\n" +
    "                            attributeName=\"transform\"></animateTransform>\n" +
    "        </path>\n" +
    "      </g>\n" +
    "    </g>\n" +
    "\n" +
    "    <g class=\"complete\" fill-rule=\"evenodd\" fill=\"none\">\n" +
    "      <circle cx=\"20\" cy=\"40\" r=\"10\" id=\"complete-background\"></circle>\n" +
    "      <circle cx=\"20\" cy=\"40\" r=\"8\" id=\"complete-circle\"></circle>\n" +
    "      <g stroke-width=\"2\" transform=\"translate(-6 14)\" class=\"complete-check\">\n" +
    "        <path d=\"M31.162,24.359l-4.612,4.611l-0.864,0.867c-0.115,0.114-0.274,0.178-0.434,0.178s-0.318-0.063-0.433-0.178\n" +
    "        l-0.866-0.867l-2.307-2.307c-0.115-0.114-0.179-0.272-0.179-0.432c0-0.16,0.063-0.318,0.179-0.433l0.866-0.867\n" +
    "        c0.115-0.115,0.273-0.179,0.434-0.179c0.159,0,0.317,0.063,0.433,0.179l1.873,1.88l4.178-4.186\n" +
    "        c0.115-0.115,0.275-0.179,0.434-0.179c0.159,0,0.318,0.063,0.433,0.179l0.866,0.866c0.116,0.114,0.179,0.273,0.179,0.434\n" +
    "        C31.341,24.086,31.278,24.244,31.162,24.359z\"></path>\n" +
    "      </g>\n" +
    "    </g>\n" +
    "  </svg>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/offer-label-modal.html',
    "<div class=\"modal-body offer-label-modal\">\n" +
    "\n" +
    "  <h2>Labels</h2>\n" +
    "\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-lg-12\">\n" +
    "      <input type=\"text\"\n" +
    "             class=\"form-control\"\n" +
    "             ng-model=\"lmc.labelNames\"\n" +
    "             name=\"labels\" />\n" +
    "      <p class=\"help-block\">Een puntkomma start een nieuw label. <br />\n" +
    "        <span class=\"lmc-alert text-danger\" ng-if=\"lmc.alert\" ng-bind=\"lmc.alert\"><</span></p>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"col-lg-12\">\n" +
    "      <div class=\"checkbox\" ng-repeat=\"label in lmc.labelSelection\">\n" +
    "        <label>\n" +
    "          <input type=\"checkbox\" ng-model=\"label.selected\"/>\n" +
    "          <span ng-bind=\"label.name\"></span>\n" +
    "        </label>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button class=\"btn btn-default\" ng-click=\"lmc.close()\">Annuleren</button>\n" +
    "  <button class=\"btn btn-primary\" ng-click=\"lmc.ok()\">Label</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/base-job.template.html',
    "<p>\n" +
    "  <ins>\n" +
    "    <span am-time-ago=\"::job.getLogDateByState()\"></span> <i class=\"fa fa-circle-o-notch fa-spin udb-job-busy\"\n" +
    "       ng-show=\"job.state === 'started'\"></i>\n" +
    "  </ins>\n" +
    "  <span class=\"udb-job-description\" ng-bind=\"::job.getDescription()\"></span>\n" +
    "</p>\n"
  );


  $templateCache.put('templates/failed-job.template.html',
    "<p>\n" +
    "  <a class=\"udb-hide-job-button\" ng-click=\"hideJob(job)\">\n" +
    "    <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\n" +
    "  </a>\n" +
    "  <ins>\n" +
    "    <span am-time-ago=\"::job.getLogDateByState()\"></span>\n" +
    "  </ins>\n" +
    "  <span ng-bind=\"job.getDescription()\"></span>\n" +
    "</p>\n"
  );


  $templateCache.put('templates/job-log.component.html',
    "<div class=\"udb-job-log\" ng-class=\"{'shown': logger.isVisible()}\">\n" +
    " <div class=\"udb-job-log-header\">\n" +
    "     <div class=\"row\">\n" +
    "         <div class=\"col-sm-12\">\n" +
    "            <button type=\"button\" class=\"close\" ng-click=\"logger.hideJobLog()\"><span aria-hidden=\"true\">&times;</span></button>\n" +
    "         </div>\n" +
    "         <div class=\"col-sm-12\">\n" +
    "           <div class=\"udb-job-log-header-message\">\n" +
    "             <!-- udb-job-log-header-message -->\n" +
    "           </div>\n" +
    "         </div>\n" +
    "     </div>\n" +
    " </div>\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-sm-12\">\n" +
    "      <div class=\"udb-job-block udb-job-block-ready\">\n" +
    "        <p class=\"udb-job-title\">Geëxporteerde documenten</p>\n" +
    "        <ul class=\"list-unstyled udb-job-messages\">\n" +
    "          <li class=\"udb-alert repeat-animation\" ng-repeat=\"job in logger.getFinishedExportJobs()\">\n" +
    "            <udb-job></udb-job>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"udb-job-block udb-job-block-errors\">\n" +
    "        <p class=\"udb-job-title\">Meldingen <span class=\"badge\" ng-bind=\"logger.getFailedJobs().length\"></span></p>\n" +
    "        <ul class=\"list-unstyled udb-job-messages\">\n" +
    "          <li class=\"udb-alert repeat-animation\" ng-repeat=\"job in logger.getFailedJobs()\">\n" +
    "            <udb-job></udb-job>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"udb-job-block udb-job-block-pending\">\n" +
    "        <p class=\"udb-job-title\">Bezig</p>\n" +
    "        <ul class=\"list-unstyled udb-job-messages\">\n" +
    "          <li class=\"udb-alert repeat-animation\" ng-repeat=\"job in logger.getQueuedJobs()\">\n" +
    "            <udb-job></udb-job>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"udb-job-log-footer-message\">\n" +
    "        <!-- udb-job-log-footer-message -->\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "<div class=\"udb-job-log-overlay\" ng-class=\"{'shown': logger.isVisible()}\" ng-click=\"logger.hideJobLog()\"></div>\n"
  );


  $templateCache.put('templates/booking-info-detail.directive.html',
    "<tr ng-class=\"::{muted: isEmpty(bookingInfo) || (bookingInfo.phone == null && bookingInfo.email == null && bookingInfo.url == null)}\">\n" +
    "    <td>\n" +
    "        <span class=\"row-label\" translate-once=\"booking.label\"></span>\n" +
    "    </td>\n" +
    "    <td ng-if=\"hasAtLeastOneContactPoint()\">\n" +
    "        <ul class=\"list-unstyled\" >\n" +
    "            <li ng-if=\"::bookingInfo.url\">\n" +
    "                    <span>\n" +
    "                      <a class=\"btn btn-info\" target=\"_blank\" ng-href=\"{{::bookingInfo.url}}\"\n" +
    "                         ng-bind=\"::bookingInfo.urlLabel\"></a>\n" +
    "                    </span>\n" +
    "            </li>\n" +
    "\n" +
    "            <li ng-if=\"::bookingInfo.phone\" ng-bind=\"::bookingInfo.phone\"></li>\n" +
    "            <li ng-if=\"::bookingInfo.email\"> <a href=\"::{{'mailto:'+ bookingInfo.email}}\">{{::bookingInfo.email}}</a></li>\n" +
    "            <li ng-if=\"::bookingInfo.availabilityStarts\" > Van {{::bookingInfo.availabilityStarts | date}} tot {{::bookingInfo.availabilityEnds | date}}</li>\n" +
    "        </ul>\n" +
    "    </td>\n" +
    "    <td ng-if=\"!hasAtLeastOneContactPoint()\" translate-once=\"booking.no_booking\"></td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/contact-point-detail.directive.html',
    "<tr ng-class=\"::{muted: isEmpty(contactPoint)}\">\n" +
    "    <td>\n" +
    "        <span class=\"row-label\" translate-once=\"contact.label\"></span>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::!isEmpty(contactPoint)\">\n" +
    "        <ul class=\"list-unstyled\">\n" +
    "            <li>\n" +
    "                    <span ng-repeat=\"website in ::contactPoint.url\">\n" +
    "                      <a ng-href=\"{{::website}}\" target=\"_blank\" ng-bind=\"::website\"></a>\n" +
    "                      <span ng-if=\"::!$last\" translate-once=\"contact.or\"> </span>\n" +
    "                    </span>\n" +
    "            </li>\n" +
    "            <li>\n" +
    "                    <span ng-repeat=\"phone in ::contactPoint.phone\">\n" +
    "                      <span ng-bind=\"::phone\"></span>\n" +
    "                      <span ng-if=\"::!$last\" translate-once=\"contact.or\"> </span>\n" +
    "                    </span>\n" +
    "            </li>\n" +
    "            <li>\n" +
    "                    <span ng-repeat=\"email in ::contactPoint.email\">\n" +
    "                      <span ng-bind=\"::email\"></span>\n" +
    "                      <span ng-if=\"::!$last\" translate-once=\"contact.or\"> </span>\n" +
    "                    </span>\n" +
    "            </li>\n" +
    "        </ul>\n" +
    "    </td>\n" +
    "    <td ng-if=\"::isEmpty(contactPoint)\" translate-once=\"contact.no_contact\"></td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/event-detail.html',
    "<div ng-if=\"eventIdIsInvalid\">\n" +
    "  <div class=\"page-header\">\n" +
    "    <h1 translate-once=\"preview.not_found\"></h1>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-xs-12\">\n" +
    "      <p translate-once=\"preview.not_found_help\"></p>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-if=\"!finishedLoading()\">\n" +
    "  <p class=\"title\"><span class=\"placeholder-title\"></span></p>\n" +
    "  <p class=\"text-center\"><i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i><span class=\"sr-only\" translate-once=\"preview.loading\"></span></p>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-if=\"finishedLoading()\" class=\"event-detail\">\n" +
    "  <h1 class=\"title\" ng-bind=\"::event.name\"></h1>\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-sm-3 col-sm-push-9\">\n" +
    "      <div class=\"list-group\" ng-if=\"::permissions\">\n" +
    "        <button ng-if=\"::permissions.editing\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-click=\"openEditPage()\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.edit\"></span> <span class=\"badge\" ng-if=\"event.mainLanguage !== language\" ng-bind=\"::event.mainLanguage\"></span></button>\n" +
    "        <button ng-if=\"::permissions.editing\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-click=\"openTranslatePage()\"><i class=\"fa fa-globe\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.translate\"></span></button>\n" +
    "        <button ng-if=\"::permissions.duplication\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ui-sref='duplication.event(::{id: event.id})'><i class=\"fa fa-files-o\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.duplicate\"></span></button>\n" +
    "        <button ng-if=\"::permissions.editing\"\n" +
    "                class=\"list-group-item\"\n" +
    "                href=\"#\"\n" +
    "                ng-click=\"deleteEvent()\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.delete\"></span></button>\n" +
    "        <udb-moderation-offer ng-if=\"::moderationPermission\" class=\"list-group-item moderation-detail\" offer-id=\"{{::event['@id']}}\" continue=\"true\"></udb-moderation-offer>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <div class=\"col-sm-9 col-sm-pull-3\">\n" +
    "      <ul class=\"nav nav-tabs\">\n" +
    "        <li ng-repeat=\"tab in tabs\" ng-class=\"{active: isTabActive(tab.id)}\" role=\"tab\">\n" +
    "          <a ng-click=\"makeTabActive(tab.id)\" role=\"tab\" translate-once=\"preview.tabs.{{tab.id}}\" href=\"#\"></a>\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "\n" +
    "      <div class=\"tab-pane\" role=\"tabpanel\" ng-show=\"isTabActive('data')\">\n" +
    "          <table class=\"table udb3-data-table\">\n" +
    "            <colgroup>\n" +
    "              <col style=\"width:20%\"/>\n" +
    "              <col style=\"width:80%\"/>\n" +
    "            </colgroup>\n" +
    "            <tbody>\n" +
    "              <tr>\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.title\"></span></td>\n" +
    "                <td>{{::event.name}}</td>\n" +
    "              </tr>\n" +
    "              <tr>\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.type\"></span></td>\n" +
    "                <td>{{::translateType(event.type.label)}}</td>\n" +
    "              </tr>\n" +
    "              <tr ng-if=\"::event.audience.audienceType !== 'everyone'\">\n" +
    "                <td><span class=\"row-label\">Toegang</span></td>\n" +
    "                <td>\n" +
    "                  <p ng-bind=\"::translateAudience(event.audience.audienceType)\"></p>\n" +
    "                  <udb-event-cultuurkuur-component event=\"event\" permission=\"::permissions.editing\" ></udb-event-cultuurkuur-component>\n" +
    "                </td>\n" +
    "              </tr>\n" +
    "              <tr>\n" +
    "                <td>\n" +
    "                  <span class=\"row-label\" translate-once=\"preview.labels\"></span>\n" +
    "                </td>\n" +
    "                <td>\n" +
    "                  <p>\n" +
    "                    <udb-label-select labels=\"::event.labels\"\n" +
    "                                    label-added=\"labelAdded(label)\"\n" +
    "                                    label-removed=\"labelRemoved(label)\">\n" +
    "                    </udb-label-select>\n" +
    "                  </p>\n" +
    "                  <p ng-if=\"labelResponse === 'error'\" class=\"alert alert-danger\">\n" +
    "                    <span translate-once=\"preview.labels_error\" translate-values=\"{ labelName: '{{labelsError.name}}' }\"></span>\n" +
    "                  </p>\n" +
    "                  <p ng-if=\"labelResponse === 'success'\" class=\"alert alert-success\">\n" +
    "                    <span translate-once=\"preview.labels_success\" translate-values=\"{ addedLabel: '{{addedLabel}}' }\"></span>\n" +
    "                  </p>\n" +
    "                  <p ng-if=\"labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "                    <span ng-bind=\"labelsError\"></span>\n" +
    "                  </p>\n" +
    "                </td>\n" +
    "              </tr>\n" +
    "              <tr ng-class=\"::{muted: isEmpty(event.description)}\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.description\"></span></td>\n" +
    "                <td ng-if=\"::(!isEmpty(event.description))\">\n" +
    "                  <div ng-bind-html=\"::event.description\" class=\"event-detail-description\"></div>\n" +
    "                </td>\n" +
    "                <td ng-if=\"::(isEmpty(event.description))\" translate-once=\"preview.no_description\"></td>\n" +
    "              </tr>\n" +
    "              <tr>\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.where\"></span></td>\n" +
    "                <td ng-show=\"::event.location.url\"><a ui-sref=\"split.footer.place-preview({id: event.location.id})\">{{eventLocation(event)}}</a></td>\n" +
    "                <td ng-hide=\"::event.location.url\">\n" +
    "                  {{eventLocation(event)}}\n" +
    "                </td>\n" +
    "              </tr>\n" +
    "              <tr>\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.when\"></span></td>\n" +
    "                <td>\n" +
    "                  <span ng-if=\"::calendarSummary\" ng-bind-html=\"::calendarSummary\"></span>\n" +
    "                  <span class=\"text-muted\"\n" +
    "                        ng-if=\"::(calendarSummary !== undefined ? (calendarSummary === false) : undefined)\">\n" +
    "                      Probleem bij het ophalen van de kalenderinformatie\n" +
    "                    </span>\n" +
    "                </td>\n" +
    "              </tr>\n" +
    "              <tr ng-class=\"::{muted: (!event.organizer)}\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.organizer\"></span></td>\n" +
    "                <td ng-if=\"::event.organizer\">{{::event.organizer.name}}</td>\n" +
    "                <td ng-if=\"::(!event.organizer)\" translate-once=\"preview.no_organizer\"></td>\n" +
    "              </tr>\n" +
    "              <tr class=\"rv-event-info-price\" ng-class=\"::{muted: !event.priceInfo.length}\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.price\"></span></td>\n" +
    "                <td ng-if=\"::event.priceInfo.length\">\n" +
    "                  <table class=\"table table-bordered event-detail-price-table\">\n" +
    "                    <tr ng-repeat=\"priceInfo in ::event.priceInfo\">\n" +
    "                      <td>{{priceInfo.name}}</td>\n" +
    "                      <td>\n" +
    "                        <span ng-if=\"priceInfo.price == 0\" translate-once=\"preview.free\"></span>\n" +
    "                        <span ng-if=\"::priceInfo.price != 0\">\n" +
    "                          {{priceInfo.price | currency}} <span translate-once=\"preview.currency\"></span>\n" +
    "                        </span>\n" +
    "                      </td>\n" +
    "                    </tr>\n" +
    "                  </table>\n" +
    "                </td>\n" +
    "                <td ng-if=\"::(event.priceInfo.length == 0)\" translate-once=\"preview.no_price\"></td>\n" +
    "              </tr>\n" +
    "            </tbody>\n" +
    "            <tbody ng-if=\"::(!isEmpty(event.bookingInfo))\" udb-booking-info-detail=\"::event.bookingInfo\"></tbody>\n" +
    "            <tbody udb-contact-point-detail=\"::event.contactPoint\"></tbody>\n" +
    "            <tbody>\n" +
    "              <tr  ng-class=\"::{muted: noAgeInfo}\">\n" +
    "                <td><span class=\"row-label\" translate-once=\"preview.age_label\"></span></td>\n" +
    "                <td>\n" +
    "                  <span ng-if=\"::!allAges && !noAgeInfo\">{{event.typicalAgeRange}}</span>\n" +
    "                  <span ng-if=\"::allAges && !noAgeInfo\" translate-once=\"preview.all_ages\"></span>\n" +
    "                  <span ng-if=\"noAgeInfo\" translate-once=\"preview.no_age\"></span>\n" +
    "                </td>\n" +
    "\n" +
    "              </tr>\n" +
    "            </tbody>\n" +
    "            <tbody udb-image-detail=\"::event.mediaObject\" image=\"::event.image\"></tbody>\n" +
    "          </table>\n" +
    "      </div>\n" +
    "\n" +
    "      <div role=\"tabpanel\" class=\"tab-pane\" ng-show=\"isTabActive('history')\">\n" +
    "        <div class=\"timeline\">\n" +
    "          <p ng-show=\"!eventHistory\" class=\"text-center\">\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i><span class=\"sr-only\" translate-once=\"preview.loading\"></span>\n" +
    "          </p>\n" +
    "          <div ng-if=\"::eventHistory\">\n" +
    "            <dl ng-repeat=\"eventAction in ::eventHistory track by $index\">\n" +
    "              <dt ng-bind=\"::eventAction.date | date:'dd/MM/yyyy H:mm'\"></dt>\n" +
    "              <dd>\n" +
    "                <span class=\"author\" ng-if=\"eventAction.author\" ng-bind=\"::eventAction.author\"></span>\n" +
    "                <br ng-if=\"::eventAction.author\"/>\n" +
    "                <span class=\"description\" ng-bind=\"::eventAction.description\"></span>\n" +
    "              </dd>\n" +
    "            </dl>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"tab-pane\" role=\"tabpanel\" ng-show=\"isTabActive('publication')\">\n" +
    "        <table class=\"table udb3-data-table\">\n" +
    "          <colgroup>\n" +
    "            <col style=\"width:20%\"/>\n" +
    "            <col style=\"width:80%\"/>\n" +
    "          </colgroup>\n" +
    "          <tbody udb-workflow-status=\"::event\">\n" +
    "          </tbody>\n" +
    "        </table>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/form-age.html',
    "<div class=\"row extra-leeftijd\">\n" +
    "    <div class=\"extra-task\" ng-class=\"{'state-complete': !!fagec.activeAgeRange}\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <em class=\"extra-task-label\" translate-once=\"eventForm.step5.age.age_label\"></em>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <span ng-repeat=\"(type, ageRange) in ::fagec.ageRanges\">\n" +
    "                <a ng-bind=\"::translateAgeRange(ageRange.label)\"\n" +
    "                   ng-class=\"{'font-bold': fagec.activeAgeRange === type}\"\n" +
    "                   href=\"#\"\n" +
    "                   ng-mousedown=\"fagec.setAgeRangeByType(type)\"></a><span ng-if=\"::!$last\">, </span>\n" +
    "            </span>\n" +
    "            <div ng-show=\"fagec.rangeInputEnabled\" class=\"form-inline\" id=\"form-age\">\n" +
    "               <form name=\"ageForm\">\n" +
    "                   <div class=\"form-group\" >\n" +
    "                    <label for=\"min-age\" translate-once=\"eventForm.step5.age.from\"></label>\n" +
    "                    <input type=\"text\"\n" +
    "                           class=\"form-control\"\n" +
    "                           id=\"min-age\"\n" +
    "                           name=\"min\"\n" +
    "                           ng-model=\"fagec.minAge\"\n" +
    "                           ng-blur=\"fagec.instantSaveAgeRange()\"\n" +
    "                           ng-change=\"fagec.delayedSaveAgeRange()\"\n" +
    "                           udb-age-input>\n" +
    "                    <span class=\"form-text\" translate-once=\"eventForm.step5.age.age\"></span>\n" +
    "                </div>\n" +
    "                <div class=\"form-group\">\n" +
    "                    <label for=\"max-age\" translate-once=\"eventForm.step5.age.till\"></label>\n" +
    "                    <input type=\"text\"\n" +
    "                           class=\"form-control\"\n" +
    "                           id=\"max-age\"\n" +
    "                           name=\"max\"\n" +
    "                           ng-model=\"fagec.maxAge\"\n" +
    "                           ng-blur=\"fagec.instantSaveAgeRange()\"\n" +
    "                           ng-change=\"fagec.delayedSaveAgeRange()\"\n" +
    "                           udb-age-input>\n" +
    "                    <span class=\"form-text\" translate-once=\"eventForm.step5.age.age\"></span>\n" +
    "                </div>\n" +
    "               </form>\n" +
    "            </div>\n" +
    "            <div class=\"alert alert-danger\" role=\"alert\" ng-show=\"fagec.error\">\n" +
    "                <span ng-bind=\"fagec.error\"></span>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/form-audience.html',
    "<div class=\"row audience\" ng-if=\"::fac.enabled\">\n" +
    "    <div class=\"extra-task state-complete\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <em class=\"extra-task-label\" translate-once=\"audience.entrance\"></em>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-8\">\n" +
    "            <div class=\"radio\">\n" +
    "                <label>\n" +
    "                    <input ng-model=\"fac.audienceType\"\n" +
    "                           ng-change=\"fac.setAudienceType('everyone')\"\n" +
    "                           type=\"radio\"\n" +
    "                           name=\"audience-type\"\n" +
    "                           id=\"audience-everyone\"\n" +
    "                           value=\"everyone\"\n" +
    "                           checked>\n" +
    "                    <span translate-once=\"audience.everyone\"></span>\n" +
    "                </label>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"radio\">\n" +
    "                <label>\n" +
    "                    <input ng-model=\"fac.audienceType\"\n" +
    "                           ng-change=\"fac.setAudienceType('members')\"\n" +
    "                           type=\"radio\"\n" +
    "                           name=\"audience-type\"\n" +
    "                           id=\"audience-members\"\n" +
    "                           value=\"members\"\n" +
    "                           aria-describedby=\"audience-members-help\">\n" +
    "                    <span translate-once=\"audience.members\"></span>\n" +
    "                    <span id=\"audience-members-help\"\n" +
    "                          class=\"help-block\"\n" +
    "                          translate-once=\"audience.members_help\"\n" +
    "                          ng-show=\"fac.audienceType === 'members'\">\n" +
    "                    </span>\n" +
    "                </label>\n" +
    "            </div>\n" +
    "\n" +
    "\n" +
    "            <div class=\"radio\">\n" +
    "                <label>\n" +
    "                    <input ng-model=\"fac.audienceType\"\n" +
    "                           ng-change=\"fac.setAudienceType('education')\"\n" +
    "                           type=\"radio\"\n" +
    "                           name=\"audience-type\"\n" +
    "                           id=\"audience-education\"\n" +
    "                           value=\"education\"\n" +
    "                           aria-describedby=\"audience-education-help\">\n" +
    "                    <span translate-once=\"audience.education\"></span>\n" +
    "                    <span id=\"audience-education-help\"\n" +
    "                          class=\"help-block\"\n" +
    "                          translate-once=\"audience.education_help\"\n" +
    "                          ng-show=\"fac.audienceType === 'education'\">\n" +
    "                    </span>\n" +
    "                </label>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/form-calendar-datepicker.component.html',
    "<p class=\"input-group\" ng-class=\"{'has-error': !datepicker.date}\">\n" +
    "    <input type=\"text\" \n" +
    "           class=\"form-control\" \n" +
    "           uib-datepicker-popup=\"dd/MM/yyyy\"\n" +
    "           ng-model=\"datepicker.date\"\n" +
    "           is-open=\"datepicker.isOpen\"\n" +
    "           datepicker-options=\"datepicker.options\"\n" +
    "           ng-required=\"true\"\n" +
    "           ng-change=\"datepicker.changed()\"\n" +
    "           show-button-bar=\"false\"\n" +
    "           ng-disabled=\"datepicker.disabled\"\n" +
    "           ng-focus=\"datepicker.open()\"/>\n" +
    "    <span class=\"input-group-btn\">\n" +
    "        <button type=\"button\"\n" +
    "                class=\"btn btn-default\"\n" +
    "                ng-disabled=\"datepicker.disabled\"\n" +
    "                ng-class=\"{'btn-danger': !datepicker.date}\"\n" +
    "                ng-click=\"datepicker.open()\"><i class=\"fa fa-calendar\"></i></button>\n" +
    "    </span>\n" +
    "</p>"
  );


  $templateCache.put('templates/form-calendar-period.component.html',
    "<div class=\"form-calendar-period\">\n" +
    "    <label>\n" +
    "        <input type=\"checkbox\"\n" +
    "               class=\"permanent-check\"\n" +
    "               ng-model=\"$ctrl.calendarType\"\n" +
    "               ng-true-value=\"'periodic'\"\n" +
    "               ng-false-value=\"'permanent'\"\n" +
    "               ng-change=\"$ctrl.formData.setCalendarType($ctrl.calendarType)\">\n" +
    "        <span translate-once=\"calendar.period.title\"></span>\n" +
    "    </label>\n" +
    "    <div class=\"periodic-info\">\n" +
    "        <div class=\"start-date\">\n" +
    "            <label translate-once=\"calendar.period.from\"></label>\n" +
    "            <udb-form-calendar-datepicker ng-disabled=\"$ctrl.formData.calendar.calendarType !== 'periodic'\"\n" +
    "                                            ng-model=\"$ctrl.formData.calendar.startDate\"\n" +
    "                                            ng-change=\"$ctrl.formData.periodicTimingChanged()\">\n" +
    "            </udb-form-calendar-datepicker>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"end-date\">\n" +
    "            <label translate-once=\"calendar.period.till\"></label>\n" +
    "            <udb-form-calendar-datepicker ng-disabled=\"$ctrl.formData.calendar.calendarType !== 'periodic'\"\n" +
    "                                            ng-model=\"$ctrl.formData.calendar.endDate\"\n" +
    "                                            ng-change=\"$ctrl.formData.periodicTimingChanged()\">\n" +
    "            </udb-form-calendar-datepicker>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"requirements\"\n" +
    "             ng-show=\"$ctrl.formData.calendarType === 'periodic' && $ctrl.formData.periodicRangeError\">\n" +
    "            <div class=\"alert alert-danger\">\n" +
    "                <p translate-once=\"calendar.period.alert\"></p>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/form-calendar-timepicker.component.html',
    "<uib-timepicker ng-model=\"timepicker.time\" \n" +
    "                ng-change=\"timepicker.changed()\" \n" +
    "                hour-step=\"1\" \n" +
    "                minute-step=\"15\" \n" +
    "                show-spinners=\"false\" \n" +
    "                show-meridian=\"false\">\n" +
    "</uib-timepicker>"
  );


  $templateCache.put('templates/form-event-calendar.component.html',
    "<div class=\"calendar-type-picker\">\n" +
    "    <div class=\"calendar-type-options\">\n" +
    "\n" +
    "        <a href=\"#\" ng-click=\"calendar.setType('single')\" ng-class=\"{'selected': calendar.type === 'single' || calendar.type === 'multiple' }\">\n" +
    "            <img src=\"../images/form-calendar/days.svg\" class=\"calendar-type-icon\">\n" +
    "            <p class=\"text-center\"><strong translate-once=\"calendar.one_more_days\"></strong></p></a><span class=\"or\" translate-once=\"calendar.or\"></span><a href=\"#\" ng-click=\"calendar.setType('periodic')\" ng-class=\"{'selected': calendar.type === 'periodic' || calendar.type === 'permanent'}\">\n" +
    "            <img src=\"../images/form-calendar/period.svg\" class=\"calendar-type-icon\">\n" +
    "            <p class=\"text-center\"><strong translate-once=\"calendar.default_days\"></strong></p>\n" +
    "        </a>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"calendar-timing-info\">\n" +
    "    <div class=\"panel panel-default\">\n" +
    "        <div class=\"panel-body\">\n" +
    "            <div class=\"calendar-time-spans\" ng-if=\"!calendar.weeklyRecurring\">\n" +
    "                <div class=\"calendar-time-span\" ng-repeat=\"timeSpan in calendar.timeSpans track by $index\">\n" +
    "                    <span ng-show=\"calendar.timeSpans.length > 1\" aria-hidden=\"true\" ng-click=\"calendar.removeTimeSpan(timeSpan)\" class=\"close\">×</span>\n" +
    "                    <div class=\"dates\">\n" +
    "                        <div class=\"date form-group\">\n" +
    "                            <label for=\"time-span-{{$index}}-start-date\" translate-once=\"calendar.start_label\"></label>\n" +
    "                            <udb-form-calendar-datepicker ng-model=\"timeSpan.start\" ng-change=\"calendar.delayedTimeSpanChanged()\">\n" +
    "                            </udb-form-calendar-datepicker>\n" +
    "                        </div>\n" +
    "                        <div class=\"date form-group\">\n" +
    "                            <label for=\"time-span-{{$index}}-end-date\" translate-once=\"calendar.end_label\"></label>\n" +
    "                            <udb-form-calendar-datepicker ng-model=\"timeSpan.end\" ng-change=\"calendar.delayedTimeSpanChanged()\">\n" +
    "                            </udb-form-calendar-datepicker>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "                    <div class=\"timing-control\">\n" +
    "                        <div class=\"checkbox all-day\">\n" +
    "                            <label for=\"time-span-{{$index}}-has-timing-info\">\n" +
    "                                <input type=\"checkbox\"\n" +
    "                                       id=\"time-span-{{$index}}-has-timing-info\"\n" +
    "                                       ng-model=\"timeSpan.allDay\"\n" +
    "                                       ng-change=\"calendar.toggleAllDay(timeSpan)\"\n" +
    "                                       class=\"all-day-check\"> <span translate-once=\"calendar.whole_day_label\"></span>\n" +
    "                            </label>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "                    <div class=\"timing\" ng-if=\"!timeSpan.allDay\">\n" +
    "                        <div class=\"time form-group\">\n" +
    "                            <label translate-once=\"calendar.start_hour_label\"></label>\n" +
    "                            <udb-form-calendar-timepicker ng-model=\"timeSpan.start\" ng-change=\"calendar.delayedTimeSpanChanged()\"></udb-form-calendar-timepicker>\n" +
    "                        </div>\n" +
    "\n" +
    "                        <div class=\"time form-group\">\n" +
    "                            <label translate-once=\"calendar.end_hour_label\"></label>\n" +
    "                            <udb-form-calendar-timepicker ng-model=\"timeSpan.end\" ng-change=\"calendar.delayedTimeSpanChanged()\"></udb-form-calendar-timepicker>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "                    <div class=\"requirements\" ng-show=\"calendar.timeSpanRequirements[$index] && calendar.timeSpanRequirements[$index].length\">\n" +
    "                        <div class=\"error alert alert-danger\">\n" +
    "                            <p ng-repeat=\"requirement in calendar.timeSpanRequirements[$index]\"\n" +
    "                               ng-bind=\"'TIME_SPAN_REQUIREMENTS.' + requirement | translate\"></p>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "\n" +
    "                <a href=\"#\" ng-click=\"calendar.createTimeSpan()\" class=\"add-day-link\" translate-once=\"calendar.add_days\"></a>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"calendar-recurrence\" ng-if=\"calendar.weeklyRecurring\">\n" +
    "                <udb-form-calendar-period form-data=\"calendar.formData\"></udb-form-calendar-period>\n" +
    "                <hr>\n" +
    "                <udb-event-form-opening-hours form-data=\"calendar.formData\" opening-hours=\"calendar.openingHoursCollection\">\n" +
    "                </udb-event-form-opening-hours>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/form-place-calendar.component.html',
    "<div class=\"calendar-timing-info\">\n" +
    "    <div class=\"panel panel-default\">\n" +
    "        <div class=\"panel-body\">\n" +
    "            <div class=\"calendar-recurrence\" ng-if=\"calendar.weeklyRecurring\">\n" +
    "                <udb-form-calendar-period form-data=\"calendar.formData\"></udb-form-calendar-period>\n" +
    "                <hr>\n" +
    "                <udb-event-form-opening-hours form-data=\"calendar.formData\" opening-hours=\"calendar.openingHoursCollection\">\n" +
    "                </udb-event-form-opening-hours>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/city-suggestion.html',
    "<a href tabindex=\"-1\" ng-bind-html=\"match.label | uibTypeaheadHighlight:query\" class=\"city-suggestion\"></a>\n"
  );


  $templateCache.put('templates/event-form-image-edit.html',
    "<div class=\"modal-content\">\n" +
    "  <div class=\"modal-header\">\n" +
    "    <button type=\"button\" class=\"close\" ng-click=\"cancel()\">\n" +
    "      <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\n" +
    "    </button>\n" +
    "    <h4 class=\"modal-title\" translate-once=\"images.edit.title\"></h4>\n" +
    "  </div>\n" +
    "  <div class=\"modal-body\">\n" +
    "\n" +
    "    <div>\n" +
    "      <div class=\"form-group\">\n" +
    "        <label><span translate-once=\"images.description\"></span> <strong class=\"text-danger\">*</strong></label>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"description\" required>\n" +
    "        <p class=\"help-block\" translate-once=\"images.edit.description_help\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"form-group\">\n" +
    "        <label><span translate-once=\"images.copyright\"></span> <strong class=\"text-danger\">*</strong></label>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"copyrightHolder\" required>\n" +
    "        <p class=\"help-block\" translate-once=\"images.copyright_help\"></p>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-show=\"error\" class=\"alert alert-danger\">\n" +
    "      <span translate-once=\"images.edit.save_error\"></span>\n" +
    "    </div>\n" +
    "\n" +
    "    <p class=\"image-copyright-agreements\">\n" +
    "      <span translate-once=\"images.agreement\"></span>\n" +
    "      <a ng-href=\"{{::uploadTermsConditionsUrl}}\" target=\"_blank\" translate-once=\"images.conditions\"></a>.\n" +
    "      <a ng-href=\"{{::uploadCopyRightInfoUrl}}\" target=\"_blank\" translate-once=\"images.copyright_info\"></a>\n" +
    "    </p>\n" +
    "  </div>\n" +
    "  <div class=\"modal-footer\">\n" +
    "\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\" translate-once=\"images.cancel\"></button>\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-click=\"updateImageInfo()\" ng-disabled=\"!allFieldsValid() || saving\">\n" +
    "      <span translate-once=\"images.edit.update\"></span> <i ng-show=\"saving\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </button>\n" +
    "\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-image-remove.html',
    "<div class=\"modal-content\">\n" +
    "  <div class=\"modal-header\">\n" +
    "    <button type=\"button\" class=\"close\" ng-click=\"cancel()\">\n" +
    "      <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\n" +
    "    </button>\n" +
    "    <h4 class=\"modal-title\" translate-once=\"images.remove.title\"></h4>\n" +
    "  </div>\n" +
    "  <div class=\"modal-body\">\n" +
    "\n" +
    "    <p translate-once=\"images.remove.sure\"></p>\n" +
    "\n" +
    "    <div ng-show=\"error\" class=\"alert alert-danger\">\n" +
    "      <span translate-once=\"images.remove.save_error\"></span>\n" +
    "    </div>\n" +
    "\n" +
    "  </div>\n" +
    "  <div class=\"modal-footer\">\n" +
    "\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\" translate-once=\"images.cancel\"></button>\n" +
    "    <button class=\"btn btn-primary\" ng-click=\"removeImage()\">\n" +
    "      <span translate-once=\"images.agree\"></span> <i ng-show=\"saving\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </button>\n" +
    "\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-image-upload.html',
    "<div class=\"modal-content\">\n" +
    "  <div class=\"modal-header\">\n" +
    "    <button type=\"button\" class=\"close\" ng-click=\"cancel()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n" +
    "    <h4 class=\"modal-title\" ng-bind=\"::modalTitle\"></h4>\n" +
    "  </div>\n" +
    "  <div class=\"modal-body\">\n" +
    "\n" +
    "    <p ng-show=\"showAgreements\">\n" +
    "      <span translate-once=\"images.agreement\"></span>\n" +
    "       <a ng-href=\"{{::userAgreementUrl}}\" target=\"_blank\" translate-once=\"images.conditions\"></a>.\n" +
    "       <a ng-href=\"{{::copyrightUrl}}\" target=\"_blank\" translate-once=\"images.copyright_info\"></a>\n" +
    "    </p>\n" +
    "    <div ng-hide=\"showAgreements\">\n" +
    "      <div class=\"form-group\">\n" +
    "        <label for=\"inputFile\" translate-once=\"images.upload.select_image\"></label>\n" +
    "        <p>\n" +
    "          <button type=\"file\"\n" +
    "                  class=\"btn btn-primary\"\n" +
    "                  id=\"inputFile\"\n" +
    "                  ngf-select=\"selectFile($file, $invalidFiles)\"\n" +
    "                  accept=\"image/*\"\n" +
    "                  ngf-max-size=\"{{maxFileSize}}\">\n" +
    "            <span translate-once=\"images.upload.choose_file\"></span></button>\n" +
    "        </p>\n" +
    "\n" +
    "        <p ng-show=\"selectedFile\">\n" +
    "          <span ng-bind=\"selectedFile.name\"></span>\n" +
    "        </p>\n" +
    "\n" +
    "        <p class=\"help-block\" translate-once=\"images.upload.max_filesize\" translate-values=\"{ maxFileSize: '{{maxFileSize}}' }\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"form-group\">\n" +
    "        <label><span translate-once=\"images.description\"></span> <strong class=\"text-danger\">*</strong></label>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"description\" required>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"form-group\">\n" +
    "        <label><span translate-once=\"images.copyright\"></span> <strong class=\"text-danger\">*</strong></label>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"copyright\" required>\n" +
    "        <p class=\"help-block\" translate-once=\"images.copyright_help\"></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <p class=\"image-copyright-agreements\">\n" +
    "        <span translate-once=\"images.agreement\"></span>\n" +
    "        <a ng-href=\"{{::userAgreementUrl}}\" target=\"_blank\" translate-once=\"images.conditions\"></a>.\n" +
    "        <a ng-href=\"{{::copyrightUrl}}\" target=\"_blank\" translate-once=\"images.copyright_info\"></a>\n" +
    "      </p>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-show=\"error\" class=\"alert alert-danger\">\n" +
    "      <span ng-bind=\"error\"></span>\n" +
    "    </div>\n" +
    "\n" +
    "  </div>\n" +
    "  <div class=\"modal-footer\">\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\" translate-once=\"images.cancel\"></button>\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-hide=\"showAgreements\" ng-disabled=\"!allFieldsValid() || saving\" ng-click=\"addImage()\">\n" +
    "      <span translate-once=\"images.upload.upload\"></span> <i ng-show=\"saving\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </button>\n" +
    "    <button class=\"btn btn-primary\" ng-show=\"showAgreements\" ng-click=\"acceptAgreements()\" translate-once=\"images.agree\"></button>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/opening-hours-editor.modal.html',
    "<div class=\"modal-header\">\n" +
    "    <h4 class=\"modal-title\" translate-once=\"calendar.openingHours.opening_hours\"></h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "    <div class=\"well text-center add-opening-hours\"\n" +
    "         ng-show=\"ohemc.openingHoursCollection.openingHours.length === 0\">\n" +
    "        <span translate-once=\"calendar.openingHours.permanent_title\"></span>\n" +
    "        <br>\n" +
    "        <span translate-once=\"calendar.openingHours.permanent_subtitle\"></span>\n" +
    "        <br>\n" +
    "        <button type=\"button\" class=\"btn btn-primary\" ng-click=\"ohemc.createNewOpeningHours()\" translate-once=\"calendar.openingHours.add_hours\"></button>\n" +
    "    </div>\n" +
    "    <div class=\"alert alert-danger\" role=\"alert\" ng-if=\"!!ohemc.errors.length\">\n" +
    "        <ul>\n" +
    "            <li ng-repeat=\"error in ohemc.errors\"\n" +
    "                ng-bind=\"'OPENING_HOURS_ERROR.' + error | translate\"></li>\n" +
    "        </ul>\n" +
    "    </div>\n" +
    "    <div class=\"opening-hours\" ng-show=\"ohemc.openingHoursCollection.openingHours.length > 0\">\n" +
    "        <div class=\"opening-hours-labels\">\n" +
    "            <div class=\"weekdays\" translate-once=\"calendar.openingHours.days\"></div>\n" +
    "            <div class=\"opening-time\" translate-once=\"calendar.openingHours.from\"></div>\n" +
    "            <div class=\"closing-time\" translate-once=\"calendar.openingHours.till\"></div>\n" +
    "        </div>\n" +
    "        <div class=\"opening-hours-collection\">\n" +
    "            <div class=\"opening-hours-set\" ng-form=\"openingHoursInfo\" ng-repeat=\"openingHours in ohemc.openingHoursCollection.openingHours\">\n" +
    "                <div class=\"weekdays\">\n" +
    "                    <label class=\"checkbox-inline\" ng-repeat=\"(day, weekday) in openingHours.dayOfWeek\">\n" +
    "                        <input type=\"checkbox\" ng-model=\"openingHours.dayOfWeek[day].open\">\n" +
    "                            <span ng-bind=\"::weekday.label\"></span>\n" +
    "                    </label>\n" +
    "                </div>\n" +
    "                <div class=\"opening-time\">\n" +
    "                    <div class=\"form-group\"\n" +
    "                        ng-class=\"{'has-error': openingHoursInfo.opens.$invalid && openingHoursInfo.opens.$touched}\">\n" +
    "                        <udb-form-calendar-timepicker\n" +
    "                            name=\"opens\"\n" +
    "                            class=\"uur\"\n" +
    "                            ng-required=\"true\"\n" +
    "                            ng-model=\"openingHours.opensAsDate\"></udb-form-calendar-timepicker>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "                <div class=\"closing-time\">\n" +
    "                    <div class=\"form-group\"\n" +
    "                        ng-class=\"{'has-error': openingHoursInfo.closes.$invalid && openingHoursInfo.closes.$touched}\">\n" +
    "                        <udb-form-calendar-timepicker\n" +
    "                            name=\"closes\"\n" +
    "                            class=\"uur\"\n" +
    "                            ng-required=\"true\"\n" +
    "                            ng-model=\"openingHours.closesAsDate\"></udb-form-calendar-timepicker>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "                <div class=\"remove\">\n" +
    "                    <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"ohemc.removeOpeningHours(openingHours)\"><span aria-hidden=\"true\">&times;</span></button>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"add\">\n" +
    "            <a class=\"btn btn-link btn-plus\" ng-click=\"ohemc.createNewOpeningHours()\" translate-once=\"calendar.openingHours.more_hours\">\n" +
    "            </a>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"$dismiss()\" translate-once=\"calendar.openingHours.cancel\"></button>\n" +
    "    <button type=\"button\" class=\"btn btn-primary openingsuren-toevoegen\"\n" +
    "            ng-click=\"ohemc.saveOpeningHours()\" translate-once=\"calendar.openingHours.save\">\n" +
    "    </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-openinghours.html',
    "<div class=\"opening-hours-week-schedule\">\n" +
    "  <div class=\"empty\" ng-hide=\"!!cm.openingHoursCollection.openingHours.length\">\n" +
    "    <div class=\"well text-center add-opening-hours\">\n" +
    "        <p>\n" +
    "          <span class=\"permanent-title\" translate-once=\"calendar.openingHours.permanent_title\"></span>\n" +
    "          <span class=\"permanent-subtitle\" translate-once=\"calendar.openingHours.permanent_subtitle\"></span>\n" +
    "        </p>\n" +
    "        <button type=\"button\" class=\"btn btn-primary\" ng-click=\"cm.edit()\" translate-once=\"calendar.openingHours.add_hours\"></button>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <div class=\"time-table\">\n" +
    "    <table class=\"table table-condensed\" ng-if=\"!!cm.openingHoursCollection.openingHours.length\">\n" +
    "      <thead>\n" +
    "      <th translate-once=\"calendar.openingHours.opening_hours\"></th>\n" +
    "      <th>\n" +
    "        <a href=\"#\" ng-click=\"cm.edit()\" class=\"btn btn-default\" translate-once=\"calendar.openingHours.change\"></a>\n" +
    "      </th>\n" +
    "      </thead>\n" +
    "      <tbody>\n" +
    "        <tr ng-repeat=\"openingHour in cm.openingHoursCollection.openingHours\">\n" +
    "          <td ng-bind=\"openingHour.label\"></td>\n" +
    "          <td>\n" +
    "            <span ng-bind=\"openingHour.opens\"></span> – <span ng-bind=\"openingHour.closes\"></span>\n" +
    "          </td>\n" +
    "          </tr>\n" +
    "      </tbody>\n" +
    "    </table>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organizer-address.html',
    "<form name=\"oac.organizerAddressForm\" class=\"organizer-address-form\">\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-xs-6\">\n" +
    "        <label>Adres</label>\n" +
    "      </div>\n" +
    "      <div class=\"col-xs-6\">\n" +
    "        <select ng-change=\"oac.changeCountrySelection()\"\n" +
    "          ng-options=\"option.code | translate for option in oac.availableCountries track by option.code\"\n" +
    "          ng-model=\"oac.selectedCountry\"\n" +
    "          class=\"form-control\">\n" +
    "        </select>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"form-group\"\n" +
    "         ng-class=\"{'has-error' : oac.streetHasErrors && oac.organizerAddressForm.$submitted}\">\n" +
    "        <label translate-once=\"organizer.address.label_street\"></label>\n" +
    "        <input type=\"text\"\n" +
    "               class=\"form-control\"\n" +
    "               name=\"street\"\n" +
    "               placeholder=\"{{ 'organizer.address.label_street' | translate }}\"\n" +
    "               ng-model=\"oac.address.streetAddress\"\n" +
    "               ng-change=\"oac.validateAddress()\"\n" +
    "               ng-model-options=\"{ updateOn: 'blur' }\">\n" +
    "        <span class=\"has-error\"\n" +
    "              ng-show=\"oac.streetHasErrors && oac.organizerAddressForm.$submitted\">\n" +
    "            <span class=\"help-block\" translate-once=\"organizer.address.help_street\"></span>\n" +
    "        </span>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\" >\n" +
    "        <div class=\"col-xs-6\">\n" +
    "            <div class=\"form-group\" ng-hide=\"oac.selectedCity !== ''\"\n" +
    "                 ng-class=\"{'has-error' : oac.cityHasErrors && oac.organizerAddressForm.$submitted}\">\n" +
    "                <label for=\"organizer-gemeente-autocomplete\" id=\"gemeente-label\" translate-once=\"organizer.address.label_city\" ng-show=\"oac.selectedCountry.code === 'BE'\"></label>\n" +
    "                <label for=\"organizer-gemeente-autocomplete\" id=\"gemeente-label\" translate-once=\"organizer.address.label_residence\" ng-show=\"oac.selectedCountry.code === 'NL'\"></label>\n" +
    "                <div id=\"gemeente-kiezer\">\n" +
    "                    <input id=\"organizer-gemeente-autocomplete\"\n" +
    "                           type=\"text\"\n" +
    "                           name=\"city\"\n" +
    "                           class=\"form-control uib-typeahead\"\n" +
    "                           ng-model=\"oac.cityAutocompleteTextField\"\n" +
    "                           uib-typeahead=\"city as city.label for city in oac.cities | filter:oac.filterCities($viewValue) | orderBy:oac.orderByLevenshteinDistance($viewValue)\"\n" +
    "                           typeahead-on-select=\"oac.selectCity($item, $label)\"\n" +
    "                           typeahead-min-length=\"2\"\n" +
    "                           typeahead-template-url=\"templates/city-suggestion.html\"\n" +
    "                           autocomplete=\"off\">\n" +
    "                    <span class=\"help-block\" ng-show=\"oac.cityAutoCompleteError\" translate-once=\"organizer.address.help_city\">\n" +
    "                    </span>\n" +
    "                    <span class=\"has-error\"\n" +
    "                          ng-show=\"oac.cityHasErrors && oac.organizerAddressForm.$submitted\">\n" +
    "                        <span class=\"help-block\" translate-once=\"organizer.address.error_city\">\n" +
    "                        </span>\n" +
    "                    </span>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "            <div class=\"form-group\" id=\"gemeente-gekozen\" ng-if=\"oac.selectedCity\">\n" +
    "              <label id=\"gemeente-label\" translate-once=\"organizer.address.label_city\" ng-show=\"oac.selectedCountry.code === 'BE'\"></label>\n" +
    "              <label id=\"gemeente-label\" translate-once=\"organizer.address.label_residence\" ng-show=\"oac.selectedCountry.code === 'NL'\"></label>\n" +
    "              <p class=\"form-text\">\n" +
    "                <span id=\"gemeente-gekozen-button\" ng-bind=\"::oac.selectedCity\"></span>\n" +
    "                <a href=\"#\" class=\"btn btn-default btn-link\" ng-click=\"oac.changeCitySelection()\" translate-once=\"organizer.address.change\"></a>\n" +
    "              </p>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"col-xs-6\" ng-show=\"oac.selectedCountry.code == 'NL'\">\n" +
    "            <div class=\"form-group\"\n" +
    "                 ng-class=\"{'has-error' : oac.streetHasErrors && oac.organizerAddressForm.$submitted}\">\n" +
    "                <label translate-once=\"organizer.address.zip\"></label>\n" +
    "                <input type=\"text\"\n" +
    "                       class=\"form-control\"\n" +
    "                       name=\"street\"\n" +
    "                       placeholder=\"{{ 'organizer.address.zip' | translate }}\"\n" +
    "                       ng-model=\"oac.address.postalCode\"\n" +
    "                       ng-change=\"oac.validateAddress()\"\n" +
    "                       ng-model-options=\"{ updateOn: 'blur' }\">\n" +
    "                <span class=\"has-error\"\n" +
    "                      ng-show=\"oac.streetHasErrors && oac.organizerAddressForm.$submitted\">\n" +
    "                    <span class=\"help-block\" translate-once=\"organizer.address.help_street\"></span>\n" +
    "                </span>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/organizer-contact.html',
    "<div class=\"row\">\n" +
    "    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n" +
    "        <p><strong translate-once=\"organizer.contact.title\"></strong></p>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "\n" +
    "<div class=\"row\" ng-show=\"occ.contact.length\">\n" +
    "  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n" +
    "    <ul>\n" +
    "      <li ng-repeat=\"contact in occ.contact track by $index\">\n" +
    "        {{contact.value}}\n" +
    "        <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"occ.deleteOrganizerContactInfo($index)\">\n" +
    "            <span aria-hidden=\"true\">&times;</span>\n" +
    "        </button>\n" +
    "      </li>\n" +
    "    </ul>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-show=\"occ.addingContactEntry\">\n" +
    "  <div class=\"panel panel-default\">\n" +
    "    <div class=\"panel-body\">\n" +
    "      <form name=\"occ.organizerContactWrapper\">\n" +
    "        <div ng-switch=\"occ.newContact.type\">\n" +
    "          <label ng-switch-when=\"url\"><span translate-once=\"organizer.contact.enter_url\"></span></label>\n" +
    "          <label ng-switch-when=\"email\"><span translate-once=\"organizer.contact.enter_email\"></span></label>\n" +
    "          <label ng-switch-when=\"phone\"><span translate-once=\"organizer.contact.enter_phone\"></span></label>\n" +
    "        </div>\n" +
    "        <div ng-switch=\"occ.newContact.type\">\n" +
    "          <div ng-switch-when=\"url\" class=\"form-group\" ng-class=\"{ 'has-error': urlContactForm.url.$touched && urlContactForm.url.$invalid }\">\n" +
    "              <ng-form name=\"urlContactForm\">\n" +
    "                  <input type=\"text\" name=\"url\" udb-http-prefix class=\"form-control\" ng-model=\"occ.newContact.value\" ng-pattern=\"/^(http\\:\\/\\/|https\\:\\/\\/)?([a-z0-9][a-z0-9\\-]*\\.)+[a-z0-9][a-z0-9\\-]*$/\" ng-model-options=\"{allowInvalid:true}\" required>\n" +
    "                  <div class=\"help-block\" ng-messages=\"urlContactForm.url.$error\" ng-show=\"!occ.isPristine && urlContactForm.url.$error\">\n" +
    "                      <p ng-message=\"required\">\n" +
    "                          <span translate-once=\"organizer.contact.required\"></span>\n" +
    "                      </p>\n" +
    "                      <p ng-message=\"pattern\">\n" +
    "                          <span translate-once=\"organizer.contact.valid_url\"></span>\n" +
    "                      </p>\n" +
    "                  </div>\n" +
    "              </ng-form>\n" +
    "          </div>\n" +
    "          <div ng-switch-when=\"email\" class=\"form-group\" ng-class=\"{ 'has-error': mailContactForm.email.$touched && mailContactForm.email.$invalid }\">\n" +
    "              <ng-form name=\"mailContactForm\">\n" +
    "                  <input type=\"text\" name=\"email\" ng-pattern=\"/^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/\" class=\"form-control\" ng-model=\"occ.newContact.value\" ng-model-options=\"{allowInvalid:true}\" required>\n" +
    "                  <div class=\"help-block\" ng-messages=\"mailContactForm.email.$error\" ng-show=\"!occ.isPristine && mailContactForm.email.$error\">\n" +
    "                      <p ng-message=\"required\">\n" +
    "                          <span translate-once=\"organizer.contact.required\"></span>\n" +
    "                      </p>\n" +
    "                      <p ng-message=\"pattern\">\n" +
    "                          <span translate-once=\"organizer.contact.valid_email\"></span>\n" +
    "                      </p>\n" +
    "                  </div>\n" +
    "              </ng-form>\n" +
    "          </div>\n" +
    "          <div ng-switch-default class=\"form-group\" ng-class=\"{ 'has-error': phoneContactForm.phone.$touched && phoneContactForm.phone.$invalid }\">\n" +
    "              <ng-form name=\"phoneContactForm\">\n" +
    "                  <input type=\"tel\" name=\"phone\" class=\"form-control\" ng-model=\"occ.newContact.value\" ng-pattern=\"/^[^a-zA-Z]*$/\" ng-model-options=\"{allowInvalid:true}\" required>\n" +
    "                  <div class=\"help-block\" ng-messages=\"phoneContactForm.phone.$error\" ng-show=\"!occ.isPristine && phoneContactForm.phone.$error\">\n" +
    "                      <p ng-message=\"required\">\n" +
    "                          <span translate-once=\"organizer.contact.required\"></span>\n" +
    "                      </p>\n" +
    "                      <p ng-message=\"pattern\">\n" +
    "                          <span translate-once=\"organizer.contact.valid_phone\"></span>\n" +
    "                      </p>\n" +
    "                  </div>\n" +
    "              </ng-form>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <button type=\"button\" ng-click=\"occ.cancelOrganizerContactEntry()\" class=\"btn btn-link\" translate-once=\"organizer.contact.cancel\">\n" +
    "        </button>\n" +
    "\n" +
    "        <button type=\"button\" ng-click=\"occ.addOrganizerContactInfo()\" class=\"btn btn-default\" ng-disabled=\"occ.isPristine\" translate-once=\"organizer.contact.add\">\n" +
    "        </button>\n" +
    "\n" +
    "      </form>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row\" ng-hide=\"occ.addingContactEntry\">\n" +
    "    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n" +
    "        <ul class=\"list-unstyled\">\n" +
    "            <li><a ng-click=\"occ.addOrganizerContactEntry('phone')\" href=\"#\" translate-once=\"organizer.contact.add_phone\"></a></li>\n" +
    "            <li><a ng-click=\"occ.addOrganizerContactEntry('email')\" href=\"#\" translate-once=\"organizer.contact.add_email\"></a></li>\n" +
    "            <li><a ng-click=\"occ.addOrganizerContactEntry('url')\" href=\"#\" translate-once=\"organizer.contact.add_url\"></a></li>\n" +
    "        </ul>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-organizer-modal.html',
    "\n" +
    "<div class=\"modal-header\">\n" +
    "  <button type=\"button\" class=\"close\" ng-click=\"cancel()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n" +
    "  <h4 class=\"modal-title\" ng-hide=\"organizersFound\" translate-once=\"organizer.modal.title\"></h4>\n" +
    "  <h4 class=\"modal-title\" ng-show=\"organizersFound\" translate-once=\"organizer.modal.avoid_doubles\"></h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "\n" +
    "  <section ng-hide=\"organizersFound\">\n" +
    "    <form name=\"organizerForm\" class=\"organizer-form\">\n" +
    "      <p class=\"alert alert-info\" translate-once=\"organizer.modal.unique_notice\"></p>\n" +
    "      <div class=\"form-group has-feedback\"\n" +
    "           ng-class=\"{'has-warning' : organizersWebsiteFound || organizerForm.website.$error.required }\">\n" +
    "        <label class=\"control-label\" for=\"organizer-website\" translate-once=\"organizer.modal.website\"></label>\n" +
    "        <input type=\"url\"\n" +
    "               id=\"organizer-website\"\n" +
    "               name=\"website\"\n" +
    "               class=\"form-control\"\n" +
    "               ng-model-options=\"{ debounce: 300 }\"\n" +
    "               ng-model=\"newOrganizer.website\"\n" +
    "               aria-describedby=\"organizer-website-status\"\n" +
    "               ng-change=\"validateWebsite()\"\n" +
    "               autocomplete=\"off\"\n" +
    "               required>\n" +
    "        <span class=\"fa fa-circle-o-notch fa-spin form-control-feedback\" ng-show=\"showWebsiteValidation\" aria-hidden=\"true\"></span>\n" +
    "        <span id=\"organizer-website-status\" class=\"sr-only\">(warning)</span>\n" +
    "\n" +
    "          <p class=\"alert alert-warning\" ng-show=\"organizersWebsiteFound\">\n" +
    "            <span translate=\"organizer.modal.alert_warning\"\n" +
    "                  translate-values=\"{ organizerName: '{{firstOrganizerFound.name}}' }\"></span>\n" +
    "            <a ng-click=\"selectOrganizer(firstOrganizerFound)\" class=\"alert-link\" href=\"#\">\n" +
    "              <span translate=\"organizer.modal.alert_button\"\n" +
    "                    translate-values=\"{ organizerName: '{{firstOrganizerFound.name}}' }\"></span>\n" +
    "            </a>.\n" +
    "          </p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"form-group\" ng-class=\"{'has-error' : showValidation && organizerForm.name.$error.required }\">\n" +
    "        <label translate-once=\"organizer.modal.label_name\"></label>\n" +
    "        <input type=\"text\"\n" +
    "               name=\"name\"\n" +
    "               class=\"form-control\"\n" +
    "               ng-model=\"newOrganizer.name\"\n" +
    "               ng-change=\"updateName()\"\n" +
    "               required>\n" +
    "        <p class=\"help-block\" translate-once=\"organizer.modal.name_help\"></p>\n" +
    "        <span class=\"help-block\"\n" +
    "              ng-show=\"showValidation && organizerForm.name.$error.required\"\n" +
    "              translate-once=\"organizer.modal.name_required\">\n" +
    "        </span>\n" +
    "      </div>\n" +
    "    </form>\n" +
    "\n" +
    "    <udb-organizer-address address=\"newOrganizer.address\"\n" +
    "                           on-update=\"validateAddress(error)\"></udb-organizer-address>\n" +
    "    <udb-organizer-contact contact=\"newOrganizer.contact\"\n" +
    "                           on-update=\"validateContact(error)\"></udb-organizer-contact>\n" +
    "  </section>\n" +
    "\n" +
    "  <section ng-show=\"organizersFound\">\n" +
    "\n" +
    "    <div class=\"alert alert-info\">\n" +
    "      <p translate=\"organizer.modal.add_confirm\" translate-values=\"{ newOrganizerName: '{{newOrganizer.name}}' }\"></p>\n" +
    "    </div>\n" +
    "    <p translate-once=\"organizer.modal.doubles\"></p>\n" +
    "    <table class=\"table\">\n" +
    "      <tr ng-repeat=\"organizer in organizers\" udb-organizer=\"organizer\">\n" +
    "        <td colspan=\"2\" ng-show=\"fetching\">\n" +
    "          <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "        </td>\n" +
    "        <td ng-hide=\"fetching\">\n" +
    "          <strong ng-bind=\"::organizer.name\"></strong>\n" +
    "          , <span ng-bind=\"::organizer.addresses[0].streetAddress\"></span>\n" +
    "          , <span ng-bind=\"::organizer.addresses[0].postalCode\"></span>\n" +
    "           <span ng-bind=\"::organizer.addresses[0].addressLocality\"></span>\n" +
    "        </td>\n" +
    "        <td ng-hide=\"fetching\"><a class=\"btn btn-default\" ng-click=\"selectOrganizer(organizer)\" translate-once=\"organizer.modal.select\"></a></td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <span translate-once=\"organizer.modal.your_input\"></span>\n" +
    "          <br/>\n" +
    "          <strong ng-bind=\"newOrganizer.name\"></strong>\n" +
    "          , <span ng-bind=\"newOrganizer.street\"></span>\n" +
    "           <span ng-bind=\"newOrganizer.number\"></span>\n" +
    "           <span ng-bind=\"newOrganizer.postalCode\"></span>\n" +
    "           <span ng-bind=\"newOrganizer.city\"></span>\n" +
    "        </td>\n" +
    "        <td><a class=\"btn btn-default\" ng-click=\"saveOrganizer()\" translate-once=\"organizer.modal.still_enter\"></a></td>\n" +
    "      </tr>\n" +
    "    </table>\n" +
    "\n" +
    "  </section>\n" +
    "\n" +
    "  <div class=\"alert alert-danger\" ng-show=\"saveError\">\n" +
    "    <span translate-once=\"organizer.modal.save_error\"></span>\n" +
    "  </div>\n" +
    "  <div class=\"alert alert-danger\" ng-show=\"error && (addressError || contactError)\">\n" +
    "    <p ng-show=\"addressError\"><span translate-once=\"organizer.modal.address_error\"></span><br /></p>\n" +
    "    <p ng-show=\"contactError\"><span translate-once=\"organizer.modal.contact_error\"></span><br /></p>\n" +
    "  </div>\n" +
    "\n" +
    "</div>\n" +
    "<div class=\"modal-footer\" ng-hide=\"organizersFound\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\" translate-once=\"organizer.modal.close\"></button>\n" +
    "  <button type=\"button\"\n" +
    "          class=\"btn btn-primary organisator-toevoegen-bewaren\"\n" +
    "          ng-disabled=\"disableSubmit || contactError\"\n" +
    "          ng-click=\"validateNewOrganizer()\">\n" +
    "    <span translate-once=\"organizer.modal.save\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organizer-typeahead-template.html',
    "<a>{{match.model.name}}</a>"
  );


  $templateCache.put('templates/event-form-place-modal.html',
    "<div class=\"modal-header\">\n" +
    "    <h4 class=\"modal-title\" translate-once=\"location.title\"></h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "    <form name=\"placeForm\" class=\"css-form\">\n" +
    "        <div class=\"form-group\" ng-class=\"{'has-error' : showValidation && placeForm.name.$error.required }\">\n" +
    "            <label for=\"name\" translate-once=\"location.name\"></label>\n" +
    "            <input id=\"name\" class=\"form-control\" type=\"text\" ng-model=\"newPlace.name\" name=\"name\" required>\n" +
    "            <span class=\"help-block\"\n" +
    "                  translate-once=\"location.name_validation\"\n" +
    "                  ng-show=\"error\">\n" +
    "            </span>\n" +
    "        </div>\n" +
    "        <div class=\"form-group\" ng-class=\"{'has-error' : showValidation && (placeForm.address_streetAddress.$error.required || invalidStreet)}\">\n" +
    "            <label for=\"locatie-straat\" translate-once=\"location.street\"></label>\n" +
    "            <input class=\"form-control\" id=\"locatie-straat\" name=\"address_streetAddress\" type=\"text\" ng-model=\"newPlace.address.streetAddress\" required>\n" +
    "            <span class=\"help-block\"\n" +
    "                  translate-once=\"location.street_validation\"\n" +
    "                  ng-show=\"error && !invalidStreet\">\n" +
    "                    </span>\n" +
    "            <span class=\"help-block\"\n" +
    "                  translate-once=\"location.invalid_street\"\n" +
    "                  ng-show=\"invalidStreet\">\n" +
    "                    </span>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row\">\n" +
    "          <div class=\"col-xs-4\">\n" +
    "            <div class=\"form-group\">\n" +
    "              <label translate-once=\"location.zip\"></label>\n" +
    "              <input class=\"form-control\" id=\"locatie-straat\" name=\"address_postalCode\" type=\"text\" ng-model=\"newPlace.address.postalCode\" required ng-disabled=\"newPlace.address.addressCountry === 'BE'\">\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-xs-8\">\n" +
    "            <div class=\"form-group\">\n" +
    "                <label translate-once=\"location.city\"></label>\n" +
    "                <p class=\"form-control-static\" id=\"waar-locatie-toevoegen-gemeente\">\n" +
    "                    <span ng-bind=\"newPlace.address.addressLocality\"></span>\n" +
    "                    <span class=\"text-muted\">(<span ng-bind=\"newPlace.address.addressCountry\"></span>)</span>\n" +
    "                </p>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"form-group\" ng-class=\"{'has-error' : showValidation && placeForm.eventType.$error.required }\">\n" +
    "            <label for=\"locatie-toevoegen-types\" translate-once=\"location.category\"></label>\n" +
    "            <p class=\"help-block\" translate-once=\"location.category_help\"></p>\n" +
    "            <select class=\"form-control\" size=\"4\" name=\"eventType\" id=\"locatie-toevoegen-types\" ng-model=\"newPlace.eventType\" required  ng-options=\"category as ::translateEventTypes(category.label) for category in categories | orderBy:'label' track by category.id\">\n" +
    "            </select>\n" +
    "            <span class=\"help-block\"\n" +
    "                  translate-once=\"location.category_validation\"\n" +
    "                  ng-show=\"showValidation && placeForm.eventType.$error.required\">\n" +
    "            </span>\n" +
    "        </div>\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-xs-12\">\n" +
    "                <div class=\"alert alert-danger\"\n" +
    "                     translate-once=\"location.error\"\n" +
    "                     ng-show=\"error\">\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </form>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "    <button type=\"button\"\n" +
    "            class=\"btn btn-default\"\n" +
    "            data-dismiss=\"modal\"\n" +
    "            translate-once=\"location.cancel\"\n" +
    "            ng-click=\"resetAddLocation()\"></button>\n" +
    "    <button type=\"button\"\n" +
    "            class=\"btn btn-primary\"\n" +
    "            ng-click=\"addLocation()\">\n" +
    "        <span translate-once=\"location.add\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place-suggestion-popup.html',
    "<ul class=\"dropdown-menu\" ng-show=\"isOpen() && !moveInProgress\" ng-style=\"{top: position().top+'px', left: position().left+'px'}\" role=\"listbox\" aria-hidden=\"{{!isOpen()}}\">\n" +
    "    <li class=\"uib-typeahead-match\" ng-repeat=\"match in matches track by $index\" ng-class=\"{active: isActive($index) }\" ng-mouseenter=\"selectActive($index)\" ng-click=\"selectMatch($index, $event)\" role=\"option\" id=\"{{::match.id}}\">\n" +
    "        <div uib-typeahead-match index=\"$index\" match=\"match\" query=\"query\" template-url=\"templateUrl\"></div>\n" +
    "    </li>\n" +
    "    <li>\n" +
    "        <div class=\"panel panel-default text-center\">\n" +
    "            <div class=\"panel-body\">\n" +
    "                <p>Locatie niet gevonden?</p>\n" +
    "                <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\"\n" +
    "                        data-target=\"#waar-locatie-toevoegen\" ng-click=\"$parent.openPlaceModal()\">\n" +
    "                    Een locatie toevoegen\n" +
    "                </button>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </li>\n" +
    "</ul>"
  );


  $templateCache.put('templates/place-suggestion.html',
    "<div class=\"place-suggestion\">\n" +
    "  <span class=\"place-suggestion-name\" ng-bind-html=\"match.model.name | uibTypeaheadHighlight:query\"></span>\n" +
    "  <span class=\"place-suggestion-address\" ng-bind-html=\"match.model.address.streetAddress | uibTypeaheadHighlight:query\">\n" +
    "  </span>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/price-form-modal.html',
    "\n" +
    "<div class=\"modal-header\">\n" +
    "    <button type=\"button\" class=\"close\" ng-click=\"pfmc.cancelEditPrice()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n" +
    "    <h4 class=\"modal-title\" translate-once=\"prices.title\"></h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "\n" +
    "    <form name=\"pfmc.priceForm\" novalidate>\n" +
    "        <table class=\"table\">\n" +
    "            <div class=\"form-group\">\n" +
    "                <tr ng-repeat=\"(key, priceInfo) in pfmc.price\"\n" +
    "                    ng-model=\"priceInfo\"\n" +
    "                    ng-form=\"pfmc.priceForm.priceFieldForm\">\n" +
    "                    <td ng-switch on=\"priceInfo.category\"\n" +
    "                        class=\"col-xs-4\">\n" +
    "                        <p ng-switch-when=\"base\"\n" +
    "                           class=\"form-text\"\n" +
    "                           translate-once=\"prices.base\">\n" +
    "                        </p>\n" +
    "                        <span ng-switch-default>\n" +
    "                            <input type=\"text\"\n" +
    "                                   class=\"form-control\"\n" +
    "                                   name=\"name\"\n" +
    "                                   placeholder=\"{{::'prices.target_group' | translate }}\"\n" +
    "                                   ng-model=\"priceInfo.name[pfmc.mainLanguage]\"\n" +
    "                                   ng-class=\"{ 'has-error': pfmc.priceForm.priceFieldForm.name.$invalid }\"\n" +
    "                                   required />\n" +
    "                        </span>\n" +
    "                    </td>\n" +
    "                    <td class=\"col-xs-4\">\n" +
    "                        <span ng-if=\"priceInfo.price === 0\"\n" +
    "                              translate-once=\"prices.free\">\n" +
    "                        </span>\n" +
    "                        <span ng-if=\"priceInfo.price !== 0\">\n" +
    "                            <div class=\"form-inline\">\n" +
    "                                <div class=\"form-group\">\n" +
    "                                    <input type=\"text\"\n" +
    "                                           class=\"form-control\"\n" +
    "                                           name=\"price\"\n" +
    "                                           ng-pattern=\"/^([1-9][0-9]*|[0-9]|[0])(,[0-9]{1,2})?$/\"\n" +
    "                                           ng-model=\"priceInfo.price\"\n" +
    "                                           ng-model-options=\"{ updateOn: 'default' }\"\n" +
    "                                           ng-class=\"{ 'has-error': pfmc.priceForm.priceFieldForm.price.$invalid }\"\n" +
    "                                           required />\n" +
    "                                </div>\n" +
    "                                <div class=\"form-group\"> <span class=\"text-muted\" translate-once=\"prices.currency\"></span></div>\n" +
    "                            </div>\n" +
    "                        </span>\n" +
    "                    </td>\n" +
    "                    <td ng-switch on=\"priceInfo.price\"\n" +
    "                        class=\"col-xs-3\">\n" +
    "                        <a class=\"btn btn-link\"\n" +
    "                           ng-click=\"pfmc.unsetPriceItemFree(key)\"\n" +
    "                           ng-switch-when=\"0\"\n" +
    "                           translate-once=\"prices.add_price\">\n" +
    "                        </a>\n" +
    "                        <a class=\"btn btn-link\"\n" +
    "                           translate-once=\"prices.free\"\n" +
    "                           ng-click=\"pfmc.setPriceItemFree(key)\"\n" +
    "                           ng-switch-default>\n" +
    "                        </a>\n" +
    "                    </td>\n" +
    "                    <td class=\"col-xs-1\">\n" +
    "                        <a aria-hidden=\"true\"\n" +
    "                           ng-click=\"pfmc.deletePriceItem(key)\"\n" +
    "                           ng-if=\"pfmc.showPriceDelete(key)\" class=\"close\">&times;</a>\n" +
    "                    </td>\n" +
    "                </tr>\n" +
    "                <tr>\n" +
    "                    <td colspan=\"4\">\n" +
    "                        <a class=\"btn btn-default\"\n" +
    "                           translate-once=\"prices.add_tarriff\"\n" +
    "                           ng-click=\"pfmc.addPriceItem()\">\n" +
    "                        </a>\n" +
    "                    </td>\n" +
    "                </tr>\n" +
    "            </div>\n" +
    "        </table>\n" +
    "    </form>\n" +
    "    <div ng-show=\"pfmc.priceError\"\n" +
    "         class=\"alert alert-danger\"\n" +
    "         translate-once=\"prices.error\">\n" +
    "    </div>\n" +
    "    <div ng-show=\"(pfmc.priceForm.priceFieldForm.price.$invalid || pfmc.priceForm.$invalid) && pfmc.priceForm.priceFieldForm.price.$dirty && !saving\" class=\"alert alert-info\">\n" +
    "        <p translate-once=\"prices.invalid\"></p>\n" +
    "        <ul class=\"small\">\n" +
    "          <li translate-once=\"prices.invalid_tip1\"></li>\n" +
    "          <li translate-once=\"prices.invalid_tip2\"></li>\n" +
    "          <li translate-once=\"prices.invalid_tip3\"></li>\n" +
    "        </ul>\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\"\n" +
    "          class=\"btn btn-default\"\n" +
    "          translate-once=\"prices.close\"\n" +
    "          ng-click=\"pfmc.cancelEditPrice()\">\n" +
    "  </button>\n" +
    "  <button type=\"button\"\n" +
    "          class=\"btn btn-primary organisator-toevoegen-bewaren\"\n" +
    "          ng-click=\"pfmc.validatePrice()\"\n" +
    "          ng-disabled=\"pfmc.priceForm.$invalid || pfmc.priceForm.$pristine\">\n" +
    "      <span translate-once=\"prices.save\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/priceInfo.html',
    "<div class=\"row extra-prijs\">\n" +
    "  <div class=\"extra-task\" ng-class=\"$ctrl.priceCssClass\">\n" +
    "    <div class=\"col-sm-3\">\n" +
    "      <em class=\"extra-task-label\" translate-once=\"eventForm.step5.priceInfo.price_label\"></em>\n" +
    "        <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"$ctrl.savingPrice\"></i>\n" +
    "    </div>\n" +
    "    <div class=\"col-sm-8\">\n" +
    "\n" +
    "      <div ng-show=\"$ctrl.price.length == 0\">\n" +
    "        <section>\n" +
    "          <a class=\"btn btn-default to-filling\"\n" +
    "             ng-click=\"$ctrl.priceCssClass = 'state-filling'; $ctrl.changePrice()\"\n" +
    "             translate-once=\"eventForm.step5.priceInfo.add_prices\">\n" +
    "          </a>\n" +
    "          <a class=\"btn btn-link\"\n" +
    "             ng-click=\"$ctrl.setPriceFree()\"\n" +
    "             translate-once=\"eventForm.step5.priceInfo.free\"></a>\n" +
    "        </section>\n" +
    "      </div>\n" +
    "      <div ng-show=\"$ctrl.price.length > 0\">\n" +
    "        <table class=\"table\">\n" +
    "          <thead>\n" +
    "            <td translate-once=\"eventForm.step5.priceInfo.prices\"></td>\n" +
    "            <td>\n" +
    "              <a class=\"btn btn-default pull-right\"\n" +
    "                 ng-click=\"$ctrl.changePrice()\"\n" +
    "                 translate-once=\"eventForm.step5.priceInfo.change\">\n" +
    "            </a>\n" +
    "            </td>\n" +
    "          </thead>\n" +
    "          <tr ng-repeat=\"(key, priceInfo) in $ctrl.price\"\n" +
    "              ng-model=\"priceInfo\">\n" +
    "            <td>{{priceInfo.name[$ctrl.mainLanguage]}}</td>\n" +
    "            <td>\n" +
    "              <span ng-if=\"priceInfo.price == 0\" translate-once=\"eventForm.step5.priceInfo.free\">\n" +
    "                Gratis\n" +
    "              </span>\n" +
    "              <span ng-if=\"priceInfo.price != 0\">\n" +
    "                {{priceInfo.price | currency:'€' }} <span translate-once=\"eventForm.step5.priceInfo.currency\"></span>\n" +
    "              </span>\n" +
    "            </td>\n" +
    "          </tr>\n" +
    "        </table>\n" +
    "        <div ng-if=\"$ctrl.hasTicketSales\" class=\"alert alert-danger\" translate=\"uitpas.uitpasInfo.cantChangePrice\"></div>\n" +
    "        <div ng-if=\"$ctrl.hasUitpasError\" class=\"alert alert-danger\" translate=\"uitpas.uitpasInfo.unavailable\"></div>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-publish-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <h4 class=\"modal-title\" translate-once=\"eventForm.embargo.title\"></h4>\n" +
    "</div>\n" +
    "<div id=\"event-form-publish-modal\" class=\"modal-body\">\n" +
    "  <p translate-once=\"eventForm.embargo.help\"></p>\n" +
    "    <div ng-if=\"!efpmc.eventFormData.availableFrom\" class=\"form-inline\">\n" +
    "      <div class=\"input-group\">\n" +
    "      <input\n" +
    "             class=\"form-control\"\n" +
    "             type=\"text\"\n" +
    "             uib-datepicker-popup=\"dd/MM/yyyy\"\n" +
    "             datepicker-options=\"efpmc.drp.options\"\n" +
    "             ng-model=\"efpmc.publicationDate\"\n" +
    "             show-button-bar=\"false\"\n" +
    "             on-open-focus=\"true\"\n" +
    "             is-open=\"efpmc.opened\"\n" +
    "             ng-required=\"true\"\n" +
    "             ng-click=\"efpmc.toggleDatePicker()\" />\n" +
    "      <span class=\"input-group-btn\">\n" +
    "          <button type=\"button\" class=\"btn btn-default\" ng-click=\"efpmc.toggleDatePicker()\">\n" +
    "              <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n" +
    "          </button>\n" +
    "      </span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <br>\n" +
    "    <div class=\"alert alert-warning\" ng-if=\"efpmc.error==='past'\" translate-once=\"eventForm.embargo.error_past\"></div>\n" +
    "    <div class=\"alert alert-warning\" ng-if=\"efpmc.error==='empty'\" translate-once=\"eventForm.embargo.error_empty\"></div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"efpmc.dismiss();\" data-dismiss=\"modal\" translate-once=\"eventForm.embargo.cancel\">\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"efpmc.savePublicationDate()\" translate-once=\"eventForm.embargo.ready\">\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/reservation-period.html',
    "<div class=\"col-sm-12\" ng-hide=\"haveBookingPeriod\">\n" +
    "    <a class=\"btn btn-primary reservatie-periode-toevoegen\"\n" +
    "       href=\"#\"\n" +
    "       ng-click=\"changeHaveBookingPeriod()\"\n" +
    "       translate-once=\"eventForm.step5.reservationPeriod.add_reservation_period\">\n" +
    "    </a>\n" +
    "</div>\n" +
    "<div class=\"col-sm-12\" ng-show=\"haveBookingPeriod\">\n" +
    "    <div class=\"booking-period\">\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-lg-11\">\n" +
    "                <p><strong translate-once=\"eventForm.step5.reservationPeriod.reservation_period\"></strong></p>\n" +
    "            </div>\n" +
    "            <div class=\"col-lg-1\">\n" +
    "                <button ng-if=\"!info.booking\" type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"deleteBookingPeriod()\">\n" +
    "                    <span aria-hidden=\"true\">&times;</span>\n" +
    "                </button>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"alert alert-danger\" ng-if=\"errorMessage\" ng-bind=\"::errorMessage\">\n" +
    "        </div>\n" +
    "        <form name=\"bookingPeriod\" class=\"booking-period\">\n" +
    "\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-lg-6\">\n" +
    "                    <div class=\"input-group\">\n" +
    "                        <span class=\"input-group-addon\"\n" +
    "                              translate-once=\"eventForm.step5.reservationPeriod.from\"></span>\n" +
    "                        <input name=\"bookingStartDate\"\n" +
    "                               class=\"form-control\"\n" +
    "                               type=\"text\"\n" +
    "                               uib-datepicker-popup=\"dd/MM/yyyy\"\n" +
    "                               datepicker-options=\"dateOptions\"\n" +
    "                               ng-model=\"availabilityStarts\"\n" +
    "                               ng-change=\"validateBookingPeriod()\"\n" +
    "                               is-open=\"popup1.opened\"\n" +
    "                               show-button-bar=\"false\"\n" +
    "                               ng-required=\"true\" />\n" +
    "                        <span class=\"input-group-btn\">\n" +
    "                            <button type=\"button\" class=\"btn btn-default\" ng-click=\"open1()\">\n" +
    "                                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n" +
    "                            </button>\n" +
    "                        </span>\n" +
    "                    </div><!-- /input-group -->\n" +
    "                </div><!-- /.col-lg-6 -->\n" +
    "                <div class=\"col-lg-6\">\n" +
    "                    <div class=\"input-group\">\n" +
    "                        <span class=\"input-group-addon\"\n" +
    "                              translate-once=\"eventForm.step5.reservationPeriod.till\"></span>\n" +
    "                        <input name=\"bookingEndDate\"\n" +
    "                               type=\"text\"\n" +
    "                               class=\"form-control\"\n" +
    "                               type=\"text\"\n" +
    "                               uib-datepicker-popup=\"dd/MM/yyyy\"\n" +
    "                               datepicker-options=\"dateOptions\"\n" +
    "                               ng-model=\"availabilityEnds\"\n" +
    "                               ng-change=\"validateBookingPeriod()\"\n" +
    "                               is-open=\"popup2.opened\"\n" +
    "                               show-button-bar=\"false\"\n" +
    "                               ng-required=\"true\" />\n" +
    "                        <span class=\"input-group-btn\">\n" +
    "                            <button type=\"button\" class=\"btn btn-default\" ng-click=\"open2()\">\n" +
    "                                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n" +
    "                            </button>\n" +
    "                          </span>\n" +
    "                    </div><!-- /input-group -->\n" +
    "                </div><!-- /.col-lg-6 -->\n" +
    "            </div><!-- /.row -->\n" +
    "        </form>\n" +
    "    </div>\n" +
    "</div>"
  );


  $templateCache.put('templates/event-preview.directive.html',
    "<div class=\"panel panel-default preview\">\n" +
    "\n" +
    "  <div class=\"panel-heading\" ng-style=\"{'background-image': 'url(' + event.image + ')'}\">\n" +
    "    <ul class=\"list-inline\">\n" +
    "      <li><small class=\"label label-default\" ng-bind=\"::event.type.label\"></small></li>\n" +
    "    </ul>\n" +
    "    <p class=\"title\" ng-bind=\"::event.name\"></p>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"panel-body\">\n" +
    "\n" +
    "    <p ng-bind-html=\"::event.description\"></p>\n" +
    "\n" +
    "    <table class=\"table table-condensed\">\n" +
    "      <tbody>\n" +
    "      <tr>\n" +
    "        <td class=\"\">\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Waar</strong>\n" +
    "          <i class=\"fa fa-map-marker hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td ng-bind=\"::event.location.name\"></td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Wanneer</strong>\n" +
    "          <i class=\"fa fa-calendar hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td class=\"cf-when scroll scroll-150\">\n" +
    "          <udb-calendar-summary offer=\"event\"></udb-calendar-summary>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Organisatie</strong>\n" +
    "          <i class=\"fa fa-building-o hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td ng-bind=\"::event.organizer.name\"></td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td><strong class=\"hidden-xs hidden-sm\">Prijs</strong><i class=\"fa fa-eur hidden-md hidden-lg\"></i></td>\n" +
    "        <td>\n" +
    "          <div ng-switch=\"::event.pricing\">\n" +
    "            <span ng-switch-when=\"free\">gratis</span>\n" +
    "                <span ng-switch-when=\"payed\">\n" +
    "                  <i class=\"fa fa-eur meta icon\"></i>\n" +
    "                  <span ng-if=\"::event.price\" ng-bind=\"::event.price | currency\">\n" +
    "                </span>\n" +
    "                </span>\n" +
    "            <span ng-switch-when=\"unknown\">niet ingevoerd</span>\n" +
    "          </div>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      </tbody>\n" +
    "    </table>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div>\n" +
    "  <em>\n" +
    "    Ingevoerd door <span ng-bind=\"::event.organizer.name\"></span>\n" +
    "    <span> op </span>\n" +
    "    <span ng-bind=\"::event.created | date : 'dd/MM/yyyy • HH:mm'\"></span>\n" +
    "  </em>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-suggestion.directive.html',
    "<div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\" ng-hide=\"eventCtrl.fetching\">\n" +
    "  <a class=\"btn btn-tile\"\n" +
    "     ng-click=\"previewSuggestedItem(event)\">\n" +
    "    <small class=\"label label-default\" ng-bind=\"::event.type.label\"></small><br>\n" +
    "    <strong class=\"title\" ng-bind=\"::event.name\"></strong><br>\n" +
    "    <span ng-bind=\"::event.location.name\"></span> -\n" +
    "    <ng-switch on=\"event.calendarType\">\n" +
    "      <span ng-switch-when=\"single\" ng-bind=\"::event.startDate | date: 'dd/MM'\"></span>\n" +
    "      <span ng-switch-when=\"multiple\">\n" +
    "        <span translate-once=\"eventForm.step4.suggestions.from\"></span> <span ng-bind=\"::event.startDate | date: 'dd/MM'\"></span> <span translate-once=\"eventForm.step4.suggestions.till\"></span> <span ng-bind=\"::event.endDate | date: 'dd/MM'\"></span>\n" +
    "      </span>\n" +
    "      <span ng-switch-when=\"periodic\">\n" +
    "        <span translate-once=\"eventForm.step4.suggestions.from\"></span> <span ng-bind=\"::event.startDate | date: 'dd/MM'\"></span> <span translate-once=\"eventForm.step4.suggestions.till\"></span> <span ng-bind=\"::event.endDate | date: 'dd/MM'\"></span>\n" +
    "      </span>\n" +
    "      <span ng-switch-when=\"permanent\" translate-once=\"eventForm.step4.suggestions.permanent\"></span>\n" +
    "    </ng-switch>\n" +
    "    <br>\n" +
    "    <small class=\"preview-corner\"></small>\n" +
    "    <i class=\"fa fa-eye preview-icon\"></i>\n" +
    "  </a>\n" +
    "</div>"
  );


  $templateCache.put('templates/place-preview.directive.html',
    "<div class=\"panel panel-default preview\">\n" +
    "\n" +
    "  <div class=\"panel-heading\" ng-style=\"{'background-image': 'url(' + event.image + ')'}\">\n" +
    "    <ul class=\"list-inline\">\n" +
    "      <li><small class=\"label label-default\" ng-bind=\"::event.type.label\"></small></li>\n" +
    "    </ul>\n" +
    "    <p class=\"title\" ng-bind=\"::event.name\"></p>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"panel-body\">\n" +
    "\n" +
    "    <p ng-bind-html=\"::event.description\"></p>\n" +
    "\n" +
    "    <table class=\"table table-condensed\">\n" +
    "      <tbody>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Waar</strong>\n" +
    "          <i class=\"fa fa-map-marker hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td>\n" +
    "          <span ng-bind=\"::event.address.streetAddress\"></span>\n" +
    "          <br>\n" +
    "          <span ng-bind=\"::event.address.postalCode\"></span>\n" +
    "          <span ng-bind=\"::event.address.addressLocality\"></span>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      <tr ng-if=\"::event.calendarType\">\n" +
    "        <td>\n" +
    "          <strong class=\"hidden-xs hidden-sm\">Wanneer</strong>\n" +
    "          <i class=\"fa fa-calendar hidden-md hidden-lg\"></i>\n" +
    "        </td>\n" +
    "        <td class=\"cf-when scroll scroll-150\">\n" +
    "          <udb-calendar-summary offer=\"event\"></udb-calendar-summary>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      </tbody>\n" +
    "    </table>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div>\n" +
    "  <em>\n" +
    "    Ingevoerd door <span ng-bind=\"::event.creator\"></span>\n" +
    "    <span ng-if=\"event.created\"> op <span ng-bind=\"::event.created | date : 'dd/MM/yyyy • HH:mm'\"></span></span>\n" +
    "  </em>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place-suggestion.directive.html',
    "<div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\" ng-hide=\"eventCtrl.fetching\">\n" +
    "  <a class=\"btn btn-tile\"\n" +
    "     ng-click=\"previewSuggestedItem(event)\">\n" +
    "    <small class=\"label label-default\" ng-bind=\"::event.type.label\"></small><br>\n" +
    "    <strong class=\"title\" ng-bind=\"::event.name\"></strong><br>\n" +
    "    <span translate-once=\"eventForm.step4.suggestions.permanent\"></span>\n" +
    "    <br>\n" +
    "    <small class=\"preview-corner\"></small>\n" +
    "    <i class=\"fa fa-eye preview-icon\"></i>\n" +
    "  </a>\n" +
    "</div>"
  );


  $templateCache.put('templates/suggestion-preview-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"closePreview()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n" +
    "  <h4 class=\"modal-title\">\n" +
    "    Gelijkaardige items\n" +
    "    <span> </span>\n" +
    "    <small>\n" +
    "      Evenement <span ng-bind=\"(currentSuggestionIndex + 1)\"></span> van <span ng-bind=\"::suggestionCount\"></span>\n" +
    "    </small>\n" +
    "  </h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "  <div ng-repeat=\"event in suggestions\" ng-show=\"$index === currentSuggestionIndex\">\n" +
    "    <udb-event-preview ng-if=\"suggestionType === 'event'\"></udb-event-preview>\n" +
    "    <udb-place-preview ng-if=\"suggestionType === 'place'\"></udb-place-preview>\n" +
    "  </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"previousSuggestion()\">Vorige</button>\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"nextSuggestion()\">Volgende</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-publish.html',
    "<div class=\"event-validation\" ng-if=\"efpc.eventFormData.showStep5\">\n" +
    "    <div class=\"text-danger\" ng-if=\"efpc.error\" ng-bind=\"efpc.error\"></div>\n" +
    "\n" +
    "    <udb-event-form-save-time-tracker></udb-event-form-save-time-tracker>\n" +
    "    <div ng-if=\"!efpc.saving\">\n" +
    "      <button type=\"submit\"\n" +
    "              class=\"btn btn-success\"\n" +
    "              ng-click=\"efpc.publish()\"\n" +
    "              ng-if=\"efpc.isDraft(efpc.eventFormData.workflowStatus) && efpc.hasNoDefault\">\n" +
    "          <span translate-once=\"eventForm.publish.publish_now\"></span>\n" +
    "      </button>\n" +
    "      <button class=\"btn btn-default\"\n" +
    "              ng-click=\"efpc.publishLater()\"\n" +
    "              ng-if=\"efpc.canPublishLater()\">\n" +
    "          <span translate-once=\"eventForm.publish.publish_later\"></span>\n" +
    "      </button>\n" +
    "      <button type=\"submit\"\n" +
    "              class=\"btn btn-success\"\n" +
    "              ng-click=\"efpc.preview()\"\n" +
    "              ng-if=\"!efpc.isDraft(efpc.eventFormData.workflowStatus)\">\n" +
    "          <span translate-once=\"eventForm.publish.edit_done\"></span>\n" +
    "      </button>\n" +
    "      <button type=\"submit\"\n" +
    "              class=\"btn btn-success\"\n" +
    "              ng-click=\"efpc.publish()\"\n" +
    "              ng-if=\"efpc.isDraft(efpc.eventFormData.workflowStatus) && !efpc.hasNoDefault\">\n" +
    "          <span translate-once=\"eventForm.publish.edit_done\"></span>\n" +
    "      </button>\n" +
    "      <span ng-if=\"efpc.hasNoDefault && efpc.eventFormData.availableFrom !== ''\" && !efpc.isDraft(efpc.eventFormData.workflowStatus)>\n" +
    "          <span translate-once=\"eventForm.publish.online_from\"></span> <span ng-bind=\"efpc.eventFormData.availableFrom | date: 'dd/MM/yyyy'\"></span>\n" +
    "      </span>\n" +
    "    </div>\n" +
    "    <div ng-if=\"efpc.saving\">\n" +
    "      <i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i>\n" +
    "      <span class=\"sr-only\">Loading...</span>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step1.html',
    "<div ng-controller=\"EventFormStep1Controller as EventFormStep1\">\n" +
    "  <a name=\"wat\"></a>\n" +
    "  <section id=\"wat\">\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">1</span>\n" +
    "            <span translate-once=\"eventForm.step1.title\"></span>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\" ng-show=\"!activeEventType\">\n" +
    "      <div ng-class=\"splitTypes ? 'col-sm-5': 'col-sm-12'\"\n" +
    "           ng-show=\"splitTypes || eventFormData.getType() === 'event'\">\n" +
    "        <label class=\"event-type-choser-label event\"><span translate-once=\"eventForm.step1.label_event\"></span></label>\n" +
    "        <ul class=\"list-inline\" id=\"step1-events\">\n" +
    "          <li ng-repeat=\"eventType in ::eventTypeLabels | orderBy:'label'\" ng-show=\"eventType.primary === true || showAllEventTypes\">\n" +
    "            <button ng-bind=\"::translateOfferTypes(eventType.label)\" class=\"btn btn-default\"\n" +
    "                    ng-click=\"setEventType(eventType, true)\"></button>\n" +
    "          </li>\n" +
    "          <li ng-hide=\"showAllEventTypes\">\n" +
    "            <a href=\"\" ng-click=\"toggleEventTypes()\" translate-once=\"eventForm.step1.show_everything\"></a>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-sm-2\" ng-show=\"splitTypes\">\n" +
    "        <p class=\"text-center event-type-splitter\"><em translate-once=\"eventForm.step1.or\"></em></p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-class=\"splitTypes ? 'col-sm-5': 'col-sm-12'\"\n" +
    "           ng-show=\"splitTypes || eventFormData.getType() === 'place'\">\n" +
    "        <label class=\"event-type-choser-label place\"><span translate-once=\"eventForm.step1.location_label\"></span></label>\n" +
    "        <ul class=\"list-inline\" id=\"step1-places\">\n" +
    "          <li ng-repeat=\"placeType in ::placeLabels | orderBy:'label'\" ng-show=\"placeType.primary == true || showAllPlaces\">\n" +
    "            <button ng-bind=\"::translateOfferTypes(placeType.label)\" class=\"btn btn-default\"\n" +
    "                    ng-click=\"setEventType(placeType, false)\"></button>\n" +
    "          </li>\n" +
    "          <li ng-hide=\"showAllPlaces\">\n" +
    "            <a href=\"\" ng-click=\"togglePlaces()\" translate-once=\"eventForm.step1.show_everything\"></a>\n" +
    "          </li>\n" +
    "        </ul>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "      <p class=\"col-xs-12 col-md-12\" ng-hide=\"activeEventType === ''\">\n" +
    "        <span class=\"btn-chosen\" ng-bind=\"activeEventTypeLabel\"></span>\n" +
    "        <a class=\"btn btn-link btn-default\"\n" +
    "           href=\"\" ng-click=\"resetEventType()\"\n" +
    "           translate-once=\"eventForm.step1.change\"></a>\n" +
    "      </p>\n" +
    "\n" +
    "      <div class=\"col-xs-12 theme-refinement\" ng-hide=\"activeEventType === '' || activeTheme !== ''\">\n" +
    "        <label class=\"event-theme-label\" ng-show=\"eventThemeLabels.length\" translate-once=\"eventForm.step1.refine\"></label>\n" +
    "        <div ng-repeat=\"(key, values) in eventThemeLabels | groupBy: 'group'\">\n" +
    "          <div class=\"row\">\n" +
    "            <div class=\"col-xs-2\" ng-show=\"key !== 'undefined'\" >\n" +
    "              <p class=\"text-muted\" ng-bind=\"::translateOfferThemesGroups(key)\"></p>\n" +
    "            </div>\n" +
    "            <div ng-class=\"key === 'undefined' ? 'col-xs-12' : 'col-xs-10'\">\n" +
    "              <ul class=\"list-inline list-themes\">\n" +
    "                <li ng-repeat=\"eventTheme in values\">\n" +
    "                  <button ng-bind=\"::translateOfferThemes(eventTheme.label)\" class=\"btn btn-default\"\n" +
    "                          ng-click=\"setTheme(eventTheme)\"></button>\n" +
    "                </li>\n" +
    "              </ul>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <p class=\"col-xs-12 col-md-12\"  ng-hide=\"activeTheme === ''\">\n" +
    "        <span class=\"btn-chosen\" ng-bind=\"activeThemeLabel\"></span>\n" +
    "        <a class=\"btn btn-link btn-default\"\n" +
    "           href=\"\" ng-click=\"resetTheme()\"\n" +
    "           translate-once=\"eventForm.step1.change\"></a>\n" +
    "      </p>\n" +
    "\n" +
    "  </section>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step2.html',
    "<div ng-controller=\"EventFormStep2Controller as EventFormStep2\">\n" +
    "  <a name=\"wanneer\"></a>\n" +
    "  <section id=\"wanneer\" ng-show=\"eventFormData.showStep2\">\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">2</span>\n" +
    "            <span ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step2.date_help_event\"></span>\n" +
    "            <span ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step2.date_help_place\"></span>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <udb-form-place-calendar ng-if=\"eventFormData.isPlace\"></udb-form-place-calendar>\n" +
    "    <udb-form-event-calendar ng-if=\"eventFormData.isEvent\"></udb-form-event-calendar>\n" +
    "  </section>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step3.html',
    "<div ng-controller=\"EventFormStep3Controller as EventFormStep3\">\n" +
    "\n" +
    "<section id=\"waar\" ng-show=\"eventFormData.showStep3\">\n" +
    "  <form name=\"step3Form\" class=\"css-form\">\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-8\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">3</span>\n" +
    "            <span ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step3.title_event\"></span>\n" +
    "            <span ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step3.title_place\"></span>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "        <div class=\"col-xs-4\">\n" +
    "          <select ng-change=\"changeCountrySelection()\"\n" +
    "            ng-options=\"option.code | translate for option in availableCountries track by option.code\"\n" +
    "            ng-model=\"selectedCountry\"\n" +
    "            class=\"form-control\">\n" +
    "          </select>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <span ng-show=\"selectedCountry.code==='BE'\">\n" +
    "          <label for=\"gemeente-autocomplete\"\n" +
    "                 id=\"gemeente-label\"\n" +
    "                 ng-hide=\"selectedCity\">\n" +
    "                 <span translate-once=\"eventForm.step3.choose_city\"></span>\n" +
    "                 <span translate-once=\"eventForm.step3.choose_city_helper\" class=\"text-muted\"></span>\n" +
    "         </label>\n" +
    "       </span>\n" +
    "       <span ng-show=\"selectedCountry.code==='NL'\">\n" +
    "         <label for=\"gemeente-autocomplete\"\n" +
    "                id=\"gemeente-label\"\n" +
    "                ng-hide=\"selectedCity\">\n" +
    "                <span translate-once=\"eventForm.step3.choose_residence\"></span>\n" +
    "                <span translate-once=\"eventForm.step3.choose_residence_helper\" class=\"text-muted\"></span>\n" +
    "        </label>\n" +
    "        </span>\n" +
    "        <div id=\"gemeente-kiezer\" ng-hide=\"selectedCity\" ng-show=\"selectedCountry=='nl'\">\n" +
    "          <span style=\"position: relative; display: inline-block; direction: ltr;\" class=\"twitter-typeahead\">\n" +
    "            <input type=\"text\"\n" +
    "                   id=\"gemeente-autocomplete\"\n" +
    "                   class=\"form-control uib-typeahead\"\n" +
    "                   ng-model=\"cityAutocompleteTextField\"\n" +
    "                   udb-auto-scroll\n" +
    "                   uib-typeahead=\"city as city.label for city in cities | filter:filterCities($viewValue) | orderBy:orderByLevenshteinDistance($viewValue)\"\n" +
    "                   typeahead-on-select=\"selectCity($item, $label)\"\n" +
    "                   typeahead-min-length=\"2\"\n" +
    "                   typeahead-template-url=\"templates/city-suggestion.html\"\n" +
    "                   autocomplete=\"off\" />\n" +
    "          </span>\n" +
    "          <div class=\"alert alert-danger\"\n" +
    "               ole=\"alert\"\n" +
    "               translate-once=\"eventForm.step3.problem_city\"\n" +
    "               ng-show=\"cityAutoCompleteError\">\n" +
    "          </div>\n" +
    "        </div>\n" +
    "        <div id=\"gemeente-gekozen\" ng-show=\"selectedCity\">\n" +
    "          <span class=\"btn-chosen\" id=\"gemeente-gekozen-button\" ng-bind=\"selectedCity\"></span>\n" +
    "          <a href=\"\"\n" +
    "             class=\"btn btn-default btn-link\"\n" +
    "             translate-once=\"eventForm.step3.change\"\n" +
    "             ng-click=\"changeCitySelection()\"></a>\n" +
    "        </div>\n" +
    "\n" +
    "\n" +
    "    <div id=\"waar-evenement\" class=\"clearfix\" ng-show=\"eventFormData.isEvent && selectedCity\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <label id=\"locatie-label\" ng-show=\"!selectedLocation\">\n" +
    "            <span translate-once=\"eventForm.step3.choose_location\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"loadingPlaces\"></i>\n" +
    "          </label>\n" +
    "          <div id=\"locatie-kiezer\" ng-hide=\"selectedLocation || loadingPlaces\">\n" +
    "            <span style=\"position: relative; display: block; direction: ltr;\" class=\"twitter-typeahead\">\n" +
    "              <input type=\"text\" ng-change=\"locationSearched()\"\n" +
    "                     translate-once-placeholder=\"eventForm.step3.placeholder_location\"\n" +
    "                     class=\"form-control typeahead\"\n" +
    "                     ng-model=\"locationAutocompleteTextField\"\n" +
    "                     uib-typeahead=\"location.id as location.name for location in filteredLocations = (locationsForCity | filter:filterCityLocations($viewValue)) | orderBy:orderCityLocations($viewValue) | limitTo:50\"\n" +
    "                     typeahead-on-select=\"selectLocation($item, $model, $label)\"\n" +
    "                     typeahead-min-length=\"3\"\n" +
    "                     typeahead-template-url=\"templates/place-suggestion.html\"\n" +
    "                     typeahead-popup-template-url=\"templates/place-suggestion-popup.html\"\n" +
    "                     focus-if=\"!loadingPlaces\"\n" +
    "                     udb-auto-scroll/>\n" +
    "              <div class=\"plaats-adres-resultaat dropdown-menu-no-results\"\n" +
    "                   ng-show=\"(!cityHasLocations() || filteredLocations.length === 0) && locationsSearched\">\n" +
    "                <div class=\"panel panel-default text-center\">\n" +
    "                  <div class=\"panel-body\">\n" +
    "                    <p translate-once=\"eventForm.step3.location_not_found\"></p>\n" +
    "                    <button type=\"button\" class=\"btn btn-primary\"\n" +
    "                            data-toggle=\"modal\"\n" +
    "                            data-target=\"#waar-locatie-toevoegen\"\n" +
    "                            translate-once=\"eventForm.step3.add_location\"\n" +
    "                            ng-click=\"openPlaceModal()\">\n" +
    "                    </button>\n" +
    "                  </div>\n" +
    "                </div>\n" +
    "              </div>\n" +
    "            </span>\n" +
    "            <div class=\"alert alert-danger\"\n" +
    "                 role=\"alert\"\n" +
    "                 translate-once=\"eventForm.step3.location_error\"\n" +
    "                 ng-show=\"locationAutoCompleteError\">\n" +
    "            </div>\n" +
    "          </div>\n" +
    "\n" +
    "          <div id=\"locatie-gekozen\" ng-show=\"selectedLocation\" >\n" +
    "            <span ng-bind=\"selectedLocation.name\"></span>\n" +
    "            <button type=\"button\"\n" +
    "                    class=\"btn btn-default btn-link\"\n" +
    "                    data-toggle=\"modal\"\n" +
    "                    data-target=\"#waar-locatie-toevoegen\"\n" +
    "                    translate-once=\"eventForm.step3.change\"\n" +
    "                    ng-click=\"changeLocationSelection()\"></button>\n" +
    "            <br>\n" +
    "            <span ng-bind=\"selectedLocation.address.streetAddress\"></span>\n" +
    "          </div>\n" +
    "\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div id=\"waar-plaats\" class=\"clearfix\" ng-show=\"eventFormData.isPlace && selectedCity\">\n" +
    "      <div class=\"plaats-adres-ingeven\" ng-hide=\"placeStreetAddress\">\n" +
    "        <div class=\"row\">\n" +
    "          <div class=\"col-xs-12 col-md-4\">\n" +
    "            <div class=\"form-group\" ng-class=\"{'has-error' : showValidation || (step3Form.street.$error.required && !step3Form.street.$pristine)}\">\n" +
    "              <label translate-once=\"eventForm.step3.street\"></label>\n" +
    "              <input class=\"form-control\"\n" +
    "                     id=\"straat\"\n" +
    "                     name=\"street\"\n" +
    "                     ng-model=\"newPlaceStreetAddress\"\n" +
    "                     ng-change=\"showValidation=false\"\n" +
    "                     translate-once-placeholder=\"eventForm.step3.placeholder_street\"\n" +
    "                     type=\"text\"\n" +
    "                     required />\n" +
    "              <span class=\"help-block\"\n" +
    "                    translate-once=\"eventForm.step3.street_validate\"\n" +
    "                    ng-show=\"showValidation && step3Form.street.$error.required\">\n" +
    "              </span>\n" +
    "              <span class=\"help-block\" ng-show=\"showValidation\" translate-once=\"eventForm.step3.street_validate_long\">\n" +
    "              </span>\n" +
    "            </div>\n" +
    "            <div class=\"form-group\" ng-show=\"selectedCountry.code==='NL'\">\n" +
    "              <label translate-once=\"eventForm.step3.zip\"></label>\n" +
    "              <input class=\"form-control\"\n" +
    "                     id=\"postalCode\"\n" +
    "                     name=\"postalCode\"\n" +
    "                     ng-model=\"newPlacePostalCode\"\n" +
    "                     ng-change=\"showValidation=false\"\n" +
    "                     translate-once-placeholder=\"eventForm.step3.placeholder_zip\"\n" +
    "                     type=\"text\"\n" +
    "                     required />\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "        <a class=\"btn btn-primary plaats-ok\"\n" +
    "           translate-once=\"eventForm.step3.ok\"\n" +
    "           ng-click=\"setPlaceStreetAddress(newPlaceStreetAddress)\"></a>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"plaats-adres-resultaat\" ng-show=\"placeStreetAddress\">\n" +
    "        <span>\n" +
    "          <span class=\"btn-chosen\" ng-bind=\"eventFormData.address.streetAddress\"></span>\n" +
    "          <a class=\"btn btn-link plaats-adres-wijzigen\"\n" +
    "             translate-once=\"eventForm.step3.change\"\n" +
    "             ng-click=\"changePlaceStreetAddress()\"></a>\n" +
    "        </span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "  </form>\n" +
    "</section>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step4.html',
    "<div ng-controller=\"EventFormStep4Controller as EventFormStep4\">\n" +
    "\n" +
    "  <a name=\"titel\"></a>\n" +
    "  <section id=\"titel\" ng-show=\"eventFormData.showStep4\">\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">4</span>\n" +
    "            <span translate-once=\"eventForm.step4.basic_data\"></span>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-md-8 col-lg-7\">\n" +
    "        <label ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step4.name_event\"></label>\n" +
    "        <label ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step4.name_place\"></label>\n" +
    "\n" +
    "        <div class=\"form-group-lg\">\n" +
    "          <input type=\"text\"\n" +
    "                 class=\"form-control\"\n" +
    "                 ng-model=\"eventFormData.name\"\n" +
    "                 ng-model-options=\"titleInputOptions\"\n" +
    "                 ng-change=\"eventTitleChanged()\"\n" +
    "                 focus-if=\"eventFormData.showStep4 && eventFormData.id === ''\"\n" +
    "                 udb-auto-scroll>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"help-block\">\n" +
    "          <p>\n" +
    "            <span ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step4.help_event\"></span>\n" +
    "            <span ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step4.help_place\"></span>\n" +
    "            <span translate-once=\"eventForm.step4.help_description\"></span>\n" +
    "          </p>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"alert alert-warning\" ng-show=\"infoMissing\">\n" +
    "      <strong translate-once=\"eventForm.step4.info_missing\"></strong>\n" +
    "      <ul>\n" +
    "        <li ng-repeat=\"error in missingInfo\" ng-bind-html=\"error\" translate>\n" +
    "          {{error}}\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"alert alert-danger\"\n" +
    "         translate-once=\"eventForm.step4.save_error\"\n" +
    "         ng-show=\"error\">\n" +
    "    </div>\n" +
    "\n" +
    "    <p ng-show=\"eventFormData.id === ''\">\n" +
    "      <a class=\"btn btn-primary titel-doorgaan\"\n" +
    "          ng-click=\"validateEvent(true);\">\n" +
    "        <span translate-once=\"eventForm.step4.continue\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "      </a>\n" +
    "    </p>\n" +
    "\n" +
    "  </section>\n" +
    "\n" +
    "  <div class=\"spinner\" style=\"display: none;\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "  </div>\n" +
    "\n" +
    "  <a name=\"dubbeldetectie\"></a>\n" +
    "  <section class=\"dubbeldetectie\" ng-show=\"eventFormData.name !== ''\">\n" +
    "\n" +
    "    <div class=\"panel panel-info\" ng-show=\"resultViewer.totalItems > 0\">\n" +
    "      <div class=\"panel-body bg-info text-info\">\n" +
    "        <p class=\"h2\" style=\"margin-top: 0;\" translate-once=\"eventForm.step4.doubles_title\"></p>\n" +
    "        <p translate-once=\"eventForm.step4.doubles_help\"></p>\n" +
    "\n" +
    "        <div class=\"row clearfix\" ng-if=\"eventFormData.getType() === 'event'\">\n" +
    "          <div ng-repeat=\"event in resultViewer.events | filter:{'@type': 'Event'}\">\n" +
    "            <udb-event-suggestion></udb-event-suggestion>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row clearfix\" ng-if=\"eventFormData.getType() === 'place'\">\n" +
    "          <div ng-repeat=\"event in resultViewer.events | filter:{'@type': 'Place'}\">\n" +
    "            <udb-place-suggestion></udb-place-suggestion>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <h3 ng-show=\"duplicatesSearched && resultViewer.totalItems > 0\">\n" +
    "      <span translate-once=\"eventForm.step4.sure\" translate-values=\"{ name: '{{eventFormData.name}}' }\"></span>\n" +
    "    </h3>\n" +
    "    <ul class=\"list-inline\" ng-show=\"duplicatesSearched && resultViewer.totalItems > 0\">\n" +
    "      <li>\n" +
    "        <a class=\"btn btn-default\"\n" +
    "           translate-once=\"eventForm.step4.return_dashboard\"\n" +
    "           href=\"dashboard\"></a>\n" +
    "      </li>\n" +
    "      <li>\n" +
    "        <a class=\"btn btn-primary dubbeldetectie-doorgaan\" ng-click=\"saveEvent()\">\n" +
    "          <span translate-once=\"eventForm.step4.yes_continue\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "        </a>\n" +
    "      </li>\n" +
    "    </ul>\n" +
    "\n" +
    "  </section>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form-step5.html',
    "<div ng-controller=\"EventFormStep5Controller as EventFormStep5\" >\n" +
    "  <a name=\"extra\"></a>\n" +
    "  <section id=\"extra\" ng-show=\"eventFormData.showStep5\">\n" +
    "\n" +
    "    <div class=\"step-title\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-xs-12\">\n" +
    "          <h2>\n" +
    "            <span class=\"number\">5</span>\n" +
    "            <span ng-show=\"eventFormData.isEvent\" translate-once=\"eventForm.step5.expose_event\"></span>\n" +
    "            <span ng-show=\"eventFormData.isPlace\" translate-once=\"eventForm.step5.expose_place\"></span>\n" +
    "          </h2>\n" +
    "          </h2>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-sm-7\">\n" +
    "\n" +
    "        <div class=\"row extra-titnieel\">\n" +
    "          <div class=\"extra-task state-complete\">\n" +
    "            <div class=\"col-sm-3\">\n" +
    "              <em class=\"extra-task-label\" translate-once=\"eventForm.step5.title\"></em>\n" +
    "            </div>\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <p id=\"extra-titel-motivator\" ng-bind=\"eventFormData.name\"></p>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row extra-beschrijving\">\n" +
    "          <div class=\"extra-task\" ng-class=\"descriptionCssClass\">\n" +
    "            <div class=\"col-sm-3\">\n" +
    "              <em class=\"extra-task-label\" translate-once=\"eventForm.step5.description\"></em>\n" +
    "              <span> </span>\n" +
    "              <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"savingDescription\"></i>\n" +
    "            </div>\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <section class=\"state incomplete\">\n" +
    "                <div class=\"row\">\n" +
    "                  <div class=\"col-sm-6\">\n" +
    "                    <a class=\"btn btn-default to-filling\"\n" +
    "                       translate-once=\"eventForm.step5.add_text\"\n" +
    "                       ng-click=\"alterDescription()\">\n" +
    "                    </a>\n" +
    "                  </div>\n" +
    "                </div>\n" +
    "              </section>\n" +
    "              <section class=\"state complete filling\">\n" +
    "                <div class=\"form-group\">\n" +
    "                  <textarea ng-blur=\"saveDescription()\"\n" +
    "                            ng-focus=\"focusDescription()\"\n" +
    "                            class=\"form-control\"\n" +
    "                            ng-model=\"description\"\n" +
    "                            rows=\"6\"\n" +
    "                            udb-auto-scroll\n" +
    "                            focus-if=\"descriptionCssClass == 'state-filling'\">\n" +
    "                            </textarea>\n" +
    "\n" +
    "                  <p class=\"tip description-info\" ng-if=\"descriptionInfoVisible && countCharacters() < 200\">\n" +
    "                    <span translate-once=\"eventForm.step5.required_200\"></span>\n" +
    "                    <span translate-once=\"eventForm.step5.required_still\"></span> <span ng-bind=\"(200 - countCharacters())\"></span> <span translate-once=\"eventForm.step5.required_signs\"></span>\n" +
    "                    <span class=\"loader\">\n" +
    "                      <span class=\"empty\"></span>\n" +
    "                      <span class=\"bar\" ng-style=\"{width : (countCharacters()/2)+'%'}\" ></span>\n" +
    "                    </span>\n" +
    "                  </p>\n" +
    "                  <p class=\"tip description-info\"\n" +
    "                     translate-once=\"eventForm.step5.required_200_help\"\n" +
    "                     ng-if=\"descriptionInfoVisible && countCharacters() >= 200\">\n" +
    "                  </p>\n" +
    "                  <p>\n" +
    "                    <a ng-if=\"description\"\n" +
    "                       class=\"to-filling\"\n" +
    "                       translate-once=\"eventForm.step5.empty\"\n" +
    "                       ng-click=\"saveDescription(true)\">\n" +
    "                    </a>\n" +
    "                  </p>\n" +
    "                  <div class=\"tip\" ng-switch=\"eventFormData.type.id\">\n" +
    "                    <p ng-switch-when=\"0.17.0.0.0\" translate-once=\"eventForm.step5.tip_route\"></p>\n" +
    "                    <p ng-switch-when=\"0.7.0.0.0\" translate-once=\"eventForm.step5.tip_rondleiding\"></p>\n" +
    "                    <p ng-switch-when=\"0.14.0.0.0\" translate-once=\"eventForm.step5.tip_monument\"></p>\n" +
    "                  </div>\n" +
    "                </div>\n" +
    "                <div ng-show=\"descriptionError\"\n" +
    "                     class=\"alert alert-danger\"\n" +
    "                     translate-once=\"eventForm.step5.description_error\">\n" +
    "                </div>\n" +
    "              </section>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <udb-form-age></udb-form-age>\n" +
    "\n" +
    "        <div class=\"row extra-organisator\">\n" +
    "          <div class=\"extra-task\" ng-class=\"organizerCssClass\">\n" +
    "            <div class=\"col-sm-3\">\n" +
    "              <em class=\"extra-task-label\" translate-once=\"eventForm.step5.organizer\"></em>\n" +
    "              <span> </span>\n" +
    "              <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"savingOrganizer\"></i>\n" +
    "            </div>\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <section class=\"state incomplete\">\n" +
    "                <a class=\"btn btn-default to-filling\"\n" +
    "                   translate-once=\"eventForm.step5.add_organizer\"\n" +
    "                   ng-click=\"organizerCssClass = 'state-filling'\">\n" +
    "                </a>\n" +
    "              </section>\n" +
    "              <section class=\"state complete\">\n" +
    "                <span>\n" +
    "                  <span ng-bind=\"eventFormData.organizer.name\"></span>\n" +
    "                  <a class=\"close\" ng-click=\"deleteOrganizerHandler()\">\n" +
    "                    <span aria-hidden=\"true\"> &times;</span>\n" +
    "                  </a>\n" +
    "                </span>\n" +
    "                <div ng-if=\"hasTicketSales\" class=\"alert alert-danger\" translate=\"uitpas.uitpasInfo.cantChangeOrganiser\"></div>\n" +
    "                <div ng-if=\"hasUitpasError\" class=\"alert alert-danger\" translate=\"uitpas.uitpasInfo.unavailable\"></div>\n" +
    "              </section>\n" +
    "              <section class=\"state filling\">\n" +
    "                <div class=\"form-group\">\n" +
    "                  <label>\n" +
    "                    <span translate-once=\"eventForm.step5.choose_organizer\"></span> <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"loadingOrganizers\"></i>\n" +
    "                  </label>\n" +
    "                  <div id=\"organisator-kiezer\">\n" +
    "                    <span class=\"twitter-typeahead\" style=\"position: relative; display: inline-block; direction: ltr;\">\n" +
    "                      <input type=\"text\" class=\"form-control uib-typeahead\" id=\"organisator-autocomplete\"\n" +
    "                             ng-model=\"organizer\"\n" +
    "                             uib-typeahead=\"organizer for organizer in getOrganizers($viewValue)\"\n" +
    "                             typeahead-on-select=\"selectOrganizer(organizer)\"\n" +
    "                             typeahead-min-length=\"3\"\n" +
    "                             typeahead-template-url=\"templates/organisation-uitpas-typeahead-template.html\"\n" +
    "                             typeahead-wait-ms=\"300\"\n" +
    "                             focus-if=\"organizerCssClass == 'state-filling'\"\n" +
    "                             udb-auto-scroll/>\n" +
    "                      <div class=\"dropdown-menu-no-results text-center\" ng-show=\"emptyOrganizerAutocomplete\">\n" +
    "                        <div class=\"panel panel-default text-center\">\n" +
    "                          <div class=\"panel-body\">\n" +
    "                            <p translate-once=\"eventForm.step5.organizer_not_found\"></p>\n" +
    "                            <button type='button'\n" +
    "                                    class='btn btn-primary'\n" +
    "                                    translate-once=\"eventForm.step5.add_new_organizer\"\n" +
    "                                    ng-click=\"openOrganizerModal()\">\n" +
    "                            </button>\n" +
    "                          </div>\n" +
    "                        </div>\n" +
    "                      </div>\n" +
    "                    </span>\n" +
    "                  </div>\n" +
    "                </div>\n" +
    "              </section>\n" +
    "              <div ng-show=\"organizerError\" class=\"alert alert-danger\" translate-once=\"eventForm.step5.organizer_error\">\n" +
    "              </div>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <price-info price=\"price\" ng-if=\"!disablePriceInfo\" event-id=\"eventFormData.id\" organizer=\"eventFormData.organizer\"></price-info>\n" +
    "        <uitpas-info organizer=\"eventFormData.organizer\" price=\"eventFormData.priceInfo\"></uitpas-info>\n" +
    "\n" +
    "        <div class=\"row extra-contact\">\n" +
    "          <div class=\"extra-task meer-info\" ng-class=\"contactInfoCssClass\">\n" +
    "            <div class=\"col-sm-3\">\n" +
    "              <em class=\"extra-task-label\" translate-once=\"eventForm.step5.contact\"></em>\n" +
    "              <span> </span>\n" +
    "              <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"savingContactInfo\"></i>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <section class=\"state incomplete\">\n" +
    "                <a class=\"btn btn-default\" ng-click=\"addContactInfo()\" translate-once=\"eventForm.step5.add_contact\">\n" +
    "                </a>\n" +
    "              </section>\n" +
    "\n" +
    "              <section class=\"state filling complete\">\n" +
    "                <form name=\"contactInfoForm\" class=\"contact-info\">\n" +
    "                  <table class=\"table\">\n" +
    "                    <tr ng-repeat=\"(key, info) in contactInfo\"\n" +
    "                        ng-model=\"info\"\n" +
    "                        udb-contact-info-validation\n" +
    "                        ng-class=\"{'has-error' : infoErrorMessage !== '' }\"\n" +
    "                        ng-change=\"saveContactInfo()\">\n" +
    "                      <td>\n" +
    "                        <select class=\"form-control\" ng-model=\"info.type\"\n" +
    "                                ng-change=\"clearInfo(); removeBookingInfo('{{info.type}}')\">\n" +
    "                          <option value=\"url\" translate-once=\"eventForm.step5.website\"></option>\n" +
    "                          <option value=\"phone\" translate-once=\"eventForm.step5.phone\"></option>\n" +
    "                          <option value=\"email\" translate-once=\"eventForm.step5.e-mail\"></option>\n" +
    "                        </select>\n" +
    "                      </td>\n" +
    "                      <td>\n" +
    "                        <ng-switch on=\"info.type\">\n" +
    "                          <input type=\"text\"\n" +
    "                                 ng-switch-when=\"url\"\n" +
    "                                 udb-http-prefix\n" +
    "                                 class=\"form-control\"\n" +
    "                                 ng-model=\"info.value\"\n" +
    "                                 name=\"contact[{{key}}]\"\n" +
    "                                 ng-change=\"validateInfo(); saveContactInfo();\"\n" +
    "                                 ng-model-options=\"{ updateOn: 'blur' }\"/>\n" +
    "                          <input type=\"text\"\n" +
    "                                 ng-switch-default\n" +
    "                                 class=\"form-control\"\n" +
    "                                 ng-model=\"info.value\"\n" +
    "                                 name=\"contact[{{key}}]\"\n" +
    "                                 ng-change=\"validateInfo(); saveContactInfo();\"\n" +
    "                                 ng-model-options=\"{ updateOn: 'blur' }\"/>\n" +
    "                        </ng-switch>\n" +
    "                        <span class=\"help-block\" ng-hide=\"infoErrorMessage === ''\" ng-bind=\"infoErrorMessage\"></span>\n" +
    "                        <div class=\"booking-options\" ng-show=\"showBookingOption(info)\">\n" +
    "                          <label>\n" +
    "                            <input type=\"checkbox\"\n" +
    "                                   class=\"reservatie-{{info.type}}-check reservatie-check\"\n" +
    "                                   ng-model=\"info.booking\"\n" +
    "                                   ng-click=\"toggleBookingType(info)\">\n" +
    "                            <span translate-once=\"eventForm.step5.use_booking\"></span>\n" +
    "                          </label>\n" +
    "                          <div class=\"reservatie-website-info reservatie-info\"\n" +
    "                               ng-if=\"info.type === 'url' && info.booking\">\n" +
    "                            <div class=\"reservatie-info-stap2\">\n" +
    "                              <div class=\"weergave\">\n" +
    "                                <p><strong translate-once=\"eventForm.step5.booking_exposure\"></strong></p>\n" +
    "                                <select ng-model=\"bookingModel.urlLabel[mainLanguage]\"\n" +
    "                                        ng-change=\"saveWebsitePreview()\"\n" +
    "                                        ng-options=\"option.label for option in bookingOptions\">\n" +
    "                                </select>\n" +
    "                              </div>\n" +
    "                            </div>\n" +
    "                          </div>\n" +
    "                        </div>\n" +
    "                      </td>\n" +
    "                      <td>\n" +
    "                        <button ng-if=\"!info.booking\" type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"deleteContactInfo(key)\">\n" +
    "                          <span aria-hidden=\"true\">&times;</span>\n" +
    "                        </button>\n" +
    "                        <button ng-if=\"info.booking\" type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"deleteBookingInfo(info, key)\">\n" +
    "                          <span aria-hidden=\"true\">&times;</span>\n" +
    "                        </button>\n" +
    "                      </td>\n" +
    "                    </tr>\n" +
    "                    <tr>\n" +
    "                      <td colspan=\"3\">\n" +
    "                        <a ng-click=\"addContactInfo()\" translate-once=\"eventForm.step5.add_more_contact\"></a>\n" +
    "                      </td>\n" +
    "                    </tr>\n" +
    "                  </table>\n" +
    "                </form>\n" +
    "              </section>\n" +
    "\n" +
    "              <div class=\"row extra-tickets-periode\"\n" +
    "                   ng-show=\"hasBookingInfo()\">\n" +
    "                  <div class=\"extra-task\">\n" +
    "                      <udb-reservation-period></udb-reservation-period>\n" +
    "                  </div>\n" +
    "              </div>\n" +
    "\n" +
    "              <div ng-show=\"contactInfoError\" class=\"alert alert-danger\" translate-once=\"eventForm.step5.contact_error\">\n" +
    "              </div>\n" +
    "\n" +
    "            </div>\n" +
    "\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <udb-form-audience></udb-form-audience>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-sm-5\">\n" +
    "\n" +
    "        <div class=\"image-upload\" ng-class=\"eventFormData.mediaObjects.length ? 'state-complete' : 'state-incomplete'\">\n" +
    "          <div class=\"image-upload-none state incomplete\">\n" +
    "            <span class=\"image-upload-icon\"></span>\n" +
    "            <p class=\"muted\" translate-once=\"eventForm.step5.image_help\"></p>\n" +
    "          </div>\n" +
    "\n" +
    "          <div class=\"image-upload-list state complete\" ng-if=\"eventFormData.mediaObjects.length > 0\">\n" +
    "            <h4 translate-once=\"eventForm.step5.images\"></h4>\n" +
    "            <div ng-repeat=\"image in eventFormData.mediaObjects | imagesByLanguage:eventFormData.mainLanguage track by image.contentUrl\">\n" +
    "              <div class=\"uploaded-image\">\n" +
    "                <div class=\"media\" ng-class=\"{'main-image': ($index === 0)}\">\n" +
    "                  <a class=\"media-left\" href=\"#\">\n" +
    "                    <img ng-src=\"{{ image.thumbnailUrl }}?width=50&height=50\">\n" +
    "                  </a>\n" +
    "\n" +
    "                  <div class=\"media-body\">\n" +
    "                    <div ng-bind=\"image.description\"></div>\n" +
    "                    <div class=\"text-muted\">&copy; <span ng-bind=\"image.copyrightHolder\"><span translate-once=\"eventForm.step5.copyright\"></span></span></div>\n" +
    "                  </div>\n" +
    "\n" +
    "                  <div class=\"media-actions\">\n" +
    "                      <a class=\"btn btn-xs btn-primary\" ng-click=\"editImage(image)\" translate-once=\"eventForm.step5.change\"></a>\n" +
    "                      <a class=\"btn btn-xs btn-danger\" ng-click=\"removeImage(image)\" translate-once=\"eventForm.step5.delete\"></a>\n" +
    "                      <a class=\"btn btn-xs btn-default select-main-image\" ng-click=\"selectMainImage(image)\" translate-once=\"eventForm.step5.main_image\"></a>\n" +
    "                  </div>\n" +
    "\n" +
    "                </div>\n" +
    "              </div>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "\n" +
    "          <div class=\"text-center\">\n" +
    "            <a class=\"btn btn-default\"\n" +
    "               href=\"#\"\n" +
    "               translate-once=\"eventForm.step5.add_image\"\n" +
    "               ng-click=\"openUploadImageModal(-1)\"></a>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "\n" +
    "  </section>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-form.html',
    "<div class=\"offer-form\" ng-if=\"loaded\">\n" +
    "  <div class=\"alert alert-warning\" ng-show=\"showLangWarning\">\n" +
    "    <p translate-once=\"eventForm.langWarning\" translate-values=\"{ language: '{{language}}' }\"></p>\n" +
    "  </div>\n" +
    "\n" +
    "  <udb-event-form-step1></udb-event-form-step1>\n" +
    "  <udb-event-form-step2></udb-event-form-step2>\n" +
    "  <udb-event-form-step3></udb-event-form-step3>\n" +
    "  <udb-event-form-step4></udb-event-form-step4>\n" +
    "  <udb-event-form-step5></udb-event-form-step5>\n" +
    "\n" +
    "  <udb-event-form-publish></udb-event-form-publish>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-export-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"exporter.close()\">\n" +
    "    <span class=\"fa fa-close\"></span>\n" +
    "  </button>\n" +
    "  <h4 class=\"modal-title\">Exporteren - <span ng-bind=\"exporter.eventCount + ' Items'\"></span></h4>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-switch=\"exporter.getActiveStepName()\">\n" +
    "  <form ng-switch-when=\"format\" name=\"formatForm\">\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Selecteer het formaat</h5>\n" +
    "\n" +
    "      <div class=\"export-format-field\" ng-repeat=\"format in ::exporter.exportFormats\">\n" +
    "        <label>\n" +
    "          <input type=\"radio\" name=\"eventExportFormat\" ng-model=\"exporter.format\" ng-value=\"format.type\"\n" +
    "                 class=\"export-format-radio\">\n" +
    "          <span ng-bind=\"format.label\" class=\"export-format-label\"></span>\n" +
    "        </label>\n" +
    "        <div class=\"export-format-description\" ng-bind=\"format.description\"></div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <udb-export-modal-buttons></udb-export-modal-buttons>\n" +
    "  </form>\n" +
    "\n" +
    "  <form ng-switch-when=\"filter\" name=\"filterForm\">\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Kies de gewenste velden</h5>\n" +
    "\n" +
    "      <div class=\"export-field-selection\">\n" +
    "        <div class=\"checkbox\"\n" +
    "             ng-repeat=\"property in ::exporter.eventProperties\"\n" +
    "             ng-show=\"!property.format || property.format.type === exporter.format\">\n" +
    "          <label>\n" +
    "            <input type=\"checkbox\" ng-model=\"property.include\" name=\"eventExportFields\"\n" +
    "                   ng-disabled=\"!property.excludable\">\n" +
    "            <span ng-bind=\"('property.' + property.name) | translate\"></span>\n" +
    "          </label>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <udb-export-modal-buttons></udb-export-modal-buttons>\n" +
    "  </form>\n" +
    "\n" +
    "  <form ng-switch-when=\"customize\" name=\"customizeForm\" novalidate>\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Verfraai je rapport</h5>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label>Kies een logo</label>\n" +
    "          <div class=\"row\">\n" +
    "            <div class=\"col-sm-8\">\n" +
    "              <div class=\"radio\" ng-repeat=\"brand in ::exporter.brands\">\n" +
    "                <label>\n" +
    "                    <input type=\"radio\" name=\"eventExportBrand\" ng-model=\"exporter.selectedBrand\"\n" +
    "                           ng-value=\"brand\" class=\"export-customization-brand-radio\">\n" +
    "                    <span ng-bind=\"brand.label\"></span>\n" +
    "                </label>\n" +
    "              </div>\n" +
    "            </div>\n" +
    "            <div class=\"col-sm-4\">\n" +
    "              <img ng-src=\"{{exporter.exportLogoUrl}}{{exporter.selectedBrand.logo}}\" alt=\"{{exporter.selectedBrand.name}}\" ng-show=\"exporter.selectedBrand\" class=\"img-responsive img-thumbnail center-block export-logo\"/>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label for=\"export-customization-title\">Titel</label> <small class=\"text-muted\">verplicht in te vullen</small>\n" +
    "          <input placeholder=\"Bv. Uit met Vlieg of UiT in Gent\" class=\"form-control\" id=\"export-customization-title\"\n" +
    "                 ng-model=\"exporter.customizations.title\" name=\"eventExportTitle\" ng-required=\"'true'\">\n" +
    "          <p class=\"alert alert-danger\" role=\"alert\" ng-show=\"exporter.hasErrors && customizeForm.eventExportTitle.$error.required\">Gelieve een titel toe te voegen. Dit is een noodzakelijk veld.</p>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label for=\"export-customization-subtitle\">Ondertitel</label>\n" +
    "          <input placeholder=\"Bv. 5 meeneemtips voor families\" class=\"form-control\" id=\"export-customization-subtitle\"\n" +
    "                 ng-model=\"exporter.customizations.subtitle\" name=\"eventExportSubtitle\">\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label for=\"export.customization-footer\">Afsluiter</label>\n" +
    "          <input placeholder=\"Bv. Meer tips op www.uitinvlaanderen.be\" class=\"form-control\"\n" +
    "                 id=\"export.customization-footer\" ng-model=\"exporter.customizations.footer\" name=\"eventExportFooter\">\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"form-group\">\n" +
    "          <label for=\"export.customization-publisher\">Verantwoordelijke uitgever</label>\n" +
    "          <input placeholder=\"Bv. Cultuurnet Vlaanderen\" class=\"form-control\" id=\"export.customization-publisher\"\n" +
    "                 ng-model=\"exporter.customizations.publisher\" name=\"eventExportPublisher\">\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <udb-export-modal-buttons></udb-export-modal-buttons>\n" +
    "  </form>\n" +
    "\n" +
    "  <form ng-switch-when=\"confirm\">\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Export versturen</h5>\n" +
    "      <div class=\"form-group\">\n" +
    "        <label>Email</label>\n" +
    "        <input type=\"text\" ng-model=\"exporter.email\" name=\"eventExportEmail\"/>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "    <udb-export-modal-buttons></udb-export-modal-buttons>\n" +
    "  </form>\n" +
    "\n" +
    "  <form ng-switch-when=\"finished\">\n" +
    "    <div class=\"modal-body\">\n" +
    "      <h5>Bedankt</h5>\n" +
    "\n" +
    "      <p>De gevraagde items worden geëxporteerd.</p>\n" +
    "\n" +
    "      <p ng-hide=\"exporter.email\">Wanneer het gevraagde bestand klaar is, verschijnt een melding in de taakbalk.</p>\n" +
    "      <p ng-show=\"exporter.email\">Wanneer het gevraagde bestand klaar is, verschijnt een melding in de taakbalk en sturen we je het document via mail.</p>\n" +
    "    </div>\n" +
    "  </form>\n" +
    "\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-footer\" ng-show=\"exporter.getActiveStepName() === 'finished'\">\n" +
    "  <button class=\"btn btn-default\" ng-click=\"exporter.close()\">sluiten</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/export-job.template.html',
    "<p>\n" +
    "  <button type=\"button\" class=\"close udb-hide-job-button\" ng-click=\"hideJob(job)\" aria-label=\"Close\">\n" +
    "    <span aria-hidden=\"true\">×</span>\n" +
    "  </button>\n" +
    "  <ins>\n" +
    "    <span am-time-ago=\"::job.getLogDateByState()\"></span> <i class=\"fa fa-check-circle udb-job-success\"></i>\n" +
    "  </ins>\n" +
    "  <span class=\"udb-job-description\" ng-bind=\"::job.getDescription()\"></span>\n" +
    "  <a role=\"button\" target=\"_blank\" class=\"btn btn-default\" ng-href=\"{{job.exportUrl}}\">\n" +
    "    Downloaden\n" +
    "  </a>\n" +
    "</p>\n"
  );


  $templateCache.put('templates/export-modal-buttons.directive.html',
    "<div class=\"modal-footer\" ng-hide=\"exporter.getActiveStepName() === 'finished'\">\n" +
    "  <button class=\"btn btn-default pull-left\" ng-click=\"exporter.previousStep()\"\n" +
    "          ng-hide=\"exporter.isOnFirstStep()\">Vorige stap</button>\n" +
    "  <button ng-hide=\"exporter.onLastStep()\" class=\"btn btn-primary\"\n" +
    "          ng-click=\"exporter.nextStep()\">Volgende</button>\n" +
    "  <button ng-show=\"exporter.onLastStep()\" class=\"btn btn-primary\" ng-click=\"exporter.export()\">Exporteren</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/query-search-bar.html',
    "<form class=\"form-inline\" role=\"search\">\n" +
    "  <div class=\"form-group\">\n" +
    "    <label for=\"user-search-input\" ng-bind=\"::qsb.searchLabel\"></label>\n" +
    "    <input type=\"text\"\n" +
    "           id=\"user-search-input\"\n" +
    "           class=\"form-control\"\n" +
    "           ng-model=\"qsb.queryString\"\n" +
    "           autocomplete=\"off\"\n" +
    "           ng-change=\"qsb.find()\">\n" +
    "  </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/label-creator.html',
    "<h1 class=\"title\">Label toevoegen</h1>\n" +
    "\n" +
    "<form name=\"creator.form\" class=\"css-form\" novalidate>\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-md-6\">\n" +
    "            <div class=\"form-group\" udb-form-group>\n" +
    "                <label class=\"control-label\" for=\"label-name-field\">Naam</label>\n" +
    "                <input id=\"label-name-field\"\n" +
    "                       class=\"form-control\"\n" +
    "                       name=\"name\"\n" +
    "                       type=\"text\"\n" +
    "                       udb-unique-label\n" +
    "                       udb-semicolon-label-check\n" +
    "                       ng-minlength=\"2\"\n" +
    "                       ng-required=\"true\"\n" +
    "                       ng-maxlength=\"255\"\n" +
    "                       ng-model=\"creator.label.name\"\n" +
    "                       ng-model-options=\"{debounce: 300}\"\n" +
    "                       ng-disabled=\"creator.creating\">\n" +
    "                <p class=\"help-block\" ng-if=\"creator.form.name.$error.uniqueLabel\">Er bestaat al een label met deze naam.</p>\n" +
    "                <p class=\"help-block\" ng-if=\"creator.form.name.$error.required\">Een label naam is verplicht.</p>\n" +
    "                <p class=\"help-block\" ng-if=\"creator.form.name.$error.minlength\">Een label moet uit minstens 2 tekens bestaan.</p>\n" +
    "                <p class=\"help-block\" ng-if=\"creator.form.name.$error.maxlength\">Een label mag maximum 255 tekens bevatten.</p>\n" +
    "                <p class=\"help-block\" ng-if=\"creator.form.name.$error.semicolonLabel\">Een label naam mag geen puntkomma bevatten.</p>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-md-12\">\n" +
    "            <div class=\"checkbox\">\n" +
    "                <label>\n" +
    "                    <input type=\"checkbox\"\n" +
    "                           ng-model=\"creator.label.isVisible\"> Tonen op publicatiekanalen\n" +
    "                </label>\n" +
    "            </div>\n" +
    "            <div class=\"checkbox\">\n" +
    "                <label>\n" +
    "                    <input type=\"checkbox\"\n" +
    "                           ng-model=\"creator.label.isPrivate\"> Voorbehouden aan specifieke gebruikersgroepen\n" +
    "                </label>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"col-md-12\">\n" +
    "            <button ng-disabled=\"!creator.form.$valid || creator.creating\"\n" +
    "                    type=\"button\"\n" +
    "                    class=\"btn btn-primary\"\n" +
    "                    ng-click=\"creator.create()\">\n" +
    "                Aanmaken <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"creator.creating\"></i>\n" +
    "            </button>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/label-editor.html',
    "<h1 class=\"title\">Label bewerken</h1>\n" +
    "\n" +
    "<div ng-show=\"!editor.label && !editor.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<form name=\"editor.form\" class=\"css-form\" novalidate>\n" +
    "    <div ng-show=\"editor.label\">\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-md-6\">\n" +
    "                <div class=\"form-group\" udb-form-group>\n" +
    "                    <label for=\"label-name-field\">Naam</label>\n" +
    "                    <input id=\"label-name-field\"\n" +
    "                           class=\"form-control\"\n" +
    "                           type=\"text\"\n" +
    "                           name=\"name\"\n" +
    "                           udb-semicolon-label-check\n" +
    "                           ng-model=\"editor.label.name\"\n" +
    "                           ng-minlength=\"2\"\n" +
    "                           ng-required=\"true\"\n" +
    "                           ng-maxlength=\"255\"\n" +
    "                           ng-disabled=\"editor.renaming\">\n" +
    "                    <p class=\"help-block\" ng-if=\"editor.form.name.$error.required\">Een label naam is verplicht.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"editor.form.name.$error.minlength\">Een label moet uit minstens 2 tekens bestaan.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"editor.form.name.$error.maxlength\">Een label mag maximum 255 tekens bevatten.</p>\n" +
    "                    <p class=\"help-block\" ng-if=\"editor.form.name.$error.semicolonLabel\">Een label naam mag geen puntkomma bevatten.</p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-md-12\">\n" +
    "                <label>\n" +
    "                    <input type=\"checkbox\"\n" +
    "                           ng-model=\"editor.label.isVisible\"> Tonen op publicatiekanalen\n" +
    "                </label>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-md-12\">\n" +
    "                <label>\n" +
    "                    <input type=\"checkbox\"\n" +
    "                           ng-model=\"editor.label.isPrivate\"> Voorbehouden aan specifieke gebruikersgroepen\n" +
    "                </label>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "<button ng-disabled=\"!editor.form.$valid || editor.saving\"\n" +
    "        type=\"button\"\n" +
    "        class=\"btn btn-primary\"\n" +
    "        ng-click=\"editor.save()\">\n" +
    "    Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "</button>\n" +
    "\n" +
    "<div ng-show=\"editor.loadingError\">\n" +
    "    <span ng-bind=\"editor.loadingError\"></span>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/labels-list.html',
    "<h1 class=\"title\">Labels <small><a ui-sref=\"split.manageLabels.create\">toevoegen</a></small></h1>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-11\">\n" +
    "        <udb-query-search-bar search-label=\"Zoeken op labelnaam\"\n" +
    "                              on-change=\"llc.queryChanged(query)\"\n" +
    "        ></udb-query-search-bar>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-1 text-right\">\n" +
    "        <i ng-show=\"llc.loading\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"alert alert-info\" role=\"alert\" ng-show=\"llc.query.length < llc.minQueryLength\">\n" +
    "            <p>Schrijf een zoekopdracht van minstens 3 karakters in het veld hierboven om labels te zoeken.</p>\n" +
    "            <p>Laat het veld leeg om alle labels op te vragen in alfabetische volgorde.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"llc.query.length >= llc.minQueryLength && llc.searchResult.totalItems === 0\"\n" +
    "             class=\"alert alert-warning\" role=\"alert\">\n" +
    "            Geen labels gevonden.\n" +
    "        </div>\n" +
    "        <div ng-show=\"llc.problem\" class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <span>Er ging iets mis tijdens het zoeken:</span>\n" +
    "            <br>\n" +
    "            <strong ng-bind=\"llc.problem.title\"></strong>\n" +
    "        </div>\n" +
    "        <div class=\"query-search-result\"\n" +
    "             ng-class=\"{'loading-search-result': llc.loading}\"\n" +
    "             ng-show=\"llc.searchResult.totalItems > 0\">\n" +
    "            <div class=\"table-responsive\" >\n" +
    "                <table class=\"table table-hover table-striped\">\n" +
    "                    <thead>\n" +
    "                    <tr>\n" +
    "                        <th>Naam</th>\n" +
    "                        <th>Verborgen</th>\n" +
    "                        <th>Voorbehouden</th>\n" +
    "                        <th>Opties</th>\n" +
    "                    </tr>\n" +
    "                    </thead>\n" +
    "                    <tbody>\n" +
    "                    <tr ng-repeat=\"label in llc.searchResult.member\">\n" +
    "                        <td ng-bind=\"::label.name\"></td>\n" +
    "                        <td ng-bind=\"::(label.visibility === 'invisible' ? 'Verborgen' : '')\"></td>\n" +
    "                        <td ng-bind=\"::(label.privacy === 'private' ? 'Voorbehouden' : '')\"></td>\n" +
    "                        <td>\n" +
    "                            <a ui-sref=\"split.manageLabels.edit({id: label.uuid})\">Bewerken</a>\n" +
    "                        </td>\n" +
    "                    </tr>\n" +
    "                    </tbody>\n" +
    "                </table>\n" +
    "            </div>\n" +
    "            <div class=\"panel-footer\">\n" +
    "                <uib-pagination\n" +
    "                        total-items=\"llc.searchResult.totalItems\"\n" +
    "                        ng-model=\"llc.page\"\n" +
    "                        items-per-page=\"llc.searchResult.itemsPerPage\"\n" +
    "                        max-size=\"10\"\n" +
    "                        ng-change=\"llc.pageChanged(llc.page)\">\n" +
    "                </uib-pagination>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/moderation-offer.html',
    "<p ng-show=\"moc.continueValidation()\" class=\"text-muted\" translate-once=\"moderate.validate\"></p>\n" +
    "\n" +
    "<button ng-if=\"moc.isReadyForValidation()\" type=\"submit\" class=\"btn btn-success btn-moderation\" ng-click=\"moc.approve()\">\n" +
    "    <i class=\"fa fa-flag text-success\"></i><span translate-once=\"moderate.approve\"></span></button>\n" +
    "<button ng-if=\"moc.isReadyForValidation()\" type=\"submit\" class=\"btn btn-danger btn-moderation\" ng-click=\"moc.askForRejectionReasons()\">\n" +
    "    <i class=\"fa fa-flag text-danger\"></i><span translate-once=\"moderate.reject\"></span></button>\n" +
    "\n" +
    "<span ng-if=\"moc.isApproved()\" class=\"offer-approved text-success btn-moderation\">\n" +
    "    <i class=\"fa fa-flag\"></i><span translate-once=\"moderate.approved\"></span>\n" +
    "</span>\n" +
    "<span ng-if=\"moc.isRejected()\" class=\"offer-rejected text-danger btn-moderation\">\n" +
    "    <i class=\"fa fa-flag\"></i><span translate-once=\"moderate.rejected\"></span>\n" +
    "</span>\n" +
    "\n" +
    "<span ng-show=\"moc.continueValidation()\">\n" +
    "    <a ui-sref=\"management.moderation.list\" ui-sref-opts=\"{reload:true}\" id=\"continue-validation\" ng-if=\"(moc.isApproved() || moc.isRejected())\" translate-once=\"moderate.continue_validation\"></a></span>\n"
  );


  $templateCache.put('templates/moderation-summary.html',
    "<article class=\"moderation-summary\">\n" +
    "    <div class=\"error text-danger\" ng-show=\"moc.error\" ng-bind=\"moc.error\"></div>\n" +
    "    <div class=\"text-info\" ng-show=\"moc.loading\"><i class=\"fa fa-circle-o-notch fa-spin\"></i> Moderatie aanbod \"{{moc.offerId}}\" wordt geladen.</div>\n" +
    "\n" +
    "    <div class=\"row\" ng-if=\"!moc.loading\">\n" +
    "        <div class=\"col-md-9\">\n" +
    "            <header class=\"udb-short-info\">\n" +
    "                <span class=\"udb-category\" ng-bind=\"moc.offer.type.label\"></span>\n" +
    "                <span class=\"udb-short-info-seperator\" ng-show=\"moc.offer.type.label && moc.offer.theme.label\"> • </span>\n" +
    "                <span class=\"udb-theme\" ng-bind=\"moc.offer.theme.label\"></span>\n" +
    "\n" +
    "                <a ng-href=\"{{ moc.offer.url  + '/preview' }}\">\n" +
    "                    <h2 ng-bind=\"moc.offer.name\"></h2>\n" +
    "                </a>\n" +
    "            </header>\n" +
    "\n" +
    "            <p class=\"text-muted\">\n" +
    "                <udb-calendar-summary offer=\"::moc.offer\" show-opening-hours=\"true\"></udb-calendar-summary>\n" +
    "            </p>\n" +
    "\n" +
    "            <div class=\"content\" ng-bind-html=\"moc.offer.description\"></div>\n" +
    "\n" +
    "            <a ng-href=\"{{ ::moc.offer.url  + '/preview' }}\">\n" +
    "                Alle info bekijken\n" +
    "            </a> &nbsp;\n" +
    "            <a ng-href=\"{{ ::moc.offer.url  + '/edit' }}\">\n" +
    "                Bewerken\n" +
    "            </a>\n" +
    "        </div>\n" +
    "        <div class=\"col-md-3\" ng-class=\"{muted: !moc.offer.image}\">\n" +
    "            <img ng-if=\"moc.offer.image\" class=\"offer-image-thumbnail center-block\" ng-src=\"{{moc.offer.image+'?maxwidth=150&maxheight=150'}}\" />\n" +
    "            <div class=\"no-img center-block\" ng-if=\"!moc.offer.image\">Geen afbeelding</div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <footer class=\"row\" ng-hide=\"moc.loading\">\n" +
    "        <div class=\"col-md-6\">Toegevoegd door {{moc.offer.creator}}</div>\n" +
    "        <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 text-right\">\n" +
    "            <udb-moderation-offer offer-id=\"{{moc.offerId}}\" continue=\"false\"></udb-moderation-offer>\n" +
    "        </div>\n" +
    "    </footer>\n" +
    "</article>\n"
  );


  $templateCache.put('templates/reject-offer-confirm-modal.html',
    "<div class=\"modal-body\">\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <p>Duid de reden aan voor het afkeuren van dit aanbod:</p>\n" +
    "\n" +
    "        <form>\n" +
    "          <div class=\"checkbox\">\n" +
    "            <label>\n" +
    "              <input type=\"radio\" name=\"type\" ng-model=\"response.type\" value=\"DUPLICATE\"> Dit aanbod bestaat al.\n" +
    "            </label>\n" +
    "          </div>\n" +
    "\n" +
    "          <div class=\"checkbox\">\n" +
    "            <label>\n" +
    "              <input type=\"radio\" name=\"type\" ng-model=\"response.type\" value=\"INAPPROPRIATE\"> Dit aanbod heeft een ongepaste inhoud.\n" +
    "            </label>\n" +
    "          </div>\n" +
    "\n" +
    "          <div class=\"checkbox\">\n" +
    "            <label>\n" +
    "              <input type=\"radio\" name=\"type\" ng-model=\"response.type\" value=\"OTHER\"> Andere, specifieer:\n" +
    "              <input type=\"text\" name=\"reason\" ng-model=\"response.reason\">\n" +
    "            </label>\n" +
    "          </div>\n" +
    "        </form>\n" +
    "\n" +
    "        <div class=\"text-danger\" ng-show=\"error\" ng-bind=\"error\"></div>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\">\n" +
    "    Annuleren\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"reject()\">\n" +
    "    Aanbod afkeuren <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>"
  );


  $templateCache.put('templates/moderation-list.html',
    "<h1 class=\"title\">Valideren</h1>\n" +
    "\n" +
    "<div ng-show=\"moderator.loading && !moderator.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"form-inline\">\n" +
    "            <div class=\"form-group\">\n" +
    "                <label>Valideer als</label>\n" +
    "                <select class=\"form-control\"\n" +
    "                        name=\"role\"\n" +
    "                        ng-change=\"moderator.findModerationContent(moderator.selectedRole)\"\n" +
    "                        ng-model=\"moderator.selectedRole\"\n" +
    "                        ng-options=\"role.name for role in moderator.roles track by role.uuid\">\n" +
    "                </select>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <p class=\"rv-item-counter\">\n" +
    "            <ng-pluralize count=\"moderator.searchResult.totalItems\"\n" +
    "                          when=\"{1: '1 resultaat', other: '{} resultaten'}\"></ng-pluralize>\n" +
    "        </p>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-12\" ng-repeat=\"offer in moderator.searchResult.member\">\n" +
    "        <udb-moderation-summary offer-id=\"{{offer['@id']}}\" offer-type=\"{{offer['@type']}}\">\n" +
    "        </udb-moderation-summary>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"panel-footer\">\n" +
    "            <uib-pagination\n" +
    "                    total-items=\"moderator.searchResult.totalItems\"\n" +
    "                    ng-model=\"moderator.page\"\n" +
    "                    items-per-page=\"moderator.searchResult.itemsPerPage\"\n" +
    "                    max-size=\"10\"\n" +
    "                    ng-change=\"moderator.pageChanged(moderator.page)\">\n" +
    "            </uib-pagination>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organization-delete.modal.html',
    "<div class=\"modal-body\">\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "        <div class=\"col-xs-12\">\n" +
    "            <p>Ben je zeker dat je \"<span ng-bind=\"::odc.organization.name\"></span>\" wil verwijderen? Deze actie kan niet ongedaan worden.</p>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"col-xs-12\">\n" +
    "            <div class=\"alert alert-danger\" ng-show=\"error\">\n" +
    "                Er ging iets fout bij het verwijderen van de organisatie.\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "    <button type=\"button\" class=\"btn btn-default\" ng-click=\"odc.cancelRemoval()\">\n" +
    "        Annuleren\n" +
    "    </button>\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-click=\"odc.deleteOrganization()\">\n" +
    "        Definitief verwijderen <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"odc.saving\"></i>\n" +
    "    </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organizer-edit.html',
    "<h1 class=\"title\" ng-bind=\"oec.originalName\"></h1>\n" +
    "\n" +
    "<div ng-show=\"!oec.organizer && !oec.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-if=\"oec.organizer\">\n" +
    "    <form name=\"oec.organizerEditForm\" class=\"organizer-edit-form\">\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-sm-12 col-md-8\">\n" +
    "                <p class=\"alert alert-danger\" ng-show=\"oec.hasErrors\">\n" +
    "                    <span ng-show=\"oec.organizersWebsiteFound\">Deze URL is al in gebruik door een andere organisatie.<br /></span>\n" +
    "                    <span ng-show=\"oec.websiteError\">Er ging iets mis met het controleren van de website.<br /></span>\n" +
    "                    <span ng-show=\"oec.organizerEditForm.website.$error.required || oec.urlError\">Gelieve een website in te vullen.<br /></span>\n" +
    "                    <span ng-show=\"oec.organizerEditForm.name.$error.required\">Gelieve een naam in te vullen.<br /></span>\n" +
    "                    <span ng-show=\"oec.addressError\">Gelieve een geldig adres in te vullen.<br /></span>\n" +
    "                    <span ng-show=\"oec.contactError\">Gelieve alle contactinfo correct in te vullen.<br /></span>\n" +
    "                    <span ng-show=\"oec.saveError\">Er ging iets mis tijdens het opslaan.<br /></span>\n" +
    "                </p>\n" +
    "\n" +
    "                <div class=\"form-group has-feedback\"\n" +
    "                     ng-class=\"{'has-error' : (oec.organizersWebsiteFound || oec.urlError || oec.organizerEditForm.website.$error.required) && oec.hasErrors }\">\n" +
    "                    <label>Website</label>\n" +
    "                    <input type=\"url\"\n" +
    "                           id=\"organizer-website\"\n" +
    "                           udb-http-prefix\n" +
    "                           name=\"website\"\n" +
    "                           class=\"form-control\"\n" +
    "                           ng-model-options=\"{ debounce: 300 }\"\n" +
    "                           ng-model=\"oec.organizer.url\"\n" +
    "                           ng-change=\"oec.validateWebsite()\"\n" +
    "                           aria-describedby=\"organizer-website-status\"\n" +
    "                           autocomplete=\"off\"\n" +
    "                           required>\n" +
    "                    <span class=\"fa fa-circle-o-notch fa-spin form-control-feedback\" ng-show=\"oec.showWebsiteValidation\" aria-hidden=\"true\"></span>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-sm-12 col-md-8\">\n" +
    "                <div class=\"form-group\" ng-class=\"{'has-error' : oec.nameError && oec.hasErrors }\">\n" +
    "                    <label>Naam</label>\n" +
    "                    <input type=\"text\"\n" +
    "                           name=\"name\"\n" +
    "                           class=\"form-control\"\n" +
    "                           ng-model=\"oec.organizer.name\"\n" +
    "                           ng-change=\"oec.validateName()\"\n" +
    "                           required>\n" +
    "                    <p class=\"help-block\">De officiële publieke naam van de organisatie.</p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </form>\n" +
    "\n" +
    "    <udb-organizer-address address=\"oec.organizer.address\"\n" +
    "                           on-update=\"oec.validateAddress(error)\"></udb-organizer-address>\n" +
    "    <udb-organizer-contact contact=\"oec.contact\"\n" +
    "                           on-update=\"oec.validateContact(error)\"></udb-organizer-contact>\n" +
    "\n" +
    "    <button type=\"button\"\n" +
    "            class=\"btn btn-primary organisator-bewerken-bewaren\"\n" +
    "            ng-disabled=\"oec.disableSubmit || oec.contactError\"\n" +
    "            ng-click=\"oec.validateOrganizer()\">\n" +
    "        Bewaren\n" +
    "    </button>\n" +
    "    <a class=\"btn btn-default organisator-bewerken-annuleren\"\n" +
    "       ng-click=\"oec.cancel()\">Annuleren</a>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-show=\"oec.loadingError\">\n" +
    "    <span ng-bind=\"oec.loadingError\"></span>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organizer-detail.html',
    "<div ng-show=\"!odc.organizer && !odc.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<h1 class=\"title\" ng-bind=\"odc.organizer.name\"></h1>\n" +
    "\n" +
    "<div class=\"row\" ng-if=\"odc.organizer\">\n" +
    "  <div class=\"col-sm-3 col-sm-push-9\">\n" +
    "    <div class=\"list-group\" ng-if=\"!odc.organizer.deleted\">\n" +
    "      <button class=\"list-group-item\"\n" +
    "         type=\"button\"\n" +
    "         ui-sref=\"management.organizers.edit({id: odc.organizer.id})\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Bewerken</button>\n" +
    "      <button class=\"list-group-item\"\n" +
    "              ng-click=\"odc.deleteOrganization()\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Verwijderen</button>\n" +
    "      <button class=\"list-group-item\"\n" +
    "         ui-sref=\"management.organizers.search({id: odc.organizer.id})\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Terug naar overzicht</button>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <div class=\"col-sm-9 col-sm-pull-3\">\n" +
    "    <table ng-if=\"odc.organizer && !odc.organizer.deleted\" class=\"table udb3-data-table\">\n" +
    "      <colgroup>\n" +
    "        <col style=\"width:20%\"/>\n" +
    "        <col style=\"width:80%\"/>\n" +
    "      </colgroup>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <span class=\"row-label\">Naam</span>\n" +
    "        </td>\n" +
    "        <td>\n" +
    "          <span ng-bind=\"odc.organizer.name\"></span>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <span class=\"row-label\">Adres</span>\n" +
    "        </td>\n" +
    "        <td>\n" +
    "          <span ng-bind=\"odc.organizer.address.streetAddress\"></span><br/>\n" +
    "          <span ng-bind=\"odc.organizer.address.postalCode\"></span> <span ng-bind=\"odc.organizer.address.addressLocality\"></span>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <span class=\"row-label\">Website</span>\n" +
    "        </div>\n" +
    "        <td>\n" +
    "          <span ng-bind=\"odc.organizer.url\"></span>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <span class=\"row-label\">Telefoonnummer</span>\n" +
    "        </div>\n" +
    "        <td>\n" +
    "          <span ng-bind=\"odc.organizer.phone\"></span>\n" +
    "        </td>\n" +
    "      </div>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <span class=\"row-label\">E-mailadres</span>\n" +
    "        </td>\n" +
    "        <td>\n" +
    "          <span ng-bind=\"odc.organizer.email\"></span>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "      <tr>\n" +
    "        <td>\n" +
    "          <span class=\"row-label\">Labels</span>\n" +
    "          <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"labelSaving\"></i>\n" +
    "        </td>\n" +
    "        <td>\n" +
    "          <udb-label-select labels=\"odc.organizer.labels\"\n" +
    "                            label-added=\"odc.addLabel(label)\"\n" +
    "                            label-removed=\"odc.deleteLabel(label)\"></udb-label-select>\n" +
    "          <div ng-if=\"odc.labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "              <span ng-bind=\"odc.labelsError\"></span>\n" +
    "          </div>\n" +
    "        </td>\n" +
    "      </tr>\n" +
    "    </table>\n" +
    "\n" +
    "    <div class=\"alert alert-danger\" ng-if=\"odc.organizer && odc.organizer.deleted\">\n" +
    "      Deze organisatie is verwijderd.\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-show=\"odc.loadingError\">\n" +
    "        <span ng-bind=\"odc.loadingError\"></span>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/organization-search-item.html',
    "<tr class=\"organization-search-item\" ng-class=\"{'deleted': osic.organizationDeleted}\" ng-if=\"::osic.organization\">\n" +
    "    <td><strong><a ng-bind=\"::osic.organization.name\" ui-sref=\"management.organizers.detail({id: osic.organization.id})\"></a></strong></td>\n" +
    "    <td>\n" +
    "        <span ng-bind=\"::osic.organization.address.streetAddress\"></span>\n" +
    "        <br>\n" +
    "        <span ng-bind=\"::osic.organization.address.addressLocality\"></span>\n" +
    "    </td>\n" +
    "    <td>\n" +
    "        <span ng-bind=\"::osic.organization.created | amDateFormat:'DD/MM/YYYY HH:mm'\"></span>\n" +
    "        <span class=\"organization-search-item-email\" ng-if=\"::osic.organization.email\">\n" +
    "            <br><span ng-bind=\"::osic.organization.email\"></span>\n" +
    "        </span>\n" +
    "        <span class=\"organization-search-item-url\" ng-if=\"::osic.organization.url\">\n" +
    "            <br><a ng-href=\"{{::osic.organization.url}}\" target=\"_blank\" ng-bind=\"::osic.organization.url\"></a>\n" +
    "        </span>\n" +
    "    </td>\n" +
    "    <td class=\"text-right\">\n" +
    "        <div class=\"pull-right btn-group\" uib-dropdown>\n" +
    "            <a class=\"btn btn-default\" ui-sref=\"management.organizers.edit({id: osic.organization.id})\">Bewerken</a>\n" +
    "            <button type=\"button\" class=\"btn btn-default\" uib-dropdown-toggle><span class=\"caret\"></span></button>\n" +
    "            <ul uib-dropdown-menu role=\"menu\">\n" +
    "                <li role=\"menuitem\">\n" +
    "                    <a ui-sref=\"management.organizers.search.delete({id: osic.organization.id})\">Verwijderen</a>\n" +
    "                </li>\n" +
    "            </ul>\n" +
    "        </div>\n" +
    "    </td>\n" +
    "</tr>\n"
  );


  $templateCache.put('templates/organization-search.html',
    "<h1 class=\"title\">Organisaties</h1>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-6\">\n" +
    "        <udb-query-search-bar search-label=\"Zoeken op organisatie naam\"\n" +
    "                              on-change=\"$ctrl.queryChanged(query)\"></udb-query-search-bar>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-1\">\n" +
    "        <i ng-show=\"$ctrl.loading\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-5 text-right\">\n" +
    "        <a class=\"btn btn-primary\" ui-sref=\"management.organizers.search.create\">\n" +
    "            <i class=\"fa fa-plus-circle\"></i> Organisatie toevoegen\n" +
    "        </a>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"alert alert-info\" role=\"alert\" ng-show=\"$ctrl.query.length < $ctrl.minQueryLength\">\n" +
    "            <p>Schrijf een zoekopdracht van minstens 3 karakters in het veld hierboven om organisaties te zoeken.</p>\n" +
    "            <p>Laat het veld leeg om alle organisaties op te vragen in alfabetische volgorde.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"$ctrl.query.length >= $ctrl.minQueryLength && $ctrl.searchResult.totalItems === 0\"\n" +
    "             class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <p>Geen organisaties gevonden.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"$ctrl.problem\" class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <span>Er ging iets mis tijdens het zoeken:</span>\n" +
    "            <br>\n" +
    "            <strong ng-bind=\"$ctrl.problem.title\"></strong>\n" +
    "        </div>\n" +
    "        <div class=\"query-search-result organization-search-results\"\n" +
    "             ng-class=\"{'loading-search-result': $ctrl.loading}\"\n" +
    "             ng-show=\"$ctrl.searchResult.totalItems > 0\">\n" +
    "          <div class=\"panel panel-default\">\n" +
    "            <table class=\"table\">\n" +
    "                <thead>\n" +
    "                <tr>\n" +
    "                    <th>Naam</th>\n" +
    "                    <th>Adres</th>\n" +
    "                    <th></th>\n" +
    "                    <th class=\"text-right\">Opties</th>\n" +
    "                </tr>\n" +
    "                </thead>\n" +
    "                <tbody udb-organization-search-item=\"organization\" ng-repeat=\"organization in $ctrl.searchResult.member\">\n" +
    "                </tbody>\n" +
    "            </table>\n" +
    "            <div class=\"panel-footer\">\n" +
    "                <uib-pagination\n" +
    "                        total-items=\"$ctrl.searchResult.totalItems\"\n" +
    "                        ng-model=\"$ctrl.page\"\n" +
    "                        items-per-page=\"$ctrl.searchResult.itemsPerPage\"\n" +
    "                        max-size=\"10\"\n" +
    "                        ng-change=\"$ctrl.pageChanged($ctrl.page)\">\n" +
    "                </uib-pagination>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/role-delete-confirm-modal.html',
    "<div class=\"modal-body\">\n" +
    "    <div class=\"row\">\n" +
    "\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <p>Ben je zeker dat je \"<span ng-bind=\"::item.name\"></span>\" wil verwijderen? Deze actie kan niet ongedaan worden.</p>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-xs-12\">\n" +
    "        <div class=\"alert alert-danger\" ng-show=\"error\">\n" +
    "          Er ging iets fout bij het verwijderen van de rol.\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancelRemoval()\">\n" +
    "    Annuleren\n" +
    "  </button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"deleteRole()\">\n" +
    "    Definitief verwijderen <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/role-form.html',
    "<h1 class=\"title\">Role bewerken</h1>\n" +
    "\n" +
    "<div ng-show=\"!editor.loadedRole && !editor.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<form name=\"editor.form\" class=\"css-form\" novalidate>\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-md-6\">\n" +
    "            <div class=\"form-group\" udb-form-group ng-if=\"!editor.editName && editor.role.name && editor.role['uuid']\">\n" +
    "              <label class=\"control-label\">Naam</label>\n" +
    "              <p><span ng-bind=\"editor.role.name\"></span>\n" +
    "              <a href ng-click=\"editor.editName = true\">Wijzigen</a></p>\n" +
    "            </div>\n" +
    "            <div class=\"form-group\" udb-form-group ng-if=\"editor.editName || !editor.role['uuid']\">\n" +
    "                <label class=\"control-label\" for=\"label-name-field\">Naam</label>\n" +
    "                <input id=\"label-name-field\"\n" +
    "                       class=\"form-control\"\n" +
    "                       name=\"name\"\n" +
    "                       type=\"text\"\n" +
    "                       ng-minlength=\"3\"\n" +
    "                       ng-required=\"true\"\n" +
    "                       ng-maxlength=\"255\"\n" +
    "                       ng-model=\"editor.role.name\"\n" +
    "                       ng-disabled=\"editor.saving\">\n" +
    "                <p class=\"help-block\" ng-if=\"editor.form.name.$error.required\">Een role naam is verplicht.</p>\n" +
    "                <p class=\"help-block\" ng-if=\"editor.form.name.$error.maxlength\">Een role mag maximum 255 tekens bevatten.</p>\n" +
    "                <p class=\"help-block\" ng-if=\"editor.form.name.$error.minlength\">Een role moet uit minstens 3 tekens bestaan.</p>\n" +
    "\n" +
    "            </div>\n" +
    "            <button ng-disabled=\"!editor.form.$valid || editor.saving\"\n" +
    "              ng-if=\"!editor.role['uuid']\"\n" +
    "              type=\"button\"\n" +
    "              class=\"btn btn-primary\"\n" +
    "              ng-click=\"editor.createRole()\">\n" +
    "              Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "            </button>\n" +
    "\n" +
    "            <button ng-disabled=\"!editor.form.$valid || editor.saving\"\n" +
    "              ng-if=\"editor.editName\"\n" +
    "              type=\"button\"\n" +
    "              class=\"btn btn-primary\"\n" +
    "              ng-click=\"editor.updateName()\">\n" +
    "              Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "            </button>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <div class=\"row\" ng-show=\"editor.role['uuid']\">\n" +
    "        <div class=\"col-md-12\">\n" +
    "            <div class=\"form-group\" udb-form-group ng-if=\"!editor.editConstraint\">\n" +
    "              <label class=\"control-label\">Bewerkrecht</label>\n" +
    "              <p><span ng-bind=\"editor.role.constraint\"></span>\n" +
    "              <a href ng-click=\"editor.editConstraint = true\">Wijzigen</a></p>\n" +
    "            </div>\n" +
    "            <div class=\"form-group\" udb-form-group ng-if=\"editor.editConstraint\">\n" +
    "                <label class=\"control-label\" for=\"label-name-field\">Bewerkrecht</label>\n" +
    "                <input id=\"label-name-field\"\n" +
    "                       class=\"form-control\"\n" +
    "                       name=\"constraint\"\n" +
    "                       type=\"text\"\n" +
    "                       ng-maxlength=\"255\"\n" +
    "                       ng-model=\"editor.role.constraint\"\n" +
    "                       ng-disabled=\"editor.saving\">\n" +
    "            </div>\n" +
    "            <button ng-disabled=\"!editor.form.$valid || editor.saving\"\n" +
    "              type=\"button\"\n" +
    "              class=\"btn btn-primary\"\n" +
    "              ng-if=\"editor.editConstraint\"\n" +
    "              ng-click=\"editor.updateConstraint()\">\n" +
    "              Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "            </button>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <div class=\"row\" ng-show=\"editor.role['uuid']\">\n" +
    "      <div class=\"col-md-12\">\n" +
    "        <uib-tabset class=\"role-form-tabset\">\n" +
    "          <uib-tab heading=\"Permissies\">\n" +
    "            <div class=\"row\">\n" +
    "              <div class=\"col-md-6\">\n" +
    "                  <input class=\"form-control permission-searchbar\" placeholder=\"Zoeken op naam\" ng-model=\"permissionSearch\">\n" +
    "              </div>\n" +
    "              <div class=\"col-md-1\">\n" +
    "                <i ng-show=\"!editor.loadedRolePermissions\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "              </div>\n" +
    "            </div>\n" +
    "            <div class=\"col-md-12\">\n" +
    "                <div class=\"checkbox\" ng-repeat=\"permission in editor.availablePermissions | filter: permissionSearch\">\n" +
    "                  <label>\n" +
    "                        <input  type=\"checkbox\"\n" +
    "                                name=\"editor.role.permissions[]\"\n" +
    "                                value=\"{{permission.key}}\"\n" +
    "                                ng-checked=\"!!(editor.role.permissions | filter: {key: permission.key}).length\"\n" +
    "                                ng-click=\"editor.updatePermission(permission)\"\n" +
    "                        > <strong ng-bind=\"permission.name\"></strong>\n" +
    "                  </label>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "          </uib-tab>\n" +
    "          <uib-tab heading=\"Leden\">\n" +
    "              <div class=\"row\">\n" +
    "                  <div class=\"col-md-11 form-inline\">\n" +
    "                          <label class=\"control-label\">Voeg lid toe</label>\n" +
    "                          <input placeholder=\"E-mailadres\"\n" +
    "                                 id=\"email\"\n" +
    "                                 type=\"email\"\n" +
    "                                 name=\"email\"\n" +
    "                                 data-ng-model=\"editor.email\"\n" +
    "                                 class=\"form-control\" />\n" +
    "                          <button type=\"submit\"\n" +
    "                                  class=\"btn btn-primary\"\n" +
    "                                  ng-click=\"editor.addUser()\"\n" +
    "                                  ng-disabled=\"!editor.form.$valid || editor.addingUser\">\n" +
    "                              Toevoegen <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.addingUser\"></i>\n" +
    "                          </button>\n" +
    "                  </div>\n" +
    "                  <div class=\"col-md-1\">\n" +
    "                      <i ng-show=\"!editor.loadedRoleUsers\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "                  </div>\n" +
    "              </div>\n" +
    "              <div class=\"row\">\n" +
    "                  <div class=\"col-md-12\" ng-show=\"editor.role.users.length && editor.loadedRoleUsers\">\n" +
    "                    <table class=\"table\">\n" +
    "                        <thead>\n" +
    "                          <tr>\n" +
    "                              <th>E-mailadres</th>\n" +
    "                              <th>Verwijderen</th>\n" +
    "                          </tr>\n" +
    "                        </thead>\n" +
    "                        <tbody>\n" +
    "                          <tr ng-repeat=\"user in editor.role.users\">\n" +
    "                              <td ng-bind=\"::user.email\"></td>\n" +
    "                              <td><a href ng-click=\"editor.removeUser(user)\">Lidmaatschap verwijderen</a></td>\n" +
    "                          </tr>\n" +
    "                        </tbody>\n" +
    "                    </table>\n" +
    "                  </div>\n" +
    "                  <div class=\"col-md-12\" ng-hide=\"editor.role.users.length\">\n" +
    "                      Er hangen nog geen gebruikers aan deze rol. Voeg een gebruiker aan deze rol toe door zijn/haar e-mailadres hierboven in te geven.\n" +
    "                  </div>\n" +
    "              </div>\n" +
    "          </uib-tab>\n" +
    "          <uib-tab heading=\"Labels\">\n" +
    "            <div class=\"row\">\n" +
    "              <div class=\"col-md-6 form-group\">\n" +
    "                <label class=\"control-label\">Voeg een label toe</label>\n" +
    "                <udb-search-label role=\"editor.role\"\n" +
    "                                  label-added=\"editor.addLabel(label)\">\n" +
    "              </div>\n" +
    "            </div><!-- /row -->\n" +
    "            <div class=\"row\">\n" +
    "              <div class=\"col-md-12\" ng-show=\"editor.role.labels.length && editor.loadedRoleLabels\">\n" +
    "                <table class=\"table\">\n" +
    "                    <thead>\n" +
    "                      <tr>\n" +
    "                          <th>Toegevoegde labels</th>\n" +
    "                          <th>Verwijderen</th>\n" +
    "                          <th></th>\n" +
    "                      </tr>\n" +
    "                    </thead>\n" +
    "                    <tbody>\n" +
    "                      <tr ng-repeat=\"label in editor.role.labels\">\n" +
    "                          <td ng-bind=\"::label.name\"></td>\n" +
    "                          <td><a href ng-click=\"editor.removeLabel(label)\">Lidmaatschap verwijderen</a></td>\n" +
    "                          <td><span class=\"text-danger\" ng-if=\"label.privacy === 'public'\">Dit label is niet voorbehouden</span></td>\n" +
    "                      </tr>\n" +
    "                    </tbody>\n" +
    "                </table>\n" +
    "              </div>\n" +
    "              <div class=\"col-md-12\" ng-hide=\"editor.role.labels.length\">\n" +
    "                  Er hangen nog geen labels aan deze rol.\n" +
    "              </div>\n" +
    "            </div><!-- /row -->\n" +
    "          </uib-tab>\n" +
    "        </uib-tabset>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/roles-list.html',
    "<h1 class=\"title\">Rollen <small><a ui-sref=\"split.manageRoles.create\" ui-sref-opts=\"{reload:true}\">toevoegen</a></small></h1>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-9\">\n" +
    "        <udb-query-search-bar search-label=\"Zoeken op rolnaam\"\n" +
    "                              on-change=\"rlc.queryChanged(query)\"\n" +
    "        ></udb-query-search-bar>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-1\">\n" +
    "        <i ng-show=\"rlc.loading\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-2 text-right\">\n" +
    "        <a class=\"btn btn-primary\" ui-sref=\"split.manageRoles.create\" ui-sref-opts=\"{reload:true}\">\n" +
    "            <i class=\"fa fa-plus-circle\"></i> Rol toevoegen\n" +
    "        </a>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"alert alert-info\" role=\"alert\" ng-show=\"rlc.query.length < rlc.minQueryLength\">\n" +
    "            <p>Schrijf een zoekopdracht van minstens 3 karakters in het veld hierboven om rollen te zoeken.</p>\n" +
    "            <p>Laat het veld leeg om alle rollen op te vragen in alfabetische volgorde.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"rlc.query.length >= rlc.minQueryLength && rlc.searchResult.totalItems === 0\"\n" +
    "             class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <p>Geen rollen gevonden.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"rlc.problem\" class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <span>Er ging iets mis tijdens het zoeken:</span>\n" +
    "            <br>\n" +
    "            <strong ng-bind=\"rlc.problem.title\"></strong>\n" +
    "        </div>\n" +
    "        <div class=\"query-search-result roles-results\"\n" +
    "             ng-class=\"{'loading-search-result': rlc.loading}\"\n" +
    "             ng-show=\"rlc.searchResult.totalItems > 0\">\n" +
    "                <table class=\"table table-hover table-striped\">\n" +
    "                    <thead>\n" +
    "                    <tr>\n" +
    "                        <th>Naam</th>\n" +
    "                        <th>Opties</th>\n" +
    "                    </tr>\n" +
    "                    </thead>\n" +
    "                    <tbody>\n" +
    "                    <tr ng-repeat=\"role in rlc.searchResult.member\">\n" +
    "                        <td ng-bind=\"::role.name\"></td>\n" +
    "                        <td>\n" +
    "                            <div class=\"btn-group\">\n" +
    "                                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n" +
    "                                    Bewerken <span class=\"caret\"></span></button>\n" +
    "                                <ul class=\"dropdown-menu\">\n" +
    "                                    <li><a ui-sref=\"split.manageRoles.edit({id: role.uuid})\" ui-sref-opts=\"{reload:true}\">Bewerken</a></li>\n" +
    "                                    <li><a href ng-click=\"rlc.openDeleteConfirmModal(role)\">Verwijderen</a></li>\n" +
    "                                </ul>\n" +
    "                            </div>\n" +
    "                            </td>\n" +
    "                    </tr>\n" +
    "                    </tbody>\n" +
    "                </table>\n" +
    "            <div class=\"panel-footer\">\n" +
    "                <uib-pagination\n" +
    "                        total-items=\"rlc.searchResult.totalItems\"\n" +
    "                        ng-model=\"rlc.page\"\n" +
    "                        items-per-page=\"rlc.searchResult.itemsPerPage\"\n" +
    "                        max-size=\"10\"\n" +
    "                        ng-change=\"rlc.pageChanged(rlc.page)\">\n" +
    "                </uib-pagination>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/search-label.html',
    "<ui-select ng-model=\"select.label\"\n" +
    "           reset-search-input=\"true\"\n" +
    "           on-select=\"select.labelAdded({label: $item})\">\n" +
    "    <ui-select-match placeholder=\"Voeg een label toe...\">{{$item.name}}</ui-select-match>\n" +
    "    <ui-select-no-choice ng-show=\"$select.search.length >= select.minimumInputLength &&\">\n" +
    "        <div class=\"udb-label-select-refreshing\" style=\"padding: 3px 20px\">\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\"></i> Suggesties laden\n" +
    "        </div>\n" +
    "    </ui-select-no-choice>\n" +
    "    <ui-select-choices repeat=\"label in select.availableLabels track by label.name\"\n" +
    "                       ng-show=\"$select.search.length >= select.minimumInputLength &&\"\n" +
    "                       ui-disable-choice=\"select.refreshing\"\n" +
    "                       refresh=\"select.suggestLabels($select.search)\"\n" +
    "                       refresh-delay=\"0\"\n" +
    "                       minimum-input-length=\"{{select.minimumInputLength}}\">\n" +
    "        <div>\n" +
    "            <span ng-bind-html=\"label.name | highlight: $select.search\"></span>\n" +
    "            <span ng-if=\"!label.uuid\"> (nieuw label toevoegen)</span>\n" +
    "        </div>\n" +
    "    </ui-select-choices>\n" +
    "</ui-select>\n"
  );


  $templateCache.put('templates/user-editor.html',
    "<h1 class=\"title\">Gebruiker bewerken</h1>\n" +
    "\n" +
    "<div ng-show=\"!editor.user && !editor.loadingError\">\n" +
    "    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-show=\"editor.user\">\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-md-3\">\n" +
    "            <span>E-mailadres</span>\n" +
    "        </div>\n" +
    "        <div class=\"col-md-9\">\n" +
    "            <span ng-bind=\"editor.user.email\"></span>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-md-3\">\n" +
    "            <span>Nick</span>\n" +
    "        </div>\n" +
    "        <div class=\"col-md-9\">\n" +
    "            <span ng-bind=\"editor.user.username\"></span>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n" +
    "<br>\n" +
    "<div class=\"panel panel-primary\">\n" +
    "    <div class=\"panel-heading\">\n" +
    "        <h3 class=\"panel-title\">Rollen</h3>\n" +
    "    </div>\n" +
    "    <div class=\"panel-body\">\n" +
    "        <form class=\"form-inline\" role=\"search\">\n" +
    "            <div class=\"form-group\">\n" +
    "                <label for=\"role-lookup\">Rol toevoegen</label>\n" +
    "                <input type=\"text\"\n" +
    "                       id=\"role-lookup\"\n" +
    "                       class=\"form-control uib-typeahead\"\n" +
    "                       placeholder=\"rol naam\"\n" +
    "                       ng-model=\"editor.roleLookupName\"\n" +
    "                       ng-disabled=\"editor.saving\"\n" +
    "                       uib-typeahead=\"role.name for role in editor.lookupRoles($viewValue)\"\n" +
    "                       typeahead-loading=\"editor.lookingForRoles\"\n" +
    "                       typeahead-on-select=\"editor.addRole($item)\"\n" +
    "                       typeahead-min-length=\"3\"\n" +
    "                       typeahead-template-url=\"templates/user-role-suggestion.html\"/>\n" +
    "            </div>\n" +
    "        </form>\n" +
    "        <br>\n" +
    "        <p ng-show=\"editor.roles && editor.roles.length === 0\">\n" +
    "            Er zijn nog geen rollen toegekend aan deze gebruiker.\n" +
    "        </p>\n" +
    "    </div>\n" +
    "    <ul class=\"list-group\" ng-show=\"editor.roles\">\n" +
    "        <li class=\"list-group-item\" ng-repeat=\"role in editor.roles\" ng-class=\"editor.getRoleStyle(role)\">\n" +
    "            <a ui-sref=\"split.manageRoles.edit({id: role.uuid})\" ng-bind=\"role.name\"></a>\n" +
    "            <button type=\"button\" class=\"btn btn-link pull-right\"\n" +
    "                    ng-if=\"!editor.getRoleStyle(role)\"\n" +
    "                    ng-click=\"editor.deleteRole(role)\">Verwijderen</button>\n" +
    "            <button type=\"button\" class=\"btn btn-link pull-right\"\n" +
    "                    ng-if=\"editor.getRoleStyle(role)\"\n" +
    "                    ng-click=\"editor.undoAction(role)\">\n" +
    "                <i class=\"fa fa-undo\" aria-hidden=\"true\"></i>\n" +
    "            </button>\n" +
    "        </li>\n" +
    "    </ul>\n" +
    "    <div class=\"panel-footer\" ng-show=\"!editor.roles && !editor.rolesLoadingError\">\n" +
    "        <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-12 text-right\">\n" +
    "        <button ng-disabled=\"editor.actions.length === 0 || editor.saving\"\n" +
    "                type=\"button\"\n" +
    "                class=\"btn btn-primary\"\n" +
    "                ng-click=\"editor.save()\">\n" +
    "            Opslaan <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"editor.saving\"></i>\n" +
    "        </button>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-show=\"editor.loadingError\">\n" +
    "    <span ng-bind=\"editor.loadingError\"></span>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/user-role-suggestion.html',
    "<a href tabindex=\"-1\" ng-bind-html=\"match.model.name | uibTypeaheadHighlight:query\"></a>"
  );


  $templateCache.put('templates/users-list.html',
    "<h1 class=\"title\">Gebruikers</h1>\n" +
    "\n" +
    "<div class=\"row\">\n" +
    "    <div class=\"col-md-11\">\n" +
    "        <udb-query-search-bar search-label=\"Zoeken op email\"\n" +
    "                              on-change=\"ulc.queryChanged(query)\"\n" +
    "        ></udb-query-search-bar>\n" +
    "    </div>\n" +
    "    <div class=\"col-md-1 text-right\">\n" +
    "        <i ng-show=\"ulc.loading\" class=\"fa fa-circle-o-notch fa-spin\"></i>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"row search-result-block\" ng-cloak>\n" +
    "    <div class=\"col-md-12\">\n" +
    "        <div class=\"alert alert-info\" ng-show=\"ulc.query.length < ulc.minQueryLength\" role=\"alert\">\n" +
    "            <p>Schrijf een geldig email-adres in het veld hierboven om gebruikers te zoeken.</p>\n" +
    "            <p>Gebruik de wildcard <strong>*</strong> om naar meerdere gebruikers van hetzelfde domein te zoeken, e.g. <strong>dirk*@cultuurnet.be</strong></p>\n" +
    "            <p>Laat het veld leeg om alle gebruikers op te vragen in de volgorde dat ze zijn aangemaakt.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"ulc.query.length >= ulc.minQueryLength && ulc.searchResult.totalItems === 0\"\n" +
    "             class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <p>Geen gebruikers gevonden.</p>\n" +
    "        </div>\n" +
    "        <div ng-show=\"ulc.problem\" class=\"alert alert-warning\" role=\"alert\">\n" +
    "            <span>Er ging iets mis tijdens het zoeken:</span>\n" +
    "            <br>\n" +
    "            <strong ng-bind=\"ulc.problem.title\"></strong>\n" +
    "        </div>\n" +
    "        <div class=\"query-search-result users-results\"\n" +
    "             ng-class=\"{'loading-search-result': ulc.loading}\"\n" +
    "             ng-show=\"ulc.searchResult.totalItems > 0\">\n" +
    "                <table class=\"table table-hover table-striped\">\n" +
    "                    <thead>\n" +
    "                    <tr>\n" +
    "                        <th>E-mail</th>\n" +
    "                        <th>Nick</th>\n" +
    "                        <th>Opties</th>\n" +
    "                    </tr>\n" +
    "                    </thead>\n" +
    "                    <tbody>\n" +
    "                    <tr ng-repeat=\"user in ulc.searchResult.member\">\n" +
    "                        <td ng-bind=\"::user.email\"></td>\n" +
    "                        <td ng-bind=\"::user.username\"></td>\n" +
    "                        <td>\n" +
    "                            <button type=\"button\" ui-sref=\"management.users.edit({id: user.uuid})\" class=\"btn btn-default\">Bewerken</button>\n" +
    "                        </td>\n" +
    "                    </tr>\n" +
    "                    </tbody>\n" +
    "                </table>\n" +
    "            <div class=\"panel-footer\">\n" +
    "                <uib-pagination\n" +
    "                        total-items=\"ulc.searchResult.totalItems\"\n" +
    "                        ng-model=\"ulc.page\"\n" +
    "                        items-per-page=\"ulc.searchResult.itemsPerPage\"\n" +
    "                        max-size=\"10\"\n" +
    "                        ng-change=\"ulc.pageChanged(ulc.page)\">\n" +
    "                </uib-pagination>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-migration-footer.component.html',
    "<div class=\"event-validation\">\n" +
    "    <a class=\"btn btn-success\"\n" +
    "       ng-click=\"migration.completeMigration()\"\n" +
    "       role=\"button\"\n" +
    "       ng-class=\"{disabled: !migration.migrationReady()}\"\n" +
    "       ng-bind=\"::migration.destination.description\"></a>\n" +
    "</div>"
  );


  $templateCache.put('templates/event-migration.html',
    "<div class=\"offer-form\" ng-if=\"loaded\">\n" +
    "    <div class=\"alert alert-danger\" role=\"alert\">\n" +
    "        <strong>Deze activiteit werd ingevoerd in de vorige versie van UiTdatabank.</strong><br>\n" +
    "        Om deze te kunnen bewerken, is het nodig om de eerder gekozen locatie en adres éénmalig opnieuw te selecteren of in te voeren.\n" +
    "    </div>\n" +
    "\n" +
    "    <udb-event-form-step3></udb-event-form-step3>\n" +
    "\n" +
    "    <udb-event-migration-footer></udb-event-migration-footer>\n" +
    "</div>\n" +
    "\n"
  );


  $templateCache.put('templates/translate-address.html',
    "<section class=\"translate-section\">\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong><span translate-once=\"translate.address\"></span></strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.original\"></span></p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <p class=\"text-muted\">\n" +
    "                      <span ng-bind=\"tac.originalAddress.streetAddress\"></span><br/>\n" +
    "                      <span ng-bind=\"tac.originalAddress.postalCode\"></span> \n" +
    "                      <span ng-bind=\"tac.originalAddress.addressLocality\"></span>\n" +
    "                    </p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in tac.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.translation\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    \n" +
    "                    <input type=\"text\" ng-blur=\"tac.saveTranslatedAddress(code)\" class=\"form-control form-group\" ng-model=\"tac.translatedAddresses[code].streetAddress\" placeholder=\"{{ 'translate.street' | translate }}\">\n" +
    "                    <div class=\"row\">\n" +
    "                      <div class=\"col-xs-3\">\n" +
    "                        <span class=\"text-muted text-right form-control-static\" ng-bind=\"::tac.translatedAddresses[code].postalCode\"></span>\n" +
    "                      </div>\n" +
    "                      <div class=\"col-xs-9\">\n" +
    "                        <input type=\"text\" ng-blur=\"tac.saveTranslatedAddress(code)\" class=\"form-control form-group\" ng-model=\"tac.translatedAddresses[code].addressLocality\">\n" +
    "                      </dvi>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/translate-description.html',
    "<section class=\"translate-section\" ng-show=\"ttd.originalDescription\">\n" +
    "    <div class=\"row\" >\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong translate-once=\"translate.description\"></strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\" translate-once=\"translate.original\"></p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <p class=\"text-muted\" ng-bind=\"ttd.originalDescription\"></p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in ttd.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.translation\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <textarea ng-blur=\"ttd.saveTranslatedDescription(code)\" class=\"form-control form-group\" ng-model=\"ttd.translatedDescriptions[code]\"></textarea>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/translate-images.html',
    "<section class=\"translate-section\" ng-show=\"tic.offer.mediaObject.length > 0\">\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong>Afbeelding(en)</strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\">Origineel</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <div class=\"panel panel-default\">\n" +
    "                        <div class=\"panel-body\">\n" +
    "                            <div ng-repeat=\"image in tic.eventFormData.mediaObjects | filter:{'@type': 'schema:ImageObject', 'inLanguage': tic.offer.mainLanguage} track by image.contentUrl\" class=\"media-object\">\n" +
    "                                <div class=\"uploaded-image media\">\n" +
    "\n" +
    "                                  <div class=\"media-left\">\n" +
    "                                    <img ng-src=\"{{ image.thumbnailUrl }}?width=50&height=50\" style=\"width: 50px;\">\n" +
    "                                  </div>\n" +
    "\n" +
    "                                  <div class=\"media-body\">\n" +
    "                                    <div ng-bind=\"image.description\"></div>\n" +
    "                                    <div class=\"text-muted\">&copy; <span ng-bind=\"image.copyrightHolder\"><span translate-once=\"eventForm.step5.copyright\"></span></span></div>\n" +
    "                                  </div>\n" +
    "\n" +
    "                                </div>\n" +
    "                              \n" +
    "                              <!-- Single button -->\n" +
    "                              <div class=\"btn-group\">\n" +
    "                                  <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n" +
    "                                      Kopieren in een andere taal <span class=\"caret\"></span>\n" +
    "                                  </button>\n" +
    "                                  <ul class=\"dropdown-menu\">\n" +
    "                                      <li ng-repeat=\"(code, language) in tic.activeLanguages\" ng-if=\"language.active && !language.main\"><button ng-click=\"tic.copyImage(image, code)\" class=\"btn-link\">{{code}}</button></li>\n" +
    "                                  </ul>\n" +
    "                              </div>\n" +
    "                              \n" +
    "                            </div>\n" +
    "\n" +
    "\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in tic.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.translation\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <div class=\"panel panel-default\">\n" +
    "                        <div class=\"panel-body\">\n" +
    "                            <div ng-repeat=\"image in tic.eventFormData.mediaObjects | filter:{'@type': 'schema:ImageObject', 'inLanguage': code} track by image.contentUrl\" class=\"media-object\">\n" +
    "                                <div class=\"uploaded-image\">\n" +
    "                                    <div class=\"media\" ng-class=\"{'main-image': ($index === 0)}\">\n" +
    "                                        <a class=\"media-left\" href=\"#\">\n" +
    "                                            <img ng-src=\"{{ image.thumbnailUrl }}?width=50&height=50\" style=\"width: 50px;\">\n" +
    "                                        </a>\n" +
    "\n" +
    "                                        <div class=\"media-body\">\n" +
    "                                            <div ng-bind=\"image.description\"></div>\n" +
    "                                            <div class=\"text-muted\">&copy; <span ng-bind=\"image.copyrightHolder\"><span translate-once=\"eventForm.step5.copyright\"></span></span></div>\n" +
    "                                        </div>\n" +
    "\n" +
    "                                        <div class=\"media-actions\">\n" +
    "                                            <a class=\"btn btn-xs btn-primary\" ng-click=\"tic.editImage(image)\" translate-once=\"eventForm.step5.change\"></a>\n" +
    "                                            <a class=\"btn btn-xs btn-danger\" ng-click=\"tic.removeImage(image)\" translate-once=\"eventForm.step5.delete\"></a>\n" +
    "                                        </div>\n" +
    "\n" +
    "                                    </div>\n" +
    "                                </div>\n" +
    "                            </div>\n" +
    "                            <a class=\"btn btn-default\"\n" +
    "                               href=\"#\"\n" +
    "                               translate-once=\"eventForm.step5.add_image\"\n" +
    "                               ng-click=\"tic.openUploadImageModal(code)\"></a>\n" +
    "                        </div>\n" +
    "                    </div>\n" +
    "\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/translate-tariffs.html',
    "<section class=\"translate-section\" ng-show=\"ttsc.originalTariffs.length > 0\">\n" +
    "    <div class=\"row\" ng-repeat=\"originalTariff in ttsc.originalTariffs track by $index\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong><span translate-once=\"translate.tariff\"></span> {{$index+1}}</strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"orginal text-muted\" translate-once=\"translate.original\"></p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <p class=\"orginal text-muted\" ng-bind=\"originalTariff\"></p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in ttsc.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"text-muted\"><span translate-once=\"translate.translation\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <input type=\"text\" ng-blur=\"ttsc.saveTranslatedTariffs()\" class=\"form-control form-group\" ng-model=\"ttsc.translatedTariffs[$parent.$index][code]\">\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/translate-title.html',
    "<section class=\"translate-section\">\n" +
    "    <div class=\"row\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <p><strong translate-once=\"translate.title\"></strong></p>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"row\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"orginal text-muted\" translate-once=\"translate.original\"></p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <p class=\"orginal text-muted\" ng-bind=\"ttc.originalName\"></p>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-repeat=\"(code, language) in ttc.activeLanguages\" ng-show=\"language.active && !language.main\">\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <p class=\"orginal text-muted\"><span translate-once=\"translate.original\"></span> {{code}}</p>\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-9\">\n" +
    "                    <textarea ng-blur=\"ttc.saveTranslatedName(code)\" class=\"form-control form-group\" ng-model=\"ttc.translatedNames[code]\"></textarea>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</section>"
  );


  $templateCache.put('templates/offer-translate.html',
    "<div ng-if=\"!loaded\">\n" +
    "  <p class=\"title\"><span class=\"placeholder-title\"></span></p>\n" +
    "  <p class=\"text-center\"><i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i><span class=\"sr-only\" translate-once=\"preview.loading\"></span></p>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"offer-translate\" ng-if=\"loaded\" >\n" +
    "\n" +
    "  <div class=\"page-header\">\n" +
    "    <div class=\"row\">\n" +
    "      <div class=\"col-sm-6\">\n" +
    "        <h1><span ng-bind=\"originalName\"></span> <span translate-once=\"translate.translate\"></span></h1>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"col-sm-6\">\n" +
    "        <div class=\"offer-translate-chooser\">\n" +
    "          <label class=\"form-text\">\n" +
    "             <button ng-click=\"openEditPage()\" class=\"btn-link btn-sm\">\n" +
    "               <span translate-once=\"translate.original\"></span> ({{mainLanguage}}) <span translate-once=\"translate.edit\"></span>\n" +
    "             </button>\n" +
    "          </label>\n" +
    "          <span ng-repeat=\"language in languages\">\n" +
    "            <span ng-if=\"!activeLanguages[language].main\">\n" +
    "              <label class=\"checkbox-inline\" >\n" +
    "                <input type=\"checkbox\" ng-model=\"activeLanguages[language].active\"/>{{language}}\n" +
    "              </label>\n" +
    "            </span>\n" +
    "          </span>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <!-- Titel -->\n" +
    "  <offer-translate-title offer=\"cachedOffer\" active-languages=\"activeLanguages\"></offer-translate-title>\n" +
    "\n" +
    "  <!-- Beschrijving -->\n" +
    "  <offer-translate-description offer=\"cachedOffer\" active-languages=\"activeLanguages\"></offer-translate-description>\n" +
    "\n" +
    "  <!-- Prijs -->\n" +
    "  <offer-translate-tariffs offer=\"cachedOffer\" active-languages=\"activeLanguages\"></offer-translate-tariffs>\n" +
    "\n" +
    "  <!-- Address -->\n" +
    "  <offer-translate-address offer=\"cachedOffer\" active-languages=\"activeLanguages\" ng-if=\"isPlace\"></offer-translate-address>\n" +
    "\n" +
    "  <button class=\"btn btn-success\" ng-click=\"goToDashboard()\" translate-once=\"translate.ready\"></button>\n" +
    "\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place-detail.html',
    "<div ng-if=\"placeIdIsInvalid\">\n" +
    "  <div class=\"page-header\">\n" +
    "    <h1 translate-once=\"preview.not_found\"></h1>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-xs-12\">\n" +
    "      <p translate-once=\"preview.not_found_help\"></p>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-if=\"!finishedLoading\">\n" +
    "  <p class=\"title\"><span class=\"placeholder-title\"></span></p>\n" +
    "  <p class=\"text-center\"><i class=\"fa fa-circle-o-notch fa-spin fa-fw\"></i><span class=\"sr-only\" translate-once=\"preview.loading\"></span></p>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-if=\"place && finishedLoading\" class=\"place-detail\">\n" +
    "  <h1 class=\"title\" ng-bind=\"::place.name\"></h1>\n" +
    "\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"col-sm-3 col-sm-push-9\">\n" +
    "      <div class=\"list-group\" ng-if=\"::permissions\">\n" +
    "        <button ng-if=\"::permissions.editing\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-click=\"openEditPage()\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.edit\"></span> <span ng-if=\"place.mainLanguage !== language\" ng-bind=\"'(' + place.mainLanguage + ')'\"></span></button>\n" +
    "        <button ng-if=\"::permissions.editing\"\n" +
    "                class=\"list-group-item\"\n" +
    "                type=\"button\"\n" +
    "                ng-click=\"openTranslatePage()\"><i class=\"fa fa-globe\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.translate\"></span></button>\n" +
    "        <button ng-if=\"::permissions.editing\"\n" +
    "                class=\"list-group-item\"\n" +
    "                href=\"#\"\n" +
    "                ng-click=\"deletePlace()\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i>  <span translate-once=\"preview.delete\"></span></button>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"col-xs-9 col-sm-pull-3\">\n" +
    "      <ul class=\"nav nav-tabs\">\n" +
    "        <li ng-repeat=\"tab in tabs\" ng-class=\"{active: isTabActive(tab.id)}\" role=\"tab\">\n" +
    "          <a ng-click=\"makeTabActive(tab.id)\" role=\"tab\" translate-once=\"preview.tabs.{{tab.id}}\" href=\"#\"></a>\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "\n" +
    "      <div class=\"tab-pane\" role=\"tabpanel\" ng-show=\"isTabActive('data')\">\n" +
    "        <table class=\"table udb3-data-table\">\n" +
    "          <colgroup>\n" +
    "            <col style=\"width:20%\"/>\n" +
    "            <col style=\"width:80%\"/>\n" +
    "          </colgroup>\n" +
    "          <tbody>\n" +
    "            <tr>\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.title\"></span></td>\n" +
    "              <td>{{::place.name}}</td>\n" +
    "            </tr>\n" +
    "            <tr>\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.type\"></span></td>\n" +
    "              <td>{{::translateType(place.type.label)}}</td>\n" +
    "            </tr>\n" +
    "\n" +
    "            <tr ng-class=\"{muted: !place.description}\">\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.description\"></span></td>\n" +
    "              <td ng-if=\"place.description\">\n" +
    "                <div ng-bind-html=\"place.description\" class=\"event-detail-description\"></div>\n" +
    "              </td>\n" +
    "              <td ng-if=\"!place.description\" translate-once=\"preview.no_description\"></td>\n" +
    "            </tr>\n" +
    "            <tr>\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.where\"></span></td>\n" +
    "              <td>{{::place.address.streetAddress}}<br />\n" +
    "                {{::place.address.postalCode}} {{::place.address.addressLocality}}<br />\n" +
    "                {{::place.address.addressCountry}}</td>\n" +
    "            </tr>\n" +
    "          </tbody>\n" +
    "          <tbody udb-booking-info-detail=\"::place.bookingInfo\"></tbody>\n" +
    "          <tbody udb-contact-point-detail=\"::place.contactPoint\"></tbody>\n" +
    "          <tbody>\n" +
    "            <tr>\n" +
    "              <td>\n" +
    "                <span class=\"row-label\" translate-once=\"preview.labels\"></span>\n" +
    "              </td>\n" +
    "              <td>\n" +
    "                <p><udb-label-select labels=\"::place.labels\"\n" +
    "                                  label-added=\"labelAdded(label)\"\n" +
    "                                  label-removed=\"labelRemoved(label)\">\n" +
    "                </udb-label-select></p>\n" +
    "                <p ng-if=\"labelResponse === 'error'\" class=\"alert alert-danger\">\n" +
    "                  <span translate-once=\"preview.labels_error\" translate-values=\"{ labelName: '{{labelsError.name}}' }\"></span>\n" +
    "                </p>\n" +
    "                <p ng-if=\"labelResponse === 'success'\" class=\"alert alert-success\">\n" +
    "                  <span translate-once=\"preview.labels_success\" translate-values=\"{ addedLabel: '{{addedLabel}}' }\"></span>\n" +
    "                </p>\n" +
    "                <p ng-if=\"labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "                  <span ng-bind=\"labelsError\"></span>\n" +
    "                </p>\n" +
    "              </td>\n" +
    "            </tr>\n" +
    "            <tr>\n" +
    "              <td><span class=\"row-label\" translate-once=\"preview.age_label\"></span></td>\n" +
    "              <td>\n" +
    "                <span ng-if=\"::place.typicalAgeRange\">{{::place.typicalAgeRange}}</span>\n" +
    "                <span ng-if=\"::(!place.typicalAgeRange)\" translate-once=\"preview.all_ages\"></span>\n" +
    "              </td>\n" +
    "            </tr>\n" +
    "          </tbody>\n" +
    "          <tbody udb-image-detail=\"::place.mediaObject\" image=\"::place.image\"></tbody>\n" +
    "        </table>\n" +
    "      </div>\n" +
    "\n" +
    "      <div role=\"tabpanel\" class=\"tab-pane\" ng-show=\"isTabActive('history')\">\n" +
    "        <div class=\"timeline\">\n" +
    "          <dl ng-repeat=\"placeAction in ::placeHistory track by $index\">\n" +
    "            <dt ng-bind=\"placeAction.date | date:'dd / MM / yyyy H:mm'\"></dt>\n" +
    "            <dd>\n" +
    "              <span class=\"author\" ng-if=\"placeAction.author\">{{placeAction.author}}</span><br ng-if=\"placeAction.author\"/>\n" +
    "              <span class=\"description\">{{placeAction.description}}</span>\n" +
    "            </dd>\n" +
    "          </dl>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"tab-pane\" role=\"tabpanel\" ng-show=\"isTabActive('publication')\">\n" +
    "        <table class=\"table udb3-data-table\">\n" +
    "          <colgroup>\n" +
    "            <col style=\"width:20%\"/>\n" +
    "            <col style=\"width:80%\"/>\n" +
    "          </colgroup>\n" +
    "          <tbody udb-workflow-status=\"::place\">\n" +
    "          </tbody>\n" +
    "        </table>\n" +
    "      </div>\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/delete-search-modal.html',
    "<div class=\"modal-body\">\n" +
    "    <p>Ben je zeker dat je deze zoekopdracht wil verwijderen?</p>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-footer\">\n" +
    "    <button class=\"btn btn-primary udb-delete-query-cancel-button\" ng-click=\"cancel()\">Annuleren</button>\n" +
    "    <button class=\"btn btn-danger udb-delete-query-confirm-button\" ng-click=\"confirm()\">Verwijderen</button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/save-search-modal.html',
    "<form name=\"saveQueryForm\" novalidate class=\"save-search-modal\">\n" +
    "    <div class=\"modal-body\">\n" +
    "\n" +
    "        <label>Geef je zoekopdracht een naam</label>\n" +
    "\n" +
    "        <div class=\"row\">\n" +
    "            <div class=\"col-lg-12\">\n" +
    "                <p class=\"alert alert-danger\" role=\"alert\" ng-show=\"wasSubmitted && saveQueryForm.queryName.$error.required\">Een naam is verplicht.</p>\n" +
    "                <input type=\"text\" ng-required=\"'true'\" name=\"queryName\" ng-model=\"queryName\" class=\"form-control\"/>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"modal-footer\">\n" +
    "      <button type=\"button\" class=\"btn btn-default udb-save-query-cancel-button\" ng-click=\"cancel()\">Annuleren</button>\n" +
    "      <button type=\"submit\" class=\"btn btn-primary udb-save-query-ok-button\" ng-click=\"ok()\">Bewaren</button>\n" +
    "    </div>\n" +
    "</form>\n"
  );


  $templateCache.put('templates/save-search.directive.html',
    "<p>\n" +
    "    <strong>Jouw zoekopdracht</strong>\n" +
    "    <a href=\"#\" ng-click=\"saveSearch()\" class=\"btn btn-sm btn-default\">\n" +
    "        <i class=\"fa fa-bookmark-o\"></i> Bewaren\n" +
    "    </a>\n" +
    "</p>\n"
  );


  $templateCache.put('templates/saved-searches-list.html',
    "<div class=\"container-fluid\">\n" +
    "    <h1>Mijn zoekopdrachten</h1>\n" +
    "    <table class=\"table\">\n" +
    "        <tr>\n" +
    "            <th class=\"saved-search-title-column\">\n" +
    "                <strong>Titel</strong>\n" +
    "            </th>\n" +
    "            <th>\n" +
    "                Query\n" +
    "            </th>\n" +
    "            <td>\n" +
    "            </td>\n" +
    "        </tr>\n" +
    "        <tr ng-repeat=\"savedSearch in savedSearches\">\n" +
    "            <td>\n" +
    "                <p>\n" +
    "                  <i class=\"fa fa-bookmark\"></i>\n" +
    "                  <span ng-bind=\"::savedSearch.name\"></span></p>\n" +
    "                <p><a ng-href=\"search?query={{::savedSearch.query}}\" class=\"small\">Resultaten bekijken</a></p>\n" +
    "            </td>\n" +
    "            <td class=\"saved-search-query\">\n" +
    "                <textarea ui-codemirror=\"{ onLoad : codemirrorLoaded }\" ng-model=\"::savedSearch.query\" class=\"query form-control\" rows=\"3\"\n" +
    "                          ui-codemirror-opts=\"editorOptions\"></textarea>\n" +
    "            </td>\n" +
    "            <td>\n" +
    "                <a class=\"btn btn-default\" ng-if=\"::savedSearch.id\" ng-click=\"::deleteSavedSearch(savedSearch.id)\">Verwijderen</a>\n" +
    "            </td>\n" +
    "        </tr>\n" +
    "    </table>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/event-link.directive.html',
    "<a ng-href=\"{{ event.url + '/preview' }}\" ng-bind=\"::event.name\"></a>\n"
  );


  $templateCache.put('templates/label-select.html',
    "<p class=\"small text-muted\" translate-once=\"labels.what\"></p>\n" +
    "\n" +
    "<form name=\"form\">\n" +
    "  <div class=\"form-group\">\n" +
    "    <input type=\"text\"\n" +
    "    class=\"form-control typeahead\"\n" +
    "    ng-model=\"select.currentLabel\"\n" +
    "    ng-pattern=\"select.regex\"\n" +
    "    uib-typeahead=\"suggestion.name for suggestion in select.suggestLabels($viewValue)\"\n" +
    "    typeahead-on-select=\"select.onSelect($item)\"\n" +
    "    typeahead-min-length=\"2\"\n" +
    "    id=\"input\" name=\"input\"\n" +
    "    autocomplete=\"off\"\n" +
    "    ng-minlength=\"2\"\n" +
    "    ng-maxlength=\"50\"/>\n" +
    "  </div>\n" +
    "</form>\n" +
    "\n" +
    "<div class=\"alert alert-warning\" ng-show=\"!form.input.$valid && !form.input.$error.minlength \">\n" +
    "  <p><span translate-once=\"labels.invalid\"></span><br>\n" +
    "    <ul>\n" +
    "      <li translate-once=\"labels.chars\"></li>\n" +
    "      <li translate-once=\"labels.excluded\"></li>\n" +
    "      <li translate-once=\"labels.length\"></li>\n" +
    "    </ul>\n" +
    "</div>\n" +
    "\n" +
    "<ul class=\"list-inline\">\n" +
    "  <li ng-repeat=\"label in select.labels\">\n" +
    "    <span class=\"badge\">{{label.name}} <a ng-click=\"select.onRemove(label)\" class=\"badge-remove\">&times;</a></span>\n" +
    "  </li>\n" +
    "</ul>\n"
  );


  $templateCache.put('templates/offer-accessibility-info.component.html',
    "<div ng-if=\"$ctrl.offer.facilities.length > 0\">\n" +
    "    <div>\n" +
    "        <span ng-click=\"showFacilities = !showFacilities\" style=\"cursor:pointer;\">\n" +
    "            <i class=\"fa fa-{{ showFacilities ? 'chevron-down' : 'chevron-right' }}\"></i>\n" +
    "            <strong ng-bind=\"$ctrl.offer.facilities.length\"></strong> voorziening(en)\n" +
    "        </span>\n" +
    "        <ul ng-show=\"showFacilities\">\n" +
    "            <li ng-repeat=\"facility in $ctrl.offer.facilities\" ng-bind=\"::facility.label\"></li>\n" +
    "        </ul>\n" +
    "    </div>\n" +
    "\n" +
    "    <button type=\"button\" class=\"btn btn-link\" ng-click=\"$ctrl.changeFacilities()\">Wijzigen</button>\n" +
    "</div>\n" +
    "\n" +
    "<div ng-show=\"$ctrl.offer.facilities.length === 0\">\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-click=\"$ctrl.changeFacilities()\">\n" +
    "        Voorzieningen toevoegen\n" +
    "    </button>\n" +
    "</div>"
  );


  $templateCache.put('templates/query-editor-daterangepicker.directive.html',
    "<div>\n" +
    "  <p class=\"input-group\" ng-hide=\"field.transformer === '<'\">\n" +
    "    <input type=\"text\" class=\"form-control\" uib-datepicker-popup=\"{{drp.dateFormat}}\" ng-model=\"field.lowerBound\"\n" +
    "           is-open=\"drp.startOpened\" ng-required=\"true\" datepicker-options=\"drp.options\"/>\n" +
    "    <span class=\"input-group-btn\">\n" +
    "        <button type=\"button\" class=\"btn btn-default\" ng-click=\"drp.openStart($event)\">\n" +
    "          <i class=\"fa fa-calendar\"></i>\n" +
    "        </button>\n" +
    "    </span>\n" +
    "  </p>\n" +
    "\n" +
    "  <span ng-hide=\"field.transformer === '<' || field.transformer === '>' || field.transformer === '='\">tot</span>\n" +
    "\n" +
    "  <p class=\"input-group\" ng-hide=\"field.transformer === '>' || field.transformer === '='\">\n" +
    "    <input type=\"text\" class=\"form-control\" uib-datepicker-popup=\"{{drp.dateFormat}}\" ng-model=\"field.upperBound\"\n" +
    "           is-open=\"drp.endOpened\" ng-required=\"true\" datepicker-options=\"drp.options\"/>\n" +
    "    <span class=\"input-group-btn\">\n" +
    "        <button type=\"button\" class=\"btn btn-default\" ng-click=\"drp.openEnd($event)\">\n" +
    "          <i class=\"fa fa-calendar\"></i>\n" +
    "        </button>\n" +
    "    </span>\n" +
    "  </p>\n" +
    "</div>"
  );


  $templateCache.put('templates/query-editor-field.directive.html',
    "<div class=\"row voorwaarde qe-field {{ getOperatorClass() }}\">\n" +
    "  <div class=\"col-md-3\">\n" +
    "    <div class=\"form-group\">\n" +
    "      <select\n" +
    "          ng-options=\"fieldOption.name as fieldOption.label group by fieldOption.groupLabel for fieldOption in qe.fieldOptions | orderBy:['groupIndex','label']\"\n" +
    "          ng-model=\"field.name\" class=\"form-control\" ng-change=\"qe.fieldTypeSelected(field)\">\n" +
    "      </select>\n" +
    "    </div>\n" +
    "\n" +
    "  </div>\n" +
    "  <div class=\"col-md-3\">\n" +
    "    <div class=\"form-group\">\n" +
    "      <select ng-model=\"field.transformer\" class=\"form-control\"\n" +
    "              ng-options=\"transformer + (field.fieldType === 'date-range' ? '_DATE' : '') | translate for transformer in qe.transformers[field.name]\">\n" +
    "      </select>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-md-3 field-query-term\" ng-switch=\"field.fieldType\">\n" +
    "    <div ng-switch-when=\"string\">\n" +
    "      <input type=\"text\" ng-model=\"field.term\"\n" +
    "             class=\"form-control\"/>\n" +
    "    </div>\n" +
    "    <div ng-switch-when=\"tokenized-string\">\n" +
    "      <input type=\"text\" ng-model=\"field.term\"\n" +
    "             class=\"form-control\"/>\n" +
    "    </div>\n" +
    "    <div ng-switch-when=\"term\">\n" +
    "      <select ng-options=\"term.label as term.label for term in qe.termOptions[field.name] | orderBy:'label'\"\n" +
    "              ng-model=\"field.term\" class=\"form-control\">\n" +
    "        <option value=\"\">-- maak een keuze --</option>\n" +
    "      </select>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-switch-when=\"choice\">\n" +
    "      <select ng-options=\"'choice.' + option | translate for option in qe.termOptions[field.name]\"\n" +
    "              ng-model=\"field.term\" class=\"form-control\">\n" +
    "        <option value=\"\">-- maak een keuze --</option>\n" +
    "      </select>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-switch-when=\"check\">\n" +
    "      <label class=\"radio-inline\">\n" +
    "        <input type=\"radio\" ng-model=\"field.term\" value=\"{{field.name}}\"> ja\n" +
    "      </label>\n" +
    "      <label class=\"radio-inline\">\n" +
    "        <input type=\"radio\" ng-model=\"field.term\" value=\"(!{{field.name}})\"> nee\n" +
    "      </label>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-switch-when=\"date-range\">\n" +
    "      <udb-query-editor-daterangepicker>\n" +
    "      </udb-query-editor-daterangepicker>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-switch-when=\"number\" ng-switch=\"field.transformer\">\n" +
    "      <div ng-switch-when=\"=\">\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.term\"/>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-switch-when=\">\">\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.lowerBound\"/>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-switch-when=\"<\">\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.upperBound\"/>\n" +
    "      </div>\n" +
    "\n" +
    "      <div ng-switch-when=\"><\">\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.lowerBound\"/>\n" +
    "        <span>tot</span>\n" +
    "        <input type=\"text\" class=\"form-control\" ng-model=\"field.upperBound\"/>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-md-2 col-xs-8\">\n" +
    "    <div class=\"form-group\">\n" +
    "      <div class=\"btn-group btn-group-justified\" role=\"group\">\n" +
    "        <a type=\"button\" class=\"btn btn-default\" ng-click=\"addSubGroup($index)\"\n" +
    "           ng-disabled=\"isSubGroup() && !$last\">\n" +
    "          AND\n" +
    "        </a>\n" +
    "        <a type=\"button\" class=\"btn btn-default\" ng-click=\"addField($index)\">\n" +
    "          OR\n" +
    "        </a>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-md-1 col-xs-4\">\n" +
    "    <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"removeField($index)\"\n" +
    "            ng-show=\"canRemoveField()\">\n" +
    "      <span aria-hidden=\"true\">×</span>\n" +
    "    </button>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/query-editor-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <h2 class=\"modal-title\">Geavanceerde zoekopdracht bouwer</h2>\n" +
    "</div>\n" +
    "\n" +
    "<div class=\"modal-body\">\n" +
    "\n" +
    "  <div class=\"udb-query-editor-header\">\n" +
    "    <!-- udb-query-editor-header -->\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"udb-query-editor\">\n" +
    "    <div class=\"panel panel-default\" ng-repeat=\"rootGroup in qe.groupedQueryTree.nodes\">\n" +
    "\n" +
    "      <div class=\"panel-heading\">\n" +
    "        <div class=\"row\">\n" +
    "          <div class=\"col-sm-3\">\n" +
    "            <h3 class=\"panel-title\">Groep <span ng-bind=\"$index + 1\"></span></h3>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-7\">\n" +
    "            <div class=\"btn-group control-in-uitsluiten\" role=\"group\" aria-label=\"...\">\n" +
    "              <button type=\"button\" class=\"btn btn-default btn-sm\" ng-click=\"qe.toggleExcludeGroup(rootGroup)\">\n" +
    "                <span ng-hide=\"rootGroup.excluded\" class=\"fa fa-check-circle\"></span>\n" +
    "                Insluiten\n" +
    "              </button>\n" +
    "              <button type=\"button\" class=\"btn btn-default btn-sm\" ng-click=\"qe.toggleExcludeGroup(rootGroup)\">\n" +
    "                <span ng-show=\"rootGroup.excluded\" class=\"fa fa-check-circle\"></span>\n" +
    "                Uitsluiten\n" +
    "              </button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-2\">\n" +
    "            <button type=\"button\" class=\"close\" aria-label=\"Close\"\n" +
    "                ng-show=\"qe.canRemoveGroup()\" ng-click=\"qe.removeGroup($index)\">\n" +
    "              <span aria-hidden=\"true\">×</span>\n" +
    "            </button>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "      <div class=\"panel-body\">\n" +
    "        <div ng-repeat=\"field in rootGroup.nodes\" ng-switch=\"field.type\">\n" +
    "          <div ng-switch-default>\n" +
    "            <udb-query-editor-field></udb-query-editor-field>\n" +
    "          </div>\n" +
    "\n" +
    "          <div ng-switch-when=\"group\">\n" +
    "            <udb-query-editor-field ng-repeat=\"field in field.nodes\"></udb-query-editor-field>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <p>\n" +
    "      <a type=\"button\" class=\"btn btn-link\" ng-click=\"qe.addGroup()\">\n" +
    "        <i class=\"fa fa-plus-circle\"></i> Groep toevoegen\n" +
    "      </a>\n" +
    "    </p>\n" +
    "\n" +
    "    <div class=\"modal-footer\">\n" +
    "      <div class=\"row\">\n" +
    "\n" +
    "        <div class=\"pull-right\">\n" +
    "          <a type=\"button\" class=\"btn btn-default\" ng-click=\"qe.stopEditing()\">\n" +
    "            Annuleren\n" +
    "          </a>\n" +
    "          <button type=\"button\" class=\"btn btn-primary\" ng-click=\"qe.updateQueryString()\">\n" +
    "            Zoeken\n" +
    "          </button>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/query-editor.directive.html',
    "<div class=\"udb-query-editor\">\n" +
    "  <div class=\"panel panel-default\" ng-repeat=\"rootGroup in qe.groupedQueryTree.nodes\">\n" +
    "\n" +
    "    <div class=\"panel-heading\">\n" +
    "      <div class=\"row\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "          <h3 class=\"panel-title\">Groep <span ng-bind=\"$index + 1\"></span></h3>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-7\">\n" +
    "          <div class=\"btn-group control-in-uitsluiten\" role=\"group\" aria-label=\"...\">\n" +
    "            <button type=\"button\" class=\"btn btn-default btn-sm\" ng-click=\"qe.toggleExcludeGroup(rootGroup)\">\n" +
    "              <span ng-hide=\"rootGroup.excluded\" class=\"fa fa-check-circle\"></span>\n" +
    "              Insluiten\n" +
    "            </button>\n" +
    "            <button type=\"button\" class=\"btn btn-default btn-sm\" ng-click=\"qe.toggleExcludeGroup(rootGroup)\">\n" +
    "              <span ng-show=\"rootGroup.excluded\" class=\"fa fa-check-circle\"></span>\n" +
    "              Uitsluiten\n" +
    "            </button>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-2\">\n" +
    "          <button type=\"button\" class=\"close\" aria-label=\"Close\"\n" +
    "                  ng-show=\"qe.canRemoveGroup()\" ng-click=\"qe.removeGroup($index)\">\n" +
    "            <span aria-hidden=\"true\">×</span>\n" +
    "          </button>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"panel-body\">\n" +
    "      <div ng-repeat=\"field in rootGroup.nodes\" ng-switch=\"field.type\">\n" +
    "        <div ng-switch-default>\n" +
    "          <udb-query-editor-field></udb-query-editor-field>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-switch-when=\"group\">\n" +
    "          <udb-query-editor-field ng-repeat=\"field in field.nodes\"></udb-query-editor-field>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"qe.addGroup()\">\n" +
    "    Groep toevoegen\n" +
    "  </button>\n" +
    "  <div class=\"pull-right\">\n" +
    "    <a type=\"button\" class=\"btn btn-default\" ng-click=\"qe.stopEditing()\">\n" +
    "      Annuleren\n" +
    "    </a>\n" +
    "    <button type=\"button\" class=\"btn btn-primary\" ng-click=\"qe.updateQueryString()\">\n" +
    "      Zoeken\n" +
    "    </button>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/sapi2.query-editor-field.directive.html',
    "<div class=\"row voorwaarde qe-field {{ getOperatorClass() }}\">\n" +
    "    <div class=\"col-md-3\">\n" +
    "        <div class=\"form-group\">\n" +
    "            <select\n" +
    "                    ng-options=\"field.name as field.label group by field.groupLabel for field in qe.fields | orderBy:['groupIndex','label']\"\n" +
    "                    ng-model=\"field.field\" class=\"form-control\" ng-change=\"qe.updateFieldType(field)\">\n" +
    "            </select>\n" +
    "        </div>\n" +
    "\n" +
    "    </div>\n" +
    "    <div class=\"col-md-3\">\n" +
    "        <div class=\"form-group\">\n" +
    "            <select ng-model=\"field.transformer\" class=\"form-control\"\n" +
    "                    ng-options=\"transformer + (field.fieldType === 'date-range' ? '_DATE' : '') | translate for transformer in qe.transformers[field.field]\">\n" +
    "            </select>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"col-md-3 field-query-term\" ng-switch=\"field.fieldType\">\n" +
    "        <div ng-switch-when=\"string\">\n" +
    "            <input type=\"text\" ng-model=\"field.term\"\n" +
    "                   class=\"form-control\"/>\n" +
    "        </div>\n" +
    "        <div ng-switch-when=\"tokenized-string\">\n" +
    "            <input type=\"text\" ng-model=\"field.term\"\n" +
    "                   class=\"form-control\"/>\n" +
    "        </div>\n" +
    "        <div ng-switch-when=\"term\">\n" +
    "            <select ng-options=\"term.label as term.label for term in qe.termOptions[field.field] | orderBy:'label'\"\n" +
    "                    ng-model=\"field.term\" class=\"form-control\">\n" +
    "                <option value=\"\">-- maak een keuze --</option>\n" +
    "            </select>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-switch-when=\"choice\">\n" +
    "            <select ng-options=\"'choice.' + option | translate for option in ::qe.termOptions[field.field]\"\n" +
    "                    ng-model=\"field.term\" class=\"form-control\">\n" +
    "                <option value=\"\">-- maak een keuze --</option>\n" +
    "            </select>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-switch-when=\"check\">\n" +
    "            <label class=\"radio-inline\">\n" +
    "                <input type=\"radio\" ng-model=\"field.term\" value=\"TRUE\"> ja\n" +
    "            </label>\n" +
    "            <label class=\"radio-inline\">\n" +
    "                <input type=\"radio\" ng-model=\"field.term\" value=\"FALSE\"> nee\n" +
    "            </label>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-switch-when=\"date-range\">\n" +
    "            <udb-query-editor-daterangepicker>\n" +
    "            </udb-query-editor-daterangepicker>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-switch-when=\"number\" ng-switch=\"field.transformer\">\n" +
    "            <div ng-switch-when=\"=\">\n" +
    "                <input type=\"text\" class=\"form-control\" ng-model=\"field.term\"/>\n" +
    "            </div>\n" +
    "\n" +
    "            <div ng-switch-when=\">\">\n" +
    "                <input type=\"text\" class=\"form-control\" ng-model=\"field.lowerBound\"/>\n" +
    "            </div>\n" +
    "\n" +
    "            <div ng-switch-when=\"<\">\n" +
    "                <input type=\"text\" class=\"form-control\" ng-model=\"field.upperBound\"/>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"col-md-2 col-xs-8\">\n" +
    "        <div class=\"form-group\">\n" +
    "            <div class=\"btn-group btn-group-justified\" role=\"group\">\n" +
    "                <a type=\"button\" class=\"btn btn-default\" ng-click=\"addSubGroup($index)\"\n" +
    "                   ng-disabled=\"isSubGroup() && !$last\">\n" +
    "                    AND\n" +
    "                </a>\n" +
    "                <a type=\"button\" class=\"btn btn-default\" ng-click=\"addField($index)\">\n" +
    "                    OR\n" +
    "                </a>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"col-md-1 col-xs-4\">\n" +
    "        <button type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"removeField($index)\"\n" +
    "                ng-show=\"canRemoveField()\">\n" +
    "            <span aria-hidden=\"true\">×</span>\n" +
    "        </button>\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/search-bar.directive.html',
    "<h1 class=\"title\">Zoeken</h1>\n" +
    "<form class=\"navbar-form navbar-left udb-header-search\" role=\"search\"\n" +
    "      ng-class=\"{'has-errors': sb.hasErrors, 'is-editing': sb.isEditing}\">\n" +
    "  <div class=\"form-group has-warning has-feedback\">\n" +
    "    <input type=\"text\" class=\"form-control\" ng-model=\"sb.queryString\" ng-change=\"sb.queryChanged()\">\n" +
    "    <span class=\"dropdown saved-search-icon\" uib-dropdown>\n" +
    "      <i class=\"fa fa-bookmark\" class=\"dropdown-toggle\" uib-dropdown-toggle></i>\n" +
    "      <ul class=\"dropdown-menu\" uib-dropdown-menu role=\"menu\">\n" +
    "        <li role=\"presentation\" class=\"dropdown-header\">Bewaarde zoekopdrachten</li>\n" +
    "        <li ng-repeat=\"savedSearch in sb.savedSearches\">\n" +
    "          <a ng-bind=\"::savedSearch.name\"\n" +
    "             ng-click=\"sb.find(savedSearch.query)\">\n" +
    "          </a>\n" +
    "        </li>\n" +
    "        <li class=\"divider\"></li>\n" +
    "        <li><a href=\"saved-searches\">Beheren</a></li>\n" +
    "      </ul>\n" +
    "    </span>\n" +
    "    <i ng-show=\"sb.hasErrors\" class=\"fa fa-warning warning-icon\" tooltip-append-to-body=\"true\"\n" +
    "       tooltip-placement=\"bottom\" uib-tooltip=\"{{sb.errors}}\"></i>\n" +
    "  </div>\n" +
    "  <button type=\"submit\" class=\"btn udb-search-button\" ng-click=\"sb.find()\">\n" +
    "    <i class=\"fa fa-search\"></i>\n" +
    "  </button>\n" +
    "</form>\n" +
    "\n" +
    "<ul class=\"nav navbar-nav\">\n" +
    "  <li>\n" +
    "    <a href=\"#\" ng-click=\"sb.editQuery()\" class=\"advanced-search\" ng-class=\"{'is-editing': sb.isEditing}\">Geavanceerd</a>\n" +
    "  </li>\n" +
    "</ul>\n"
  );


  $templateCache.put('templates/event.directive.html',
    "<div class=\"event-content\">\n" +
    "  <div class=\"col-sm-5 rv-first-column\">\n" +
    "    <div class=\"rv-item-sidebar\">\n" +
    "      <div class=\"rv-selection-state\" ng-class=\"{'disabled': resultViewer.querySelected}\"\n" +
    "           ng-click=\"resultViewer.toggleSelect(event)\">\n" +
    "        <span class=\"fa\" ng-class=\"resultViewer.isOfferSelected(event) ? 'fa-check-square' : 'fa-square-o'\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"udb-short-info\">\n" +
    "      <span class=\"udb-category\" ng-bind=\"event.type.label\"></span>\n" +
    "      <span class=\"udb-short-info-seperator\" ng-show=\"event.type && event.theme\"> • </span>\n" +
    "      <span class=\"udb-theme\" ng-bind=\"event.theme.label\"></span>\n" +
    "    </div>\n" +
    "    <div class=\"udb-title\">\n" +
    "      <a ng-href=\"{{ event.url + '/preview' }}\" ng-bind=\"event.name\"></a>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-2\">\n" +
    "    <div class=\"udb-place-name\" ng-bind=\"event.location.name\"></div>\n" +
    "    <div class=\"udb-place-city\" ng-bind=\"event.location.address.addressLocality\"></div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-2\" ng-switch=\"event.calendarType\">\n" +
    "    <span ng-switch-when=\"permanent\">permanent</span>\n" +
    "    <span ng-switch-when=\"single\">\n" +
    "        <span class=\"udb-start-date\" ng-bind=\"event.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "    </span>\n" +
    "    <span ng-switch-when=\"periodic\" class=\"udb-date-range\">\n" +
    "      <span class=\"udb-start-date\" ng-bind=\"event.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "        <i class=\"fa fa-long-arrow-right\"></i>\n" +
    "        <span class=\"udb-end-date\" ng-bind=\"event.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "    </span>\n" +
    "    <span ng-switch-when=\"multiple\" class=\"udb-date-range\">\n" +
    "        <span class=\"udb-start-date\" ng-bind=\"event.startDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "        ,…,\n" +
    "        <span class=\"udb-end-date\" ng-bind=\"event.endDate | date: 'dd/MM/yyyy'\"></span>\n" +
    "    </span>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-3 rv-specific-event-info\">\n" +
    "    <div class=\"rv-event-info-input udb-organizer\"\n" +
    "         ng-show=\"resultViewer.activeSpecific.id === 'input'\">\n" +
    "      <div>\n" +
    "        <span class=\"fa fa-clock-o\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.modified | date : 'dd/MM/yyyy • HH:mm'\"></span>\n" +
    "      </div>\n" +
    "      <div class=\"udb-email\">\n" +
    "        <span class=\"fa fa-user\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.creator\"></span>\n" +
    "      </div>\n" +
    "      <div class=\"udb-organizer-name\">\n" +
    "        <span class=\"fa fa-building-o\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.organizer ? event.organizer.name : '-'\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-if=\"resultViewer.activeSpecific.id === 'accessibility'\" class=\"rv-event-info-accessibility\">\n" +
    "      <udb-offer-accessibility-info offer=\"event\" offer-type=\"offerType\"></udb-offer-accessibility-info>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-12\" ng-show=\"eventCtrl.translation\">\n" +
    "    <div class=\"udb-details row\">\n" +
    "\n" +
    "      <button type=\"button\" class=\"close\" ng-click=\"eventCtrl.stopTranslating()\">\n" +
    "        <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\n" +
    "      </button>\n" +
    "\n" +
    "      <div class=\"col-sm-12\">\n" +
    "        <div ng-switch=\"eventCtrl.hasActiveTranslation()\">\n" +
    "          <div ng-switch-when=\"false\" class=\"udb-translation-info\">\n" +
    "            Voer een {{ eventCtrl.activeLanguage.toUpperCase()+'_ADJECTIVE' | translate }} vertaling in\n" +
    "          </div>\n" +
    "\n" +
    "          <div ng-switch-default class=\"udb-translation-info\">\n" +
    "            Wijzig de {{ eventCtrl.activeLanguage.toUpperCase()+'_ADJECTIVE'  | translate }} vertaling\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row udb-property-translation\">\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <div class=\"form-group\">\n" +
    "              <label>Titel</label>\n" +
    "              <input type=\"text\" class=\"form-control\" ng-model=\"eventCtrl.translation.name\"/>\n" +
    "            </div>\n" +
    "            <div ng-show=\"eventCtrl.hasPropertyChanged('name') && eventCtrl.hasActiveTranslation()\">\n" +
    "              <button ng-disabled=\"!eventCtrl.translation.name\" class=\"btn btn-danger\" ng-click=\"eventCtrl.applyPropertyChanges('name')\">\n" +
    "                Opslaan\n" +
    "              </button>\n" +
    "              <button class=\"btn btn-default\" ng-click=\"eventCtrl.undoPropertyChanges('name')\">Annuleren</button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <strong>Basis-titel</strong>\n" +
    "            <div ng-bind-html=\"::event.name\"></div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "\n" +
    "        <div class=\"row udb-property-translation\">\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <div class=\"form-group\">\n" +
    "              <label>Beschrijving</label>\n" +
    "              <textarea class=\"form-control resize-vertical\" rows=\"3\" ng-model=\"eventCtrl.translation.description\"></textarea>\n" +
    "            </div>\n" +
    "            <div ng-show=\"eventCtrl.hasPropertyChanged('description') && eventCtrl.hasActiveTranslation()\">\n" +
    "              <button ng-disabled=\"!eventCtrl.translation.description\" class=\"btn btn-danger\" ng-click=\"eventCtrl.applyPropertyChanges('description')\">\n" +
    "                Opslaan\n" +
    "              </button>\n" +
    "              <button class=\"btn btn-default\" ng-click=\"eventCtrl.undoPropertyChanges('description')\">Annuleren</button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <strong>Basis-beschrijving</strong>\n" +
    "            <div ng-bind-html=\"event.description\"></div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-hide=\"eventCtrl.hasActiveTranslation()\">\n" +
    "          <button ng-disabled=\"!eventCtrl.translation.name\" class=\"btn btn-danger\" ng-click=\"eventCtrl.translate()\">Opslaan</button>\n" +
    "          <button class=\"btn btn-default\" ng-click=\"eventCtrl.stopTranslating()\">Annuleren</button>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-12\" ng-show=\"resultViewer.isShowingProperties()\">\n" +
    "    <div class=\"udb-details row\">\n" +
    "      <div class=\"col-sm-2\" ng-if=\"resultViewer.eventProperties.image.visible\">\n" +
    "        <img ng-if=\"event.image\" ng-src=\"{{event.image + '?maxwidth=150&maxheight=150'}}\" alt=\"{{event.name}}\" class=\"img-responsive\">\n" +
    "      </div>\n" +
    "      <div ng-class=\"resultViewer.eventProperties.image.visible ? 'col-sm-10' : 'col-sm-12'\">\n" +
    "        <div ng-if=\"resultViewer.eventProperties.description.visible\">\n" +
    "          <div ng-bind-html=\"event.description\" class=\"udb-description\"></div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-if=\"resultViewer.eventProperties.labels.visible && event.labels\" class=\"udb-labels\">\n" +
    "          <span ng-hide=\"event.labels.length\">Dit evenement is nog niet gelabeld.</span>\n" +
    "          <udb-label-select labels=\"event.labels\"\n" +
    "                            label-added=\"eventCtrl.labelAdded(label)\"\n" +
    "                            label-removed=\"eventCtrl.labelRemoved(label)\"></udb-label-select>\n" +
    "          <div ng-if=\"eventCtrl.labelResponse === 'error'\" class=\"alert alert-danger\">\n" +
    "            Het toevoegen van het label '{{eventCtrl.labelsError.name}}' is niet gelukt.\n" +
    "          </div>\n" +
    "          <div ng-if=\"eventCtrl.labelResponse === 'success'\" class=\"alert alert-success\">\n" +
    "            Het label '{{eventCtrl.addedLabel}}' werd succesvol toegevoegd.\n" +
    "          </div>\n" +
    "          <div ng-if=\"eventCtrl.labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "            <span ng-bind=\"eventCtrl.labelsError\"></span>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/place.directive.html',
    "<div class=\"place-content\">\n" +
    "  <div class=\"col-sm-5 rv-first-column\">\n" +
    "    <div class=\"rv-item-sidebar\">\n" +
    "      <div class=\"rv-selection-state\" ng-class=\"{'disabled': resultViewer.querySelected}\"\n" +
    "           ng-click=\"resultViewer.toggleSelect(event)\">\n" +
    "        <span class=\"fa\" ng-class=\"resultViewer.isOfferSelected(event) ? 'fa-check-square' : 'fa-square-o'\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"udb-short-info\">\n" +
    "      <span class=\"udb-category\" ng-bind=\"event.type.label\"></span>\n" +
    "      <span class=\"udb-short-info-seperator\" ng-show=\"event.type && event.theme\"> • </span>\n" +
    "      <span class=\"udb-theme\" ng-bind=\"event.theme.label\"></span>\n" +
    "    </div>\n" +
    "    <div class=\"udb-title\">\n" +
    "      <a ng-href=\"{{ event.url + '/preview' }}\" ng-bind=\"event.name\"></a>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-2\">\n" +
    "    <div class=\"udb-place-city\" ng-bind=\"event.address.addressLocality\"></div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-2\">\n" +
    "    <span>permanent</span>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-3 rv-specific-event-info\">\n" +
    "    <div class=\"rv-event-info-input udb-organizer\"\n" +
    "         ng-show=\"resultViewer.activeSpecific.id === 'input'\">\n" +
    "      <div>\n" +
    "        <span class=\"fa fa-clock-o\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.modified | date : 'dd/MM/yyyy • HH:mm'\"></span>\n" +
    "      </div>\n" +
    "      <div class=\"udb-email\">\n" +
    "        <span class=\"fa fa-user\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.creator\"></span>\n" +
    "      </div>\n" +
    "      <div class=\"udb-organizer-name\">\n" +
    "        <span class=\"fa fa-building-o\"></span>&nbsp;\n" +
    "        <span ng-bind=\"event.organizer ? event.organizer.name : '-'\"></span>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"rv-event-info-price\"\n" +
    "         ng-show=\"resultViewer.activeSpecific.id === 'price'\" ng-switch=\"event.pricing\">\n" +
    "      <span ng-switch-when=\"free\">gratis</span>\n" +
    "      <span ng-switch-when=\"payed\">\n" +
    "          <i class=\"fa fa-eur meta icon\"></i><span ng-if=\"event.price\" ng-bind=\"event.price | currency\"></span>\n" +
    "      </span>\n" +
    "      <span ng-switch-when=\"unknown\">niet ingevoerd</span>\n" +
    "    </div>\n" +
    "\n" +
    "    <div class=\"rv-event-info-translation btn-toolbar\"\n" +
    "         ng-show=\"resultViewer.activeSpecific.id === 'translation'\">\n" +
    "      <button type=\"button\" ng-repeat=\"language in ::placeCtrl.languageSelector\"\n" +
    "              ng-class=\"{active: placeCtrl.activeLanguage === language.lang}\"\n" +
    "              class=\"btn btn-default\" ng-click=\"placeCtrl.toggleLanguage(language.lang)\">\n" +
    "        <span class=\"fa {{placeCtrl.getLanguageTranslationIcon(language.lang)}}\"></span>\n" +
    "        {{language.lang}}\n" +
    "      </button>\n" +
    "    </div>\n" +
    "\n" +
    "    <div ng-if=\"resultViewer.activeSpecific.id === 'accessibility'\" class=\"rv-event-info-accessibility\">\n" +
    "      <udb-offer-accessibility-info offer=\"event\" offer-type=\"offerType\"></udb-offer-accessibility-info>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-12\" ng-show=\"placeCtrl.translation\">\n" +
    "    <div class=\"udb-details row\">\n" +
    "\n" +
    "      <button type=\"button\" class=\"close\" ng-click=\"placeCtrl.stopTranslating()\">\n" +
    "        <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\n" +
    "      </button>\n" +
    "\n" +
    "      <div class=\"col-sm-12\">\n" +
    "        <div ng-switch=\"placeCtrl.hasActiveTranslation()\">\n" +
    "          <div ng-switch-when=\"false\" class=\"udb-translation-info\">\n" +
    "            Voer een {{ placeCtrl.activeLanguage.toUpperCase()+'_ADJECTIVE' | translate }} vertaling in\n" +
    "          </div>\n" +
    "\n" +
    "          <div ng-switch-default class=\"udb-translation-info\">\n" +
    "            Wijzig de {{ placeCtrl.activeLanguage.toUpperCase()+'_ADJECTIVE'  | translate }} vertaling\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"row udb-property-translation\">\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <div class=\"form-group\">\n" +
    "              <label>Titel</label>\n" +
    "              <input type=\"text\" class=\"form-control\" ng-model=\"placeCtrl.translation.name\"/>\n" +
    "            </div>\n" +
    "            <div ng-show=\"placeCtrl.hasPropertyChanged('name') && placeCtrl.hasActiveTranslation()\">\n" +
    "              <button ng-disabled=\"!placeCtrl.translation.name\" class=\"btn btn-danger\" ng-click=\"placeCtrl.applyPropertyChanges('name')\">\n" +
    "                Opslaan\n" +
    "              </button>\n" +
    "              <button class=\"btn btn-default\" ng-click=\"placeCtrl.undoPropertyChanges('name')\">Annuleren</button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <strong>Basis-titel</strong>\n" +
    "            <div ng-bind-html=\"::event.name\"></div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "\n" +
    "        <div class=\"row udb-property-translation\">\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <div class=\"form-group\">\n" +
    "              <label>Beschrijving</label>\n" +
    "              <textarea class=\"form-control resize-vertical\" rows=\"3\" ng-model=\"placeCtrl.translation.description\"></textarea>\n" +
    "            </div>\n" +
    "            <div ng-show=\"placeCtrl.hasPropertyChanged('description') && placeCtrl.hasActiveTranslation()\">\n" +
    "              <button ng-disabled=\"!placeCtrl.translation.description\" class=\"btn btn-danger\" ng-click=\"placeCtrl.applyPropertyChanges('description')\">\n" +
    "                Opslaan\n" +
    "              </button>\n" +
    "              <button class=\"btn btn-default\" ng-click=\"placeCtrl.undoPropertyChanges('description')\">Annuleren</button>\n" +
    "            </div>\n" +
    "          </div>\n" +
    "          <div class=\"col-sm-6\">\n" +
    "            <strong>Basis-beschrijving</strong>\n" +
    "            <div ng-bind-html=\"event.description\"></div>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-hide=\"placeCtrl.hasActiveTranslation()\">\n" +
    "          <button ng-disabled=\"!placeCtrl.translation.name\" class=\"btn btn-danger\" ng-click=\"placeCtrl.translate()\">Opslaan</button>\n" +
    "          <button class=\"btn btn-default\" ng-click=\"placeCtrl.stopTranslating()\">Annuleren</button>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "\n" +
    "\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"col-sm-12\" ng-show=\"resultViewer.isShowingProperties()\">\n" +
    "    <div class=\"udb-details row\">\n" +
    "      <div class=\"col-sm-2\" ng-if=\"resultViewer.eventProperties.image.visible\">\n" +
    "        <img ng-if=\"event.image\" ng-src=\"{{event.image + '?maxwidth=150&maxheight=150'}}\" alt=\"{{event.name}}\" class=\"img-responsive\">\n" +
    "      </div>\n" +
    "      <div ng-class=\"resultViewer.eventProperties.image.visible ? 'col-sm-10' : 'col-sm-12'\">\n" +
    "        <div ng-if=\"resultViewer.eventProperties.description.visible\">\n" +
    "          <div ng-bind-html=\"event.description\" class=\"udb-description\"></div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-if=\"resultViewer.eventProperties.labels.visible && event.labels\" class=\"udb-labels\">\n" +
    "          <span ng-hide=\"event.labels.length\">Deze plaats is nog niet gelabeld.</span>\n" +
    "          <udb-label-select labels=\"event.labels\"\n" +
    "                            label-added=\"placeCtrl.labelAdded(label)\"\n" +
    "                            label-removed=\"placeCtrl.labelRemoved(label)\"></udb-label-select>\n" +
    "          <div ng-if=\"placeCtrl.labelResponse === 'error'\" class=\"alert alert-danger\">\n" +
    "            Het toevoegen van het label '{{placeCtrl.labelsError.name}}' is niet gelukt.\n" +
    "          </div>\n" +
    "          <div ng-if=\"placeCtrl.labelResponse === 'success'\" class=\"alert alert-success\">\n" +
    "            Het label '{{placeCtrl.addedLabel}}' werd succesvol toegevoegd.\n" +
    "          </div>\n" +
    "          <div ng-if=\"placeCtrl.labelResponse === 'unlabelError'\" class=\"alert alert-danger\">\n" +
    "            <span ng-bind=\"placeCtrl.labelsError\"></span>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/search-facilities-modal.html',
    "<div class=\"modal-header\">\n" +
    "  <h4 class=\"modal-title\">Toegankelijkheidsinformatie</h4>\n" +
    "</div>\n" +
    "<div class=\"modal-body\">\n" +
    "\n" +
    "  <div ng-repeat=\"(type, facilitiesForType) in facilities\">\n" +
    "    <label ng-bind=\"::('facilityLabel.' + type) | translate\"></label>\n" +
    "    <div class=\"checkbox\" ng-repeat=\"facility in ::facilitiesForType\">\n" +
    "      <label>\n" +
    "        <input type=\"checkbox\" ng-model=\"facility.selected\">\n" +
    "        <span ng-bind=\"::facility.label\"></span>\n" +
    "      </label>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "\n" +
    "  <div class=\"alert alert-danger\" ng-show=\"error\">\n" +
    "    Er ging iets fout tijdens het opslaan van de voorzieningen.\n" +
    "  </div>\n" +
    "\n" +
    "</div>\n" +
    "<div class=\"modal-footer\">\n" +
    "  <button type=\"button\" class=\"btn btn-default\" ng-click=\"cancel()\">Annuleren</button>\n" +
    "  <button type=\"button\" class=\"btn btn-primary\" ng-click=\"saveFacilities()\">\n" +
    "    Bevestigen <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"saving\"></i>\n" +
    "  </button>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/search.html',
    "<div class=\"row rv-result-viewer\">\n" +
    "  <div class=\"col-sm-12 rv-search-results\" ng-class=\"{loading: resultViewer.loading}\">\n" +
    "\n" +
    "      <div class=\"rv-controls\" ng-show=\"resultViewer.totalItems\">\n" +
    "          <div class=\"row\">\n" +
    "              <div class=\"col-xs-12\">\n" +
    "                  <ul class=\"nav nav-pills\" role=\"tablist\">\n" +
    "                      <li udb-save-search ng-show=\"activeQuery.queryString\"\n" +
    "                              udb-query-string=\"activeQuery.queryString\">\n" +
    "                      </li>\n" +
    "                      <li>\n" +
    "                          <p class=\"rv-item-counter\">\n" +
    "                              <ng-pluralize count=\"resultViewer.totalItems\"\n" +
    "                                            when=\"{'1': '1 resultaat',\n" +
    "                                                    'other': '{} resultaten'}\">\n" +
    "                              </ng-pluralize>\n" +
    "                          </p>\n" +
    "                      </li>\n" +
    "                      <li>\n" +
    "                          <label for=\"rv-event-{{propertyKey}}\" class=\"rv-control-toggle\"\n" +
    "                                 ng-class=\"{active: resultViewer.eventProperties[propertyKey].visible}\"\n" +
    "                                 ng-repeat=\"propertyKey in ['description', 'labels', 'image']\">\n" +
    "                              <input type=\"checkbox\" id=\"rv-event-{{propertyKey}}\"\n" +
    "                                     ng-model=\"resultViewer.eventProperties[propertyKey].visible\"/>\n" +
    "                              <span ng-bind=\"resultViewer.eventProperties[propertyKey].name\"></span>\n" +
    "                          </label>\n" +
    "                      </li>\n" +
    "                  </ul>\n" +
    "              </div>\n" +
    "          </div>\n" +
    "      </div>\n" +
    "\n" +
    "    <p class=\"rv-no-result-notice\" ng-show=\"!resultViewer.loading && resultViewer.totalItems === 0\" ng-cloak>\n" +
    "        Geen evenementen gevonden, probeer een andere zoekopdracht.\n" +
    "    </p>\n" +
    "\n" +
    "    <div ng-show=\"resultViewer.totalItems\">\n" +
    "        <div class=\"rv-item-info\">\n" +
    "\n" +
    "            <div class=\"row\" ng-hide=\"resultViewer.selectedOffers.length\">\n" +
    "                <div class=\"col-sm-5 rv-first-column\">\n" +
    "                    Wat\n" +
    "                </div>\n" +
    "                <div class=\"col-sm-2\">  Waar   </div>\n" +
    "                <div class=\"col-sm-2\">  Wanneer   </div>\n" +
    "                <div class=\"col-sm-3\">\n" +
    "                    <div role=\"presentation\" class=\"dropdown\">\n" +
    "                        <span class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n" +
    "                            <span class=\"selectedField\" ng-bind=\"resultViewer.activeSpecific.name\"></span> <span class=\"caret\"></span>\n" +
    "                        </span>\n" +
    "                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"rv-event-specific\">\n" +
    "                            <li role=\"presentation\" ng-repeat=\"specific in resultViewer.eventSpecifics\">\n" +
    "                                <a role=\"menuitem\" tabindex=\"-1\" href=\"#\" ng-bind=\"specific.name\"\n" +
    "                                   ng-click=\"resultViewer.activateSpecific(specific)\"></a>\n" +
    "                            </li>\n" +
    "                        </ul>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"row\" ng-show=\"resultViewer.selectedOffers.length\">\n" +
    "                <div class=\"col-sm-12 rv-first-column\">\n" +
    "                    <ng-pluralize count=\"resultViewer.querySelected ? resultViewer.totalItems : resultViewer.selectedOffers.length\"\n" +
    "                                  when=\"{'1': '1 item geselecteerd',\n" +
    "                                         'other': '{} items geselecteerd'}\">\n" +
    "                    </ng-pluralize>\n" +
    "\n" +
    "                    <button class=\"btn btn-default rv-action\" ng-click=\"label()\">\n" +
    "                        <i class=\"fa fa-tag\"></i> Labelen\n" +
    "                    </button>\n" +
    "                    <button class=\"btn btn-default rv-action\" ng-click=\"exportEvents()\">\n" +
    "                        <i class=\"fa fa-cloud-download\"></i> Exporteren\n" +
    "                    </button>\n" +
    "                    <a href=\"#\" class=\"alert-link rv-action\" ng-click=\"resultViewer.deselectAll()\">Deselecteren</a>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "\n" +
    "            <div class=\"rv-item-sidebar\">\n" +
    "                <div class=\"rv-selection-state\">\n" +
    "                    <span class=\"dropdown\" uib-dropdown ng-hide=\"resultViewer.selectedOffers.length\">\n" +
    "                      <span class=\"dropdown-toggle fa {{resultViewer.selectionState.icon}}\" uib-dropdown-toggle>\n" +
    "                      </span>\n" +
    "                      <ul class=\"dropdown-menu\">\n" +
    "                          <li role=\"presentation\" class=\"dropdown-header\">Selecteer</li>\n" +
    "                          <li ng-click=\"resultViewer.toggleSelection()\">\n" +
    "                              <a href>Alles op deze pagina <ng-pluralize count=\"resultViewer.events.length\" when=\"{'0': '(0 items)','one': '(1 item)','other': '({} items)'}\"></ng-pluralize></a>\n" +
    "                          </li>\n" +
    "                          <li ng-click=\"resultViewer.selectQuery()\">\n" +
    "                              <a href>Alle resultaten <ng-pluralize count=\"resultViewer.totalItems\" when=\"{'0': '(0 items)','one': '(1 item)','other': '({} items)'}\"></ng-pluralize></a>\n" +
    "                          </li>\n" +
    "                      </ul>\n" +
    "                    </span>\n" +
    "\n" +
    "                    <span ng-show=\"resultViewer.selectedOffers.length\" ng-click=\"resultViewer.toggleSelection()\"\n" +
    "                          class=\" fa {{resultViewer.selectionState.icon}}\"></span>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div ng-repeat=\"event in resultViewer.events\">\n" +
    "            <udb-event class=\"row rv-item\" ng-hide=\"eventCtrl.fetching\" ng-if=\"event['@type'] == 'Event'\"\n" +
    "                       ng-class=\"{selected: resultViewer.isOfferSelected(event)}\">\n" +
    "            </udb-event>\n" +
    "\n" +
    "            <udb-place class=\"row rv-item\" ng-hide=\"placeCtrl.fetching\" ng-if=\"event['@type'] == 'Place'\"\n" +
    "                       ng-class=\"{selected: resultViewer.isOfferSelected(event)}\">\n" +
    "            </udb-place>\n" +
    "        </div>\n" +
    "\n" +
    "\n" +
    "      <uib-pagination total-items=\"resultViewer.totalItems\" ng-model=\"currentPage\" items-per-page=\"resultViewer.pageSize\"\n" +
    "                  ng-show=\"resultViewer.totalItems > 0\" max-size=\"10\" ng-change=\"pageChanged()\"></uib-pagination>\n" +
    "\n" +
    "    <div class=\"col-sm-12\" ng-show=\"realQuery\">\n" +
    "        <span class=\"help-block\">\n" +
    "          uitgevoerde query: <strong>{{realQuery}}</strong>\n" +
    "        </span>\n" +
    "    </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "    <div class=\"rv-loading-overlay\" ng-show=\"resultViewer.loading\">\n" +
    "        <i class=\"fa fa-circle-o-notch fa-spin\"></i> Zoeken…\n" +
    "    </div>\n" +
    "</div>\n"
  );


  $templateCache.put('templates/card-systems.html',
    "<div class=\"form-group\">\n" +
    "    <div class=\"card-system\">\n" +
    "        <label translate=\"uitpas.cardSystems.card_systems\"></label>\n" +
    "        <span ng-hide=\"cardSystemSelector.uitpasUnavailable || (cardSystemSelector.availableCardSystems !== undefined)\">\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\"></i> Loading...\n" +
    "        </span>\n" +
    "        <span ng-show=\"cardSystemSelector.persistingCardSystems\">\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\"></i> Saving...\n" +
    "        </span>\n" +
    "\n" +
    "        <div class=\"card-systems\" ng-if=\"::cardSystemSelector.availableCardSystems\">\n" +
    "            <div class=\"uitpas-card-system row\" ng-repeat=\"cardSystem in cardSystemSelector.availableCardSystems\">\n" +
    "                <div class=\"col-sm-6\">\n" +
    "                    <div class=\"checkbox\">\n" +
    "                        <label>\n" +
    "                            <input type=\"checkbox\"\n" +
    "                                   ng-disabled=\"cardSystemSelector.persistingCardSystems\"\n" +
    "                                   ng-model=\"cardSystem.active\"\n" +
    "                                   ng-change=\"cardSystemSelector.activeCardSystemsChanged(cardSystem)\">\n" +
    "                                <span ng-bind=\"::cardSystem.name\"></span>\n" +
    "                        </label>\n" +
    "                    </div>\n" +
    "                </div>\n" +
    "\n" +
    "\n" +
    "                <div class=\"col-sm-6\" ng-if=\"cardSystem.distributionKeys.length\">\n" +
    "                    <select ng-model=\"cardSystem.assignedDistributionKey\"\n" +
    "                            ng-disabled=\"cardSystemSelector.persistingCardSystems || !cardSystem.active\"\n" +
    "                            ng-options=\"key as key.name for key in cardSystem.distributionKeys track by key.id\"\n" +
    "                            ng-change=\"cardSystemSelector.distributionKeyAssigned(cardSystem)\">\n" +
    "                    </select>\n" +
    "                </div>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "\n" +
    "        <div class=\"alert alert-danger\" role=\"alert\" ng-show=\"cardSystemSelector.uitpasUnavailable\">\n" +
    "            <p translate=\"uitpas.cardSystems.unavailable\"></p>\n" +
    "            <button class=\"btn btn-default\" ng-click=\"cardSystemSelector.refresh()\" translate=\"uitpas.cardSystems.retry\"></button>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>"
  );


  $templateCache.put('templates/uitpasInfo.html',
    "<div class=\"row extra-uitpas\" ng-if=\"showUitpasInfo\">\n" +
    "    <div class=\"extra-task\">\n" +
    "        <div class=\"col-sm-3\">\n" +
    "            <em class=\"extra-task-label\" translate-once=\"uitpas.uitpasInfo.uitpas\"></em>\n" +
    "            <span> </span>\n" +
    "            <i class=\"fa fa-circle-o-notch fa-spin\" ng-show=\"savingUitpas\"></i>\n" +
    "        </div>\n" +
    "        <div class=\"col-sm-9\">\n" +
    "            <div class=\"alert alert-info\" ng-show=\"!upic.showCardSystems\">\n" +
    "                <p translate-once=\"uitpas.uitpasInfo.uitpas_alert\"></p>\n" +
    "            </div>\n" +
    "\n" +
    "            <div ng-if=\"upic.showCardSystems\">\n" +
    "                <div class=\"alert alert-info\"\n" +
    "                     role=\"alert\" translate-once=\"uitpas.uitpasInfo.uitpas_info\">\n" +
    "                </div>\n" +
    "\n" +
    "                <card-system-selector organisation=\"upic.organizer\" offer-data=\"upic.eventFormData\">\n" +
    "                </card-system-selector>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>"
  );


  $templateCache.put('templates/organisation-suggestion.directive.html',
    "<span class=\"organisation-name\" ng-bind-html=\"os.organisation.name | uibTypeaheadHighlight:os.query\"></span>\n" +
    "<small ng-if=\"os.organisation.isUitpas\" class=\"label label-default uitpas-tag\">UiTPAS</small>"
  );


  $templateCache.put('templates/organisation-uitpas-typeahead-template.html',
    "<a>\n" +
    "    <span class=\"organisation-name\" ng-bind-html=\"match.model.name | uibTypeaheadHighlight:query\"></span>\n" +
    "    <small ng-if=\"match.model.isUitpas\" class=\"label label-default uitpas-tag\">UiTPAS</small>\n" +
    "</a>"
  );

}]);
})();

},{}],"@uirouter/angularjs":[function(require,module,exports){
/**
 * State-based routing for AngularJS
 * @version v0.3.2
 * @link http://angular-ui.github.com/
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */

/* commonjs package manager support (eg componentjs) */
if (typeof module !== "undefined" && typeof exports !== "undefined" && module.exports === exports){
  module.exports = 'ui.router';
}

(function (window, angular, undefined) {
/*jshint globalstrict:true*/
/*global angular:false*/
'use strict';

var isDefined = angular.isDefined,
    isFunction = angular.isFunction,
    isString = angular.isString,
    isObject = angular.isObject,
    isArray = angular.isArray,
    forEach = angular.forEach,
    extend = angular.extend,
    copy = angular.copy,
    toJson = angular.toJson;

function inherit(parent, extra) {
  return extend(new (extend(function() {}, { prototype: parent }))(), extra);
}

function merge(dst) {
  forEach(arguments, function(obj) {
    if (obj !== dst) {
      forEach(obj, function(value, key) {
        if (!dst.hasOwnProperty(key)) dst[key] = value;
      });
    }
  });
  return dst;
}

/**
 * Finds the common ancestor path between two states.
 *
 * @param {Object} first The first state.
 * @param {Object} second The second state.
 * @return {Array} Returns an array of state names in descending order, not including the root.
 */
function ancestors(first, second) {
  var path = [];

  for (var n in first.path) {
    if (first.path[n] !== second.path[n]) break;
    path.push(first.path[n]);
  }
  return path;
}

/**
 * IE8-safe wrapper for `Object.keys()`.
 *
 * @param {Object} object A JavaScript object.
 * @return {Array} Returns the keys of the object as an array.
 */
function objectKeys(object) {
  if (Object.keys) {
    return Object.keys(object);
  }
  var result = [];

  forEach(object, function(val, key) {
    result.push(key);
  });
  return result;
}

/**
 * IE8-safe wrapper for `Array.prototype.indexOf()`.
 *
 * @param {Array} array A JavaScript array.
 * @param {*} value A value to search the array for.
 * @return {Number} Returns the array index value of `value`, or `-1` if not present.
 */
function indexOf(array, value) {
  if (Array.prototype.indexOf) {
    return array.indexOf(value, Number(arguments[2]) || 0);
  }
  var len = array.length >>> 0, from = Number(arguments[2]) || 0;
  from = (from < 0) ? Math.ceil(from) : Math.floor(from);

  if (from < 0) from += len;

  for (; from < len; from++) {
    if (from in array && array[from] === value) return from;
  }
  return -1;
}

/**
 * Merges a set of parameters with all parameters inherited between the common parents of the
 * current state and a given destination state.
 *
 * @param {Object} currentParams The value of the current state parameters ($stateParams).
 * @param {Object} newParams The set of parameters which will be composited with inherited params.
 * @param {Object} $current Internal definition of object representing the current state.
 * @param {Object} $to Internal definition of object representing state to transition to.
 */
function inheritParams(currentParams, newParams, $current, $to) {
  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];

  for (var i in parents) {
    if (!parents[i] || !parents[i].params) continue;
    parentParams = objectKeys(parents[i].params);
    if (!parentParams.length) continue;

    for (var j in parentParams) {
      if (indexOf(inheritList, parentParams[j]) >= 0) continue;
      inheritList.push(parentParams[j]);
      inherited[parentParams[j]] = currentParams[parentParams[j]];
    }
  }
  return extend({}, inherited, newParams);
}

/**
 * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.
 *
 * @param {Object} a The first object.
 * @param {Object} b The second object.
 * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,
 *                     it defaults to the list of keys in `a`.
 * @return {Boolean} Returns `true` if the keys match, otherwise `false`.
 */
function equalForKeys(a, b, keys) {
  if (!keys) {
    keys = [];
    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility
  }

  for (var i=0; i<keys.length; i++) {
    var k = keys[i];
    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized
  }
  return true;
}

/**
 * Returns the subset of an object, based on a list of keys.
 *
 * @param {Array} keys
 * @param {Object} values
 * @return {Boolean} Returns a subset of `values`.
 */
function filterByKeys(keys, values) {
  var filtered = {};

  forEach(keys, function (name) {
    filtered[name] = values[name];
  });
  return filtered;
}

// like _.indexBy
// when you know that your index values will be unique, or you want last-one-in to win
function indexBy(array, propName) {
  var result = {};
  forEach(array, function(item) {
    result[item[propName]] = item;
  });
  return result;
}

// extracted from underscore.js
// Return a copy of the object only containing the whitelisted properties.
function pick(obj) {
  var copy = {};
  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
  forEach(keys, function(key) {
    if (key in obj) copy[key] = obj[key];
  });
  return copy;
}

// extracted from underscore.js
// Return a copy of the object omitting the blacklisted properties.
function omit(obj) {
  var copy = {};
  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
  for (var key in obj) {
    if (indexOf(keys, key) == -1) copy[key] = obj[key];
  }
  return copy;
}

function pluck(collection, key) {
  var result = isArray(collection) ? [] : {};

  forEach(collection, function(val, i) {
    result[i] = isFunction(key) ? key(val) : val[key];
  });
  return result;
}

function filter(collection, callback) {
  var array = isArray(collection);
  var result = array ? [] : {};
  forEach(collection, function(val, i) {
    if (callback(val, i)) {
      result[array ? result.length : i] = val;
    }
  });
  return result;
}

function map(collection, callback) {
  var result = isArray(collection) ? [] : {};

  forEach(collection, function(val, i) {
    result[i] = callback(val, i);
  });
  return result;
}

// issue #2676 #2889
function silenceUncaughtInPromise (promise) {
  return promise.then(undefined, function() {}) && promise;
}

/**
 * @ngdoc overview
 * @name ui.router.util
 *
 * @description
 * # ui.router.util sub-module
 *
 * This module is a dependency of other sub-modules. Do not include this module as a dependency
 * in your angular app (use {@link ui.router} module instead).
 *
 */
angular.module('ui.router.util', ['ng']);

/**
 * @ngdoc overview
 * @name ui.router.router
 * 
 * @requires ui.router.util
 *
 * @description
 * # ui.router.router sub-module
 *
 * This module is a dependency of other sub-modules. Do not include this module as a dependency
 * in your angular app (use {@link ui.router} module instead).
 */
angular.module('ui.router.router', ['ui.router.util']);

/**
 * @ngdoc overview
 * @name ui.router.state
 * 
 * @requires ui.router.router
 * @requires ui.router.util
 *
 * @description
 * # ui.router.state sub-module
 *
 * This module is a dependency of the main ui.router module. Do not include this module as a dependency
 * in your angular app (use {@link ui.router} module instead).
 * 
 */
angular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);

/**
 * @ngdoc overview
 * @name ui.router
 *
 * @requires ui.router.state
 *
 * @description
 * # ui.router
 * 
 * ## The main module for ui.router 
 * There are several sub-modules included with the ui.router module, however only this module is needed
 * as a dependency within your angular app. The other modules are for organization purposes. 
 *
 * The modules are:
 * * ui.router - the main "umbrella" module
 * * ui.router.router - 
 * 
 * *You'll need to include **only** this module as the dependency within your angular app.*
 * 
 * <pre>
 * <!doctype html>
 * <html ng-app="myApp">
 * <head>
 *   <script src="js/angular.js"></script>
 *   <!-- Include the ui-router script -->
 *   <script src="js/angular-ui-router.min.js"></script>
 *   <script>
 *     // ...and add 'ui.router' as a dependency
 *     var myApp = angular.module('myApp', ['ui.router']);
 *   </script>
 * </head>
 * <body>
 * </body>
 * </html>
 * </pre>
 */
angular.module('ui.router', ['ui.router.state']);

angular.module('ui.router.compat', ['ui.router']);

/**
 * @ngdoc object
 * @name ui.router.util.$resolve
 *
 * @requires $q
 * @requires $injector
 *
 * @description
 * Manages resolution of (acyclic) graphs of promises.
 */
$Resolve.$inject = ['$q', '$injector'];
function $Resolve(  $q,    $injector) {
  
  var VISIT_IN_PROGRESS = 1,
      VISIT_DONE = 2,
      NOTHING = {},
      NO_DEPENDENCIES = [],
      NO_LOCALS = NOTHING,
      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });
  

  /**
   * @ngdoc function
   * @name ui.router.util.$resolve#study
   * @methodOf ui.router.util.$resolve
   *
   * @description
   * Studies a set of invocables that are likely to be used multiple times.
   * <pre>
   * $resolve.study(invocables)(locals, parent, self)
   * </pre>
   * is equivalent to
   * <pre>
   * $resolve.resolve(invocables, locals, parent, self)
   * </pre>
   * but the former is more efficient (in fact `resolve` just calls `study` 
   * internally).
   *
   * @param {object} invocables Invocable objects
   * @return {function} a function to pass in locals, parent and self
   */
  this.study = function (invocables) {
    if (!isObject(invocables)) throw new Error("'invocables' must be an object");
    var invocableKeys = objectKeys(invocables || {});
    
    // Perform a topological sort of invocables to build an ordered plan
    var plan = [], cycle = [], visited = {};
    function visit(value, key) {
      if (visited[key] === VISIT_DONE) return;
      
      cycle.push(key);
      if (visited[key] === VISIT_IN_PROGRESS) {
        cycle.splice(0, indexOf(cycle, key));
        throw new Error("Cyclic dependency: " + cycle.join(" -> "));
      }
      visited[key] = VISIT_IN_PROGRESS;
      
      if (isString(value)) {
        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);
      } else {
        var params = $injector.annotate(value);
        forEach(params, function (param) {
          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);
        });
        plan.push(key, value, params);
      }
      
      cycle.pop();
      visited[key] = VISIT_DONE;
    }
    forEach(invocables, visit);
    invocables = cycle = visited = null; // plan is all that's required
    
    function isResolve(value) {
      return isObject(value) && value.then && value.$$promises;
    }
    
    return function (locals, parent, self) {
      if (isResolve(locals) && self === undefined) {
        self = parent; parent = locals; locals = null;
      }
      if (!locals) locals = NO_LOCALS;
      else if (!isObject(locals)) {
        throw new Error("'locals' must be an object");
      }       
      if (!parent) parent = NO_PARENT;
      else if (!isResolve(parent)) {
        throw new Error("'parent' must be a promise returned by $resolve.resolve()");
      }
      
      // To complete the overall resolution, we have to wait for the parent
      // promise and for the promise for each invokable in our plan.
      var resolution = $q.defer(),
          result = resolution.promise,
          promises = result.$$promises = {},
          values = extend({}, locals),
          wait = 1 + plan.length/3,
          merged = false;
          
      function done() {
        // Merge parent values we haven't got yet and publish our own $$values
        if (!--wait) {
          if (!merged) merge(values, parent.$$values); 
          result.$$values = values;
          result.$$promises = result.$$promises || true; // keep for isResolve()
          delete result.$$inheritedValues;
          resolution.resolve(values);
        }
      }
      
      function fail(reason) {
        result.$$failure = reason;
        resolution.reject(reason);
      }

      // Short-circuit if parent has already failed
      if (isDefined(parent.$$failure)) {
        fail(parent.$$failure);
        return result;
      }
      
      if (parent.$$inheritedValues) {
        merge(values, omit(parent.$$inheritedValues, invocableKeys));
      }

      // Merge parent values if the parent has already resolved, or merge
      // parent promises and wait if the parent resolve is still in progress.
      extend(promises, parent.$$promises);
      if (parent.$$values) {
        merged = merge(values, omit(parent.$$values, invocableKeys));
        result.$$inheritedValues = omit(parent.$$values, invocableKeys);
        done();
      } else {
        if (parent.$$inheritedValues) {
          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);
        }        
        parent.then(done, fail);
      }
      
      // Process each invocable in the plan, but ignore any where a local of the same name exists.
      for (var i=0, ii=plan.length; i<ii; i+=3) {
        if (locals.hasOwnProperty(plan[i])) done();
        else invoke(plan[i], plan[i+1], plan[i+2]);
      }
      
      function invoke(key, invocable, params) {
        // Create a deferred for this invocation. Failures will propagate to the resolution as well.
        var invocation = $q.defer(), waitParams = 0;
        function onfailure(reason) {
          invocation.reject(reason);
          fail(reason);
        }
        // Wait for any parameter that we have a promise for (either from parent or from this
        // resolve; in that case study() will have made sure it's ordered before us in the plan).
        forEach(params, function (dep) {
          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {
            waitParams++;
            promises[dep].then(function (result) {
              values[dep] = result;
              if (!(--waitParams)) proceed();
            }, onfailure);
          }
        });
        if (!waitParams) proceed();
        function proceed() {
          if (isDefined(result.$$failure)) return;
          try {
            invocation.resolve($injector.invoke(invocable, self, values));
            invocation.promise.then(function (result) {
              values[key] = result;
              done();
            }, onfailure);
          } catch (e) {
            onfailure(e);
          }
        }
        // Publish promise synchronously; invocations further down in the plan may depend on it.
        promises[key] = invocation.promise;
      }
      
      return result;
    };
  };
  
  /**
   * @ngdoc function
   * @name ui.router.util.$resolve#resolve
   * @methodOf ui.router.util.$resolve
   *
   * @description
   * Resolves a set of invocables. An invocable is a function to be invoked via 
   * `$injector.invoke()`, and can have an arbitrary number of dependencies. 
   * An invocable can either return a value directly,
   * or a `$q` promise. If a promise is returned it will be resolved and the 
   * resulting value will be used instead. Dependencies of invocables are resolved 
   * (in this order of precedence)
   *
   * - from the specified `locals`
   * - from another invocable that is part of this `$resolve` call
   * - from an invocable that is inherited from a `parent` call to `$resolve` 
   *   (or recursively
   * - from any ancestor `$resolve` of that parent).
   *
   * The return value of `$resolve` is a promise for an object that contains 
   * (in this order of precedence)
   *
   * - any `locals` (if specified)
   * - the resolved return values of all injectables
   * - any values inherited from a `parent` call to `$resolve` (if specified)
   *
   * The promise will resolve after the `parent` promise (if any) and all promises 
   * returned by injectables have been resolved. If any invocable 
   * (or `$injector.invoke`) throws an exception, or if a promise returned by an 
   * invocable is rejected, the `$resolve` promise is immediately rejected with the 
   * same error. A rejection of a `parent` promise (if specified) will likewise be 
   * propagated immediately. Once the `$resolve` promise has been rejected, no 
   * further invocables will be called.
   * 
   * Cyclic dependencies between invocables are not permitted and will cause `$resolve`
   * to throw an error. As a special case, an injectable can depend on a parameter 
   * with the same name as the injectable, which will be fulfilled from the `parent` 
   * injectable of the same name. This allows inherited values to be decorated. 
   * Note that in this case any other injectable in the same `$resolve` with the same
   * dependency would see the decorated value, not the inherited value.
   *
   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an 
   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) 
   * exception.
   *
   * Invocables are invoked eagerly as soon as all dependencies are available. 
   * This is true even for dependencies inherited from a `parent` call to `$resolve`.
   *
   * As a special case, an invocable can be a string, in which case it is taken to 
   * be a service name to be passed to `$injector.get()`. This is supported primarily 
   * for backwards-compatibility with the `resolve` property of `$routeProvider` 
   * routes.
   *
   * @param {object} invocables functions to invoke or 
   * `$injector` services to fetch.
   * @param {object} locals  values to make available to the injectables
   * @param {object} parent  a promise returned by another call to `$resolve`.
   * @param {object} self  the `this` for the invoked methods
   * @return {object} Promise for an object that contains the resolved return value
   * of all invocables, as well as any inherited and local values.
   */
  this.resolve = function (invocables, locals, parent, self) {
    return this.study(invocables)(locals, parent, self);
  };
}

angular.module('ui.router.util').service('$resolve', $Resolve);


/**
 * @ngdoc object
 * @name ui.router.util.$templateFactory
 *
 * @requires $http
 * @requires $templateCache
 * @requires $injector
 *
 * @description
 * Service. Manages loading of templates.
 */
$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];
function $TemplateFactory(  $http,   $templateCache,   $injector) {

  /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromConfig
   * @methodOf ui.router.util.$templateFactory
   *
   * @description
   * Creates a template from a configuration object. 
   *
   * @param {object} config Configuration object for which to load a template. 
   * The following properties are search in the specified order, and the first one 
   * that is defined is used to create the template:
   *
   * @param {string|object} config.template html string template or function to 
   * load via {@link ui.router.util.$templateFactory#fromString fromString}.
   * @param {string|object} config.templateUrl url to load or a function returning 
   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.
   * @param {Function} config.templateProvider function to invoke via 
   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.
   * @param {object} params  Parameters to pass to the template function.
   * @param {object} locals Locals to pass to `invoke` if the template is loaded 
   * via a `templateProvider`. Defaults to `{ params: params }`.
   *
   * @return {string|object}  The template html as a string, or a promise for 
   * that string,or `null` if no template is configured.
   */
  this.fromConfig = function (config, params, locals) {
    return (
      isDefined(config.template) ? this.fromString(config.template, params) :
      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :
      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :
      null
    );
  };

  /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromString
   * @methodOf ui.router.util.$templateFactory
   *
   * @description
   * Creates a template from a string or a function returning a string.
   *
   * @param {string|object} template html template as a string or function that 
   * returns an html template as a string.
   * @param {object} params Parameters to pass to the template function.
   *
   * @return {string|object} The template html as a string, or a promise for that 
   * string.
   */
  this.fromString = function (template, params) {
    return isFunction(template) ? template(params) : template;
  };

  /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromUrl
   * @methodOf ui.router.util.$templateFactory
   * 
   * @description
   * Loads a template from the a URL via `$http` and `$templateCache`.
   *
   * @param {string|Function} url url of the template to load, or a function 
   * that returns a url.
   * @param {Object} params Parameters to pass to the url function.
   * @return {string|Promise.<string>} The template html as a string, or a promise 
   * for that string.
   */
  this.fromUrl = function (url, params) {
    if (isFunction(url)) url = url(params);
    if (url == null) return null;
    else return $http
        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})
        .then(function(response) { return response.data; });
  };

  /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromProvider
   * @methodOf ui.router.util.$templateFactory
   *
   * @description
   * Creates a template by invoking an injectable provider function.
   *
   * @param {Function} provider Function to invoke via `$injector.invoke`
   * @param {Object} params Parameters for the template.
   * @param {Object} locals Locals to pass to `invoke`. Defaults to 
   * `{ params: params }`.
   * @return {string|Promise.<string>} The template html as a string, or a promise 
   * for that string.
   */
  this.fromProvider = function (provider, params, locals) {
    return $injector.invoke(provider, null, locals || { params: params });
  };
}

angular.module('ui.router.util').service('$templateFactory', $TemplateFactory);

var $$UMFP; // reference to $UrlMatcherFactoryProvider

/**
 * @ngdoc object
 * @name ui.router.util.type:UrlMatcher
 *
 * @description
 * Matches URLs against patterns and extracts named parameters from the path or the search
 * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list
 * of search parameters. Multiple search parameter names are separated by '&'. Search parameters
 * do not influence whether or not a URL is matched, but their values are passed through into
 * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.
 *
 * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace
 * syntax, which optionally allows a regular expression for the parameter to be specified:
 *
 * * `':'` name - colon placeholder
 * * `'*'` name - catch-all placeholder
 * * `'{' name '}'` - curly placeholder
 * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the
 *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.
 *
 * Parameter names may contain only word characters (latin letters, digits, and underscore) and
 * must be unique within the pattern (across both path and search parameters). For colon
 * placeholders or curly placeholders without an explicit regexp, a path parameter matches any
 * number of characters other than '/'. For catch-all placeholders the path parameter matches
 * any number of characters.
 *
 * Examples:
 *
 * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for
 *   trailing slashes, and patterns have to match the entire path, not just a prefix.
 * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or
 *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.
 * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.
 * * `'/user/{id:[^/]*}'` - Same as the previous example.
 * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id
 *   parameter consists of 1 to 8 hex digits.
 * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the
 *   path into the parameter 'path'.
 * * `'/files/*path'` - ditto.
 * * `'/calendar/{start:date}'` - Matches "/calendar/2014-11-12" (because the pattern defined
 *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start
 *
 * @param {string} pattern  The pattern to compile into a matcher.
 * @param {Object} config  A configuration object hash:
 * @param {Object=} parentMatcher Used to concatenate the pattern/config onto
 *   an existing UrlMatcher
 *
 * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.
 * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.
 *
 * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any
 *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns
 *   non-null) will start with this prefix.
 *
 * @property {string} source  The pattern that was passed into the constructor
 *
 * @property {string} sourcePath  The path portion of the source property
 *
 * @property {string} sourceSearch  The search portion of the source property
 *
 * @property {string} regex  The constructed regex that will be used to match against the url when
 *   it is time to determine which url will match.
 *
 * @returns {Object}  New `UrlMatcher` object
 */
function UrlMatcher(pattern, config, parentMatcher) {
  config = extend({ params: {} }, isObject(config) ? config : {});

  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:
  //   '*' name
  //   ':' name
  //   '{' name '}'
  //   '{' name ':' regexp '}'
  // The regular expression is somewhat complicated due to the need to allow curly braces
  // inside the regular expression. The placeholder regexp breaks down as follows:
  //    ([:*])([\w\[\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)
  //    \{([\w\[\]]+)(?:\:\s*( ... ))?\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case
  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either
  //    [^{}\\]+                       - anything other than curly braces or backslash
  //    \\.                            - a backslash escape
  //    \{(?:[^{}\\]+|\\.)*\}          - a matched set of curly braces containing other atoms
  var placeholder       = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
      searchPlaceholder = /([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
      compiled = '^', last = 0, m,
      segments = this.segments = [],
      parentParams = parentMatcher ? parentMatcher.params : {},
      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),
      paramNames = [];

  function addParameter(id, type, config, location) {
    paramNames.push(id);
    if (parentParams[id]) return parentParams[id];
    if (!/^\w+([-.]+\w+)*(?:\[\])?$/.test(id)) throw new Error("Invalid parameter name '" + id + "' in pattern '" + pattern + "'");
    if (params[id]) throw new Error("Duplicate parameter name '" + id + "' in pattern '" + pattern + "'");
    params[id] = new $$UMFP.Param(id, type, config, location);
    return params[id];
  }

  function quoteRegExp(string, pattern, squash, optional) {
    var surroundPattern = ['',''], result = string.replace(/[\\\[\]\^$*+?.()|{}]/g, "\\$&");
    if (!pattern) return result;
    switch(squash) {
      case false: surroundPattern = ['(', ')' + (optional ? "?" : "")]; break;
      case true:
        result = result.replace(/\/$/, '');
        surroundPattern = ['(?:\/(', ')|\/)?'];
      break;
      default:    surroundPattern = ['(' + squash + "|", ')?']; break;
    }
    return result + surroundPattern[0] + pattern + surroundPattern[1];
  }

  this.source = pattern;

  // Split into static segments separated by path parameter placeholders.
  // The number of segments is always 1 more than the number of parameters.
  function matchDetails(m, isSearch) {
    var id, regexp, segment, type, cfg, arrayMode;
    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null
    cfg         = config.params[id];
    segment     = pattern.substring(last, m.index);
    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);

    if (regexp) {
      type      = $$UMFP.type(regexp) || inherit($$UMFP.type("string"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });
    }

    return {
      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg
    };
  }

  var p, param, segment;
  while ((m = placeholder.exec(pattern))) {
    p = matchDetails(m, false);
    if (p.segment.indexOf('?') >= 0) break; // we're into the search part

    param = addParameter(p.id, p.type, p.cfg, "path");
    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);
    segments.push(p.segment);
    last = placeholder.lastIndex;
  }
  segment = pattern.substring(last);

  // Find any search parameter names and remove them from the last segment
  var i = segment.indexOf('?');

  if (i >= 0) {
    var search = this.sourceSearch = segment.substring(i);
    segment = segment.substring(0, i);
    this.sourcePath = pattern.substring(0, last + i);

    if (search.length > 0) {
      last = 0;
      while ((m = searchPlaceholder.exec(search))) {
        p = matchDetails(m, true);
        param = addParameter(p.id, p.type, p.cfg, "search");
        last = placeholder.lastIndex;
        // check if ?&
      }
    }
  } else {
    this.sourcePath = pattern;
    this.sourceSearch = '';
  }

  compiled += quoteRegExp(segment) + (config.strict === false ? '\/?' : '') + '$';
  segments.push(segment);

  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);
  this.prefix = segments[0];
  this.$$paramNames = paramNames;
}

/**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#concat
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Returns a new matcher for a pattern constructed by appending the path part and adding the
 * search parameters of the specified pattern to this pattern. The current pattern is not
 * modified. This can be understood as creating a pattern for URLs that are relative to (or
 * suffixes of) the current pattern.
 *
 * @example
 * The following two matchers are equivalent:
 * <pre>
 * new UrlMatcher('/user/{id}?q').concat('/details?date');
 * new UrlMatcher('/user/{id}/details?q&date');
 * </pre>
 *
 * @param {string} pattern  The pattern to append.
 * @param {Object} config  An object hash of the configuration for the matcher.
 * @returns {UrlMatcher}  A matcher for the concatenated pattern.
 */
UrlMatcher.prototype.concat = function (pattern, config) {
  // Because order of search parameters is irrelevant, we can add our own search
  // parameters to the end of the new pattern. Parse the new pattern by itself
  // and then join the bits together, but it's much easier to do this on a string level.
  var defaultConfig = {
    caseInsensitive: $$UMFP.caseInsensitive(),
    strict: $$UMFP.strictMode(),
    squash: $$UMFP.defaultSquashPolicy()
  };
  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);
};

UrlMatcher.prototype.toString = function () {
  return this.source;
};

/**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#exec
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Tests the specified path against this matcher, and returns an object containing the captured
 * parameter values, or null if the path does not match. The returned object contains the values
 * of any search parameters that are mentioned in the pattern, but their value may be null if
 * they are not present in `searchParams`. This means that search parameters are always treated
 * as optional.
 *
 * @example
 * <pre>
 * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {
 *   x: '1', q: 'hello'
 * });
 * // returns { id: 'bob', q: 'hello', r: null }
 * </pre>
 *
 * @param {string} path  The URL path to match, e.g. `$location.path()`.
 * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.
 * @returns {Object}  The captured parameter values.
 */
UrlMatcher.prototype.exec = function (path, searchParams) {
  var m = this.regexp.exec(path);
  if (!m) return null;
  searchParams = searchParams || {};

  var paramNames = this.parameters(), nTotal = paramNames.length,
    nPath = this.segments.length - 1,
    values = {}, i, j, cfg, paramName;

  if (nPath !== m.length - 1) throw new Error("Unbalanced capture group in route '" + this.source + "'");

  function decodePathArray(string) {
    function reverseString(str) { return str.split("").reverse().join(""); }
    function unquoteDashes(str) { return str.replace(/\\-/g, "-"); }

    var split = reverseString(string).split(/-(?!\\)/);
    var allReversed = map(split, reverseString);
    return map(allReversed, unquoteDashes).reverse();
  }

  var param, paramVal;
  for (i = 0; i < nPath; i++) {
    paramName = paramNames[i];
    param = this.params[paramName];
    paramVal = m[i+1];
    // if the param value matches a pre-replace pair, replace the value before decoding.
    for (j = 0; j < param.replace.length; j++) {
      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;
    }
    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);
    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);
    values[paramName] = param.value(paramVal);
  }
  for (/**/; i < nTotal; i++) {
    paramName = paramNames[i];
    values[paramName] = this.params[paramName].value(searchParams[paramName]);
    param = this.params[paramName];
    paramVal = searchParams[paramName];
    for (j = 0; j < param.replace.length; j++) {
      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;
    }
    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);
    values[paramName] = param.value(paramVal);
  }

  return values;
};

/**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#parameters
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Returns the names of all path and search parameters of this pattern in an unspecified order.
 *
 * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the
 *    pattern has no parameters, an empty array is returned.
 */
UrlMatcher.prototype.parameters = function (param) {
  if (!isDefined(param)) return this.$$paramNames;
  return this.params[param] || null;
};

/**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#validates
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Checks an object hash of parameters to validate their correctness according to the parameter
 * types of this `UrlMatcher`.
 *
 * @param {Object} params The object hash of parameters to validate.
 * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.
 */
UrlMatcher.prototype.validates = function (params) {
  return this.params.$$validates(params);
};

/**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#format
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Creates a URL that matches this pattern by substituting the specified values
 * for the path and search parameters. Null values for path parameters are
 * treated as empty strings.
 *
 * @example
 * <pre>
 * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });
 * // returns '/user/bob?q=yes'
 * </pre>
 *
 * @param {Object} values  the values to substitute for the parameters in this pattern.
 * @returns {string}  the formatted URL (path and optionally search part).
 */
UrlMatcher.prototype.format = function (values) {
  values = values || {};
  var segments = this.segments, params = this.parameters(), paramset = this.params;
  if (!this.validates(values)) return null;

  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];

  function encodeDashes(str) { // Replace dashes with encoded "\-"
    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });
  }

  for (i = 0; i < nTotal; i++) {
    var isPathParam = i < nPath;
    var name = params[i], param = paramset[name], value = param.value(values[name]);
    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);
    var squash = isDefaultValue ? param.squash : false;
    var encoded = param.type.encode(value);

    if (isPathParam) {
      var nextSegment = segments[i + 1];
      var isFinalPathParam = i + 1 === nPath;

      if (squash === false) {
        if (encoded != null) {
          if (isArray(encoded)) {
            result += map(encoded, encodeDashes).join("-");
          } else {
            result += encodeURIComponent(encoded);
          }
        }
        result += nextSegment;
      } else if (squash === true) {
        var capture = result.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
        result += nextSegment.match(capture)[1];
      } else if (isString(squash)) {
        result += squash + nextSegment;
      }

      if (isFinalPathParam && param.squash === true && result.slice(-1) === '/') result = result.slice(0, -1);
    } else {
      if (encoded == null || (isDefaultValue && squash !== false)) continue;
      if (!isArray(encoded)) encoded = [ encoded ];
      if (encoded.length === 0) continue;
      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');
      result += (search ? '&' : '?') + (name + '=' + encoded);
      search = true;
    }
  }

  return result;
};

/**
 * @ngdoc object
 * @name ui.router.util.type:Type
 *
 * @description
 * Implements an interface to define custom parameter types that can be decoded from and encoded to
 * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}
 * objects when matching or formatting URLs, or comparing or validating parameter values.
 *
 * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more
 * information on registering custom types.
 *
 * @param {Object} config  A configuration object which contains the custom type definition.  The object's
 *        properties will override the default methods and/or pattern in `Type`'s public interface.
 * @example
 * <pre>
 * {
 *   decode: function(val) { return parseInt(val, 10); },
 *   encode: function(val) { return val && val.toString(); },
 *   equals: function(a, b) { return this.is(a) && a === b; },
 *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },
 *   pattern: /\d+/
 * }
 * </pre>
 *
 * @property {RegExp} pattern The regular expression pattern used to match values of this type when
 *           coming from a substring of a URL.
 *
 * @returns {Object}  Returns a new `Type` object.
 */
function Type(config) {
  extend(this, config);
}

/**
 * @ngdoc function
 * @name ui.router.util.type:Type#is
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Detects whether a value is of a particular type. Accepts a native (decoded) value
 * and determines whether it matches the current `Type` object.
 *
 * @param {*} val  The value to check.
 * @param {string} key  Optional. If the type check is happening in the context of a specific
 *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the
 *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.
 * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.
 */
Type.prototype.is = function(val, key) {
  return true;
};

/**
 * @ngdoc function
 * @name ui.router.util.type:Type#encode
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the
 * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it
 * only needs to be a representation of `val` that has been coerced to a string.
 *
 * @param {*} val  The value to encode.
 * @param {string} key  The name of the parameter in which `val` is stored. Can be used for
 *        meta-programming of `Type` objects.
 * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.
 */
Type.prototype.encode = function(val, key) {
  return val;
};

/**
 * @ngdoc function
 * @name ui.router.util.type:Type#decode
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Converts a parameter value (from URL string or transition param) to a custom/native value.
 *
 * @param {string} val  The URL parameter value to decode.
 * @param {string} key  The name of the parameter in which `val` is stored. Can be used for
 *        meta-programming of `Type` objects.
 * @returns {*}  Returns a custom representation of the URL parameter value.
 */
Type.prototype.decode = function(val, key) {
  return val;
};

/**
 * @ngdoc function
 * @name ui.router.util.type:Type#equals
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Determines whether two decoded values are equivalent.
 *
 * @param {*} a  A value to compare against.
 * @param {*} b  A value to compare against.
 * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.
 */
Type.prototype.equals = function(a, b) {
  return a == b;
};

Type.prototype.$subPattern = function() {
  var sub = this.pattern.toString();
  return sub.substr(1, sub.length - 2);
};

Type.prototype.pattern = /.*/;

Type.prototype.toString = function() { return "{Type:" + this.name + "}"; };

/** Given an encoded string, or a decoded object, returns a decoded object */
Type.prototype.$normalize = function(val) {
  return this.is(val) ? val : this.decode(val);
};

/*
 * Wraps an existing custom Type as an array of Type, depending on 'mode'.
 * e.g.:
 * - urlmatcher pattern "/path?{queryParam[]:int}"
 * - url: "/path?queryParam=1&queryParam=2
 * - $stateParams.queryParam will be [1, 2]
 * if `mode` is "auto", then
 * - url: "/path?queryParam=1 will create $stateParams.queryParam: 1
 * - url: "/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]
 */
Type.prototype.$asArray = function(mode, isSearch) {
  if (!mode) return this;
  if (mode === "auto" && !isSearch) throw new Error("'auto' array mode is for query parameters only");

  function ArrayType(type, mode) {
    function bindTo(type, callbackName) {
      return function() {
        return type[callbackName].apply(type, arguments);
      };
    }

    // Wrap non-array value as array
    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }
    // Unwrap array value for "auto" mode. Return undefined for empty array.
    function arrayUnwrap(val) {
      switch(val.length) {
        case 0: return undefined;
        case 1: return mode === "auto" ? val[0] : val;
        default: return val;
      }
    }
    function falsey(val) { return !val; }

    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array
    function arrayHandler(callback, allTruthyMode) {
      return function handleArray(val) {
        if (isArray(val) && val.length === 0) return val;
        val = arrayWrap(val);
        var result = map(val, callback);
        if (allTruthyMode === true)
          return filter(result, falsey).length === 0;
        return arrayUnwrap(result);
      };
    }

    // Wraps type (.equals) functions to operate on each value of an array
    function arrayEqualsHandler(callback) {
      return function handleArray(val1, val2) {
        var left = arrayWrap(val1), right = arrayWrap(val2);
        if (left.length !== right.length) return false;
        for (var i = 0; i < left.length; i++) {
          if (!callback(left[i], right[i])) return false;
        }
        return true;
      };
    }

    this.encode = arrayHandler(bindTo(type, 'encode'));
    this.decode = arrayHandler(bindTo(type, 'decode'));
    this.is     = arrayHandler(bindTo(type, 'is'), true);
    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));
    this.pattern = type.pattern;
    this.$normalize = arrayHandler(bindTo(type, '$normalize'));
    this.name = type.name;
    this.$arrayMode = mode;
  }

  return new ArrayType(this, mode);
};



/**
 * @ngdoc object
 * @name ui.router.util.$urlMatcherFactory
 *
 * @description
 * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory
 * is also available to providers under the name `$urlMatcherFactoryProvider`.
 */
function $UrlMatcherFactory() {
  $$UMFP = this;

  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;

  // Use tildes to pre-encode slashes.
  // If the slashes are simply URLEncoded, the browser can choose to pre-decode them,
  // and bidirectional encoding/decoding fails.
  // Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character
  function valToString(val) { return val != null ? val.toString().replace(/(~|\/)/g, function (m) { return {'~':'~~', '/':'~2F'}[m]; }) : val; }
  function valFromString(val) { return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return {'~~':'~', '~2F':'/'}[m]; }) : val; }

  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {
    "string": {
      encode: valToString,
      decode: valFromString,
      // TODO: in 1.0, make string .is() return false if value is undefined/null by default.
      // In 0.2.x, string params are optional by default for backwards compat
      is: function(val) { return val == null || !isDefined(val) || typeof val === "string"; },
      pattern: /[^/]*/
    },
    "int": {
      encode: valToString,
      decode: function(val) { return parseInt(val, 10); },
      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },
      pattern: /\d+/
    },
    "bool": {
      encode: function(val) { return val ? 1 : 0; },
      decode: function(val) { return parseInt(val, 10) !== 0; },
      is: function(val) { return val === true || val === false; },
      pattern: /0|1/
    },
    "date": {
      encode: function (val) {
        if (!this.is(val))
          return undefined;
        return [ val.getFullYear(),
          ('0' + (val.getMonth() + 1)).slice(-2),
          ('0' + val.getDate()).slice(-2)
        ].join("-");
      },
      decode: function (val) {
        if (this.is(val)) return val;
        var match = this.capture.exec(val);
        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;
      },
      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },
      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },
      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
    },
    "json": {
      encode: angular.toJson,
      decode: angular.fromJson,
      is: angular.isObject,
      equals: angular.equals,
      pattern: /[^/]*/
    },
    "any": { // does not encode/decode
      encode: angular.identity,
      decode: angular.identity,
      equals: angular.equals,
      pattern: /.*/
    }
  };

  function getDefaultConfig() {
    return {
      strict: isStrictMode,
      caseInsensitive: isCaseInsensitive
    };
  }

  function isInjectable(value) {
    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));
  }

  /**
   * [Internal] Get the default value of a parameter, which may be an injectable function.
   */
  $UrlMatcherFactory.$$getDefaultValue = function(config) {
    if (!isInjectable(config.value)) return config.value;
    if (!injector) throw new Error("Injectable functions cannot be called at configuration time");
    return injector.invoke(config.value);
  };

  /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#caseInsensitive
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Defines whether URL matching should be case sensitive (the default behavior), or not.
   *
   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;
   * @returns {boolean} the current value of caseInsensitive
   */
  this.caseInsensitive = function(value) {
    if (isDefined(value))
      isCaseInsensitive = value;
    return isCaseInsensitive;
  };

  /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#strictMode
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Defines whether URLs should match trailing slashes, or not (the default behavior).
   *
   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.
   * @returns {boolean} the current value of strictMode
   */
  this.strictMode = function(value) {
    if (isDefined(value))
      isStrictMode = value;
    return isStrictMode;
  };

  /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Sets the default behavior when generating or matching URLs with default parameter values.
   *
   * @param {string} value A string that defines the default parameter URL squashing behavior.
   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL
   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the
   *             parameter is surrounded by slashes, squash (remove) one slash from the URL
   *    any other string, e.g. "~": When generating an href with a default parameter value, squash (remove)
   *             the parameter value from the URL and replace it with this string.
   */
  this.defaultSquashPolicy = function(value) {
    if (!isDefined(value)) return defaultSquashPolicy;
    if (value !== true && value !== false && !isString(value))
      throw new Error("Invalid squash policy: " + value + ". Valid policies: false, true, arbitrary-string");
    defaultSquashPolicy = value;
    return value;
  };

  /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#compile
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.
   *
   * @param {string} pattern  The URL pattern.
   * @param {Object} config  The config object hash.
   * @returns {UrlMatcher}  The UrlMatcher.
   */
  this.compile = function (pattern, config) {
    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));
  };

  /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#isMatcher
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.
   *
   * @param {Object} object  The object to perform the type check against.
   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by
   *          implementing all the same methods.
   */
  this.isMatcher = function (o) {
    if (!isObject(o)) return false;
    var result = true;

    forEach(UrlMatcher.prototype, function(val, name) {
      if (isFunction(val)) {
        result = result && (isDefined(o[name]) && isFunction(o[name]));
      }
    });
    return result;
  };

  /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#type
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to
   * generate URLs with typed parameters.
   *
   * @param {string} name  The type name.
   * @param {Object|Function} definition   The type definition. See
   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.
   * @param {Object|Function} definitionFn (optional) A function that is injected before the app
   *        runtime starts.  The result of this function is merged into the existing `definition`.
   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.
   *
   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.
   *
   * @example
   * This is a simple example of a custom type that encodes and decodes items from an
   * array, using the array index as the URL-encoded value:
   *
   * <pre>
   * var list = ['John', 'Paul', 'George', 'Ringo'];
   *
   * $urlMatcherFactoryProvider.type('listItem', {
   *   encode: function(item) {
   *     // Represent the list item in the URL using its corresponding index
   *     return list.indexOf(item);
   *   },
   *   decode: function(item) {
   *     // Look up the list item by index
   *     return list[parseInt(item, 10)];
   *   },
   *   is: function(item) {
   *     // Ensure the item is valid by checking to see that it appears
   *     // in the list
   *     return list.indexOf(item) > -1;
   *   }
   * });
   *
   * $stateProvider.state('list', {
   *   url: "/list/{item:listItem}",
   *   controller: function($scope, $stateParams) {
   *     console.log($stateParams.item);
   *   }
   * });
   *
   * // ...
   *
   * // Changes URL to '/list/3', logs "Ringo" to the console
   * $state.go('list', { item: "Ringo" });
   * </pre>
   *
   * This is a more complex example of a type that relies on dependency injection to
   * interact with services, and uses the parameter name from the URL to infer how to
   * handle encoding and decoding parameter values:
   *
   * <pre>
   * // Defines a custom type that gets a value from a service,
   * // where each service gets different types of values from
   * // a backend API:
   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {
   *
   *   // Matches up services to URL parameter names
   *   var services = {
   *     user: Users,
   *     post: Posts
   *   };
   *
   *   return {
   *     encode: function(object) {
   *       // Represent the object in the URL using its unique ID
   *       return object.id;
   *     },
   *     decode: function(value, key) {
   *       // Look up the object by ID, using the parameter
   *       // name (key) to call the correct service
   *       return services[key].findById(value);
   *     },
   *     is: function(object, key) {
   *       // Check that object is a valid dbObject
   *       return angular.isObject(object) && object.id && services[key];
   *     }
   *     equals: function(a, b) {
   *       // Check the equality of decoded objects by comparing
   *       // their unique IDs
   *       return a.id === b.id;
   *     }
   *   };
   * });
   *
   * // In a config() block, you can then attach URLs with
   * // type-annotated parameters:
   * $stateProvider.state('users', {
   *   url: "/users",
   *   // ...
   * }).state('users.item', {
   *   url: "/{user:dbObject}",
   *   controller: function($scope, $stateParams) {
   *     // $stateParams.user will now be an object returned from
   *     // the Users service
   *   },
   *   // ...
   * });
   * </pre>
   */
  this.type = function (name, definition, definitionFn) {
    if (!isDefined(definition)) return $types[name];
    if ($types.hasOwnProperty(name)) throw new Error("A type named '" + name + "' has already been defined.");

    $types[name] = new Type(extend({ name: name }, definition));
    if (definitionFn) {
      typeQueue.push({ name: name, def: definitionFn });
      if (!enqueue) flushTypeQueue();
    }
    return this;
  };

  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s
  function flushTypeQueue() {
    while(typeQueue.length) {
      var type = typeQueue.shift();
      if (type.pattern) throw new Error("You cannot override a type's .pattern at runtime.");
      angular.extend($types[type.name], injector.invoke(type.def));
    }
  }

  // Register default types. Store them in the prototype of $types.
  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });
  $types = inherit($types, {});

  /* No need to document $get, since it returns this */
  this.$get = ['$injector', function ($injector) {
    injector = $injector;
    enqueue = false;
    flushTypeQueue();

    forEach(defaultTypes, function(type, name) {
      if (!$types[name]) $types[name] = new Type(type);
    });
    return this;
  }];

  this.Param = function Param(id, type, config, location) {
    var self = this;
    config = unwrapShorthand(config);
    type = getType(config, type, location);
    var arrayMode = getArrayMode();
    type = arrayMode ? type.$asArray(arrayMode, location === "search") : type;
    if (type.name === "string" && !arrayMode && location === "path" && config.value === undefined)
      config.value = ""; // for 0.2.x; in 0.3.0+ do not automatically default to ""
    var isOptional = config.value !== undefined;
    var squash = getSquashPolicy(config, isOptional);
    var replace = getReplace(config, arrayMode, isOptional, squash);

    function unwrapShorthand(config) {
      var keys = isObject(config) ? objectKeys(config) : [];
      var isShorthand = indexOf(keys, "value") === -1 && indexOf(keys, "type") === -1 &&
                        indexOf(keys, "squash") === -1 && indexOf(keys, "array") === -1;
      if (isShorthand) config = { value: config };
      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };
      return config;
    }

    function getType(config, urlType, location) {
      if (config.type && urlType) throw new Error("Param '"+id+"' has two type configurations.");
      if (urlType) return urlType;
      if (!config.type) return (location === "config" ? $types.any : $types.string);

      if (angular.isString(config.type))
        return $types[config.type];
      if (config.type instanceof Type)
        return config.type;
      return new Type(config.type);
    }

    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.
    function getArrayMode() {
      var arrayDefaults = { array: (location === "search" ? "auto" : false) };
      var arrayParamNomenclature = id.match(/\[\]$/) ? { array: true } : {};
      return extend(arrayDefaults, arrayParamNomenclature, config).array;
    }

    /**
     * returns false, true, or the squash value to indicate the "default parameter url squash policy".
     */
    function getSquashPolicy(config, isOptional) {
      var squash = config.squash;
      if (!isOptional || squash === false) return false;
      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;
      if (squash === true || isString(squash)) return squash;
      throw new Error("Invalid squash policy: '" + squash + "'. Valid policies: false, true, or arbitrary string");
    }

    function getReplace(config, arrayMode, isOptional, squash) {
      var replace, configuredKeys, defaultPolicy = [
        { from: "",   to: (isOptional || arrayMode ? undefined : "") },
        { from: null, to: (isOptional || arrayMode ? undefined : "") }
      ];
      replace = isArray(config.replace) ? config.replace : [];
      if (isString(squash))
        replace.push({ from: squash, to: undefined });
      configuredKeys = map(replace, function(item) { return item.from; } );
      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);
    }

    /**
     * [Internal] Get the default value of a parameter, which may be an injectable function.
     */
    function $$getDefaultValue() {
      if (!injector) throw new Error("Injectable functions cannot be called at configuration time");
      var defaultValue = injector.invoke(config.$$fn);
      if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))
        throw new Error("Default value (" + defaultValue + ") for parameter '" + self.id + "' is not an instance of Type (" + self.type.name + ")");
      return defaultValue;
    }

    /**
     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the
     * default value, which may be the result of an injectable function.
     */
    function $value(value) {
      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }
      function $replace(value) {
        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });
        return replacement.length ? replacement[0] : value;
      }
      value = $replace(value);
      return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);
    }

    function toString() { return "{Param:" + id + " " + type + " squash: '" + squash + "' optional: " + isOptional + "}"; }

    extend(this, {
      id: id,
      type: type,
      location: location,
      array: arrayMode,
      squash: squash,
      replace: replace,
      isOptional: isOptional,
      value: $value,
      dynamic: undefined,
      config: config,
      toString: toString
    });
  };

  function ParamSet(params) {
    extend(this, params || {});
  }

  ParamSet.prototype = {
    $$new: function() {
      return inherit(this, extend(new ParamSet(), { $$parent: this}));
    },
    $$keys: function () {
      var keys = [], chain = [], parent = this,
        ignore = objectKeys(ParamSet.prototype);
      while (parent) { chain.push(parent); parent = parent.$$parent; }
      chain.reverse();
      forEach(chain, function(paramset) {
        forEach(objectKeys(paramset), function(key) {
            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);
        });
      });
      return keys;
    },
    $$values: function(paramValues) {
      var values = {}, self = this;
      forEach(self.$$keys(), function(key) {
        values[key] = self[key].value(paramValues && paramValues[key]);
      });
      return values;
    },
    $$equals: function(paramValues1, paramValues2) {
      var equal = true, self = this;
      forEach(self.$$keys(), function(key) {
        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];
        if (!self[key].type.equals(left, right)) equal = false;
      });
      return equal;
    },
    $$validates: function $$validate(paramValues) {
      var keys = this.$$keys(), i, param, rawVal, normalized, encoded;
      for (i = 0; i < keys.length; i++) {
        param = this[keys[i]];
        rawVal = paramValues[keys[i]];
        if ((rawVal === undefined || rawVal === null) && param.isOptional)
          break; // There was no parameter value, but the param is optional
        normalized = param.type.$normalize(rawVal);
        if (!param.type.is(normalized))
          return false; // The value was not of the correct Type, and could not be decoded to the correct Type
        encoded = param.type.encode(normalized);
        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))
          return false; // The value was of the correct type, but when encoded, did not match the Type's regexp
      }
      return true;
    },
    $$parent: undefined
  };

  this.ParamSet = ParamSet;
}

// Register as a provider so it's available to other providers
angular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);
angular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);

/**
 * @ngdoc object
 * @name ui.router.router.$urlRouterProvider
 *
 * @requires ui.router.util.$urlMatcherFactoryProvider
 * @requires $locationProvider
 *
 * @description
 * `$urlRouterProvider` has the responsibility of watching `$location`. 
 * When `$location` changes it runs through a list of rules one by one until a 
 * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify 
 * a url in a state configuration. All urls are compiled into a UrlMatcher object.
 *
 * There are several methods on `$urlRouterProvider` that make it useful to use directly
 * in your module config.
 */
$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];
function $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {
  var rules = [], otherwise = null, interceptDeferred = false, listener;

  // Returns a string that is a prefix of all strings matching the RegExp
  function regExpPrefix(re) {
    var prefix = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(re.source);
    return (prefix != null) ? prefix[1].replace(/\\(.)/g, "$1") : '';
  }

  // Interpolates matched values into a String.replace()-style pattern
  function interpolate(pattern, match) {
    return pattern.replace(/\$(\$|\d{1,2})/, function (m, what) {
      return match[what === '$' ? 0 : Number(what)];
    });
  }

  /**
   * @ngdoc function
   * @name ui.router.router.$urlRouterProvider#rule
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Defines rules that are used by `$urlRouterProvider` to find matches for
   * specific URLs.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *   // Here's an example of how you might allow case insensitive urls
   *   $urlRouterProvider.rule(function ($injector, $location) {
   *     var path = $location.path(),
   *         normalized = path.toLowerCase();
   *
   *     if (path !== normalized) {
   *       return normalized;
   *     }
   *   });
   * });
   * </pre>
   *
   * @param {function} rule Handler function that takes `$injector` and `$location`
   * services as arguments. You can use them to return a valid path as a string.
   *
   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance
   */
  this.rule = function (rule) {
    if (!isFunction(rule)) throw new Error("'rule' must be a function");
    rules.push(rule);
    return this;
  };

  /**
   * @ngdoc object
   * @name ui.router.router.$urlRouterProvider#otherwise
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Defines a path that is used when an invalid route is requested.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *   // if the path doesn't match any of the urls you configured
   *   // otherwise will take care of routing the user to the
   *   // specified url
   *   $urlRouterProvider.otherwise('/index');
   *
   *   // Example of using function rule as param
   *   $urlRouterProvider.otherwise(function ($injector, $location) {
   *     return '/a/valid/url';
   *   });
   * });
   * </pre>
   *
   * @param {string|function} rule The url path you want to redirect to or a function 
   * rule that returns the url path. The function version is passed two params: 
   * `$injector` and `$location` services, and must return a url string.
   *
   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance
   */
  this.otherwise = function (rule) {
    if (isString(rule)) {
      var redirect = rule;
      rule = function () { return redirect; };
    }
    else if (!isFunction(rule)) throw new Error("'rule' must be a function");
    otherwise = rule;
    return this;
  };


  function handleIfMatch($injector, handler, match) {
    if (!match) return false;
    var result = $injector.invoke(handler, handler, { $match: match });
    return isDefined(result) ? result : true;
  }

  /**
   * @ngdoc function
   * @name ui.router.router.$urlRouterProvider#when
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Registers a handler for a given url matching. 
   * 
   * If the handler is a string, it is
   * treated as a redirect, and is interpolated according to the syntax of match
   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).
   *
   * If the handler is a function, it is injectable. It gets invoked if `$location`
   * matches. You have the option of inject the match object as `$match`.
   *
   * The handler can return
   *
   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`
   *   will continue trying to find another one that matches.
   * - **string** which is treated as a redirect and passed to `$location.url()`
   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {
   *     if ($state.$current.navigable !== state ||
   *         !equalForKeys($match, $stateParams) {
   *      $state.transitionTo(state, $match, false);
   *     }
   *   });
   * });
   * </pre>
   *
   * @param {string|object} what The incoming path that you want to redirect.
   * @param {string|function} handler The path you want to redirect your user to.
   */
  this.when = function (what, handler) {
    var redirect, handlerIsString = isString(handler);
    if (isString(what)) what = $urlMatcherFactory.compile(what);

    if (!handlerIsString && !isFunction(handler) && !isArray(handler))
      throw new Error("invalid 'handler' in when()");

    var strategies = {
      matcher: function (what, handler) {
        if (handlerIsString) {
          redirect = $urlMatcherFactory.compile(handler);
          handler = ['$match', function ($match) { return redirect.format($match); }];
        }
        return extend(function ($injector, $location) {
          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));
        }, {
          prefix: isString(what.prefix) ? what.prefix : ''
        });
      },
      regex: function (what, handler) {
        if (what.global || what.sticky) throw new Error("when() RegExp must not be global or sticky");

        if (handlerIsString) {
          redirect = handler;
          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];
        }
        return extend(function ($injector, $location) {
          return handleIfMatch($injector, handler, what.exec($location.path()));
        }, {
          prefix: regExpPrefix(what)
        });
      }
    };

    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };

    for (var n in check) {
      if (check[n]) return this.rule(strategies[n](what, handler));
    }

    throw new Error("invalid 'what' in when()");
  };

  /**
   * @ngdoc function
   * @name ui.router.router.$urlRouterProvider#deferIntercept
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Disables (or enables) deferring location change interception.
   *
   * If you wish to customize the behavior of syncing the URL (for example, if you wish to
   * defer a transition but maintain the current URL), call this method at configuration time.
   * Then, at run time, call `$urlRouter.listen()` after you have configured your own
   * `$locationChangeSuccess` event handler.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *
   *   // Prevent $urlRouter from automatically intercepting URL changes;
   *   // this allows you to configure custom behavior in between
   *   // location changes and route synchronization:
   *   $urlRouterProvider.deferIntercept();
   *
   * }).run(function ($rootScope, $urlRouter, UserService) {
   *
   *   $rootScope.$on('$locationChangeSuccess', function(e) {
   *     // UserService is an example service for managing user state
   *     if (UserService.isLoggedIn()) return;
   *
   *     // Prevent $urlRouter's default handler from firing
   *     e.preventDefault();
   *
   *     UserService.handleLogin().then(function() {
   *       // Once the user has logged in, sync the current URL
   *       // to the router:
   *       $urlRouter.sync();
   *     });
   *   });
   *
   *   // Configures $urlRouter's listener *after* your custom listener
   *   $urlRouter.listen();
   * });
   * </pre>
   *
   * @param {boolean} defer Indicates whether to defer location change interception. Passing
            no parameter is equivalent to `true`.
   */
  this.deferIntercept = function (defer) {
    if (defer === undefined) defer = true;
    interceptDeferred = defer;
  };

  /**
   * @ngdoc object
   * @name ui.router.router.$urlRouter
   *
   * @requires $location
   * @requires $rootScope
   * @requires $injector
   * @requires $browser
   *
   * @description
   *
   */
  this.$get = $get;
  $get.$inject = ['$location', '$rootScope', '$injector', '$browser', '$sniffer'];
  function $get(   $location,   $rootScope,   $injector,   $browser,   $sniffer) {

    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;

    function appendBasePath(url, isHtml5, absolute) {
      if (baseHref === '/') return url;
      if (isHtml5) return baseHref.slice(0, -1) + url;
      if (absolute) return baseHref.slice(1) + url;
      return url;
    }

    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree
    function update(evt) {
      if (evt && evt.defaultPrevented) return;
      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;
      lastPushedUrl = undefined;
      // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573
      //if (ignoreUpdate) return true;

      function check(rule) {
        var handled = rule($injector, $location);

        if (!handled) return false;
        if (isString(handled)) $location.replace().url(handled);
        return true;
      }
      var n = rules.length, i;

      for (i = 0; i < n; i++) {
        if (check(rules[i])) return;
      }
      // always check otherwise last to allow dynamic updates to the set of rules
      if (otherwise) check(otherwise);
    }

    function listen() {
      listener = listener || $rootScope.$on('$locationChangeSuccess', update);
      return listener;
    }

    if (!interceptDeferred) listen();

    return {
      /**
       * @ngdoc function
       * @name ui.router.router.$urlRouter#sync
       * @methodOf ui.router.router.$urlRouter
       *
       * @description
       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.
       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,
       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed
       * with the transition by calling `$urlRouter.sync()`.
       *
       * @example
       * <pre>
       * angular.module('app', ['ui.router'])
       *   .run(function($rootScope, $urlRouter) {
       *     $rootScope.$on('$locationChangeSuccess', function(evt) {
       *       // Halt state change from even starting
       *       evt.preventDefault();
       *       // Perform custom logic
       *       var meetsRequirement = ...
       *       // Continue with the update and state transition if logic allows
       *       if (meetsRequirement) $urlRouter.sync();
       *     });
       * });
       * </pre>
       */
      sync: function() {
        update();
      },

      listen: function() {
        return listen();
      },

      update: function(read) {
        if (read) {
          location = $location.url();
          return;
        }
        if ($location.url() === location) return;

        $location.url(location);
        $location.replace();
      },

      push: function(urlMatcher, params, options) {
         var url = urlMatcher.format(params || {});

        // Handle the special hash param, if needed
        if (url !== null && params && params['#']) {
            url += '#' + params['#'];
        }

        $location.url(url);
        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;
        if (options && options.replace) $location.replace();
      },

      /**
       * @ngdoc function
       * @name ui.router.router.$urlRouter#href
       * @methodOf ui.router.router.$urlRouter
       *
       * @description
       * A URL generation method that returns the compiled URL for a given
       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.
       *
       * @example
       * <pre>
       * $bob = $urlRouter.href(new UrlMatcher("/about/:person"), {
       *   person: "bob"
       * });
       * // $bob == "/about/bob";
       * </pre>
       *
       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.
       * @param {object=} params An object of parameter values to fill the matcher's required parameters.
       * @param {object=} options Options object. The options are:
       *
       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. "http://www.example.com/fullurl".
       *
       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`
       */
      href: function(urlMatcher, params, options) {
        if (!urlMatcher.validates(params)) return null;

        var isHtml5 = $locationProvider.html5Mode();
        if (angular.isObject(isHtml5)) {
          isHtml5 = isHtml5.enabled;
        }

        isHtml5 = isHtml5 && $sniffer.history;
        
        var url = urlMatcher.format(params);
        options = options || {};

        if (!isHtml5 && url !== null) {
          url = "#" + $locationProvider.hashPrefix() + url;
        }

        // Handle special hash param, if needed
        if (url !== null && params && params['#']) {
          url += '#' + params['#'];
        }

        url = appendBasePath(url, isHtml5, options.absolute);

        if (!options.absolute || !url) {
          return url;
        }

        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();
        port = (port === 80 || port === 443 ? '' : ':' + port);

        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');
      }
    };
  }
}

angular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);

/**
 * @ngdoc object
 * @name ui.router.state.$stateProvider
 *
 * @requires ui.router.router.$urlRouterProvider
 * @requires ui.router.util.$urlMatcherFactoryProvider
 *
 * @description
 * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely
 * on state.
 *
 * A state corresponds to a "place" in the application in terms of the overall UI and
 * navigation. A state describes (via the controller / template / view properties) what
 * the UI looks like and does at that place.
 *
 * States often have things in common, and the primary way of factoring out these
 * commonalities in this model is via the state hierarchy, i.e. parent/child states aka
 * nested states.
 *
 * The `$stateProvider` provides interfaces to declare these states for your app.
 */
$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];
function $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {

  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';

  // Builds state properties from definition passed to registerState()
  var stateBuilder = {

    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.
    // state.children = [];
    // if (parent) parent.children.push(state);
    parent: function(state) {
      if (isDefined(state.parent) && state.parent) return findState(state.parent);
      // regex matches any valid composite state name
      // would match "contact.list" but not "contacts"
      var compositeName = /^(.+)\.[^.]+$/.exec(state.name);
      return compositeName ? findState(compositeName[1]) : root;
    },

    // inherit 'data' from parent and override by own values (if any)
    data: function(state) {
      if (state.parent && state.parent.data) {
        state.data = state.self.data = inherit(state.parent.data, state.data);
      }
      return state.data;
    },

    // Build a URLMatcher if necessary, either via a relative or absolute URL
    url: function(state) {
      var url = state.url, config = { params: state.params || {} };

      if (isString(url)) {
        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);
        return (state.parent.navigable || root).url.concat(url, config);
      }

      if (!url || $urlMatcherFactory.isMatcher(url)) return url;
      throw new Error("Invalid url '" + url + "' in state '" + state + "'");
    },

    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)
    navigable: function(state) {
      return state.url ? state : (state.parent ? state.parent.navigable : null);
    },

    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params
    ownParams: function(state) {
      var params = state.url && state.url.params || new $$UMFP.ParamSet();
      forEach(state.params || {}, function(config, id) {
        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, "config");
      });
      return params;
    },

    // Derive parameters for this state and ensure they're a super-set of parent's parameters
    params: function(state) {
      var ownParams = pick(state.ownParams, state.ownParams.$$keys());
      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();
    },

    // If there is no explicit multi-view configuration, make one up so we don't have
    // to handle both cases in the view directive later. Note that having an explicit
    // 'views' property will mean the default unnamed view properties are ignored. This
    // is also a good time to resolve view names to absolute names, so everything is a
    // straight lookup at link time.
    views: function(state) {
      var views = {};

      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {
        if (name.indexOf('@') < 0) name += '@' + state.parent.name;
        view.resolveAs = view.resolveAs || state.resolveAs || '$resolve';
        views[name] = view;
      });
      return views;
    },

    // Keep a full path from the root down to this state as this is needed for state activation.
    path: function(state) {
      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path
    },

    // Speed up $state.contains() as it's used a lot
    includes: function(state) {
      var includes = state.parent ? extend({}, state.parent.includes) : {};
      includes[state.name] = true;
      return includes;
    },

    $delegates: {}
  };

  function isRelative(stateName) {
    return stateName.indexOf(".") === 0 || stateName.indexOf("^") === 0;
  }

  function findState(stateOrName, base) {
    if (!stateOrName) return undefined;

    var isStr = isString(stateOrName),
        name  = isStr ? stateOrName : stateOrName.name,
        path  = isRelative(name);

    if (path) {
      if (!base) throw new Error("No reference point given for path '"  + name + "'");
      base = findState(base);
      
      var rel = name.split("."), i = 0, pathLength = rel.length, current = base;

      for (; i < pathLength; i++) {
        if (rel[i] === "" && i === 0) {
          current = base;
          continue;
        }
        if (rel[i] === "^") {
          if (!current.parent) throw new Error("Path '" + name + "' not valid for state '" + base.name + "'");
          current = current.parent;
          continue;
        }
        break;
      }
      rel = rel.slice(i).join(".");
      name = current.name + (current.name && rel ? "." : "") + rel;
    }
    var state = states[name];

    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {
      return state;
    }
    return undefined;
  }

  function queueState(parentName, state) {
    if (!queue[parentName]) {
      queue[parentName] = [];
    }
    queue[parentName].push(state);
  }

  function flushQueuedChildren(parentName) {
    var queued = queue[parentName] || [];
    while(queued.length) {
      registerState(queued.shift());
    }
  }

  function registerState(state) {
    // Wrap a new object around the state so we can store our private details easily.
    state = inherit(state, {
      self: state,
      resolve: state.resolve || {},
      toString: function() { return this.name; }
    });

    var name = state.name;
    if (!isString(name) || name.indexOf('@') >= 0) throw new Error("State must have a valid name");
    if (states.hasOwnProperty(name)) throw new Error("State '" + name + "' is already defined");

    // Get parent name
    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))
        : (isString(state.parent)) ? state.parent
        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name
        : '';

    // If parent is not registered yet, add state to queue and register later
    if (parentName && !states[parentName]) {
      return queueState(parentName, state.self);
    }

    for (var key in stateBuilder) {
      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);
    }
    states[name] = state;

    // Register the state in the global state list and with $urlRouter if necessary.
    if (!state[abstractKey] && state.url) {
      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {
        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {
          $state.transitionTo(state, $match, { inherit: true, location: false });
        }
      }]);
    }

    // Register any queued children
    flushQueuedChildren(name);

    return state;
  }

  // Checks text to see if it looks like a glob.
  function isGlob (text) {
    return text.indexOf('*') > -1;
  }

  // Returns true if glob matches current $state name.
  function doesStateMatchGlob (glob) {
    var globSegments = glob.split('.'),
        segments = $state.$current.name.split('.');

    //match single stars
    for (var i = 0, l = globSegments.length; i < l; i++) {
      if (globSegments[i] === '*') {
        segments[i] = '*';
      }
    }

    //match greedy starts
    if (globSegments[0] === '**') {
       segments = segments.slice(indexOf(segments, globSegments[1]));
       segments.unshift('**');
    }
    //match greedy ends
    if (globSegments[globSegments.length - 1] === '**') {
       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);
       segments.push('**');
    }

    if (globSegments.length != segments.length) {
      return false;
    }

    return segments.join('') === globSegments.join('');
  }


  // Implicit root state that is always active
  root = registerState({
    name: '',
    url: '^',
    views: null,
    'abstract': true
  });
  root.navigable = null;


  /**
   * @ngdoc function
   * @name ui.router.state.$stateProvider#decorator
   * @methodOf ui.router.state.$stateProvider
   *
   * @description
   * Allows you to extend (carefully) or override (at your own peril) the 
   * `stateBuilder` object used internally by `$stateProvider`. This can be used 
   * to add custom functionality to ui-router, for example inferring templateUrl 
   * based on the state name.
   *
   * When passing only a name, it returns the current (original or decorated) builder
   * function that matches `name`.
   *
   * The builder functions that can be decorated are listed below. Though not all
   * necessarily have a good use case for decoration, that is up to you to decide.
   *
   * In addition, users can attach custom decorators, which will generate new 
   * properties within the state's internal definition. There is currently no clear 
   * use-case for this beyond accessing internal states (i.e. $state.$current), 
   * however, expect this to become increasingly relevant as we introduce additional 
   * meta-programming features.
   *
   * **Warning**: Decorators should not be interdependent because the order of 
   * execution of the builder functions in non-deterministic. Builder functions 
   * should only be dependent on the state definition object and super function.
   *
   *
   * Existing builder functions and current return values:
   *
   * - **parent** `{object}` - returns the parent state object.
   * - **data** `{object}` - returns state data, including any inherited data that is not
   *   overridden by own values (if any).
   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}
   *   or `null`.
   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is 
   *   navigable).
   * - **params** `{object}` - returns an array of state params that are ensured to 
   *   be a super-set of parent's params.
   * - **views** `{object}` - returns a views object where each key is an absolute view 
   *   name (i.e. "viewName@stateName") and each value is the config object 
   *   (template, controller) for the view. Even when you don't use the views object 
   *   explicitly on a state config, one is still created for you internally.
   *   So by decorating this builder function you have access to decorating template 
   *   and controller properties.
   * - **ownParams** `{object}` - returns an array of params that belong to the state, 
   *   not including any params defined by ancestor states.
   * - **path** `{string}` - returns the full path from the root down to this state. 
   *   Needed for state activation.
   * - **includes** `{object}` - returns an object that includes every state that 
   *   would pass a `$state.includes()` test.
   *
   * @example
   * <pre>
   * // Override the internal 'views' builder with a function that takes the state
   * // definition, and a reference to the internal function being overridden:
   * $stateProvider.decorator('views', function (state, parent) {
   *   var result = {},
   *       views = parent(state);
   *
   *   angular.forEach(views, function (config, name) {
   *     var autoName = (state.name + '.' + name).replace('.', '/');
   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';
   *     result[name] = config;
   *   });
   *   return result;
   * });
   *
   * $stateProvider.state('home', {
   *   views: {
   *     'contact.list': { controller: 'ListController' },
   *     'contact.item': { controller: 'ItemController' }
   *   }
   * });
   *
   * // ...
   *
   * $state.go('home');
   * // Auto-populates list and item views with /partials/home/contact/list.html,
   * // and /partials/home/contact/item.html, respectively.
   * </pre>
   *
   * @param {string} name The name of the builder function to decorate. 
   * @param {object} func A function that is responsible for decorating the original 
   * builder function. The function receives two parameters:
   *
   *   - `{object}` - state - The state config object.
   *   - `{object}` - super - The original builder function.
   *
   * @return {object} $stateProvider - $stateProvider instance
   */
  this.decorator = decorator;
  function decorator(name, func) {
    /*jshint validthis: true */
    if (isString(name) && !isDefined(func)) {
      return stateBuilder[name];
    }
    if (!isFunction(func) || !isString(name)) {
      return this;
    }
    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {
      stateBuilder.$delegates[name] = stateBuilder[name];
    }
    stateBuilder[name] = func;
    return this;
  }

  /**
   * @ngdoc function
   * @name ui.router.state.$stateProvider#state
   * @methodOf ui.router.state.$stateProvider
   *
   * @description
   * Registers a state configuration under a given state name. The stateConfig object
   * has the following acceptable properties.
   *
   * @param {string} name A unique state name, e.g. "home", "about", "contacts".
   * To create a parent/child state use a dot, e.g. "about.sales", "home.newest".
   * @param {object} stateConfig State configuration object.
   * @param {string|function=} stateConfig.template
   * <a id='template'></a>
   *   html template as a string or a function that returns
   *   an html template as a string which should be used by the uiView directives. This property 
   *   takes precedence over templateUrl.
   *   
   *   If `template` is a function, it will be called with the following parameters:
   *
   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by
   *     applying the current state
   *
   * <pre>template:
   *   "<h1>inline template definition</h1>" +
   *   "<div ui-view></div>"</pre>
   * <pre>template: function(params) {
   *       return "<h1>generated template</h1>"; }</pre>
   * </div>
   *
   * @param {string|function=} stateConfig.templateUrl
   * <a id='templateUrl'></a>
   *
   *   path or function that returns a path to an html
   *   template that should be used by uiView.
   *   
   *   If `templateUrl` is a function, it will be called with the following parameters:
   *
   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by 
   *     applying the current state
   *
   * <pre>templateUrl: "home.html"</pre>
   * <pre>templateUrl: function(params) {
   *     return myTemplates[params.pageId]; }</pre>
   *
   * @param {function=} stateConfig.templateProvider
   * <a id='templateProvider'></a>
   *    Provider function that returns HTML content string.
   * <pre> templateProvider:
   *       function(MyTemplateService, params) {
   *         return MyTemplateService.getTemplate(params.pageId);
   *       }</pre>
   *
   * @param {string|function=} stateConfig.controller
   * <a id='controller'></a>
   *
   *  Controller fn that should be associated with newly
   *   related scope or the name of a registered controller if passed as a string.
   *   Optionally, the ControllerAs may be declared here.
   * <pre>controller: "MyRegisteredController"</pre>
   * <pre>controller:
   *     "MyRegisteredController as fooCtrl"}</pre>
   * <pre>controller: function($scope, MyService) {
   *     $scope.data = MyService.getData(); }</pre>
   *
   * @param {function=} stateConfig.controllerProvider
   * <a id='controllerProvider'></a>
   *
   * Injectable provider function that returns the actual controller or string.
   * <pre>controllerProvider:
   *   function(MyResolveData) {
   *     if (MyResolveData.foo)
   *       return "FooCtrl"
   *     else if (MyResolveData.bar)
   *       return "BarCtrl";
   *     else return function($scope) {
   *       $scope.baz = "Qux";
   *     }
   *   }</pre>
   *
   * @param {string=} stateConfig.controllerAs
   * <a id='controllerAs'></a>
   * 
   * A controller alias name. If present the controller will be
   *   published to scope under the controllerAs name.
   * <pre>controllerAs: "myCtrl"</pre>
   *
   * @param {string|object=} stateConfig.parent
   * <a id='parent'></a>
   * Optionally specifies the parent state of this state.
   *
   * <pre>parent: 'parentState'</pre>
   * <pre>parent: parentState // JS variable</pre>
   *
   * @param {object=} stateConfig.resolve
   * <a id='resolve'></a>
   *
   * An optional map&lt;string, function&gt; of dependencies which
   *   should be injected into the controller. If any of these dependencies are promises, 
   *   the router will wait for them all to be resolved before the controller is instantiated.
   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired
   *   and the values of the resolved promises are injected into any controllers that reference them.
   *   If any  of the promises are rejected the $stateChangeError event is fired.
   *
   *   The map object is:
   *   
   *   - key - {string}: name of dependency to be injected into controller
   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, 
   *     it is injected and return value it treated as dependency. If result is a promise, it is 
   *     resolved before its value is injected into controller.
   *
   * <pre>resolve: {
   *     myResolve1:
   *       function($http, $stateParams) {
   *         return $http.get("/api/foos/"+stateParams.fooID);
   *       }
   *     }</pre>
   *
   * @param {string=} stateConfig.url
   * <a id='url'></a>
   *
   *   A url fragment with optional parameters. When a state is navigated or
   *   transitioned to, the `$stateParams` service will be populated with any 
   *   parameters that were passed.
   *
   *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for
   *   more details on acceptable patterns )
   *
   * examples:
   * <pre>url: "/home"
   * url: "/users/:userid"
   * url: "/books/{bookid:[a-zA-Z_-]}"
   * url: "/books/{categoryid:int}"
   * url: "/books/{publishername:string}/{categoryid:int}"
   * url: "/messages?before&after"
   * url: "/messages?{before:date}&{after:date}"
   * url: "/messages/:mailboxid?{before:date}&{after:date}"
   * </pre>
   *
   * @param {object=} stateConfig.views
   * <a id='views'></a>
   * an optional map&lt;string, object&gt; which defined multiple views, or targets views
   * manually/explicitly.
   *
   * Examples:
   *
   * Targets three named `ui-view`s in the parent state's template
   * <pre>views: {
   *     header: {
   *       controller: "headerCtrl",
   *       templateUrl: "header.html"
   *     }, body: {
   *       controller: "bodyCtrl",
   *       templateUrl: "body.html"
   *     }, footer: {
   *       controller: "footCtrl",
   *       templateUrl: "footer.html"
   *     }
   *   }</pre>
   *
   * Targets named `ui-view="header"` from grandparent state 'top''s template, and named `ui-view="body" from parent state's template.
   * <pre>views: {
   *     'header@top': {
   *       controller: "msgHeaderCtrl",
   *       templateUrl: "msgHeader.html"
   *     }, 'body': {
   *       controller: "messagesCtrl",
   *       templateUrl: "messages.html"
   *     }
   *   }</pre>
   *
   * @param {boolean=} [stateConfig.abstract=false]
   * <a id='abstract'></a>
   * An abstract state will never be directly activated,
   *   but can provide inherited properties to its common children states.
   * <pre>abstract: true</pre>
   *
   * @param {function=} stateConfig.onEnter
   * <a id='onEnter'></a>
   *
   * Callback function for when a state is entered. Good way
   *   to trigger an action or dispatch an event, such as opening a dialog.
   * If minifying your scripts, make sure to explicitly annotate this function,
   * because it won't be automatically annotated by your build tools.
   *
   * <pre>onEnter: function(MyService, $stateParams) {
   *     MyService.foo($stateParams.myParam);
   * }</pre>
   *
   * @param {function=} stateConfig.onExit
   * <a id='onExit'></a>
   *
   * Callback function for when a state is exited. Good way to
   *   trigger an action or dispatch an event, such as opening a dialog.
   * If minifying your scripts, make sure to explicitly annotate this function,
   * because it won't be automatically annotated by your build tools.
   *
   * <pre>onExit: function(MyService, $stateParams) {
   *     MyService.cleanup($stateParams.myParam);
   * }</pre>
   *
   * @param {boolean=} [stateConfig.reloadOnSearch=true]
   * <a id='reloadOnSearch'></a>
   *
   * If `false`, will not retrigger the same state
   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). 
   *   Useful for when you'd like to modify $location.search() without triggering a reload.
   * <pre>reloadOnSearch: false</pre>
   *
   * @param {object=} stateConfig.data
   * <a id='data'></a>
   *
   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is
   *   prototypally inherited.  In other words, adding a data property to a state adds it to
   *   the entire subtree via prototypal inheritance.
   *
   * <pre>data: {
   *     requiredRole: 'foo'
   * } </pre>
   *
   * @param {object=} stateConfig.params
   * <a id='params'></a>
   *
   * A map which optionally configures parameters declared in the `url`, or
   *   defines additional non-url parameters.  For each parameter being
   *   configured, add a configuration object keyed to the name of the parameter.
   *
   *   Each parameter configuration object may contain the following properties:
   *
   *   - ** value ** - {object|function=}: specifies the default value for this
   *     parameter.  This implicitly sets this parameter as optional.
   *
   *     When UI-Router routes to a state and no value is
   *     specified for this parameter in the URL or transition, the
   *     default value will be used instead.  If `value` is a function,
   *     it will be injected and invoked, and the return value used.
   *
   *     *Note*: `undefined` is treated as "no default value" while `null`
   *     is treated as "the default value is `null`".
   *
   *     *Shorthand*: If you only need to configure the default value of the
   *     parameter, you may use a shorthand syntax.   In the **`params`**
   *     map, instead mapping the param name to a full parameter configuration
   *     object, simply set map it to the default parameter value, e.g.:
   *
   * <pre>// define a parameter's default value
   * params: {
   *     param1: { value: "defaultValue" }
   * }
   * // shorthand default values
   * params: {
   *     param1: "defaultValue",
   *     param2: "param2Default"
   * }</pre>
   *
   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be
   *     treated as an array of values.  If you specified a Type, the value will be
   *     treated as an array of the specified Type.  Note: query parameter values
   *     default to a special `"auto"` mode.
   *
   *     For query parameters in `"auto"` mode, if multiple  values for a single parameter
   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values
   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if
   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single
   *     value (e.g.: `{ foo: '1' }`).
   *
   * <pre>params: {
   *     param1: { array: true }
   * }</pre>
   *
   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when
   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the
   *     configured default squash policy.
   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})
   *
   *   There are three squash settings:
   *
   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL
   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed
   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.
   *       This can allow for cleaner looking URLs.
   *     - `"<arbitrary string>"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.
   *
   * <pre>params: {
   *     param1: {
   *       value: "defaultId",
   *       squash: true
   * } }
   * // squash "defaultValue" to "~"
   * params: {
   *     param1: {
   *       value: "defaultValue",
   *       squash: "~"
   * } }
   * </pre>
   *
   *
   * @example
   * <pre>
   * // Some state name examples
   *
   * // stateName can be a single top-level name (must be unique).
   * $stateProvider.state("home", {});
   *
   * // Or it can be a nested state name. This state is a child of the
   * // above "home" state.
   * $stateProvider.state("home.newest", {});
   *
   * // Nest states as deeply as needed.
   * $stateProvider.state("home.newest.abc.xyz.inception", {});
   *
   * // state() returns $stateProvider, so you can chain state declarations.
   * $stateProvider
   *   .state("home", {})
   *   .state("about", {})
   *   .state("contacts", {});
   * </pre>
   *
   */
  this.state = state;
  function state(name, definition) {
    /*jshint validthis: true */
    if (isObject(name)) definition = name;
    else definition.name = name;
    registerState(definition);
    return this;
  }

  /**
   * @ngdoc object
   * @name ui.router.state.$state
   *
   * @requires $rootScope
   * @requires $q
   * @requires ui.router.state.$view
   * @requires $injector
   * @requires ui.router.util.$resolve
   * @requires ui.router.state.$stateParams
   * @requires ui.router.router.$urlRouter
   *
   * @property {object} params A param object, e.g. {sectionId: section.id)}, that 
   * you'd like to test against the current active state.
   * @property {object} current A reference to the state's config object. However 
   * you passed it in. Useful for accessing custom data.
   * @property {object} transition Currently pending transition. A promise that'll 
   * resolve or reject.
   *
   * @description
   * `$state` service is responsible for representing states as well as transitioning
   * between them. It also provides interfaces to ask for current state or even states
   * you're coming from.
   */
  this.$get = $get;
  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];
  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {

    var TransitionSupersededError = new Error('transition superseded');

    var TransitionSuperseded = silenceUncaughtInPromise($q.reject(TransitionSupersededError));
    var TransitionPrevented = silenceUncaughtInPromise($q.reject(new Error('transition prevented')));
    var TransitionAborted = silenceUncaughtInPromise($q.reject(new Error('transition aborted')));
    var TransitionFailed = silenceUncaughtInPromise($q.reject(new Error('transition failed')));

    // Handles the case where a state which is the target of a transition is not found, and the user
    // can optionally retry or defer the transition
    function handleRedirect(redirect, state, params, options) {
      /**
       * @ngdoc event
       * @name ui.router.state.$state#$stateNotFound
       * @eventOf ui.router.state.$state
       * @eventType broadcast on root scope
       * @description
       * Fired when a requested state **cannot be found** using the provided state name during transition.
       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by
       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,
       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the
       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.
       *
       * @param {Object} event Event object.
       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.
       * @param {State} fromState Current state object.
       * @param {Object} fromParams Current state params.
       *
       * @example
       *
       * <pre>
       * // somewhere, assume lazy.state has not been defined
       * $state.go("lazy.state", {a:1, b:2}, {inherit:false});
       *
       * // somewhere else
       * $scope.$on('$stateNotFound',
       * function(event, unfoundState, fromState, fromParams){
       *     console.log(unfoundState.to); // "lazy.state"
       *     console.log(unfoundState.toParams); // {a:1, b:2}
       *     console.log(unfoundState.options); // {inherit:false} + default options
       * })
       * </pre>
       */
      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);

      if (evt.defaultPrevented) {
        $urlRouter.update();
        return TransitionAborted;
      }

      if (!evt.retry) {
        return null;
      }

      // Allow the handler to return a promise to defer state lookup retry
      if (options.$retry) {
        $urlRouter.update();
        return TransitionFailed;
      }
      var retryTransition = $state.transition = $q.when(evt.retry);

      retryTransition.then(function() {
        if (retryTransition !== $state.transition) {
          $rootScope.$broadcast('$stateChangeCancel', redirect.to, redirect.toParams, state, params);
          return TransitionSuperseded;
        }
        redirect.options.$retry = true;
        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);
      }, function() {
        return TransitionAborted;
      });
      $urlRouter.update();

      return retryTransition;
    }

    root.locals = { resolve: null, globals: { $stateParams: {} } };

    $state = {
      params: {},
      current: root.self,
      $current: root,
      transition: null
    };

    /**
     * @ngdoc function
     * @name ui.router.state.$state#reload
     * @methodOf ui.router.state.$state
     *
     * @description
     * A method that force reloads the current state. All resolves are re-resolved,
     * controllers reinstantiated, and events re-fired.
     *
     * @example
     * <pre>
     * var app angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.reload = function(){
     *     $state.reload();
     *   }
     * });
     * </pre>
     *
     * `reload()` is just an alias for:
     * <pre>
     * $state.transitionTo($state.current, $stateParams, { 
     *   reload: true, inherit: false, notify: true
     * });
     * </pre>
     *
     * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.
     * @example
     * <pre>
     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' 
     * //and current state is 'contacts.detail.item'
     * var app angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.reload = function(){
     *     //will reload 'contact.detail' and 'contact.detail.item' states
     *     $state.reload('contact.detail');
     *   }
     * });
     * </pre>
     *
     * `reload()` is just an alias for:
     * <pre>
     * $state.transitionTo($state.current, $stateParams, { 
     *   reload: true, inherit: false, notify: true
     * });
     * </pre>

     * @returns {promise} A promise representing the state of the new transition. See
     * {@link ui.router.state.$state#methods_go $state.go}.
     */
    $state.reload = function reload(state) {
      return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true});
    };

    /**
     * @ngdoc function
     * @name ui.router.state.$state#go
     * @methodOf ui.router.state.$state
     *
     * @description
     * Convenience method for transitioning to a new state. `$state.go` calls 
     * `$state.transitionTo` internally but automatically sets options to 
     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. 
     * This allows you to easily use an absolute or relative to path and specify 
     * only the parameters you'd like to update (while letting unspecified parameters 
     * inherit from the currently active ancestor states).
     *
     * @example
     * <pre>
     * var app = angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.changeState = function () {
     *     $state.go('contact.detail');
     *   };
     * });
     * </pre>
     * <img src='../ngdoc_assets/StateGoExamples.png'/>
     *
     * @param {string} to Absolute state name or relative state path. Some examples:
     *
     * - `$state.go('contact.detail')` - will go to the `contact.detail` state
     * - `$state.go('^')` - will go to a parent state
     * - `$state.go('^.sibling')` - will go to a sibling state
     * - `$state.go('.child.grandchild')` - will go to grandchild state
     *
     * @param {object=} params A map of the parameters that will be sent to the state, 
     * will populate $stateParams. Any parameters that are not specified will be inherited from currently 
     * defined parameters. Only parameters specified in the state definition can be overridden, new 
     * parameters will be ignored. This allows, for example, going to a sibling state that shares parameters
     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.
     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child
     * will get you all current parameters, etc.
     * @param {object=} options Options object. The options are:
     *
     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`
     *    will not. If string, must be `"replace"`, which will update url and also replace last history record.
     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.
     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), 
     *    defines which state to be relative from.
     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.
     * - **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params
     *    have changed.  It will reload the resolves and views of the current state and parent states.
     *    If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \
     *    the transition reloads the resolves and views for that matched state, and all its children states.
     *
     * @returns {promise} A promise representing the state of the new transition.
     *
     * Possible success values:
     *
     * - $state.current
     *
     * <br/>Possible rejection values:
     *
     * - 'transition superseded' - when a newer transition has been started after this one
     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener
     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or
     *   when a `$stateNotFound` `event.retry` promise errors.
     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.
     * - *resolve error* - when an error has occurred with a `resolve`
     *
     */
    $state.go = function go(to, params, options) {
      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));
    };

    /**
     * @ngdoc function
     * @name ui.router.state.$state#transitionTo
     * @methodOf ui.router.state.$state
     *
     * @description
     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}
     * uses `transitionTo` internally. `$state.go` is recommended in most situations.
     *
     * @example
     * <pre>
     * var app = angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.changeState = function () {
     *     $state.transitionTo('contact.detail');
     *   };
     * });
     * </pre>
     *
     * @param {string} to State name.
     * @param {object=} toParams A map of the parameters that will be sent to the state,
     * will populate $stateParams.
     * @param {object=} options Options object. The options are:
     *
     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`
     *    will not. If string, must be `"replace"`, which will update url and also replace last history record.
     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.
     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), 
     *    defines which state to be relative from.
     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.
     * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params 
     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd
     *    use this when you want to force a reload when *everything* is the same, including search params.
     *    if String, then will reload the state with the name given in reload, and any children.
     *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.
     *
     * @returns {promise} A promise representing the state of the new transition. See
     * {@link ui.router.state.$state#methods_go $state.go}.
     */
    $state.transitionTo = function transitionTo(to, toParams, options) {
      toParams = toParams || {};
      options = extend({
        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false
      }, options || {});

      var from = $state.$current, fromParams = $state.params, fromPath = from.path;
      var evt, toState = findState(to, options.relative);

      // Store the hash param for later (since it will be stripped out by various methods)
      var hash = toParams['#'];

      if (!isDefined(toState)) {
        var redirect = { to: to, toParams: toParams, options: options };
        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);

        if (redirectResult) {
          return redirectResult;
        }

        // Always retry once if the $stateNotFound was not prevented
        // (handles either redirect changed or state lazy-definition)
        to = redirect.to;
        toParams = redirect.toParams;
        options = redirect.options;
        toState = findState(to, options.relative);

        if (!isDefined(toState)) {
          if (!options.relative) throw new Error("No such state '" + to + "'");
          throw new Error("Could not resolve '" + to + "' from state '" + options.relative + "'");
        }
      }
      if (toState[abstractKey]) throw new Error("Cannot transition to abstract state '" + to + "'");
      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);
      if (!toState.params.$$validates(toParams)) return TransitionFailed;

      toParams = toState.params.$$values(toParams);
      to = toState;

      var toPath = to.path;

      // Starting from the root of the path, keep all levels that haven't changed
      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];

      if (!options.reload) {
        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {
          locals = toLocals[keep] = state.locals;
          keep++;
          state = toPath[keep];
        }
      } else if (isString(options.reload) || isObject(options.reload)) {
        if (isObject(options.reload) && !options.reload.name) {
          throw new Error('Invalid reload state object');
        }
        
        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);
        if (options.reload && !reloadState) {
          throw new Error("No such reload state '" + (isString(options.reload) ? options.reload : options.reload.name) + "'");
        }

        while (state && state === fromPath[keep] && state !== reloadState) {
          locals = toLocals[keep] = state.locals;
          keep++;
          state = toPath[keep];
        }
      }

      // If we're going to the same state and all locals are kept, we've got nothing to do.
      // But clear 'transition', as we still want to cancel any other pending transitions.
      // TODO: We may not want to bump 'transition' if we're called from a location change
      // that we've initiated ourselves, because we might accidentally abort a legitimate
      // transition initiated from code?
      if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {
        if (hash) toParams['#'] = hash;
        $state.params = toParams;
        copy($state.params, $stateParams);
        copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);
        if (options.location && to.navigable && to.navigable.url) {
          $urlRouter.push(to.navigable.url, toParams, {
            $$avoidResync: true, replace: options.location === 'replace'
          });
          $urlRouter.update(true);
        }
        $state.transition = null;
        return $q.when($state.current);
      }

      // Filter parameters before we pass them to event handlers etc.
      toParams = filterByKeys(to.params.$$keys(), toParams || {});
      
      // Re-add the saved hash before we start returning things or broadcasting $stateChangeStart
      if (hash) toParams['#'] = hash;
      
      // Broadcast start event and cancel the transition if requested
      if (options.notify) {
        /**
         * @ngdoc event
         * @name ui.router.state.$state#$stateChangeStart
         * @eventOf ui.router.state.$state
         * @eventType broadcast on root scope
         * @description
         * Fired when the state transition **begins**. You can use `event.preventDefault()`
         * to prevent the transition from happening and then the transition promise will be
         * rejected with a `'transition prevented'` value.
         *
         * @param {Object} event Event object.
         * @param {State} toState The state being transitioned to.
         * @param {Object} toParams The params supplied to the `toState`.
         * @param {State} fromState The current state, pre-transition.
         * @param {Object} fromParams The params supplied to the `fromState`.
         *
         * @example
         *
         * <pre>
         * $rootScope.$on('$stateChangeStart',
         * function(event, toState, toParams, fromState, fromParams){
         *     event.preventDefault();
         *     // transitionTo() promise will be rejected with
         *     // a 'transition prevented' error
         * })
         * </pre>
         */
        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {
          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);
          //Don't update and resync url if there's been a new transition started. see issue #2238, #600
          if ($state.transition == null) $urlRouter.update();
          return TransitionPrevented;
        }
      }

      // Resolve locals for the remaining states, but don't update any global state just
      // yet -- if anything fails to resolve the current state needs to remain untouched.
      // We also set up an inheritance chain for the locals here. This allows the view directive
      // to quickly look up the correct definition for each view in the current state. Even
      // though we create the locals object itself outside resolveState(), it is initially
      // empty and gets filled asynchronously. We need to keep track of the promise for the
      // (fully resolved) current locals, and pass this down the chain.
      var resolved = $q.when(locals);

      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {
        locals = toLocals[l] = inherit(locals);
        resolved = resolveState(state, toParams, state === to, resolved, locals, options);
      }

      // Once everything is resolved, we are ready to perform the actual transition
      // and return a promise for the new state. We also keep track of what the
      // current promise is, so that we can detect overlapping transitions and
      // keep only the outcome of the last transition.
      var transition = $state.transition = resolved.then(function () {
        var l, entering, exiting;

        if ($state.transition !== transition) {
          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);
          return TransitionSuperseded;
        }

        // Exit 'from' states not kept
        for (l = fromPath.length - 1; l >= keep; l--) {
          exiting = fromPath[l];
          if (exiting.self.onExit) {
            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);
          }
          exiting.locals = null;
        }

        // Enter 'to' states not kept
        for (l = keep; l < toPath.length; l++) {
          entering = toPath[l];
          entering.locals = toLocals[l];
          if (entering.self.onEnter) {
            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);
          }
        }

        // Run it again, to catch any transitions in callbacks
        if ($state.transition !== transition) {
          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);
          return TransitionSuperseded;
        }

        // Update globals in $state
        $state.$current = to;
        $state.current = to.self;
        $state.params = toParams;
        copy($state.params, $stateParams);
        $state.transition = null;

        if (options.location && to.navigable) {
          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {
            $$avoidResync: true, replace: options.location === 'replace'
          });
        }

        if (options.notify) {
        /**
         * @ngdoc event
         * @name ui.router.state.$state#$stateChangeSuccess
         * @eventOf ui.router.state.$state
         * @eventType broadcast on root scope
         * @description
         * Fired once the state transition is **complete**.
         *
         * @param {Object} event Event object.
         * @param {State} toState The state being transitioned to.
         * @param {Object} toParams The params supplied to the `toState`.
         * @param {State} fromState The current state, pre-transition.
         * @param {Object} fromParams The params supplied to the `fromState`.
         */
          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);
        }
        $urlRouter.update(true);

        return $state.current;
      }).then(null, function (error) {
        // propagate TransitionSuperseded error without emitting $stateChangeCancel
        // as it was already emitted in the success handler above
        if (error === TransitionSupersededError) return TransitionSuperseded;

        if ($state.transition !== transition) {
          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);
          return TransitionSuperseded;
        }

        $state.transition = null;
        /**
         * @ngdoc event
         * @name ui.router.state.$state#$stateChangeError
         * @eventOf ui.router.state.$state
         * @eventType broadcast on root scope
         * @description
         * Fired when an **error occurs** during transition. It's important to note that if you
         * have any errors in your resolve functions (javascript errors, non-existent services, etc)
         * they will not throw traditionally. You must listen for this $stateChangeError event to
         * catch **ALL** errors.
         *
         * @param {Object} event Event object.
         * @param {State} toState The state being transitioned to.
         * @param {Object} toParams The params supplied to the `toState`.
         * @param {State} fromState The current state, pre-transition.
         * @param {Object} fromParams The params supplied to the `fromState`.
         * @param {Error} error The resolve error object.
         */
        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);

        if (!evt.defaultPrevented) {
          $urlRouter.update();
        }

        return $q.reject(error);
      });

      return transition;
    };

    /**
     * @ngdoc function
     * @name ui.router.state.$state#is
     * @methodOf ui.router.state.$state
     *
     * @description
     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},
     * but only checks for the full state name. If params is supplied then it will be
     * tested for strict equality against the current active params object, so all params
     * must match with none missing and no extras.
     *
     * @example
     * <pre>
     * $state.$current.name = 'contacts.details.item';
     *
     * // absolute name
     * $state.is('contact.details.item'); // returns true
     * $state.is(contactDetailItemStateObject); // returns true
     *
     * // relative name (. and ^), typically from a template
     * // E.g. from the 'contacts.details' template
     * <div ng-class="{highlighted: $state.is('.item')}">Item</div>
     * </pre>
     *
     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.
     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like
     * to test against the current active state.
     * @param {object=} options An options object.  The options are:
     *
     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will
     * test relative to `options.relative` state (or name).
     *
     * @returns {boolean} Returns true if it is the state.
     */
    $state.is = function is(stateOrName, params, options) {
      options = extend({ relative: $state.$current }, options || {});
      var state = findState(stateOrName, options.relative);

      if (!isDefined(state)) { return undefined; }
      if ($state.$current !== state) { return false; }
      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;
    };

    /**
     * @ngdoc function
     * @name ui.router.state.$state#includes
     * @methodOf ui.router.state.$state
     *
     * @description
     * A method to determine if the current active state is equal to or is the child of the
     * state stateName. If any params are passed then they will be tested for a match as well.
     * Not all the parameters need to be passed, just the ones you'd like to test for equality.
     *
     * @example
     * Partial and relative names
     * <pre>
     * $state.$current.name = 'contacts.details.item';
     *
     * // Using partial names
     * $state.includes("contacts"); // returns true
     * $state.includes("contacts.details"); // returns true
     * $state.includes("contacts.details.item"); // returns true
     * $state.includes("contacts.list"); // returns false
     * $state.includes("about"); // returns false
     *
     * // Using relative names (. and ^), typically from a template
     * // E.g. from the 'contacts.details' template
     * <div ng-class="{highlighted: $state.includes('.item')}">Item</div>
     * </pre>
     *
     * Basic globbing patterns
     * <pre>
     * $state.$current.name = 'contacts.details.item.url';
     *
     * $state.includes("*.details.*.*"); // returns true
     * $state.includes("*.details.**"); // returns true
     * $state.includes("**.item.**"); // returns true
     * $state.includes("*.details.item.url"); // returns true
     * $state.includes("*.details.*.url"); // returns true
     * $state.includes("*.details.*"); // returns false
     * $state.includes("item.**"); // returns false
     * </pre>
     *
     * @param {string} stateOrName A partial name, relative name, or glob pattern
     * to be searched for within the current state name.
     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,
     * that you'd like to test against the current active state.
     * @param {object=} options An options object.  The options are:
     *
     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,
     * .includes will test relative to `options.relative` state (or name).
     *
     * @returns {boolean} Returns true if it does include the state
     */
    $state.includes = function includes(stateOrName, params, options) {
      options = extend({ relative: $state.$current }, options || {});
      if (isString(stateOrName) && isGlob(stateOrName)) {
        if (!doesStateMatchGlob(stateOrName)) {
          return false;
        }
        stateOrName = $state.$current.name;
      }

      var state = findState(stateOrName, options.relative);
      if (!isDefined(state)) { return undefined; }
      if (!isDefined($state.$current.includes[state.name])) { return false; }
      if (!params) { return true; }

      var keys = objectKeys(params);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i], paramDef = state.params[key];
        if (paramDef && !paramDef.type.equals($stateParams[key], params[key])) {
          return false;
        }
      }

      return true;
    };


    /**
     * @ngdoc function
     * @name ui.router.state.$state#href
     * @methodOf ui.router.state.$state
     *
     * @description
     * A url generation method that returns the compiled url for the given state populated with the given params.
     *
     * @example
     * <pre>
     * expect($state.href("about.person", { person: "bob" })).toEqual("/about/bob");
     * </pre>
     *
     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.
     * @param {object=} params An object of parameter values to fill the state's required parameters.
     * @param {object=} options Options object. The options are:
     *
     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the
     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka
     *    ancestor with a valid url).
     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.
     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), 
     *    defines which state to be relative from.
     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. "http://www.example.com/fullurl".
     * 
     * @returns {string} compiled state url
     */
    $state.href = function href(stateOrName, params, options) {
      options = extend({
        lossy:    true,
        inherit:  true,
        absolute: false,
        relative: $state.$current
      }, options || {});

      var state = findState(stateOrName, options.relative);

      if (!isDefined(state)) return null;
      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);
      
      var nav = (state && options.lossy) ? state.navigable : state;

      if (!nav || nav.url === undefined || nav.url === null) {
        return null;
      }
      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {
        absolute: options.absolute
      });
    };

    /**
     * @ngdoc function
     * @name ui.router.state.$state#get
     * @methodOf ui.router.state.$state
     *
     * @description
     * Returns the state configuration object for any specific state or all states.
     *
     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for
     * the requested state. If not provided, returns an array of ALL state configs.
     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.
     * @returns {Object|Array} State configuration object or array of all objects.
     */
    $state.get = function (stateOrName, context) {
      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });
      var state = findState(stateOrName, context || $state.$current);
      return (state && state.self) ? state.self : null;
    };

    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {
      // Make a restricted $stateParams with only the parameters that apply to this state if
      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,
      // we also need $stateParams to be available for any $injector calls we make during the
      // dependency resolution process.
      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);
      var locals = { $stateParams: $stateParams };

      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.
      // We're also including $stateParams in this; that way the parameters are restricted
      // to the set that should be visible to the state, and are independent of when we update
      // the global $state and $stateParams values.
      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);
      var promises = [dst.resolve.then(function (globals) {
        dst.globals = globals;
      })];
      if (inherited) promises.push(inherited);

      function resolveViews() {
        var viewsPromises = [];

        // Resolve template and dependencies for all views.
        forEach(state.views, function (view, name) {
          var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});
          injectables.$template = [ function () {
            return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';
          }];

          viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {
            // References to the controller (only instantiated at link time)
            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {
              var injectLocals = angular.extend({}, injectables, dst.globals);
              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);
            } else {
              result.$$controller = view.controller;
            }
            // Provide access to the state itself for internal use
            result.$$state = state;
            result.$$controllerAs = view.controllerAs;
            result.$$resolveAs = view.resolveAs;
            dst[name] = result;
          }));
        });

        return $q.all(viewsPromises).then(function(){
          return dst.globals;
        });
      }

      // Wait for all the promises and then return the activation object
      return $q.all(promises).then(resolveViews).then(function (values) {
        return dst;
      });
    }

    return $state;
  }

  function shouldSkipReload(to, toParams, from, fromParams, locals, options) {
    // Return true if there are no differences in non-search (path/object) params, false if there are differences
    function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {
      // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.
      function notSearchParam(key) {
        return fromAndToState.params[key].location != "search";
      }
      var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);
      var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));
      var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);
      return nonQueryParamSet.$$equals(fromParams, toParams);
    }

    // If reload was not explicitly requested
    // and we're transitioning to the same state we're already in
    // and    the locals didn't change
    //     or they changed in a way that doesn't merit reloading
    //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)
    // Then return true.
    if (!options.reload && to === from &&
      (locals === from.locals || (to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams)))) {
      return true;
    }
  }
}

angular.module('ui.router.state')
  .factory('$stateParams', function () { return {}; })
  .constant("$state.runtime", { autoinject: true })
  .provider('$state', $StateProvider)
  // Inject $state to initialize when entering runtime. #2574
  .run(['$injector', function ($injector) {
    // Allow tests (stateSpec.js) to turn this off by defining this constant
    if ($injector.get("$state.runtime").autoinject) {
      $injector.get('$state');
    }
  }]);


$ViewProvider.$inject = [];
function $ViewProvider() {

  this.$get = $get;
  /**
   * @ngdoc object
   * @name ui.router.state.$view
   *
   * @requires ui.router.util.$templateFactory
   * @requires $rootScope
   *
   * @description
   *
   */
  $get.$inject = ['$rootScope', '$templateFactory'];
  function $get(   $rootScope,   $templateFactory) {
    return {
      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })
      /**
       * @ngdoc function
       * @name ui.router.state.$view#load
       * @methodOf ui.router.state.$view
       *
       * @description
       *
       * @param {string} name name
       * @param {object} options option object.
       */
      load: function load(name, options) {
        var result, defaults = {
          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}
        };
        options = extend(defaults, options);

        if (options.view) {
          result = $templateFactory.fromConfig(options.view, options.params, options.locals);
        }
        return result;
      }
    };
  }
}

angular.module('ui.router.state').provider('$view', $ViewProvider);

/**
 * @ngdoc object
 * @name ui.router.state.$uiViewScrollProvider
 *
 * @description
 * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.
 */
function $ViewScrollProvider() {

  var useAnchorScroll = false;

  /**
   * @ngdoc function
   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll
   * @methodOf ui.router.state.$uiViewScrollProvider
   *
   * @description
   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for
   * scrolling based on the url anchor.
   */
  this.useAnchorScroll = function () {
    useAnchorScroll = true;
  };

  /**
   * @ngdoc object
   * @name ui.router.state.$uiViewScroll
   *
   * @requires $anchorScroll
   * @requires $timeout
   *
   * @description
   * When called with a jqLite element, it scrolls the element into view (after a
   * `$timeout` so the DOM has time to refresh).
   *
   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,
   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.
   */
  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {
    if (useAnchorScroll) {
      return $anchorScroll;
    }

    return function ($element) {
      return $timeout(function () {
        $element[0].scrollIntoView();
      }, 0, false);
    };
  }];
}

angular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);

/**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-view
 *
 * @requires ui.router.state.$state
 * @requires $compile
 * @requires $controller
 * @requires $injector
 * @requires ui.router.state.$uiViewScroll
 * @requires $document
 *
 * @restrict ECA
 *
 * @description
 * The ui-view directive tells $state where to place your templates.
 *
 * @param {string=} name A view name. The name should be unique amongst the other views in the
 * same state. You can have views of the same name that live in different states.
 *
 * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window
 * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll
 * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you
 * scroll ui-view elements into view when they are populated during a state activation.
 *
 * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)
 * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*
 *
 * @param {string=} onload Expression to evaluate whenever the view updates.
 *
 * @example
 * A view can be unnamed or named.
 * <pre>
 * <!-- Unnamed -->
 * <div ui-view></div>
 *
 * <!-- Named -->
 * <div ui-view="viewName"></div>
 * </pre>
 *
 * You can only have one unnamed view within any template (or root html). If you are only using a
 * single view and it is unnamed then you can populate it like so:
 * <pre>
 * <div ui-view></div>
 * $stateProvider.state("home", {
 *   template: "<h1>HELLO!</h1>"
 * })
 * </pre>
 *
 * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#methods_state `views`}
 * config property, by name, in this case an empty name:
 * <pre>
 * $stateProvider.state("home", {
 *   views: {
 *     "": {
 *       template: "<h1>HELLO!</h1>"
 *     }
 *   }    
 * })
 * </pre>
 *
 * But typically you'll only use the views property if you name your view or have more than one view
 * in the same template. There's not really a compelling reason to name a view if its the only one,
 * but you could if you wanted, like so:
 * <pre>
 * <div ui-view="main"></div>
 * </pre>
 * <pre>
 * $stateProvider.state("home", {
 *   views: {
 *     "main": {
 *       template: "<h1>HELLO!</h1>"
 *     }
 *   }    
 * })
 * </pre>
 *
 * Really though, you'll use views to set up multiple views:
 * <pre>
 * <div ui-view></div>
 * <div ui-view="chart"></div>
 * <div ui-view="data"></div>
 * </pre>
 *
 * <pre>
 * $stateProvider.state("home", {
 *   views: {
 *     "": {
 *       template: "<h1>HELLO!</h1>"
 *     },
 *     "chart": {
 *       template: "<chart_thing/>"
 *     },
 *     "data": {
 *       template: "<data_thing/>"
 *     }
 *   }    
 * })
 * </pre>
 *
 * Examples for `autoscroll`:
 *
 * <pre>
 * <!-- If autoscroll present with no expression,
 *      then scroll ui-view into view -->
 * <ui-view autoscroll/>
 *
 * <!-- If autoscroll present with valid expression,
 *      then scroll ui-view into view if expression evaluates to true -->
 * <ui-view autoscroll='true'/>
 * <ui-view autoscroll='false'/>
 * <ui-view autoscroll='scopeVariable'/>
 * </pre>
 *
 * Resolve data:
 *
 * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this
 * can be customized using [[ViewDeclaration.resolveAs]]).  This can be then accessed from the template.
 *
 * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the
 * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which
 * depends on `$resolve` data.
 *
 * Example usage of $resolve in a view template
 * <pre>
 * $stateProvider.state('home', {
 *   template: '<my-component user="$resolve.user"></my-component>',
 *   resolve: {
 *     user: function(UserService) { return UserService.fetchUser(); }
 *   }
 * });
 * </pre>
 */
$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate', '$q'];
function $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate,   $q) {

  function getService() {
    return ($injector.has) ? function(service) {
      return $injector.has(service) ? $injector.get(service) : null;
    } : function(service) {
      try {
        return $injector.get(service);
      } catch (e) {
        return null;
      }
    };
  }

  var service = getService(),
      $animator = service('$animator'),
      $animate = service('$animate');

  // Returns a set of DOM manipulation functions based on which Angular version
  // it should use
  function getRenderer(attrs, scope) {
    var statics = function() {
      return {
        enter: function (element, target, cb) { target.after(element); cb(); },
        leave: function (element, cb) { element.remove(); cb(); }
      };
    };

    if ($animate) {
      return {
        enter: function(element, target, cb) {
          if (angular.version.minor > 2) {
            $animate.enter(element, null, target).then(cb);
          } else {
            $animate.enter(element, null, target, cb);
          }
        },
        leave: function(element, cb) {
          if (angular.version.minor > 2) {
            $animate.leave(element).then(cb);
          } else {
            $animate.leave(element, cb);
          }
        }
      };
    }

    if ($animator) {
      var animate = $animator && $animator(scope, attrs);

      return {
        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },
        leave: function(element, cb) { animate.leave(element); cb(); }
      };
    }

    return statics();
  }

  var directive = {
    restrict: 'ECA',
    terminal: true,
    priority: 400,
    transclude: 'element',
    compile: function (tElement, tAttrs, $transclude) {
      return function (scope, $element, attrs) {
        var previousEl, currentEl, currentScope, latestLocals,
            onloadExp     = attrs.onload || '',
            autoScrollExp = attrs.autoscroll,
            renderer      = getRenderer(attrs, scope),
            inherited     = $element.inheritedData('$uiView');

        scope.$on('$stateChangeSuccess', function() {
          updateView(false);
        });

        updateView(true);

        function cleanupLastView() {
          if (previousEl) {
            previousEl.remove();
            previousEl = null;
          }

          if (currentScope) {
            currentScope.$destroy();
            currentScope = null;
          }

          if (currentEl) {
            var $uiViewData = currentEl.data('$uiViewAnim');
            renderer.leave(currentEl, function() {
              $uiViewData.$$animLeave.resolve();
              previousEl = null;
            });

            previousEl = currentEl;
            currentEl = null;
          }
        }

        function updateView(firstTime) {
          var newScope,
              name            = getUiViewName(scope, attrs, $element, $interpolate),
              previousLocals  = name && $state.$current && $state.$current.locals[name];

          if (!firstTime && previousLocals === latestLocals) return; // nothing to do
          newScope = scope.$new();
          latestLocals = $state.$current.locals[name];

          /**
           * @ngdoc event
           * @name ui.router.state.directive:ui-view#$viewContentLoading
           * @eventOf ui.router.state.directive:ui-view
           * @eventType emits on ui-view directive scope
           * @description
           *
           * Fired once the view **begins loading**, *before* the DOM is rendered.
           *
           * @param {Object} event Event object.
           * @param {string} viewName Name of the view.
           */
          newScope.$emit('$viewContentLoading', name);

          var clone = $transclude(newScope, function(clone) {
            var animEnter = $q.defer(), animLeave = $q.defer();
            var viewAnimData = {
              $animEnter: animEnter.promise,
              $animLeave: animLeave.promise,
              $$animLeave: animLeave
            };

            clone.data('$uiViewAnim', viewAnimData);
            renderer.enter(clone, $element, function onUiViewEnter() {
              animEnter.resolve();
              if(currentScope) {
                currentScope.$emit('$viewContentAnimationEnded');
              }

              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {
                $uiViewScroll(clone);
              }
            });
            cleanupLastView();
          });

          currentEl = clone;
          currentScope = newScope;
          /**
           * @ngdoc event
           * @name ui.router.state.directive:ui-view#$viewContentLoaded
           * @eventOf ui.router.state.directive:ui-view
           * @eventType emits on ui-view directive scope
           * @description
           * Fired once the view is **loaded**, *after* the DOM is rendered.
           *
           * @param {Object} event Event object.
           * @param {string} viewName Name of the view.
           */
          currentScope.$emit('$viewContentLoaded', name);
          currentScope.$eval(onloadExp);
        }
      };
    }
  };

  return directive;
}

$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];
function $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {
  return {
    restrict: 'ECA',
    priority: -400,
    compile: function (tElement) {
      var initial = tElement.html();
      return function (scope, $element, attrs) {
        var current = $state.$current,
            name = getUiViewName(scope, attrs, $element, $interpolate),
            locals  = current && current.locals[name];

        if (! locals) {
          return;
        }

        $element.data('$uiView', { name: name, state: locals.$$state });
        $element.html(locals.$template ? locals.$template : initial);

        var resolveData = angular.extend({}, locals);
        scope[locals.$$resolveAs] = resolveData;

        var link = $compile($element.contents());

        if (locals.$$controller) {
          locals.$scope = scope;
          locals.$element = $element;
          var controller = $controller(locals.$$controller, locals);
          if (locals.$$controllerAs) {
            scope[locals.$$controllerAs] = controller;
            scope[locals.$$controllerAs][locals.$$resolveAs] = resolveData;
          }
          if (isFunction(controller.$onInit)) controller.$onInit();
          $element.data('$ngControllerController', controller);
          $element.children().data('$ngControllerController', controller);
        }

        link(scope);
      };
    }
  };
}

/**
 * Shared ui-view code for both directives:
 * Given scope, element, and its attributes, return the view's name
 */
function getUiViewName(scope, attrs, element, $interpolate) {
  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);
  var uiViewCreatedBy = element.inheritedData('$uiView');
  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (uiViewCreatedBy ? uiViewCreatedBy.state.name : ''));
}

angular.module('ui.router.state').directive('uiView', $ViewDirective);
angular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);

function parseStateRef(ref, current) {
  var preparsed = ref.match(/^\s*({[^}]*})\s*$/), parsed;
  if (preparsed) ref = current + '(' + preparsed[1] + ')';
  parsed = ref.replace(/\n/g, " ").match(/^([^(]+?)\s*(\((.*)\))?$/);
  if (!parsed || parsed.length !== 4) throw new Error("Invalid state ref '" + ref + "'");
  return { state: parsed[1], paramExpr: parsed[3] || null };
}

function stateContext(el) {
  var stateData = el.parent().inheritedData('$uiView');

  if (stateData && stateData.state && stateData.state.name) {
    return stateData.state;
  }
}

function getTypeInfo(el) {
  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.
  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';
  var isForm = el[0].nodeName === "FORM";

  return {
    attr: isForm ? "action" : (isSvg ? 'xlink:href' : 'href'),
    isAnchor: el.prop("tagName").toUpperCase() === "A",
    clickable: !isForm
  };
}

function clickHook(el, $state, $timeout, type, current) {
  return function(e) {
    var button = e.which || e.button, target = current();

    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {
      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:
      var transition = $timeout(function() {
        $state.go(target.state, target.params, target.options);
      });
      e.preventDefault();

      // if the state has no URL, ignore one preventDefault from the <a> directive.
      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1: 0;

      e.preventDefault = function() {
        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);
      };
    }
  };
}

function defaultOpts(el, $state) {
  return { relative: stateContext(el) || $state.$current, inherit: true };
}

/**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-sref
 *
 * @requires ui.router.state.$state
 * @requires $timeout
 *
 * @restrict A
 *
 * @description
 * A directive that binds a link (`<a>` tag) to a state. If the state has an associated
 * URL, the directive will automatically generate & update the `href` attribute via
 * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking
 * the link will trigger a state transition with optional parameters.
 *
 * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be
 * handled natively by the browser.
 *
 * You can also use relative state paths within ui-sref, just like the relative
 * paths passed to `$state.go()`. You just need to be aware that the path is relative
 * to the state that the link lives in, in other words the state that loaded the
 * template containing the link.
 *
 * You can specify options to pass to {@link ui.router.state.$state#methods_go $state.go()}
 * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,
 * and `reload`.
 *
 * @example
 * Here's an example of how you'd use ui-sref and how it would compile. If you have the
 * following template:
 * <pre>
 * <a ui-sref="home">Home</a> | <a ui-sref="about">About</a> | <a ui-sref="{page: 2}">Next page</a>
 *
 * <ul>
 *     <li ng-repeat="contact in contacts">
 *         <a ui-sref="contacts.detail({ id: contact.id })">{{ contact.name }}</a>
 *     </li>
 * </ul>
 * </pre>
 *
 * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):
 * <pre>
 * <a href="#/home" ui-sref="home">Home</a> | <a href="#/about" ui-sref="about">About</a> | <a href="#/contacts?page=2" ui-sref="{page: 2}">Next page</a>
 *
 * <ul>
 *     <li ng-repeat="contact in contacts">
 *         <a href="#/contacts/1" ui-sref="contacts.detail({ id: contact.id })">Joe</a>
 *     </li>
 *     <li ng-repeat="contact in contacts">
 *         <a href="#/contacts/2" ui-sref="contacts.detail({ id: contact.id })">Alice</a>
 *     </li>
 *     <li ng-repeat="contact in contacts">
 *         <a href="#/contacts/3" ui-sref="contacts.detail({ id: contact.id })">Bob</a>
 *     </li>
 * </ul>
 *
 * <a ui-sref="home" ui-sref-opts="{reload: true}">Home</a>
 * </pre>
 *
 * @param {string} ui-sref 'stateName' can be any valid absolute or relative state
 * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}
 */
$StateRefDirective.$inject = ['$state', '$timeout'];
function $StateRefDirective($state, $timeout) {
  return {
    restrict: 'A',
    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],
    link: function(scope, element, attrs, uiSrefActive) {
      var ref    = parseStateRef(attrs.uiSref, $state.current.name);
      var def    = { state: ref.state, href: null, params: null };
      var type   = getTypeInfo(element);
      var active = uiSrefActive[1] || uiSrefActive[0];
      var unlinkInfoFn = null;
      var hookFn;

      def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});

      var update = function(val) {
        if (val) def.params = angular.copy(val);
        def.href = $state.href(ref.state, def.params, def.options);

        if (unlinkInfoFn) unlinkInfoFn();
        if (active) unlinkInfoFn = active.$$addStateInfo(ref.state, def.params);
        if (def.href !== null) attrs.$set(type.attr, def.href);
      };

      if (ref.paramExpr) {
        scope.$watch(ref.paramExpr, function(val) { if (val !== def.params) update(val); }, true);
        def.params = angular.copy(scope.$eval(ref.paramExpr));
      }
      update();

      if (!type.clickable) return;
      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });
      element[element.on ? 'on' : 'bind']("click", hookFn);
      scope.$on('$destroy', function() {
        element[element.off ? 'off' : 'unbind']("click", hookFn);
      });
    }
  };
}

/**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-state
 *
 * @requires ui.router.state.uiSref
 *
 * @restrict A
 *
 * @description
 * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,
 * params and override options.
 *
 * @param {string} ui-state 'stateName' can be any valid absolute or relative state
 * @param {Object} ui-state-params params to pass to {@link ui.router.state.$state#methods_href $state.href()}
 * @param {Object} ui-state-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}
 */
$StateRefDynamicDirective.$inject = ['$state', '$timeout'];
function $StateRefDynamicDirective($state, $timeout) {
  return {
    restrict: 'A',
    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],
    link: function(scope, element, attrs, uiSrefActive) {
      var type   = getTypeInfo(element);
      var active = uiSrefActive[1] || uiSrefActive[0];
      var group  = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];
      var watch  = '[' + group.map(function(val) { return val || 'null'; }).join(', ') + ']';
      var def    = { state: null, params: null, options: null, href: null };
      var unlinkInfoFn = null;
      var hookFn;

      function runStateRefLink (group) {
        def.state = group[0]; def.params = group[1]; def.options = group[2];
        def.href = $state.href(def.state, def.params, def.options);

        if (unlinkInfoFn) unlinkInfoFn();
        if (active) unlinkInfoFn = active.$$addStateInfo(def.state, def.params);
        if (def.href) attrs.$set(type.attr, def.href);
      }

      scope.$watch(watch, runStateRefLink, true);
      runStateRefLink(scope.$eval(watch));

      if (!type.clickable) return;
      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });
      element[element.on ? 'on' : 'bind']("click", hookFn);
      scope.$on('$destroy', function() {
        element[element.off ? 'off' : 'unbind']("click", hookFn);
      });
    }
  };
}


/**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-sref-active
 *
 * @requires ui.router.state.$state
 * @requires ui.router.state.$stateParams
 * @requires $interpolate
 *
 * @restrict A
 *
 * @description
 * A directive working alongside ui-sref to add classes to an element when the
 * related ui-sref directive's state is active, and removing them when it is inactive.
 * The primary use-case is to simplify the special appearance of navigation menus
 * relying on `ui-sref`, by having the "active" state's menu button appear different,
 * distinguishing it from the inactive menu items.
 *
 * ui-sref-active can live on the same element as ui-sref or on a parent element. The first
 * ui-sref-active found at the same level or above the ui-sref will be used.
 *
 * Will activate when the ui-sref's target state or any child state is active. If you
 * need to activate only when the ui-sref target state is active and *not* any of
 * it's children, then you will use
 * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}
 *
 * @example
 * Given the following template:
 * <pre>
 * <ul>
 *   <li ui-sref-active="active" class="item">
 *     <a href ui-sref="app.user({user: 'bilbobaggins'})">@bilbobaggins</a>
 *   </li>
 * </ul>
 * </pre>
 *
 *
 * When the app state is "app.user" (or any children states), and contains the state parameter "user" with value "bilbobaggins",
 * the resulting HTML will appear as (note the 'active' class):
 * <pre>
 * <ul>
 *   <li ui-sref-active="active" class="item active">
 *     <a ui-sref="app.user({user: 'bilbobaggins'})" href="/users/bilbobaggins">@bilbobaggins</a>
 *   </li>
 * </ul>
 * </pre>
 *
 * The class name is interpolated **once** during the directives link time (any further changes to the
 * interpolated value are ignored).
 *
 * Multiple classes may be specified in a space-separated format:
 * <pre>
 * <ul>
 *   <li ui-sref-active='class1 class2 class3'>
 *     <a ui-sref="app.user">link</a>
 *   </li>
 * </ul>
 * </pre>
 *
 * It is also possible to pass ui-sref-active an expression that evaluates
 * to an object hash, whose keys represent active class names and whose
 * values represent the respective state names/globs.
 * ui-sref-active will match if the current active state **includes** any of
 * the specified state names/globs, even the abstract ones.
 *
 * @Example
 * Given the following template, with "admin" being an abstract state:
 * <pre>
 * <div ui-sref-active="{'active': 'admin.*'}">
 *   <a ui-sref-active="active" ui-sref="admin.roles">Roles</a>
 * </div>
 * </pre>
 *
 * When the current state is "admin.roles" the "active" class will be applied
 * to both the <div> and <a> elements. It is important to note that the state
 * names/globs passed to ui-sref-active shadow the state provided by ui-sref.
 */

/**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-sref-active-eq
 *
 * @requires ui.router.state.$state
 * @requires ui.router.state.$stateParams
 * @requires $interpolate
 *
 * @restrict A
 *
 * @description
 * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate
 * when the exact target state used in the `ui-sref` is active; no child states.
 *
 */
$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];
function $StateRefActiveDirective($state, $stateParams, $interpolate) {
  return  {
    restrict: "A",
    controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, $element, $attrs, $timeout) {
      var states = [], activeClasses = {}, activeEqClass, uiSrefActive;

      // There probably isn't much point in $observing this
      // uiSrefActive and uiSrefActiveEq share the same directive object with some
      // slight difference in logic routing
      activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);

      try {
        uiSrefActive = $scope.$eval($attrs.uiSrefActive);
      } catch (e) {
        // Do nothing. uiSrefActive is not a valid expression.
        // Fall back to using $interpolate below
      }
      uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);
      if (isObject(uiSrefActive)) {
        forEach(uiSrefActive, function(stateOrName, activeClass) {
          if (isString(stateOrName)) {
            var ref = parseStateRef(stateOrName, $state.current.name);
            addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);
          }
        });
      }

      // Allow uiSref to communicate with uiSrefActive[Equals]
      this.$$addStateInfo = function (newState, newParams) {
        // we already got an explicit state provided by ui-sref-active, so we
        // shadow the one that comes from ui-sref
        if (isObject(uiSrefActive) && states.length > 0) {
          return;
        }
        var deregister = addState(newState, newParams, uiSrefActive);
        update();
        return deregister;
      };

      $scope.$on('$stateChangeSuccess', update);

      function addState(stateName, stateParams, activeClass) {
        var state = $state.get(stateName, stateContext($element));
        var stateHash = createStateHash(stateName, stateParams);

        var stateInfo = {
          state: state || { name: stateName },
          params: stateParams,
          hash: stateHash
        };

        states.push(stateInfo);
        activeClasses[stateHash] = activeClass;

        return function removeState() {
          var idx = states.indexOf(stateInfo);
          if (idx !== -1) states.splice(idx, 1);
        };
      }

      /**
       * @param {string} state
       * @param {Object|string} [params]
       * @return {string}
       */
      function createStateHash(state, params) {
        if (!isString(state)) {
          throw new Error('state should be a string');
        }
        if (isObject(params)) {
          return state + toJson(params);
        }
        params = $scope.$eval(params);
        if (isObject(params)) {
          return state + toJson(params);
        }
        return state;
      }

      // Update route state
      function update() {
        for (var i = 0; i < states.length; i++) {
          if (anyMatch(states[i].state, states[i].params)) {
            addClass($element, activeClasses[states[i].hash]);
          } else {
            removeClass($element, activeClasses[states[i].hash]);
          }

          if (exactMatch(states[i].state, states[i].params)) {
            addClass($element, activeEqClass);
          } else {
            removeClass($element, activeEqClass);
          }
        }
      }

      function addClass(el, className) { $timeout(function () { el.addClass(className); }); }
      function removeClass(el, className) { el.removeClass(className); }
      function anyMatch(state, params) { return $state.includes(state.name, params); }
      function exactMatch(state, params) { return $state.is(state.name, params); }

      update();
    }]
  };
}

angular.module('ui.router.state')
  .directive('uiSref', $StateRefDirective)
  .directive('uiSrefActive', $StateRefActiveDirective)
  .directive('uiSrefActiveEq', $StateRefActiveDirective)
  .directive('uiState', $StateRefDynamicDirective);

/**
 * @ngdoc filter
 * @name ui.router.state.filter:isState
 *
 * @requires ui.router.state.$state
 *
 * @description
 * Translates to {@link ui.router.state.$state#methods_is $state.is("stateName")}.
 */
$IsStateFilter.$inject = ['$state'];
function $IsStateFilter($state) {
  var isFilter = function (state, params) {
    return $state.is(state, params);
  };
  isFilter.$stateful = true;
  return isFilter;
}

/**
 * @ngdoc filter
 * @name ui.router.state.filter:includedByState
 *
 * @requires ui.router.state.$state
 *
 * @description
 * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.
 */
$IncludedByStateFilter.$inject = ['$state'];
function $IncludedByStateFilter($state) {
  var includesFilter = function (state, params, options) {
    return $state.includes(state, params, options);
  };
  includesFilter.$stateful = true;
  return  includesFilter;
}

angular.module('ui.router.state')
  .filter('isState', $IsStateFilter)
  .filter('includedByState', $IncludedByStateFilter);
})(window, window.angular);
},{}],"angular-cookies":[function(require,module,exports){
require('./angular-cookies');
module.exports = 'ngCookies';

},{"./angular-cookies":1}],"angular-deferred-bootstrap":[function(require,module,exports){
/**
 * angular-deferred-bootstrap - v0.1.9 - 2015-12-17
 * https://github.com/philippd/angular-deferred-bootstrap
 * Copyright (c) 2015 Philipp Denzler
 * License: MIT
 */
(function (window, document) {
'use strict';

var isObject = angular.isObject,
  isFunction = angular.isFunction,
  isArray = angular.isArray,
  isString = angular.isString,
  forEach = angular.forEach,
  loadingClass = 'deferred-bootstrap-loading',
  errorClass = 'deferred-bootstrap-error',
  bodyElement,
  $q;

function addLoadingClass () {
  bodyElement.addClass(loadingClass);
}

function removeBodyClasses () {
  bodyElement.removeClass(loadingClass);
  bodyElement.removeClass(errorClass);
}

function addErrorClass () {
  removeBodyClasses();
  bodyElement.addClass(errorClass);
}

function isPromise (value) {
  return isObject(value) && isFunction(value.then);
}

function checkConfig (config) {
  if (!isObject(config)) {
    throw new Error('Bootstrap configuration must be an object.');
  }
  if (!isString(config.module)) {
    throw new Error('\'config.module\' must be a string.');
  }
  if (config.resolve && config.moduleResolves) {
    throw new Error('Bootstrap configuration can contain either \'resolve\' or \'moduleResolves\' but not both');
  }
  if (config.resolve) {
    if (!isObject(config.resolve)) {
      throw new Error('\'config.resolve\' must be an object.');
    }
  }
  if (config.bootstrapConfig) {
    if (!isObject(config.bootstrapConfig)) {
      throw new Error('\'config.bootstrapConfig\' must be an object.');
    }
  }
  if (config.moduleResolves) {
    if (!isArray(config.moduleResolves)) {
      throw new Error('\'config.moduleResolves\' must be an array.');
    }
  }

  forEach(config.moduleResolves, function (moduleResolve) {
    if (!moduleResolve.module) {
      throw new Error('A \'moduleResolve\' configuration item must contain a \'module\' name.');
    }

    if (!isObject(moduleResolve.resolve)) {
      throw new Error('\'moduleResolve.resolve\' must be an object.');
    }
  });

  if (angular.isDefined(config.onError) && !isFunction(config.onError)) {
    throw new Error('\'config.onError\' must be a function.');
  }
}
function provideRootElement (modules, element) {
  element = angular.element(element);
  modules.unshift(['$provide', function($provide) {
    $provide.value('$rootElement', element);
  }]);
}

function createInjector (injectorModules, element) {
  var modules = ['ng'];
  if (isString(injectorModules)) {
    modules.push(injectorModules);
  } else if (isArray(injectorModules)) {
    modules = modules.concat(injectorModules);
  }
  provideRootElement(modules, element);
  return angular.injector(modules, element);
}

function doBootstrap (element, module, bootstrapConfig) {
  var deferred = $q.defer();

  angular.element(document).ready(function () {
    angular.bootstrap(element, [module], bootstrapConfig);
    removeBodyClasses();

    deferred.resolve(true);
  });

  return deferred.promise;
}

function bootstrap (configParam) {
  var config = configParam || {},
    element = config.element,
    module = config.module,
    injectorModules = config.injectorModules || [],
    injector,
    promises = [],
    constants = [],
    bootstrapConfig = config.bootstrapConfig;

  bodyElement = angular.element(document.body);

  addLoadingClass();
  checkConfig(config);
  injector = createInjector(injectorModules, element);
  $q = injector.get('$q');

  function callResolveFn (resolveFunction, constantName, moduleName) {
    var result;

    constants.push({
      name: constantName,
      moduleName: moduleName || module
    });

    if (!isFunction(resolveFunction) && !isArray(resolveFunction)) {
      throw new Error('Resolve for \'' + constantName + '\' is not a valid dependency injection format.');
    }

    result = injector.instantiate(resolveFunction);

    if (isPromise(result)) {
      promises.push(result);
    } else {
      throw new Error('Resolve function for \'' + constantName + '\' must return a promise.');
    }
  }

  function handleResults (results) {
    forEach(results, function (value, index) {
      var result = value && value.data ? value.data : value,
        moduleName = constants[index].moduleName,
        constantName = constants[index].name;

      angular.module(moduleName).constant(constantName, result);
    });

    return doBootstrap(element, module, bootstrapConfig);
  }

  function handleError (error) {
    addErrorClass();
    if (isFunction(config.onError)) {
      config.onError(error);
    }
  }

  if (config.moduleResolves) {
    forEach(config.moduleResolves, function (moduleResolve, index) {
      forEach(moduleResolve.resolve, function (resolveFunction, constantName) {
        callResolveFn(resolveFunction, constantName, config.moduleResolves[index].module);
      });
    });
  } else {
    forEach(config.resolve, function (resolveFunction, constantName) {
      callResolveFn(resolveFunction, constantName);
    });
  }

  return $q.all(promises).then(handleResults, handleError);
}

var deferredBootstrapper = {
  bootstrap: bootstrap
};

if(typeof define === 'function' && define.amd) {
  define([], deferredBootstrapper);
} else if(typeof module === 'object' && module.exports) {
  module.exports = deferredBootstrapper;
} else {
  window.deferredBootstrapper = deferredBootstrapper;
}

})(window, document);
},{}],"angular-dynamic-locale":[function(require,module,exports){
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define([], function () {
      return (factory());
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory();
  } else {
    factory();
  }
}(this, function () {
'use strict';
angular.module('tmh.dynamicLocale', []).config(['$provide', function($provide) {
  function makeStateful($delegate) {
    $delegate.$stateful = true;
    return $delegate;
  }

  $provide.decorator('dateFilter', ['$delegate', makeStateful]);
  $provide.decorator('numberFilter', ['$delegate', makeStateful]);
  $provide.decorator('currencyFilter', ['$delegate', makeStateful]);

}])
.constant('tmhDynamicLocale.STORAGE_KEY', 'tmhDynamicLocale.locale')
.provider('tmhDynamicLocale', ['tmhDynamicLocale.STORAGE_KEY', function(STORAGE_KEY) {

  var defaultLocale,
    localeLocationPattern = 'angular/i18n/angular-locale_{{locale}}.js',
    nodeToAppend,
    storageFactory = 'tmhDynamicLocaleStorageCache',
    storage,
    storageKey = STORAGE_KEY,
    storageGet = 'get',
    storagePut = 'put',
    promiseCache = {},
    activeLocale,
    extraProperties = {};

  /**
   * Loads a script asynchronously
   *
   * @param {string} url The url for the script
   @ @param {function} callback A function to be called once the script is loaded
   */
  function loadScript(url, callback, errorCallback, $timeout) {
    var script = document.createElement('script'),
      element = nodeToAppend ? nodeToAppend : document.getElementsByTagName("body")[0],
      removed = false;

    script.type = 'text/javascript';
    if (script.readyState) { // IE
      script.onreadystatechange = function () {
        if (script.readyState === 'complete' ||
            script.readyState === 'loaded') {
          script.onreadystatechange = null;
          $timeout(
            function () {
              if (removed) return;
              removed = true;
              if (script.parentNode === element) {
                element.removeChild(script);
              }
              callback();
            }, 30, false);
        }
      };
    } else { // Others
      script.onload = function () {
        if (removed) return;
        removed = true;
        if (script.parentNode === element) {
          element.removeChild(script);
        }
        callback();
      };
      script.onerror = function () {
        if (removed) return;
        removed = true;
        if (script.parentNode === element) {
          element.removeChild(script);
        }
        errorCallback();
      };
    }
    script.src = url;
    script.async = true;
    element.appendChild(script);
  }

  /**
   * Loads a locale and replaces the properties from the current locale with the new locale information
   *
   * @param {string} localeUrl The path to the new locale
   * @param {Object} $locale The locale at the curent scope
   * @param {string} localeId The locale id to load
   * @param {Object} $rootScope The application $rootScope
   * @param {Object} $q The application $q
   * @param {Object} localeCache The current locale cache
   * @param {Object} $timeout The application $timeout
   */
  function loadLocale(localeUrl, $locale, localeId, $rootScope, $q, localeCache, $timeout) {

    function overrideValues(oldObject, newObject) {
      if (activeLocale !== localeId) {
        return;
      }
      angular.forEach(oldObject, function(value, key) {
        if (!newObject[key]) {
          delete oldObject[key];
        } else if (angular.isArray(newObject[key])) {
          oldObject[key].length = newObject[key].length;
        }
      });
      angular.forEach(newObject, function(value, key) {
        if (angular.isArray(newObject[key]) || angular.isObject(newObject[key])) {
          if (!oldObject[key]) {
            oldObject[key] = angular.isArray(newObject[key]) ? [] : {};
          }
          overrideValues(oldObject[key], newObject[key]);
        } else {
          oldObject[key] = newObject[key];
        }
      });
    }


    if (promiseCache[localeId]) {
      activeLocale = localeId;
      return promiseCache[localeId];
    }

    var cachedLocale,
      deferred = $q.defer();
    if (localeId === activeLocale) {
      deferred.resolve($locale);
    } else if ((cachedLocale = localeCache.get(localeId))) {
      activeLocale = localeId;
      $rootScope.$evalAsync(function() {
        overrideValues($locale, cachedLocale);
        storage[storagePut](storageKey, localeId);
        $rootScope.$broadcast('$localeChangeSuccess', localeId, $locale);
        deferred.resolve($locale);
      });
    } else {
      activeLocale = localeId;
      promiseCache[localeId] = deferred.promise;
      loadScript(localeUrl, function() {
        // Create a new injector with the new locale
        var localInjector = angular.injector(['ngLocale']),
          externalLocale = localInjector.get('$locale');

        overrideValues($locale, externalLocale);
        localeCache.put(localeId, externalLocale);
        delete promiseCache[localeId];

        $rootScope.$applyAsync(function() {
          storage[storagePut](storageKey, localeId);
          $rootScope.$broadcast('$localeChangeSuccess', localeId, $locale);
          deferred.resolve($locale);
        });
      }, function() {
        delete promiseCache[localeId];

        $rootScope.$applyAsync(function() {
          if (activeLocale === localeId) {
            activeLocale = $locale.id;
          }
          $rootScope.$broadcast('$localeChangeError', localeId);
          deferred.reject(localeId);
        });
      }, $timeout);
    }
    return deferred.promise;
  }

  this.localeLocationPattern = function(value) {
    if (value) {
      localeLocationPattern = value;
      return this;
    } else {
      return localeLocationPattern;
    }
  };

  this.appendScriptTo = function(nodeElement) {
    nodeToAppend = nodeElement;
  };

  this.useStorage = function(storageName) {
    storageFactory = storageName;
    storageGet = 'get';
    storagePut = 'put';
  };

  this.useCookieStorage = function() {
    if (angular.version.minor < 7) {
      this.useStorage('$cookieStore');
    } else {
      this.useStorage('$cookies');
      storageGet = 'getObject';
      storagePut = 'putObject';
    }
  };

  this.defaultLocale = function(value) {
    defaultLocale = value;
  };

  this.storageKey = function(value) {
    if (value) {
      storageKey = value;
      return this;
    } else {
      return storageKey;
    }
  };

  this.addLocalePatternValue = function(key, value) {
    extraProperties[key] = value;
  };

  this.$get = ['$rootScope', '$injector', '$interpolate', '$locale', '$q', 'tmhDynamicLocaleCache', '$timeout', function($rootScope, $injector, interpolate, locale, $q, tmhDynamicLocaleCache, $timeout) {
    var localeLocation = interpolate(localeLocationPattern);

    storage = $injector.get(storageFactory);
    $rootScope.$evalAsync(function() {
      var initialLocale;
      if ((initialLocale = (storage[storageGet](storageKey) || defaultLocale))) {
        loadLocaleFn(initialLocale);
      }
    });
    return {
      /**
       * @ngdoc method
       * @description
       * @param {string} value Sets the locale to the new locale. Changing the locale will trigger
       *    a background task that will retrieve the new locale and configure the current $locale
       *    instance with the information from the new locale
       */
      set: loadLocaleFn,
      /**
       * @ngdoc method
       * @description Returns the configured locale
       */
      get: function() {
        return activeLocale;
      }
    };

    function loadLocaleFn(localeId) {
      var baseProperties = {locale: localeId, angularVersion: angular.version.full};
      return loadLocale(localeLocation(angular.extend({}, extraProperties, baseProperties)), locale, localeId, $rootScope, $q, tmhDynamicLocaleCache, $timeout);
    }
  }];
}]).provider('tmhDynamicLocaleCache', function() {
  this.$get = ['$cacheFactory', function($cacheFactory) {
    return $cacheFactory('tmh.dynamicLocales');
  }];
}).provider('tmhDynamicLocaleStorageCache', function() {
  this.$get = ['$cacheFactory', function($cacheFactory) {
    return $cacheFactory('tmh.dynamicLocales.store');
  }];
}).run(['tmhDynamicLocale', angular.noop]);

return 'tmh.dynamicLocale';

}));

},{}],"angular-markdown-directive":[function(require,module,exports){
/*
 * angular-markdown-directive v0.3.1
 * (c) 2013-2014 Brian Ford http://briantford.com
 * License: MIT
 */

'use strict';

angular.module('btford.markdown', ['ngSanitize']).
  provider('markdownConverter', function () {
    var opts = {};
    return {
      config: function (newOpts) {
        opts = newOpts;
      },
      $get: function () {
        return new Showdown.converter(opts);
      }
    };
  }).
  directive('btfMarkdown', ['$sanitize', 'markdownConverter', function ($sanitize, markdownConverter) {
    return {
      restrict: 'AE',
      link: function (scope, element, attrs) {
        if (attrs.btfMarkdown) {
          scope.$watch(attrs.btfMarkdown, function (newVal) {
            var html = newVal ? $sanitize(markdownConverter.makeHtml(newVal)) : '';
            element.html(html);
          });
        } else {
          var html = $sanitize(markdownConverter.makeHtml(element.text()));
          element.html(html);
        }
      }
    };
  }]);

},{}],"angular-resource":[function(require,module,exports){
require('./angular-resource');
module.exports = 'ngResource';

},{"./angular-resource":2}],"angular-sanitize":[function(require,module,exports){
require('./angular-sanitize');
module.exports = 'ngSanitize';

},{"./angular-sanitize":3}],"angular-touch":[function(require,module,exports){
require('./angular-touch');
module.exports = 'ngTouch';

},{"./angular-touch":4}],"angular-translate-once":[function(require,module,exports){
(function () {
  'use strict';
  var MODULE_NAME = 'pascalprecht.translate',
      DIRECTIVE_NAME = 'translateOnce',
      ATTRS = ['value', 'title', 'alt', 'placeholder'],
      getNamedDirectiveFromAttribute,
      createDirective;

  getNamedDirectiveFromAttribute = function (attribute) {
    return DIRECTIVE_NAME + attribute.charAt(0).toUpperCase() + attribute.slice(1);
  };

  createDirective = function (attribute) {
    var namedDirective = getNamedDirectiveFromAttribute(attribute);
    angular.module(MODULE_NAME).directive(namedDirective, ['$parse', '$translate',
    angular.bind(undefined, TranslateOnceAttributeDirective, attribute)]);
  };

  /**
   * Translate Once Attributes
   * Translate a key once for a given attribute
   * <a translate-once-title="TRANSLATION_TITLE"><a>
   */
  function TranslateOnceAttributeDirective (attribute, $parse, $translate) {
    var namedDirective = getNamedDirectiveFromAttribute(attribute);
    return {
      restrict: 'A',
      priority: -2,
      link: function (scope, element, attrs) {
        var translateValues = {};
        // if we have custom values, interpret them
        if (attrs.translateValues) {
          translateValues = $parse(attrs.translateValues)(scope);
        }
        // queue the translation
        $translate(attrs[namedDirective], translateValues).then(function (translation) {
          // update the element with the translation
          element.attr(attribute, translation);
        });
      }
    };
  }

  /**
   * Translate Once
   * Translate the key once
   */
  function TranslateOnceDirective ($compile, $parse, $translate) {
    return {
      restrict: 'A',
      priority: -1,
      link: function (scope, element, attrs) {
        var translateValues = {};
        // if we have custom values, interpret them
        if (attrs.translateValues) {
          translateValues = $parse(attrs.translateValues)(scope);
        }
        // queue the translation
        $translate(attrs[DIRECTIVE_NAME], translateValues).then(function (translation) {
          // update the element with the translation
          element.html(translation);

          // if the flag for compiling is set, compile it
          if (attrs.hasOwnProperty('translateCompile')) {
            // compile the element with the scope
            $compile(element.contents())(scope);
          }
        });
      }
    };
  }

  // generate the `translate-once-{attr}` directives
  ATTRS.forEach(function (attr) {
    createDirective(attr);
  });

  angular.module(MODULE_NAME)
    .directive(DIRECTIVE_NAME, [
      '$compile',
      '$parse',
      '$translate',
      TranslateOnceDirective
    ]);
}).apply(this);

},{}],"angular-translate-storage-cookie":[function(require,module,exports){
/*!
 * angular-translate - v2.18.1 - 2018-05-19
 * 
 * Copyright (c) 2018 The angular-translate team, Pascal Precht; Licensed MIT
 */
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define([], function () {
      return (factory());
    });
  } else if (typeof module === 'object' && module.exports) {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory();
  } else {
    factory();
  }
}(this, function () {

$translateCookieStorageFactory.$inject = ['$injector'];
angular.module('pascalprecht.translate')

/**
 * @ngdoc object
 * @name pascalprecht.translate.$translateCookieStorage
 * @requires $cookieStore
 *
 * @description
 * Abstraction layer for cookieStore. This service is used when telling angular-translate
 * to use cookieStore as storage.
 *
 */
  .factory('$translateCookieStorage', $translateCookieStorageFactory);

function $translateCookieStorageFactory($injector) {

  'use strict';

  // Since AngularJS 1.4, $cookieStore is deprecated
  var delegate;
  if (angular.version.major === 1 && angular.version.minor >= 4) {
    var $cookies = $injector.get('$cookies');
    delegate = {
      get : function (key) {
        return $cookies.get(key);
      },
      put : function (key, value) {
        $cookies.put(key, value);
      }
    };
  } else {
    var $cookieStore = $injector.get('$cookieStore');
    delegate = {
      get : function (key) {
        return $cookieStore.get(key);
      },
      put : function (key, value) {
        $cookieStore.put(key, value);
      }
    };
  }

  var $translateCookieStorage = {

    /**
     * @ngdoc function
     * @name pascalprecht.translate.$translateCookieStorage#get
     * @methodOf pascalprecht.translate.$translateCookieStorage
     *
     * @description
     * Returns an item from cookieStorage by given name.
     *
     * @param {string} name Item name
     * @return {string} Value of item name
     */
    get : function (name) {
      return delegate.get(name);
    },

    /**
     * @ngdoc function
     * @name pascalprecht.translate.$translateCookieStorage#set
     * @methodOf pascalprecht.translate.$translateCookieStorage
     *
     * @description
     * Sets an item in cookieStorage by given name.
     *
     * @deprecated use #put
     *
     * @param {string} name Item name
     * @param {string} value Item value
     */
    set : function (name, value) {
      delegate.put(name, value);
    },

    /**
     * @ngdoc function
     * @name pascalprecht.translate.$translateCookieStorage#put
     * @methodOf pascalprecht.translate.$translateCookieStorage
     *
     * @description
     * Sets an item in cookieStorage by given name.
     *
     * @param {string} name Item name
     * @param {string} value Item value
     */
    put : function (name, value) {
      delegate.put(name, value);
    }
  };

  return $translateCookieStorage;
}
$translateCookieStorageFactory.$inject = ["$injector"];

$translateCookieStorageFactory.displayName = '$translateCookieStorage';
return 'pascalprecht.translate';

}));

},{}],"angular-zendesk-widget":[function(require,module,exports){
(function(angular) {

  angular.module('zendeskWidget', []);

})(angular);

(function(angular) {
  var
    settings = {
      accountUrl: '',
      beforePageLoad: angular.noop
    },
    apiMethods = [
      'setLocale',
      'identify',
      'hide',
      'show',
      'activate',
      'setHelpCenterSuggestions'
    ];

  angular.module('zendeskWidget')
    .value('zendeskWidgetSettings', settings)
    .provider('ZendeskWidget', [function() {
      /**
       * Configure the widget
       * @param {Object} opts settings
       * @param {String} accountUrl Zendesk account url
       * @param {Function} [beforePageLoad] Callback to run after
       * widget instantiated but before page load, such as hiding
       * the widget immediately. Receives the raw zE API object.
       * Callback does *not* need to wrap calls in a zE() closure.
       * For more info, see:
       * https://developer.zendesk.com/embeddables/docs/widget/api#ze.hide).
       */
      this.init = function(opts) {
        angular.extend(settings, opts);
      };

      this.$get = [
        '$window',
        function($window) {
          /**
           * Thin wrapper over Zendesk's Web Widget API:
           * https://developer.zendesk.com/embeddables/docs/widget/api
           * @class ZendeskWidgetApi
           */
          function ZendeskWidgetApi() {}

          angular.forEach(apiMethods, function(method) {
            ZendeskWidgetApi.prototype[method] = function() {
              var closureArgs = arguments;
              $window.zE(function() {
                $window.zE[method].apply($window.zE, closureArgs);
              })
            };
          });

          return new ZendeskWidgetApi();
        }
      ];
    }]);

})(angular);

(function(angular) {

  angular.module('zendeskWidget')
   .run([
     '$window',
     'zendeskWidgetSettings',
     function($window, zendeskWidgetSettings) {
       if (!zendeskWidgetSettings.accountUrl) {
         throw new Error('Missing accountUrl. Please set in app config via ZendeskWidgetProvider');
       }

       var window = $window;

       // Following is essentially a copy paste of JS portion of the Zendesk embed code
       // with our settings subbed in. For more info, see:
       // https://support.zendesk.com/hc/en-us/articles/203908456-Using-Web-Widget-to-embed-customer-service-in-your-website

         /*eslint-disable */

       window.zEmbed || function(e, t) {
         var n, o, d, i, s, a = [],
           r = document.createElement("iframe");
         window.zEmbed = function() {
           a.push(arguments)
         }, window.zE = window.zE || window.zEmbed, r.src = "javascript:false", r.title = "", r.role = "presentation", (r.frameElement || r).style.cssText = "display: none", d = document.getElementsByTagName("script"), d = d[d.length - 1], d.parentNode.insertBefore(r, d), i = r.contentWindow, s = i.document;
         try {
           o = s
         } catch (c) {
           n = document.domain, r.src = 'javascript:var d=document.open();d.domain="' + n + '";void(0);', o = s
         }
         o.open()._l = function() {
           var o = this.createElement("script");
           n && (this.domain = n), o.id = "js-iframe-async", o.src = e, this.t = +new Date, this.zendeskHost = t, this.zEQueue = a, this.body.appendChild(o)
         }, o.write('<body onload="document._l();">'), o.close()
       }("https://assets.zendesk.com/embeddable_framework/main.js", zendeskWidgetSettings.accountUrl);

         /*eslint-enable */

       $window.zE(function() {
         zendeskWidgetSettings.beforePageLoad($window.zE);
       });
     }
   ]);

})(angular);

(function (root, factory) {
  if (typeof exports === 'object') {
    // CommonJS
    module.exports = factory(require('angular'));
  } else if (typeof define === 'function' && define.amd) {
    // AMD
    define(['angular'], function (angular) {
      return (root.returnExportsGlobal = factory(angular));
    });
  } else {
    // Global Variables
    root.returnExportsGlobal = factory(root.angular);
  }
}(this, function (angular) {
  // Your actual module
  return angular.module('zendeskWidget');
}));

},{"angular":"angular"}],"angular":[function(require,module,exports){
require('./angular');
module.exports = angular;

},{"./angular":5}],"bootstrap":[function(require,module,exports){
// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.
require('../../js/transition.js')
require('../../js/alert.js')
require('../../js/button.js')
require('../../js/carousel.js')
require('../../js/collapse.js')
require('../../js/dropdown.js')
require('../../js/modal.js')
require('../../js/tooltip.js')
require('../../js/popover.js')
require('../../js/scrollspy.js')
require('../../js/tab.js')
require('../../js/affix.js')
},{"../../js/affix.js":6,"../../js/alert.js":7,"../../js/button.js":8,"../../js/carousel.js":9,"../../js/collapse.js":10,"../../js/dropdown.js":11,"../../js/modal.js":12,"../../js/popover.js":13,"../../js/scrollspy.js":14,"../../js/tab.js":15,"../../js/tooltip.js":16,"../../js/transition.js":17}],"es5-shim":[function(require,module,exports){
/*!
 * https://github.com/es-shims/es5-shim
 * @license es5-shim Copyright 2009-2014 by contributors, MIT License
 * see https://github.com/es-shims/es5-shim/blob/master/LICENSE
 */

// vim: ts=4 sts=4 sw=4 expandtab

//Add semicolon to prevent IIFE from being passed as argument to concated code.
;

// UMD (Universal Module Definition)
// see https://github.com/umdjs/umd/blob/master/returnExports.js
(function (root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(factory);
    } else if (typeof exports === 'object') {
        // Node. Does not work with strict CommonJS, but
        // only CommonJS-like enviroments that support module.exports,
        // like Node.
        module.exports = factory();
    } else {
        // Browser globals (root is window)
        root.returnExports = factory();
  }
}(this, function () {

/**
 * Brings an environment as close to ECMAScript 5 compliance
 * as is possible with the facilities of erstwhile engines.
 *
 * Annotated ES5: http://es5.github.com/ (specific links below)
 * ES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf
 * Required reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/
 */

// Shortcut to an often accessed properties, in order to avoid multiple
// dereference that costs universally.
var call = Function.prototype.call;
var prototypeOfArray = Array.prototype;
var prototypeOfObject = Object.prototype;
var _Array_slice_ = prototypeOfArray.slice;
var array_splice = Array.prototype.splice;
var array_push = Array.prototype.push;
var array_unshift = Array.prototype.unshift;

var isFunction = function (val) {
    return prototypeOfObject.toString.call(val) === '[object Function]';
};
var isRegex = function (val) {
    return prototypeOfObject.toString.call(val) === '[object RegExp]';
};

//
// Function
// ========
//

// ES-5 15.3.4.5
// http://es5.github.com/#x15.3.4.5

function Empty() {}

if (!Function.prototype.bind) {
    Function.prototype.bind = function bind(that) { // .length is 1
        // 1. Let Target be the this value.
        var target = this;
        // 2. If IsCallable(Target) is false, throw a TypeError exception.
        if (!isFunction(target)) {
            throw new TypeError("Function.prototype.bind called on incompatible " + target);
        }
        // 3. Let A be a new (possibly empty) internal list of all of the
        //   argument values provided after thisArg (arg1, arg2 etc), in order.
        // XXX slicedArgs will stand in for "A" if used
        var args = _Array_slice_.call(arguments, 1); // for normal call
        // 4. Let F be a new native ECMAScript object.
        // 11. Set the [[Prototype]] internal property of F to the standard
        //   built-in Function prototype object as specified in 15.3.3.1.
        // 12. Set the [[Call]] internal property of F as described in
        //   15.3.4.5.1.
        // 13. Set the [[Construct]] internal property of F as described in
        //   15.3.4.5.2.
        // 14. Set the [[HasInstance]] internal property of F as described in
        //   15.3.4.5.3.
        var binder = function () {

            if (this instanceof bound) {
                // 15.3.4.5.2 [[Construct]]
                // When the [[Construct]] internal method of a function object,
                // F that was created using the bind function is called with a
                // list of arguments ExtraArgs, the following steps are taken:
                // 1. Let target be the value of F's [[TargetFunction]]
                //   internal property.
                // 2. If target has no [[Construct]] internal method, a
                //   TypeError exception is thrown.
                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Construct]] internal
                //   method of target providing args as the arguments.

                var result = target.apply(
                    this,
                    args.concat(_Array_slice_.call(arguments))
                );
                if (Object(result) === result) {
                    return result;
                }
                return this;

            } else {
                // 15.3.4.5.1 [[Call]]
                // When the [[Call]] internal method of a function object, F,
                // which was created using the bind function is called with a
                // this value and a list of arguments ExtraArgs, the following
                // steps are taken:
                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 2. Let boundThis be the value of F's [[BoundThis]] internal
                //   property.
                // 3. Let target be the value of F's [[TargetFunction]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Call]] internal method
                //   of target providing boundThis as the this value and
                //   providing args as the arguments.

                // equiv: target.call(this, ...boundArgs, ...args)
                return target.apply(
                    that,
                    args.concat(_Array_slice_.call(arguments))
                );

            }

        };

        // 15. If the [[Class]] internal property of Target is "Function", then
        //     a. Let L be the length property of Target minus the length of A.
        //     b. Set the length own property of F to either 0 or L, whichever is
        //       larger.
        // 16. Else set the length own property of F to 0.

        var boundLength = Math.max(0, target.length - args.length);

        // 17. Set the attributes of the length own property of F to the values
        //   specified in 15.3.5.1.
        var boundArgs = [];
        for (var i = 0; i < boundLength; i++) {
            boundArgs.push("$" + i);
        }

        // XXX Build a dynamic function with desired amount of arguments is the only
        // way to set the length property of a function.
        // In environments where Content Security Policies enabled (Chrome extensions,
        // for ex.) all use of eval or Function costructor throws an exception.
        // However in all of these environments Function.prototype.bind exists
        // and so this code will never be executed.
        var bound = Function("binder", "return function(" + boundArgs.join(",") + "){return binder.apply(this,arguments)}")(binder);

        if (target.prototype) {
            Empty.prototype = target.prototype;
            bound.prototype = new Empty();
            // Clean up dangling references.
            Empty.prototype = null;
        }

        // TODO
        // 18. Set the [[Extensible]] internal property of F to true.

        // TODO
        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).
        // 20. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "caller", PropertyDescriptor {[[Get]]: thrower, [[Set]]:
        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and
        //   false.
        // 21. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "arguments", PropertyDescriptor {[[Get]]: thrower,
        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},
        //   and false.

        // TODO
        // NOTE Function objects created using Function.prototype.bind do not
        // have a prototype property or the [[Code]], [[FormalParameters]], and
        // [[Scope]] internal properties.
        // XXX can't delete prototype in pure-js.

        // 22. Return F.
        return bound;
    };
}

// _Please note: Shortcuts are defined after `Function.prototype.bind` as we
// us it in defining shortcuts.
var owns = call.bind(prototypeOfObject.hasOwnProperty);
// Having a toString local variable name breaks in Opera so use _toString.
var _toString = call.bind(prototypeOfObject.toString);

// If JS engine supports accessors creating shortcuts.
var defineGetter;
var defineSetter;
var lookupGetter;
var lookupSetter;
var supportsAccessors;
if ((supportsAccessors = owns(prototypeOfObject, "__defineGetter__"))) {
    defineGetter = call.bind(prototypeOfObject.__defineGetter__);
    defineSetter = call.bind(prototypeOfObject.__defineSetter__);
    lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);
    lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);
}

//
// Array
// =====
//

// ES5 15.4.4.12
// http://es5.github.com/#x15.4.4.12
// Default value for second param
// [bugfix, ielt9, old browsers]
// IE < 9 bug: [1,2].splice(0).join("") === "" but should be "12"
if ([1, 2].splice(0).length !== 2) {
    if (function () { // test IE < 9 to splice bug - see issue #138
        function makeArray(l) {
            var a = [];
            while (l--) {
                a.unshift(l);
            }
            return a;
        }

        var array = [];
        var lengthBefore;

        array.splice.bind(array, 0, 0).apply(null, makeArray(20));
        array.splice.bind(array, 0, 0).apply(null, makeArray(26));

        lengthBefore = array.length; //20
        array.splice(5, 0, "XXX"); // add one element

        if (lengthBefore + 1 === array.length) {
            return true;// has right splice implementation without bugs
        }
        // else {
        //    IE8 bug
        // }
    }()) { // IE 6/7
        Array.prototype.splice = function(start, deleteCount) {
            if (!arguments.length) {
                return [];
            } else {
                return array_splice.apply(this, [
                    start === void 0 ? 0 : start,
                    deleteCount === void 0 ? (this.length - start) : deleteCount
                ].concat(_Array_slice_.call(arguments, 2)));
            }
        };
    } else { // IE8
        Array.prototype.splice = function(start, deleteCount) {
            var result;
            var args = _Array_slice_.call(arguments, 2);
            var addElementsCount = args.length;

            if (!arguments.length) {
                return [];
            }

            if (start === void 0) { // default
                start = 0;
            }
            if (deleteCount === void 0) { // default
                deleteCount = this.length - start;
            }

            if (addElementsCount > 0) {
                if (deleteCount <= 0) {
                    if (start === this.length) { // tiny optimisation #1
                        array_push.apply(this, args);
                        return [];
                    }

                    if (start === 0) { // tiny optimisation #2
                        array_unshift.apply(this, args);
                        return [];
                    }
                }

                // Array.prototype.splice implementation
                result = _Array_slice_.call(this, start, start + deleteCount);// delete part
                args.push.apply(args, _Array_slice_.call(this, start + deleteCount, this.length));// right part
                args.unshift.apply(args, _Array_slice_.call(this, 0, start));// left part

                // delete all items from this array and replace it to 'left part' + _Array_slice_.call(arguments, 2) + 'right part'
                args.unshift(0, this.length);

                array_splice.apply(this, args);

                return result;
            }

            return array_splice.call(this, start, deleteCount);
        };

    }
}

// ES5 15.4.4.12
// http://es5.github.com/#x15.4.4.13
// Return len+argCount.
// [bugfix, ielt8]
// IE < 8 bug: [].unshift(0) === undefined but should be "1"
if ([].unshift(0) !== 1) {
    Array.prototype.unshift = function() {
        array_unshift.apply(this, arguments);
        return this.length;
    };
}

// ES5 15.4.3.2
// http://es5.github.com/#x15.4.3.2
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray
if (!Array.isArray) {
    Array.isArray = function isArray(obj) {
        return _toString(obj) === "[object Array]";
    };
}

// The IsCallable() check in the Array functions
// has been replaced with a strict check on the
// internal class of the object to trap cases where
// the provided function was actually a regular
// expression literal, which in V8 and
// JavaScriptCore is a typeof "function".  Only in
// V8 are regular expression literals permitted as
// reduce parameters, so it is desirable in the
// general case for the shim to match the more
// strict and common behavior of rejecting regular
// expressions.

// ES5 15.4.4.18
// http://es5.github.com/#x15.4.4.18
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach


// Check failure of by-index access of string characters (IE < 9)
// and failure of `0 in boxedString` (Rhino)
var boxedString = Object("a");
var splitString = boxedString[0] !== "a" || !(0 in boxedString);

var properlyBoxesContext = function properlyBoxed(method) {
    // Check node 0.6.21 bug where third parameter is not boxed
    var properlyBoxes = true;
    if (method) {
        method.call('foo', function (_, __, context) {
            if (typeof context !== 'object') { properlyBoxes = false; }
        });
    }
    return !!method && properlyBoxes;
};

if (!Array.prototype.forEach || !properlyBoxesContext(Array.prototype.forEach)) {
    Array.prototype.forEach = function forEach(fun /*, thisp*/) {
        var object = toObject(this),
            self = splitString && _toString(this) === "[object String]" ?
                this.split("") :
                object,
            thisp = arguments[1],
            i = -1,
            length = self.length >>> 0;

        // If no callback function or if callback is not a callable function
        if (!isFunction(fun)) {
            throw new TypeError(); // TODO message
        }

        while (++i < length) {
            if (i in self) {
                // Invoke the callback function with call, passing arguments:
                // context, property value, property key, thisArg object
                // context
                fun.call(thisp, self[i], i, object);
            }
        }
    };
}

// ES5 15.4.4.19
// http://es5.github.com/#x15.4.4.19
// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map
if (!Array.prototype.map || !properlyBoxesContext(Array.prototype.map)) {
    Array.prototype.map = function map(fun /*, thisp*/) {
        var object = toObject(this),
            self = splitString && _toString(this) === "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0,
            result = Array(length),
            thisp = arguments[1];

        // If no callback function or if callback is not a callable function
        if (!isFunction(fun)) {
            throw new TypeError(fun + " is not a function");
        }

        for (var i = 0; i < length; i++) {
            if (i in self)
                result[i] = fun.call(thisp, self[i], i, object);
        }
        return result;
    };
}

// ES5 15.4.4.20
// http://es5.github.com/#x15.4.4.20
// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter
if (!Array.prototype.filter || !properlyBoxesContext(Array.prototype.filter)) {
    Array.prototype.filter = function filter(fun /*, thisp */) {
        var object = toObject(this),
            self = splitString && _toString(this) === "[object String]" ?
                this.split("") :
                    object,
            length = self.length >>> 0,
            result = [],
            value,
            thisp = arguments[1];

        // If no callback function or if callback is not a callable function
        if (!isFunction(fun)) {
            throw new TypeError(fun + " is not a function");
        }

        for (var i = 0; i < length; i++) {
            if (i in self) {
                value = self[i];
                if (fun.call(thisp, value, i, object)) {
                    result.push(value);
                }
            }
        }
        return result;
    };
}

// ES5 15.4.4.16
// http://es5.github.com/#x15.4.4.16
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every
if (!Array.prototype.every || !properlyBoxesContext(Array.prototype.every)) {
    Array.prototype.every = function every(fun /*, thisp */) {
        var object = toObject(this),
            self = splitString && _toString(this) === "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0,
            thisp = arguments[1];

        // If no callback function or if callback is not a callable function
        if (!isFunction(fun)) {
            throw new TypeError(fun + " is not a function");
        }

        for (var i = 0; i < length; i++) {
            if (i in self && !fun.call(thisp, self[i], i, object)) {
                return false;
            }
        }
        return true;
    };
}

// ES5 15.4.4.17
// http://es5.github.com/#x15.4.4.17
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some
if (!Array.prototype.some || !properlyBoxesContext(Array.prototype.some)) {
    Array.prototype.some = function some(fun /*, thisp */) {
        var object = toObject(this),
            self = splitString && _toString(this) === "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0,
            thisp = arguments[1];

        // If no callback function or if callback is not a callable function
        if (!isFunction(fun)) {
            throw new TypeError(fun + " is not a function");
        }

        for (var i = 0; i < length; i++) {
            if (i in self && fun.call(thisp, self[i], i, object)) {
                return true;
            }
        }
        return false;
    };
}

// ES5 15.4.4.21
// http://es5.github.com/#x15.4.4.21
// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce
var reduceCoercesToObject = false;
if (Array.prototype.reduce) {
    reduceCoercesToObject = typeof Array.prototype.reduce.call('a', function (_, __, ___, list) { return list; }) === 'object';
}
if (!Array.prototype.reduce || !reduceCoercesToObject) {
    Array.prototype.reduce = function reduce(fun /*, initial*/) {
        var object = toObject(this),
            self = splitString && _toString(this) === "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0;

        // If no callback function or if callback is not a callable function
        if (!isFunction(fun)) {
            throw new TypeError(fun + " is not a function");
        }

        // no value to return if no initial value and an empty array
        if (!length && arguments.length === 1) {
            throw new TypeError("reduce of empty array with no initial value");
        }

        var i = 0;
        var result;
        if (arguments.length >= 2) {
            result = arguments[1];
        } else {
            do {
                if (i in self) {
                    result = self[i++];
                    break;
                }

                // if array contains no values, no initial value to return
                if (++i >= length) {
                    throw new TypeError("reduce of empty array with no initial value");
                }
            } while (true);
        }

        for (; i < length; i++) {
            if (i in self) {
                result = fun.call(void 0, result, self[i], i, object);
            }
        }

        return result;
    };
}

// ES5 15.4.4.22
// http://es5.github.com/#x15.4.4.22
// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight
if (!Array.prototype.reduceRight) {
    Array.prototype.reduceRight = function reduceRight(fun /*, initial*/) {
        var object = toObject(this),
            self = splitString && _toString(this) === "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0;

        // If no callback function or if callback is not a callable function
        if (!isFunction(fun)) {
            throw new TypeError(fun + " is not a function");
        }

        // no value to return if no initial value, empty array
        if (!length && arguments.length === 1) {
            throw new TypeError("reduceRight of empty array with no initial value");
        }

        var result, i = length - 1;
        if (arguments.length >= 2) {
            result = arguments[1];
        } else {
            do {
                if (i in self) {
                    result = self[i--];
                    break;
                }

                // if array contains no values, no initial value to return
                if (--i < 0) {
                    throw new TypeError("reduceRight of empty array with no initial value");
                }
            } while (true);
        }

        if (i < 0) {
            return result;
        }

        do {
            if (i in this) {
                result = fun.call(void 0, result, self[i], i, object);
            }
        } while (i--);

        return result;
    };
}

// ES5 15.4.4.14
// http://es5.github.com/#x15.4.4.14
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf
if (!Array.prototype.indexOf || ([0, 1].indexOf(1, 2) !== -1)) {
    Array.prototype.indexOf = function indexOf(sought /*, fromIndex */ ) {
        var self = splitString && _toString(this) === "[object String]" ?
                this.split("") :
                toObject(this),
            length = self.length >>> 0;

        if (!length) {
            return -1;
        }

        var i = 0;
        if (arguments.length > 1) {
            i = toInteger(arguments[1]);
        }

        // handle negative indices
        i = i >= 0 ? i : Math.max(0, length + i);
        for (; i < length; i++) {
            if (i in self && self[i] === sought) {
                return i;
            }
        }
        return -1;
    };
}

// ES5 15.4.4.15
// http://es5.github.com/#x15.4.4.15
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf
if (!Array.prototype.lastIndexOf || ([0, 1].lastIndexOf(0, -3) !== -1)) {
    Array.prototype.lastIndexOf = function lastIndexOf(sought /*, fromIndex */) {
        var self = splitString && _toString(this) === "[object String]" ?
                this.split("") :
                toObject(this),
            length = self.length >>> 0;

        if (!length) {
            return -1;
        }
        var i = length - 1;
        if (arguments.length > 1) {
            i = Math.min(i, toInteger(arguments[1]));
        }
        // handle negative indices
        i = i >= 0 ? i : length - Math.abs(i);
        for (; i >= 0; i--) {
            if (i in self && sought === self[i]) {
                return i;
            }
        }
        return -1;
    };
}

//
// Object
// ======
//

// ES5 15.2.3.14
// http://es5.github.com/#x15.2.3.14
if (!Object.keys) {
    // http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation
    var hasDontEnumBug = !({'toString': null}).propertyIsEnumerable('toString'),
        hasProtoEnumBug = (function () {}).propertyIsEnumerable('prototype'),
        dontEnums = [
            "toString",
            "toLocaleString",
            "valueOf",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "constructor"
        ],
        dontEnumsLength = dontEnums.length,
        isArguments = function isArguments(value) {
            var str = _toString(value);
            var isArgs = str === '[object Arguments]';
            if (!isArgs) {
                isArgs = !Array.isArray(str)
                    && value !== null
                    && typeof value === 'object'
                    && typeof value.length === 'number'
                    && value.length >= 0
                    && isFunction(value.callee);
            }
            return isArgs;
        };

    Object.keys = function keys(object) {
        var isFn = isFunction(object),
            isArgs = isArguments(object),
            isObject = object !== null && typeof object === 'object',
            isString = isObject && _toString(object) === '[object String]';

        if (!isObject && !isFn && !isArgs) {
            throw new TypeError("Object.keys called on a non-object");
        }

        var theKeys = [];
        var skipProto = hasProtoEnumBug && isFn;
        if (isString || isArgs) {
            for (var i = 0; i < object.length; ++i) {
                theKeys.push(String(i));
            }
        } else {
            for (var name in object) {
                if (!(skipProto && name === 'prototype') && owns(object, name)) {
                    theKeys.push(String(name));
                }
            }
        }

        if (hasDontEnumBug) {
            var ctor = object.constructor,
                skipConstructor = ctor && ctor.prototype === object;
            for (var j = 0; j < dontEnumsLength; j++) {
                var dontEnum = dontEnums[j];
                if (!(skipConstructor && dontEnum === 'constructor') && owns(object, dontEnum)) {
                    theKeys.push(dontEnum);
                }
            }
        }
        return theKeys;
    };

}

//
// Date
// ====
//

// ES5 15.9.5.43
// http://es5.github.com/#x15.9.5.43
// This function returns a String value represent the instance in time
// represented by this Date object. The format of the String is the Date Time
// string format defined in 15.9.1.15. All fields are present in the String.
// The time zone is always UTC, denoted by the suffix Z. If the time value of
// this object is not a finite Number a RangeError exception is thrown.
var negativeDate = -62198755200000,
    negativeYearString = "-000001";
if (
    !Date.prototype.toISOString ||
    (new Date(negativeDate).toISOString().indexOf(negativeYearString) === -1)
) {
    Date.prototype.toISOString = function toISOString() {
        var result, length, value, year, month;
        if (!isFinite(this)) {
            throw new RangeError("Date.prototype.toISOString called on non-finite value.");
        }

        year = this.getUTCFullYear();

        month = this.getUTCMonth();
        // see https://github.com/es-shims/es5-shim/issues/111
        year += Math.floor(month / 12);
        month = (month % 12 + 12) % 12;

        // the date time string format is specified in 15.9.1.15.
        result = [month + 1, this.getUTCDate(),
            this.getUTCHours(), this.getUTCMinutes(), this.getUTCSeconds()];
        year = (
            (year < 0 ? "-" : (year > 9999 ? "+" : "")) +
            ("00000" + Math.abs(year))
            .slice(0 <= year && year <= 9999 ? -4 : -6)
        );

        length = result.length;
        while (length--) {
            value = result[length];
            // pad months, days, hours, minutes, and seconds to have two
            // digits.
            if (value < 10) {
                result[length] = "0" + value;
            }
        }
        // pad milliseconds to have three digits.
        return (
            year + "-" + result.slice(0, 2).join("-") +
            "T" + result.slice(2).join(":") + "." +
            ("000" + this.getUTCMilliseconds()).slice(-3) + "Z"
        );
    };
}


// ES5 15.9.5.44
// http://es5.github.com/#x15.9.5.44
// This function provides a String representation of a Date object for use by
// JSON.stringify (15.12.3).
var dateToJSONIsSupported = false;
try {
    dateToJSONIsSupported = (
        Date.prototype.toJSON &&
        new Date(NaN).toJSON() === null &&
        new Date(negativeDate).toJSON().indexOf(negativeYearString) !== -1 &&
        Date.prototype.toJSON.call({ // generic
            toISOString: function () {
                return true;
            }
        })
    );
} catch (e) {
}
if (!dateToJSONIsSupported) {
    Date.prototype.toJSON = function toJSON(key) {
        // When the toJSON method is called with argument key, the following
        // steps are taken:

        // 1.  Let O be the result of calling ToObject, giving it the this
        // value as its argument.
        // 2. Let tv be toPrimitive(O, hint Number).
        var o = Object(this),
            tv = toPrimitive(o),
            toISO;
        // 3. If tv is a Number and is not finite, return null.
        if (typeof tv === "number" && !isFinite(tv)) {
            return null;
        }
        // 4. Let toISO be the result of calling the [[Get]] internal method of
        // O with argument "toISOString".
        toISO = o.toISOString;
        // 5. If IsCallable(toISO) is false, throw a TypeError exception.
        if (typeof toISO !== "function") {
            throw new TypeError("toISOString property is not callable");
        }
        // 6. Return the result of calling the [[Call]] internal method of
        //  toISO with O as the this value and an empty argument list.
        return toISO.call(o);

        // NOTE 1 The argument is ignored.

        // NOTE 2 The toJSON function is intentionally generic; it does not
        // require that its this value be a Date object. Therefore, it can be
        // transferred to other kinds of objects for use as a method. However,
        // it does require that any such object have a toISOString method. An
        // object is free to use the argument key to filter its
        // stringification.
    };
}

// ES5 15.9.4.2
// http://es5.github.com/#x15.9.4.2
// based on work shared by Daniel Friesen (dantman)
// http://gist.github.com/303249
var supportsExtendedYears = Date.parse('+033658-09-27T01:46:40.000Z') === 1e15;
var acceptsInvalidDates = !isNaN(Date.parse('2012-04-04T24:00:00.500Z')) || !isNaN(Date.parse('2012-11-31T23:59:59.000Z'));
var doesNotParseY2KNewYear = isNaN(Date.parse("2000-01-01T00:00:00.000Z"));
if (!Date.parse || doesNotParseY2KNewYear || acceptsInvalidDates || !supportsExtendedYears) {
    // XXX global assignment won't work in embeddings that use
    // an alternate object for the context.
    Date = (function(NativeDate) {

        // Date.length === 7
        function Date(Y, M, D, h, m, s, ms) {
            var length = arguments.length;
            if (this instanceof NativeDate) {
                var date = length === 1 && String(Y) === Y ? // isString(Y)
                    // We explicitly pass it through parse:
                    new NativeDate(Date.parse(Y)) :
                    // We have to manually make calls depending on argument
                    // length here
                    length >= 7 ? new NativeDate(Y, M, D, h, m, s, ms) :
                    length >= 6 ? new NativeDate(Y, M, D, h, m, s) :
                    length >= 5 ? new NativeDate(Y, M, D, h, m) :
                    length >= 4 ? new NativeDate(Y, M, D, h) :
                    length >= 3 ? new NativeDate(Y, M, D) :
                    length >= 2 ? new NativeDate(Y, M) :
                    length >= 1 ? new NativeDate(Y) :
                                  new NativeDate();
                // Prevent mixups with unfixed Date object
                date.constructor = Date;
                return date;
            }
            return NativeDate.apply(this, arguments);
        }

        // 15.9.1.15 Date Time String Format.
        var isoDateExpression = new RegExp("^" +
            "(\\d{4}|[\+\-]\\d{6})" + // four-digit year capture or sign +
                                      // 6-digit extended year
            "(?:-(\\d{2})" + // optional month capture
            "(?:-(\\d{2})" + // optional day capture
            "(?:" + // capture hours:minutes:seconds.milliseconds
                "T(\\d{2})" + // hours capture
                ":(\\d{2})" + // minutes capture
                "(?:" + // optional :seconds.milliseconds
                    ":(\\d{2})" + // seconds capture
                    "(?:(\\.\\d{1,}))?" + // milliseconds capture
                ")?" +
            "(" + // capture UTC offset component
                "Z|" + // UTC capture
                "(?:" + // offset specifier +/-hours:minutes
                    "([-+])" + // sign capture
                    "(\\d{2})" + // hours offset capture
                    ":(\\d{2})" + // minutes offset capture
                ")" +
            ")?)?)?)?" +
        "$");

        var months = [
            0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365
        ];

        function dayFromMonth(year, month) {
            var t = month > 1 ? 1 : 0;
            return (
                months[month] +
                Math.floor((year - 1969 + t) / 4) -
                Math.floor((year - 1901 + t) / 100) +
                Math.floor((year - 1601 + t) / 400) +
                365 * (year - 1970)
            );
        }

        function toUTC(t) {
            return Number(new NativeDate(1970, 0, 1, 0, 0, 0, t));
        }

        // Copy any custom methods a 3rd party library may have added
        for (var key in NativeDate) {
            Date[key] = NativeDate[key];
        }

        // Copy "native" methods explicitly; they may be non-enumerable
        Date.now = NativeDate.now;
        Date.UTC = NativeDate.UTC;
        Date.prototype = NativeDate.prototype;
        Date.prototype.constructor = Date;

        // Upgrade Date.parse to handle simplified ISO 8601 strings
        Date.parse = function parse(string) {
            var match = isoDateExpression.exec(string);
            if (match) {
                // parse months, days, hours, minutes, seconds, and milliseconds
                // provide default values if necessary
                // parse the UTC offset component
                var year = Number(match[1]),
                    month = Number(match[2] || 1) - 1,
                    day = Number(match[3] || 1) - 1,
                    hour = Number(match[4] || 0),
                    minute = Number(match[5] || 0),
                    second = Number(match[6] || 0),
                    millisecond = Math.floor(Number(match[7] || 0) * 1000),
                    // When time zone is missed, local offset should be used
                    // (ES 5.1 bug)
                    // see https://bugs.ecmascript.org/show_bug.cgi?id=112
                    isLocalTime = Boolean(match[4] && !match[8]),
                    signOffset = match[9] === "-" ? 1 : -1,
                    hourOffset = Number(match[10] || 0),
                    minuteOffset = Number(match[11] || 0),
                    result;
                if (
                    hour < (
                        minute > 0 || second > 0 || millisecond > 0 ?
                        24 : 25
                    ) &&
                    minute < 60 && second < 60 && millisecond < 1000 &&
                    month > -1 && month < 12 && hourOffset < 24 &&
                    minuteOffset < 60 && // detect invalid offsets
                    day > -1 &&
                    day < (
                        dayFromMonth(year, month + 1) -
                        dayFromMonth(year, month)
                    )
                ) {
                    result = (
                        (dayFromMonth(year, month) + day) * 24 +
                        hour +
                        hourOffset * signOffset
                    ) * 60;
                    result = (
                        (result + minute + minuteOffset * signOffset) * 60 +
                        second
                    ) * 1000 + millisecond;
                    if (isLocalTime) {
                        result = toUTC(result);
                    }
                    if (-8.64e15 <= result && result <= 8.64e15) {
                        return result;
                    }
                }
                return NaN;
            }
            return NativeDate.parse.apply(this, arguments);
        };

        return Date;
    })(Date);
}

// ES5 15.9.4.4
// http://es5.github.com/#x15.9.4.4
if (!Date.now) {
    Date.now = function now() {
        return new Date().getTime();
    };
}


//
// Number
// ======
//

// ES5.1 15.7.4.5
// http://es5.github.com/#x15.7.4.5
if (!Number.prototype.toFixed || (0.00008).toFixed(3) !== '0.000' || (0.9).toFixed(0) === '0' || (1.255).toFixed(2) !== '1.25' || (1000000000000000128).toFixed(0) !== "1000000000000000128") {
    // Hide these variables and functions
    (function () {
        var base, size, data, i;

        base = 1e7;
        size = 6;
        data = [0, 0, 0, 0, 0, 0];

        function multiply(n, c) {
            var i = -1;
            while (++i < size) {
                c += n * data[i];
                data[i] = c % base;
                c = Math.floor(c / base);
            }
        }

        function divide(n) {
            var i = size, c = 0;
            while (--i >= 0) {
                c += data[i];
                data[i] = Math.floor(c / n);
                c = (c % n) * base;
            }
        }

        function toString() {
            var i = size;
            var s = '';
            while (--i >= 0) {
                if (s !== '' || i === 0 || data[i] !== 0) {
                    var t = String(data[i]);
                    if (s === '') {
                        s = t;
                    } else {
                        s += '0000000'.slice(0, 7 - t.length) + t;
                    }
                }
            }
            return s;
        }

        function pow(x, n, acc) {
            return (n === 0 ? acc : (n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc)));
        }

        function log(x) {
            var n = 0;
            while (x >= 4096) {
                n += 12;
                x /= 4096;
            }
            while (x >= 2) {
                n += 1;
                x /= 2;
            }
            return n;
        }

        Number.prototype.toFixed = function toFixed(fractionDigits) {
            var f, x, s, m, e, z, j, k;

            // Test for NaN and round fractionDigits down
            f = Number(fractionDigits);
            f = f !== f ? 0 : Math.floor(f);

            if (f < 0 || f > 20) {
                throw new RangeError("Number.toFixed called with invalid number of decimals");
            }

            x = Number(this);

            // Test for NaN
            if (x !== x) {
                return "NaN";
            }

            // If it is too big or small, return the string value of the number
            if (x <= -1e21 || x >= 1e21) {
                return String(x);
            }

            s = "";

            if (x < 0) {
                s = "-";
                x = -x;
            }

            m = "0";

            if (x > 1e-21) {
                // 1e-21 < x < 1e21
                // -70 < log2(x) < 70
                e = log(x * pow(2, 69, 1)) - 69;
                z = (e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1));
                z *= 0x10000000000000; // Math.pow(2, 52);
                e = 52 - e;

                // -18 < e < 122
                // x = z / 2 ^ e
                if (e > 0) {
                    multiply(0, z);
                    j = f;

                    while (j >= 7) {
                        multiply(1e7, 0);
                        j -= 7;
                    }

                    multiply(pow(10, j, 1), 0);
                    j = e - 1;

                    while (j >= 23) {
                        divide(1 << 23);
                        j -= 23;
                    }

                    divide(1 << j);
                    multiply(1, 1);
                    divide(2);
                    m = toString();
                } else {
                    multiply(0, z);
                    multiply(1 << (-e), 0);
                    m = toString() + '0.00000000000000000000'.slice(2, 2 + f);
                }
            }

            if (f > 0) {
                k = m.length;

                if (k <= f) {
                    m = s + '0.0000000000000000000'.slice(0, f - k + 2) + m;
                } else {
                    m = s + m.slice(0, k - f) + '.' + m.slice(k - f);
                }
            } else {
                m = s + m;
            }

            return m;
        };
    }());
}


//
// String
// ======
//


// ES5 15.5.4.14
// http://es5.github.com/#x15.5.4.14

// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]
// Many browsers do not split properly with regular expressions or they
// do not perform the split correctly under obscure conditions.
// See http://blog.stevenlevithan.com/archives/cross-browser-split
// I've tested in many browsers and this seems to cover the deviant ones:
//    'ab'.split(/(?:ab)*/) should be ["", ""], not [""]
//    '.'.split(/(.?)(.?)/) should be ["", ".", "", ""], not ["", ""]
//    'tesst'.split(/(s)*/) should be ["t", undefined, "e", "s", "t"], not
//       [undefined, "t", undefined, "e", ...]
//    ''.split(/.?/) should be [], not [""]
//    '.'.split(/()()/) should be ["."], not ["", "", "."]

var string_split = String.prototype.split;
if (
    'ab'.split(/(?:ab)*/).length !== 2 ||
    '.'.split(/(.?)(.?)/).length !== 4 ||
    'tesst'.split(/(s)*/)[1] === "t" ||
    ''.split(/.?/).length ||
    '.'.split(/()()/).length > 1
) {
    (function () {
        var compliantExecNpcg = /()??/.exec("")[1] === void 0; // NPCG: nonparticipating capturing group

        String.prototype.split = function (separator, limit) {
            var string = this;
            if (separator === void 0 && limit === 0)
                return [];

            // If `separator` is not a regex, use native split
            if (Object.prototype.toString.call(separator) !== "[object RegExp]") {
                return string_split.apply(this, arguments);
            }

            var output = [],
                flags = (separator.ignoreCase ? "i" : "") +
                        (separator.multiline  ? "m" : "") +
                        (separator.extended   ? "x" : "") + // Proposed for ES6
                        (separator.sticky     ? "y" : ""), // Firefox 3+
                lastLastIndex = 0,
                // Make `global` and avoid `lastIndex` issues by working with a copy
                separator2, match, lastIndex, lastLength;
            separator = new RegExp(separator.source, flags + "g");
            string += ""; // Type-convert
            if (!compliantExecNpcg) {
                // Doesn't need flags gy, but they don't hurt
                separator2 = new RegExp("^" + separator.source + "$(?!\\s)", flags);
            }
            /* Values for `limit`, per the spec:
             * If undefined: 4294967295 // Math.pow(2, 32) - 1
             * If 0, Infinity, or NaN: 0
             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;
             * If negative number: 4294967296 - Math.floor(Math.abs(limit))
             * If other: Type-convert, then use the above rules
             */
            limit = limit === void 0 ?
                -1 >>> 0 : // Math.pow(2, 32) - 1
                limit >>> 0; // ToUint32(limit)
            while (match = separator.exec(string)) {
                // `separator.lastIndex` is not reliable cross-browser
                lastIndex = match.index + match[0].length;
                if (lastIndex > lastLastIndex) {
                    output.push(string.slice(lastLastIndex, match.index));
                    // Fix browsers whose `exec` methods don't consistently return `undefined` for
                    // nonparticipating capturing groups
                    if (!compliantExecNpcg && match.length > 1) {
                        match[0].replace(separator2, function () {
                            for (var i = 1; i < arguments.length - 2; i++) {
                                if (arguments[i] === void 0) {
                                    match[i] = void 0;
                                }
                            }
                        });
                    }
                    if (match.length > 1 && match.index < string.length) {
                        Array.prototype.push.apply(output, match.slice(1));
                    }
                    lastLength = match[0].length;
                    lastLastIndex = lastIndex;
                    if (output.length >= limit) {
                        break;
                    }
                }
                if (separator.lastIndex === match.index) {
                    separator.lastIndex++; // Avoid an infinite loop
                }
            }
            if (lastLastIndex === string.length) {
                if (lastLength || !separator.test("")) {
                    output.push("");
                }
            } else {
                output.push(string.slice(lastLastIndex));
            }
            return output.length > limit ? output.slice(0, limit) : output;
        };
    }());

// [bugfix, chrome]
// If separator is undefined, then the result array contains just one String,
// which is the this value (converted to a String). If limit is not undefined,
// then the output array is truncated so that it contains no more than limit
// elements.
// "0".split(undefined, 0) -> []
} else if ("0".split(void 0, 0).length) {
    String.prototype.split = function split(separator, limit) {
        if (separator === void 0 && limit === 0) return [];
        return string_split.apply(this, arguments);
    };
}

var str_replace = String.prototype.replace;
var replaceReportsGroupsCorrectly = (function () {
    var groups = [];
    'x'.replace(/x(.)?/g, function (match, group) {
        groups.push(group);
    });
    return groups.length === 1 && typeof groups[0] === 'undefined';
}());

if (!replaceReportsGroupsCorrectly) {
    String.prototype.replace = function replace(searchValue, replaceValue) {
        var isFn = isFunction(replaceValue);
        var hasCapturingGroups = isRegex(searchValue) && (/\)[*?]/).test(searchValue.source);
        if (!isFn || !hasCapturingGroups) {
            return str_replace.apply(this, arguments);
        } else {
            var wrappedReplaceValue = function (match) {
                var length = arguments.length;
                var originalLastIndex = searchValue.lastIndex;
                searchValue.lastIndex = 0;
                var args = searchValue.exec(match);
                searchValue.lastIndex = originalLastIndex;
                args.push(arguments[length - 2], arguments[length - 1]);
                return replaceValue.apply(this, args);
            };
            return str_replace.call(this, searchValue, wrappedReplaceValue);
        }
    };
}

// ECMA-262, 3rd B.2.3
// Note an ECMAScript standart, although ECMAScript 3rd Edition has a
// non-normative section suggesting uniform semantics and it should be
// normalized across all browsers
// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE
if ("".substr && "0b".substr(-1) !== "b") {
    var string_substr = String.prototype.substr;
    /**
     *  Get the substring of a string
     *  @param  {integer}  start   where to start the substring
     *  @param  {integer}  length  how many characters to return
     *  @return {string}
     */
    String.prototype.substr = function substr(start, length) {
        return string_substr.call(
            this,
            start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,
            length
        );
    };
}

// ES5 15.5.4.20
// whitespace from: http://es5.github.io/#x15.5.4.20
var ws = "\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003" +
    "\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028" +
    "\u2029\uFEFF";
var zeroWidth = '\u200b';
if (!String.prototype.trim || ws.trim() || !zeroWidth.trim()) {
    // http://blog.stevenlevithan.com/archives/faster-trim-javascript
    // http://perfectionkills.com/whitespace-deviations/
    ws = "[" + ws + "]";
    var trimBeginRegexp = new RegExp("^" + ws + ws + "*"),
        trimEndRegexp = new RegExp(ws + ws + "*$");
    String.prototype.trim = function trim() {
        if (this === void 0 || this === null) {
            throw new TypeError("can't convert "+this+" to object");
        }
        return String(this)
            .replace(trimBeginRegexp, "")
            .replace(trimEndRegexp, "");
    };
}

// ES-5 15.1.2.2
if (parseInt(ws + '08') !== 8 || parseInt(ws + '0x16') !== 22) {
    parseInt = (function (origParseInt) {
        var hexRegex = /^0[xX]/;
        return function parseIntES5(str, radix) {
            str = String(str).trim();
            if (!Number(radix)) {
                radix = hexRegex.test(str) ? 16 : 10;
            }
            return origParseInt(str, radix);
        };
    }(parseInt));
}

//
// Util
// ======
//

// ES5 9.4
// http://es5.github.com/#x9.4
// http://jsperf.com/to-integer

function toInteger(n) {
    n = +n;
    if (n !== n) { // isNaN
        n = 0;
    } else if (n !== 0 && n !== (1/0) && n !== -(1/0)) {
        n = (n > 0 || -1) * Math.floor(Math.abs(n));
    }
    return n;
}

function isPrimitive(input) {
    var type = typeof input;
    return (
        input === null ||
        type === "undefined" ||
        type === "boolean" ||
        type === "number" ||
        type === "string"
    );
}

function toPrimitive(input) {
    var val, valueOf, toStr;
    if (isPrimitive(input)) {
        return input;
    }
    valueOf = input.valueOf;
    if (isFunction(valueOf)) {
        val = valueOf.call(input);
        if (isPrimitive(val)) {
            return val;
        }
    }
    toStr = input.toString;
    if (isFunction(toStr)) {
        val = toStr.call(input);
        if (isPrimitive(val)) {
            return val;
        }
    }
    throw new TypeError();
}

// ES5 9.9
// http://es5.github.com/#x9.9
var toObject = function (o) {
    if (o == null) { // this matches both null and undefined
        throw new TypeError("can't convert "+o+" to object");
    }
    return Object(o);
};

}));

},{}],"json3":[function(require,module,exports){
(function (global){
/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */
;(function () {
  // Detect the `define` function exposed by asynchronous module loaders. The
  // strict `define` check is necessary for compatibility with `r.js`.
  var isLoader = typeof define === "function" && define.amd;

  // A set of types used to distinguish objects from primitives.
  var objectTypes = {
    "function": true,
    "object": true
  };

  // Detect the `exports` object exposed by CommonJS implementations.
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

  // Use the `global` object exposed by Node (including Browserify via
  // `insert-module-globals`), Narwhal, and Ringo as the default context,
  // and the `window` object in browsers. Rhino exports a `global` function
  // instead.
  var root = objectTypes[typeof window] && window || this,
      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == "object" && global;

  if (freeGlobal && (freeGlobal["global"] === freeGlobal || freeGlobal["window"] === freeGlobal || freeGlobal["self"] === freeGlobal)) {
    root = freeGlobal;
  }

  // Public: Initializes JSON 3 using the given `context` object, attaching the
  // `stringify` and `parse` functions to the specified `exports` object.
  function runInContext(context, exports) {
    context || (context = root["Object"]());
    exports || (exports = root["Object"]());

    // Native constructor aliases.
    var Number = context["Number"] || root["Number"],
        String = context["String"] || root["String"],
        Object = context["Object"] || root["Object"],
        Date = context["Date"] || root["Date"],
        SyntaxError = context["SyntaxError"] || root["SyntaxError"],
        TypeError = context["TypeError"] || root["TypeError"],
        Math = context["Math"] || root["Math"],
        nativeJSON = context["JSON"] || root["JSON"];

    // Delegate to the native `stringify` and `parse` implementations.
    if (typeof nativeJSON == "object" && nativeJSON) {
      exports.stringify = nativeJSON.stringify;
      exports.parse = nativeJSON.parse;
    }

    // Convenience aliases.
    var objectProto = Object.prototype,
        getClass = objectProto.toString,
        isProperty, forEach, undef;

    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.
    var isExtended = new Date(-3509827334573292);
    try {
      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical
      // results for certain dates in Opera >= 10.53.
      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&
        // Safari < 2.0.2 stores the internal millisecond time value correctly,
        // but clips the values returned by the date methods to the range of
        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).
        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;
    } catch (exception) {}

    // Internal: Determines whether the native `JSON.stringify` and `parse`
    // implementations are spec-compliant. Based on work by Ken Snyder.
    function has(name) {
      if (has[name] !== undef) {
        // Return cached feature test result.
        return has[name];
      }
      var isSupported;
      if (name == "bug-string-char-index") {
        // IE <= 7 doesn't support accessing string characters using square
        // bracket notation. IE 8 only supports this for primitives.
        isSupported = "a"[0] != "a";
      } else if (name == "json") {
        // Indicates whether both `JSON.stringify` and `JSON.parse` are
        // supported.
        isSupported = has("json-stringify") && has("json-parse");
      } else {
        var value, serialized = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
        // Test `JSON.stringify`.
        if (name == "json-stringify") {
          var stringify = exports.stringify, stringifySupported = typeof stringify == "function" && isExtended;
          if (stringifySupported) {
            // A test function object with a custom `toJSON` method.
            (value = function () {
              return 1;
            }).toJSON = value;
            try {
              stringifySupported =
                // Firefox 3.1b1 and b2 serialize string, number, and boolean
                // primitives as object literals.
                stringify(0) === "0" &&
                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object
                // literals.
                stringify(new Number()) === "0" &&
                stringify(new String()) == '""' &&
                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or
                // does not define a canonical JSON representation (this applies to
                // objects with `toJSON` properties as well, *unless* they are nested
                // within an object or array).
                stringify(getClass) === undef &&
                // IE 8 serializes `undefined` as `"undefined"`. Safari <= 5.1.7 and
                // FF 3.1b3 pass this test.
                stringify(undef) === undef &&
                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,
                // respectively, if the value is omitted entirely.
                stringify() === undef &&
                // FF 3.1b1, 2 throw an error if the given value is not a number,
                // string, array, object, Boolean, or `null` literal. This applies to
                // objects with custom `toJSON` methods as well, unless they are nested
                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`
                // methods entirely.
                stringify(value) === "1" &&
                stringify([value]) == "[1]" &&
                // Prototype <= 1.6.1 serializes `[undefined]` as `"[]"` instead of
                // `"[null]"`.
                stringify([undef]) == "[null]" &&
                // YUI 3.0.0b1 fails to serialize `null` literals.
                stringify(null) == "null" &&
                // FF 3.1b1, 2 halts serialization if an array contains a function:
                // `[1, true, getClass, 1]` serializes as "[1,true,],". FF 3.1b3
                // elides non-JSON values from objects and arrays, unless they
                // define custom `toJSON` methods.
                stringify([undef, getClass, null]) == "[null,null,null]" &&
                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences
                // where character escape codes are expected (e.g., `\b` => `\u0008`).
                stringify({ "a": [value, true, false, null, "\x00\b\n\f\r\t"] }) == serialized &&
                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.
                stringify(null, value) === "1" &&
                stringify([1, 2], null, 1) == "[\n 1,\n 2\n]" &&
                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly
                // serialize extended years.
                stringify(new Date(-8.64e15)) == '"-271821-04-20T00:00:00.000Z"' &&
                // The milliseconds are optional in ES 5, but required in 5.1.
                stringify(new Date(8.64e15)) == '"+275760-09-13T00:00:00.000Z"' &&
                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative
                // four-digit years instead of six-digit years. Credits: @Yaffle.
                stringify(new Date(-621987552e5)) == '"-000001-01-01T00:00:00.000Z"' &&
                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond
                // values less than 1000. Credits: @Yaffle.
                stringify(new Date(-1)) == '"1969-12-31T23:59:59.999Z"';
            } catch (exception) {
              stringifySupported = false;
            }
          }
          isSupported = stringifySupported;
        }
        // Test `JSON.parse`.
        if (name == "json-parse") {
          var parse = exports.parse;
          if (typeof parse == "function") {
            try {
              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.
              // Conforming implementations should also coerce the initial argument to
              // a string prior to parsing.
              if (parse("0") === 0 && !parse(false)) {
                // Simple parsing test.
                value = parse(serialized);
                var parseSupported = value["a"].length == 5 && value["a"][0] === 1;
                if (parseSupported) {
                  try {
                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.
                    parseSupported = !parse('"\t"');
                  } catch (exception) {}
                  if (parseSupported) {
                    try {
                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading
                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow
                      // certain octal literals.
                      parseSupported = parse("01") !== 1;
                    } catch (exception) {}
                  }
                  if (parseSupported) {
                    try {
                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal
                      // points. These environments, along with FF 3.1b1 and 2,
                      // also allow trailing commas in JSON objects and arrays.
                      parseSupported = parse("1.") !== 1;
                    } catch (exception) {}
                  }
                }
              }
            } catch (exception) {
              parseSupported = false;
            }
          }
          isSupported = parseSupported;
        }
      }
      return has[name] = !!isSupported;
    }

    if (!has("json")) {
      // Common `[[Class]]` name aliases.
      var functionClass = "[object Function]",
          dateClass = "[object Date]",
          numberClass = "[object Number]",
          stringClass = "[object String]",
          arrayClass = "[object Array]",
          booleanClass = "[object Boolean]";

      // Detect incomplete support for accessing string characters by index.
      var charIndexBuggy = has("bug-string-char-index");

      // Define additional utility methods if the `Date` methods are buggy.
      if (!isExtended) {
        var floor = Math.floor;
        // A mapping between the months of the year and the number of days between
        // January 1st and the first of the respective month.
        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
        // Internal: Calculates the number of days between the Unix epoch and the
        // first day of the given month.
        var getDay = function (year, month) {
          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);
        };
      }

      // Internal: Determines if a property is a direct property of the given
      // object. Delegates to the native `Object#hasOwnProperty` method.
      if (!(isProperty = objectProto.hasOwnProperty)) {
        isProperty = function (property) {
          var members = {}, constructor;
          if ((members.__proto__ = null, members.__proto__ = {
            // The *proto* property cannot be set multiple times in recent
            // versions of Firefox and SeaMonkey.
            "toString": 1
          }, members).toString != getClass) {
            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but
            // supports the mutable *proto* property.
            isProperty = function (property) {
              // Capture and break the object's prototype chain (see section 8.6.2
              // of the ES 5.1 spec). The parenthesized expression prevents an
              // unsafe transformation by the Closure Compiler.
              var original = this.__proto__, result = property in (this.__proto__ = null, this);
              // Restore the original prototype chain.
              this.__proto__ = original;
              return result;
            };
          } else {
            // Capture a reference to the top-level `Object` constructor.
            constructor = members.constructor;
            // Use the `constructor` property to simulate `Object#hasOwnProperty` in
            // other environments.
            isProperty = function (property) {
              var parent = (this.constructor || constructor).prototype;
              return property in this && !(property in parent && this[property] === parent[property]);
            };
          }
          members = null;
          return isProperty.call(this, property);
        };
      }

      // Internal: Normalizes the `for...in` iteration algorithm across
      // environments. Each enumerated key is yielded to a `callback` function.
      forEach = function (object, callback) {
        var size = 0, Properties, members, property;

        // Tests for bugs in the current environment's `for...in` algorithm. The
        // `valueOf` property inherits the non-enumerable flag from
        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.
        (Properties = function () {
          this.valueOf = 0;
        }).prototype.valueOf = 0;

        // Iterate over a new instance of the `Properties` class.
        members = new Properties();
        for (property in members) {
          // Ignore all properties inherited from `Object.prototype`.
          if (isProperty.call(members, property)) {
            size++;
          }
        }
        Properties = members = null;

        // Normalize the iteration algorithm.
        if (!size) {
          // A list of non-enumerable properties inherited from `Object.prototype`.
          members = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"];
          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable
          // properties.
          forEach = function (object, callback) {
            var isFunction = getClass.call(object) == functionClass, property, length;
            var hasProperty = !isFunction && typeof object.constructor != "function" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;
            for (property in object) {
              // Gecko <= 1.0 enumerates the `prototype` property of functions under
              // certain conditions; IE does not.
              if (!(isFunction && property == "prototype") && hasProperty.call(object, property)) {
                callback(property);
              }
            }
            // Manually invoke the callback for each non-enumerable property.
            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));
          };
        } else if (size == 2) {
          // Safari <= 2.0.4 enumerates shadowed properties twice.
          forEach = function (object, callback) {
            // Create a set of iterated properties.
            var members = {}, isFunction = getClass.call(object) == functionClass, property;
            for (property in object) {
              // Store each property name to prevent double enumeration. The
              // `prototype` property of functions is not enumerated due to cross-
              // environment inconsistencies.
              if (!(isFunction && property == "prototype") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {
                callback(property);
              }
            }
          };
        } else {
          // No bugs detected; use the standard `for...in` algorithm.
          forEach = function (object, callback) {
            var isFunction = getClass.call(object) == functionClass, property, isConstructor;
            for (property in object) {
              if (!(isFunction && property == "prototype") && isProperty.call(object, property) && !(isConstructor = property === "constructor")) {
                callback(property);
              }
            }
            // Manually invoke the callback for the `constructor` property due to
            // cross-environment inconsistencies.
            if (isConstructor || isProperty.call(object, (property = "constructor"))) {
              callback(property);
            }
          };
        }
        return forEach(object, callback);
      };

      // Public: Serializes a JavaScript `value` as a JSON string. The optional
      // `filter` argument may specify either a function that alters how object and
      // array members are serialized, or an array of strings and numbers that
      // indicates which properties should be serialized. The optional `width`
      // argument may be either a string or number that specifies the indentation
      // level of the output.
      if (!has("json-stringify")) {
        // Internal: A map of control characters and their escaped equivalents.
        var Escapes = {
          92: "\\\\",
          34: '\\"',
          8: "\\b",
          12: "\\f",
          10: "\\n",
          13: "\\r",
          9: "\\t"
        };

        // Internal: Converts `value` into a zero-padded string such that its
        // length is at least equal to `width`. The `width` must be <= 6.
        var leadingZeroes = "000000";
        var toPaddedString = function (width, value) {
          // The `|| 0` expression is necessary to work around a bug in
          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== "0"`.
          return (leadingZeroes + (value || 0)).slice(-width);
        };

        // Internal: Double-quotes a string `value`, replacing all ASCII control
        // characters (characters with code unit values between 0 and 31) with
        // their escaped equivalents. This is an implementation of the
        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.
        var unicodePrefix = "\\u00";
        var quote = function (value) {
          var result = '"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;
          var symbols = useCharIndex && (charIndexBuggy ? value.split("") : value);
          for (; index < length; index++) {
            var charCode = value.charCodeAt(index);
            // If the character is a control character, append its Unicode or
            // shorthand escape sequence; otherwise, append the character as-is.
            switch (charCode) {
              case 8: case 9: case 10: case 12: case 13: case 34: case 92:
                result += Escapes[charCode];
                break;
              default:
                if (charCode < 32) {
                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));
                  break;
                }
                result += useCharIndex ? symbols[index] : value.charAt(index);
            }
          }
          return result + '"';
        };

        // Internal: Recursively serializes an object. Implements the
        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.
        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {
          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;
          try {
            // Necessary for host object support.
            value = object[property];
          } catch (exception) {}
          if (typeof value == "object" && value) {
            className = getClass.call(value);
            if (className == dateClass && !isProperty.call(value, "toJSON")) {
              if (value > -1 / 0 && value < 1 / 0) {
                // Dates are serialized according to the `Date#toJSON` method
                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15
                // for the ISO 8601 date time string format.
                if (getDay) {
                  // Manually compute the year, month, date, hours, minutes,
                  // seconds, and milliseconds if the `getUTC*` methods are
                  // buggy. Adapted from @Yaffle's `date-shim` project.
                  date = floor(value / 864e5);
                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);
                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);
                  date = 1 + date - getDay(year, month);
                  // The `time` value specifies the time within the day (see ES
                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used
                  // to compute `A modulo B`, as the `%` operator does not
                  // correspond to the `modulo` operation for negative numbers.
                  time = (value % 864e5 + 864e5) % 864e5;
                  // The hours, minutes, seconds, and milliseconds are obtained by
                  // decomposing the time within the day. See section 15.9.1.10.
                  hours = floor(time / 36e5) % 24;
                  minutes = floor(time / 6e4) % 60;
                  seconds = floor(time / 1e3) % 60;
                  milliseconds = time % 1e3;
                } else {
                  year = value.getUTCFullYear();
                  month = value.getUTCMonth();
                  date = value.getUTCDate();
                  hours = value.getUTCHours();
                  minutes = value.getUTCMinutes();
                  seconds = value.getUTCSeconds();
                  milliseconds = value.getUTCMilliseconds();
                }
                // Serialize extended years correctly.
                value = (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +
                  "-" + toPaddedString(2, month + 1) + "-" + toPaddedString(2, date) +
                  // Months, dates, hours, minutes, and seconds should have two
                  // digits; milliseconds should have three.
                  "T" + toPaddedString(2, hours) + ":" + toPaddedString(2, minutes) + ":" + toPaddedString(2, seconds) +
                  // Milliseconds are optional in ES 5.0, but required in 5.1.
                  "." + toPaddedString(3, milliseconds) + "Z";
              } else {
                value = null;
              }
            } else if (typeof value.toJSON == "function" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, "toJSON"))) {
              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the
              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3
              // ignores all `toJSON` methods on these objects unless they are
              // defined directly on an instance.
              value = value.toJSON(property);
            }
          }
          if (callback) {
            // If a replacement function was provided, call it to obtain the value
            // for serialization.
            value = callback.call(object, property, value);
          }
          if (value === null) {
            return "null";
          }
          className = getClass.call(value);
          if (className == booleanClass) {
            // Booleans are represented literally.
            return "" + value;
          } else if (className == numberClass) {
            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as
            // `"null"`.
            return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";
          } else if (className == stringClass) {
            // Strings are double-quoted and escaped.
            return quote("" + value);
          }
          // Recursively serialize objects and arrays.
          if (typeof value == "object") {
            // Check for cyclic structures. This is a linear search; performance
            // is inversely proportional to the number of unique nested objects.
            for (length = stack.length; length--;) {
              if (stack[length] === value) {
                // Cyclic structures cannot be serialized by `JSON.stringify`.
                throw TypeError();
              }
            }
            // Add the object to the stack of traversed objects.
            stack.push(value);
            results = [];
            // Save the current indentation level and indent one additional level.
            prefix = indentation;
            indentation += whitespace;
            if (className == arrayClass) {
              // Recursively serialize array elements.
              for (index = 0, length = value.length; index < length; index++) {
                element = serialize(index, value, callback, properties, whitespace, indentation, stack);
                results.push(element === undef ? "null" : element);
              }
              result = results.length ? (whitespace ? "[\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "]" : ("[" + results.join(",") + "]")) : "[]";
            } else {
              // Recursively serialize object members. Members are selected from
              // either a user-specified list of property names, or the object
              // itself.
              forEach(properties || value, function (property) {
                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);
                if (element !== undef) {
                  // According to ES 5.1 section 15.12.3: "If `gap` {whitespace}
                  // is not the empty string, let `member` {quote(property) + ":"}
                  // be the concatenation of `member` and the `space` character."
                  // The "`space` character" refers to the literal space
                  // character, not the `space` {width} argument provided to
                  // `JSON.stringify`.
                  results.push(quote(property) + ":" + (whitespace ? " " : "") + element);
                }
              });
              result = results.length ? (whitespace ? "{\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "}" : ("{" + results.join(",") + "}")) : "{}";
            }
            // Remove the object from the traversed object stack.
            stack.pop();
            return result;
          }
        };

        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.
        exports.stringify = function (source, filter, width) {
          var whitespace, callback, properties, className;
          if (objectTypes[typeof filter] && filter) {
            if ((className = getClass.call(filter)) == functionClass) {
              callback = filter;
            } else if (className == arrayClass) {
              // Convert the property names array into a makeshift set.
              properties = {};
              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));
            }
          }
          if (width) {
            if ((className = getClass.call(width)) == numberClass) {
              // Convert the `width` to an integer and create a string containing
              // `width` number of space characters.
              if ((width -= width % 1) > 0) {
                for (whitespace = "", width > 10 && (width = 10); whitespace.length < width; whitespace += " ");
              }
            } else if (className == stringClass) {
              whitespace = width.length <= 10 ? width : width.slice(0, 10);
            }
          }
          // Opera <= 7.54u2 discards the values associated with empty string keys
          // (`""`) only if they are used directly within an object member list
          // (e.g., `!("" in { "": 1})`).
          return serialize("", (value = {}, value[""] = source, value), callback, properties, whitespace, "", []);
        };
      }

      // Public: Parses a JSON source string.
      if (!has("json-parse")) {
        var fromCharCode = String.fromCharCode;

        // Internal: A map of escaped control characters and their unescaped
        // equivalents.
        var Unescapes = {
          92: "\\",
          34: '"',
          47: "/",
          98: "\b",
          116: "\t",
          110: "\n",
          102: "\f",
          114: "\r"
        };

        // Internal: Stores the parser state.
        var Index, Source;

        // Internal: Resets the parser state and throws a `SyntaxError`.
        var abort = function () {
          Index = Source = null;
          throw SyntaxError();
        };

        // Internal: Returns the next token, or `"$"` if the parser has reached
        // the end of the source string. A token may be a string, number, `null`
        // literal, or Boolean literal.
        var lex = function () {
          var source = Source, length = source.length, value, begin, position, isSigned, charCode;
          while (Index < length) {
            charCode = source.charCodeAt(Index);
            switch (charCode) {
              case 9: case 10: case 13: case 32:
                // Skip whitespace tokens, including tabs, carriage returns, line
                // feeds, and space characters.
                Index++;
                break;
              case 123: case 125: case 91: case 93: case 58: case 44:
                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at
                // the current position.
                value = charIndexBuggy ? source.charAt(Index) : source[Index];
                Index++;
                return value;
              case 34:
                // `"` delimits a JSON string; advance to the next character and
                // begin parsing the string. String tokens are prefixed with the
                // sentinel `@` character to distinguish them from punctuators and
                // end-of-string tokens.
                for (value = "@", Index++; Index < length;) {
                  charCode = source.charCodeAt(Index);
                  if (charCode < 32) {
                    // Unescaped ASCII control characters (those with a code unit
                    // less than the space character) are not permitted.
                    abort();
                  } else if (charCode == 92) {
                    // A reverse solidus (`\`) marks the beginning of an escaped
                    // control character (including `"`, `\`, and `/`) or Unicode
                    // escape sequence.
                    charCode = source.charCodeAt(++Index);
                    switch (charCode) {
                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:
                        // Revive escaped control characters.
                        value += Unescapes[charCode];
                        Index++;
                        break;
                      case 117:
                        // `\u` marks the beginning of a Unicode escape sequence.
                        // Advance to the first character and validate the
                        // four-digit code point.
                        begin = ++Index;
                        for (position = Index + 4; Index < position; Index++) {
                          charCode = source.charCodeAt(Index);
                          // A valid sequence comprises four hexdigits (case-
                          // insensitive) that form a single hexadecimal value.
                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {
                            // Invalid Unicode escape sequence.
                            abort();
                          }
                        }
                        // Revive the escaped character.
                        value += fromCharCode("0x" + source.slice(begin, Index));
                        break;
                      default:
                        // Invalid escape sequence.
                        abort();
                    }
                  } else {
                    if (charCode == 34) {
                      // An unescaped double-quote character marks the end of the
                      // string.
                      break;
                    }
                    charCode = source.charCodeAt(Index);
                    begin = Index;
                    // Optimize for the common case where a string is valid.
                    while (charCode >= 32 && charCode != 92 && charCode != 34) {
                      charCode = source.charCodeAt(++Index);
                    }
                    // Append the string as-is.
                    value += source.slice(begin, Index);
                  }
                }
                if (source.charCodeAt(Index) == 34) {
                  // Advance to the next character and return the revived string.
                  Index++;
                  return value;
                }
                // Unterminated string.
                abort();
              default:
                // Parse numbers and literals.
                begin = Index;
                // Advance past the negative sign, if one is specified.
                if (charCode == 45) {
                  isSigned = true;
                  charCode = source.charCodeAt(++Index);
                }
                // Parse an integer or floating-point value.
                if (charCode >= 48 && charCode <= 57) {
                  // Leading zeroes are interpreted as octal literals.
                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {
                    // Illegal octal literal.
                    abort();
                  }
                  isSigned = false;
                  // Parse the integer component.
                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);
                  // Floats cannot contain a leading decimal point; however, this
                  // case is already accounted for by the parser.
                  if (source.charCodeAt(Index) == 46) {
                    position = ++Index;
                    // Parse the decimal component.
                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);
                    if (position == Index) {
                      // Illegal trailing decimal.
                      abort();
                    }
                    Index = position;
                  }
                  // Parse exponents. The `e` denoting the exponent is
                  // case-insensitive.
                  charCode = source.charCodeAt(Index);
                  if (charCode == 101 || charCode == 69) {
                    charCode = source.charCodeAt(++Index);
                    // Skip past the sign following the exponent, if one is
                    // specified.
                    if (charCode == 43 || charCode == 45) {
                      Index++;
                    }
                    // Parse the exponential component.
                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);
                    if (position == Index) {
                      // Illegal empty exponent.
                      abort();
                    }
                    Index = position;
                  }
                  // Coerce the parsed value to a JavaScript number.
                  return +source.slice(begin, Index);
                }
                // A negative sign may only precede numbers.
                if (isSigned) {
                  abort();
                }
                // `true`, `false`, and `null` literals.
                if (source.slice(Index, Index + 4) == "true") {
                  Index += 4;
                  return true;
                } else if (source.slice(Index, Index + 5) == "false") {
                  Index += 5;
                  return false;
                } else if (source.slice(Index, Index + 4) == "null") {
                  Index += 4;
                  return null;
                }
                // Unrecognized token.
                abort();
            }
          }
          // Return the sentinel `$` character if the parser has reached the end
          // of the source string.
          return "$";
        };

        // Internal: Parses a JSON `value` token.
        var get = function (value) {
          var results, hasMembers;
          if (value == "$") {
            // Unexpected end of input.
            abort();
          }
          if (typeof value == "string") {
            if ((charIndexBuggy ? value.charAt(0) : value[0]) == "@") {
              // Remove the sentinel `@` character.
              return value.slice(1);
            }
            // Parse object and array literals.
            if (value == "[") {
              // Parses a JSON array, returning a new JavaScript array.
              results = [];
              for (;; hasMembers || (hasMembers = true)) {
                value = lex();
                // A closing square bracket marks the end of the array literal.
                if (value == "]") {
                  break;
                }
                // If the array literal contains elements, the current token
                // should be a comma separating the previous element from the
                // next.
                if (hasMembers) {
                  if (value == ",") {
                    value = lex();
                    if (value == "]") {
                      // Unexpected trailing `,` in array literal.
                      abort();
                    }
                  } else {
                    // A `,` must separate each array element.
                    abort();
                  }
                }
                // Elisions and leading commas are not permitted.
                if (value == ",") {
                  abort();
                }
                results.push(get(value));
              }
              return results;
            } else if (value == "{") {
              // Parses a JSON object, returning a new JavaScript object.
              results = {};
              for (;; hasMembers || (hasMembers = true)) {
                value = lex();
                // A closing curly brace marks the end of the object literal.
                if (value == "}") {
                  break;
                }
                // If the object literal contains members, the current token
                // should be a comma separator.
                if (hasMembers) {
                  if (value == ",") {
                    value = lex();
                    if (value == "}") {
                      // Unexpected trailing `,` in object literal.
                      abort();
                    }
                  } else {
                    // A `,` must separate each object member.
                    abort();
                  }
                }
                // Leading commas are not permitted, object property names must be
                // double-quoted strings, and a `:` must separate each property
                // name and value.
                if (value == "," || typeof value != "string" || (charIndexBuggy ? value.charAt(0) : value[0]) != "@" || lex() != ":") {
                  abort();
                }
                results[value.slice(1)] = get(lex());
              }
              return results;
            }
            // Unexpected token encountered.
            abort();
          }
          return value;
        };

        // Internal: Updates a traversed object member.
        var update = function (source, property, callback) {
          var element = walk(source, property, callback);
          if (element === undef) {
            delete source[property];
          } else {
            source[property] = element;
          }
        };

        // Internal: Recursively traverses a parsed JSON object, invoking the
        // `callback` function for each value. This is an implementation of the
        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.
        var walk = function (source, property, callback) {
          var value = source[property], length;
          if (typeof value == "object" && value) {
            // `forEach` can't be used to traverse an array in Opera <= 8.54
            // because its `Object#hasOwnProperty` implementation returns `false`
            // for array indices (e.g., `![1, 2, 3].hasOwnProperty("0")`).
            if (getClass.call(value) == arrayClass) {
              for (length = value.length; length--;) {
                update(value, length, callback);
              }
            } else {
              forEach(value, function (property) {
                update(value, property, callback);
              });
            }
          }
          return callback.call(source, property, value);
        };

        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.
        exports.parse = function (source, callback) {
          var result, value;
          Index = 0;
          Source = "" + source;
          result = get(lex());
          // If a JSON string contains multiple tokens, it is invalid.
          if (lex() != "$") {
            abort();
          }
          // Reset the parser state.
          Index = Source = null;
          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[""] = result, value), "", callback) : result;
        };
      }
    }

    exports["runInContext"] = runInContext;
    return exports;
  }

  if (freeExports && !isLoader) {
    // Export for CommonJS environments.
    runInContext(root, freeExports);
  } else {
    // Export for web browsers and JavaScript engines.
    var nativeJSON = root.JSON,
        previousJSON = root["JSON3"],
        isRestored = false;

    var JSON3 = runInContext(root, (root["JSON3"] = {
      // Public: Restores the original value of the global `JSON` object and
      // returns a reference to the `JSON3` object.
      "noConflict": function () {
        if (!isRestored) {
          isRestored = true;
          root.JSON = nativeJSON;
          root["JSON3"] = previousJSON;
          nativeJSON = previousJSON = null;
        }
        return JSON3;
      }
    }));

    root.JSON = {
      "parse": JSON3.parse,
      "stringify": JSON3.stringify
    };
  }

  // Export for asynchronous module loaders.
  if (isLoader) {
    define(function () {
      return JSON3;
    });
  }
}).call(this);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"ng-meta":[function(require,module,exports){
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['angular'], factory);
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require('angular'));
  } else {
    // Browser globals (root is window)
    root.returnExports = factory(root.angular);
  }
}(this, function(angular) {
  /**
   * @ngdoc service
   * @name ngMeta.ngMeta
   * @description
   * # A metatags service for single-page applications
   * that supports setting arbitrary meta tags
   */
  angular.module('ngMeta', [])
    .provider('ngMeta', function() {

      'use strict';

      //Object for storing default tag/values
      var defaults = {};

      //One-time configuration
      var config = {
        useTitleSuffix: false
      };

      function Meta($rootScope) {

        /**
         * @ngdoc method
         * @name ngMeta#setTitle
         * @description
         * Sets the title of the page, optionally
         * appending a title suffix.
         *
         * If suffix usage is enabled and the title suffix
         * parameter is missing, the default title suffix
         * (if available) is used as a fallback.
         *
         * @example
         * //title and titleSuffix
         * ngMeta.setTitle('Page name', ' - Site name | Tagline of the site');
         *
         * //title only (default titleSuffix may be suffixed,
         * //depending on useTitleSuffix configuration)
         * ngMeta.setTitle('Page name');
         *
         * @returns {Object} self
         */
        var setTitle = function(title, titleSuffix) {
          if (!$rootScope.ngMeta) {
            throw new Error('Cannot call setTitle when ngMeta is undefined. Did you forget to call ngMeta.init() in the run block? \nRefer: https://github.com/vinaygopinath/ngMeta#getting-started');
          }

          $rootScope.ngMeta.title = angular.isDefined(title) ? title : (defaults.title || '');
          if (config.useTitleSuffix) {
            $rootScope.ngMeta.title += angular.isDefined(titleSuffix) ? titleSuffix : (defaults.titleSuffix || '');
          }
          return this;
        };

        /**
         * @ngdoc method
         * @name ngMeta#setTag
         * @description
         * Sets the value of a meta tag, using
         * the default value (if available) as
         * a fallback.
         *
         * @example
         * ngMeta.setTag('og:image', 'http://example.com/a.png');
         *
         * @returns {Object} self
         */
        var setTag = function(tag, value) {
          if (!$rootScope.ngMeta) {
            throw new Error('Cannot call setTag when ngMeta is undefined. Did you forget to call ngMeta.init() in the run block? \nRefer: https://github.com/vinaygopinath/ngMeta#getting-started');
          }
          if (tag === 'title' || tag === 'titleSuffix') {
            throw new Error('Attempt to set \'' + tag + '\' through \'setTag\': \'title\' and \'titleSuffix\' are reserved tag names. Please use \'ngMeta.setTitle\' instead');
          }

          $rootScope.ngMeta[tag] = angular.isDefined(value) ? value : defaults[tag];
          return this;
        };

        /**
         * @ngdoc method
         * @name ngMeta#setDefaultTag
         * @description
         * Sets the default tag for all routes that are missing a custom
         * `tag` property in their meta objects.
         *
         * @example
         * ngMeta.setDefaultTag('titleSuffix', ' | Tagline of the site');
         *
         * @returns {Object} self
         */
        var setDefaultTag = function(tag, value) {
          if (!$rootScope.ngMeta) {
            throw new Error('Cannot call setDefaultTag when ngMeta is undefined. Did you forget to call ngMeta.init() in the run block? \nRefer: https://github.com/vinaygopinath/ngMeta#getting-started');
          }

          defaults[tag] = value;

          if (tag === 'title' || tag === 'titleSuffix') {
            this.setTitle($rootScope.ngMeta.title, $rootScope.ngMeta.titleSuffix);
          } else {
            this.setTag(tag, $rootScope.ngMeta[tag]);
          }

          return this;
        };

        /**
         * @ngdoc method
         * @name readRouteMeta
         * @description
         * Helper function to process meta tags on route/state
         * change.
         *
         * It:
         * 1. Sets the title (with titleSuffix, as appropriate)
         * 2. Iterates through all the state/route tags (other than title)
         *    and sets their values
         * 3. Iterates through all default tags and sets the ones
         *    that were not utilized while setting the state/route tags.
         *
         * @returns {Object} self
         */
        var readRouteMeta = function(meta) {
          meta = meta || {};

          if (meta.disableUpdate) {
            return false;
          }

          setTitle(meta.title, meta.titleSuffix);

          var def = angular.copy(defaults);

          delete meta.title;
          delete meta.titleSuffix;
          delete def.title;
          delete def.titleSuffix;

          var metaKeys = Object.keys(meta);
          for (var i = 0; i < metaKeys.length; i++) {
            if (def.hasOwnProperty(metaKeys[i])) {
              delete def[metaKeys[i]];
            }
            setTag(metaKeys[i], meta[metaKeys[i]]);
          }

          var defaultKeys = Object.keys(def);
          for (var j = 0; j < defaultKeys.length; j++) {
            setTag(defaultKeys[j], def[defaultKeys[j]]);
          }
        };

        var update = function(event, current) {
          readRouteMeta(angular.copy(current.meta));
        };

        /**
         * @ngdoc method
         * @name ngMeta#init
         * @description
         * Initializes the ngMeta object and sets up
         * listeners for route/state change broadcasts
         *
         * @example
         * angular.module('yourApp', ['ngRoute', 'ngMeta'])
         * .config(function($routeProvider, ngMetaProvider) {
         *   ....
         * })
         * .run(function(ngMeta) {
         *   ngMeta.init();
         * });
         */
        var init = function() {
          $rootScope.ngMeta = {};
          $rootScope.$on('$routeChangeSuccess', update);
          $rootScope.$on('$stateChangeSuccess', update);
        };

        return {
          'init': init,
          'setTitle': setTitle,
          'setTag': setTag,
          'setDefaultTag': setDefaultTag
        };
      }

      /* Set defaults */

      /**
       * @ngdoc method
       * @name ngMetaProvider#setDefaultTitle
       * @param {string} titleStr The default title of the page. If a
       * route/state does not define a `title` param in its meta object, this
       * value is used instead.
       *
       * @description
       * Sets the default title for all routes that are missing a custom `title`
       * property in their meta objects.
       *
       * @returns {Object} self
       */
      this.setDefaultTitle = function(titleStr) {
        defaults.title = titleStr;
        return this;
      };

      /**
       * @ngdoc method
       * @name ngMetaProvider#setDefaultTitleSuffix
       * @param {string} titleSuffix The default title suffix of the page. If a
       * route/state does not define a `titleSuffix` param in its meta object,
       * this value is used instead.
       *
       * @description
       * Sets the default title suffix for all routes that are missing a custom
       * `titleSuffix` property in their meta objects.
       *
       * @returns {Object} self
       */
      this.setDefaultTitleSuffix = function(titleSuffix) {
        defaults.titleSuffix = titleSuffix;
        return this;
      };

      /**
       * @ngdoc method
       * @name ngMetaProvider#setDefaultTag
       * @param {string} tag The default tag name. The default tag can be
       * overridden by defining a custom property of the same name in the meta
       * object of any route.
       *
       * @param {string} value The value of the tag.
       *
       * @description
       * Sets the default tag for all routes that are missing a custom
       * `tag` property in their meta objects.
       *
       * @returns {Object} self
       */
      this.setDefaultTag = function(tag, value) {
        defaults[tag] = value;
        return this;
      };

      /* One-time config */

      /**
       * @ngdoc method
       * @name ngMetaProvider#useTitleSuffix
       * @param {boolean} bool A boolean indicating the use of title suffix.
       * Defaults to false.
       *
       * @description
       * Toggles the use of the title suffix throughout the site.
       *
       * @returns {Object} self
       */
      this.useTitleSuffix = function(bool) {
        config.useTitleSuffix = !!bool;
        return this;
      };

      this.$get = ["$rootScope", function($rootScope) {
        return new Meta($rootScope);
      }];
    });
}));
},{"angular":"angular"}],"udb3-angular":[function(require,module,exports){
require('./dist/udb3-angular');
module.exports = angular;

},{"./dist/udb3-angular":18}]},{},[]);
